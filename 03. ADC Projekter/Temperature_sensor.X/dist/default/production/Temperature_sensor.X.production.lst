

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb 01 17:05:17 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 2.05
    60                           ; Generated 20/12/2018 GMT
    61                           ; 
    62                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F26K22 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataCOMRAM
    95  00190A                     __pidataCOMRAM:
    96                           	opt callstack 0
    97                           
    98                           ;initializer for _number
    99  00190A  0058               	dw	88
   100                           
   101                           ;initializer for _display_2
   102  00190C  01                 	db	1
   103                           
   104                           ;initializer for _display_1
   105  00190D  02                 	db	2
   106                           
   107                           	psect	idataBANK0
   108  0018F4                     __pidataBANK0:
   109                           	opt callstack 0
   110                           
   111                           ;initializer for stoa@F1131
   112  0018F4  28                 	db	40
   113  0018F5  6E                 	db	110
   114  0018F6  75                 	db	117
   115  0018F7  6C                 	db	108
   116  0018F8  6C                 	db	108
   117  0018F9  29                 	db	41
   118  0018FA  00                 	db	0
   119                           
   120                           ;initializer for _empty
   121  0018FB  000B               	dw	11
   122                           
   123                           	psect	smallconst
   124  001000                     __psmallconst:
   125                           	opt callstack 0
   126  001000  00                 	db	0
   127  001001                     _get7seg:
   128                           	opt callstack 0
   129  001001  C0                 	db	192
   130  001002  F9                 	db	249
   131  001003  A4                 	db	164
   132  001004  B0                 	db	176
   133  001005  99                 	db	153
   134  001006  92                 	db	146
   135  001007  82                 	db	130
   136  001008  F8                 	db	248
   137  001009  80                 	db	128
   138  00100A  90                 	db	144
   139  00100B  7F                 	db	127
   140  00100C  FF                 	db	255
   141  00100D                     __end_of_get7seg:
   142                           	opt callstack 0
   143  0000                     _ANSELA	set	3896
   144  0000                     _ANSELB	set	3897
   145  0000                     _ANSELC	set	3898
   146  0000                     _PORTA	set	3968
   147  0000                     _PORTC	set	3970
   148  0000                     _LATBbits	set	3978
   149  0000                     _T2CONbits	set	4026
   150  0000                     _T2CON	set	4026
   151  0000                     _TMR2	set	4028
   152  0000                     _PR2	set	4027
   153  0000                     _RCONbits	set	4048
   154  0000                     _INTCONbits	set	4082
   155  0000                     _INTCON2bits	set	4081
   156  0000                     _WPUB	set	3937
   157  0000                     _TRISC	set	3988
   158  0000                     _TRISB	set	3987
   159  0000                     _TRISA	set	3986
   160  0000                     _LATC	set	3979
   161  0000                     _LATB	set	3978
   162  0000                     _LATA	set	3977
   163  0000                     _OSCTUNE	set	3995
   164  0000                     _OSCCON2	set	4050
   165  0000                     _OSCCON	set	4051
   166  0000                     _RCREG1	set	4014
   167  0000                     _RCSTA1bits	set	4011
   168  0000                     _TXREG1	set	4013
   169  0000                     _TXSTA1bits	set	4012
   170  0000                     _SPBRGH1	set	4016
   171  0000                     _SPBRG1	set	4015
   172  0000                     _TXSTA1	set	4012
   173  0000                     _RCSTA1	set	4011
   174  0000                     _BAUDCON1	set	4024
   175  0000                     _PIR1bits	set	3998
   176  0000                     _ADCON0bits	set	4034
   177  0000                     _PIE1bits	set	3997
   178  0000                     _ADRESH	set	4036
   179  0000                     _ADRESL	set	4035
   180  0000                     _ADCON2	set	4032
   181  0000                     _ADCON1	set	4033
   182  0000                     _ADCON0	set	4034
   183  0000                     _PLLRDY	set	32407
   184  00100D                     STR_1:
   185  00100D  54                 	db	84	;'T'
   186  00100E  65                 	db	101	;'e'
   187  00100F  6D                 	db	109	;'m'
   188  001010  70                 	db	112	;'p'
   189  001011  65                 	db	101	;'e'
   190  001012  72                 	db	114	;'r'
   191  001013  61                 	db	97	;'a'
   192  001014  74                 	db	116	;'t'
   193  001015  75                 	db	117	;'u'
   194  001016  72                 	db	114	;'r'
   195  001017  65                 	db	101	;'e'
   196  001018  6E                 	db	110	;'n'
   197  001019  20                 	db	32
   198  00101A  65                 	db	101	;'e'
   199  00101B  72                 	db	114	;'r'
   200  00101C  3A                 	db	58	;':'
   201  00101D  20                 	db	32
   202  00101E  25                 	db	37
   203  00101F  73                 	db	115	;'s'
   204  001020  0A                 	db	10
   205  001021  00                 	db	0
   206                           
   207                           ; #config settings
   208  001022  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           	psect	cinit
   211  0014C2                     __pcinit:
   212                           	opt callstack 0
   213  0014C2                     start_initialization:
   214                           	opt callstack 0
   215  0014C2                     __initialization:
   216                           	opt callstack 0
   217                           
   218                           ; Initialize objects allocated to BANK0 (9 bytes)
   219                           ; load TBLPTR registers with __pidataBANK0
   220  0014C2  0EF4               	movlw	low __pidataBANK0
   221  0014C4  6EF6               	movwf	tblptrl,c
   222  0014C6  0E18               	movlw	high __pidataBANK0
   223  0014C8  6EF7               	movwf	tblptrh,c
   224  0014CA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   225  0014CC  6EF8               	movwf	tblptru,c
   226  0014CE  EE00  F0F3         	lfsr	0,__pdataBANK0
   227  0014D2  EE10 F009          	lfsr	1,9
   228  0014D6                     copy_data0:
   229  0014D6  0009               	tblrd		*+
   230  0014D8  CFF5 FFEE          	movff	tablat,postinc0
   231  0014DC  50E5               	movf	postdec1,w,c
   232  0014DE  50E1               	movf	fsr1l,w,c
   233  0014E0  E1FA               	bnz	copy_data0
   234                           
   235                           ; Initialize objects allocated to COMRAM (4 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237  0014E2  0E0A               	movlw	low __pidataCOMRAM
   238  0014E4  6EF6               	movwf	tblptrl,c
   239  0014E6  0E19               	movlw	high __pidataCOMRAM
   240  0014E8  6EF7               	movwf	tblptrh,c
   241  0014EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242  0014EC  6EF8               	movwf	tblptru,c
   243  0014EE  EE00  F04C         	lfsr	0,__pdataCOMRAM
   244  0014F2  EE10 F004          	lfsr	1,4
   245  0014F6                     copy_data1:
   246  0014F6  0009               	tblrd		*+
   247  0014F8  CFF5 FFEE          	movff	tablat,postinc0
   248  0014FC  50E5               	movf	postdec1,w,c
   249  0014FE  50E1               	movf	fsr1l,w,c
   250  001500  E1FA               	bnz	copy_data1
   251                           
   252                           ; Clear objects allocated to BANK1 (128 bytes)
   253  001502  EE01  F000         	lfsr	0,__pbssBANK1
   254  001506  0E80               	movlw	128
   255  001508                     clear_0:
   256  001508  6AEE               	clrf	postinc0,c
   257  00150A  06E8               	decf	wreg,f,c
   258  00150C  E1FD               	bnz	clear_0
   259                           
   260                           ; Clear objects allocated to BANK0 (132 bytes)
   261  00150E  EE00  F060         	lfsr	0,__pbssBANK0
   262  001512  0E84               	movlw	132
   263  001514                     clear_1:
   264  001514  6AEE               	clrf	postinc0,c
   265  001516  06E8               	decf	wreg,f,c
   266  001518  E1FD               	bnz	clear_1
   267                           
   268                           ; Clear objects allocated to COMRAM (11 bytes)
   269  00151A  EE00  F041         	lfsr	0,__pbssCOMRAM
   270  00151E  0E0B               	movlw	11
   271  001520                     clear_2:
   272  001520  6AEE               	clrf	postinc0,c
   273  001522  06E8               	decf	wreg,f,c
   274  001524  E1FD               	bnz	clear_2
   275  001526                     end_of_initialization:
   276                           	opt callstack 0
   277  001526                     __end_of__initialization:
   278                           	opt callstack 0
   279  001526  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   280  001528  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   281  00152A  0100               	movlb	0
   282  00152C  EFEB  F009         	goto	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMRAM
   285  000041                     __pbssCOMRAM:
   286                           	opt callstack 0
   287  000041                     _TMR2_InterruptHandler:
   288                           	opt callstack 0
   289  000041                     	ds	2
   290  000043                     _index:
   291                           	opt callstack 0
   292  000043                     	ds	1
   293  000044                     _tmp:
   294                           	opt callstack 0
   295  000044                     	ds	1
   296  000045                     _eusart1RxLastError:
   297                           	opt callstack 0
   298  000045                     	ds	1
   299  000046                     _eusart1RxCount:
   300                           	opt callstack 0
   301  000046                     	ds	1
   302  000047                     _eusart1RxTail:
   303                           	opt callstack 0
   304  000047                     	ds	1
   305  000048                     _eusart1RxHead:
   306                           	opt callstack 0
   307  000048                     	ds	1
   308  000049                     _eusart1TxBufferRemaining:
   309                           	opt callstack 0
   310  000049                     	ds	1
   311  00004A                     _eusart1TxTail:
   312                           	opt callstack 0
   313  00004A                     	ds	1
   314  00004B                     _eusart1TxHead:
   315                           	opt callstack 0
   316  00004B                     	ds	1
   317                           
   318                           	psect	dataCOMRAM
   319  00004C                     __pdataCOMRAM:
   320                           	opt callstack 0
   321  00004C                     _number:
   322                           	opt callstack 0
   323  00004C                     	ds	2
   324  00004E                     _display_2:
   325                           	opt callstack 0
   326  00004E                     	ds	1
   327  00004F                     _display_1:
   328                           	opt callstack 0
   329  00004F                     	ds	1
   330                           
   331                           	psect	bssBANK0
   332  000060                     __pbssBANK0:
   333                           	opt callstack 0
   334  000060                     _eusart1RxStatusBuffer:
   335                           	opt callstack 0
   336  000060                     	ds	64
   337  0000A0                     	ds	32
   338  0000C0                     _string:
   339                           	opt callstack 0
   340  0000C0                     	ds	10
   341  0000CA                     _nout:
   342                           	opt callstack 0
   343  0000CA                     	ds	2
   344  0000CC                     _width:
   345                           	opt callstack 0
   346  0000CC                     	ds	2
   347  0000CE                     _prec:
   348                           	opt callstack 0
   349  0000CE                     	ds	2
   350  0000D0                     _flags:
   351                           	opt callstack 0
   352  0000D0                     	ds	2
   353  0000D2                     _decimal_2:
   354                           	opt callstack 0
   355  0000D2                     	ds	2
   356  0000D4                     _decimal_1:
   357                           	opt callstack 0
   358  0000D4                     	ds	2
   359  0000D6                     _flipflop:
   360                           	opt callstack 0
   361  0000D6                     	ds	2
   362  0000D8                     TMR2_ISR@CountCallBack:
   363                           	opt callstack 0
   364  0000D8                     	ds	2
   365  0000DA                     _EUSART1_ErrorHandler:
   366                           	opt callstack 0
   367  0000DA                     	ds	2
   368  0000DC                     _EUSART1_OverrunErrorHandler:
   369                           	opt callstack 0
   370  0000DC                     	ds	2
   371  0000DE                     _EUSART1_FramingErrorHandler:
   372                           	opt callstack 0
   373  0000DE                     	ds	2
   374  0000E0                     _EUSART1_RxDefaultInterruptHandler:
   375                           	opt callstack 0
   376  0000E0                     	ds	2
   377  0000E2                     _EUSART1_TxDefaultInterruptHandler:
   378                           	opt callstack 0
   379  0000E2                     	ds	2
   380                           
   381                           	psect	dataBANK0
   382  0000F3                     __pdataBANK0:
   383                           	opt callstack 0
   384  0000F3                     stoa@F1131:
   385                           	opt callstack 0
   386  0000F3                     	ds	7
   387  0000FA                     _empty:
   388                           	opt callstack 0
   389  0000FA                     	ds	2
   390                           
   391                           	psect	bssBANK1
   392  000100                     __pbssBANK1:
   393                           	opt callstack 0
   394  000100                     _eusart1RxBuffer:
   395                           	opt callstack 0
   396  000100                     	ds	64
   397  000140                     _eusart1TxBuffer:
   398                           	opt callstack 0
   399  000140                     	ds	64
   400                           
   401                           	psect	cstackBANK0
   402  0000E4                     __pcstackBANK0:
   403                           	opt callstack 0
   404  0000E4                     vfprintf@cfmt:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x0
   408  0000E4                     	ds	2
   409  0000E6                     ?_printf:
   410                           	opt callstack 0
   411  0000E6                     printf@fmt:
   412                           	opt callstack 0
   413                           
   414                           ; 2 bytes @ 0x2
   415  0000E6                     	ds	6
   416  0000EC                     printf@ap:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x8
   420  0000EC                     	ds	3
   421  0000EF                     main@temperature:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0xB
   425  0000EF                     	ds	2
   426  0000F1                     main@temp_offset:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0xD
   430  0000F1                     	ds	2
   431                           
   432                           	psect	cstackCOMRAM
   433  000001                     __pcstackCOMRAM:
   434                           	opt callstack 0
   435  000001                     ?___lwmod:
   436                           	opt callstack 0
   437  000001                     ?i2___lwdiv:
   438                           	opt callstack 0
   439  000001                     ___lwmod@dividend:
   440                           	opt callstack 0
   441  000001                     i2___lwdiv@dividend:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x0
   445  000001                     	ds	2
   446  000003                     ___lwmod@divisor:
   447                           	opt callstack 0
   448  000003                     i2___lwdiv@divisor:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x2
   452  000003                     	ds	2
   453  000005                     ___lwmod@counter:
   454                           	opt callstack 0
   455  000005                     i2___lwdiv@quotient:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x4
   459  000005                     	ds	2
   460  000007                     i2___lwdiv@counter:
   461                           	opt callstack 0
   462                           
   463                           ; 1 bytes @ 0x6
   464  000007                     	ds	1
   465  000008                     ??_INTERRUPT_InterruptManager:
   466                           
   467                           ; 1 bytes @ 0x7
   468  000008                     	ds	8
   469  000010                     ?_strlen:
   470                           	opt callstack 0
   471  000010                     ?_ADC_GetConversion:
   472                           	opt callstack 0
   473  000010                     ?___lwdiv:
   474                           	opt callstack 0
   475  000010                     EUSART1_Write@txData:
   476                           	opt callstack 0
   477  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
   478                           	opt callstack 0
   479  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   480                           	opt callstack 0
   481  000010                     EUSART1_SetErrorHandler@interruptHandler:
   482                           	opt callstack 0
   483  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
   484                           	opt callstack 0
   485  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
   486                           	opt callstack 0
   487  000010                     TMR2_SetInterruptHandler@InterruptHandler:
   488                           	opt callstack 0
   489  000010                     ___lwdiv@dividend:
   490                           	opt callstack 0
   491  000010                     strlen@s:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0xF
   495  000010                     	ds	1
   496  000011                     putch@txData:
   497                           	opt callstack 0
   498                           
   499                           ; 1 bytes @ 0x10
   500  000011                     	ds	1
   501  000012                     ??_ADC_GetConversion:
   502  000012                     ___lwdiv@divisor:
   503                           	opt callstack 0
   504  000012                     fputc@c:
   505                           	opt callstack 0
   506  000012                     strlen@a:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x11
   510  000012                     	ds	2
   511  000014                     ADC_GetConversion@channel:
   512                           	opt callstack 0
   513  000014                     ___lwdiv@counter:
   514                           	opt callstack 0
   515  000014                     fputc@fp:
   516                           	opt callstack 0
   517                           
   518                           ; 2 bytes @ 0x13
   519  000014                     	ds	1
   520  000015                     ___lwdiv@quotient:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x14
   524  000015                     	ds	1
   525  000016                     ??_fputc:
   526                           
   527                           ; 1 bytes @ 0x15
   528  000016                     	ds	5
   529  00001B                     ?_stoa:
   530                           	opt callstack 0
   531  00001B                     stoa@fp:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x1A
   535  00001B                     	ds	2
   536  00001D                     stoa@s:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x1C
   540  00001D                     	ds	2
   541  00001F                     ??_stoa:
   542                           
   543                           ; 1 bytes @ 0x1E
   544  00001F                     	ds	1
   545  000020                     stoa@nuls:
   546                           	opt callstack 0
   547                           
   548                           ; 7 bytes @ 0x1F
   549  000020                     	ds	7
   550  000027                     stoa@i:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x26
   554  000027                     	ds	2
   555  000029                     stoa@w:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x28
   559  000029                     	ds	2
   560  00002B                     stoa@cp:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0x2A
   564  00002B                     	ds	2
   565  00002D                     stoa@p:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x2C
   569  00002D                     	ds	2
   570  00002F                     stoa@l:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x2E
   574  00002F                     	ds	2
   575  000031                     ?_vfpfcnvrt:
   576                           	opt callstack 0
   577  000031                     vfpfcnvrt@fp:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x30
   581  000031                     	ds	2
   582  000033                     vfpfcnvrt@fmt:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0x32
   586  000033                     	ds	2
   587  000035                     vfpfcnvrt@ap:
   588                           	opt callstack 0
   589                           
   590                           ; 2 bytes @ 0x34
   591  000035                     	ds	2
   592  000037                     ??_vfpfcnvrt:
   593                           
   594                           ; 1 bytes @ 0x36
   595  000037                     	ds	2
   596  000039                     vfpfcnvrt@cp:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x38
   600  000039                     	ds	2
   601  00003B                     ?_vfprintf:
   602                           	opt callstack 0
   603  00003B                     vfprintf@fp:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x3A
   607  00003B                     	ds	2
   608  00003D                     vfprintf@fmt:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x3C
   612  00003D                     	ds	2
   613  00003F                     vfprintf@ap:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0x3E
   617  00003F                     	ds	2
   618  000041                     
   619                           ; 1 bytes @ 0x40
   620 ;;
   621 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   622 ;;
   623 ;; *************** function _main *****************
   624 ;; Defined at:
   625 ;;		line 52 in file "main.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  temp_offset     2   13[BANK0 ] unsigned short 
   630 ;;  temperature     2   11[BANK0 ] unsigned short 
   631 ;;  t               1    0        unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;Total ram usage:        5 bytes
   646 ;; Hardware stack levels required when called:   12
   647 ;; This function calls:
   648 ;;		_ADC_GetConversion
   649 ;;		_ADC_Initialize
   650 ;;		_EUSART1_Initialize
   651 ;;		_SYSTEM_Initialize
   652 ;;		_TMR2_Initialize
   653 ;;		_TMR2_SetInterruptHandler
   654 ;;		___lwdiv
   655 ;;		_printf
   656 ;; This function is called by:
   657 ;;		Startup code after reset
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text0
   662  0013D6                     __ptext0:
   663                           	opt callstack 0
   664  0013D6                     _main:
   665                           	opt callstack 19
   666                           
   667                           ;main.c: 55:     SYSTEM_Initialize();
   668                           
   669                           ;incstack = 0
   670  0013D6  EC35  F00C         	call	_SYSTEM_Initialize	;wreg free
   671                           
   672                           ;main.c: 56:     (INTCONbits.GIE = 1);
   673  0013DA  8EF2               	bsf	4082,7,c	;volatile
   674                           
   675                           ;main.c: 57:     (INTCONbits.PEIE = 1);
   676  0013DC  8CF2               	bsf	4082,6,c	;volatile
   677                           
   678                           ;main.c: 58:     TMR2_Initialize();
   679  0013DE  EC17  F00C         	call	_TMR2_Initialize	;wreg free
   680                           
   681                           ;main.c: 59:     TMR2_SetInterruptHandler(displayController);
   682  0013E2  0E96               	movlw	low _displayController
   683  0013E4  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   684  0013E6  0E12               	movlw	high _displayController
   685  0013E8  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   686  0013EA  EC5C  F00C         	call	_TMR2_SetInterruptHandler	;wreg free
   687                           
   688                           ;main.c: 60:     EUSART1_Initialize();
   689  0013EE  EC27  F00A         	call	_EUSART1_Initialize	;wreg free
   690                           
   691                           ;main.c: 61:     ADC_Initialize();
   692  0013F2  EC42  F00C         	call	_ADC_Initialize	;wreg free
   693                           
   694                           ;main.c: 62:     ADC_GetConversion(sensor);
   695  0013F6  0E11               	movlw	17
   696  0013F8  EC88  F00B         	call	_ADC_GetConversion
   697  0013FC  8A8A               	bsf	3978,5,c	;volatile
   698  0013FE                     l2327:
   699                           
   700                           ;main.c: 67:         uint16_t temperature;;main.c: 68:         uint16_t temp_offset;;mai
      +                          n.c: 71:         temperature = ADC_GetConversion(sensor);
   701  0013FE  0E11               	movlw	17
   702  001400  EC88  F00B         	call	_ADC_GetConversion
   703  001404  C010  F0EF         	movff	?_ADC_GetConversion,main@temperature
   704  001408  C011  F0F0         	movff	?_ADC_GetConversion+1,main@temperature+1
   705                           
   706                           ;main.c: 73:         temp_offset = temperature - 500;
   707  00140C  0E0C               	movlw	12
   708  00140E  0100               	movlb	0	; () banked
   709  001410  25EF               	addwf	main@temperature& (0+255),w,b
   710  001412  6FF1               	movwf	main@temp_offset& (0+255),b
   711  001414  0EFE               	movlw	254
   712  001416  21F0               	addwfc	(main@temperature+1)& (0+255),w,b
   713  001418  6FF2               	movwf	(main@temp_offset+1)& (0+255),b
   714                           
   715                           ;main.c: 75:         number = temp_offset / 10;
   716  00141A  C0F1  F010         	movff	main@temp_offset,___lwdiv@dividend
   717  00141E  C0F2  F011         	movff	main@temp_offset+1,___lwdiv@dividend+1
   718  001422  0E00               	movlw	0
   719  001424  6E13               	movwf	___lwdiv@divisor+1,c
   720  001426  0E0A               	movlw	10
   721  001428  6E12               	movwf	___lwdiv@divisor,c
   722  00142A  ECFA  F00A         	call	___lwdiv	;wreg free
   723  00142E  C010  F04C         	movff	?___lwdiv,_number
   724  001432  C011  F04D         	movff	?___lwdiv+1,_number+1
   725                           
   726                           ;main.c: 77:         printf("Temperaturen er: %s\n", number);
   727  001436  0E0D               	movlw	low STR_1
   728  001438  0100               	movlb	0	; () banked
   729  00143A  6FE6               	movwf	printf@fmt& (0+255),b
   730  00143C  0E10               	movlw	high STR_1
   731  00143E  6FE7               	movwf	(printf@fmt+1)& (0+255),b
   732  001440  C04C  F0E8         	movff	_number,?_printf+2
   733  001444  C04D  F0E9         	movff	_number+1,?_printf+3
   734  001448  ECE1  F00B         	call	_printf	;wreg free
   735  00144C  D7D8               	goto	l2327
   736  00144E                     __end_of_main:
   737                           	opt callstack 0
   738                           
   739 ;; *************** function _printf *****************
   740 ;; Defined at:
   741 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   744 ;;		 -> STR_1(21), 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  ap              2    8[BANK0 ] PTR void [1]
   747 ;;		 -> ?_printf(2), 
   748 ;;  ret             2    0        int 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  2    2[BANK0 ] int 
   751 ;; Registers used:
   752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   758 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;Total ram usage:        8 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:   11
   765 ;; This function calls:
   766 ;;		_vfprintf
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text1
   773  0017C2                     __ptext1:
   774                           	opt callstack 0
   775  0017C2                     _printf:
   776                           	opt callstack 19
   777                           
   778                           ;incstack = 0
   779  0017C2  0EE8               	movlw	low (?_printf+2)
   780  0017C4  0100               	movlb	0	; () banked
   781  0017C6  6FEC               	movwf	printf@ap& (0+255),b
   782  0017C8  0E00               	movlw	high (?_printf+2)
   783  0017CA  6FED               	movwf	(printf@ap+1)& (0+255),b
   784                           
   785                           ; BSR set to: 0
   786  0017CC  0E00               	movlw	0
   787  0017CE  6E3B               	movwf	vfprintf@fp,c
   788  0017D0  0E00               	movlw	0
   789  0017D2  6E3C               	movwf	vfprintf@fp+1,c
   790  0017D4  C0E6  F03D         	movff	printf@fmt,vfprintf@fmt
   791  0017D8  C0E7  F03E         	movff	printf@fmt+1,vfprintf@fmt+1
   792  0017DC  0EEC               	movlw	low printf@ap
   793  0017DE  6E3F               	movwf	vfprintf@ap,c
   794  0017E0  0E00               	movlw	high printf@ap
   795  0017E2  6E40               	movwf	vfprintf@ap+1,c
   796  0017E4  ECCE  F00A         	call	_vfprintf	;wreg free
   797  0017E8  0012               	return		;funcret
   798  0017EA                     __end_of_printf:
   799                           	opt callstack 0
   800                           
   801 ;; *************** function _vfprintf *****************
   802 ;; Defined at:
   803 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  fp              2   58[COMRAM] PTR struct _IO_FILE
   806 ;;		 -> NULL(0), 
   807 ;;  fmt             2   60[COMRAM] PTR const unsigned char 
   808 ;;		 -> STR_1(21), 
   809 ;;  ap              2   62[COMRAM] PTR PTR void 
   810 ;;		 -> printf@ap(2), 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
   813 ;;		 -> STR_1(21), 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  2   58[COMRAM] int 
   816 ;; Registers used:
   817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   823 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;Total ram usage:        8 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:   10
   830 ;; This function calls:
   831 ;;		_vfpfcnvrt
   832 ;; This function is called by:
   833 ;;		_printf
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text2
   838  00159C                     __ptext2:
   839                           	opt callstack 0
   840  00159C                     _vfprintf:
   841                           	opt callstack 19
   842                           
   843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   844                           
   845                           ;incstack = 0
   846  00159C  C03D  F0E4         	movff	vfprintf@fmt,vfprintf@cfmt
   847  0015A0  C03E  F0E5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   848                           
   849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   850  0015A4  0E00               	movlw	0
   851  0015A6  0100               	movlb	0	; () banked
   852  0015A8  6FCB               	movwf	(_nout+1)& (0+255),b
   853  0015AA  0E00               	movlw	0
   854  0015AC  6FCA               	movwf	_nout& (0+255),b
   855                           
   856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   857  0015AE  D013               	goto	l2255
   858  0015B0                     l2253:
   859                           
   860                           ; BSR set to: 0
   861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   862  0015B0  C03B  F031         	movff	vfprintf@fp,vfpfcnvrt@fp
   863  0015B4  C03C  F032         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   864  0015B8  0EE4               	movlw	low vfprintf@cfmt
   865  0015BA  6E33               	movwf	vfpfcnvrt@fmt,c
   866  0015BC  0E00               	movlw	high vfprintf@cfmt
   867  0015BE  6E34               	movwf	vfpfcnvrt@fmt+1,c
   868  0015C0  C03F  F035         	movff	vfprintf@ap,vfpfcnvrt@ap
   869  0015C4  C040  F036         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   870  0015C8  EC12  F008         	call	_vfpfcnvrt	;wreg free
   871  0015CC  5031               	movf	?_vfpfcnvrt,w,c
   872  0015CE  0100               	movlb	0	; () banked
   873  0015D0  27CA               	addwf	_nout& (0+255),f,b
   874  0015D2  5032               	movf	?_vfpfcnvrt+1,w,c
   875  0015D4  23CB               	addwfc	(_nout+1)& (0+255),f,b
   876  0015D6                     l2255:
   877                           
   878                           ; BSR set to: 0
   879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   880  0015D6  C0E4  FFF6         	movff	vfprintf@cfmt,tblptrl
   881  0015DA  C0E5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   882  0015DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   883  0015DE  6AF8               	clrf	tblptru,c
   884  0015E0                     	endif
   885  0015E0                     	if	0	;tblptru may be non-zero
   886  0015E0                     	endif
   887  0015E0  0008               	tblrd		*
   888  0015E2  50F5               	movf	tablat,w,c
   889  0015E4  0900               	iorlw	0
   890  0015E6  A4D8               	btfss	status,2,c
   891  0015E8  D7E3               	goto	l2253
   892                           
   893                           ; BSR set to: 0
   894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   895  0015EA  C0CA  F03B         	movff	_nout,?_vfprintf
   896  0015EE  C0CB  F03C         	movff	_nout+1,?_vfprintf+1
   897                           
   898                           ; BSR set to: 0
   899  0015F2  0012               	return		;funcret
   900  0015F4                     __end_of_vfprintf:
   901                           	opt callstack 0
   902                           
   903 ;; *************** function _vfpfcnvrt *****************
   904 ;; Defined at:
   905 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  fp              2   48[COMRAM] PTR struct _IO_FILE
   908 ;;		 -> NULL(0), 
   909 ;;  fmt             2   50[COMRAM] PTR PTR unsigned char 
   910 ;;		 -> vfprintf@cfmt(2), 
   911 ;;  ap              2   52[COMRAM] PTR PTR void 
   912 ;;		 -> printf@ap(2), 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  llu             8    0        unsigned long long 
   915 ;;  ll              8    0        long long 
   916 ;;  f               4    0        long long 
   917 ;;  vp              3    0        PTR void 
   918 ;;  ct              3    0        unsigned char [3]
   919 ;;  cp              2   56[COMRAM] PTR unsigned char 
   920 ;;		 -> ?_printf(2), 
   921 ;;  i               2    0        int 
   922 ;;  done            2    0        int 
   923 ;;  c               1    0        unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2   48[COMRAM] int 
   926 ;; Registers used:
   927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   933 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;Total ram usage:       10 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    9
   940 ;; This function calls:
   941 ;;		_fputc
   942 ;;		_stoa
   943 ;; This function is called by:
   944 ;;		_vfprintf
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text3
   949  001024                     __ptext3:
   950                           	opt callstack 0
   951  001024                     _vfpfcnvrt:
   952                           	opt callstack 19
   953                           
   954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   955                           
   956                           ; BSR set to: 0
   957                           ;incstack = 0
   958  001024  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   959  001028  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   960  00102C  CFDE FFF6          	movff	postinc2,tblptrl
   961  001030  CFDD FFF7          	movff	postdec2,tblptrh
   962  001034                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   963  001034  6AF8               	clrf	tblptru,c
   964  001036                     	endif
   965  001036                     	if	0	;tblptru may be non-zero
   966  001036                     	endif
   967  001036  0008               	tblrd		*
   968  001038  50F5               	movf	tablat,w,c
   969  00103A  0A25               	xorlw	37
   970  00103C  A4D8               	btfss	status,2,c
   971  00103E  D07A               	goto	l2195
   972                           
   973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   974  001040  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   975  001044  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   976  001048  2ADE               	incf	postinc2,f,c
   977  00104A  0E00               	movlw	0
   978  00104C  22DD               	addwfc	postdec2,f,c
   979                           
   980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   981  00104E  0E00               	movlw	0
   982  001050  0100               	movlb	0	; () banked
   983  001052  6FCD               	movwf	(_width+1)& (0+255),b
   984  001054  0E00               	movlw	0
   985  001056  6FCC               	movwf	_width& (0+255),b
   986  001058  C0CC  F0D0         	movff	_width,_flags
   987  00105C  C0CD  F0D1         	movff	_width+1,_flags+1
   988                           
   989                           ; BSR set to: 0
   990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   991  001060  69CE               	setf	_prec& (0+255),b
   992  001062  69CF               	setf	(_prec+1)& (0+255),b
   993                           
   994                           ; BSR set to: 0
   995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
   996  001064  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   997  001068  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   998  00106C  CFDE FFF6          	movff	postinc2,tblptrl
   999  001070  CFDD FFF7          	movff	postdec2,tblptrh
  1000  001074                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1001  001074  6AF8               	clrf	tblptru,c
  1002  001076                     	endif
  1003  001076                     	if	0	;tblptru may be non-zero
  1004  001076                     	endif
  1005  001076  0008               	tblrd		*
  1006  001078  50F5               	movf	tablat,w,c
  1007  00107A  0A73               	xorlw	115
  1008  00107C  A4D8               	btfss	status,2,c
  1009  00107E  D02A               	goto	l2179
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  1013  001080  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1014  001084  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1015  001088  2ADE               	incf	postinc2,f,c
  1016  00108A  0E00               	movlw	0
  1017  00108C  22DD               	addwfc	postdec2,f,c
  1018                           
  1019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  1020  00108E  C035  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1021  001092  C036  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1022  001096  CFDF F037          	movff	indf2,??_vfpfcnvrt
  1023  00109A  0E02               	movlw	2
  1024  00109C  26DE               	addwf	postinc2,f,c
  1025  00109E  CFDF F038          	movff	indf2,??_vfpfcnvrt+1
  1026  0010A2  0E00               	movlw	0
  1027  0010A4  22DD               	addwfc	postdec2,f,c
  1028  0010A6  C037  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1029  0010AA  C038  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1030  0010AE  CFDE F039          	movff	postinc2,vfpfcnvrt@cp
  1031  0010B2  CFDD F03A          	movff	postdec2,vfpfcnvrt@cp+1
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  1035  0010B6  C031  F01B         	movff	vfpfcnvrt@fp,stoa@fp
  1036  0010BA  C032  F01C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  1037  0010BE  C039  F01D         	movff	vfpfcnvrt@cp,stoa@s
  1038  0010C2  C03A  F01E         	movff	vfpfcnvrt@cp+1,stoa@s+1
  1039  0010C6  ECB5  F008         	call	_stoa	;wreg free
  1040  0010CA  C01B  F031         	movff	?_stoa,?_vfpfcnvrt
  1041  0010CE  C01C  F032         	movff	?_stoa+1,?_vfpfcnvrt+1
  1042  0010D2  0012               	return	
  1043  0010D4                     l2179:
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1047  0010D4  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1048  0010D8  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1049  0010DC  CFDE FFF6          	movff	postinc2,tblptrl
  1050  0010E0  CFDD FFF7          	movff	postdec2,tblptrh
  1051  0010E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1052  0010E4  6AF8               	clrf	tblptru,c
  1053  0010E6                     	endif
  1054  0010E6                     	if	0	;tblptru may be non-zero
  1055  0010E6                     	endif
  1056  0010E6  0008               	tblrd		*
  1057  0010E8  50F5               	movf	tablat,w,c
  1058  0010EA  0A25               	xorlw	37
  1059  0010EC  A4D8               	btfss	status,2,c
  1060  0010EE  D016               	goto	l2189
  1061                           
  1062                           ; BSR set to: 0
  1063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1064  0010F0  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1065  0010F4  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1066  0010F8  2ADE               	incf	postinc2,f,c
  1067  0010FA  0E00               	movlw	0
  1068  0010FC  22DD               	addwfc	postdec2,f,c
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1072  0010FE  0E00               	movlw	0
  1073  001100  6E13               	movwf	fputc@c+1,c
  1074  001102  0E25               	movlw	37
  1075  001104  6E12               	movwf	fputc@c,c
  1076  001106  C031  F014         	movff	vfpfcnvrt@fp,fputc@fp
  1077  00110A  C032  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1078  00110E  EC98  F00A         	call	_fputc	;wreg free
  1079  001112                     l2185:
  1080                           
  1081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1082  001112  0E00               	movlw	0
  1083  001114  6E32               	movwf	?_vfpfcnvrt+1,c
  1084  001116  0E01               	movlw	1
  1085  001118  6E31               	movwf	?_vfpfcnvrt,c
  1086  00111A  0012               	return	
  1087  00111C                     l2189:
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1091  00111C  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1092  001120  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1093  001124  2ADE               	incf	postinc2,f,c
  1094  001126  0E00               	movlw	0
  1095  001128  22DD               	addwfc	postdec2,f,c
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1099  00112A  0E00               	movlw	0
  1100  00112C  6E32               	movwf	?_vfpfcnvrt+1,c
  1101  00112E  0E00               	movlw	0
  1102  001130  6E31               	movwf	?_vfpfcnvrt,c
  1103  001132  0012               	return	
  1104  001134                     l2195:
  1105                           
  1106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1107  001134  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1108  001138  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1109  00113C  CFDE FFF6          	movff	postinc2,tblptrl
  1110  001140  CFDD FFF7          	movff	postdec2,tblptrh
  1111  001144                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1112  001144  6AF8               	clrf	tblptru,c
  1113  001146                     	endif
  1114  001146                     	if	0	;tblptru may be non-zero
  1115  001146                     	endif
  1116  001146  0008               	tblrd		*
  1117  001148  50F5               	movf	tablat,w,c
  1118  00114A  6E12               	movwf	fputc@c,c
  1119  00114C  6A13               	clrf	fputc@c+1,c
  1120  00114E  C031  F014         	movff	vfpfcnvrt@fp,fputc@fp
  1121  001152  C032  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1122  001156  EC98  F00A         	call	_fputc	;wreg free
  1123                           
  1124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1125  00115A  C033  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1126  00115E  C034  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1127  001162  2ADE               	incf	postinc2,f,c
  1128  001164  0E00               	movlw	0
  1129  001166  22DD               	addwfc	postdec2,f,c
  1130  001168  D7D4               	goto	l2185
  1131  00116A                     __end_of_vfpfcnvrt:
  1132                           	opt callstack 0
  1133                           
  1134 ;; *************** function _stoa *****************
  1135 ;; Defined at:
  1136 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  1139 ;;		 -> NULL(0), 
  1140 ;;  s               2   28[COMRAM] PTR unsigned char 
  1141 ;;		 -> ?_printf(2), 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  nuls            7   31[COMRAM] unsigned char [7]
  1144 ;;  l               2   46[COMRAM] int 
  1145 ;;  p               2   44[COMRAM] int 
  1146 ;;  cp              2   42[COMRAM] PTR unsigned char 
  1147 ;;		 -> ?_printf(2), stoa@nuls(7), 
  1148 ;;  w               2   40[COMRAM] int 
  1149 ;;  i               2   38[COMRAM] int 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  2   26[COMRAM] int 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;Total ram usage:       22 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    8
  1166 ;; This function calls:
  1167 ;;		_fputc
  1168 ;;		_strlen
  1169 ;; This function is called by:
  1170 ;;		_vfpfcnvrt
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text4
  1175  00116A                     __ptext4:
  1176                           	opt callstack 0
  1177  00116A                     _stoa:
  1178                           	opt callstack 19
  1179                           
  1180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  1181                           
  1182                           ;incstack = 0
  1183  00116A  EE20  F0F3         	lfsr	2,stoa@F1131
  1184  00116E  EE10  F020         	lfsr	1,stoa@nuls
  1185  001172  0E06               	movlw	6
  1186  001174                     u1261:
  1187  001174  CFDB FFE3          	movff	plusw2,plusw1
  1188  001178  06E8               	decf	wreg,f,c
  1189  00117A  E2FC               	bc	u1261
  1190                           
  1191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  1192  00117C  C01D  F02B         	movff	stoa@s,stoa@cp
  1193  001180  C01E  F02C         	movff	stoa@s+1,stoa@cp+1
  1194                           
  1195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  1196  001184  502B               	movf	stoa@cp,w,c
  1197  001186  102C               	iorwf	stoa@cp+1,w,c
  1198  001188  A4D8               	btfss	status,2,c
  1199  00118A  D004               	goto	l2117
  1200                           
  1201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  1202  00118C  0E20               	movlw	low stoa@nuls
  1203  00118E  6E2B               	movwf	stoa@cp,c
  1204  001190  0E00               	movlw	high stoa@nuls
  1205  001192  6E2C               	movwf	stoa@cp+1,c
  1206  001194                     l2117:
  1207                           
  1208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  1209  001194  C02B  F010         	movff	stoa@cp,strlen@s
  1210  001198  C02C  F011         	movff	stoa@cp+1,strlen@s+1
  1211  00119C  ECB7  F00B         	call	_strlen	;wreg free
  1212  0011A0  C010  F02F         	movff	?_strlen,stoa@l
  1213  0011A4  C011  F030         	movff	?_strlen+1,stoa@l+1
  1214                           
  1215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  1216  0011A8  C0CE  F02D         	movff	_prec,stoa@p
  1217  0011AC  C0CF  F02E         	movff	_prec+1,stoa@p+1
  1218                           
  1219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  1220  0011B0  BE2E               	btfsc	stoa@p+1,7,c
  1221  0011B2  D00E               	goto	l444
  1222  0011B4  502F               	movf	stoa@l,w,c
  1223  0011B6  5C2D               	subwf	stoa@p,w,c
  1224  0011B8  502E               	movf	stoa@p+1,w,c
  1225  0011BA  0A80               	xorlw	128
  1226  0011BC  6E1F               	movwf	??_stoa& (0+255),c
  1227  0011BE  5030               	movf	stoa@l+1,w,c
  1228  0011C0  0A80               	xorlw	128
  1229  0011C2  581F               	subwfb	??_stoa& (0+255),w,c
  1230  0011C4  B0D8               	btfsc	status,0,c
  1231  0011C6  D004               	goto	l444
  1232  0011C8  C02D  F02F         	movff	stoa@p,stoa@l
  1233  0011CC  C02E  F030         	movff	stoa@p+1,stoa@l+1
  1234  0011D0                     l444:
  1235                           
  1236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  1237  0011D0  C02F  F02D         	movff	stoa@l,stoa@p
  1238  0011D4  C030  F02E         	movff	stoa@l+1,stoa@p+1
  1239                           
  1240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  1241  0011D8  C0CC  F029         	movff	_width,stoa@w
  1242  0011DC  C0CD  F02A         	movff	_width+1,stoa@w+1
  1243                           
  1244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  1245  0011E0  0100               	movlb	0	; () banked
  1246  0011E2  A1D0               	btfss	_flags& (0+255),0,b
  1247  0011E4  D00D               	goto	l2131
  1248  0011E6  D016               	goto	u1310
  1249  0011E8                     l2127:
  1250                           
  1251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  1252  0011E8  0E00               	movlw	0
  1253  0011EA  6E13               	movwf	fputc@c+1,c
  1254  0011EC  0E20               	movlw	32
  1255  0011EE  6E12               	movwf	fputc@c,c
  1256  0011F0  C01B  F014         	movff	stoa@fp,fputc@fp
  1257  0011F4  C01C  F015         	movff	stoa@fp+1,fputc@fp+1
  1258  0011F8  EC98  F00A         	call	_fputc	;wreg free
  1259                           
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  1261  0011FC  4A2F               	infsnz	stoa@l,f,c
  1262  0011FE  2A30               	incf	stoa@l+1,f,c
  1263  001200                     l2131:
  1264                           
  1265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  1266  001200  5029               	movf	stoa@w,w,c
  1267  001202  5C2F               	subwf	stoa@l,w,c
  1268  001204  5030               	movf	stoa@l+1,w,c
  1269  001206  0A80               	xorlw	128
  1270  001208  6E1F               	movwf	??_stoa& (0+255),c
  1271  00120A  502A               	movf	stoa@w+1,w,c
  1272  00120C  0A80               	xorlw	128
  1273  00120E  581F               	subwfb	??_stoa& (0+255),w,c
  1274  001210  A0D8               	btfss	status,0,c
  1275  001212  D7EA               	goto	l2127
  1276  001214                     u1310:
  1277                           
  1278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  1279  001214  0E00               	movlw	0
  1280  001216  6E28               	movwf	stoa@i+1,c
  1281  001218  0E00               	movlw	0
  1282  00121A  6E27               	movwf	stoa@i,c
  1283                           
  1284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  1285  00121C  D013               	goto	l2141
  1286  00121E                     l2135:
  1287                           
  1288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  1289  00121E  C02B  FFD9         	movff	stoa@cp,fsr2l
  1290  001222  C02C  FFDA         	movff	stoa@cp+1,fsr2h
  1291  001226  50DF               	movf	indf2,w,c
  1292  001228  6E1F               	movwf	??_stoa& (0+255),c
  1293  00122A  501F               	movf	??_stoa,w,c
  1294  00122C  6E12               	movwf	fputc@c,c
  1295  00122E  6A13               	clrf	fputc@c+1,c
  1296  001230  C01B  F014         	movff	stoa@fp,fputc@fp
  1297  001234  C01C  F015         	movff	stoa@fp+1,fputc@fp+1
  1298  001238  EC98  F00A         	call	_fputc	;wreg free
  1299                           
  1300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  1301  00123C  4A2B               	infsnz	stoa@cp,f,c
  1302  00123E  2A2C               	incf	stoa@cp+1,f,c
  1303                           
  1304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  1305  001240  4A27               	infsnz	stoa@i,f,c
  1306  001242  2A28               	incf	stoa@i+1,f,c
  1307  001244                     l2141:
  1308                           
  1309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  1310  001244  502D               	movf	stoa@p,w,c
  1311  001246  5C27               	subwf	stoa@i,w,c
  1312  001248  5028               	movf	stoa@i+1,w,c
  1313  00124A  0A80               	xorlw	128
  1314  00124C  6E1F               	movwf	??_stoa& (0+255),c
  1315  00124E  502E               	movf	stoa@p+1,w,c
  1316  001250  0A80               	xorlw	128
  1317  001252  581F               	subwfb	??_stoa& (0+255),w,c
  1318  001254  A0D8               	btfss	status,0,c
  1319  001256  D7E3               	goto	l2135
  1320                           
  1321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  1322  001258  0100               	movlb	0	; () banked
  1323  00125A  B1D0               	btfsc	_flags& (0+255),0,b
  1324  00125C  D00D               	goto	l2149
  1325  00125E  D016               	goto	u1340
  1326  001260                     l2145:
  1327                           
  1328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  1329  001260  0E00               	movlw	0
  1330  001262  6E13               	movwf	fputc@c+1,c
  1331  001264  0E20               	movlw	32
  1332  001266  6E12               	movwf	fputc@c,c
  1333  001268  C01B  F014         	movff	stoa@fp,fputc@fp
  1334  00126C  C01C  F015         	movff	stoa@fp+1,fputc@fp+1
  1335  001270  EC98  F00A         	call	_fputc	;wreg free
  1336                           
  1337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  1338  001274  4A2F               	infsnz	stoa@l,f,c
  1339  001276  2A30               	incf	stoa@l+1,f,c
  1340  001278                     l2149:
  1341                           
  1342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  1343  001278  5029               	movf	stoa@w,w,c
  1344  00127A  5C2F               	subwf	stoa@l,w,c
  1345  00127C  5030               	movf	stoa@l+1,w,c
  1346  00127E  0A80               	xorlw	128
  1347  001280  6E1F               	movwf	??_stoa& (0+255),c
  1348  001282  502A               	movf	stoa@w+1,w,c
  1349  001284  0A80               	xorlw	128
  1350  001286  581F               	subwfb	??_stoa& (0+255),w,c
  1351  001288  A0D8               	btfss	status,0,c
  1352  00128A  D7EA               	goto	l2145
  1353  00128C                     u1340:
  1354                           
  1355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  1356                           
  1357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  1358  00128C  C02F  F01B         	movff	stoa@l,?_stoa
  1359  001290  C030  F01C         	movff	stoa@l+1,?_stoa+1
  1360  001294  0012               	return		;funcret
  1361  001296                     __end_of_stoa:
  1362                           	opt callstack 0
  1363                           
  1364 ;; *************** function _strlen *****************
  1365 ;; Defined at:
  1366 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  s               2   15[COMRAM] PTR const unsigned char 
  1369 ;;		 -> ?_printf(2), stoa@nuls(7), 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  a               2   17[COMRAM] PTR const unsigned char 
  1372 ;;		 -> ?_printf(2), stoa@nuls(7), 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2   15[COMRAM] unsigned int 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;Total ram usage:        4 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    5
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_stoa
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text5
  1397  00176E                     __ptext5:
  1398                           	opt callstack 0
  1399  00176E                     _strlen:
  1400                           	opt callstack 21
  1401                           
  1402                           ;incstack = 0
  1403  00176E  C010  F012         	movff	strlen@s,strlen@a
  1404  001772  C011  F013         	movff	strlen@s+1,strlen@a+1
  1405  001776  D002               	goto	l2103
  1406  001778                     l2101:
  1407  001778  4A10               	infsnz	strlen@s,f,c
  1408  00177A  2A11               	incf	strlen@s+1,f,c
  1409  00177C                     l2103:
  1410  00177C  C010  FFD9         	movff	strlen@s,fsr2l
  1411  001780  C011  FFDA         	movff	strlen@s+1,fsr2h
  1412  001784  50DF               	movf	indf2,w,c
  1413  001786  A4D8               	btfss	status,2,c
  1414  001788  D7F7               	goto	l2101
  1415  00178A  5012               	movf	strlen@a,w,c
  1416  00178C  5C10               	subwf	strlen@s,w,c
  1417  00178E  6E10               	movwf	?_strlen,c
  1418  001790  5013               	movf	strlen@a+1,w,c
  1419  001792  5811               	subwfb	strlen@s+1,w,c
  1420  001794  6E11               	movwf	?_strlen+1,c
  1421  001796  0012               	return		;funcret
  1422  001798                     __end_of_strlen:
  1423                           	opt callstack 0
  1424                           
  1425 ;; *************** function _fputc *****************
  1426 ;; Defined at:
  1427 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  c               2   17[COMRAM] int 
  1430 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  1431 ;;		 -> NULL(0), 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  2   17[COMRAM] int 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;Total ram usage:        9 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    7
  1450 ;; This function calls:
  1451 ;;		_putch
  1452 ;; This function is called by:
  1453 ;;		_stoa
  1454 ;;		_vfpfcnvrt
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text6
  1459  001530                     __ptext6:
  1460                           	opt callstack 0
  1461  001530                     _fputc:
  1462                           	opt callstack 19
  1463                           
  1464                           ;incstack = 0
  1465  001530  5014               	movf	fputc@fp,w,c
  1466  001532  1015               	iorwf	fputc@fp+1,w,c
  1467  001534  B4D8               	btfsc	status,2,c
  1468  001536  D004               	goto	u1220
  1469  001538  5014               	movf	fputc@fp,w,c
  1470  00153A  1015               	iorwf	fputc@fp+1,w,c
  1471  00153C  A4D8               	btfss	status,2,c
  1472  00153E  D004               	goto	l2091
  1473  001540                     u1220:
  1474  001540  5012               	movf	fputc@c,w,c
  1475  001542  EC57  F00C         	call	_putch
  1476  001546  0012               	return	
  1477  001548                     l2091:
  1478  001548  EE20 F004          	lfsr	2,4
  1479  00154C  5014               	movf	fputc@fp,w,c
  1480  00154E  26D9               	addwf	fsr2l,f,c
  1481  001550  5015               	movf	fputc@fp+1,w,c
  1482  001552  22DA               	addwfc	fsr2h,f,c
  1483  001554  50DE               	movf	postinc2,w,c
  1484  001556  10DE               	iorwf	postinc2,w,c
  1485  001558  B4D8               	btfsc	status,2,c
  1486  00155A  D016               	goto	u1240
  1487  00155C  EE20 F004          	lfsr	2,4
  1488  001560  5014               	movf	fputc@fp,w,c
  1489  001562  26D9               	addwf	fsr2l,f,c
  1490  001564  5015               	movf	fputc@fp+1,w,c
  1491  001566  22DA               	addwfc	fsr2h,f,c
  1492  001568  EE10 F002          	lfsr	1,2
  1493  00156C  5014               	movf	fputc@fp,w,c
  1494  00156E  26E1               	addwf	fsr1l,f,c
  1495  001570  5015               	movf	fputc@fp+1,w,c
  1496  001572  22E2               	addwfc	fsr1h,f,c
  1497  001574  50DE               	movf	postinc2,w,c
  1498  001576  5CE6               	subwf	postinc1,w,c
  1499  001578  50E6               	movf	postinc1,w,c
  1500  00157A  0A80               	xorlw	128
  1501  00157C  6E1A               	movwf	(??_fputc+4)& (0+255),c
  1502  00157E  50DE               	movf	postinc2,w,c
  1503  001580  0A80               	xorlw	128
  1504  001582  581A               	subwfb	(??_fputc+4)& (0+255),w,c
  1505  001584  B0D8               	btfsc	status,0,c
  1506  001586  0012               	return	
  1507  001588                     u1240:
  1508  001588  EE20 F002          	lfsr	2,2
  1509  00158C  5014               	movf	fputc@fp,w,c
  1510  00158E  26D9               	addwf	fsr2l,f,c
  1511  001590  5015               	movf	fputc@fp+1,w,c
  1512  001592  22DA               	addwfc	fsr2h,f,c
  1513  001594  2ADE               	incf	postinc2,f,c
  1514  001596  0E00               	movlw	0
  1515  001598  22DD               	addwfc	postdec2,f,c
  1516  00159A  0012               	return		;funcret
  1517  00159C                     __end_of_fputc:
  1518                           	opt callstack 0
  1519                           
  1520 ;; *************** function _putch *****************
  1521 ;; Defined at:
  1522 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  txData          1    wreg     unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  txData          1   16[COMRAM] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;Total ram usage:        1 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    6
  1543 ;; This function calls:
  1544 ;;		_EUSART1_Write
  1545 ;; This function is called by:
  1546 ;;		_fputc
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text7
  1551  0018AE                     __ptext7:
  1552                           	opt callstack 0
  1553  0018AE                     _putch:
  1554                           	opt callstack 19
  1555                           
  1556                           ;incstack = 0
  1557                           ;putch@txData stored from wreg
  1558  0018AE  6E11               	movwf	putch@txData,c
  1559                           
  1560                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  1561  0018B0  5011               	movf	putch@txData,w,c
  1562  0018B2  EC6D  F00B         	call	_EUSART1_Write
  1563  0018B6  0012               	return		;funcret
  1564  0018B8                     __end_of_putch:
  1565                           	opt callstack 0
  1566                           
  1567 ;; *************** function _EUSART1_Write *****************
  1568 ;; Defined at:
  1569 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  txData          1    wreg     unsigned char 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  txData          1   15[COMRAM] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;Total ram usage:        1 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    5
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_putch
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text8
  1598  0016DA                     __ptext8:
  1599                           	opt callstack 0
  1600  0016DA                     _EUSART1_Write:
  1601                           	opt callstack 19
  1602                           
  1603                           ;incstack = 0
  1604                           ;EUSART1_Write@txData stored from wreg
  1605  0016DA  6E10               	movwf	EUSART1_Write@txData,c
  1606  0016DC                     
  1607                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  1608                           
  1609                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  1610  0016DC  5049               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  1611  0016DE  B4D8               	btfsc	status,2,c
  1612  0016E0  D7FD               	goto	l2065
  1613                           
  1614                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  1615  0016E2  B89D               	btfsc	3997,4,c	;volatile
  1616  0016E4  D003               	goto	l145
  1617                           
  1618                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  1619  0016E6  C010  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1620                           
  1621                           ;mcc_generated_files/eusart1.c: 182:     }
  1622  0016EA  D010               	goto	l2081
  1623  0016EC                     l145:
  1624                           
  1625                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  1626  0016EC  989D               	bcf	3997,4,c	;volatile
  1627                           
  1628                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  1629  0016EE  0E40               	movlw	low _eusart1TxBuffer
  1630  0016F0  244B               	addwf	_eusart1TxHead,w,c	;volatile
  1631  0016F2  6ED9               	movwf	fsr2l,c
  1632  0016F4  6ADA               	clrf	fsr2h,c
  1633  0016F6  0E01               	movlw	high _eusart1TxBuffer
  1634  0016F8  22DA               	addwfc	fsr2h,f,c
  1635  0016FA  C010  FFDF         	movff	EUSART1_Write@txData,indf2
  1636  0016FE  2A4B               	incf	_eusart1TxHead,f,c	;volatile
  1637                           
  1638                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  1639  001700  0E3F               	movlw	63
  1640  001702  644B               	cpfsgt	_eusart1TxHead,c	;volatile
  1641  001704  D002               	goto	l2079
  1642                           
  1643                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  1644  001706  0E00               	movlw	0
  1645  001708  6E4B               	movwf	_eusart1TxHead,c	;volatile
  1646  00170A                     l2079:
  1647                           
  1648                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  1649  00170A  0649               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1650  00170C                     l2081:
  1651                           
  1652                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  1653  00170C  889D               	bsf	3997,4,c	;volatile
  1654  00170E  0012               	return		;funcret
  1655  001710                     __end_of_EUSART1_Write:
  1656                           	opt callstack 0
  1657                           
  1658 ;; *************** function ___lwdiv *****************
  1659 ;; Defined at:
  1660 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  dividend        2   15[COMRAM] unsigned int 
  1663 ;;  divisor         2   17[COMRAM] unsigned int 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  quotient        2   20[COMRAM] unsigned int 
  1666 ;;  counter         1   19[COMRAM] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  2   15[COMRAM] unsigned int 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;Total ram usage:        7 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    5
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text9
  1691  0015F4                     __ptext9:
  1692                           	opt callstack 0
  1693  0015F4                     ___lwdiv:
  1694                           	opt callstack 25
  1695                           
  1696                           ;incstack = 0
  1697  0015F4  0E00               	movlw	0
  1698  0015F6  6E16               	movwf	___lwdiv@quotient+1,c
  1699  0015F8  0E00               	movlw	0
  1700  0015FA  6E15               	movwf	___lwdiv@quotient,c
  1701  0015FC  5012               	movf	___lwdiv@divisor,w,c
  1702  0015FE  1013               	iorwf	___lwdiv@divisor+1,w,c
  1703  001600  B4D8               	btfsc	status,2,c
  1704  001602  D01C               	goto	l964
  1705  001604  0E01               	movlw	1
  1706  001606  6E14               	movwf	___lwdiv@counter,c
  1707  001608  D004               	goto	l2293
  1708  00160A                     l2291:
  1709  00160A  90D8               	bcf	status,0,c
  1710  00160C  3612               	rlcf	___lwdiv@divisor,f,c
  1711  00160E  3613               	rlcf	___lwdiv@divisor+1,f,c
  1712  001610  2A14               	incf	___lwdiv@counter,f,c
  1713  001612                     l2293:
  1714  001612  AE13               	btfss	___lwdiv@divisor+1,7,c
  1715  001614  D7FA               	goto	l2291
  1716  001616                     u1420:
  1717  001616  90D8               	bcf	status,0,c
  1718  001618  3615               	rlcf	___lwdiv@quotient,f,c
  1719  00161A  3616               	rlcf	___lwdiv@quotient+1,f,c
  1720  00161C  5012               	movf	___lwdiv@divisor,w,c
  1721  00161E  5C10               	subwf	___lwdiv@dividend,w,c
  1722  001620  5013               	movf	___lwdiv@divisor+1,w,c
  1723  001622  5811               	subwfb	___lwdiv@dividend+1,w,c
  1724  001624  A0D8               	btfss	status,0,c
  1725  001626  D005               	goto	l2303
  1726  001628  5012               	movf	___lwdiv@divisor,w,c
  1727  00162A  5E10               	subwf	___lwdiv@dividend,f,c
  1728  00162C  5013               	movf	___lwdiv@divisor+1,w,c
  1729  00162E  5A11               	subwfb	___lwdiv@dividend+1,f,c
  1730  001630  8015               	bsf	___lwdiv@quotient,0,c
  1731  001632                     l2303:
  1732  001632  90D8               	bcf	status,0,c
  1733  001634  3213               	rrcf	___lwdiv@divisor+1,f,c
  1734  001636  3212               	rrcf	___lwdiv@divisor,f,c
  1735  001638  2E14               	decfsz	___lwdiv@counter,f,c
  1736  00163A  D7ED               	goto	u1420
  1737  00163C                     l964:
  1738  00163C  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
  1739  001640  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1740  001644  0012               	return		;funcret
  1741  001646                     __end_of___lwdiv:
  1742                           	opt callstack 0
  1743                           
  1744 ;; *************** function _SYSTEM_Initialize *****************
  1745 ;; Defined at:
  1746 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    7
  1767 ;; This function calls:
  1768 ;;		_ADC_Initialize
  1769 ;;		_EUSART1_Initialize
  1770 ;;		_INTERRUPT_Initialize
  1771 ;;		_OSCILLATOR_Initialize
  1772 ;;		_PIN_MANAGER_Initialize
  1773 ;;		_TMR2_Initialize
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text10
  1780  00186A                     __ptext10:
  1781                           	opt callstack 0
  1782  00186A                     _SYSTEM_Initialize:
  1783                           	opt callstack 23
  1784                           
  1785                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1786                           
  1787                           ;incstack = 0
  1788  00186A  EC87  F00C         	call	_INTERRUPT_Initialize	;wreg free
  1789                           
  1790                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1791  00186E  ECA0  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  1792                           
  1793                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1794  001872  EC4E  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  1795                           
  1796                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  1797  001876  EC17  F00C         	call	_TMR2_Initialize	;wreg free
  1798                           
  1799                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  1800  00187A  EC42  F00C         	call	_ADC_Initialize	;wreg free
  1801                           
  1802                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  1803  00187E  EC27  F00A         	call	_EUSART1_Initialize	;wreg free
  1804  001882  0012               	return		;funcret
  1805  001884                     __end_of_SYSTEM_Initialize:
  1806                           	opt callstack 0
  1807                           
  1808 ;; *************** function _TMR2_Initialize *****************
  1809 ;; Defined at:
  1810 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    6
  1831 ;; This function calls:
  1832 ;;		_TMR2_SetInterruptHandler
  1833 ;; This function is called by:
  1834 ;;		_SYSTEM_Initialize
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text11
  1840  00182E                     __ptext11:
  1841                           	opt callstack 0
  1842  00182E                     _TMR2_Initialize:
  1843                           	opt callstack 24
  1844                           
  1845                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x7C;
  1846                           
  1847                           ;incstack = 0
  1848  00182E  0E7C               	movlw	124
  1849  001830  6EBB               	movwf	4027,c	;volatile
  1850                           
  1851                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  1852  001832  0E00               	movlw	0
  1853  001834  6EBC               	movwf	4028,c	;volatile
  1854                           
  1855                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  1856  001836  929E               	bcf	3998,1,c	;volatile
  1857                           
  1858                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  1859  001838  829D               	bsf	3997,1,c	;volatile
  1860                           
  1861                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  1862  00183A  0E16               	movlw	low _TMR2_DefaultInterruptHandler
  1863  00183C  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1864  00183E  0E19               	movlw	high _TMR2_DefaultInterruptHandler
  1865  001840  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1866  001842  EC5C  F00C         	call	_TMR2_SetInterruptHandler	;wreg free
  1867                           
  1868                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x3E;
  1869  001846  0E3E               	movlw	62
  1870  001848  6EBA               	movwf	4026,c	;volatile
  1871  00184A  0012               	return		;funcret
  1872  00184C                     __end_of_TMR2_Initialize:
  1873                           	opt callstack 0
  1874                           
  1875 ;; *************** function _TMR2_SetInterruptHandler *****************
  1876 ;; Defined at:
  1877 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
  1880 ;;		 -> displayController(1), TMR2_DefaultInterruptHandler(1), 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;Total ram usage:        2 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    5
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_TMR2_Initialize
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text12
  1908  0018B8                     __ptext12:
  1909                           	opt callstack 0
  1910  0018B8                     _TMR2_SetInterruptHandler:
  1911                           	opt callstack 25
  1912                           
  1913                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  1914                           
  1915                           ;incstack = 0
  1916  0018B8  C010  F041         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1917  0018BC  C011  F042         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1918  0018C0  0012               	return		;funcret
  1919  0018C2                     __end_of_TMR2_SetInterruptHandler:
  1920                           	opt callstack 0
  1921                           
  1922 ;; *************** function _PIN_MANAGER_Initialize *****************
  1923 ;; Defined at:
  1924 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;Total ram usage:        0 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    5
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_SYSTEM_Initialize
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text13
  1953  001740                     __ptext13:
  1954                           	opt callstack 0
  1955  001740                     _PIN_MANAGER_Initialize:
  1956                           	opt callstack 24
  1957                           
  1958                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1959                           
  1960                           ;incstack = 0
  1961  001740  0E00               	movlw	0
  1962  001742  6E89               	movwf	3977,c	;volatile
  1963                           
  1964                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1965  001744  0E00               	movlw	0
  1966  001746  6E8A               	movwf	3978,c	;volatile
  1967                           
  1968                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1969  001748  0E00               	movlw	0
  1970  00174A  6E8B               	movwf	3979,c	;volatile
  1971                           
  1972                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x00;
  1973  00174C  0E00               	movlw	0
  1974  00174E  6E92               	movwf	3986,c	;volatile
  1975                           
  1976                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  1977  001750  0EDF               	movlw	223
  1978  001752  6E93               	movwf	3987,c	;volatile
  1979                           
  1980                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBC;
  1981  001754  0EBC               	movlw	188
  1982  001756  6E94               	movwf	3988,c	;volatile
  1983                           
  1984                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  1985  001758  0E3C               	movlw	60
  1986  00175A  010F               	movlb	15	; () banked
  1987  00175C  6F3A               	movwf	58,b	;volatile
  1988                           
  1989                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x1F;
  1990  00175E  0E1F               	movlw	31
  1991  001760  6F39               	movwf	57,b	;volatile
  1992                           
  1993                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  1994  001762  0E00               	movlw	0
  1995  001764  6F38               	movwf	56,b	;volatile
  1996                           
  1997                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1998  001766  0E00               	movlw	0
  1999  001768  6E61               	movwf	3937,c	;volatile
  2000                           
  2001                           ; BSR set to: 15
  2002                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  2003  00176A  8EF1               	bsf	4081,7,c	;volatile
  2004                           
  2005                           ; BSR set to: 15
  2006  00176C  0012               	return		;funcret
  2007  00176E                     __end_of_PIN_MANAGER_Initialize:
  2008                           	opt callstack 0
  2009                           
  2010 ;; *************** function _OSCILLATOR_Initialize *****************
  2011 ;; Defined at:
  2012 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    5
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_SYSTEM_Initialize
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text14
  2041  00189C                     __ptext14:
  2042                           	opt callstack 0
  2043  00189C                     _OSCILLATOR_Initialize:
  2044                           	opt callstack 24
  2045                           
  2046                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2047                           
  2048                           ; BSR set to: 15
  2049                           ;incstack = 0
  2050  00189C  0E70               	movlw	112
  2051  00189E  6ED3               	movwf	4051,c	;volatile
  2052                           
  2053                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  2054  0018A0  0E04               	movlw	4
  2055  0018A2  6ED2               	movwf	4050,c	;volatile
  2056                           
  2057                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  2058  0018A4  0E40               	movlw	64
  2059  0018A6  6E9B               	movwf	3995,c	;volatile
  2060  0018A8                     l221:
  2061                           
  2062                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  2063  0018A8  BED2               	btfsc	4050,7,c	;volatile
  2064  0018AA  0012               	return	
  2065  0018AC  D7FD               	goto	l221
  2066  0018AE                     __end_of_OSCILLATOR_Initialize:
  2067                           	opt callstack 0
  2068                           
  2069 ;; *************** function _INTERRUPT_Initialize *****************
  2070 ;; Defined at:
  2071 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		None
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    5
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_SYSTEM_Initialize
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text15
  2100  00190E                     __ptext15:
  2101                           	opt callstack 0
  2102  00190E                     _INTERRUPT_Initialize:
  2103                           	opt callstack 24
  2104                           
  2105                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2106                           
  2107                           ;incstack = 0
  2108  00190E  9ED0               	bcf	4048,7,c	;volatile
  2109  001910  0012               	return		;funcret
  2110  001912                     __end_of_INTERRUPT_Initialize:
  2111                           	opt callstack 0
  2112                           
  2113 ;; *************** function _EUSART1_Initialize *****************
  2114 ;; Defined at:
  2115 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;Total ram usage:        0 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    6
  2136 ;; This function calls:
  2137 ;;		_EUSART1_SetErrorHandler
  2138 ;;		_EUSART1_SetFramingErrorHandler
  2139 ;;		_EUSART1_SetOverrunErrorHandler
  2140 ;;		_EUSART1_SetRxInterruptHandler
  2141 ;;		_EUSART1_SetTxInterruptHandler
  2142 ;; This function is called by:
  2143 ;;		_SYSTEM_Initialize
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text16
  2149  00144E                     __ptext16:
  2150                           	opt callstack 0
  2151  00144E                     _EUSART1_Initialize:
  2152                           	opt callstack 23
  2153                           
  2154                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  2155                           
  2156                           ;incstack = 0
  2157  00144E  9A9D               	bcf	3997,5,c	;volatile
  2158                           
  2159                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  2160  001450  0E42               	movlw	low _EUSART1_Receive_ISR
  2161  001452  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  2162  001454  0E13               	movlw	high _EUSART1_Receive_ISR
  2163  001456  6E11               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  2164  001458  EC66  F00C         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2165                           
  2166                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  2167  00145C  989D               	bcf	3997,4,c	;volatile
  2168                           
  2169                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  2170  00145E  0E98               	movlw	low _EUSART1_Transmit_ISR
  2171  001460  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  2172  001462  0E17               	movlw	high _EUSART1_Transmit_ISR
  2173  001464  6E11               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  2174  001466  EC61  F00C         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  2175                           
  2176                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  2177  00146A  0E08               	movlw	8
  2178  00146C  6EB8               	movwf	4024,c	;volatile
  2179                           
  2180                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  2181  00146E  0E90               	movlw	144
  2182  001470  6EAB               	movwf	4011,c	;volatile
  2183                           
  2184                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  2185  001472  0E24               	movlw	36
  2186  001474  6EAC               	movwf	4012,c	;volatile
  2187                           
  2188                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x82;
  2189  001476  0E82               	movlw	130
  2190  001478  6EAF               	movwf	4015,c	;volatile
  2191                           
  2192                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x06;
  2193  00147A  0E06               	movlw	6
  2194  00147C  6EB0               	movwf	4016,c	;volatile
  2195                           
  2196                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2197  00147E  0E18               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2198  001480  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  2199  001482  0E19               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2200  001484  6E11               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  2201  001486  EC70  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2202                           
  2203                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2204  00148A  0EFE               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2205  00148C  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  2206  00148E  0E18               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2207  001490  6E11               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  2208  001492  EC6B  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2209                           
  2210                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2211  001496  0E04               	movlw	low _EUSART1_DefaultErrorHandler
  2212  001498  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  2213  00149A  0E19               	movlw	high _EUSART1_DefaultErrorHandler
  2214  00149C  6E11               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  2215  00149E  EC75  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  2216                           
  2217                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  2218  0014A2  0E00               	movlw	0
  2219  0014A4  6E45               	movwf	_eusart1RxLastError,c	;volatile
  2220                           
  2221                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2222  0014A6  0E00               	movlw	0
  2223  0014A8  6E4B               	movwf	_eusart1TxHead,c	;volatile
  2224                           
  2225                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2226  0014AA  0E00               	movlw	0
  2227  0014AC  6E4A               	movwf	_eusart1TxTail,c	;volatile
  2228                           
  2229                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2230  0014AE  0E40               	movlw	64
  2231  0014B0  6E49               	movwf	_eusart1TxBufferRemaining,c	;volatile
  2232                           
  2233                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2234  0014B2  0E00               	movlw	0
  2235  0014B4  6E48               	movwf	_eusart1RxHead,c	;volatile
  2236                           
  2237                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2238  0014B6  0E00               	movlw	0
  2239  0014B8  6E47               	movwf	_eusart1RxTail,c	;volatile
  2240                           
  2241                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2242  0014BA  0E00               	movlw	0
  2243  0014BC  6E46               	movwf	_eusart1RxCount,c	;volatile
  2244                           
  2245                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  2246  0014BE  8A9D               	bsf	3997,5,c	;volatile
  2247  0014C0  0012               	return		;funcret
  2248  0014C2                     __end_of_EUSART1_Initialize:
  2249                           	opt callstack 0
  2250                           
  2251 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2252 ;; Defined at:
  2253 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  2256 ;;		 -> EUSART1_Transmit_ISR(1), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;Total ram usage:        2 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    5
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_EUSART1_Initialize
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text17
  2283  0018C2                     __ptext17:
  2284                           	opt callstack 0
  2285  0018C2                     _EUSART1_SetTxInterruptHandler:
  2286                           	opt callstack 23
  2287                           
  2288                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2289                           
  2290                           ;incstack = 0
  2291  0018C2  C010  F0E2         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2292  0018C6  C011  F0E3         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2293  0018CA  0012               	return		;funcret
  2294  0018CC                     __end_of_EUSART1_SetTxInterruptHandler:
  2295                           	opt callstack 0
  2296                           
  2297 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2298 ;; Defined at:
  2299 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  2302 ;;		 -> EUSART1_Receive_ISR(1), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg, status,2, status,0
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;Total ram usage:        2 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:    5
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_EUSART1_Initialize
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text18
  2329  0018CC                     __ptext18:
  2330                           	opt callstack 0
  2331  0018CC                     _EUSART1_SetRxInterruptHandler:
  2332                           	opt callstack 23
  2333                           
  2334                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2335                           
  2336                           ;incstack = 0
  2337  0018CC  C010  F0E0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2338  0018D0  C011  F0E1         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2339  0018D4  0012               	return		;funcret
  2340  0018D6                     __end_of_EUSART1_SetRxInterruptHandler:
  2341                           	opt callstack 0
  2342                           
  2343 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2344 ;; Defined at:
  2345 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  2348 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;Total ram usage:        2 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    5
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_EUSART1_Initialize
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text19
  2375  0018D6                     __ptext19:
  2376                           	opt callstack 0
  2377  0018D6                     _EUSART1_SetOverrunErrorHandler:
  2378                           	opt callstack 23
  2379                           
  2380                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  2381                           
  2382                           ;incstack = 0
  2383  0018D6  C010  F0DC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2384  0018DA  C011  F0DD         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2385  0018DE  0012               	return		;funcret
  2386  0018E0                     __end_of_EUSART1_SetOverrunErrorHandler:
  2387                           	opt callstack 0
  2388                           
  2389 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2390 ;; Defined at:
  2391 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  2394 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;Total ram usage:        2 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    5
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_EUSART1_Initialize
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text20
  2421  0018E0                     __ptext20:
  2422                           	opt callstack 0
  2423  0018E0                     _EUSART1_SetFramingErrorHandler:
  2424                           	opt callstack 23
  2425                           
  2426                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  2427                           
  2428                           ;incstack = 0
  2429  0018E0  C010  F0DE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2430  0018E4  C011  F0DF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2431  0018E8  0012               	return		;funcret
  2432  0018EA                     __end_of_EUSART1_SetFramingErrorHandler:
  2433                           	opt callstack 0
  2434                           
  2435 ;; *************** function _EUSART1_SetErrorHandler *****************
  2436 ;; Defined at:
  2437 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  2440 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, status,2, status,0
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;Total ram usage:        2 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    5
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_EUSART1_Initialize
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text21
  2467  0018EA                     __ptext21:
  2468                           	opt callstack 0
  2469  0018EA                     _EUSART1_SetErrorHandler:
  2470                           	opt callstack 23
  2471                           
  2472                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  2473                           
  2474                           ;incstack = 0
  2475  0018EA  C010  F0DA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2476  0018EE  C011  F0DB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2477  0018F2  0012               	return		;funcret
  2478  0018F4                     __end_of_EUSART1_SetErrorHandler:
  2479                           	opt callstack 0
  2480                           
  2481 ;; *************** function _ADC_Initialize *****************
  2482 ;; Defined at:
  2483 ;;		line 60 in file "mcc_generated_files/adc.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;Total ram usage:        0 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    5
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_SYSTEM_Initialize
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text22
  2513  001884                     __ptext22:
  2514                           	opt callstack 0
  2515  001884                     _ADC_Initialize:
  2516                           	opt callstack 24
  2517                           
  2518                           ;mcc_generated_files/adc.c: 65:     ADCON0 = 0x01;
  2519                           
  2520                           ;incstack = 0
  2521  001884  0E01               	movlw	1
  2522  001886  6EC2               	movwf	4034,c	;volatile
  2523                           
  2524                           ;mcc_generated_files/adc.c: 68:     ADCON1 = 0x08;
  2525  001888  0E08               	movlw	8
  2526  00188A  6EC1               	movwf	4033,c	;volatile
  2527                           
  2528                           ;mcc_generated_files/adc.c: 71:     ADCON2 = 0x87;
  2529  00188C  0E87               	movlw	135
  2530  00188E  6EC0               	movwf	4032,c	;volatile
  2531                           
  2532                           ;mcc_generated_files/adc.c: 74:     ADRESL = 0x00;
  2533  001890  0E00               	movlw	0
  2534  001892  6EC3               	movwf	4035,c	;volatile
  2535                           
  2536                           ;mcc_generated_files/adc.c: 77:     ADRESH = 0x00;
  2537  001894  0E00               	movlw	0
  2538  001896  6EC4               	movwf	4036,c	;volatile
  2539                           
  2540                           ;mcc_generated_files/adc.c: 80:     PIE1bits.ADIE = 1;
  2541  001898  8C9D               	bsf	3997,6,c	;volatile
  2542  00189A  0012               	return		;funcret
  2543  00189C                     __end_of_ADC_Initialize:
  2544                           	opt callstack 0
  2545                           
  2546 ;; *************** function _ADC_GetConversion *****************
  2547 ;; Defined at:
  2548 ;;		line 110 in file "mcc_generated_files/adc.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  channel         1    wreg     enum E5751
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  channel         1   19[COMRAM] enum E5751
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  2   15[COMRAM] unsigned short 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;Total ram usage:        5 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    5
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_main
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text23
  2577  001710                     __ptext23:
  2578                           	opt callstack 0
  2579  001710                     _ADC_GetConversion:
  2580                           	opt callstack 25
  2581                           
  2582                           ;incstack = 0
  2583                           ;ADC_GetConversion@channel stored from wreg
  2584  001710  6E14               	movwf	ADC_GetConversion@channel,c
  2585                           
  2586                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  2587  001712  C014  F012         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  2588  001716  4612               	rlncf	??_ADC_GetConversion,f,c
  2589  001718  4612               	rlncf	??_ADC_GetConversion,f,c
  2590  00171A  50C2               	movf	4034,w,c	;volatile
  2591  00171C  1812               	xorwf	??_ADC_GetConversion,w,c
  2592  00171E  0B83               	andlw	-125
  2593  001720  1812               	xorwf	??_ADC_GetConversion,w,c
  2594  001722  6EC2               	movwf	4034,c	;volatile
  2595                           
  2596                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  2597  001724  80C2               	bsf	4034,0,c	;volatile
  2598                           
  2599                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  2600  001726  82C2               	bsf	4034,1,c	;volatile
  2601  001728                     l36:
  2602                           
  2603                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  2604  001728  B2C2               	btfsc	4034,1,c	;volatile
  2605  00172A  D7FE               	goto	l36
  2606                           
  2607                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2608  00172C  50C4               	movf	4036,w,c	;volatile
  2609  00172E  6E13               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  2610  001730  6A12               	clrf	??_ADC_GetConversion& (0+255),c
  2611  001732  50C3               	movf	4035,w,c	;volatile
  2612  001734  2412               	addwf	??_ADC_GetConversion,w,c
  2613  001736  6E10               	movwf	?_ADC_GetConversion,c
  2614  001738  0E00               	movlw	0
  2615  00173A  2013               	addwfc	??_ADC_GetConversion+1,w,c
  2616  00173C  6E11               	movwf	?_ADC_GetConversion+1,c
  2617  00173E  0012               	return		;funcret
  2618  001740                     __end_of_ADC_GetConversion:
  2619                           	opt callstack 0
  2620                           
  2621 ;; *************** function _INTERRUPT_InterruptManager *****************
  2622 ;; Defined at:
  2623 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;Total ram usage:        8 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    4
  2644 ;; This function calls:
  2645 ;;		Absolute function
  2646 ;;		_ADC_ISR
  2647 ;;		_EUSART1_Receive_ISR
  2648 ;;		_EUSART1_Transmit_ISR
  2649 ;;		_TMR2_ISR
  2650 ;; This function is called by:
  2651 ;;		Interrupt level 2
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	intcode
  2656  000008                     __pintcode:
  2657                           	opt callstack 0
  2658  000008                     _INTERRUPT_InterruptManager:
  2659                           	opt callstack 19
  2660                           
  2661                           ;incstack = 0
  2662  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2663  00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManager
  2664  00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2665  000012  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  2666  000016  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  2667  00001A  CFF6 F00C          	movff	tblptrl,??_INTERRUPT_InterruptManager+4
  2668  00001E  CFF7 F00D          	movff	tblptrh,??_INTERRUPT_InterruptManager+5
  2669  000022  CFF8 F00E          	movff	tblptru,??_INTERRUPT_InterruptManager+6
  2670  000026  CFF5 F00F          	movff	tablat,??_INTERRUPT_InterruptManager+7
  2671                           
  2672                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  2673  00002A  ACF2               	btfss	4082,6,c	;volatile
  2674  00002C  D026               	goto	i2l282
  2675                           
  2676                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  2677  00002E  BC9D               	btfsc	3997,6,c	;volatile
  2678  000030  AC9E               	btfss	3998,6,c	;volatile
  2679  000032  D003               	goto	i2l279
  2680                           
  2681                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ADC_ISR();
  2682  000034  EC89  F00C         	call	_ADC_ISR	;wreg free
  2683                           
  2684                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  2685  000038  D020               	goto	i2l282
  2686  00003A                     i2l279:
  2687  00003A  B89D               	btfsc	3997,4,c	;volatile
  2688  00003C  A89E               	btfss	3998,4,c	;volatile
  2689  00003E  D009               	goto	i2l281
  2690                           
  2691                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
  2692  000040  D801               	call	i2u112_48
  2693  000042  D01B               	goto	i2l282
  2694  000044                     i2u112_48:
  2695  000044  0005               	push	
  2696  000046  6EFA               	movwf	pclath,c
  2697  000048  0100               	movlb	0	; () banked
  2698  00004A  51E2               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  2699  00004C  6EFD               	movwf	tosl,c
  2700  00004E  51E3               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  2701  000050  D00B               	goto	L1
  2702  000052                     i2l281:
  2703  000052  BA9D               	btfsc	3997,5,c	;volatile
  2704  000054  AA9E               	btfss	3998,5,c	;volatile
  2705  000056  D00C               	goto	i2l283
  2706                           
  2707                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
  2708  000058  D801               	call	i2u115_48
  2709  00005A  D00F               	goto	i2l282
  2710  00005C                     i2u115_48:
  2711  00005C  0005               	push	
  2712  00005E  6EFA               	movwf	pclath,c
  2713  000060  0100               	movlb	0	; () banked
  2714  000062  51E0               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  2715  000064  6EFD               	movwf	tosl,c
  2716  000066  51E1               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  2717  000068                     L1:
  2718  000068  6EFE               	movwf	tosh,c
  2719  00006A  6AFF               	clrf	tosu,c
  2720  00006C  50FA               	movf	pclath,w,c
  2721  00006E  0012               	return		;indir
  2722  000070                     i2l283:
  2723  000070  B29D               	btfsc	3997,1,c	;volatile
  2724  000072  A29E               	btfss	3998,1,c	;volatile
  2725  000074  D002               	goto	i2l282
  2726                           
  2727                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR2_ISR();
  2728  000076  ECF5  F00B         	call	_TMR2_ISR	;wreg free
  2729  00007A                     i2l282:
  2730  00007A  C00F  FFF5         	movff	??_INTERRUPT_InterruptManager+7,tablat
  2731  00007E  C00E  FFF8         	movff	??_INTERRUPT_InterruptManager+6,tblptru
  2732  000082  C00D  FFF7         	movff	??_INTERRUPT_InterruptManager+5,tblptrh
  2733  000086  C00C  FFF6         	movff	??_INTERRUPT_InterruptManager+4,tblptrl
  2734  00008A  C00B  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  2735  00008E  C00A  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  2736  000092  C009  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2737  000096  C008  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2738  00009A  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2739  00009C  0011               	retfie		f
  2740  00009E                     __end_of_INTERRUPT_InterruptManager:
  2741                           	opt callstack 0
  2742                           
  2743 ;; *************** function _TMR2_ISR *****************
  2744 ;; Defined at:
  2745 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;Total ram usage:        0 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    3
  2766 ;; This function calls:
  2767 ;;		_TMR2_CallBack
  2768 ;; This function is called by:
  2769 ;;		_INTERRUPT_InterruptManager
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text25
  2774  0017EA                     __ptext25:
  2775                           	opt callstack 0
  2776  0017EA                     _TMR2_ISR:
  2777                           	opt callstack 19
  2778                           
  2779                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  2780                           
  2781                           ;incstack = 0
  2782  0017EA  929E               	bcf	3998,1,c	;volatile
  2783                           
  2784                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 10)
  2785  0017EC  0100               	movlb	0	; () banked
  2786  0017EE  4BD8               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
  2787  0017F0  2BD9               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  2788  0017F2  51D9               	movf	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  2789  0017F4  E104               	bnz	i2u103_40
  2790  0017F6  0E0A               	movlw	10
  2791  0017F8  5DD8               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
  2792  0017FA  A0D8               	btfss	status,0,c
  2793  0017FC  0012               	return	
  2794  0017FE                     i2u103_40:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  2798  0017FE  EC26  F00C         	call	_TMR2_CallBack	;wreg free
  2799                           
  2800                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  2801  001802  0E00               	movlw	0
  2802  001804  0100               	movlb	0	; () banked
  2803  001806  6FD9               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
  2804  001808  0E00               	movlw	0
  2805  00180A  6FD8               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
  2806                           
  2807                           ; BSR set to: 0
  2808  00180C  0012               	return		;funcret
  2809  00180E                     __end_of_TMR2_ISR:
  2810                           	opt callstack 0
  2811                           
  2812 ;; *************** function _TMR2_CallBack *****************
  2813 ;; Defined at:
  2814 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    2
  2835 ;; This function calls:
  2836 ;;		Absolute function
  2837 ;;		_TMR2_DefaultInterruptHandler
  2838 ;;		_displayController
  2839 ;; This function is called by:
  2840 ;;		_TMR2_ISR
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text26
  2845  00184C                     __ptext26:
  2846                           	opt callstack 0
  2847  00184C                     _TMR2_CallBack:
  2848                           	opt callstack 19
  2849                           
  2850                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;incstack = 0
  2854  00184C  5041               	movf	_TMR2_InterruptHandler,w,c
  2855  00184E  1042               	iorwf	_TMR2_InterruptHandler+1,w,c
  2856  001850  B4D8               	btfsc	status,2,c
  2857  001852  0012               	return	
  2858                           
  2859                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  2860  001854  D801               	call	i2u90_48
  2861  001856  0012               	return	
  2862  001858                     i2u90_48:
  2863  001858  0005               	push	
  2864  00185A  6EFA               	movwf	pclath,c
  2865  00185C  5041               	movf	_TMR2_InterruptHandler,w,c
  2866  00185E  6EFD               	movwf	tosl,c
  2867  001860  5042               	movf	_TMR2_InterruptHandler+1,w,c
  2868  001862  6EFE               	movwf	tosh,c
  2869  001864  6AFF               	clrf	tosu,c
  2870  001866  50FA               	movf	pclath,w,c
  2871  001868  0012               	return		;indir
  2872  00186A                     __end_of_TMR2_CallBack:
  2873                           	opt callstack 0
  2874                           
  2875 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  2876 ;; Defined at:
  2877 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		None
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;Total ram usage:        0 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_TMR2_Initialize
  2901 ;;		_TMR2_CallBack
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text27
  2906  001916                     __ptext27:
  2907                           	opt callstack 0
  2908  001916                     _TMR2_DefaultInterruptHandler:
  2909                           	opt callstack 20
  2910                           
  2911                           ;incstack = 0
  2912  001916  0012               	return		;funcret
  2913  001918                     __end_of_TMR2_DefaultInterruptHandler:
  2914                           	opt callstack 0
  2915                           
  2916 ;; *************** function _displayController *****************
  2917 ;; Defined at:
  2918 ;;		line 135 in file "main.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    1
  2939 ;; This function calls:
  2940 ;;		___lwmod
  2941 ;;		i2___lwdiv
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;;		_TMR2_CallBack
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text28
  2949  001296                     __ptext28:
  2950                           	opt callstack 0
  2951  001296                     _displayController:
  2952                           	opt callstack 19
  2953                           
  2954                           ;main.c: 136:     if (number > 9) {
  2955                           
  2956                           ;incstack = 0
  2957  001296  504D               	movf	_number+1,w,c
  2958  001298  E104               	bnz	i2u84_40
  2959  00129A  0E0A               	movlw	10
  2960  00129C  5C4C               	subwf	_number,w,c
  2961  00129E  A0D8               	btfss	status,0,c
  2962  0012A0  D01D               	goto	i2l401
  2963  0012A2                     i2u84_40:
  2964                           
  2965                           ;main.c: 137:         decimal_1 = number / 10;
  2966  0012A2  C04C  F001         	movff	_number,i2___lwdiv@dividend
  2967  0012A6  C04D  F002         	movff	_number+1,i2___lwdiv@dividend+1
  2968  0012AA  0E00               	movlw	0
  2969  0012AC  6E04               	movwf	i2___lwdiv@divisor+1,c
  2970  0012AE  0E0A               	movlw	10
  2971  0012B0  6E03               	movwf	i2___lwdiv@divisor,c
  2972  0012B2  EC23  F00B         	call	i2___lwdiv	;wreg free
  2973  0012B6  C001  F0D4         	movff	?i2___lwdiv,_decimal_1
  2974  0012BA  C002  F0D5         	movff	?i2___lwdiv+1,_decimal_1+1
  2975                           
  2976                           ;main.c: 138:         decimal_2 = number % 10;
  2977  0012BE  C04C  F001         	movff	_number,___lwmod@dividend
  2978  0012C2  C04D  F002         	movff	_number+1,___lwmod@dividend+1
  2979  0012C6  0E00               	movlw	0
  2980  0012C8  6E04               	movwf	___lwmod@divisor+1,c
  2981  0012CA  0E0A               	movlw	10
  2982  0012CC  6E03               	movwf	___lwmod@divisor,c
  2983  0012CE  EC4C  F00B         	call	___lwmod	;wreg free
  2984  0012D2  C001  F0D2         	movff	?___lwmod,_decimal_2
  2985  0012D6  C002  F0D3         	movff	?___lwmod+1,_decimal_2+1
  2986                           
  2987                           ;main.c: 139:     } else {
  2988  0012DA  D008               	goto	i2l1797
  2989  0012DC                     i2l401:
  2990                           
  2991                           ;main.c: 140:         decimal_2 = number;
  2992  0012DC  C04C  F0D2         	movff	_number,_decimal_2
  2993  0012E0  C04D  F0D3         	movff	_number+1,_decimal_2+1
  2994                           
  2995                           ;main.c: 141:         decimal_1 = empty;
  2996  0012E4  C0FA  F0D4         	movff	_empty,_decimal_1
  2997  0012E8  C0FB  F0D5         	movff	_empty+1,_decimal_1+1
  2998  0012EC                     i2l1797:
  2999                           
  3000                           ;main.c: 146:     if (flipflop == 0) {
  3001  0012EC  0100               	movlb	0	; () banked
  3002  0012EE  51D6               	movf	_flipflop& (0+255),w,b
  3003  0012F0  11D7               	iorwf	(_flipflop+1)& (0+255),w,b
  3004  0012F2  A4D8               	btfss	status,2,c
  3005  0012F4  D013               	goto	i2l1805
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;main.c: 147:         PORTC = 0b00000010;
  3009  0012F6  0E02               	movlw	2
  3010  0012F8  6E82               	movwf	3970,c	;volatile
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;main.c: 148:         PORTA = get7seg[decimal_1];
  3014  0012FA  0E01               	movlw	low _get7seg
  3015  0012FC  25D4               	addwf	_decimal_1& (0+255),w,b
  3016  0012FE  6EF6               	movwf	tblptrl,c
  3017  001300  0E10               	movlw	high _get7seg
  3018  001302  21D5               	addwfc	(_decimal_1+1)& (0+255),w,b
  3019  001304  6EF7               	movwf	tblptrh,c
  3020  001306                     	if	1	;There are 3 active tblptr bytes
  3021  001306  6AF8               	clrf	tblptru,c
  3022  001308  0E00               	movlw	low (__mediumconst shr (0+16))
  3023  00130A  22F8               	addwfc	tblptru,f,c
  3024  00130C                     	endif
  3025  00130C  0008               	tblrd		*
  3026  00130E  CFF5 FF80          	movff	tablat,3968	;volatile
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;main.c: 149:         flipflop = 1;
  3030  001312  0E00               	movlw	0
  3031  001314  6FD7               	movwf	(_flipflop+1)& (0+255),b
  3032  001316  0E01               	movlw	1
  3033  001318  6FD6               	movwf	_flipflop& (0+255),b
  3034                           
  3035                           ;main.c: 150:     } else {
  3036  00131A  0012               	return	
  3037  00131C                     i2l1805:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;main.c: 151:         PORTC = 0b00000001;
  3041  00131C  0E01               	movlw	1
  3042  00131E  6E82               	movwf	3970,c	;volatile
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;main.c: 152:         PORTA = get7seg[decimal_2];
  3046  001320  0E01               	movlw	low _get7seg
  3047  001322  25D2               	addwf	_decimal_2& (0+255),w,b
  3048  001324  6EF6               	movwf	tblptrl,c
  3049  001326  0E10               	movlw	high _get7seg
  3050  001328  21D3               	addwfc	(_decimal_2+1)& (0+255),w,b
  3051  00132A  6EF7               	movwf	tblptrh,c
  3052  00132C                     	if	1	;There are 3 active tblptr bytes
  3053  00132C  6AF8               	clrf	tblptru,c
  3054  00132E  0E00               	movlw	low (__mediumconst shr (0+16))
  3055  001330  22F8               	addwfc	tblptru,f,c
  3056  001332                     	endif
  3057  001332  0008               	tblrd		*
  3058  001334  CFF5 FF80          	movff	tablat,3968	;volatile
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;main.c: 153:         flipflop = 0;
  3062  001338  0E00               	movlw	0
  3063  00133A  6FD7               	movwf	(_flipflop+1)& (0+255),b
  3064  00133C  0E00               	movlw	0
  3065  00133E  6FD6               	movwf	_flipflop& (0+255),b
  3066                           
  3067                           ; BSR set to: 0
  3068  001340  0012               	return		;funcret
  3069  001342                     __end_of_displayController:
  3070                           	opt callstack 0
  3071                           
  3072 ;; *************** function i2___lwdiv *****************
  3073 ;; Defined at:
  3074 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  dividend        2    0[COMRAM] unsigned int 
  3077 ;;  divisor         2    2[COMRAM] unsigned int 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  3080 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  2    0[COMRAM] unsigned int 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;Total ram usage:        7 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_displayController
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text29
  3104  001646                     __ptext29:
  3105                           	opt callstack 0
  3106  001646                     i2___lwdiv:
  3107                           	opt callstack 19
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;incstack = 0
  3111  001646  0E00               	movlw	0
  3112  001648  6E06               	movwf	i2___lwdiv@quotient+1,c
  3113  00164A  0E00               	movlw	0
  3114  00164C  6E05               	movwf	i2___lwdiv@quotient,c
  3115  00164E  5003               	movf	i2___lwdiv@divisor,w,c
  3116  001650  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  3117  001652  B4D8               	btfsc	status,2,c
  3118  001654  D01C               	goto	i2l964
  3119  001656  0E01               	movlw	1
  3120  001658  6E07               	movwf	i2___lwdiv@counter,c
  3121  00165A  D004               	goto	i2l1757
  3122  00165C                     i2l1755:
  3123  00165C  90D8               	bcf	status,0,c
  3124  00165E  3603               	rlcf	i2___lwdiv@divisor,f,c
  3125  001660  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  3126  001662  2A07               	incf	i2___lwdiv@counter,f,c
  3127  001664                     i2l1757:
  3128  001664  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  3129  001666  D7FA               	goto	i2l1755
  3130  001668                     i2u81_40:
  3131  001668  90D8               	bcf	status,0,c
  3132  00166A  3605               	rlcf	i2___lwdiv@quotient,f,c
  3133  00166C  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  3134  00166E  5003               	movf	i2___lwdiv@divisor,w,c
  3135  001670  5C01               	subwf	i2___lwdiv@dividend,w,c
  3136  001672  5004               	movf	i2___lwdiv@divisor+1,w,c
  3137  001674  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  3138  001676  A0D8               	btfss	status,0,c
  3139  001678  D005               	goto	i2l1767
  3140  00167A  5003               	movf	i2___lwdiv@divisor,w,c
  3141  00167C  5E01               	subwf	i2___lwdiv@dividend,f,c
  3142  00167E  5004               	movf	i2___lwdiv@divisor+1,w,c
  3143  001680  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  3144  001682  8005               	bsf	i2___lwdiv@quotient,0,c
  3145  001684                     i2l1767:
  3146  001684  90D8               	bcf	status,0,c
  3147  001686  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  3148  001688  3203               	rrcf	i2___lwdiv@divisor,f,c
  3149  00168A  2E07               	decfsz	i2___lwdiv@counter,f,c
  3150  00168C  D7ED               	goto	i2u81_40
  3151  00168E                     i2l964:
  3152  00168E  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  3153  001692  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  3154  001696  0012               	return		;funcret
  3155  001698                     __end_ofi2___lwdiv:
  3156                           	opt callstack 0
  3157                           
  3158 ;; *************** function ___lwmod *****************
  3159 ;; Defined at:
  3160 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  dividend        2    0[COMRAM] unsigned int 
  3163 ;;  divisor         2    2[COMRAM] unsigned int 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  counter         1    4[COMRAM] unsigned char 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  2    0[COMRAM] unsigned int 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;Total ram usage:        5 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_displayController
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text30
  3189  001698                     __ptext30:
  3190                           	opt callstack 0
  3191  001698                     ___lwmod:
  3192                           	opt callstack 19
  3193                           
  3194                           ;incstack = 0
  3195  001698  5003               	movf	___lwmod@divisor,w,c
  3196  00169A  1004               	iorwf	___lwmod@divisor+1,w,c
  3197  00169C  B4D8               	btfsc	status,2,c
  3198  00169E  D018               	goto	i2l974
  3199  0016A0  0E01               	movlw	1
  3200  0016A2  6E05               	movwf	___lwmod@counter,c
  3201  0016A4  D004               	goto	i2l1739
  3202  0016A6                     i2l1737:
  3203  0016A6  90D8               	bcf	status,0,c
  3204  0016A8  3603               	rlcf	___lwmod@divisor,f,c
  3205  0016AA  3604               	rlcf	___lwmod@divisor+1,f,c
  3206  0016AC  2A05               	incf	___lwmod@counter,f,c
  3207  0016AE                     i2l1739:
  3208  0016AE  AE04               	btfss	___lwmod@divisor+1,7,c
  3209  0016B0  D7FA               	goto	i2l1737
  3210  0016B2                     i2u78_40:
  3211  0016B2  5003               	movf	___lwmod@divisor,w,c
  3212  0016B4  5C01               	subwf	___lwmod@dividend,w,c
  3213  0016B6  5004               	movf	___lwmod@divisor+1,w,c
  3214  0016B8  5802               	subwfb	___lwmod@dividend+1,w,c
  3215  0016BA  A0D8               	btfss	status,0,c
  3216  0016BC  D004               	goto	i2l1745
  3217  0016BE  5003               	movf	___lwmod@divisor,w,c
  3218  0016C0  5E01               	subwf	___lwmod@dividend,f,c
  3219  0016C2  5004               	movf	___lwmod@divisor+1,w,c
  3220  0016C4  5A02               	subwfb	___lwmod@dividend+1,f,c
  3221  0016C6                     i2l1745:
  3222  0016C6  90D8               	bcf	status,0,c
  3223  0016C8  3204               	rrcf	___lwmod@divisor+1,f,c
  3224  0016CA  3203               	rrcf	___lwmod@divisor,f,c
  3225  0016CC  2E05               	decfsz	___lwmod@counter,f,c
  3226  0016CE  D7F1               	goto	i2u78_40
  3227  0016D0                     i2l974:
  3228  0016D0  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3229  0016D4  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3230  0016D8  0012               	return		;funcret
  3231  0016DA                     __end_of___lwmod:
  3232                           	opt callstack 0
  3233                           
  3234 ;; *************** function _EUSART1_Transmit_ISR *****************
  3235 ;; Defined at:
  3236 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  1    wreg      void 
  3243 ;; Registers used:
  3244 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;Total ram usage:        0 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_EUSART1_Initialize
  3260 ;;		_INTERRUPT_InterruptManager
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text31
  3265  001798                     __ptext31:
  3266                           	opt callstack 0
  3267  001798                     _EUSART1_Transmit_ISR:
  3268                           	opt callstack 22
  3269                           
  3270                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  3271                           
  3272                           ;incstack = 0
  3273  001798  0E40               	movlw	64
  3274  00179A  6049               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  3275  00179C  D010               	goto	i2l157
  3276                           
  3277                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  3278  00179E  0E40               	movlw	low _eusart1TxBuffer
  3279  0017A0  244A               	addwf	_eusart1TxTail,w,c	;volatile
  3280  0017A2  6ED9               	movwf	fsr2l,c
  3281  0017A4  6ADA               	clrf	fsr2h,c
  3282  0017A6  0E01               	movlw	high _eusart1TxBuffer
  3283  0017A8  22DA               	addwfc	fsr2h,f,c
  3284  0017AA  50DF               	movf	indf2,w,c
  3285  0017AC  6EAD               	movwf	4013,c	;volatile
  3286  0017AE  2A4A               	incf	_eusart1TxTail,f,c	;volatile
  3287                           
  3288                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  3289  0017B0  0E3F               	movlw	63
  3290  0017B2  644A               	cpfsgt	_eusart1TxTail,c	;volatile
  3291  0017B4  D002               	goto	i2l1945
  3292                           
  3293                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  3294  0017B6  0E00               	movlw	0
  3295  0017B8  6E4A               	movwf	_eusart1TxTail,c	;volatile
  3296  0017BA                     i2l1945:
  3297                           
  3298                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  3299  0017BA  2A49               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  3300                           
  3301                           ;mcc_generated_files/eusart1.c: 218:     }
  3302  0017BC  0012               	return	
  3303  0017BE                     i2l157:
  3304                           
  3305                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  3306  0017BE  989D               	bcf	3997,4,c	;volatile
  3307  0017C0  0012               	return		;funcret
  3308  0017C2                     __end_of_EUSART1_Transmit_ISR:
  3309                           	opt callstack 0
  3310                           
  3311 ;; *************** function _EUSART1_Receive_ISR *****************
  3312 ;; Defined at:
  3313 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    2
  3334 ;; This function calls:
  3335 ;;		Absolute function
  3336 ;;		_EUSART1_DefaultErrorHandler
  3337 ;;		_EUSART1_DefaultFramingErrorHandler
  3338 ;;		_EUSART1_DefaultOverrunErrorHandler
  3339 ;;		_EUSART1_RxDataHandler
  3340 ;; This function is called by:
  3341 ;;		_EUSART1_Initialize
  3342 ;;		_INTERRUPT_InterruptManager
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text32
  3347  001342                     __ptext32:
  3348                           	opt callstack 0
  3349  001342                     _EUSART1_Receive_ISR:
  3350                           	opt callstack 20
  3351                           
  3352                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  3353                           
  3354                           ;incstack = 0
  3355  001342  0E60               	movlw	low _eusart1RxStatusBuffer
  3356  001344  2448               	addwf	_eusart1RxHead,w,c	;volatile
  3357  001346  6ED9               	movwf	fsr2l,c
  3358  001348  6ADA               	clrf	fsr2h,c
  3359  00134A  0E00               	movlw	high _eusart1RxStatusBuffer
  3360  00134C  22DA               	addwfc	fsr2h,f,c
  3361  00134E  0E00               	movlw	0
  3362  001350  6EDF               	movwf	indf2,c
  3363                           
  3364                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  3365  001352  A4AB               	btfss	4011,2,c	;volatile
  3366  001354  D013               	goto	i2u98_49
  3367                           
  3368                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  3369  001356  0E60               	movlw	low _eusart1RxStatusBuffer
  3370  001358  2448               	addwf	_eusart1RxHead,w,c	;volatile
  3371  00135A  6ED9               	movwf	fsr2l,c
  3372  00135C  6ADA               	clrf	fsr2h,c
  3373  00135E  0E00               	movlw	high _eusart1RxStatusBuffer
  3374  001360  22DA               	addwfc	fsr2h,f,c
  3375  001362  0100               	movlb	0	; () banked
  3376  001364  82DF               	bsf	indf2,1,c
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  3380  001366  D801               	call	i2u98_48
  3381  001368  D009               	goto	i2u98_49
  3382  00136A                     i2u98_48:
  3383  00136A  0005               	push	
  3384  00136C  6EFA               	movwf	pclath,c
  3385  00136E  51DE               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  3386  001370  6EFD               	movwf	tosl,c
  3387  001372  51DF               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  3388  001374  6EFE               	movwf	tosh,c
  3389  001376  6AFF               	clrf	tosu,c
  3390  001378  50FA               	movf	pclath,w,c
  3391  00137A  0012               	return		;indir
  3392  00137C                     i2u98_49:
  3393                           
  3394                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  3395  00137C  A2AB               	btfss	4011,1,c	;volatile
  3396  00137E  D013               	goto	i2u100_49
  3397                           
  3398                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  3399  001380  0E60               	movlw	low _eusart1RxStatusBuffer
  3400  001382  2448               	addwf	_eusart1RxHead,w,c	;volatile
  3401  001384  6ED9               	movwf	fsr2l,c
  3402  001386  6ADA               	clrf	fsr2h,c
  3403  001388  0E00               	movlw	high _eusart1RxStatusBuffer
  3404  00138A  22DA               	addwfc	fsr2h,f,c
  3405  00138C  0100               	movlb	0	; () banked
  3406  00138E  84DF               	bsf	indf2,2,c
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  3410  001390  D801               	call	i2u100_48
  3411  001392  D009               	goto	i2u100_49
  3412  001394                     i2u100_48:
  3413  001394  0005               	push	
  3414  001396  6EFA               	movwf	pclath,c
  3415  001398  51DC               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  3416  00139A  6EFD               	movwf	tosl,c
  3417  00139C  51DD               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  3418  00139E  6EFE               	movwf	tosh,c
  3419  0013A0  6AFF               	clrf	tosu,c
  3420  0013A2  50FA               	movf	pclath,w,c
  3421  0013A4  0012               	return		;indir
  3422  0013A6                     i2u100_49:
  3423                           
  3424                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  3425  0013A6  0E60               	movlw	low _eusart1RxStatusBuffer
  3426  0013A8  2448               	addwf	_eusart1RxHead,w,c	;volatile
  3427  0013AA  6ED9               	movwf	fsr2l,c
  3428  0013AC  6ADA               	clrf	fsr2h,c
  3429  0013AE  0E00               	movlw	high _eusart1RxStatusBuffer
  3430  0013B0  22DA               	addwfc	fsr2h,f,c
  3431  0013B2  50DF               	movf	indf2,w,c
  3432  0013B4  B4D8               	btfsc	status,2,c
  3433  0013B6  D00C               	goto	i2l1965
  3434                           
  3435                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  3436  0013B8  D801               	call	i2u102_48
  3437  0013BA  0012               	return	
  3438  0013BC                     i2u102_48:
  3439  0013BC  0005               	push	
  3440  0013BE  6EFA               	movwf	pclath,c
  3441  0013C0  0100               	movlb	0	; () banked
  3442  0013C2  51DA               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  3443  0013C4  6EFD               	movwf	tosl,c
  3444  0013C6  51DB               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  3445  0013C8  6EFE               	movwf	tosh,c
  3446  0013CA  6AFF               	clrf	tosu,c
  3447  0013CC  50FA               	movf	pclath,w,c
  3448  0013CE  0012               	return		;indir
  3449  0013D0                     i2l1965:
  3450                           
  3451                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  3452  0013D0  EC07  F00C         	call	_EUSART1_RxDataHandler	;wreg free
  3453  0013D4  0012               	return		;funcret
  3454  0013D6                     __end_of_EUSART1_Receive_ISR:
  3455                           	opt callstack 0
  3456                           
  3457 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  3458 ;; Defined at:
  3459 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      void 
  3466 ;; Registers used:
  3467 ;;		None
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;Total ram usage:        0 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_EUSART1_Initialize
  3483 ;;		_EUSART1_Receive_ISR
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text33
  3488  0018FE                     __ptext33:
  3489                           	opt callstack 0
  3490  0018FE                     _EUSART1_DefaultOverrunErrorHandler:
  3491                           	opt callstack 21
  3492                           
  3493                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  3494                           
  3495                           ;incstack = 0
  3496  0018FE  98AB               	bcf	4011,4,c	;volatile
  3497                           
  3498                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  3499  001900  88AB               	bsf	4011,4,c	;volatile
  3500  001902  0012               	return		;funcret
  3501  001904                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  3502                           	opt callstack 0
  3503                           
  3504 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  3505 ;; Defined at:
  3506 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		None
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_EUSART1_Initialize
  3530 ;;		_EUSART1_Receive_ISR
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text34
  3535  001918                     __ptext34:
  3536                           	opt callstack 0
  3537  001918                     _EUSART1_DefaultFramingErrorHandler:
  3538                           	opt callstack 21
  3539                           
  3540                           ;incstack = 0
  3541  001918  0012               	return		;funcret
  3542  00191A                     __end_of_EUSART1_DefaultFramingErrorHandler:
  3543                           	opt callstack 0
  3544                           
  3545 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  3546 ;; Defined at:
  3547 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    1
  3568 ;; This function calls:
  3569 ;;		_EUSART1_RxDataHandler
  3570 ;; This function is called by:
  3571 ;;		_EUSART1_Initialize
  3572 ;;		_EUSART1_Receive_ISR
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text35
  3577  001904                     __ptext35:
  3578                           	opt callstack 0
  3579  001904                     _EUSART1_DefaultErrorHandler:
  3580                           	opt callstack 20
  3581                           
  3582                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  3583                           
  3584                           ;incstack = 0
  3585  001904  EC07  F00C         	call	_EUSART1_RxDataHandler	;wreg free
  3586  001908  0012               	return		;funcret
  3587  00190A                     __end_of_EUSART1_DefaultErrorHandler:
  3588                           	opt callstack 0
  3589                           
  3590 ;; *************** function _EUSART1_RxDataHandler *****************
  3591 ;; Defined at:
  3592 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;Total ram usage:        0 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_EUSART1_Receive_ISR
  3616 ;;		_EUSART1_DefaultErrorHandler
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text36
  3621  00180E                     __ptext36:
  3622                           	opt callstack 0
  3623  00180E                     _EUSART1_RxDataHandler:
  3624                           	opt callstack 21
  3625                           
  3626                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  3627                           
  3628                           ;incstack = 0
  3629  00180E  0E00               	movlw	low _eusart1RxBuffer
  3630  001810  2448               	addwf	_eusart1RxHead,w,c	;volatile
  3631  001812  6ED9               	movwf	fsr2l,c
  3632  001814  6ADA               	clrf	fsr2h,c
  3633  001816  0E01               	movlw	high _eusart1RxBuffer
  3634  001818  22DA               	addwfc	fsr2h,f,c
  3635  00181A  CFAE FFDF          	movff	4014,indf2	;volatile
  3636  00181E  2A48               	incf	_eusart1RxHead,f,c	;volatile
  3637                           
  3638                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3639  001820  0E3F               	movlw	63
  3640  001822  6448               	cpfsgt	_eusart1RxHead,c	;volatile
  3641  001824  D002               	goto	i2l1789
  3642                           
  3643                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  3644  001826  0E00               	movlw	0
  3645  001828  6E48               	movwf	_eusart1RxHead,c	;volatile
  3646  00182A                     i2l1789:
  3647                           
  3648                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  3649  00182A  2A46               	incf	_eusart1RxCount,f,c	;volatile
  3650  00182C  0012               	return		;funcret
  3651  00182E                     __end_of_EUSART1_RxDataHandler:
  3652                           	opt callstack 0
  3653                           
  3654 ;; *************** function _ADC_ISR *****************
  3655 ;; Defined at:
  3656 ;;		line 135 in file "mcc_generated_files/adc.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		None
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_INTERRUPT_InterruptManager
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text37
  3684  001912                     __ptext37:
  3685                           	opt callstack 0
  3686  001912                     _ADC_ISR:
  3687                           	opt callstack 22
  3688                           
  3689                           ;mcc_generated_files/adc.c: 138:     PIR1bits.ADIF = 0;
  3690                           
  3691                           ;incstack = 0
  3692  001912  9C9E               	bcf	3998,6,c	;volatile
  3693  001914  0012               	return		;funcret
  3694  001916                     __end_of_ADC_ISR:
  3695                           	opt callstack 0
  3696                           
  3697                           	psect	text38
  3698  000000                     __ptext38:
  3699                           	opt callstack 0
  3700                           
  3701                           	psect	rparam
  3702  0000                     
  3703                           	psect	temp
  3704  000050                     btemp:
  3705                           	opt callstack 0
  3706  000050                     	ds	1
  3707  0000                     int$flags	set	btemp
  3708  0000                     wtemp8	set	btemp+1
  3709  0000                     ttemp5	set	btemp+1
  3710  0000                     ttemp6	set	btemp+4
  3711  0000                     ttemp7	set	btemp+8
  3712                           tosu	equ	0xFFF
  3713                           tosh	equ	0xFFE
  3714                           tosl	equ	0xFFD
  3715                           stkptr	equ	0xFFC
  3716                           pclatu	equ	0xFFB
  3717                           pclath	equ	0xFFA
  3718                           pcl	equ	0xFF9
  3719                           tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           prodh	equ	0xFF4
  3724                           prodl	equ	0xFF3
  3725                           indf0	equ	0xFEF
  3726                           postinc0	equ	0xFEE
  3727                           postdec0	equ	0xFED
  3728                           preinc0	equ	0xFEC
  3729                           plusw0	equ	0xFEB
  3730                           fsr0h	equ	0xFEA
  3731                           fsr0l	equ	0xFE9
  3732                           wreg	equ	0xFE8
  3733                           indf1	equ	0xFE7
  3734                           postinc1	equ	0xFE6
  3735                           postdec1	equ	0xFE5
  3736                           preinc1	equ	0xFE4
  3737                           plusw1	equ	0xFE3
  3738                           fsr1h	equ	0xFE2
  3739                           fsr1l	equ	0xFE1
  3740                           bsr	equ	0xFE0
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           postdec2	equ	0xFDD
  3744                           preinc2	equ	0xFDC
  3745                           plusw2	equ	0xFDB
  3746                           fsr2h	equ	0xFDA
  3747                           fsr2l	equ	0xFD9
  3748                           status	equ	0xFD8


Data Sizes:
    Strings     21
    Constant    12
    Data        13
    BSS         271
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     64      79
    BANK0           160     15     156
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S1521_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayController(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayController(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _displayController->i2___lwdiv

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    7953
                                             10 BANK0      5     5      0
                  _ADC_GetConversion
                     _ADC_Initialize
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                    _TMR2_Initialize
           _TMR2_SetInterruptHandler
                            ___lwdiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5477
                                              2 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5306
                                             58 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6    4836
                                             48 COMRAM    10     4      6
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2632
                                             26 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     290
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1497
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                             16 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      62
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     531
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     816
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      31
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           8     8      0     525
                                              7 COMRAM     8     8      0
                   Absolute function *
                            _ADC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR2_ISR                                             0     0      0     525
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (10) _TMR2_CallBack                                       0     0      0     525
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                  _displayController *
 ---------------------------------------------------------------------------------
 (11) _displayController                                   0     0      0     525
                            ___lwmod
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_Initialize
     _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   ___lwdiv
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART1_Write
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADC_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _displayController *
         ___lwmod
         i2___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     40      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16B      12        0.0%
DATA                 0      0     16B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb 01 17:05:17 2020

              __end_of_TMR2_SetInterruptHandler 18C2                        _eusart1TxBufferRemaining 0049  
                                            l36 1728                              i2___lwdiv@dividend 0001  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                                             l221 18A8  
                                           l145 16EC                                             l444 11D0  
                                           l964 163C                                    __CFG_CPB$OFF 000000  
                                           _PR2 000FBB                                    __CFG_CPD$OFF 000000  
                               __end_of_ADC_ISR 1916                                             _tmp 0044  
                               _TMR2_Initialize 182E                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l2101 1778                                            l2103 177C  
                                          l2131 1200                                            l2141 1244  
                                          l2117 1194                                            l2303 1632  
                                          l2135 121E                                            l2127 11E8  
                                          l2081 170C                                            l2065 16DC  
                                          l2145 1260                                            l2091 1548  
                                          l2149 1278                                            l2253 15B0  
                                          l2079 170A                                            l2255 15D6  
                                          l2327 13FE                                            l2185 1112  
                                          l2291 160A                                            l2179 10D4  
                                          l2195 1134                                            l2293 1612  
                                          l2189 111C                                            STR_1 100D  
                                          u1220 1540                                            u1310 1214  
                                          u1240 1588                                            u1420 1616  
                                          u1340 128C                                            u1261 1174  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _TMR2 000FBC  
                                          _WPUB 000F61                                   _EUSART1_Write 16DA  
                                          _dbuf 00A0                                            _main 13D6  
                                          _prec 00CE                                            _nout 00CA  
                                          fsr1h 000FE2                              i2___lwdiv@quotient 0005  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          _stoa 116A                                            btemp 0050  
                                 __CFG_BORV$190 000000                                            start 009E  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 18AE  
                         _eusart1RxStatusBuffer 0060                                           ?_main 0001  
                                         ?_stoa 001B                                           _T2CON 000FBA  
                                __CFG_DEBUG$OFF 000000                                 __end_of___lwdiv 1646  
                               __end_of___lwmod 16DA                                           i2l401 12DC  
                                         i2l157 17BE                                           i2l281 0052  
                                         i2l282 007A                                           i2l283 0070  
                                         i2l279 003A                                           i2l964 168E  
                                         i2l974 16D0                                    vfpfcnvrt@fmt 0033  
                                         _PORTA 000F80                                           _PORTC 000F82  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                 __end_of_get7seg 100D  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 1798                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR2_ISR 180E                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _flags 00D0  
                                         _index 0043                                           _empty 00FA  
                                         _fputc 1530                              __CFG_MCLRE$EXTMCLR 000000  
                                         _width 00CC                                           _putch 18AE  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         tablat 000FF5                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 0027  
                                         stoa@l 002F                                           stoa@p 002D  
                                         stoa@s 001D                                           stoa@w 0029  
                                         ttemp5 0051                                           ttemp6 0054  
                                         ttemp7 0058                                           status 000FD8  
                                         wtemp8 0051                                  __CFG_HFOFST$ON 000000  
    __end_of_EUSART1_DefaultFramingErrorHandler 191A     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 1918                                  __CFG_PBADEN$ON 000000  
                            __size_ofi2___lwdiv 0052                                 __initialization 14C2  
                    __end_of_EUSART1_Initialize 14C2                                    __end_of_main 144E  
                                  __end_of_stoa 1296                         __end_of_TMR2_Initialize 184C  
                                     ??_ADC_ISR 0001                     ?_INTERRUPT_InterruptManager 0001  
                      _TMR2_SetInterruptHandler 18B8                                          ??_main 0041  
                                        ??_stoa 001F                                   __activetblptr 000003  
                         ?_EUSART1_Transmit_ISR 0001                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0012                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          i2l1805 131C  
                                __CFG_WDTEN$OFF 000000                                          i2l1745 16C6  
                                        i2l1737 16A6                                          i2l1739 16AE  
                                        i2l1755 165C                                          i2l1757 1664  
                                        i2l1767 1684                                          i2l1945 17BA  
                                        i2l1789 182A                                          i2l1965 13D0  
                                        i2l1797 12EC                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 00E4  
                                __CFG_STVREN$ON 000000                                       ??___lwdiv 0014  
                                     ??___lwmod 0005                        ?_EUSART1_SetErrorHandler 0010  
                                        clear_0 1508                                          clear_1 1514  
                                        clear_2 1520                                          _number 004C  
                                        _printf 17C2                ??_EUSART1_SetOverrunErrorHandler 0012  
               ?_EUSART1_SetOverrunErrorHandler 0010                                          _string 00C0  
                                        _strlen 176E                                          fputc@c 0012  
                                  __pdataCOMRAM 004C                               __end_ofi2___lwdiv 1698  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                      ADC_GetConversion@channel 0014                                          stoa@cp 002B  
                                        stoa@fp 001B                                __end_of_vfprintf 15F4  
                               ??_EUSART1_Write 0010        TMR2_SetInterruptHandler@InterruptHandler 0010  
                               _eusart1RxBuffer 0100                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0140                               _SYSTEM_Initialize 186A  
                                    __accesstop 0060                         __end_of__initialization 1526  
                         __end_of_TMR2_CallBack 186A                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 0020  
                 __end_of_EUSART1_RxDataHandler 182E                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 18F4                             ??_SYSTEM_Initialize 0012  
                                     ?_TMR2_ISR 0001                                   __end_of_fputc 159C  
                                 __end_of_putch 18B8                                ?_TMR2_Initialize 0001  
                        ??_EUSART1_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 13D6  
                                       ??_fputc 0016                       __end_of_SYSTEM_Initialize 1884  
                                       ??_putch 0011                                   _eusart1RxHead 0048  
                                 _eusart1TxHead 004B                                   _eusart1RxTail 0047  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                 _eusart1TxTail 004A               _EUSART1_TxDefaultInterruptHandler 00E2  
               ??_EUSART1_SetRxInterruptHandler 0012                                 __CFG_PLLCFG$OFF 000000  
               __end_of_EUSART1_SetErrorHandler 18F4                              __CFG_CCP2MX$PORTC1 000000  
                                    ??_TMR2_ISR 0008                              __CFG_CCP3MX$PORTB5 000000  
                                       _ADC_ISR 1912                                         ?_printf 00E6  
                       __size_of_ADC_Initialize 0018                                         ?_strlen 0010  
        __end_of_EUSART1_SetFramingErrorHandler 18EA         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 18E0                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0146  
                                       _OSCTUNE 000F9B                                         i2u81_40 1668  
                                       i2u90_48 1858                                         _SPBRGH1 000FB0  
                                       i2u84_40 12A2                                         i2u78_40 16B2  
                                       i2u98_48 136A                                         i2u98_49 137C  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                      ??_TMR2_SetInterruptHandler 0012  
                                       ___lwdiv 15F4                                         ___lwmod 1698  
                                     ?_vfprintf 003B                                    __psmallconst 1000  
                                       __pcinit 14C2                                         _get7seg 1001  
                                       __ramtop 1000                                         __ptext0 13D6  
                                       __ptext1 17C2                                         __ptext2 159C  
                                       __ptext3 1024                                         __ptext4 116A  
                                       __ptext5 176E                                         __ptext6 1530  
                                       __ptext7 18AE                                         __ptext8 16DA  
                                       __ptext9 15F4                                 __size_of_printf 0028  
                               __size_of_strlen 002A                           _OSCILLATOR_Initialize 189C  
                                     _T2CONbits 000FBA                              _EUSART1_Initialize 144E  
                      ??_PIN_MANAGER_Initialize 0010                   ??_EUSART1_DefaultErrorHandler 0001  
                    __size_of_SYSTEM_Initialize 001A                            end_of_initialization 1526  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0014  
                   _EUSART1_OverrunErrorHandler 00DC           __end_of_EUSART1_SetRxInterruptHandler 18D6  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 18CC  
                             __end_of_vfpfcnvrt 116A                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                                    ??_vfprintf 0041                            ??_EUSART1_Initialize 0012  
                                       strlen@a 0012                                         strlen@s 0010  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0010  
                             i2___lwdiv@divisor 0003                                       i2___lwdiv 1646  
                             i2___lwdiv@counter 0007                               _displayController 1296  
                            ?_displayController 0001            __size_of_EUSART1_DefaultErrorHandler 0006  
                  __end_of_INTERRUPT_Initialize 1912            __end_of_TMR2_DefaultInterruptHandler 1918  
         __size_of_TMR2_DefaultInterruptHandler 0002                    _TMR2_DefaultInterruptHandler 1916  
                           ??_displayController 0008                                     vfpfcnvrt@ap 0035  
                                   vfpfcnvrt@cp 0039                                     vfpfcnvrt@fp 0031  
                                 __pidataCOMRAM 190A                               __size_of_TMR2_ISR 0024  
                                _ADC_Initialize 1884                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 17EA                                  __end_of_strlen 1798  
                           start_initialization 14C2                 __size_of_PIN_MANAGER_Initialize 002E  
 EUSART1_SetRxInterruptHandler@interruptHandler 0010   EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                                   putch@txData 0011                                      ?i2___lwdiv 0001  
                         __end_of_EUSART1_Write 1710                       __end_of_displayController 1342  
                                   vfprintf@fmt 003D                           _EUSART1_RxDataHandler 180E  
                ?_EUSART1_SetRxInterruptHandler 0010                          __end_of_ADC_Initialize 189C  
                                   __pdataBANK0 00F3                                        ?_ADC_ISR 0001  
                 ?_TMR2_DefaultInterruptHandler 0001                                        ??_printf 0041  
                                      ??_strlen 0012                                  _eusart1RxCount 0046  
                        __size_of_TMR2_CallBack 001E                                     __pbssCOMRAM 0041  
             _EUSART1_RxDefaultInterruptHandler 00E0                   __size_of_EUSART1_Transmit_ISR 002A  
                                 __pcstackBANK0 00E4                        __size_of_TMR2_Initialize 001E  
               ??_EUSART1_SetTxInterruptHandler 0012                ??_EUSART1_SetFramingErrorHandler 0012  
               ?_EUSART1_SetFramingErrorHandler 0010                    __size_of_EUSART1_Receive_ISR 0094  
                                     _decimal_1 00D4                                       _decimal_2 00D2  
                              ___lwdiv@dividend 0010                          _PIN_MANAGER_Initialize 1740  
                                     __pintcode 0008                                        ?___lwdiv 0010  
                                      ?___lwmod 0001                                 ?_ADC_Initialize 0001  
                  ??_INTERRUPT_InterruptManager 0008                                __CFG_PRICLKEN$ON 000000  
                                     _display_1 004F                                       _display_2 004E  
                             __size_of_vfprintf 0058                                     __smallconst 1000  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 1904  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 18FE  
                          _EUSART1_ErrorHandler 00DA                         _EUSART1_SetErrorHandler 18EA  
                              ___lwdiv@quotient 0015                                  __size_of_fputc 006C  
                                   ??i2___lwdiv 0005                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 190E                      __size_of_displayController 00AC  
       EUSART1_SetErrorHandler@interruptHandler 0010                                        _LATBbits 000F8A  
                                 _TMR2_CallBack 184C                                        _PIE1bits 000F9D  
                                      i2u100_48 1394                                        i2u100_49 13A6  
                                      i2u102_48 13BC                                        i2u103_40 17FE  
                                      i2u112_48 0044                                        i2u115_48 005C  
           __size_of_INTERRUPT_InterruptManager 0096                                        _PIR1bits 000F9E  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                              __CFG_WDTPS$32768 000000                                        _TMR2_ISR 17EA  
                                     _vfpfcnvrt 1024                                __size_of_ADC_ISR 0004  
                                    _ADCON0bits 000FC2                  ??_TMR2_DefaultInterruptHandler 0001  
             __size_of_TMR2_SetInterruptHandler 000A                       ?_TMR2_SetInterruptHandler 0010  
                                   _INTCON2bits 000FF1                                       copy_data0 14D6  
                                     copy_data1 14F6                           ?_INTERRUPT_Initialize 0001  
                             ??_TMR2_Initialize 0012                                  ?_TMR2_CallBack 0001  
         __end_of_EUSART1_SetTxInterruptHandler 18CC          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 18C2                                        __Hrparam 0000  
                                    vfprintf@ap 003F                                        __Lrparam 0000  
                                    vfprintf@fp 003B                               _ADC_GetConversion 1710  
                            __CFG_BOREN$SBORDIS 000000                               __CFG_P2BMX$PORTB5 000000  
                       ??_OSCILLATOR_Initialize 0010                              ?_ADC_GetConversion 0010  
                   __size_of_EUSART1_Initialize 0074                                      ?_vfpfcnvrt 0031  
                              __size_of___lwdiv 0052                                __size_of___lwmod 0042  
                     ??_EUSART1_SetErrorHandler 0012             __end_of_EUSART1_DefaultErrorHandler 190A  
                   _EUSART1_DefaultErrorHandler 1904                             ??_ADC_GetConversion 0012  
                               ___lwdiv@divisor 0012                                 ___lwdiv@counter 0014  
                                      __ptext10 186A                                        __ptext11 182E  
                                      __ptext20 18E0                                        __ptext12 18B8  
                                      __ptext21 18EA                                        __ptext13 1740  
                                      __ptext30 1698                                        __ptext22 1884  
                                      __ptext14 189C                                        __ptext31 1798  
                                      __ptext23 1710                                        __ptext15 190E  
                                      __ptext32 1342                                        __ptext16 144E  
                                      __ptext33 18FE                                        __ptext25 17EA  
                                      __ptext17 18C2                                        __ptext34 1918  
                                      __ptext26 184C                                        __ptext18 18CC  
                                      __ptext35 1904                                        __ptext27 1916  
                                      __ptext19 18D6                                        __ptext36 180E  
                                      __ptext28 1296                                        __ptext37 1912  
                                      __ptext29 1646                                        __ptext38 0000  
                                      _flipflop 00D6                                   __size_of_main 0078  
                                 __size_of_stoa 012C                       __end_of_ADC_GetConversion 1740  
                                     stoa@F1131 00F3  EUSART1_SetOverrunErrorHandler@interruptHandler 0010  
                                      int$flags 0050                                        _vfprintf 159C  
            __end_of_INTERRUPT_InterruptManager 009E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00E6                                 main@temp_offset 00F1  
                   _EUSART1_FramingErrorHandler 00DE                             _EUSART1_Receive_ISR 1342  
                               main@temperature 00EF                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 0010                                        intlevel2 0000  
                               ??_TMR2_CallBack 0008                            ?_EUSART1_Receive_ISR 0001  
                              ___lwmod@dividend 0001                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 18E0         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 18D6                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 17C2                                ??_ADC_Initialize 0010  
                                      printf@ap 00EC  EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                ?_EUSART1_SetTxInterruptHandler 0010                                     ??_vfpfcnvrt 0037  
                                      stoa@nuls 0020                          __size_of_EUSART1_Write 0036  
                            _eusart1RxLastError 0045                                 ___lwmod@divisor 0003  
                         TMR2_ISR@CountCallBack 00D8                                 ___lwmod@counter 0005  
                             __CFG_T3CMX$PORTC0 000000                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 176E                               __CFG_FOSC$INTIO67 000000  
                         _TMR2_InterruptHandler 0041                         ??_EUSART1_RxDataHandler 0001  
                    __size_of_ADC_GetConversion 0030  
