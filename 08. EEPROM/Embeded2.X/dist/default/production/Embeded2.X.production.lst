

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Oct 22 10:00:18 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   140                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   141  0000                     
   142                           ; Version 2.05
   143                           ; Generated 20/12/2018 GMT
   144                           ; 
   145                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   146                           ; All rights reserved.
   147                           ; 
   148                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   149                           ; 
   150                           ; Redistribution and use in source and binary forms, with or without modification, are
   151                           ; permitted provided that the following conditions are met:
   152                           ; 
   153                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   154                           ;        conditions and the following disclaimer.
   155                           ; 
   156                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   157                           ;        of conditions and the following disclaimer in the documentation and/or other
   158                           ;        materials provided with the distribution.
   159                           ; 
   160                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   161                           ;        software without specific prior written permission.
   162                           ; 
   163                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   164                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   165                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   166                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   167                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   168                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   169                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   170                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   171                           ; 
   172                           ; 
   173                           ; Code-generator required, PIC18F26K22 Definitions
   174                           ; 
   175                           ; SFR Addresses
   176  0000                     
   177                           	psect	idataBANK0
   178  00756E                     __pidataBANK0:
   179                           	opt callstack 0
   180                           
   181                           ;initializer for _eepromAddress
   182  00756E  50                 	db	80
   183                           
   184                           ;initializer for _therometerAddress
   185  00756F  48                 	db	72
   186                           
   187                           	psect	idataBANK1
   188  007566                     __pidataBANK1:
   189                           	opt callstack 0
   190                           
   191                           ;initializer for _humidityTherometerAddress
   192  007566  40                 	db	64
   193                           
   194                           ;initializer for _displayAddress
   195  007567  3C                 	db	60
   196                           
   197                           ;initializer for _readHumidity
   198  007568  E5                 	db	229
   199                           
   200                           ;initializer for _readTemprature
   201  007569  E3                 	db	227
   202                           
   203                           	psect	idataBANK2
   204  007488                     __pidataBANK2:
   205                           	opt callstack 0
   206                           
   207                           ;initializer for Timer4Interrupt@F6194
   208  007488  00                 	db	0
   209  007489  02                 	db	2
   210                           
   211                           ;initializer for _customSign1
   212  00748A  80                 	db	128
   213  00748B  48                 	db	72
   214  00748C  40                 	db	64
   215  00748D  00                 	db	0
   216  00748E  01                 	db	1
   217  00748F  12                 	db	18
   218  007490  04                 	db	4
   219  007491  09                 	db	9
   220  007492  10                 	db	16
   221  007493  00                 	db	0
   222  007494  00                 	db	0
   223                           
   224                           ;initializer for _customSign0
   225  007495  80                 	db	128
   226  007496  40                 	db	64
   227  007497  40                 	db	64
   228  007498  06                 	db	6
   229  007499  09                 	db	9
   230  00749A  09                 	db	9
   231  00749B  06                 	db	6
   232  00749C  00                 	db	0
   233  00749D  00                 	db	0
   234  00749E  00                 	db	0
   235  00749F  00                 	db	0
   236                           
   237                           ;initializer for _displayInitialize
   238  0074A0  00                 	db	0
   239  0074A1  38                 	db	56
   240  0074A2  0F                 	db	15
   241  0074A3  06                 	db	6
   242  0074A4  01                 	db	1
   243  0000                     _ANSELCbits	set	3898
   244  0000                     _T4CONbits	set	3921
   245  0000                     _T4CON	set	3921
   246  0000                     _TMR4	set	3923
   247  0000                     _PR4	set	3922
   248  0000                     _ANSELA	set	3896
   249  0000                     _ANSELB	set	3897
   250  0000                     _ANSELC	set	3898
   251  0000                     _SSP1STATbits	set	4039
   252  0000                     _SSP1BUF	set	4041
   253  0000                     _SSP1CON2bits	set	4037
   254  0000                     _SSP1STAT	set	4039
   255  0000                     _SSP1CON2	set	4037
   256  0000                     _SSP1CON1	set	4038
   257  0000                     _SSP1ADD	set	4040
   258  0000                     _TRISCbits	set	3988
   259  0000                     _T2CONbits	set	4026
   260  0000                     _T2CON	set	4026
   261  0000                     _TMR2	set	4028
   262  0000                     _PR2	set	4027
   263  0000                     _PIR5bits	set	3966
   264  0000                     _PIE5bits	set	3965
   265  0000                     _PIR1bits	set	3998
   266  0000                     _RCONbits	set	4048
   267  0000                     _RCREG1	set	4014
   268  0000                     _RCSTA1bits	set	4011
   269  0000                     _TXREG1	set	4013
   270  0000                     _TXSTA1bits	set	4012
   271  0000                     _SPBRGH1	set	4016
   272  0000                     _SPBRG1	set	4015
   273  0000                     _TXSTA1	set	4012
   274  0000                     _RCSTA1	set	4011
   275  0000                     _BAUDCON1	set	4024
   276  0000                     _PIE1bits	set	3997
   277  0000                     _INTCONbits	set	4082
   278  0000                     _INTCON2bits	set	4081
   279  0000                     _WPUB	set	3937
   280  0000                     _TRISC	set	3988
   281  0000                     _TRISB	set	3987
   282  0000                     _TRISA	set	3986
   283  0000                     _LATC	set	3979
   284  0000                     _LATB	set	3978
   285  0000                     _LATA	set	3977
   286  0000                     _OSCTUNE	set	3995
   287  0000                     _OSCCON2	set	4050
   288  0000                     _OSCCON	set	4051
   289  0000                     _PLLRDY	set	32407
   290                           
   291                           	psect	smallconst
   292  001000                     __psmallconst:
   293                           	opt callstack 0
   294  001000  00                 	db	0
   295  001001                     STR_12:
   296                           
   297                           ; BSR set to: 1
   298  001001  6C                 	db	108	;'l'
   299  001002  61                 	db	97	;'a'
   300  001003  73                 	db	115	;'s'
   301  001004  74                 	db	116	;'t'
   302  001005  20                 	db	32
   303  001006  53                 	db	83	;'S'
   304  001007  75                 	db	117	;'u'
   305  001008  63                 	db	99	;'c'
   306  001009  63                 	db	99	;'c'
   307  00100A  65                 	db	101	;'e'
   308  00100B  73                 	db	115	;'s'
   309  00100C  73                 	db	115	;'s'
   310  00100D  66                 	db	102	;'f'
   311  00100E  75                 	db	117	;'u'
   312  00100F  6C                 	db	108	;'l'
   313  001010  20                 	db	32
   314  001011  77                 	db	119	;'w'
   315  001012  72                 	db	114	;'r'
   316  001013  69                 	db	105	;'i'
   317  001014  74                 	db	116	;'t'
   318  001015  65                 	db	101	;'e'
   319  001016  20                 	db	32
   320  001017  64                 	db	100	;'d'
   321  001018  6F                 	db	111	;'o'
   322  001019  65                 	db	101	;'e'
   323  00101A  73                 	db	115	;'s'
   324  00101B  20                 	db	32
   325  00101C  6E                 	db	110	;'n'
   326  00101D  6F                 	db	111	;'o'
   327  00101E  74                 	db	116	;'t'
   328  00101F  20                 	db	32
   329  001020  6D                 	db	109	;'m'
   330  001021  61                 	db	97	;'a'
   331  001022  74                 	db	116	;'t'
   332  001023  63                 	db	99	;'c'
   333  001024  68                 	db	104	;'h'
   334  001025  20                 	db	32
   335  001026  6C                 	db	108	;'l'
   336  001027  61                 	db	97	;'a'
   337  001028  73                 	db	115	;'s'
   338  001029  74                 	db	116	;'t'
   339  00102A  20                 	db	32
   340  00102B  61                 	db	97	;'a'
   341  00102C  74                 	db	116	;'t'
   342  00102D  74                 	db	116	;'t'
   343  00102E  65                 	db	101	;'e'
   344  00102F  6D                 	db	109	;'m'
   345  001030  70                 	db	112	;'p'
   346  001031  74                 	db	116	;'t'
   347  001032  65                 	db	101	;'e'
   348  001033  64                 	db	100	;'d'
   349  001034  20                 	db	32
   350  001035  77                 	db	119	;'w'
   351  001036  72                 	db	114	;'r'
   352  001037  69                 	db	105	;'i'
   353  001038  74                 	db	116	;'t'
   354  001039  65                 	db	101	;'e'
   355  00103A  20                 	db	32
   356  00103B  0D                 	db	13
   357  00103C  0A                 	db	10
   358  00103D  00                 	db	0
   359  00103E                     STR_2:
   360                           
   361                           ; BSR set to: 1
   362  00103E  54                 	db	84	;'T'
   363  00103F  65                 	db	101	;'e'
   364  001040  6D                 	db	109	;'m'
   365  001041  70                 	db	112	;'p'
   366  001042  65                 	db	101	;'e'
   367  001043  72                 	db	114	;'r'
   368  001044  61                 	db	97	;'a'
   369  001045  74                 	db	116	;'t'
   370  001046  75                 	db	117	;'u'
   371  001047  72                 	db	114	;'r'
   372  001048  65                 	db	101	;'e'
   373  001049  20                 	db	32
   374  00104A  6E                 	db	110	;'n'
   375  00104B  75                 	db	117	;'u'
   376  00104C  6D                 	db	109	;'m'
   377  00104D  62                 	db	98	;'b'
   378  00104E  65                 	db	101	;'e'
   379  00104F  72                 	db	114	;'r'
   380  001050  20                 	db	32
   381  001051  25                 	db	37
   382  001052  64                 	db	100	;'d'
   383  001053  20                 	db	32
   384  001054  77                 	db	119	;'w'
   385  001055  61                 	db	97	;'a'
   386  001056  73                 	db	115	;'s'
   387  001057  20                 	db	32
   388  001058  25                 	db	37
   389  001059  2E                 	db	46
   390  00105A  31                 	db	49	;'1'
   391  00105B  66                 	db	102	;'f'
   392  00105C  20                 	db	32
   393  00105D  0D                 	db	13
   394  00105E  0A                 	db	10
   395  00105F  00                 	db	0
   396  001060                     STR_4:
   397                           
   398                           ; BSR set to: 1
   399  001060  4E                 	db	78	;'N'
   400  001061  6F                 	db	111	;'o'
   401  001062  20                 	db	32
   402  001063  61                 	db	97	;'a'
   403  001064  63                 	db	99	;'c'
   404  001065  6B                 	db	107	;'k'
   405  001066  20                 	db	32
   406  001067  72                 	db	114	;'r'
   407  001068  65                 	db	101	;'e'
   408  001069  63                 	db	99	;'c'
   409  00106A  69                 	db	105	;'i'
   410  00106B  65                 	db	101	;'e'
   411  00106C  76                 	db	118	;'v'
   412  00106D  65                 	db	101	;'e'
   413  00106E  64                 	db	100	;'d'
   414  00106F  20                 	db	32
   415  001070  77                 	db	119	;'w'
   416  001071  68                 	db	104	;'h'
   417  001072  69                 	db	105	;'i'
   418  001073  6C                 	db	108	;'l'
   419  001074  65                 	db	101	;'e'
   420  001075  20                 	db	32
   421  001076  77                 	db	119	;'w'
   422  001077  72                 	db	114	;'r'
   423  001078  69                 	db	105	;'i'
   424  001079  74                 	db	116	;'t'
   425  00107A  74                 	db	116	;'t'
   426  00107B  69                 	db	105	;'i'
   427  00107C  6E                 	db	110	;'n'
   428  00107D  67                 	db	103	;'g'
   429  00107E  20                 	db	32
   430  00107F  0D                 	db	13
   431  001080  0A                 	db	10
   432  001081  00                 	db	0
   433  001082                     STR_3:
   434                           
   435                           ; BSR set to: 1
   436  001082  48                 	db	72	;'H'
   437  001083  75                 	db	117	;'u'
   438  001084  6D                 	db	109	;'m'
   439  001085  69                 	db	105	;'i'
   440  001086  64                 	db	100	;'d'
   441  001087  69                 	db	105	;'i'
   442  001088  74                 	db	116	;'t'
   443  001089  79                 	db	121	;'y'
   444  00108A  20                 	db	32
   445  00108B  6E                 	db	110	;'n'
   446  00108C  75                 	db	117	;'u'
   447  00108D  6D                 	db	109	;'m'
   448  00108E  62                 	db	98	;'b'
   449  00108F  65                 	db	101	;'e'
   450  001090  72                 	db	114	;'r'
   451  001091  20                 	db	32
   452  001092  25                 	db	37
   453  001093  64                 	db	100	;'d'
   454  001094  20                 	db	32
   455  001095  77                 	db	119	;'w'
   456  001096  61                 	db	97	;'a'
   457  001097  73                 	db	115	;'s'
   458  001098  20                 	db	32
   459  001099  25                 	db	37
   460  00109A  2E                 	db	46
   461  00109B  31                 	db	49	;'1'
   462  00109C  66                 	db	102	;'f'
   463  00109D  20                 	db	32
   464  00109E  0D                 	db	13
   465  00109F  0A                 	db	10
   466  0010A0  00                 	db	0
   467  0010A1                     STR_11:
   468                           
   469                           ; BSR set to: 1
   470  0010A1  0A                 	db	10
   471  0010A2  0D                 	db	13
   472  0010A3  20                 	db	32
   473  0010A4  64                 	db	100	;'d'
   474  0010A5  61                 	db	97	;'a'
   475  0010A6  74                 	db	116	;'t'
   476  0010A7  61                 	db	97	;'a'
   477  0010A8  20                 	db	32
   478  0010A9  6C                 	db	108	;'l'
   479  0010AA  6F                 	db	111	;'o'
   480  0010AB  67                 	db	103	;'g'
   481  0010AC  67                 	db	103	;'g'
   482  0010AD  65                 	db	101	;'e'
   483  0010AE  72                 	db	114	;'r'
   484  0010AF  20                 	db	32
   485  0010B0  69                 	db	105	;'i'
   486  0010B1  73                 	db	115	;'s'
   487  0010B2  20                 	db	32
   488  0010B3  66                 	db	102	;'f'
   489  0010B4  75                 	db	117	;'u'
   490  0010B5  6C                 	db	108	;'l'
   491  0010B6  6C                 	db	108	;'l'
   492  0010B7  20                 	db	32
   493  0010B8  0A                 	db	10
   494  0010B9  0D                 	db	13
   495  0010BA  00                 	db	0
   496  0010BB                     STR_1:
   497                           
   498                           ; BSR set to: 1
   499  0010BB  68                 	db	104	;'h'
   500  0010BC  65                 	db	101	;'e'
   501  0010BD  6C                 	db	108	;'l'
   502  0010BE  6C                 	db	108	;'l'
   503  0010BF  6F                 	db	111	;'o'
   504  0010C0  20                 	db	32
   505  0010C1  77                 	db	119	;'w'
   506  0010C2  6F                 	db	111	;'o'
   507  0010C3  72                 	db	114	;'r'
   508  0010C4  6C                 	db	108	;'l'
   509  0010C5  64                 	db	100	;'d'
   510  0010C6  0D                 	db	13
   511  0010C7  0A                 	db	10
   512  0010C8  00                 	db	0
   513  0010C9                     STR_6:
   514                           
   515                           ; BSR set to: 1
   516  0010C9  40                 	db	64	;'@'
   517  0010CA  48                 	db	72	;'H'
   518  0010CB  75                 	db	117	;'u'
   519  0010CC  6D                 	db	109	;'m'
   520  0010CD  69                 	db	105	;'i'
   521  0010CE  64                 	db	100	;'d'
   522  0010CF  69                 	db	105	;'i'
   523  0010D0  74                 	db	116	;'t'
   524  0010D1  79                 	db	121	;'y'
   525  0010D2  3A                 	db	58	;':'
   526  0010D3  00                 	db	0
   527  0010D4                     STR_5:
   528                           
   529                           ; BSR set to: 1
   530  0010D4  40                 	db	64	;'@'
   531  0010D5  54                 	db	84	;'T'
   532  0010D6  65                 	db	101	;'e'
   533  0010D7  6D                 	db	109	;'m'
   534  0010D8  70                 	db	112	;'p'
   535  0010D9  3A                 	db	58	;':'
   536  0010DA  20                 	db	32
   537  0010DB  00                 	db	0
   538  0010DC                     STR_7:
   539                           
   540                           ; BSR set to: 1
   541  0010DC  40                 	db	64	;'@'
   542  0010DD  25                 	db	37
   543  0010DE  2E                 	db	46
   544  0010DF  31                 	db	49	;'1'
   545  0010E0  66                 	db	102	;'f'
   546  0010E1  00                 	db	0
   547  0010E2                     STR_13:
   548                           
   549                           ; BSR set to: 1
   550  0010E2  49                 	db	73	;'I'
   551  0010E3  4E                 	db	78	;'N'
   552  0010E4  46                 	db	70	;'F'
   553  0010E5  00                 	db	0
   554  0010E6                     STR_17:
   555                           
   556                           ; BSR set to: 1
   557  0010E6  4E                 	db	78	;'N'
   558  0010E7  41                 	db	65	;'A'
   559  0010E8  4E                 	db	78	;'N'
   560  0010E9  00                 	db	0
   561  0010EA                     STR_14:
   562                           
   563                           ; BSR set to: 1
   564  0010EA  69                 	db	105	;'i'
   565  0010EB  6E                 	db	110	;'n'
   566  0010EC  66                 	db	102	;'f'
   567  0010ED  00                 	db	0
   568  0010EE                     STR_18:
   569                           
   570                           ; BSR set to: 1
   571  0010EE  6E                 	db	110	;'n'
   572  0010EF  61                 	db	97	;'a'
   573  0010F0  6E                 	db	110	;'n'
   574  0010F1  00                 	db	0
   575  0010F2                     STR_8:
   576                           
   577                           ; BSR set to: 1
   578  0010F2  40                 	db	64	;'@'
   579  0010F3  20                 	db	32
   580  0010F4  20                 	db	32
   581  0010F5  00                 	db	0
   582  0010F6                     STR_21:
   583                           
   584                           ; BSR set to: 1
   585  0010F6  6C                 	db	108	;'l'
   586  0010F7  66                 	db	102	;'f'
   587  0010F8  00                 	db	0
   588  0000                     
   589                           ; #config settings
   590  0010F9  00                 	db	0	; dummy byte at the end
   591  0000                     
   592                           	psect	cinit
   593  00695E                     __pcinit:
   594                           	opt callstack 0
   595  00695E                     start_initialization:
   596                           	opt callstack 0
   597  00695E                     __initialization:
   598                           	opt callstack 0
   599                           
   600                           ; Initialize objects allocated to BANK2 (29 bytes)
   601                           ; load TBLPTR registers with __pidataBANK2
   602  00695E  0E88               	movlw	low __pidataBANK2
   603  006960  6EF6               	movwf	tblptrl,c
   604  006962  0E74               	movlw	high __pidataBANK2
   605  006964  6EF7               	movwf	tblptrh,c
   606  006966  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   607  006968  6EF8               	movwf	tblptru,c
   608  00696A  EE02  F0BA         	lfsr	0,__pdataBANK2
   609  00696E  EE10 F01D          	lfsr	1,29
   610  006972                     copy_data0:
   611  006972  0009               	tblrd		*+
   612  006974  CFF5 FFEE          	movff	tablat,postinc0
   613  006978  50E5               	movf	postdec1,w,c
   614  00697A  50E1               	movf	fsr1l,w,c
   615  00697C  E1FA               	bnz	copy_data0
   616                           
   617                           ; Initialize objects allocated to BANK1 (4 bytes)
   618                           ; load TBLPTR registers with __pidataBANK1
   619  00697E  0E66               	movlw	low __pidataBANK1
   620  006980  6EF6               	movwf	tblptrl,c
   621  006982  0E75               	movlw	high __pidataBANK1
   622  006984  6EF7               	movwf	tblptrh,c
   623  006986  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   624  006988  6EF8               	movwf	tblptru,c
   625  00698A  EE01  F0FC         	lfsr	0,__pdataBANK1
   626  00698E  EE10 F004          	lfsr	1,4
   627  006992                     copy_data1:
   628  006992  0009               	tblrd		*+
   629  006994  CFF5 FFEE          	movff	tablat,postinc0
   630  006998  50E5               	movf	postdec1,w,c
   631  00699A  50E1               	movf	fsr1l,w,c
   632  00699C  E1FA               	bnz	copy_data1
   633                           
   634                           ; Initialize objects allocated to BANK0 (2 bytes)
   635                           ; load TBLPTR registers with __pidataBANK0
   636  00699E  0E6E               	movlw	low __pidataBANK0
   637  0069A0  6EF6               	movwf	tblptrl,c
   638  0069A2  0E75               	movlw	high __pidataBANK0
   639  0069A4  6EF7               	movwf	tblptrh,c
   640  0069A6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   641  0069A8  6EF8               	movwf	tblptru,c
   642  0069AA  0009               	tblrd		*+	;fetch initializer
   643  0069AC  CFF5 F0FE          	movff	tablat,__pdataBANK0
   644  0069B0  0009               	tblrd		*+	;fetch initializer
   645  0069B2  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   646                           
   647                           ; Clear objects allocated to BANK2 (186 bytes)
   648  0069B6  EE02  F000         	lfsr	0,__pbssBANK2
   649  0069BA  0EBA               	movlw	186
   650  0069BC                     clear_0:
   651  0069BC  6AEE               	clrf	postinc0,c
   652  0069BE  06E8               	decf	wreg,f,c
   653  0069C0  E1FD               	bnz	clear_0
   654                           
   655                           ; Clear objects allocated to BANK1 (37 bytes)
   656  0069C2  EE01  F0D7         	lfsr	0,__pbssBANK1
   657  0069C6  0E25               	movlw	37
   658  0069C8                     clear_1:
   659  0069C8  6AEE               	clrf	postinc0,c
   660  0069CA  06E8               	decf	wreg,f,c
   661  0069CC  E1FD               	bnz	clear_1
   662                           
   663                           ; Clear objects allocated to BANK0 (2 bytes)
   664  0069CE  0100               	movlb	0
   665  0069D0  6BFD               	clrf	(__pbssBANK0+1)& (0+255),b
   666  0069D2  6BFC               	clrf	__pbssBANK0& (0+255),b
   667  0069D4                     end_of_initialization:
   668                           	opt callstack 0
   669  0069D4                     __end_of__initialization:
   670                           	opt callstack 0
   671  0069D4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   672  0069D6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   673  0069D8  0100               	movlb	0
   674  0069DA  EFE1  F02F         	goto	_main	;jump to C main() function
   675                           
   676                           	psect	bssBANK0
   677  0000FC                     __pbssBANK0:
   678                           	opt callstack 0
   679  0000FC                     _counter:
   680                           	opt callstack 0
   681  0000FC                     	ds	1
   682  0000FD                     _reading:
   683                           	opt callstack 0
   684  0000FD                     	ds	1
   685                           
   686                           	psect	dataBANK0
   687  0000FE                     __pdataBANK0:
   688                           	opt callstack 0
   689  0000FE                     _eepromAddress:
   690                           	opt callstack 0
   691  0000FE                     	ds	1
   692  0000FF                     _therometerAddress:
   693                           	opt callstack 0
   694  0000FF                     	ds	1
   695                           
   696                           	psect	bssBANK1
   697  0001D7                     __pbssBANK1:
   698                           	opt callstack 0
   699  0001D7                     ___fpclassifyf@F463:
   700                           	opt callstack 0
   701  0001D7                     	ds	4
   702  0001DB                     _nout:
   703                           	opt callstack 0
   704  0001DB                     	ds	2
   705  0001DD                     _width:
   706                           	opt callstack 0
   707  0001DD                     	ds	2
   708  0001DF                     _prec:
   709                           	opt callstack 0
   710  0001DF                     	ds	2
   711  0001E1                     _flags:
   712                           	opt callstack 0
   713  0001E1                     	ds	2
   714  0001E3                     TMR4_ISR@CountCallBack:
   715                           	opt callstack 0
   716  0001E3                     	ds	2
   717  0001E5                     _TMR4_InterruptHandler:
   718                           	opt callstack 0
   719  0001E5                     	ds	2
   720  0001E7                     TMR2_ISR@CountCallBack:
   721                           	opt callstack 0
   722  0001E7                     	ds	2
   723  0001E9                     _TMR2_InterruptHandler:
   724                           	opt callstack 0
   725  0001E9                     	ds	2
   726  0001EB                     _EUSART1_ErrorHandler:
   727                           	opt callstack 0
   728  0001EB                     	ds	2
   729  0001ED                     _EUSART1_OverrunErrorHandler:
   730                           	opt callstack 0
   731  0001ED                     	ds	2
   732  0001EF                     _EUSART1_FramingErrorHandler:
   733                           	opt callstack 0
   734  0001EF                     	ds	2
   735  0001F1                     _EUSART1_RxDefaultInterruptHandler:
   736                           	opt callstack 0
   737  0001F1                     	ds	2
   738  0001F3                     _EUSART1_TxDefaultInterruptHandler:
   739                           	opt callstack 0
   740  0001F3                     	ds	2
   741  0001F5                     _eusart1RxLastError:
   742                           	opt callstack 0
   743  0001F5                     	ds	1
   744  0001F6                     _eusart1RxCount:
   745                           	opt callstack 0
   746  0001F6                     	ds	1
   747  0001F7                     _eusart1RxTail:
   748                           	opt callstack 0
   749  0001F7                     	ds	1
   750  0001F8                     _eusart1RxHead:
   751                           	opt callstack 0
   752  0001F8                     	ds	1
   753  0001F9                     _eusart1TxBufferRemaining:
   754                           	opt callstack 0
   755  0001F9                     	ds	1
   756  0001FA                     _eusart1TxTail:
   757                           	opt callstack 0
   758  0001FA                     	ds	1
   759  0001FB                     _eusart1TxHead:
   760                           	opt callstack 0
   761  0001FB                     	ds	1
   762                           
   763                           	psect	dataBANK1
   764  0001FC                     __pdataBANK1:
   765                           	opt callstack 0
   766  0001FC                     _humidityTherometerAddress:
   767                           	opt callstack 0
   768  0001FC                     	ds	1
   769  0001FD                     _displayAddress:
   770                           	opt callstack 0
   771  0001FD                     	ds	1
   772  0001FE                     _readHumidity:
   773                           	opt callstack 0
   774  0001FE                     	ds	1
   775  0001FF                     _readTemprature:
   776                           	opt callstack 0
   777  0001FF                     	ds	1
   778                           
   779                           	psect	bssBANK2
   780  000200                     __pbssBANK2:
   781                           	opt callstack 0
   782  000200                     _eusart1TxBuffer:
   783                           	opt callstack 0
   784  000200                     	ds	64
   785  000240                     _eusart1RxStatusBuffer:
   786                           	opt callstack 0
   787  000240                     	ds	8
   788  000248                     _eusart1RxBuffer:
   789                           	opt callstack 0
   790  000248                     	ds	8
   791  000250                     LogData@F6240:
   792                           	opt callstack 0
   793  000250                     	ds	6
   794  000256                     floorf@F524:
   795                           	opt callstack 0
   796  000256                     	ds	4
   797  00025A                     LogData@F6242:
   798                           	opt callstack 0
   799  00025A                     	ds	4
   800  00025E                     LogData@F6234:
   801                           	opt callstack 0
   802  00025E                     	ds	4
   803  000262                     VerifyLogging@F6254:
   804                           	opt callstack 0
   805  000262                     	ds	2
   806  000264                     _dbuf:
   807                           	opt callstack 0
   808  000264                     	ds	80
   809  0002B4                     _resetEeprom:
   810                           	opt callstack 0
   811  0002B4                     	ds	4
   812  0002B8                     _firstLocation:
   813                           	opt callstack 0
   814  0002B8                     	ds	2
   815                           
   816                           	psect	dataBANK2
   817  0002BA                     __pdataBANK2:
   818                           	opt callstack 0
   819  0002BA                     Timer4Interrupt@F6194:
   820                           	opt callstack 0
   821  0002BA                     	ds	2
   822  0002BC                     _customSign1:
   823                           	opt callstack 0
   824  0002BC                     	ds	11
   825  0002C7                     _customSign0:
   826                           	opt callstack 0
   827  0002C7                     	ds	11
   828  0002D2                     _displayInitialize:
   829                           	opt callstack 0
   830  0002D2                     	ds	5
   831                           
   832                           	psect	cstackBANK1
   833  000100                     __pcstackBANK1:
   834                           	opt callstack 0
   835  000100                     ?_strlen:
   836                           	opt callstack 0
   837  000100                     ?___fpclassifyf:
   838                           	opt callstack 0
   839  000100                     ?_isupper:
   840                           	opt callstack 0
   841  000100                     ?_isdigit:
   842                           	opt callstack 0
   843  000100                     ?_strncmp:
   844                           	opt callstack 0
   845  000100                     ?_isspace:
   846                           	opt callstack 0
   847  000100                     ?___wmul:
   848                           	opt callstack 0
   849  000100                     ?___awdiv:
   850                           	opt callstack 0
   851  000100                     ?___awmod:
   852                           	opt callstack 0
   853  000100                     ?___fladd:
   854                           	opt callstack 0
   855  000100                     ?___fldiv:
   856                           	opt callstack 0
   857  000100                     ?___lmul:
   858                           	opt callstack 0
   859  000100                     ?___flneg:
   860                           	opt callstack 0
   861  000100                     ?___fltol:
   862                           	opt callstack 0
   863  000100                     ?___aodiv:
   864                           	opt callstack 0
   865  000100                     ?___aomod:
   866                           	opt callstack 0
   867  000100                     EUSART1_Write@txData:
   868                           	opt callstack 0
   869  000100                     EUSART1_SetFramingErrorHandler@interruptHandler:
   870                           	opt callstack 0
   871  000100                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   872                           	opt callstack 0
   873  000100                     EUSART1_SetErrorHandler@interruptHandler:
   874                           	opt callstack 0
   875  000100                     EUSART1_SetTxInterruptHandler@interruptHandler:
   876                           	opt callstack 0
   877  000100                     EUSART1_SetRxInterruptHandler@interruptHandler:
   878                           	opt callstack 0
   879  000100                     TMR2_SetInterruptHandler@InterruptHandler:
   880                           	opt callstack 0
   881  000100                     TMR4_SetInterruptHandler@InterruptHandler:
   882                           	opt callstack 0
   883  000100                     I2cReadSerial@readData:
   884                           	opt callstack 0
   885  000100                     ___wmul@multiplier:
   886                           	opt callstack 0
   887  000100                     ___awdiv@dividend:
   888                           	opt callstack 0
   889  000100                     ___awmod@dividend:
   890                           	opt callstack 0
   891  000100                     isdigit@c:
   892                           	opt callstack 0
   893  000100                     isspace@c:
   894                           	opt callstack 0
   895  000100                     isupper@c:
   896                           	opt callstack 0
   897  000100                     strcpy@dest:
   898                           	opt callstack 0
   899  000100                     strlen@s:
   900                           	opt callstack 0
   901  000100                     strncmp@_l:
   902                           	opt callstack 0
   903  000100                     ___lmul@multiplier:
   904                           	opt callstack 0
   905  000100                     ___fleq@ff1:
   906                           	opt callstack 0
   907  000100                     ___flneg@f1:
   908                           	opt callstack 0
   909  000100                     ___fltol@f1:
   910                           	opt callstack 0
   911  000100                     ___fladd@b:
   912                           	opt callstack 0
   913  000100                     ___fldiv@b:
   914                           	opt callstack 0
   915  000100                     ___fpclassifyf@x:
   916                           	opt callstack 0
   917  000100                     ___aodiv@dividend:
   918                           	opt callstack 0
   919  000100                     ___aomod@dividend:
   920                           	opt callstack 0
   921                           
   922                           ; 8 bytes @ 0x0
   923  000100                     	ds	1
   924  000101                     putch@txData:
   925                           	opt callstack 0
   926                           
   927                           ; 1 bytes @ 0x1
   928  000101                     	ds	1
   929  000102                     ??_isupper:
   930  000102                     ??_isdigit:
   931  000102                     ??_isspace:
   932  000102                     I2cReadSerial@length:
   933                           	opt callstack 0
   934  000102                     ___wmul@multiplicand:
   935                           	opt callstack 0
   936  000102                     ___awdiv@divisor:
   937                           	opt callstack 0
   938  000102                     ___awmod@divisor:
   939                           	opt callstack 0
   940  000102                     fputc@c:
   941                           	opt callstack 0
   942  000102                     strcpy@src:
   943                           	opt callstack 0
   944  000102                     strlen@a:
   945                           	opt callstack 0
   946  000102                     strncmp@_r:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0x2
   950  000102                     	ds	1
   951  000103                     ??_I2cReadSerial:
   952                           
   953                           ; 1 bytes @ 0x3
   954  000103                     	ds	1
   955  000104                     ??___fpclassifyf:
   956  000104                     ??_strcpy:
   957  000104                     ??___fltol:
   958  000104                     ___awdiv@counter:
   959                           	opt callstack 0
   960  000104                     ___awmod@counter:
   961                           	opt callstack 0
   962  000104                     ___wmul@product:
   963                           	opt callstack 0
   964  000104                     fputc@fp:
   965                           	opt callstack 0
   966  000104                     strncmp@n:
   967                           	opt callstack 0
   968  000104                     ___lmul@multiplicand:
   969                           	opt callstack 0
   970  000104                     ___fleq@ff2:
   971                           	opt callstack 0
   972  000104                     ___fladd@a:
   973                           	opt callstack 0
   974  000104                     ___fldiv@a:
   975                           	opt callstack 0
   976                           
   977                           ; 4 bytes @ 0x4
   978  000104                     	ds	1
   979  000105                     ___awdiv@sign:
   980                           	opt callstack 0
   981  000105                     ___awmod@sign:
   982                           	opt callstack 0
   983                           
   984                           ; 1 bytes @ 0x5
   985  000105                     	ds	1
   986  000106                     ??_fputc:
   987  000106                     ??_strncmp:
   988  000106                     ?_tolower:
   989                           	opt callstack 0
   990  000106                     _isspace$2072:
   991                           	opt callstack 0
   992  000106                     ___awdiv@quotient:
   993                           	opt callstack 0
   994  000106                     strcpy@s:
   995                           	opt callstack 0
   996  000106                     tolower@c:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x6
  1000  000106                     	ds	1
  1001  000107                     ?_atoi:
  1002                           	opt callstack 0
  1003  000107                     I2cReadSerial@address:
  1004                           	opt callstack 0
  1005  000107                     atoi@s:
  1006                           	opt callstack 0
  1007  000107                     strncmp@l:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x7
  1011  000107                     	ds	1
  1012  000108                     ??_tolower:
  1013  000108                     ??___fladd:
  1014  000108                     ??___fldiv:
  1015  000108                     ??___fleq:
  1016  000108                     I2cReadSerial@target:
  1017                           	opt callstack 0
  1018  000108                     ___fltol@sign1:
  1019                           	opt callstack 0
  1020  000108                     ___fpclassifyf@e:
  1021                           	opt callstack 0
  1022  000108                     strcpy@d:
  1023                           	opt callstack 0
  1024  000108                     ___lmul@product:
  1025                           	opt callstack 0
  1026  000108                     ___aodiv@divisor:
  1027                           	opt callstack 0
  1028  000108                     ___aomod@divisor:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 8 bytes @ 0x8
  1032  000108                     	ds	1
  1033  000109                     ??_atoi:
  1034  000109                     ___fltol@exp1:
  1035                           	opt callstack 0
  1036  000109                     I2cReadSerial@i:
  1037                           	opt callstack 0
  1038  000109                     strncmp@r:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x9
  1042  000109                     	ds	1
  1043  00010A                     ___fpclassifyf@u:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 4 bytes @ 0xA
  1047  00010A                     	ds	1
  1048  00010B                     fputs@s:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0xB
  1052  00010B                     	ds	1
  1053  00010C                     ?___xxtofl:
  1054                           	opt callstack 0
  1055  00010C                     ___fladd@signs:
  1056                           	opt callstack 0
  1057  00010C                     _tolower$2163:
  1058                           	opt callstack 0
  1059  00010C                     ___fldiv@rem:
  1060                           	opt callstack 0
  1061  00010C                     ___xxtofl@val:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 4 bytes @ 0xC
  1065  00010C                     	ds	1
  1066  00010D                     ___fladd@aexp:
  1067                           	opt callstack 0
  1068  00010D                     atoi@neg:
  1069                           	opt callstack 0
  1070  00010D                     fputs@fp:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 2 bytes @ 0xD
  1074  00010D                     	ds	1
  1075  00010E                     ___fladd@bexp:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 1 bytes @ 0xE
  1079  00010E                     	ds	1
  1080  00010F                     ___fladd@grs:
  1081                           	opt callstack 0
  1082  00010F                     fputs@c:
  1083                           	opt callstack 0
  1084  00010F                     _atoi$2041:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 2 bytes @ 0xF
  1088  00010F                     	ds	1
  1089  000110                     ??___xxtofl:
  1090  000110                     ___aodiv@counter:
  1091                           	opt callstack 0
  1092  000110                     ___aomod@counter:
  1093                           	opt callstack 0
  1094  000110                     ___fldiv@sign:
  1095                           	opt callstack 0
  1096  000110                     fputs@i:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x10
  1100  000110                     	ds	1
  1101  000111                     ___aodiv@sign:
  1102                           	opt callstack 0
  1103  000111                     ___aomod@sign:
  1104                           	opt callstack 0
  1105  000111                     ___fldiv@new_exp:
  1106                           	opt callstack 0
  1107  000111                     _atoi$2043:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x11
  1111  000111                     	ds	1
  1112  000112                     ?_abs:
  1113                           	opt callstack 0
  1114  000112                     ?_pad:
  1115                           	opt callstack 0
  1116  000112                     pad@fp:
  1117                           	opt callstack 0
  1118  000112                     abs@a:
  1119                           	opt callstack 0
  1120  000112                     ___aodiv@quotient:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 8 bytes @ 0x12
  1124  000112                     	ds	1
  1125  000113                     _atoi$2042:
  1126                           	opt callstack 0
  1127  000113                     ___fldiv@grs:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x13
  1131  000113                     	ds	1
  1132  000114                     ??_abs:
  1133  000114                     ___xxtofl@sign:
  1134                           	opt callstack 0
  1135  000114                     pad@buf:
  1136                           	opt callstack 0
  1137  000114                     atoi@n:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x14
  1141  000114                     	ds	1
  1142  000115                     ___xxtofl@exp:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x15
  1146  000115                     	ds	1
  1147  000116                     pad@p:
  1148                           	opt callstack 0
  1149  000116                     ___xxtofl@arg:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x16
  1153  000116                     	ds	1
  1154  000117                     ___fldiv@bexp:
  1155                           	opt callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x17
  1158  000117                     	ds	1
  1159  000118                     ??_pad:
  1160  000118                     ___fldiv@aexp:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x18
  1164  000118                     	ds	1
  1165  000119                     ?_floorf:
  1166                           	opt callstack 0
  1167  000119                     pad@i:
  1168                           	opt callstack 0
  1169  000119                     floorf@x:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x19
  1173  000119                     	ds	1
  1174  00011A                     ?___flmul:
  1175                           	opt callstack 0
  1176  00011A                     ___flmul@b:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x1A
  1180  00011A                     	ds	1
  1181  00011B                     pad@w:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x1B
  1185  00011B                     	ds	2
  1186  00011D                     ??_floorf:
  1187  00011D                     ?_dtoa:
  1188                           	opt callstack 0
  1189  00011D                     dtoa@fp:
  1190                           	opt callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x1D
  1193  00011D                     	ds	1
  1194  00011E                     ___flmul@a:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x1E
  1198  00011E                     	ds	1
  1199  00011F                     dtoa@d:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 8 bytes @ 0x1F
  1203  00011F                     	ds	3
  1204  000122                     ??___flmul:
  1205                           
  1206                           ; 1 bytes @ 0x22
  1207  000122                     	ds	1
  1208  000123                     floorf@m:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x23
  1212  000123                     	ds	3
  1213  000126                     ___flmul@sign:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 1 bytes @ 0x26
  1217  000126                     	ds	1
  1218  000127                     ??_dtoa:
  1219  000127                     floorf@e:
  1220                           	opt callstack 0
  1221  000127                     ___flmul@grs:
  1222                           	opt callstack 0
  1223                           
  1224                           ; 4 bytes @ 0x27
  1225  000127                     	ds	2
  1226  000129                     floorf@u:
  1227                           	opt callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x29
  1230  000129                     	ds	2
  1231  00012B                     ___flmul@aexp:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x2B
  1235  00012B                     	ds	1
  1236  00012C                     ___flmul@bexp:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x2C
  1240  00012C                     	ds	1
  1241  00012D                     ___flmul@prod:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x2D
  1245  00012D                     	ds	2
  1246  00012F                     _dtoa$1514:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x2F
  1250  00012F                     	ds	2
  1251  000131                     dtoa@p:
  1252                           	opt callstack 0
  1253  000131                     ___flmul@temp:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x31
  1257  000131                     	ds	2
  1258  000133                     ?___flsub:
  1259                           	opt callstack 0
  1260  000133                     dtoa@w:
  1261                           	opt callstack 0
  1262  000133                     ___flge@ff1:
  1263                           	opt callstack 0
  1264  000133                     ___flsub@b:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 4 bytes @ 0x33
  1268  000133                     	ds	2
  1269  000135                     dtoa@s:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x35
  1273  000135                     	ds	2
  1274  000137                     ___flge@ff2:
  1275                           	opt callstack 0
  1276  000137                     ___flsub@a:
  1277                           	opt callstack 0
  1278  000137                     dtoa@n:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 8 bytes @ 0x37
  1282  000137                     	ds	4
  1283  00013B                     ??___flge:
  1284                           
  1285                           ; 1 bytes @ 0x3B
  1286  00013B                     	ds	4
  1287  00013F                     ?_efgtoa:
  1288                           	opt callstack 0
  1289  00013F                     dtoa@i:
  1290                           	opt callstack 0
  1291  00013F                     efgtoa@fp:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x3F
  1295  00013F                     	ds	2
  1296  000141                     efgtoa@f:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x41
  1300  000141                     	ds	4
  1301  000145                     efgtoa@c:
  1302                           	opt callstack 0
  1303                           
  1304                           ; 1 bytes @ 0x45
  1305  000145                     	ds	1
  1306  000146                     ??_efgtoa:
  1307                           
  1308                           ; 1 bytes @ 0x46
  1309  000146                     	ds	5
  1310  00014B                     efgtoa@ou:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x4B
  1314  00014B                     	ds	4
  1315  00014F                     _efgtoa$1538:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x4F
  1319  00014F                     	ds	2
  1320  000151                     _efgtoa$1539:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x51
  1324  000151                     	ds	2
  1325  000153                     _efgtoa$1543:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x53
  1329  000153                     	ds	2
  1330  000155                     _efgtoa$1547:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x55
  1334  000155                     	ds	2
  1335  000157                     _efgtoa$1548:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x57
  1339  000157                     	ds	2
  1340  000159                     _efgtoa$1549:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x59
  1344  000159                     	ds	2
  1345  00015B                     efgtoa@t:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x5B
  1349  00015B                     	ds	2
  1350  00015D                     efgtoa@pp:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x5D
  1354  00015D                     	ds	2
  1355  00015F                     efgtoa@m:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x5F
  1359  00015F                     	ds	2
  1360  000161                     efgtoa@ne:
  1361                           	opt callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x61
  1364  000161                     	ds	2
  1365  000163                     efgtoa@d:
  1366                           	opt callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x63
  1369  000163                     	ds	2
  1370  000165                     efgtoa@sign:
  1371                           	opt callstack 0
  1372                           
  1373                           ; 2 bytes @ 0x65
  1374  000165                     	ds	2
  1375  000167                     efgtoa@p:
  1376                           	opt callstack 0
  1377                           
  1378                           ; 2 bytes @ 0x67
  1379  000167                     	ds	2
  1380  000169                     efgtoa@nmode:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x69
  1384  000169                     	ds	1
  1385  00016A                     efgtoa@w:
  1386                           	opt callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x6A
  1389  00016A                     	ds	2
  1390  00016C                     efgtoa@mode:
  1391                           	opt callstack 0
  1392                           
  1393                           ; 1 bytes @ 0x6C
  1394  00016C                     	ds	1
  1395  00016D                     efgtoa@h:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 4 bytes @ 0x6D
  1399  00016D                     	ds	4
  1400  000171                     efgtoa@l:
  1401                           	opt callstack 0
  1402                           
  1403                           ; 4 bytes @ 0x71
  1404  000171                     	ds	4
  1405  000175                     efgtoa@i:
  1406                           	opt callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x75
  1409  000175                     	ds	2
  1410  000177                     efgtoa@g:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 4 bytes @ 0x77
  1414  000177                     	ds	4
  1415  00017B                     efgtoa@e:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x7B
  1419  00017B                     	ds	2
  1420  00017D                     efgtoa@n:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x7D
  1424  00017D                     	ds	2
  1425  00017F                     efgtoa@u:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 4 bytes @ 0x7F
  1429  00017F                     	ds	4
  1430  000183                     ?_vfpfcnvrt:
  1431                           	opt callstack 0
  1432  000183                     vfpfcnvrt@fp:
  1433                           	opt callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x83
  1436  000183                     	ds	2
  1437  000185                     vfpfcnvrt@fmt:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x85
  1441  000185                     	ds	2
  1442  000187                     vfpfcnvrt@ap:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x87
  1446  000187                     	ds	2
  1447  000189                     ??_vfpfcnvrt:
  1448                           
  1449                           ; 1 bytes @ 0x89
  1450  000189                     	ds	4
  1451  00018D                     vfpfcnvrt@ll:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 8 bytes @ 0x8D
  1455  00018D                     	ds	8
  1456  000195                     _vfpfcnvrt$1563:
  1457                           	opt callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x95
  1460  000195                     	ds	2
  1461  000197                     _vfpfcnvrt$1568:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x97
  1465  000197                     	ds	2
  1466  000199                     vfpfcnvrt@f:
  1467                           	opt callstack 0
  1468                           
  1469                           ; 4 bytes @ 0x99
  1470  000199                     	ds	4
  1471  00019D                     vfpfcnvrt@c:
  1472                           	opt callstack 0
  1473                           
  1474                           ; 1 bytes @ 0x9D
  1475  00019D                     	ds	1
  1476  00019E                     vfpfcnvrt@ct:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 3 bytes @ 0x9E
  1480  00019E                     	ds	3
  1481  0001A1                     ?_vfprintf:
  1482                           	opt callstack 0
  1483  0001A1                     vfprintf@fp:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 2 bytes @ 0xA1
  1487  0001A1                     	ds	2
  1488  0001A3                     vfprintf@fmt:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 2 bytes @ 0xA3
  1492  0001A3                     	ds	2
  1493  0001A5                     vfprintf@ap:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 2 bytes @ 0xA5
  1497  0001A5                     	ds	2
  1498  0001A7                     vfprintf@cfmt:
  1499                           	opt callstack 0
  1500                           
  1501                           ; 2 bytes @ 0xA7
  1502  0001A7                     	ds	2
  1503  0001A9                     ?_printf:
  1504                           	opt callstack 0
  1505  0001A9                     ?_sprintf:
  1506                           	opt callstack 0
  1507  0001A9                     sprintf@s:
  1508                           	opt callstack 0
  1509  0001A9                     printf@fmt:
  1510                           	opt callstack 0
  1511                           
  1512                           ; 2 bytes @ 0xA9
  1513  0001A9                     	ds	2
  1514  0001AB                     sprintf@fmt:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 2 bytes @ 0xAB
  1518  0001AB                     	ds	2
  1519  0001AD                     printf@ap:
  1520                           	opt callstack 0
  1521                           
  1522                           ; 2 bytes @ 0xAD
  1523  0001AD                     	ds	2
  1524  0001AF                     I2cWriteSerial@writeData:
  1525                           	opt callstack 0
  1526                           
  1527                           ; 2 bytes @ 0xAF
  1528  0001AF                     	ds	2
  1529  0001B1                     I2cWriteSerial@length:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 1 bytes @ 0xB1
  1533  0001B1                     	ds	1
  1534  0001B2                     ??_I2cWriteSerial:
  1535                           
  1536                           ; 1 bytes @ 0xB2
  1537  0001B2                     	ds	1
  1538  0001B3                     sprintf@ap:
  1539                           	opt callstack 0
  1540                           
  1541                           ; 2 bytes @ 0xB3
  1542  0001B3                     	ds	1
  1543  0001B4                     I2cWriteSerial@address:
  1544                           	opt callstack 0
  1545                           
  1546                           ; 1 bytes @ 0xB4
  1547  0001B4                     	ds	1
  1548  0001B5                     I2cWriteSerial@addressWrite:
  1549                           	opt callstack 0
  1550  0001B5                     sprintf@f:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 6 bytes @ 0xB5
  1554  0001B5                     	ds	1
  1555  0001B6                     I2cWriteSerial@i:
  1556                           	opt callstack 0
  1557                           
  1558                           ; 1 bytes @ 0xB6
  1559  0001B6                     	ds	1
  1560  0001B7                     ?_ReadTemperature:
  1561                           	opt callstack 0
  1562  0001B7                     ?_ReadHumidity:
  1563                           	opt callstack 0
  1564  0001B7                     DisplaySetCursor@charNum:
  1565                           	opt callstack 0
  1566                           
  1567                           ; 1 bytes @ 0xB7
  1568  0001B7                     	ds	1
  1569  0001B8                     DisplaySetCursor@line:
  1570                           	opt callstack 0
  1571                           
  1572                           ; 1 bytes @ 0xB8
  1573  0001B8                     	ds	1
  1574  0001B9                     DisplaySetCursor@command:
  1575                           	opt callstack 0
  1576                           
  1577                           ; 2 bytes @ 0xB9
  1578  0001B9                     	ds	2
  1579  0001BB                     ??_ReadTemperature:
  1580  0001BB                     ??_ReadHumidity:
  1581                           
  1582                           ; 1 bytes @ 0xBB
  1583  0001BB                     	ds	2
  1584  0001BD                     ReadTemperature@temperature:
  1585                           	opt callstack 0
  1586  0001BD                     ReadHumidity@humidity:
  1587                           	opt callstack 0
  1588                           
  1589                           ; 4 bytes @ 0xBD
  1590  0001BD                     	ds	4
  1591  0001C1                     ReadTemperature@result:
  1592                           	opt callstack 0
  1593  0001C1                     ReadHumidity@result:
  1594                           	opt callstack 0
  1595                           
  1596                           ; 2 bytes @ 0xC1
  1597  0001C1                     	ds	2
  1598  0001C3                     ReadTemperature@resultWord:
  1599                           	opt callstack 0
  1600  0001C3                     ReadHumidity@resultWord:
  1601                           	opt callstack 0
  1602                           
  1603                           ; 4 bytes @ 0xC3
  1604  0001C3                     	ds	4
  1605  0001C7                     ReadTemperature@conversion:
  1606                           	opt callstack 0
  1607  0001C7                     ReadHumidity@convertion:
  1608                           	opt callstack 0
  1609                           
  1610                           ; 4 bytes @ 0xC7
  1611  0001C7                     	ds	4
  1612  0001CB                     WriteTempHumidToDisplay@printable:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 6 bytes @ 0xCB
  1616  0001CB                     	ds	6
  1617  0001D1                     WriteTempHumidToDisplay@result:
  1618                           	opt callstack 0
  1619                           
  1620                           ; 4 bytes @ 0xD1
  1621  0001D1                     	ds	4
  1622  0001D5                     ??_main:
  1623                           
  1624                           ; 1 bytes @ 0xD5
  1625  0001D5                     	ds	2
  1626                           
  1627                           	psect	cstackBANK0
  1628  000060                     __pcstackBANK0:
  1629                           	opt callstack 0
  1630  000060                     i2efgtoa@ou:
  1631                           	opt callstack 0
  1632                           
  1633                           ; 4 bytes @ 0x0
  1634  000060                     	ds	4
  1635  000064                     i2_efgtoa$1538:
  1636                           	opt callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x4
  1639  000064                     	ds	2
  1640  000066                     i2_efgtoa$1539:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x6
  1644  000066                     	ds	2
  1645  000068                     i2_efgtoa$1543:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x8
  1649  000068                     	ds	2
  1650  00006A                     i2_efgtoa$1547:
  1651                           	opt callstack 0
  1652                           
  1653                           ; 2 bytes @ 0xA
  1654  00006A                     	ds	2
  1655  00006C                     i2_efgtoa$1548:
  1656                           	opt callstack 0
  1657                           
  1658                           ; 2 bytes @ 0xC
  1659  00006C                     	ds	2
  1660  00006E                     i2_efgtoa$1549:
  1661                           	opt callstack 0
  1662                           
  1663                           ; 2 bytes @ 0xE
  1664  00006E                     	ds	2
  1665  000070                     i2efgtoa@t:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 2 bytes @ 0x10
  1669  000070                     	ds	2
  1670  000072                     i2efgtoa@pp:
  1671                           	opt callstack 0
  1672                           
  1673                           ; 2 bytes @ 0x12
  1674  000072                     	ds	2
  1675  000074                     i2efgtoa@m:
  1676                           	opt callstack 0
  1677                           
  1678                           ; 2 bytes @ 0x14
  1679  000074                     	ds	2
  1680  000076                     i2efgtoa@ne:
  1681                           	opt callstack 0
  1682                           
  1683                           ; 2 bytes @ 0x16
  1684  000076                     	ds	2
  1685  000078                     i2efgtoa@d:
  1686                           	opt callstack 0
  1687                           
  1688                           ; 2 bytes @ 0x18
  1689  000078                     	ds	2
  1690  00007A                     i2efgtoa@sign:
  1691                           	opt callstack 0
  1692                           
  1693                           ; 2 bytes @ 0x1A
  1694  00007A                     	ds	2
  1695  00007C                     i2efgtoa@p:
  1696                           	opt callstack 0
  1697                           
  1698                           ; 2 bytes @ 0x1C
  1699  00007C                     	ds	2
  1700  00007E                     i2efgtoa@nmode:
  1701                           	opt callstack 0
  1702                           
  1703                           ; 1 bytes @ 0x1E
  1704  00007E                     	ds	1
  1705  00007F                     i2efgtoa@w:
  1706                           	opt callstack 0
  1707                           
  1708                           ; 2 bytes @ 0x1F
  1709  00007F                     	ds	2
  1710  000081                     i2efgtoa@mode:
  1711                           	opt callstack 0
  1712                           
  1713                           ; 1 bytes @ 0x21
  1714  000081                     	ds	1
  1715  000082                     i2efgtoa@h:
  1716                           	opt callstack 0
  1717                           
  1718                           ; 4 bytes @ 0x22
  1719  000082                     	ds	4
  1720  000086                     i2efgtoa@l:
  1721                           	opt callstack 0
  1722                           
  1723                           ; 4 bytes @ 0x26
  1724  000086                     	ds	4
  1725  00008A                     i2efgtoa@i:
  1726                           	opt callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x2A
  1729  00008A                     	ds	2
  1730  00008C                     i2efgtoa@g:
  1731                           	opt callstack 0
  1732                           
  1733                           ; 4 bytes @ 0x2C
  1734  00008C                     	ds	4
  1735  000090                     i2efgtoa@e:
  1736                           	opt callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x30
  1739  000090                     	ds	2
  1740  000092                     i2efgtoa@n:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x32
  1744  000092                     	ds	2
  1745  000094                     i2efgtoa@u:
  1746                           	opt callstack 0
  1747                           
  1748                           ; 4 bytes @ 0x34
  1749  000094                     	ds	4
  1750  000098                     i2vfpfcnvrt@ll:
  1751                           	opt callstack 0
  1752                           
  1753                           ; 8 bytes @ 0x38
  1754  000098                     	ds	8
  1755  0000A0                     i2_vfpfcnvrt$1563:
  1756                           	opt callstack 0
  1757                           
  1758                           ; 2 bytes @ 0x40
  1759  0000A0                     	ds	2
  1760  0000A2                     i2_vfpfcnvrt$1568:
  1761                           	opt callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x42
  1764  0000A2                     	ds	2
  1765  0000A4                     i2vfpfcnvrt@f:
  1766                           	opt callstack 0
  1767                           
  1768                           ; 4 bytes @ 0x44
  1769  0000A4                     	ds	4
  1770  0000A8                     i2vfpfcnvrt@ct:
  1771                           	opt callstack 0
  1772                           
  1773                           ; 3 bytes @ 0x48
  1774  0000A8                     	ds	3
  1775  0000AB                     i2vfpfcnvrt@c:
  1776                           	opt callstack 0
  1777                           
  1778                           ; 1 bytes @ 0x4B
  1779  0000AB                     	ds	1
  1780  0000AC                     ?i2_printf:
  1781                           	opt callstack 0
  1782  0000AC                     i2printf@fmt:
  1783                           	opt callstack 0
  1784                           
  1785                           ; 2 bytes @ 0x4C
  1786  0000AC                     	ds	10
  1787  0000B6                     i2printf@ap:
  1788                           	opt callstack 0
  1789                           
  1790                           ; 2 bytes @ 0x56
  1791  0000B6                     	ds	2
  1792  0000B8                     i2I2cWriteSerial@writeData:
  1793                           	opt callstack 0
  1794                           
  1795                           ; 2 bytes @ 0x58
  1796  0000B8                     	ds	2
  1797  0000BA                     i2I2cWriteSerial@length:
  1798                           	opt callstack 0
  1799                           
  1800                           ; 1 bytes @ 0x5A
  1801  0000BA                     	ds	1
  1802  0000BB                     ??i2_I2cWriteSerial:
  1803                           
  1804                           ; 1 bytes @ 0x5B
  1805  0000BB                     	ds	2
  1806  0000BD                     i2I2cWriteSerial@address:
  1807                           	opt callstack 0
  1808                           
  1809                           ; 1 bytes @ 0x5D
  1810  0000BD                     	ds	1
  1811  0000BE                     i2I2cWriteSerial@addressWrite:
  1812                           	opt callstack 0
  1813                           
  1814                           ; 1 bytes @ 0x5E
  1815  0000BE                     	ds	1
  1816  0000BF                     i2I2cWriteSerial@i:
  1817                           	opt callstack 0
  1818                           
  1819                           ; 1 bytes @ 0x5F
  1820  0000BF                     	ds	1
  1821  0000C0                     ??_Timer4Interrupt:
  1822  0000C0                     ?i2_ReadTemperature:
  1823                           	opt callstack 0
  1824  0000C0                     ?i2_ReadHumidity:
  1825                           	opt callstack 0
  1826  0000C0                     VerifyLogging@location:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x60
  1830  0000C0                     	ds	2
  1831  0000C2                     Timer4Interrupt@location:
  1832                           	opt callstack 0
  1833  0000C2                     VerifyLogging@output:
  1834                           	opt callstack 0
  1835                           
  1836                           ; 4 bytes @ 0x62
  1837  0000C2                     	ds	2
  1838  0000C4                     ??i2_ReadTemperature:
  1839  0000C4                     ??i2_ReadHumidity:
  1840  0000C4                     Timer4Interrupt@temp:
  1841                           	opt callstack 0
  1842                           
  1843                           ; 4 bytes @ 0x64
  1844  0000C4                     	ds	2
  1845  0000C6                     i2ReadTemperature@temperature:
  1846                           	opt callstack 0
  1847  0000C6                     i2ReadHumidity@humidity:
  1848                           	opt callstack 0
  1849                           
  1850                           ; 4 bytes @ 0x66
  1851  0000C6                     	ds	2
  1852  0000C8                     Timer4Interrupt@humid:
  1853                           	opt callstack 0
  1854                           
  1855                           ; 4 bytes @ 0x68
  1856  0000C8                     	ds	2
  1857  0000CA                     i2ReadTemperature@result:
  1858                           	opt callstack 0
  1859  0000CA                     i2ReadHumidity@result:
  1860                           	opt callstack 0
  1861                           
  1862                           ; 2 bytes @ 0x6A
  1863  0000CA                     	ds	2
  1864  0000CC                     Timer4Interrupt@output:
  1865                           	opt callstack 0
  1866  0000CC                     i2ReadTemperature@resultWord:
  1867                           	opt callstack 0
  1868  0000CC                     i2ReadHumidity@resultWord:
  1869                           	opt callstack 0
  1870                           
  1871                           ; 4 bytes @ 0x6C
  1872  0000CC                     	ds	4
  1873  0000D0                     Timer4Interrupt@dataLength:
  1874                           	opt callstack 0
  1875  0000D0                     i2ReadTemperature@conversion:
  1876                           	opt callstack 0
  1877  0000D0                     i2ReadHumidity@convertion:
  1878                           	opt callstack 0
  1879                           
  1880                           ; 4 bytes @ 0x70
  1881  0000D0                     	ds	2
  1882  0000D2                     Timer4Interrupt@i:
  1883                           	opt callstack 0
  1884                           
  1885                           ; 2 bytes @ 0x72
  1886  0000D2                     	ds	2
  1887  0000D4                     LogData@temperature:
  1888                           	opt callstack 0
  1889                           
  1890                           ; 4 bytes @ 0x74
  1891  0000D4                     	ds	4
  1892  0000D8                     LogData@humidity:
  1893                           	opt callstack 0
  1894                           
  1895                           ; 4 bytes @ 0x78
  1896  0000D8                     	ds	4
  1897  0000DC                     LogData@writeArray:
  1898                           	opt callstack 0
  1899                           
  1900                           ; 6 bytes @ 0x7C
  1901  0000DC                     	ds	6
  1902  0000E2                     LogData@writeAttemptLocation:
  1903                           	opt callstack 0
  1904                           
  1905                           ; 4 bytes @ 0x82
  1906  0000E2                     	ds	4
  1907  0000E6                     LogData@lastSuccesfulWriteLocation:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 4 bytes @ 0x86
  1911  0000E6                     	ds	4
  1912  0000EA                     LogData@temperatureArray:
  1913                           	opt callstack 0
  1914                           
  1915                           ; 2 bytes @ 0x8A
  1916  0000EA                     	ds	2
  1917  0000EC                     LogData@humidityArray:
  1918                           	opt callstack 0
  1919                           
  1920                           ; 2 bytes @ 0x8C
  1921  0000EC                     	ds	2
  1922  0000EE                     LogData@location:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 2 bytes @ 0x8E
  1926  0000EE                     	ds	2
  1927  0000F0                     ??_INTERRUPT_InterruptManager:
  1928                           
  1929                           ; 1 bytes @ 0x90
  1930  0000F0                     	ds	12
  1931                           
  1932                           	psect	cstackCOMRAM
  1933  000001                     __pcstackCOMRAM:
  1934                           	opt callstack 0
  1935  000001                     ?i2___wmul:
  1936                           	opt callstack 0
  1937  000001                     ?i2___awdiv:
  1938                           	opt callstack 0
  1939  000001                     ?i2___awmod:
  1940                           	opt callstack 0
  1941  000001                     ?i2___fpclassifyf:
  1942                           	opt callstack 0
  1943  000001                     ?i2_isdigit:
  1944                           	opt callstack 0
  1945  000001                     ?i2_isspace:
  1946                           	opt callstack 0
  1947  000001                     ?i2_isupper:
  1948                           	opt callstack 0
  1949  000001                     ?i2_strlen:
  1950                           	opt callstack 0
  1951  000001                     ?i2_strncmp:
  1952                           	opt callstack 0
  1953  000001                     ?i2___lmul:
  1954                           	opt callstack 0
  1955  000001                     ?i2___flneg:
  1956                           	opt callstack 0
  1957  000001                     ?i2___fladd:
  1958                           	opt callstack 0
  1959  000001                     ?i2___fldiv:
  1960                           	opt callstack 0
  1961  000001                     ?i2___aodiv:
  1962                           	opt callstack 0
  1963  000001                     ?i2___aomod:
  1964                           	opt callstack 0
  1965  000001                     i2EUSART1_Write@txData:
  1966                           	opt callstack 0
  1967  000001                     i2I2cReadSerial@readData:
  1968                           	opt callstack 0
  1969  000001                     i2___wmul@multiplier:
  1970                           	opt callstack 0
  1971  000001                     i2___awdiv@dividend:
  1972                           	opt callstack 0
  1973  000001                     i2___awmod@dividend:
  1974                           	opt callstack 0
  1975  000001                     i2isdigit@c:
  1976                           	opt callstack 0
  1977  000001                     i2isspace@c:
  1978                           	opt callstack 0
  1979  000001                     i2isupper@c:
  1980                           	opt callstack 0
  1981  000001                     i2strcpy@dest:
  1982                           	opt callstack 0
  1983  000001                     i2strlen@s:
  1984                           	opt callstack 0
  1985  000001                     i2strncmp@_l:
  1986                           	opt callstack 0
  1987  000001                     i2___lmul@multiplier:
  1988                           	opt callstack 0
  1989  000001                     i2___fleq@ff1:
  1990                           	opt callstack 0
  1991  000001                     i2___flneg@f1:
  1992                           	opt callstack 0
  1993  000001                     i2___fladd@b:
  1994                           	opt callstack 0
  1995  000001                     i2___fldiv@b:
  1996                           	opt callstack 0
  1997  000001                     i2___fpclassifyf@x:
  1998                           	opt callstack 0
  1999  000001                     i2___aodiv@dividend:
  2000                           	opt callstack 0
  2001  000001                     i2___aomod@dividend:
  2002                           	opt callstack 0
  2003                           
  2004                           ; 8 bytes @ 0x0
  2005  000001                     	ds	1
  2006  000002                     i2putch@txData:
  2007                           	opt callstack 0
  2008                           
  2009                           ; 1 bytes @ 0x1
  2010  000002                     	ds	1
  2011  000003                     ??i2_isdigit:
  2012  000003                     ??i2_isspace:
  2013  000003                     ??i2_isupper:
  2014  000003                     i2I2cReadSerial@length:
  2015                           	opt callstack 0
  2016  000003                     i2___wmul@multiplicand:
  2017                           	opt callstack 0
  2018  000003                     i2___awdiv@divisor:
  2019                           	opt callstack 0
  2020  000003                     i2___awmod@divisor:
  2021                           	opt callstack 0
  2022  000003                     i2fputc@c:
  2023                           	opt callstack 0
  2024  000003                     i2strcpy@src:
  2025                           	opt callstack 0
  2026  000003                     i2strlen@a:
  2027                           	opt callstack 0
  2028  000003                     i2strncmp@_r:
  2029                           	opt callstack 0
  2030                           
  2031                           ; 2 bytes @ 0x2
  2032  000003                     	ds	1
  2033  000004                     ??i2_I2cReadSerial:
  2034                           
  2035                           ; 1 bytes @ 0x3
  2036  000004                     	ds	1
  2037  000005                     ??i2___fpclassifyf:
  2038  000005                     ??i2_strcpy:
  2039  000005                     i2___awdiv@counter:
  2040                           	opt callstack 0
  2041  000005                     i2___awmod@counter:
  2042                           	opt callstack 0
  2043  000005                     i2___wmul@product:
  2044                           	opt callstack 0
  2045  000005                     i2fputc@fp:
  2046                           	opt callstack 0
  2047  000005                     i2strncmp@n:
  2048                           	opt callstack 0
  2049  000005                     i2___lmul@multiplicand:
  2050                           	opt callstack 0
  2051  000005                     i2___fleq@ff2:
  2052                           	opt callstack 0
  2053  000005                     i2___fladd@a:
  2054                           	opt callstack 0
  2055  000005                     i2___fldiv@a:
  2056                           	opt callstack 0
  2057                           
  2058                           ; 4 bytes @ 0x4
  2059  000005                     	ds	1
  2060  000006                     i2___awdiv@sign:
  2061                           	opt callstack 0
  2062  000006                     i2___awmod@sign:
  2063                           	opt callstack 0
  2064                           
  2065                           ; 1 bytes @ 0x5
  2066  000006                     	ds	1
  2067  000007                     ??i2_fputc:
  2068  000007                     ??i2_strncmp:
  2069  000007                     ?i2_tolower:
  2070                           	opt callstack 0
  2071  000007                     i2_isspace$2072:
  2072                           	opt callstack 0
  2073  000007                     i2___awdiv@quotient:
  2074                           	opt callstack 0
  2075  000007                     i2strcpy@s:
  2076                           	opt callstack 0
  2077  000007                     i2tolower@c:
  2078                           	opt callstack 0
  2079                           
  2080                           ; 2 bytes @ 0x6
  2081  000007                     	ds	1
  2082  000008                     ?i2_atoi:
  2083                           	opt callstack 0
  2084  000008                     i2I2cReadSerial@address:
  2085                           	opt callstack 0
  2086  000008                     i2atoi@s:
  2087                           	opt callstack 0
  2088  000008                     i2strncmp@l:
  2089                           	opt callstack 0
  2090                           
  2091                           ; 2 bytes @ 0x7
  2092  000008                     	ds	1
  2093  000009                     ??i2___fleq:
  2094  000009                     ??i2___fladd:
  2095  000009                     ??i2___fldiv:
  2096  000009                     ??i2_tolower:
  2097  000009                     i2I2cReadSerial@target:
  2098                           	opt callstack 0
  2099  000009                     i2___fpclassifyf@e:
  2100                           	opt callstack 0
  2101  000009                     i2strcpy@d:
  2102                           	opt callstack 0
  2103  000009                     i2___lmul@product:
  2104                           	opt callstack 0
  2105  000009                     i2___aodiv@divisor:
  2106                           	opt callstack 0
  2107  000009                     i2___aomod@divisor:
  2108                           	opt callstack 0
  2109                           
  2110                           ; 8 bytes @ 0x8
  2111  000009                     	ds	1
  2112  00000A                     ??i2_atoi:
  2113  00000A                     i2I2cReadSerial@i:
  2114                           	opt callstack 0
  2115  00000A                     i2strncmp@r:
  2116                           	opt callstack 0
  2117                           
  2118                           ; 2 bytes @ 0x9
  2119  00000A                     	ds	1
  2120  00000B                     i2___fpclassifyf@u:
  2121                           	opt callstack 0
  2122                           
  2123                           ; 4 bytes @ 0xA
  2124  00000B                     	ds	1
  2125  00000C                     i2fputs@s:
  2126                           	opt callstack 0
  2127                           
  2128                           ; 2 bytes @ 0xB
  2129  00000C                     	ds	1
  2130  00000D                     ?i2___xxtofl:
  2131                           	opt callstack 0
  2132  00000D                     i2___fladd@signs:
  2133                           	opt callstack 0
  2134  00000D                     i2_tolower$2163:
  2135                           	opt callstack 0
  2136  00000D                     i2___fldiv@rem:
  2137                           	opt callstack 0
  2138  00000D                     i2___xxtofl@val:
  2139                           	opt callstack 0
  2140                           
  2141                           ; 4 bytes @ 0xC
  2142  00000D                     	ds	1
  2143  00000E                     i2___fladd@aexp:
  2144                           	opt callstack 0
  2145  00000E                     i2atoi@neg:
  2146                           	opt callstack 0
  2147  00000E                     i2fputs@fp:
  2148                           	opt callstack 0
  2149                           
  2150                           ; 2 bytes @ 0xD
  2151  00000E                     	ds	1
  2152  00000F                     i2___fladd@bexp:
  2153                           	opt callstack 0
  2154                           
  2155                           ; 1 bytes @ 0xE
  2156  00000F                     	ds	1
  2157  000010                     i2___fladd@grs:
  2158                           	opt callstack 0
  2159  000010                     i2fputs@c:
  2160                           	opt callstack 0
  2161  000010                     i2_atoi$2041:
  2162                           	opt callstack 0
  2163                           
  2164                           ; 2 bytes @ 0xF
  2165  000010                     	ds	1
  2166  000011                     ??i2___xxtofl:
  2167  000011                     i2___aodiv@counter:
  2168                           	opt callstack 0
  2169  000011                     i2___aomod@counter:
  2170                           	opt callstack 0
  2171  000011                     i2___fldiv@sign:
  2172                           	opt callstack 0
  2173  000011                     i2fputs@i:
  2174                           	opt callstack 0
  2175                           
  2176                           ; 2 bytes @ 0x10
  2177  000011                     	ds	1
  2178  000012                     i2___aodiv@sign:
  2179                           	opt callstack 0
  2180  000012                     i2___aomod@sign:
  2181                           	opt callstack 0
  2182  000012                     i2___fldiv@new_exp:
  2183                           	opt callstack 0
  2184  000012                     i2_atoi$2043:
  2185                           	opt callstack 0
  2186                           
  2187                           ; 2 bytes @ 0x11
  2188  000012                     	ds	1
  2189  000013                     ?i2_pad:
  2190                           	opt callstack 0
  2191  000013                     ?i2_abs:
  2192                           	opt callstack 0
  2193  000013                     i2pad@fp:
  2194                           	opt callstack 0
  2195  000013                     i2abs@a:
  2196                           	opt callstack 0
  2197  000013                     i2___aodiv@quotient:
  2198                           	opt callstack 0
  2199                           
  2200                           ; 8 bytes @ 0x12
  2201  000013                     	ds	1
  2202  000014                     i2_atoi$2042:
  2203                           	opt callstack 0
  2204  000014                     i2___fldiv@grs:
  2205                           	opt callstack 0
  2206                           
  2207                           ; 4 bytes @ 0x13
  2208  000014                     	ds	1
  2209  000015                     ??i2_abs:
  2210  000015                     i2___xxtofl@sign:
  2211                           	opt callstack 0
  2212  000015                     i2pad@buf:
  2213                           	opt callstack 0
  2214  000015                     i2atoi@n:
  2215                           	opt callstack 0
  2216                           
  2217                           ; 2 bytes @ 0x14
  2218  000015                     	ds	1
  2219  000016                     i2___xxtofl@exp:
  2220                           	opt callstack 0
  2221                           
  2222                           ; 1 bytes @ 0x15
  2223  000016                     	ds	1
  2224  000017                     i2pad@p:
  2225                           	opt callstack 0
  2226  000017                     i2___xxtofl@arg:
  2227                           	opt callstack 0
  2228                           
  2229                           ; 4 bytes @ 0x16
  2230  000017                     	ds	1
  2231  000018                     i2___fldiv@bexp:
  2232                           	opt callstack 0
  2233                           
  2234                           ; 1 bytes @ 0x17
  2235  000018                     	ds	1
  2236  000019                     ??i2_pad:
  2237  000019                     i2___fldiv@aexp:
  2238                           	opt callstack 0
  2239                           
  2240                           ; 1 bytes @ 0x18
  2241  000019                     	ds	1
  2242  00001A                     ?i2_floorf:
  2243                           	opt callstack 0
  2244  00001A                     i2pad@i:
  2245                           	opt callstack 0
  2246  00001A                     i2floorf@x:
  2247                           	opt callstack 0
  2248                           
  2249                           ; 4 bytes @ 0x19
  2250  00001A                     	ds	1
  2251  00001B                     ?_ConvertByteArrayToFloat:
  2252                           	opt callstack 0
  2253  00001B                     ?i2___flmul:
  2254                           	opt callstack 0
  2255  00001B                     ConvertByteArrayToFloat@inputLeastSignificant:
  2256                           	opt callstack 0
  2257  00001B                     i2___flmul@b:
  2258                           	opt callstack 0
  2259                           
  2260                           ; 4 bytes @ 0x1A
  2261  00001B                     	ds	1
  2262  00001C                     i2pad@w:
  2263                           	opt callstack 0
  2264                           
  2265                           ; 2 bytes @ 0x1B
  2266  00001C                     	ds	2
  2267  00001E                     ??i2_floorf:
  2268  00001E                     ?i2_dtoa:
  2269                           	opt callstack 0
  2270  00001E                     i2dtoa@fp:
  2271                           	opt callstack 0
  2272                           
  2273                           ; 2 bytes @ 0x1D
  2274  00001E                     	ds	1
  2275  00001F                     ConvertByteArrayToFloat@inputMostSignificant:
  2276                           	opt callstack 0
  2277  00001F                     i2___flmul@a:
  2278                           	opt callstack 0
  2279                           
  2280                           ; 4 bytes @ 0x1E
  2281  00001F                     	ds	1
  2282  000020                     ConvertByteArrayToFloat@result:
  2283                           	opt callstack 0
  2284  000020                     i2dtoa@d:
  2285                           	opt callstack 0
  2286                           
  2287                           ; 8 bytes @ 0x1F
  2288  000020                     	ds	3
  2289  000023                     ??i2___flmul:
  2290                           
  2291                           ; 1 bytes @ 0x22
  2292  000023                     	ds	1
  2293  000024                     ConvertByteArrayToFloat@decimals:
  2294                           	opt callstack 0
  2295  000024                     i2floorf@m:
  2296                           	opt callstack 0
  2297                           
  2298                           ; 4 bytes @ 0x23
  2299  000024                     	ds	3
  2300  000027                     i2___flmul@sign:
  2301                           	opt callstack 0
  2302                           
  2303                           ; 1 bytes @ 0x26
  2304  000027                     	ds	1
  2305  000028                     ??i2_dtoa:
  2306  000028                     i2floorf@e:
  2307                           	opt callstack 0
  2308  000028                     i2___flmul@grs:
  2309                           	opt callstack 0
  2310                           
  2311                           ; 4 bytes @ 0x27
  2312  000028                     	ds	2
  2313  00002A                     i2floorf@u:
  2314                           	opt callstack 0
  2315                           
  2316                           ; 4 bytes @ 0x29
  2317  00002A                     	ds	2
  2318  00002C                     i2___flmul@aexp:
  2319                           	opt callstack 0
  2320                           
  2321                           ; 1 bytes @ 0x2B
  2322  00002C                     	ds	1
  2323  00002D                     i2___flmul@bexp:
  2324                           	opt callstack 0
  2325                           
  2326                           ; 1 bytes @ 0x2C
  2327  00002D                     	ds	1
  2328  00002E                     i2___flmul@prod:
  2329                           	opt callstack 0
  2330                           
  2331                           ; 4 bytes @ 0x2D
  2332  00002E                     	ds	2
  2333  000030                     i2_dtoa$1514:
  2334                           	opt callstack 0
  2335                           
  2336                           ; 2 bytes @ 0x2F
  2337  000030                     	ds	2
  2338  000032                     i2dtoa@p:
  2339                           	opt callstack 0
  2340  000032                     i2___flmul@temp:
  2341                           	opt callstack 0
  2342                           
  2343                           ; 2 bytes @ 0x31
  2344  000032                     	ds	2
  2345  000034                     ?i2___fltol:
  2346                           	opt callstack 0
  2347  000034                     ?i2___flsub:
  2348                           	opt callstack 0
  2349  000034                     i2dtoa@w:
  2350                           	opt callstack 0
  2351  000034                     i2___flge@ff1:
  2352                           	opt callstack 0
  2353  000034                     i2___fltol@f1:
  2354                           	opt callstack 0
  2355  000034                     i2___flsub@b:
  2356                           	opt callstack 0
  2357                           
  2358                           ; 4 bytes @ 0x33
  2359  000034                     	ds	2
  2360  000036                     i2dtoa@s:
  2361                           	opt callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x35
  2364  000036                     	ds	2
  2365  000038                     ??i2___fltol:
  2366  000038                     i2___flge@ff2:
  2367                           	opt callstack 0
  2368  000038                     i2___flsub@a:
  2369                           	opt callstack 0
  2370  000038                     i2dtoa@n:
  2371                           	opt callstack 0
  2372                           
  2373                           ; 8 bytes @ 0x37
  2374  000038                     	ds	4
  2375  00003C                     ??i2___flge:
  2376  00003C                     i2___fltol@sign1:
  2377                           	opt callstack 0
  2378                           
  2379                           ; 1 bytes @ 0x3B
  2380  00003C                     	ds	1
  2381  00003D                     i2___fltol@exp1:
  2382                           	opt callstack 0
  2383                           
  2384                           ; 1 bytes @ 0x3C
  2385  00003D                     	ds	1
  2386  00003E                     ConvertFloatToByteArray@input:
  2387                           	opt callstack 0
  2388                           
  2389                           ; 4 bytes @ 0x3D
  2390  00003E                     	ds	2
  2391  000040                     ?i2_efgtoa:
  2392                           	opt callstack 0
  2393  000040                     i2dtoa@i:
  2394                           	opt callstack 0
  2395  000040                     i2efgtoa@fp:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x3F
  2399  000040                     	ds	2
  2400  000042                     ConvertFloatToByteArray@output:
  2401                           	opt callstack 0
  2402  000042                     i2efgtoa@f:
  2403                           	opt callstack 0
  2404                           
  2405                           ; 4 bytes @ 0x41
  2406  000042                     	ds	2
  2407  000044                     ??_ConvertFloatToByteArray:
  2408                           
  2409                           ; 1 bytes @ 0x43
  2410  000044                     	ds	1
  2411  000045                     ConvertFloatToByteArray@decimals:
  2412                           	opt callstack 0
  2413                           
  2414                           ; 4 bytes @ 0x44
  2415  000045                     	ds	1
  2416  000046                     i2efgtoa@c:
  2417                           	opt callstack 0
  2418                           
  2419                           ; 1 bytes @ 0x45
  2420  000046                     	ds	1
  2421  000047                     ??i2_efgtoa:
  2422                           
  2423                           ; 1 bytes @ 0x46
  2424  000047                     	ds	5
  2425  00004C                     ?i2_vfpfcnvrt:
  2426                           	opt callstack 0
  2427  00004C                     i2vfpfcnvrt@fp:
  2428                           	opt callstack 0
  2429                           
  2430                           ; 2 bytes @ 0x4B
  2431  00004C                     	ds	2
  2432  00004E                     i2vfpfcnvrt@fmt:
  2433                           	opt callstack 0
  2434                           
  2435                           ; 2 bytes @ 0x4D
  2436  00004E                     	ds	2
  2437  000050                     i2vfpfcnvrt@ap:
  2438                           	opt callstack 0
  2439                           
  2440                           ; 2 bytes @ 0x4F
  2441  000050                     	ds	2
  2442  000052                     ??i2_vfpfcnvrt:
  2443                           
  2444                           ; 1 bytes @ 0x51
  2445  000052                     	ds	4
  2446  000056                     ?i2_vfprintf:
  2447                           	opt callstack 0
  2448  000056                     i2vfprintf@fp:
  2449                           	opt callstack 0
  2450                           
  2451                           ; 2 bytes @ 0x55
  2452  000056                     	ds	2
  2453  000058                     i2vfprintf@fmt:
  2454                           	opt callstack 0
  2455                           
  2456                           ; 2 bytes @ 0x57
  2457  000058                     	ds	2
  2458  00005A                     i2vfprintf@ap:
  2459                           	opt callstack 0
  2460                           
  2461                           ; 2 bytes @ 0x59
  2462  00005A                     	ds	2
  2463  00005C                     i2vfprintf@cfmt:
  2464                           	opt callstack 0
  2465                           
  2466                           ; 2 bytes @ 0x5B
  2467  00005C                     	ds	2
  2468  00005E                     ??_LogData:
  2469  00005E                     ??_VerifyLogging:
  2470  00005E                     
  2471                           ; 1 bytes @ 0x5D
  2472  00005E                     	ds	1
  2473  00005F                     
  2474                           ; 1 bytes @ 0x5E
  2475 ;;
  2476 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2477 ;;
  2478 ;; *************** function _main *****************
  2479 ;; Defined at:
  2480 ;;		line 106 in file "main.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;Total ram usage:        2 bytes
  2499 ;; Hardware stack levels required when called:   28
  2500 ;; This function calls:
  2501 ;;		_EUSART1_Initialize
  2502 ;;		_I2cWriteSerial
  2503 ;;		_I2c_init
  2504 ;;		_SYSTEM_Initialize
  2505 ;;		_TMR2_Initialize
  2506 ;;		_TMR2_SetInterruptHandler
  2507 ;;		_TMR4_Initialize
  2508 ;;		_TMR4_SetInterruptHandler
  2509 ;;		_WriteTempHumidToDisplay
  2510 ;;		_printf
  2511 ;; This function is called by:
  2512 ;;		Startup code after reset
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text0
  2517  005FC2                     __ptext0:
  2518                           	opt callstack 0
  2519  005FC2                     _main:
  2520                           	opt callstack 3
  2521                           
  2522                           ;main.c: 108:     SYSTEM_Initialize();
  2523                           
  2524                           ;incstack = 0
  2525  005FC2  EC53  F03A         	call	_SYSTEM_Initialize	;wreg free
  2526                           
  2527                           ;main.c: 111:     (INTCONbits.GIE = 1);
  2528  005FC6  8EF2               	bsf	4082,7,c	;volatile
  2529                           
  2530                           ;main.c: 114:     (INTCONbits.PEIE = 1);
  2531  005FC8  8CF2               	bsf	4082,6,c	;volatile
  2532                           
  2533                           ;main.c: 117:     TMR2_Initialize();
  2534  005FCA  EC14  F03A         	call	_TMR2_Initialize	;wreg free
  2535                           
  2536                           ;main.c: 119:     TMR2_SetInterruptHandler(Timer2Interrupt);
  2537  005FCE  0EEA               	movlw	low _Timer2Interrupt
  2538  005FD0  0101               	movlb	1	; () banked
  2539  005FD2  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  2540  005FD4  0E74               	movlw	high _Timer2Interrupt
  2541  005FD6  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2542  005FD8  EC8A  F03A         	call	_TMR2_SetInterruptHandler	;wreg free
  2543                           
  2544                           ;main.c: 121:     TMR4_Initialize();
  2545  005FDC  ECCD  F039         	call	_TMR4_Initialize	;wreg free
  2546                           
  2547                           ;main.c: 123:     TMR4_SetInterruptHandler(Timer4Interrupt);
  2548  005FE0  0E82               	movlw	low _Timer4Interrupt
  2549  005FE2  0101               	movlb	1	; () banked
  2550  005FE4  6F00               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
  2551  005FE6  0E48               	movlw	high _Timer4Interrupt
  2552  005FE8  6F01               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2553  005FEA  EC85  F03A         	call	_TMR4_SetInterruptHandler	;wreg free
  2554                           
  2555                           ;main.c: 126:     EUSART1_Initialize();
  2556  005FEE  ECEF  F034         	call	_EUSART1_Initialize	;wreg free
  2557                           
  2558                           ;main.c: 128:     I2c_init();
  2559  005FF2  EC60  F03A         	call	_I2c_init	;wreg free
  2560                           
  2561                           ;main.c: 130:     I2cWriteSerial(displayAddress, displayInitialize, 5);
  2562  005FF6  0ED2               	movlw	low _displayInitialize
  2563  005FF8  0101               	movlb	1	; () banked
  2564  005FFA  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  2565  005FFC  0E02               	movlw	high _displayInitialize
  2566  005FFE  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  2567  006000  0E05               	movlw	5
  2568  006002  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  2569  006004  0E3C               	movlw	60
  2570  006006  EC0D  F033         	call	_I2cWriteSerial
  2571                           
  2572                           ;main.c: 131:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2573  00600A  0ED0               	movlw	208
  2574  00600C  0101               	movlb	1	; () banked
  2575  00600E  6FD5               	movwf	??_main& (0+255),b
  2576  006010  0EC9               	movlw	201
  2577  006012                     u12457:
  2578  006012  2EE8               	decfsz	wreg,f,c
  2579  006014  D7FE               	bra	u12457
  2580  006016  2FD5               	decfsz	??_main& (0+255),f,b
  2581  006018  D7FC               	bra	u12457
  2582  00601A  D000               	nop2	
  2583                           
  2584                           ;main.c: 133:     I2cWriteSerial(displayAddress, customSign0, 11);
  2585  00601C  0EC7               	movlw	low _customSign0
  2586  00601E  0101               	movlb	1	; () banked
  2587  006020  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  2588  006022  0E02               	movlw	high _customSign0
  2589  006024  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  2590  006026  0E0B               	movlw	11
  2591  006028  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  2592  00602A  0E3C               	movlw	60
  2593  00602C  EC0D  F033         	call	_I2cWriteSerial
  2594                           
  2595                           ;main.c: 134:     I2cWriteSerial(displayAddress, customSign1, 11);
  2596  006030  0EBC               	movlw	low _customSign1
  2597  006032  0101               	movlb	1	; () banked
  2598  006034  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  2599  006036  0E02               	movlw	high _customSign1
  2600  006038  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  2601  00603A  0E0B               	movlw	11
  2602  00603C  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  2603  00603E  0E3C               	movlw	60
  2604  006040  EC0D  F033         	call	_I2cWriteSerial
  2605                           
  2606                           ;main.c: 136:     printf("hello world\r\n");
  2607  006044  0EBB               	movlw	low STR_1
  2608  006046  0101               	movlb	1	; () banked
  2609  006048  6FA9               	movwf	printf@fmt& (0+255),b
  2610  00604A  0E10               	movlw	high STR_1
  2611  00604C  6FAA               	movwf	(printf@fmt+1)& (0+255),b
  2612  00604E  EC7E  F039         	call	_printf	;wreg free
  2613  006052                     l8727:
  2614                           
  2615                           ;main.c: 140:         WriteTempHumidToDisplay();
  2616  006052  ECD2  F028         	call	_WriteTempHumidToDisplay	;wreg free
  2617                           
  2618                           ;main.c: 141:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  2619  006056  0E52               	movlw	82
  2620  006058  0101               	movlb	1	; () banked
  2621  00605A  6FD6               	movwf	(??_main+1)& (0+255),b
  2622  00605C  0E2B               	movlw	43
  2623  00605E  6FD5               	movwf	??_main& (0+255),b
  2624  006060  0E00               	movlw	0
  2625  006062                     u12467:
  2626  006062  2EE8               	decfsz	wreg,f,c
  2627  006064  D7FE               	bra	u12467
  2628  006066  2FD5               	decfsz	??_main& (0+255),f,b
  2629  006068  D7FC               	bra	u12467
  2630  00606A  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  2631  00606C  D7FA               	bra	u12467
  2632  00606E  F000               	nop	
  2633  006070  D7F0               	goto	l8727
  2634  006072                     __end_of_main:
  2635                           	opt callstack 0
  2636                           
  2637 ;; *************** function _WriteTempHumidToDisplay *****************
  2638 ;; Defined at:
  2639 ;;		line 330 in file "main.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  printable       6  203[BANK1 ] unsigned char [6]
  2644 ;;  result          4  209[BANK1 ] float 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;Total ram usage:       10 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:   27
  2661 ;; This function calls:
  2662 ;;		_DisplaySetCursor
  2663 ;;		_I2cWriteSerial
  2664 ;;		_ReadHumidity
  2665 ;;		_ReadTemperature
  2666 ;;		_sprintf
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text1
  2673  0051A4                     __ptext1:
  2674                           	opt callstack 0
  2675  0051A4                     _WriteTempHumidToDisplay:
  2676                           	opt callstack 3
  2677                           
  2678                           ;main.c: 331:     DisplaySetCursor(0, 0);
  2679                           
  2680                           ;incstack = 0
  2681  0051A4  0E00               	movlw	0
  2682  0051A6  0101               	movlb	1	; () banked
  2683  0051A8  6FB7               	movwf	DisplaySetCursor@charNum& (0+255),b
  2684  0051AA  0E00               	movlw	0
  2685  0051AC  ECB0  F038         	call	_DisplaySetCursor
  2686                           
  2687                           ;main.c: 332:     I2cWriteSerial(displayAddress, "@Temp: ", 7);
  2688  0051B0  0ED4               	movlw	low STR_5
  2689  0051B2  0101               	movlb	1	; () banked
  2690  0051B4  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  2691  0051B6  0E10               	movlw	high STR_5
  2692  0051B8  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  2693  0051BA  0E07               	movlw	7
  2694  0051BC  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  2695  0051BE  0E3C               	movlw	60
  2696  0051C0  EC0D  F033         	call	_I2cWriteSerial
  2697                           
  2698                           ;main.c: 333:     DisplaySetCursor(1, 0);
  2699  0051C4  0E00               	movlw	0
  2700  0051C6  0101               	movlb	1	; () banked
  2701  0051C8  6FB7               	movwf	DisplaySetCursor@charNum& (0+255),b
  2702  0051CA  0E01               	movlw	1
  2703  0051CC  ECB0  F038         	call	_DisplaySetCursor
  2704                           
  2705                           ;main.c: 334:     I2cWriteSerial(displayAddress, "@Humidity:", 10);
  2706  0051D0  0EC9               	movlw	low STR_6
  2707  0051D2  0101               	movlb	1	; () banked
  2708  0051D4  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  2709  0051D6  0E10               	movlw	high STR_6
  2710  0051D8  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  2711  0051DA  0E0A               	movlw	10
  2712  0051DC  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  2713  0051DE  0E3C               	movlw	60
  2714  0051E0  EC0D  F033         	call	_I2cWriteSerial
  2715                           
  2716                           ;main.c: 336:     char printable[6];;main.c: 339:     float result = ReadTemperature();
  2717  0051E4  ECF8  F029         	call	_ReadTemperature	;wreg free
  2718  0051E8  C1B7  F1D1         	movff	?_ReadTemperature,WriteTempHumidToDisplay@result
  2719  0051EC  C1B8  F1D2         	movff	?_ReadTemperature+1,WriteTempHumidToDisplay@result+1
  2720  0051F0  C1B9  F1D3         	movff	?_ReadTemperature+2,WriteTempHumidToDisplay@result+2
  2721  0051F4  C1BA  F1D4         	movff	?_ReadTemperature+3,WriteTempHumidToDisplay@result+3
  2722                           
  2723                           ;main.c: 341:     DisplaySetCursor(0, 6);
  2724  0051F8  0E06               	movlw	6
  2725  0051FA  0101               	movlb	1	; () banked
  2726  0051FC  6FB7               	movwf	DisplaySetCursor@charNum& (0+255),b
  2727  0051FE  0E00               	movlw	0
  2728  005200  ECB0  F038         	call	_DisplaySetCursor
  2729                           
  2730                           ;main.c: 342:     sprintf(printable, "@%.1f", result);
  2731  005204  0ECB               	movlw	low WriteTempHumidToDisplay@printable
  2732  005206  0101               	movlb	1	; () banked
  2733  005208  6FA9               	movwf	sprintf@s& (0+255),b
  2734  00520A  0E01               	movlw	high WriteTempHumidToDisplay@printable
  2735  00520C  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  2736  00520E  0EDC               	movlw	low STR_7
  2737  005210  6FAB               	movwf	sprintf@fmt& (0+255),b
  2738  005212  0E10               	movlw	high STR_7
  2739  005214  6FAC               	movwf	(sprintf@fmt+1)& (0+255),b
  2740  005216  C1D1  F1AD         	movff	WriteTempHumidToDisplay@result,?_sprintf+4
  2741  00521A  C1D2  F1AE         	movff	WriteTempHumidToDisplay@result+1,?_sprintf+5
  2742  00521E  C1D3  F1AF         	movff	WriteTempHumidToDisplay@result+2,?_sprintf+6
  2743  005222  C1D4  F1B0         	movff	WriteTempHumidToDisplay@result+3,?_sprintf+7
  2744  005226  ECDC  F036         	call	_sprintf	;wreg free
  2745                           
  2746                           ;main.c: 344:     printable[5] = 0x00;
  2747  00522A  0E00               	movlw	0
  2748  00522C  0101               	movlb	1	; () banked
  2749  00522E  6FD0               	movwf	(WriteTempHumidToDisplay@printable+5)& (0+255),b
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;main.c: 345:     I2cWriteSerial(displayAddress, printable, 6);
  2753  005230  0ECB               	movlw	low WriteTempHumidToDisplay@printable
  2754  005232  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  2755  005234  0E01               	movlw	high WriteTempHumidToDisplay@printable
  2756  005236  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  2757  005238  0E06               	movlw	6
  2758  00523A  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  2759  00523C  0E3C               	movlw	60
  2760  00523E  EC0D  F033         	call	_I2cWriteSerial
  2761                           
  2762                           ;main.c: 346:     I2cWriteSerial(displayAddress, "@  ", 2);
  2763  005242  0EF2               	movlw	low STR_8
  2764  005244  0101               	movlb	1	; () banked
  2765  005246  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  2766  005248  0E10               	movlw	high STR_8
  2767  00524A  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  2768  00524C  0E02               	movlw	2
  2769  00524E  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  2770  005250  0E3C               	movlw	60
  2771  005252  EC0D  F033         	call	_I2cWriteSerial
  2772                           
  2773                           ;main.c: 349:     result = ReadHumidity();
  2774  005256  EC1C  F02B         	call	_ReadHumidity	;wreg free
  2775  00525A  C1B7  F1D1         	movff	?_ReadHumidity,WriteTempHumidToDisplay@result
  2776  00525E  C1B8  F1D2         	movff	?_ReadHumidity+1,WriteTempHumidToDisplay@result+1
  2777  005262  C1B9  F1D3         	movff	?_ReadHumidity+2,WriteTempHumidToDisplay@result+2
  2778  005266  C1BA  F1D4         	movff	?_ReadHumidity+3,WriteTempHumidToDisplay@result+3
  2779                           
  2780                           ;main.c: 352:     DisplaySetCursor(1, 10);
  2781  00526A  0E0A               	movlw	10
  2782  00526C  0101               	movlb	1	; () banked
  2783  00526E  6FB7               	movwf	DisplaySetCursor@charNum& (0+255),b
  2784  005270  0E01               	movlw	1
  2785  005272  ECB0  F038         	call	_DisplaySetCursor
  2786                           
  2787                           ;main.c: 353:     sprintf(printable, "@%.1f", result);
  2788  005276  0ECB               	movlw	low WriteTempHumidToDisplay@printable
  2789  005278  0101               	movlb	1	; () banked
  2790  00527A  6FA9               	movwf	sprintf@s& (0+255),b
  2791  00527C  0E01               	movlw	high WriteTempHumidToDisplay@printable
  2792  00527E  6FAA               	movwf	(sprintf@s+1)& (0+255),b
  2793  005280  0EDC               	movlw	low STR_7
  2794  005282  6FAB               	movwf	sprintf@fmt& (0+255),b
  2795  005284  0E10               	movlw	high STR_7
  2796  005286  6FAC               	movwf	(sprintf@fmt+1)& (0+255),b
  2797  005288  C1D1  F1AD         	movff	WriteTempHumidToDisplay@result,?_sprintf+4
  2798  00528C  C1D2  F1AE         	movff	WriteTempHumidToDisplay@result+1,?_sprintf+5
  2799  005290  C1D3  F1AF         	movff	WriteTempHumidToDisplay@result+2,?_sprintf+6
  2800  005294  C1D4  F1B0         	movff	WriteTempHumidToDisplay@result+3,?_sprintf+7
  2801  005298  ECDC  F036         	call	_sprintf	;wreg free
  2802                           
  2803                           ;main.c: 354:     printable[5] = 0x01;
  2804  00529C  0E01               	movlw	1
  2805  00529E  0101               	movlb	1	; () banked
  2806  0052A0  6FD0               	movwf	(WriteTempHumidToDisplay@printable+5)& (0+255),b
  2807                           
  2808                           ; BSR set to: 1
  2809                           ;main.c: 355:     I2cWriteSerial(displayAddress, printable, 6);
  2810  0052A2  0ECB               	movlw	low WriteTempHumidToDisplay@printable
  2811  0052A4  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  2812  0052A6  0E01               	movlw	high WriteTempHumidToDisplay@printable
  2813  0052A8  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  2814  0052AA  0E06               	movlw	6
  2815  0052AC  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  2816  0052AE  0E3C               	movlw	60
  2817  0052B0  EC0D  F033         	call	_I2cWriteSerial
  2818                           
  2819                           ;main.c: 356:     I2cWriteSerial(displayAddress, "@  ", 2);
  2820  0052B4  0EF2               	movlw	low STR_8
  2821  0052B6  0101               	movlb	1	; () banked
  2822  0052B8  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  2823  0052BA  0E10               	movlw	high STR_8
  2824  0052BC  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  2825  0052BE  0E02               	movlw	2
  2826  0052C0  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  2827  0052C2  0E3C               	movlw	60
  2828  0052C4  EC0D  F033         	call	_I2cWriteSerial
  2829  0052C8  0012               	return		;funcret
  2830  0052CA                     __end_of_WriteTempHumidToDisplay:
  2831                           	opt callstack 0
  2832                           
  2833 ;; *************** function _sprintf *****************
  2834 ;; Defined at:
  2835 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  s               2  169[BANK1 ] PTR unsigned char 
  2838 ;;		 -> WriteTempHumidToDisplay@printable(6), 
  2839 ;;  fmt             2  171[BANK1 ] PTR const unsigned char 
  2840 ;;		 -> STR_9(6), STR_7(6), 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  f               6  181[BANK1 ] struct _IO_FILE
  2843 ;;  ap              2  179[BANK1 ] PTR void [1]
  2844 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2845 ;;  ret             2    0        int 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  2  169[BANK1 ] int 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2855 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;Total ram usage:       18 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:   24
  2862 ;; This function calls:
  2863 ;;		_vfprintf
  2864 ;; This function is called by:
  2865 ;;		_WriteTempHumidToDisplay
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text2
  2870  006DB8                     __ptext2:
  2871                           	opt callstack 0
  2872  006DB8                     _sprintf:
  2873                           	opt callstack 5
  2874                           
  2875                           ;incstack = 0
  2876  006DB8  0EAD               	movlw	low (?_sprintf+4)
  2877  006DBA  0101               	movlb	1	; () banked
  2878  006DBC  6FB3               	movwf	sprintf@ap& (0+255),b
  2879  006DBE  0E01               	movlw	high (?_sprintf+4)
  2880  006DC0  6FB4               	movwf	(sprintf@ap+1)& (0+255),b
  2881  006DC2  C1A9  F1B5         	movff	sprintf@s,sprintf@f
  2882  006DC6  C1AA  F1B6         	movff	sprintf@s+1,sprintf@f+1
  2883                           
  2884                           ; BSR set to: 1
  2885  006DCA  0E00               	movlw	0
  2886  006DCC  6FB8               	movwf	(sprintf@f+3)& (0+255),b
  2887  006DCE  0E00               	movlw	0
  2888  006DD0  6FB7               	movwf	(sprintf@f+2)& (0+255),b
  2889                           
  2890                           ; BSR set to: 1
  2891  006DD2  0E00               	movlw	0
  2892  006DD4  6FBA               	movwf	(sprintf@f+5)& (0+255),b
  2893  006DD6  0E00               	movlw	0
  2894  006DD8  6FB9               	movwf	(sprintf@f+4)& (0+255),b
  2895                           
  2896                           ; BSR set to: 1
  2897  006DDA  0EB5               	movlw	low sprintf@f
  2898  006DDC  6FA1               	movwf	vfprintf@fp& (0+255),b
  2899  006DDE  0E01               	movlw	high sprintf@f
  2900  006DE0  6FA2               	movwf	(vfprintf@fp+1)& (0+255),b
  2901  006DE2  C1AB  F1A3         	movff	sprintf@fmt,vfprintf@fmt
  2902  006DE6  C1AC  F1A4         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2903  006DEA  0EB3               	movlw	low sprintf@ap
  2904  006DEC  6FA5               	movwf	vfprintf@ap& (0+255),b
  2905  006DEE  0E01               	movlw	high sprintf@ap
  2906  006DF0  6FA6               	movwf	(vfprintf@ap+1)& (0+255),b
  2907  006DF2  EC04  F036         	call	_vfprintf	;wreg free
  2908  006DF6  0101               	movlb	1	; () banked
  2909  006DF8  51B7               	movf	(sprintf@f+2)& (0+255),w,b
  2910  006DFA  25A9               	addwf	sprintf@s& (0+255),w,b
  2911  006DFC  6ED9               	movwf	fsr2l,c
  2912  006DFE  51B8               	movf	(sprintf@f+3)& (0+255),w,b
  2913  006E00  21AA               	addwfc	(sprintf@s+1)& (0+255),w,b
  2914  006E02  6EDA               	movwf	fsr2h,c
  2915  006E04  0E00               	movlw	0
  2916  006E06  6EDF               	movwf	indf2,c
  2917                           
  2918                           ; BSR set to: 1
  2919  006E08  0012               	return		;funcret
  2920  006E0A                     __end_of_sprintf:
  2921                           	opt callstack 0
  2922                           
  2923 ;; *************** function _ReadTemperature *****************
  2924 ;; Defined at:
  2925 ;;		line 293 in file "main.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  conversion      4  199[BANK1 ] float 
  2930 ;;  resultWord      4  195[BANK1 ] unsigned long 
  2931 ;;  temperature     4  189[BANK1 ] float 
  2932 ;;  result          2  193[BANK1 ] unsigned char [2]
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  4  183[BANK1 ] float 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2942 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;Total ram usage:       20 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:   26
  2949 ;; This function calls:
  2950 ;;		_I2cReadSerial
  2951 ;;		_I2cWriteSerial
  2952 ;;		___fladd
  2953 ;;		___fldiv
  2954 ;;		___flmul
  2955 ;;		___xxtofl
  2956 ;; This function is called by:
  2957 ;;		_WriteTempHumidToDisplay
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text3
  2962  0053F0                     __ptext3:
  2963                           	opt callstack 0
  2964  0053F0                     _ReadTemperature:
  2965                           	opt callstack 3
  2966                           
  2967                           ;main.c: 295:     uint8_t result[2];;main.c: 297:     I2cWriteSerial(humidityTherometerA
      +                          ddress, readTemprature, 1);
  2968                           
  2969                           ; BSR set to: 1
  2970                           ;incstack = 0
  2971  0053F0  0EFF               	movlw	low _readTemprature
  2972  0053F2  0101               	movlb	1	; () banked
  2973  0053F4  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  2974  0053F6  0E01               	movlw	high _readTemprature
  2975  0053F8  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  2976  0053FA  0E01               	movlw	1
  2977  0053FC  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  2978  0053FE  51FC               	movf	_humidityTherometerAddress& (0+255),w,b
  2979  005400  EC0D  F033         	call	_I2cWriteSerial
  2980                           
  2981                           ;main.c: 298:     I2cReadSerial(humidityTherometerAddress, result, 2);
  2982  005404  0EC1               	movlw	low ReadTemperature@result
  2983  005406  0101               	movlb	1	; () banked
  2984  005408  6F00               	movwf	I2cReadSerial@readData& (0+255),b
  2985  00540A  0E01               	movlw	high ReadTemperature@result
  2986  00540C  6F01               	movwf	(I2cReadSerial@readData+1)& (0+255),b
  2987  00540E  0E02               	movlw	2
  2988  005410  6F02               	movwf	I2cReadSerial@length& (0+255),b
  2989  005412  51FC               	movf	_humidityTherometerAddress& (0+255),w,b
  2990  005414  ECE2  F030         	call	_I2cReadSerial
  2991                           
  2992                           ;main.c: 300:     uint32_t resultWord = result[0] << 8;
  2993  005418  0101               	movlb	1	; () banked
  2994  00541A  51C1               	movf	ReadTemperature@result& (0+255),w,b
  2995  00541C  6FBC               	movwf	(??_ReadTemperature+1)& (0+255),b
  2996  00541E  6BBB               	clrf	??_ReadTemperature& (0+255),b
  2997  005420  C1BB  F1C3         	movff	??_ReadTemperature,ReadTemperature@resultWord
  2998  005424  C1BC  F1C4         	movff	??_ReadTemperature+1,ReadTemperature@resultWord+1
  2999  005428  0E00               	movlw	0
  3000  00542A  BFC4               	btfsc	(ReadTemperature@resultWord+1)& (0+255),7,b
  3001  00542C  0EFF               	movlw	-1
  3002  00542E  6FC5               	movwf	(ReadTemperature@resultWord+2)& (0+255),b
  3003  005430  6FC6               	movwf	(ReadTemperature@resultWord+3)& (0+255),b
  3004                           
  3005                           ; BSR set to: 1
  3006                           ;main.c: 301:     resultWord = resultWord + result[1];
  3007  005432  51C2               	movf	(ReadTemperature@result+1)& (0+255),w,b
  3008  005434  25C3               	addwf	ReadTemperature@resultWord& (0+255),w,b
  3009  005436  6FC3               	movwf	ReadTemperature@resultWord& (0+255),b
  3010  005438  0E00               	movlw	0
  3011  00543A  21C4               	addwfc	(ReadTemperature@resultWord+1)& (0+255),w,b
  3012  00543C  6FC4               	movwf	(ReadTemperature@resultWord+1)& (0+255),b
  3013  00543E  0E00               	movlw	0
  3014  005440  21C5               	addwfc	(ReadTemperature@resultWord+2)& (0+255),w,b
  3015  005442  6FC5               	movwf	(ReadTemperature@resultWord+2)& (0+255),b
  3016  005444  0E00               	movlw	0
  3017  005446  21C6               	addwfc	(ReadTemperature@resultWord+3)& (0+255),w,b
  3018  005448  6FC6               	movwf	(ReadTemperature@resultWord+3)& (0+255),b
  3019                           
  3020                           ; BSR set to: 1
  3021                           ;main.c: 304:     float conversion = 175.52 * resultWord;
  3022  00544A  C1C3  F10C         	movff	ReadTemperature@resultWord,___xxtofl@val
  3023  00544E  C1C4  F10D         	movff	ReadTemperature@resultWord+1,___xxtofl@val+1
  3024  005452  C1C5  F10E         	movff	ReadTemperature@resultWord+2,___xxtofl@val+2
  3025  005456  C1C6  F10F         	movff	ReadTemperature@resultWord+3,___xxtofl@val+3
  3026  00545A  0E00               	movlw	0
  3027  00545C  EC90  F027         	call	___xxtofl
  3028  005460  C10C  F11A         	movff	?___xxtofl,___flmul@b
  3029  005464  C10D  F11B         	movff	?___xxtofl+1,___flmul@b+1
  3030  005468  C10E  F11C         	movff	?___xxtofl+2,___flmul@b+2
  3031  00546C  C10F  F11D         	movff	?___xxtofl+3,___flmul@b+3
  3032  005470  0E1F               	movlw	31
  3033  005472  0101               	movlb	1	; () banked
  3034  005474  6F1E               	movwf	___flmul@a& (0+255),b
  3035  005476  0E85               	movlw	133
  3036  005478  6F1F               	movwf	(___flmul@a+1)& (0+255),b
  3037  00547A  0E2F               	movlw	47
  3038  00547C  6F20               	movwf	(___flmul@a+2)& (0+255),b
  3039  00547E  0E43               	movlw	67
  3040  005480  6F21               	movwf	(___flmul@a+3)& (0+255),b
  3041  005482  EC86  F016         	call	___flmul	;wreg free
  3042  005486  C11A  F1C7         	movff	?___flmul,ReadTemperature@conversion
  3043  00548A  C11B  F1C8         	movff	?___flmul+1,ReadTemperature@conversion+1
  3044  00548E  C11C  F1C9         	movff	?___flmul+2,ReadTemperature@conversion+2
  3045  005492  C11D  F1CA         	movff	?___flmul+3,ReadTemperature@conversion+3
  3046                           
  3047                           ;main.c: 305:     conversion = conversion / 65536;
  3048  005496  C1C7  F100         	movff	ReadTemperature@conversion,___fldiv@b
  3049  00549A  C1C8  F101         	movff	ReadTemperature@conversion+1,___fldiv@b+1
  3050  00549E  C1C9  F102         	movff	ReadTemperature@conversion+2,___fldiv@b+2
  3051  0054A2  C1CA  F103         	movff	ReadTemperature@conversion+3,___fldiv@b+3
  3052  0054A6  0E00               	movlw	0
  3053  0054A8  0101               	movlb	1	; () banked
  3054  0054AA  6F04               	movwf	___fldiv@a& (0+255),b
  3055  0054AC  0E00               	movlw	0
  3056  0054AE  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  3057  0054B0  0E80               	movlw	128
  3058  0054B2  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  3059  0054B4  0E47               	movlw	71
  3060  0054B6  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  3061  0054B8  ECE6  F01C         	call	___fldiv	;wreg free
  3062  0054BC  C100  F1C7         	movff	?___fldiv,ReadTemperature@conversion
  3063  0054C0  C101  F1C8         	movff	?___fldiv+1,ReadTemperature@conversion+1
  3064  0054C4  C102  F1C9         	movff	?___fldiv+2,ReadTemperature@conversion+2
  3065  0054C8  C103  F1CA         	movff	?___fldiv+3,ReadTemperature@conversion+3
  3066                           
  3067                           ;main.c: 306:     float temperature = conversion - 46.85;
  3068  0054CC  C1C7  F100         	movff	ReadTemperature@conversion,___fladd@b
  3069  0054D0  C1C8  F101         	movff	ReadTemperature@conversion+1,___fladd@b+1
  3070  0054D4  C1C9  F102         	movff	ReadTemperature@conversion+2,___fladd@b+2
  3071  0054D8  C1CA  F103         	movff	ReadTemperature@conversion+3,___fladd@b+3
  3072  0054DC  0E66               	movlw	102
  3073  0054DE  0101               	movlb	1	; () banked
  3074  0054E0  6F04               	movwf	___fladd@a& (0+255),b
  3075  0054E2  0E66               	movlw	102
  3076  0054E4  6F05               	movwf	(___fladd@a+1)& (0+255),b
  3077  0054E6  0E3B               	movlw	59
  3078  0054E8  6F06               	movwf	(___fladd@a+2)& (0+255),b
  3079  0054EA  0EC2               	movlw	194
  3080  0054EC  6F07               	movwf	(___fladd@a+3)& (0+255),b
  3081  0054EE  ECD9  F019         	call	___fladd	;wreg free
  3082  0054F2  C100  F1BD         	movff	?___fladd,ReadTemperature@temperature
  3083  0054F6  C101  F1BE         	movff	?___fladd+1,ReadTemperature@temperature+1
  3084  0054FA  C102  F1BF         	movff	?___fladd+2,ReadTemperature@temperature+2
  3085  0054FE  C103  F1C0         	movff	?___fladd+3,ReadTemperature@temperature+3
  3086                           
  3087                           ;main.c: 308:     return temperature;
  3088  005502  C1BD  F1B7         	movff	ReadTemperature@temperature,?_ReadTemperature
  3089  005506  C1BE  F1B8         	movff	ReadTemperature@temperature+1,?_ReadTemperature+1
  3090  00550A  C1BF  F1B9         	movff	ReadTemperature@temperature+2,?_ReadTemperature+2
  3091  00550E  C1C0  F1BA         	movff	ReadTemperature@temperature+3,?_ReadTemperature+3
  3092  005512  0012               	return		;funcret
  3093  005514                     __end_of_ReadTemperature:
  3094                           	opt callstack 0
  3095                           
  3096 ;; *************** function _ReadHumidity *****************
  3097 ;; Defined at:
  3098 ;;		line 311 in file "main.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  convertion      4  199[BANK1 ] float 
  3103 ;;  resultWord      4  195[BANK1 ] unsigned long 
  3104 ;;  humidity        4  189[BANK1 ] float 
  3105 ;;  result          2  193[BANK1 ] unsigned char [2]
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  4  183[BANK1 ] float 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3115 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;Total ram usage:       20 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:   26
  3122 ;; This function calls:
  3123 ;;		_I2cReadSerial
  3124 ;;		_I2cWriteSerial
  3125 ;;		___fladd
  3126 ;;		___fldiv
  3127 ;;		___lmul
  3128 ;;		___xxtofl
  3129 ;; This function is called by:
  3130 ;;		_WriteTempHumidToDisplay
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text4
  3135  005638                     __ptext4:
  3136                           	opt callstack 0
  3137  005638                     _ReadHumidity:
  3138                           	opt callstack 3
  3139                           
  3140                           ;main.c: 312:     uint8_t result[2];;main.c: 315:     I2cWriteSerial(humidityTherometerA
      +                          ddress, readHumidity, 1);
  3141                           
  3142                           ;incstack = 0
  3143  005638  0EFE               	movlw	low _readHumidity
  3144  00563A  0101               	movlb	1	; () banked
  3145  00563C  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  3146  00563E  0E01               	movlw	high _readHumidity
  3147  005640  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  3148  005642  0E01               	movlw	1
  3149  005644  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  3150  005646  51FC               	movf	_humidityTherometerAddress& (0+255),w,b
  3151  005648  EC0D  F033         	call	_I2cWriteSerial
  3152                           
  3153                           ;main.c: 316:     I2cReadSerial(humidityTherometerAddress, result, 2);
  3154  00564C  0EC1               	movlw	low ReadHumidity@result
  3155  00564E  0101               	movlb	1	; () banked
  3156  005650  6F00               	movwf	I2cReadSerial@readData& (0+255),b
  3157  005652  0E01               	movlw	high ReadHumidity@result
  3158  005654  6F01               	movwf	(I2cReadSerial@readData+1)& (0+255),b
  3159  005656  0E02               	movlw	2
  3160  005658  6F02               	movwf	I2cReadSerial@length& (0+255),b
  3161  00565A  51FC               	movf	_humidityTherometerAddress& (0+255),w,b
  3162  00565C  ECE2  F030         	call	_I2cReadSerial
  3163                           
  3164                           ;main.c: 319:     uint32_t resultWord = result[0] << 8;
  3165  005660  0101               	movlb	1	; () banked
  3166  005662  51C1               	movf	ReadHumidity@result& (0+255),w,b
  3167  005664  6FBC               	movwf	(??_ReadHumidity+1)& (0+255),b
  3168  005666  6BBB               	clrf	??_ReadHumidity& (0+255),b
  3169  005668  C1BB  F1C3         	movff	??_ReadHumidity,ReadHumidity@resultWord
  3170  00566C  C1BC  F1C4         	movff	??_ReadHumidity+1,ReadHumidity@resultWord+1
  3171  005670  0E00               	movlw	0
  3172  005672  BFC4               	btfsc	(ReadHumidity@resultWord+1)& (0+255),7,b
  3173  005674  0EFF               	movlw	-1
  3174  005676  6FC5               	movwf	(ReadHumidity@resultWord+2)& (0+255),b
  3175  005678  6FC6               	movwf	(ReadHumidity@resultWord+3)& (0+255),b
  3176                           
  3177                           ; BSR set to: 1
  3178                           ;main.c: 320:     resultWord = resultWord + result[1];
  3179  00567A  51C2               	movf	(ReadHumidity@result+1)& (0+255),w,b
  3180  00567C  25C3               	addwf	ReadHumidity@resultWord& (0+255),w,b
  3181  00567E  6FC3               	movwf	ReadHumidity@resultWord& (0+255),b
  3182  005680  0E00               	movlw	0
  3183  005682  21C4               	addwfc	(ReadHumidity@resultWord+1)& (0+255),w,b
  3184  005684  6FC4               	movwf	(ReadHumidity@resultWord+1)& (0+255),b
  3185  005686  0E00               	movlw	0
  3186  005688  21C5               	addwfc	(ReadHumidity@resultWord+2)& (0+255),w,b
  3187  00568A  6FC5               	movwf	(ReadHumidity@resultWord+2)& (0+255),b
  3188  00568C  0E00               	movlw	0
  3189  00568E  21C6               	addwfc	(ReadHumidity@resultWord+3)& (0+255),w,b
  3190  005690  6FC6               	movwf	(ReadHumidity@resultWord+3)& (0+255),b
  3191                           
  3192                           ; BSR set to: 1
  3193                           ;main.c: 323:     float convertion = 125 * resultWord;
  3194  005692  C1C3  F100         	movff	ReadHumidity@resultWord,___lmul@multiplier
  3195  005696  C1C4  F101         	movff	ReadHumidity@resultWord+1,___lmul@multiplier+1
  3196  00569A  C1C5  F102         	movff	ReadHumidity@resultWord+2,___lmul@multiplier+2
  3197  00569E  C1C6  F103         	movff	ReadHumidity@resultWord+3,___lmul@multiplier+3
  3198  0056A2  0E7D               	movlw	125
  3199  0056A4  6F04               	movwf	___lmul@multiplicand& (0+255),b
  3200  0056A6  0E00               	movlw	0
  3201  0056A8  6F05               	movwf	(___lmul@multiplicand+1)& (0+255),b
  3202  0056AA  0E00               	movlw	0
  3203  0056AC  6F06               	movwf	(___lmul@multiplicand+2)& (0+255),b
  3204  0056AE  0E00               	movlw	0
  3205  0056B0  6F07               	movwf	(___lmul@multiplicand+3)& (0+255),b
  3206  0056B2  ECD8  F035         	call	___lmul	;wreg free
  3207  0056B6  C100  F10C         	movff	?___lmul,___xxtofl@val
  3208  0056BA  C101  F10D         	movff	?___lmul+1,___xxtofl@val+1
  3209  0056BE  C102  F10E         	movff	?___lmul+2,___xxtofl@val+2
  3210  0056C2  C103  F10F         	movff	?___lmul+3,___xxtofl@val+3
  3211  0056C6  0E00               	movlw	0
  3212  0056C8  EC90  F027         	call	___xxtofl
  3213  0056CC  C10C  F1C7         	movff	?___xxtofl,ReadHumidity@convertion
  3214  0056D0  C10D  F1C8         	movff	?___xxtofl+1,ReadHumidity@convertion+1
  3215  0056D4  C10E  F1C9         	movff	?___xxtofl+2,ReadHumidity@convertion+2
  3216  0056D8  C10F  F1CA         	movff	?___xxtofl+3,ReadHumidity@convertion+3
  3217                           
  3218                           ;main.c: 324:     convertion = convertion / 65536;
  3219  0056DC  C1C7  F100         	movff	ReadHumidity@convertion,___fldiv@b
  3220  0056E0  C1C8  F101         	movff	ReadHumidity@convertion+1,___fldiv@b+1
  3221  0056E4  C1C9  F102         	movff	ReadHumidity@convertion+2,___fldiv@b+2
  3222  0056E8  C1CA  F103         	movff	ReadHumidity@convertion+3,___fldiv@b+3
  3223  0056EC  0E00               	movlw	0
  3224  0056EE  0101               	movlb	1	; () banked
  3225  0056F0  6F04               	movwf	___fldiv@a& (0+255),b
  3226  0056F2  0E00               	movlw	0
  3227  0056F4  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  3228  0056F6  0E80               	movlw	128
  3229  0056F8  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  3230  0056FA  0E47               	movlw	71
  3231  0056FC  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  3232  0056FE  ECE6  F01C         	call	___fldiv	;wreg free
  3233  005702  C100  F1C7         	movff	?___fldiv,ReadHumidity@convertion
  3234  005706  C101  F1C8         	movff	?___fldiv+1,ReadHumidity@convertion+1
  3235  00570A  C102  F1C9         	movff	?___fldiv+2,ReadHumidity@convertion+2
  3236  00570E  C103  F1CA         	movff	?___fldiv+3,ReadHumidity@convertion+3
  3237                           
  3238                           ;main.c: 325:     float humidity = convertion - 6;
  3239  005712  C1C7  F100         	movff	ReadHumidity@convertion,___fladd@b
  3240  005716  C1C8  F101         	movff	ReadHumidity@convertion+1,___fladd@b+1
  3241  00571A  C1C9  F102         	movff	ReadHumidity@convertion+2,___fladd@b+2
  3242  00571E  C1CA  F103         	movff	ReadHumidity@convertion+3,___fladd@b+3
  3243  005722  0E00               	movlw	0
  3244  005724  0101               	movlb	1	; () banked
  3245  005726  6F04               	movwf	___fladd@a& (0+255),b
  3246  005728  0E00               	movlw	0
  3247  00572A  6F05               	movwf	(___fladd@a+1)& (0+255),b
  3248  00572C  0EC0               	movlw	192
  3249  00572E  6F06               	movwf	(___fladd@a+2)& (0+255),b
  3250  005730  0EC0               	movlw	192
  3251  005732  6F07               	movwf	(___fladd@a+3)& (0+255),b
  3252  005734  ECD9  F019         	call	___fladd	;wreg free
  3253  005738  C100  F1BD         	movff	?___fladd,ReadHumidity@humidity
  3254  00573C  C101  F1BE         	movff	?___fladd+1,ReadHumidity@humidity+1
  3255  005740  C102  F1BF         	movff	?___fladd+2,ReadHumidity@humidity+2
  3256  005744  C103  F1C0         	movff	?___fladd+3,ReadHumidity@humidity+3
  3257                           
  3258                           ;main.c: 327:     return humidity;
  3259  005748  C1BD  F1B7         	movff	ReadHumidity@humidity,?_ReadHumidity
  3260  00574C  C1BE  F1B8         	movff	ReadHumidity@humidity+1,?_ReadHumidity+1
  3261  005750  C1BF  F1B9         	movff	ReadHumidity@humidity+2,?_ReadHumidity+2
  3262  005754  C1C0  F1BA         	movff	ReadHumidity@humidity+3,?_ReadHumidity+3
  3263  005758  0012               	return		;funcret
  3264  00575A                     __end_of_ReadHumidity:
  3265                           	opt callstack 0
  3266                           
  3267 ;; *************** function ___xxtofl *****************
  3268 ;; Defined at:
  3269 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  sign            1    wreg     unsigned char 
  3272 ;;  val             4   12[BANK1 ] long 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  sign            1   20[BANK1 ] unsigned char 
  3275 ;;  arg             4   22[BANK1 ] unsigned long 
  3276 ;;  exp             1   21[BANK1 ] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  4   12[BANK1 ] unsigned char 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3286 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;Total ram usage:       14 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:   16
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_ReadTemperature
  3297 ;;		_ReadHumidity
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text5
  3302  004F20                     __ptext5:
  3303                           	opt callstack 0
  3304  004F20                     ___xxtofl:
  3305                           	opt callstack 12
  3306                           
  3307                           ;incstack = 0
  3308                           ;___xxtofl@sign stored from wreg
  3309  004F20  0101               	movlb	1	; () banked
  3310  004F22  6F14               	movwf	___xxtofl@sign& (0+255),b
  3311  004F24  0101               	movlb	1	; () banked
  3312  004F26  5114               	movf	___xxtofl@sign& (0+255),w,b
  3313  004F28  A4D8               	btfss	status,2,c
  3314                           
  3315                           ; BSR set to: 1
  3316  004F2A  AF0F               	btfss	(___xxtofl@val+3)& (0+255),7,b
  3317  004F2C  D01A               	goto	l1411
  3318                           
  3319                           ; BSR set to: 1
  3320  004F2E  C10C  F110         	movff	___xxtofl@val,??___xxtofl
  3321  004F32  C10D  F111         	movff	___xxtofl@val+1,??___xxtofl+1
  3322  004F36  C10E  F112         	movff	___xxtofl@val+2,??___xxtofl+2
  3323  004F3A  C10F  F113         	movff	___xxtofl@val+3,??___xxtofl+3
  3324  004F3E  1F10               	comf	??___xxtofl& (0+255),f,b
  3325  004F40  1F11               	comf	(??___xxtofl+1)& (0+255),f,b
  3326  004F42  1F12               	comf	(??___xxtofl+2)& (0+255),f,b
  3327  004F44  1F13               	comf	(??___xxtofl+3)& (0+255),f,b
  3328  004F46  2B10               	incf	??___xxtofl& (0+255),f,b
  3329  004F48  0E00               	movlw	0
  3330  004F4A  2311               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3331  004F4C  2312               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3332  004F4E  2313               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3333  004F50  C110  F116         	movff	??___xxtofl,___xxtofl@arg
  3334  004F54  C111  F117         	movff	??___xxtofl+1,___xxtofl@arg+1
  3335  004F58  C112  F118         	movff	??___xxtofl+2,___xxtofl@arg+2
  3336  004F5C  C113  F119         	movff	??___xxtofl+3,___xxtofl@arg+3
  3337  004F60  D008               	goto	l8413
  3338  004F62                     l1411:
  3339                           
  3340                           ; BSR set to: 1
  3341  004F62  C10C  F116         	movff	___xxtofl@val,___xxtofl@arg
  3342  004F66  C10D  F117         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3343  004F6A  C10E  F118         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3344  004F6E  C10F  F119         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3345  004F72                     l8413:
  3346                           
  3347                           ; BSR set to: 1
  3348  004F72  510C               	movf	___xxtofl@val& (0+255),w,b
  3349  004F74  110D               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  3350  004F76  110E               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  3351  004F78  110F               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  3352  004F7A  A4D8               	btfss	status,2,c
  3353  004F7C  D009               	goto	l8419
  3354                           
  3355                           ; BSR set to: 1
  3356  004F7E  0E00               	movlw	0
  3357  004F80  6F0C               	movwf	?___xxtofl& (0+255),b
  3358  004F82  0E00               	movlw	0
  3359  004F84  6F0D               	movwf	(?___xxtofl+1)& (0+255),b
  3360  004F86  0E00               	movlw	0
  3361  004F88  6F0E               	movwf	(?___xxtofl+2)& (0+255),b
  3362  004F8A  0E00               	movlw	0
  3363  004F8C  6F0F               	movwf	(?___xxtofl+3)& (0+255),b
  3364  004F8E  0012               	return	
  3365  004F90                     l8419:
  3366                           
  3367                           ; BSR set to: 1
  3368  004F90  0E96               	movlw	150
  3369  004F92  6F15               	movwf	___xxtofl@exp& (0+255),b
  3370  004F94  D006               	goto	l8423
  3371  004F96                     l8421:
  3372                           
  3373                           ; BSR set to: 1
  3374  004F96  2B15               	incf	___xxtofl@exp& (0+255),f,b
  3375  004F98  90D8               	bcf	status,0,c
  3376  004F9A  3319               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3377  004F9C  3318               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3378  004F9E  3317               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3379  004FA0  3316               	rrcf	___xxtofl@arg& (0+255),f,b
  3380  004FA2                     l8423:
  3381                           
  3382                           ; BSR set to: 1
  3383  004FA2  0E00               	movlw	0
  3384  004FA4  1516               	andwf	___xxtofl@arg& (0+255),w,b
  3385  004FA6  6F10               	movwf	??___xxtofl& (0+255),b
  3386  004FA8  0E00               	movlw	0
  3387  004FAA  1517               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3388  004FAC  6F11               	movwf	(??___xxtofl+1)& (0+255),b
  3389  004FAE  0E00               	movlw	0
  3390  004FB0  1518               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3391  004FB2  6F12               	movwf	(??___xxtofl+2)& (0+255),b
  3392  004FB4  0EFE               	movlw	254
  3393  004FB6  1519               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3394  004FB8  6F13               	movwf	(??___xxtofl+3)& (0+255),b
  3395  004FBA  5110               	movf	??___xxtofl& (0+255),w,b
  3396  004FBC  1111               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3397  004FBE  1112               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3398  004FC0  1113               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3399  004FC2  B4D8               	btfsc	status,2,c
  3400  004FC4  D00D               	goto	l1418
  3401  004FC6  D7E7               	goto	l8421
  3402  004FC8                     l8425:
  3403                           
  3404                           ; BSR set to: 1
  3405  004FC8  2B15               	incf	___xxtofl@exp& (0+255),f,b
  3406                           
  3407                           ; BSR set to: 1
  3408  004FCA  0E01               	movlw	1
  3409  004FCC  2716               	addwf	___xxtofl@arg& (0+255),f,b
  3410  004FCE  0E00               	movlw	0
  3411  004FD0  2317               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3412  004FD2  2318               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3413  004FD4  2319               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3414                           
  3415                           ; BSR set to: 1
  3416  004FD6  90D8               	bcf	status,0,c
  3417  004FD8  3319               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3418  004FDA  3318               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3419  004FDC  3317               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3420  004FDE  3316               	rrcf	___xxtofl@arg& (0+255),f,b
  3421  004FE0                     l1418:
  3422                           
  3423                           ; BSR set to: 1
  3424  004FE0  0E00               	movlw	0
  3425  004FE2  1516               	andwf	___xxtofl@arg& (0+255),w,b
  3426  004FE4  6F10               	movwf	??___xxtofl& (0+255),b
  3427  004FE6  0E00               	movlw	0
  3428  004FE8  1517               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3429  004FEA  6F11               	movwf	(??___xxtofl+1)& (0+255),b
  3430  004FEC  0E00               	movlw	0
  3431  004FEE  1518               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3432  004FF0  6F12               	movwf	(??___xxtofl+2)& (0+255),b
  3433  004FF2  0EFF               	movlw	255
  3434  004FF4  1519               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3435  004FF6  6F13               	movwf	(??___xxtofl+3)& (0+255),b
  3436  004FF8  5110               	movf	??___xxtofl& (0+255),w,b
  3437  004FFA  1111               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3438  004FFC  1112               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3439  004FFE  1113               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3440  005000  B4D8               	btfsc	status,2,c
  3441  005002  D007               	goto	l8433
  3442  005004  D7E1               	goto	l8425
  3443  005006                     l8431:
  3444                           
  3445                           ; BSR set to: 1
  3446  005006  0715               	decf	___xxtofl@exp& (0+255),f,b
  3447  005008  90D8               	bcf	status,0,c
  3448  00500A  3716               	rlcf	___xxtofl@arg& (0+255),f,b
  3449  00500C  3717               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3450  00500E  3718               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3451  005010  3719               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3452  005012                     l8433:
  3453                           
  3454                           ; BSR set to: 1
  3455  005012  BF18               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3456  005014  D003               	goto	u12120
  3457                           
  3458                           ; BSR set to: 1
  3459  005016  0E02               	movlw	2
  3460  005018  6115               	cpfslt	___xxtofl@exp& (0+255),b
  3461  00501A  D7F5               	goto	l8431
  3462  00501C                     u12120:
  3463                           
  3464                           ; BSR set to: 1
  3465  00501C  A115               	btfss	___xxtofl@exp& (0+255),0,b
  3466                           
  3467                           ; BSR set to: 1
  3468  00501E  9F18               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  3469                           
  3470                           ; BSR set to: 1
  3471  005020  90D8               	bcf	status,0,c
  3472  005022  3315               	rrcf	___xxtofl@exp& (0+255),f,b
  3473                           
  3474                           ; BSR set to: 1
  3475  005024  C115  F110         	movff	___xxtofl@exp,??___xxtofl
  3476  005028  6B11               	clrf	(??___xxtofl+1)& (0+255),b
  3477  00502A  6B12               	clrf	(??___xxtofl+2)& (0+255),b
  3478  00502C  6B13               	clrf	(??___xxtofl+3)& (0+255),b
  3479  00502E  C110  F113         	movff	??___xxtofl,??___xxtofl+3
  3480  005032  6B12               	clrf	(??___xxtofl+2)& (0+255),b
  3481  005034  6B11               	clrf	(??___xxtofl+1)& (0+255),b
  3482  005036  6B10               	clrf	??___xxtofl& (0+255),b
  3483  005038  5110               	movf	??___xxtofl& (0+255),w,b
  3484  00503A  1316               	iorwf	___xxtofl@arg& (0+255),f,b
  3485  00503C  5111               	movf	(??___xxtofl+1)& (0+255),w,b
  3486  00503E  1317               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  3487  005040  5112               	movf	(??___xxtofl+2)& (0+255),w,b
  3488  005042  1318               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  3489  005044  5113               	movf	(??___xxtofl+3)& (0+255),w,b
  3490  005046  1319               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  3491                           
  3492                           ; BSR set to: 1
  3493  005048  5114               	movf	___xxtofl@sign& (0+255),w,b
  3494  00504A  A4D8               	btfss	status,2,c
  3495                           
  3496                           ; BSR set to: 1
  3497  00504C  AF0F               	btfss	(___xxtofl@val+3)& (0+255),7,b
  3498  00504E  D001               	goto	l8449
  3499                           
  3500                           ; BSR set to: 1
  3501  005050  8F19               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  3502  005052                     l8449:
  3503                           
  3504                           ; BSR set to: 1
  3505  005052  C116  F10C         	movff	___xxtofl@arg,?___xxtofl
  3506  005056  C117  F10D         	movff	___xxtofl@arg+1,?___xxtofl+1
  3507  00505A  C118  F10E         	movff	___xxtofl@arg+2,?___xxtofl+2
  3508  00505E  C119  F10F         	movff	___xxtofl@arg+3,?___xxtofl+3
  3509                           
  3510                           ; BSR set to: 1
  3511  005062  0012               	return		;funcret
  3512  005064                     __end_of___xxtofl:
  3513                           	opt callstack 0
  3514                           
  3515 ;; *************** function ___lmul *****************
  3516 ;; Defined at:
  3517 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  multiplier      4    0[BANK1 ] unsigned long 
  3520 ;;  multiplicand    4    4[BANK1 ] unsigned long 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  product         4    8[BANK1 ] unsigned long 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  4    0[BANK1 ] unsigned long 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3532 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;Total ram usage:       12 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:   16
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_ReadHumidity
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text6
  3547  006BB0                     __ptext6:
  3548                           	opt callstack 0
  3549  006BB0                     ___lmul:
  3550                           	opt callstack 12
  3551                           
  3552                           ; BSR set to: 1
  3553                           ;incstack = 0
  3554  006BB0  0E00               	movlw	0
  3555  006BB2  0101               	movlb	1	; () banked
  3556  006BB4  6F08               	movwf	___lmul@product& (0+255),b
  3557  006BB6  0E00               	movlw	0
  3558  006BB8  6F09               	movwf	(___lmul@product+1)& (0+255),b
  3559  006BBA  0E00               	movlw	0
  3560  006BBC  6F0A               	movwf	(___lmul@product+2)& (0+255),b
  3561  006BBE  0E00               	movlw	0
  3562  006BC0  6F0B               	movwf	(___lmul@product+3)& (0+255),b
  3563  006BC2                     l8399:
  3564                           
  3565                           ; BSR set to: 1
  3566  006BC2  A100               	btfss	___lmul@multiplier& (0+255),0,b
  3567  006BC4  D008               	goto	l8403
  3568                           
  3569                           ; BSR set to: 1
  3570  006BC6  5104               	movf	___lmul@multiplicand& (0+255),w,b
  3571  006BC8  2708               	addwf	___lmul@product& (0+255),f,b
  3572  006BCA  5105               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  3573  006BCC  2309               	addwfc	(___lmul@product+1)& (0+255),f,b
  3574  006BCE  5106               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  3575  006BD0  230A               	addwfc	(___lmul@product+2)& (0+255),f,b
  3576  006BD2  5107               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  3577  006BD4  230B               	addwfc	(___lmul@product+3)& (0+255),f,b
  3578  006BD6                     l8403:
  3579                           
  3580                           ; BSR set to: 1
  3581  006BD6  90D8               	bcf	status,0,c
  3582  006BD8  3704               	rlcf	___lmul@multiplicand& (0+255),f,b
  3583  006BDA  3705               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  3584  006BDC  3706               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  3585  006BDE  3707               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  3586                           
  3587                           ; BSR set to: 1
  3588  006BE0  90D8               	bcf	status,0,c
  3589  006BE2  3303               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  3590  006BE4  3302               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  3591  006BE6  3301               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  3592  006BE8  3300               	rrcf	___lmul@multiplier& (0+255),f,b
  3593  006BEA  5100               	movf	___lmul@multiplier& (0+255),w,b
  3594  006BEC  1101               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  3595  006BEE  1102               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  3596  006BF0  1103               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  3597  006BF2  A4D8               	btfss	status,2,c
  3598  006BF4  D7E6               	goto	l8399
  3599                           
  3600                           ; BSR set to: 1
  3601  006BF6  C108  F100         	movff	___lmul@product,?___lmul
  3602  006BFA  C109  F101         	movff	___lmul@product+1,?___lmul+1
  3603  006BFE  C10A  F102         	movff	___lmul@product+2,?___lmul+2
  3604  006C02  C10B  F103         	movff	___lmul@product+3,?___lmul+3
  3605                           
  3606                           ; BSR set to: 1
  3607  006C06  0012               	return		;funcret
  3608  006C08                     __end_of___lmul:
  3609                           	opt callstack 0
  3610                           
  3611 ;; *************** function _I2cReadSerial *****************
  3612 ;; Defined at:
  3613 ;;		line 207 in file "main.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  address         1    wreg     unsigned char 
  3616 ;;  readData        2    0[BANK1 ] PTR unsigned char 
  3617 ;;		 -> VerifyLogging@output(4), LogData@location(2), ReadHumidity@result(2), ReadTemperature@result(2), 
  3618 ;;		 -> Timer4Interrupt@output(4), 
  3619 ;;  length          1    2[BANK1 ] unsigned char 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  address         1    7[BANK1 ] unsigned char 
  3622 ;;  i               2    9[BANK1 ] unsigned short 
  3623 ;;  target          1    8[BANK1 ] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:       11 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:   16
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_ReadTemperature
  3644 ;;		_ReadHumidity
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text7
  3649  0061C4                     __ptext7:
  3650                           	opt callstack 0
  3651  0061C4                     _I2cReadSerial:
  3652                           	opt callstack 12
  3653                           
  3654                           ; BSR set to: 1
  3655                           ;incstack = 0
  3656                           ;I2cReadSerial@address stored from wreg
  3657  0061C4  0101               	movlb	1	; () banked
  3658  0061C6  6F07               	movwf	I2cReadSerial@address& (0+255),b
  3659  0061C8                     
  3660                           ;main.c: 209:     while (SSP1STAT & 0x04 || SSP1CON2 & 0x1F);
  3661  0061C8  B4C7               	btfsc	4039,2,c	;volatile
  3662  0061CA  D7FE               	goto	l8377
  3663  0061CC  CFC5 F103          	movff	4037,??_I2cReadSerial	;volatile
  3664  0061D0  0E1F               	movlw	31
  3665  0061D2  0101               	movlb	1	; () banked
  3666  0061D4  1703               	andwf	??_I2cReadSerial& (0+255),f,b
  3667  0061D6  A4D8               	btfss	status,2,c
  3668  0061D8  D7F7               	goto	l8377
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;main.c: 211:     SSP1CON2bits.SEN = 1;
  3672  0061DA  80C5               	bsf	4037,0,c	;volatile
  3673  0061DC                     l469:
  3674  0061DC  B0C5               	btfsc	4037,0,c	;volatile
  3675  0061DE  D7FE               	goto	l469
  3676                           
  3677                           ;main.c: 213:     uint8_t target = (address << 1) + 1;
  3678  0061E0  0101               	movlb	1	; () banked
  3679  0061E2  5107               	movf	I2cReadSerial@address& (0+255),w,b
  3680  0061E4  0D02               	mullw	2
  3681  0061E6  28F3               	incf	prodl,w,c
  3682  0061E8  6F08               	movwf	I2cReadSerial@target& (0+255),b
  3683                           
  3684                           ; BSR set to: 1
  3685                           ;main.c: 214:     SSP1BUF = target;
  3686  0061EA  C108  FFC9         	movff	I2cReadSerial@target,4041	;volatile
  3687  0061EE                     l472:
  3688  0061EE  B4C7               	btfsc	4039,2,c	;volatile
  3689  0061F0  D7FE               	goto	l472
  3690                           
  3691                           ;main.c: 216:     if (SSP1CON2bits.ACKSTAT == 0)
  3692  0061F2  BCC5               	btfsc	4037,6,c	;volatile
  3693  0061F4  0012               	return	
  3694                           
  3695                           ;main.c: 217:     {;main.c: 219:         for (uint16_t i = 0; i < length; i++)
  3696  0061F6  0E00               	movlw	0
  3697  0061F8  0101               	movlb	1	; () banked
  3698  0061FA  6F0A               	movwf	(I2cReadSerial@i+1)& (0+255),b
  3699  0061FC  0E00               	movlw	0
  3700  0061FE  6F09               	movwf	I2cReadSerial@i& (0+255),b
  3701  006200  D027               	goto	l8395
  3702  006202                     l477:
  3703                           
  3704                           ; BSR set to: 1
  3705                           ;main.c: 220:         {;main.c: 222:             SSP1CON2bits.RCEN = 1;
  3706  006202  86C5               	bsf	4037,3,c	;volatile
  3707  006204                     l478:
  3708  006204  B6C5               	btfsc	4037,3,c	;volatile
  3709  006206  D7FE               	goto	l478
  3710                           
  3711                           ;main.c: 225:             readData[i] = SSP1BUF;
  3712  006208  0101               	movlb	1	; () banked
  3713  00620A  5109               	movf	I2cReadSerial@i& (0+255),w,b
  3714  00620C  2500               	addwf	I2cReadSerial@readData& (0+255),w,b
  3715  00620E  6ED9               	movwf	fsr2l,c
  3716  006210  510A               	movf	(I2cReadSerial@i+1)& (0+255),w,b
  3717  006212  2101               	addwfc	(I2cReadSerial@readData+1)& (0+255),w,b
  3718  006214  6EDA               	movwf	fsr2h,c
  3719  006216  CFC9 FFDF          	movff	4041,indf2	;volatile
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;main.c: 227:             if (i == length - 1)
  3723  00621A  0EFF               	movlw	255
  3724  00621C  6F03               	movwf	??_I2cReadSerial& (0+255),b
  3725  00621E  0EFF               	movlw	255
  3726  006220  6F04               	movwf	(??_I2cReadSerial+1)& (0+255),b
  3727  006222  5102               	movf	I2cReadSerial@length& (0+255),w,b
  3728  006224  6F05               	movwf	(??_I2cReadSerial+2)& (0+255),b
  3729  006226  6B06               	clrf	(??_I2cReadSerial+3)& (0+255),b
  3730  006228  5103               	movf	??_I2cReadSerial& (0+255),w,b
  3731  00622A  2705               	addwf	(??_I2cReadSerial+2)& (0+255),f,b
  3732  00622C  5104               	movf	(??_I2cReadSerial+1)& (0+255),w,b
  3733  00622E  2306               	addwfc	(??_I2cReadSerial+3)& (0+255),f,b
  3734  006230  5109               	movf	I2cReadSerial@i& (0+255),w,b
  3735  006232  1905               	xorwf	(??_I2cReadSerial+2)& (0+255),w,b
  3736  006234  E106               	bnz	l481
  3737  006236  510A               	movf	(I2cReadSerial@i+1)& (0+255),w,b
  3738  006238  1906               	xorwf	(??_I2cReadSerial+3)& (0+255),w,b
  3739  00623A  A4D8               	btfss	status,2,c
  3740  00623C  D002               	goto	l481
  3741                           
  3742                           ; BSR set to: 1
  3743                           ;main.c: 228:             {;main.c: 229:                 SSP1CON2bits.ACKDT = 1;
  3744  00623E  8AC5               	bsf	4037,5,c	;volatile
  3745                           
  3746                           ;main.c: 230:             } else {
  3747  006240  D001               	goto	l482
  3748  006242                     l481:
  3749                           
  3750                           ; BSR set to: 1
  3751                           ;main.c: 231:                 SSP1CON2bits.ACKDT = 0;
  3752  006242  9AC5               	bcf	4037,5,c	;volatile
  3753  006244                     l482:
  3754                           
  3755                           ; BSR set to: 1
  3756                           ;main.c: 234:             SSP1CON2bits.ACKEN = 1;
  3757  006244  88C5               	bsf	4037,4,c	;volatile
  3758  006246                     l483:
  3759  006246  B8C5               	btfsc	4037,4,c	;volatile
  3760  006248  D7FE               	goto	l483
  3761                           
  3762                           ;main.c: 236:         }
  3763  00624A  0101               	movlb	1	; () banked
  3764  00624C  4B09               	infsnz	I2cReadSerial@i& (0+255),f,b
  3765  00624E  2B0A               	incf	(I2cReadSerial@i+1)& (0+255),f,b
  3766  006250                     l8395:
  3767                           
  3768                           ; BSR set to: 1
  3769  006250  5102               	movf	I2cReadSerial@length& (0+255),w,b
  3770  006252  6F03               	movwf	??_I2cReadSerial& (0+255),b
  3771  006254  6B04               	clrf	(??_I2cReadSerial+1)& (0+255),b
  3772  006256  5103               	movf	??_I2cReadSerial& (0+255),w,b
  3773  006258  5D09               	subwf	I2cReadSerial@i& (0+255),w,b
  3774  00625A  5104               	movf	(??_I2cReadSerial+1)& (0+255),w,b
  3775  00625C  590A               	subwfb	(I2cReadSerial@i+1)& (0+255),w,b
  3776  00625E  A0D8               	btfss	status,0,c
  3777  006260  D7D0               	goto	l477
  3778                           
  3779                           ; BSR set to: 1
  3780                           ;main.c: 238:         SSP1CON2bits.PEN = 1;
  3781  006262  84C5               	bsf	4037,2,c	;volatile
  3782  006264                     l487:
  3783  006264  A4C5               	btfss	4037,2,c	;volatile
  3784  006266  0012               	return	
  3785  006268  D7FD               	goto	l487
  3786  00626A                     __end_of_I2cReadSerial:
  3787                           	opt callstack 0
  3788                           
  3789 ;; *************** function _DisplaySetCursor *****************
  3790 ;; Defined at:
  3791 ;;		line 281 in file "main.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  line            1    wreg     _Bool 
  3794 ;;  charNum         1  183[BANK1 ] unsigned char 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  line            1  184[BANK1 ] _Bool 
  3797 ;;  command         2  185[BANK1 ] unsigned char [2]
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3807 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;Total ram usage:        4 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:   26
  3814 ;; This function calls:
  3815 ;;		_I2cWriteSerial
  3816 ;; This function is called by:
  3817 ;;		_WriteTempHumidToDisplay
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text8
  3822  007160                     __ptext8:
  3823                           	opt callstack 0
  3824  007160                     _DisplaySetCursor:
  3825                           	opt callstack 3
  3826                           
  3827                           ;incstack = 0
  3828                           ;DisplaySetCursor@line stored from wreg
  3829  007160  0101               	movlb	1	; () banked
  3830  007162  6FB8               	movwf	DisplaySetCursor@line& (0+255),b
  3831                           
  3832                           ;main.c: 282:     uint8_t command[2];;main.c: 283:     command[0] = 0x00;
  3833  007164  0E00               	movlw	0
  3834  007166  0101               	movlb	1	; () banked
  3835  007168  6FB9               	movwf	DisplaySetCursor@command& (0+255),b
  3836                           
  3837                           ; BSR set to: 1
  3838                           ;main.c: 285:     if (line == 1) {
  3839  00716A  05B8               	decf	DisplaySetCursor@line& (0+255),w,b
  3840  00716C  A4D8               	btfss	status,2,c
  3841  00716E  D003               	goto	l8527
  3842                           
  3843                           ; BSR set to: 1
  3844                           ;main.c: 286:         command[1] = 0xC0 + charNum;
  3845  007170  51B7               	movf	DisplaySetCursor@charNum& (0+255),w,b
  3846  007172  0FC0               	addlw	192
  3847  007174  D002               	goto	L1
  3848  007176                     l8527:
  3849                           
  3850                           ; BSR set to: 1
  3851                           ;main.c: 288:         command[1] = 0x80 + charNum;
  3852  007176  51B7               	movf	DisplaySetCursor@charNum& (0+255),w,b
  3853  007178  0F80               	addlw	128
  3854  00717A                     L1:
  3855  00717A  6FBA               	movwf	(DisplaySetCursor@command+1)& (0+255),b
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;main.c: 290:     I2cWriteSerial(displayAddress, command, 2);
  3859  00717C  0EB9               	movlw	low DisplaySetCursor@command
  3860  00717E  6FAF               	movwf	I2cWriteSerial@writeData& (0+255),b
  3861  007180  0E01               	movlw	high DisplaySetCursor@command
  3862  007182  6FB0               	movwf	(I2cWriteSerial@writeData+1)& (0+255),b
  3863  007184  0E02               	movlw	2
  3864  007186  6FB1               	movwf	I2cWriteSerial@length& (0+255),b
  3865  007188  0E3C               	movlw	60
  3866  00718A  EC0D  F033         	call	_I2cWriteSerial
  3867  00718E  0012               	return		;funcret
  3868  007190                     __end_of_DisplaySetCursor:
  3869                           	opt callstack 0
  3870                           
  3871 ;; *************** function _I2cWriteSerial *****************
  3872 ;; Defined at:
  3873 ;;		line 246 in file "main.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  address         1    wreg     unsigned char 
  3876 ;;  writeData       2  175[BANK1 ] PTR unsigned char 
  3877 ;;		 -> VerifyLogging@location(2), LogData@lastSuccesfulWriteLocation(4), LogData@writeArray(6), LogData@writeAttemptLoc
      +ation(4), 
  3878 ;;		 -> firstLocation(2), STR_10(4), STR_8(4), WriteTempHumidToDisplay@printable(6), 
  3879 ;;		 -> STR_6(11), STR_5(8), readHumidity(1), readTemprature(1), 
  3880 ;;		 -> DisplaySetCursor@command(2), resetEeprom(4), Timer4Interrupt@location(2), customSign1(11), 
  3881 ;;		 -> customSign0(11), displayInitialize(5), 
  3882 ;;  length          1  177[BANK1 ] unsigned char 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  address         1  180[BANK1 ] unsigned char 
  3885 ;;  i               1  182[BANK1 ] unsigned char 
  3886 ;;  addressWrite    1  181[BANK1 ] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      void 
  3889 ;; Registers used:
  3890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3896 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;Total ram usage:        8 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:   25
  3903 ;; This function calls:
  3904 ;;		_printf
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;;		_DisplaySetCursor
  3908 ;;		_ReadTemperature
  3909 ;;		_ReadHumidity
  3910 ;;		_WriteTempHumidToDisplay
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text9
  3915  00661A                     __ptext9:
  3916                           	opt callstack 0
  3917  00661A                     _I2cWriteSerial:
  3918                           	opt callstack 3
  3919                           
  3920                           ;incstack = 0
  3921                           ;I2cWriteSerial@address stored from wreg
  3922  00661A  0101               	movlb	1	; () banked
  3923  00661C  6FB4               	movwf	I2cWriteSerial@address& (0+255),b
  3924  00661E                     
  3925                           ;main.c: 247:     while (SSP1STAT & 0x04 || SSP1CON2 & 0x1F);
  3926  00661E  B4C7               	btfsc	4039,2,c	;volatile
  3927  006620  D7FE               	goto	l8307
  3928  006622  CFC5 F1B2          	movff	4037,??_I2cWriteSerial	;volatile
  3929  006626  0E1F               	movlw	31
  3930  006628  0101               	movlb	1	; () banked
  3931  00662A  17B2               	andwf	??_I2cWriteSerial& (0+255),f,b
  3932  00662C  A4D8               	btfss	status,2,c
  3933  00662E  D7F7               	goto	l8307
  3934                           
  3935                           ; BSR set to: 1
  3936                           ;main.c: 249:     uint8_t addressWrite = address << 1;
  3937  006630  51B4               	movf	I2cWriteSerial@address& (0+255),w,b
  3938  006632  25B4               	addwf	I2cWriteSerial@address& (0+255),w,b
  3939  006634  6FB5               	movwf	I2cWriteSerial@addressWrite& (0+255),b
  3940                           
  3941                           ; BSR set to: 1
  3942                           ;main.c: 251:     SSP1CON2bits.SEN = 1;
  3943  006636  80C5               	bsf	4037,0,c	;volatile
  3944  006638                     l496:
  3945  006638  B0C5               	btfsc	4037,0,c	;volatile
  3946  00663A  D7FE               	goto	l496
  3947                           
  3948                           ;main.c: 254:     SSP1BUF = addressWrite;
  3949  00663C  C1B5  FFC9         	movff	I2cWriteSerial@addressWrite,4041	;volatile
  3950  006640                     l499:
  3951  006640  B4C7               	btfsc	4039,2,c	;volatile
  3952  006642  D7FE               	goto	l499
  3953                           
  3954                           ;main.c: 258:     if (SSP1CON2bits.ACKSTAT == 0)
  3955  006644  BCC5               	btfsc	4037,6,c	;volatile
  3956  006646  D02E               	goto	u11890
  3957                           
  3958                           ;main.c: 259:     {;main.c: 260:         for (uint8_t i = 0; i < length; i++)
  3959  006648  0E00               	movlw	0
  3960  00664A  0101               	movlb	1	; () banked
  3961  00664C  6FB6               	movwf	I2cWriteSerial@i& (0+255),b
  3962  00664E  D026               	goto	l8325
  3963  006650                     l8317:
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;main.c: 261:         {;main.c: 262:             SSP1BUF = (uint8_t) writeData[i];
  3967  006650  51B6               	movf	I2cWriteSerial@i& (0+255),w,b
  3968  006652  25AF               	addwf	I2cWriteSerial@writeData& (0+255),w,b
  3969  006654  6FB2               	movwf	??_I2cWriteSerial& (0+255),b
  3970  006656  0E00               	movlw	0
  3971  006658  21B0               	addwfc	(I2cWriteSerial@writeData+1)& (0+255),w,b
  3972  00665A  6FB3               	movwf	(??_I2cWriteSerial+1)& (0+255),b
  3973  00665C  C1B2  FFF6         	movff	??_I2cWriteSerial,tblptrl
  3974  006660  C1B3  FFF7         	movff	??_I2cWriteSerial+1,tblptrh
  3975  006664  0E00               	movlw	low (__smallconst shr (0+16))
  3976  006666  6EF8               	movwf	tblptru,c
  3977  006668  0E0F               	movlw	(high __ramtop+-1)
  3978  00666A  64F7               	cpfsgt	tblptrh,c
  3979  00666C  D003               	bra	u11867
  3980  00666E  0008               	tblrd		*
  3981  006670  50F5               	movf	tablat,w,c
  3982  006672  D005               	bra	u11860
  3983  006674                     u11867:
  3984  006674  CFF6 FFE1          	movff	tblptrl,fsr1l
  3985  006678  CFF7 FFE2          	movff	tblptrh,fsr1h
  3986  00667C  50E7               	movf	indf1,w,c
  3987  00667E                     u11860:
  3988  00667E  6EC9               	movwf	4041,c	;volatile
  3989  006680                     l505:
  3990  006680  B4C7               	btfsc	4039,2,c	;volatile
  3991  006682  D7FE               	goto	l505
  3992                           
  3993                           ;main.c: 265:             if (SSP1CON2bits.ACKSTAT == 0)
  3994  006684  ACC5               	btfss	4037,6,c	;volatile
  3995  006686  D008               	goto	l8323
  3996                           
  3997                           ;main.c: 269:                 printf("No ack recieved while writting \r\n");
  3998  006688  0E60               	movlw	low STR_4
  3999  00668A  0101               	movlb	1	; () banked
  4000  00668C  6FA9               	movwf	printf@fmt& (0+255),b
  4001  00668E  0E10               	movlw	high STR_4
  4002  006690  6FAA               	movwf	(printf@fmt+1)& (0+255),b
  4003  006692  EC7E  F039         	call	_printf	;wreg free
  4004                           
  4005                           ;main.c: 270:                 break;
  4006  006696  D006               	goto	u11890
  4007  006698                     l8323:
  4008                           
  4009                           ;main.c: 272:         }
  4010  006698  0101               	movlb	1	; () banked
  4011  00669A  2BB6               	incf	I2cWriteSerial@i& (0+255),f,b
  4012  00669C                     l8325:
  4013                           
  4014                           ; BSR set to: 1
  4015  00669C  51B1               	movf	I2cWriteSerial@length& (0+255),w,b
  4016  00669E  5DB6               	subwf	I2cWriteSerial@i& (0+255),w,b
  4017  0066A0  A0D8               	btfss	status,0,c
  4018  0066A2  D7D6               	goto	l8317
  4019  0066A4                     u11890:
  4020                           
  4021                           ;main.c: 274:     SSP1CON2bits.PEN = 1;
  4022                           
  4023                           ;main.c: 273:     }
  4024  0066A4  84C5               	bsf	4037,2,c	;volatile
  4025  0066A6                     l511:
  4026  0066A6  A4C5               	btfss	4037,2,c	;volatile
  4027  0066A8  0012               	return	
  4028  0066AA  D7FD               	goto	l511
  4029  0066AC                     __end_of_I2cWriteSerial:
  4030                           	opt callstack 0
  4031                           
  4032 ;; *************** function _printf *****************
  4033 ;; Defined at:
  4034 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  fmt             2  169[BANK1 ] PTR const unsigned char 
  4037 ;;		 -> STR_12(61), STR_11(26), STR_4(34), STR_3(31), 
  4038 ;;		 -> STR_2(34), STR_1(14), 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  ap              2  173[BANK1 ] PTR void [1]
  4041 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4042 ;;  ret             2    0        int 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  2  169[BANK1 ] int 
  4045 ;; Registers used:
  4046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4052 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;Total ram usage:        6 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:   24
  4059 ;; This function calls:
  4060 ;;		_vfprintf
  4061 ;; This function is called by:
  4062 ;;		_main
  4063 ;;		_I2cWriteSerial
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text10
  4068  0072FC                     __ptext10:
  4069                           	opt callstack 0
  4070  0072FC                     _printf:
  4071                           	opt callstack 6
  4072                           
  4073                           ;incstack = 0
  4074  0072FC  0EAB               	movlw	low (?_printf+2)
  4075  0072FE  0101               	movlb	1	; () banked
  4076  007300  6FAD               	movwf	printf@ap& (0+255),b
  4077  007302  0E01               	movlw	high (?_printf+2)
  4078  007304  6FAE               	movwf	(printf@ap+1)& (0+255),b
  4079                           
  4080                           ; BSR set to: 1
  4081  007306  0E00               	movlw	0
  4082  007308  6FA1               	movwf	vfprintf@fp& (0+255),b
  4083  00730A  0E00               	movlw	0
  4084  00730C  6FA2               	movwf	(vfprintf@fp+1)& (0+255),b
  4085  00730E  C1A9  F1A3         	movff	printf@fmt,vfprintf@fmt
  4086  007312  C1AA  F1A4         	movff	printf@fmt+1,vfprintf@fmt+1
  4087  007316  0EAD               	movlw	low printf@ap
  4088  007318  6FA5               	movwf	vfprintf@ap& (0+255),b
  4089  00731A  0E01               	movlw	high printf@ap
  4090  00731C  6FA6               	movwf	(vfprintf@ap+1)& (0+255),b
  4091  00731E  EC04  F036         	call	_vfprintf	;wreg free
  4092  007322  0012               	return		;funcret
  4093  007324                     __end_of_printf:
  4094                           	opt callstack 0
  4095                           
  4096 ;; *************** function _vfprintf *****************
  4097 ;; Defined at:
  4098 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  fp              2  161[BANK1 ] PTR struct _IO_FILE
  4101 ;;		 -> sprintf@f(6), NULL(0), 
  4102 ;;  fmt             2  163[BANK1 ] PTR const unsigned char 
  4103 ;;		 -> STR_12(61), STR_11(26), STR_9(6), STR_7(6), 
  4104 ;;		 -> STR_4(34), STR_3(31), STR_2(34), STR_1(14), 
  4105 ;;  ap              2  165[BANK1 ] PTR PTR void 
  4106 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  cfmt            2  167[BANK1 ] PTR unsigned char 
  4109 ;;		 -> STR_12(61), STR_11(26), STR_9(6), STR_7(6), 
  4110 ;;		 -> STR_4(34), STR_3(31), STR_2(34), STR_1(14), 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  2  161[BANK1 ] int 
  4113 ;; Registers used:
  4114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4120 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;Total ram usage:        8 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:   23
  4127 ;; This function calls:
  4128 ;;		_vfpfcnvrt
  4129 ;; This function is called by:
  4130 ;;		_sprintf
  4131 ;;		_printf
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text11
  4136  006C08                     __ptext11:
  4137                           	opt callstack 0
  4138  006C08                     _vfprintf:
  4139                           	opt callstack 6
  4140                           
  4141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4142                           
  4143                           ;incstack = 0
  4144  006C08  C1A3  F1A7         	movff	vfprintf@fmt,vfprintf@cfmt
  4145  006C0C  C1A4  F1A8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4146                           
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4148  006C10  0E00               	movlw	0
  4149  006C12  0101               	movlb	1	; () banked
  4150  006C14  6FDC               	movwf	(_nout+1)& (0+255),b
  4151  006C16  0E00               	movlw	0
  4152  006C18  6FDB               	movwf	_nout& (0+255),b
  4153                           
  4154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4155  006C1A  D013               	goto	l8143
  4156  006C1C                     l8141:
  4157                           
  4158                           ; BSR set to: 1
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4160  006C1C  C1A1  F183         	movff	vfprintf@fp,vfpfcnvrt@fp
  4161  006C20  C1A2  F184         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4162  006C24  0EA7               	movlw	low vfprintf@cfmt
  4163  006C26  6F85               	movwf	vfpfcnvrt@fmt& (0+255),b
  4164  006C28  0E01               	movlw	high vfprintf@cfmt
  4165  006C2A  6F86               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4166  006C2C  C1A5  F187         	movff	vfprintf@ap,vfpfcnvrt@ap
  4167  006C30  C1A6  F188         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4168  006C34  EC08  F012         	call	_vfpfcnvrt	;wreg free
  4169  006C38  0101               	movlb	1	; () banked
  4170  006C3A  5183               	movf	?_vfpfcnvrt& (0+255),w,b
  4171  006C3C  27DB               	addwf	_nout& (0+255),f,b
  4172  006C3E  5184               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4173  006C40  23DC               	addwfc	(_nout+1)& (0+255),f,b
  4174  006C42                     l8143:
  4175                           
  4176                           ; BSR set to: 1
  4177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4178  006C42  C1A7  FFF6         	movff	vfprintf@cfmt,tblptrl
  4179  006C46  C1A8  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4180  006C4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4181  006C4A  6AF8               	clrf	tblptru,c
  4182  006C4C                     	endif
  4183  006C4C                     	if	0	;tblptru may be non-zero
  4184  006C4C                     	endif
  4185  006C4C  0008               	tblrd		*
  4186  006C4E  50F5               	movf	tablat,w,c
  4187  006C50  0900               	iorlw	0
  4188  006C52  A4D8               	btfss	status,2,c
  4189  006C54  D7E3               	goto	l8141
  4190                           
  4191                           ; BSR set to: 1
  4192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4193  006C56  C1DB  F1A1         	movff	_nout,?_vfprintf
  4194  006C5A  C1DC  F1A2         	movff	_nout+1,?_vfprintf+1
  4195                           
  4196                           ; BSR set to: 1
  4197  006C5E  0012               	return		;funcret
  4198  006C60                     __end_of_vfprintf:
  4199                           	opt callstack 0
  4200                           
  4201 ;; *************** function _vfpfcnvrt *****************
  4202 ;; Defined at:
  4203 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  fp              2  131[BANK1 ] PTR struct _IO_FILE
  4206 ;;		 -> sprintf@f(6), NULL(0), 
  4207 ;;  fmt             2  133[BANK1 ] PTR PTR unsigned char 
  4208 ;;		 -> vfprintf@cfmt(2), 
  4209 ;;  ap              2  135[BANK1 ] PTR PTR void 
  4210 ;;		 -> printf@ap(2), sprintf@ap(2), 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  ll              8  141[BANK1 ] long long 
  4213 ;;  llu             8    0        unsigned long long 
  4214 ;;  f               4  153[BANK1 ] unsigned long long 
  4215 ;;  ct              3  158[BANK1 ] unsigned char [3]
  4216 ;;  vp              3    0        PTR void 
  4217 ;;  cp              3    0        PTR unsigned char 
  4218 ;;  i               2    0        int 
  4219 ;;  done            2    0        int 
  4220 ;;  c               1  157[BANK1 ] unsigned char 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  2  131[BANK1 ] int 
  4223 ;; Registers used:
  4224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4230 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4231 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;Total ram usage:       30 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:   22
  4237 ;; This function calls:
  4238 ;;		_atoi
  4239 ;;		_dtoa
  4240 ;;		_efgtoa
  4241 ;;		_fputc
  4242 ;;		_isdigit
  4243 ;;		_isupper
  4244 ;;		_strncmp
  4245 ;;		_tolower
  4246 ;; This function is called by:
  4247 ;;		_vfprintf
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text12
  4252  002410                     __ptext12:
  4253                           	opt callstack 0
  4254  002410                     _vfpfcnvrt:
  4255                           	opt callstack 6
  4256                           
  4257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4258                           
  4259                           ; BSR set to: 1
  4260                           ;incstack = 0
  4261  002410  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4262  002414  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4263  002418  CFDE FFF6          	movff	postinc2,tblptrl
  4264  00241C  CFDD FFF7          	movff	postdec2,tblptrh
  4265  002420                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4266  002420  6AF8               	clrf	tblptru,c
  4267  002422                     	endif
  4268  002422                     	if	0	;tblptru may be non-zero
  4269  002422                     	endif
  4270  002422  0008               	tblrd		*
  4271  002424  50F5               	movf	tablat,w,c
  4272  002426  0A25               	xorlw	37
  4273  002428  A4D8               	btfss	status,2,c
  4274  00242A  D216               	goto	l8029
  4275                           
  4276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4277  00242C  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4278  002430  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4279  002434  2ADE               	incf	postinc2,f,c
  4280  002436  0E00               	movlw	0
  4281  002438  22DD               	addwfc	postdec2,f,c
  4282                           
  4283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4284  00243A  0E00               	movlw	0
  4285  00243C  0101               	movlb	1	; () banked
  4286  00243E  6FDE               	movwf	(_width+1)& (0+255),b
  4287  002440  0E00               	movlw	0
  4288  002442  6FDD               	movwf	_width& (0+255),b
  4289  002444  C1DD  F1E1         	movff	_width,_flags
  4290  002448  C1DE  F1E2         	movff	_width+1,_flags+1
  4291                           
  4292                           ; BSR set to: 1
  4293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4294  00244C  69DF               	setf	_prec& (0+255),b
  4295  00244E  69E0               	setf	(_prec+1)& (0+255),b
  4296                           
  4297                           ; BSR set to: 1
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4299  002450  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4300  002454  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4301  002458  CFDE FFF6          	movff	postinc2,tblptrl
  4302  00245C  CFDD FFF7          	movff	postdec2,tblptrh
  4303  002460                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4304  002460  6AF8               	clrf	tblptru,c
  4305  002462                     	endif
  4306  002462                     	if	0	;tblptru may be non-zero
  4307  002462                     	endif
  4308  002462  0008               	tblrd		*
  4309  002464  50F5               	movf	tablat,w,c
  4310  002466  0A2E               	xorlw	46
  4311  002468  A4D8               	btfss	status,2,c
  4312  00246A  D070               	goto	u11310
  4313                           
  4314                           ; BSR set to: 1
  4315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4316  00246C  0E00               	movlw	0
  4317  00246E  6FE0               	movwf	(_prec+1)& (0+255),b
  4318  002470  0E00               	movlw	0
  4319  002472  6FDF               	movwf	_prec& (0+255),b
  4320                           
  4321                           ; BSR set to: 1
  4322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4323  002474  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4324  002478  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4325  00247C  2ADE               	incf	postinc2,f,c
  4326  00247E  0E00               	movlw	0
  4327  002480  22DD               	addwfc	postdec2,f,c
  4328                           
  4329                           ; BSR set to: 1
  4330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4331  002482  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4332  002486  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4333  00248A  CFDE FFF6          	movff	postinc2,tblptrl
  4334  00248E  CFDD FFF7          	movff	postdec2,tblptrh
  4335  002492                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4336  002492  6AF8               	clrf	tblptru,c
  4337  002494                     	endif
  4338  002494                     	if	0	;tblptru may be non-zero
  4339  002494                     	endif
  4340  002494  0008               	tblrd		*
  4341  002496  50F5               	movf	tablat,w,c
  4342  002498  0A2A               	xorlw	42
  4343  00249A  A4D8               	btfss	status,2,c
  4344  00249C  D01C               	goto	l7955
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4348  00249E  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4349  0024A2  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4350  0024A6  2ADE               	incf	postinc2,f,c
  4351  0024A8  0E00               	movlw	0
  4352  0024AA  22DD               	addwfc	postdec2,f,c
  4353                           
  4354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4355  0024AC  C187  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4356  0024B0  C188  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4357  0024B4  CFDF F189          	movff	indf2,??_vfpfcnvrt
  4358  0024B8  0E02               	movlw	2
  4359  0024BA  26DE               	addwf	postinc2,f,c
  4360  0024BC  CFDF F18A          	movff	indf2,??_vfpfcnvrt+1
  4361  0024C0  0E00               	movlw	0
  4362  0024C2  22DD               	addwfc	postdec2,f,c
  4363  0024C4  C189  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4364  0024C8  C18A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4365  0024CC  CFDE F1DF          	movff	postinc2,_prec
  4366  0024D0  CFDD F1E0          	movff	postdec2,_prec+1
  4367                           
  4368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4369  0024D4  D03B               	goto	u11310
  4370  0024D6                     l7955:
  4371                           
  4372                           ; BSR set to: 1
  4373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4374  0024D6  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4375  0024DA  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4376  0024DE  CFDE F107          	movff	postinc2,atoi@s
  4377  0024E2  CFDD F108          	movff	postdec2,atoi@s+1
  4378  0024E6  ECFB  F024         	call	_atoi	;wreg free
  4379  0024EA  C107  F1DF         	movff	?_atoi,_prec
  4380  0024EE  C108  F1E0         	movff	?_atoi+1,_prec+1
  4381                           
  4382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4383  0024F2  D007               	goto	l7959
  4384  0024F4                     l7957:
  4385                           
  4386                           ; BSR set to: 1
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4388  0024F4  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4389  0024F8  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4390  0024FC  2ADE               	incf	postinc2,f,c
  4391  0024FE  0E00               	movlw	0
  4392  002500  22DD               	addwfc	postdec2,f,c
  4393  002502                     l7959:
  4394  002502  0ED0               	movlw	208
  4395  002504  0101               	movlb	1	; () banked
  4396  002506  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  4397  002508  0EFF               	movlw	255
  4398  00250A  6F8A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4399  00250C  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4400  002510  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4401  002514  CFDE FFF6          	movff	postinc2,tblptrl
  4402  002518  CFDD FFF7          	movff	postdec2,tblptrh
  4403  00251C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4404  00251C  6AF8               	clrf	tblptru,c
  4405  00251E                     	endif
  4406  00251E                     	if	0	;tblptru may be non-zero
  4407  00251E                     	endif
  4408  00251E  0008               	tblrd		*
  4409  002520  50F5               	movf	tablat,w,c
  4410  002522  6F8B               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4411  002524  6B8C               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4412  002526  5189               	movf	??_vfpfcnvrt& (0+255),w,b
  4413  002528  278B               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4414  00252A  518A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4415  00252C  238C               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4416  00252E  518C               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4417  002530  E106               	bnz	u11290
  4418  002532  0E0A               	movlw	10
  4419  002534  5D8B               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4420  002536  B0D8               	btfsc	status,0,c
  4421  002538  D002               	goto	u11290
  4422  00253A  0E01               	movlw	1
  4423  00253C  D001               	goto	u11300
  4424  00253E                     u11290:
  4425  00253E  0E00               	movlw	0
  4426  002540                     u11300:
  4427  002540  6F95               	movwf	_vfpfcnvrt$1563& (0+255),b
  4428  002542  6B96               	clrf	(_vfpfcnvrt$1563+1)& (0+255),b
  4429                           
  4430                           ; BSR set to: 1
  4431  002544  5195               	movf	_vfpfcnvrt$1563& (0+255),w,b
  4432  002546  1196               	iorwf	(_vfpfcnvrt$1563+1)& (0+255),w,b
  4433  002548  A4D8               	btfss	status,2,c
  4434  00254A  D7D4               	goto	l7957
  4435  00254C                     u11310:
  4436                           
  4437                           ; BSR set to: 1
  4438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4439  00254C  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4440  002550  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4441  002554  CFDE FFF6          	movff	postinc2,tblptrl
  4442  002558  CFDD FFF7          	movff	postdec2,tblptrh
  4443  00255C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4444  00255C  6AF8               	clrf	tblptru,c
  4445  00255E                     	endif
  4446  00255E                     	if	0	;tblptru may be non-zero
  4447  00255E                     	endif
  4448  00255E  0008               	tblrd		*
  4449  002560  50F5               	movf	tablat,w,c
  4450  002562  6F06               	movwf	tolower@c& (0+255),b
  4451  002564  6B07               	clrf	(tolower@c+1)& (0+255),b
  4452  002566  EC05  F037         	call	_tolower	;wreg free
  4453  00256A  0101               	movlb	1	; () banked
  4454  00256C  5106               	movf	?_tolower& (0+255),w,b
  4455  00256E  6F9E               	movwf	vfpfcnvrt@ct& (0+255),b
  4456                           
  4457                           ; BSR set to: 1
  4458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4459  002570  519E               	movf	vfpfcnvrt@ct& (0+255),w,b
  4460  002572  B4D8               	btfsc	status,2,c
  4461  002574  D037               	goto	l7975
  4462                           
  4463                           ; BSR set to: 1
  4464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4465  002576  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4466  00257A  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4467  00257E  CFDE F189          	movff	postinc2,??_vfpfcnvrt
  4468  002582  CFDD F18A          	movff	postdec2,??_vfpfcnvrt+1
  4469  002586  0E01               	movlw	1
  4470  002588  2789               	addwf	??_vfpfcnvrt& (0+255),f,b
  4471  00258A  0E00               	movlw	0
  4472  00258C  238A               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4473  00258E  C189  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4474  002592  C18A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4475  002596                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4476  002596  6AF8               	clrf	tblptru,c
  4477  002598                     	endif
  4478  002598                     	if	0	;tblptru may be non-zero
  4479  002598                     	endif
  4480  002598  0008               	tblrd		*
  4481  00259A  50F5               	movf	tablat,w,c
  4482  00259C  6F06               	movwf	tolower@c& (0+255),b
  4483  00259E  6B07               	clrf	(tolower@c+1)& (0+255),b
  4484  0025A0  EC05  F037         	call	_tolower	;wreg free
  4485  0025A4  0101               	movlb	1	; () banked
  4486  0025A6  5106               	movf	?_tolower& (0+255),w,b
  4487  0025A8  6F9F               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4488                           
  4489                           ; BSR set to: 1
  4490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4491  0025AA  519F               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4492  0025AC  B4D8               	btfsc	status,2,c
  4493  0025AE  D01A               	goto	l7975
  4494                           
  4495                           ; BSR set to: 1
  4496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4497  0025B0  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4498  0025B4  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4499  0025B8  CFDE F189          	movff	postinc2,??_vfpfcnvrt
  4500  0025BC  CFDD F18A          	movff	postdec2,??_vfpfcnvrt+1
  4501  0025C0  0E02               	movlw	2
  4502  0025C2  2789               	addwf	??_vfpfcnvrt& (0+255),f,b
  4503  0025C4  0E00               	movlw	0
  4504  0025C6  238A               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4505  0025C8  C189  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4506  0025CC  C18A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4507  0025D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4508  0025D0  6AF8               	clrf	tblptru,c
  4509  0025D2                     	endif
  4510  0025D2                     	if	0	;tblptru may be non-zero
  4511  0025D2                     	endif
  4512  0025D2  0008               	tblrd		*
  4513  0025D4  50F5               	movf	tablat,w,c
  4514  0025D6  6F06               	movwf	tolower@c& (0+255),b
  4515  0025D8  6B07               	clrf	(tolower@c+1)& (0+255),b
  4516  0025DA  EC05  F037         	call	_tolower	;wreg free
  4517  0025DE  0101               	movlb	1	; () banked
  4518  0025E0  5106               	movf	?_tolower& (0+255),w,b
  4519  0025E2  6FA0               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4520  0025E4                     l7975:
  4521                           
  4522                           ; BSR set to: 1
  4523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4524  0025E4  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4525  0025E8  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4526  0025EC  CFDE FFF6          	movff	postinc2,tblptrl
  4527  0025F0  CFDD FFF7          	movff	postdec2,tblptrh
  4528  0025F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4529  0025F4  6AF8               	clrf	tblptru,c
  4530  0025F6                     	endif
  4531  0025F6                     	if	0	;tblptru may be non-zero
  4532  0025F6                     	endif
  4533  0025F6  0008               	tblrd		*
  4534  0025F8  50F5               	movf	tablat,w,c
  4535  0025FA  0A64               	xorlw	100
  4536  0025FC  B4D8               	btfsc	status,2,c
  4537  0025FE  D00E               	goto	u11350
  4538                           
  4539                           ; BSR set to: 1
  4540  002600  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4541  002604  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4542  002608  CFDE FFF6          	movff	postinc2,tblptrl
  4543  00260C  CFDD FFF7          	movff	postdec2,tblptrh
  4544  002610                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4545  002610  6AF8               	clrf	tblptru,c
  4546  002612                     	endif
  4547  002612                     	if	0	;tblptru may be non-zero
  4548  002612                     	endif
  4549  002612  0008               	tblrd		*
  4550  002614  50F5               	movf	tablat,w,c
  4551  002616  0A69               	xorlw	105
  4552  002618  A4D8               	btfss	status,2,c
  4553  00261A  D03F               	goto	l7985
  4554  00261C                     u11350:
  4555                           
  4556                           ; BSR set to: 1
  4557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4558  00261C  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4559  002620  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4560  002624  2ADE               	incf	postinc2,f,c
  4561  002626  0E00               	movlw	0
  4562  002628  22DD               	addwfc	postdec2,f,c
  4563                           
  4564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4565  00262A  C187  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4566  00262E  C188  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4567  002632  CFDF F189          	movff	indf2,??_vfpfcnvrt
  4568  002636  0E02               	movlw	2
  4569  002638  26DE               	addwf	postinc2,f,c
  4570  00263A  CFDF F18A          	movff	indf2,??_vfpfcnvrt+1
  4571  00263E  0E00               	movlw	0
  4572  002640  22DD               	addwfc	postdec2,f,c
  4573  002642  C189  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4574  002646  C18A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4575  00264A  CFDE F18D          	movff	postinc2,vfpfcnvrt@ll
  4576  00264E  CFDD F18E          	movff	postdec2,vfpfcnvrt@ll+1
  4577  002652  0E00               	movlw	0
  4578  002654  BF8E               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4579  002656  0EFF               	movlw	-1
  4580  002658  6F8F               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4581  00265A  6F90               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4582  00265C  6F91               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4583  00265E  6F92               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4584  002660  6F93               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4585  002662  6F94               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4586                           
  4587                           ; BSR set to: 1
  4588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4589  002664  C183  F11D         	movff	vfpfcnvrt@fp,dtoa@fp
  4590  002668  C184  F11E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4591  00266C  C18D  F11F         	movff	vfpfcnvrt@ll,dtoa@d
  4592  002670  C18E  F120         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4593  002674  C18F  F121         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4594  002678  C190  F122         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4595  00267C  C191  F123         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4596  002680  C192  F124         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4597  002684  C193  F125         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4598  002688  C194  F126         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4599  00268C  EC6F  F01F         	call	_dtoa	;wreg free
  4600  002690  C11D  F183         	movff	?_dtoa,?_vfpfcnvrt
  4601  002694  C11E  F184         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4602  002698  0012               	return	
  4603  00269A                     l7985:
  4604                           
  4605                           ; BSR set to: 1
  4606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  4607  00269A  0E66               	movlw	102
  4608  00269C  199E               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4609  00269E  A4D8               	btfss	status,2,c
  4610  0026A0  D040               	goto	l7997
  4611                           
  4612                           ; BSR set to: 1
  4613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  4614  0026A2  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4615  0026A6  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4616  0026AA  CFDE FFF6          	movff	postinc2,tblptrl
  4617  0026AE  CFDD FFF7          	movff	postdec2,tblptrh
  4618  0026B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4619  0026B2  6AF8               	clrf	tblptru,c
  4620  0026B4                     	endif
  4621  0026B4                     	if	0	;tblptru may be non-zero
  4622  0026B4                     	endif
  4623  0026B4  0008               	tblrd		*
  4624  0026B6  CFF5 F19D          	movff	tablat,vfpfcnvrt@c
  4625                           
  4626                           ; BSR set to: 1
  4627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  4628  0026BA  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4629  0026BE  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4630  0026C2  2ADE               	incf	postinc2,f,c
  4631  0026C4  0E00               	movlw	0
  4632  0026C6  22DD               	addwfc	postdec2,f,c
  4633                           
  4634                           ; BSR set to: 1
  4635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4636  0026C8  C187  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4637  0026CC  C188  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4638  0026D0  CFDF F189          	movff	indf2,??_vfpfcnvrt
  4639  0026D4  0E04               	movlw	4
  4640  0026D6  26DE               	addwf	postinc2,f,c
  4641  0026D8  CFDF F18A          	movff	indf2,??_vfpfcnvrt+1
  4642  0026DC  0E00               	movlw	0
  4643  0026DE  22DD               	addwfc	postdec2,f,c
  4644  0026E0  C189  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4645  0026E4  C18A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4646  0026E8  CFDE F199          	movff	postinc2,vfpfcnvrt@f
  4647  0026EC  CFDE F19A          	movff	postinc2,vfpfcnvrt@f+1
  4648  0026F0  CFDE F19B          	movff	postinc2,vfpfcnvrt@f+2
  4649  0026F4  CFDE F19C          	movff	postinc2,vfpfcnvrt@f+3
  4650  0026F8                     l7993:
  4651                           
  4652                           ; BSR set to: 1
  4653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  4654  0026F8  C183  F13F         	movff	vfpfcnvrt@fp,efgtoa@fp
  4655  0026FC  C184  F140         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4656  002700  C199  F141         	movff	vfpfcnvrt@f,efgtoa@f
  4657  002704  C19A  F142         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4658  002708  C19B  F143         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4659  00270C  C19C  F144         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4660  002710  C19D  F145         	movff	vfpfcnvrt@c,efgtoa@c
  4661  002714  EC47  F00D         	call	_efgtoa	;wreg free
  4662  002718  C13F  F183         	movff	?_efgtoa,?_vfpfcnvrt
  4663  00271C  C140  F184         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4664  002720  0012               	return	
  4665  002722                     l7997:
  4666                           
  4667                           ; BSR set to: 1
  4668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4669  002722  0E9E               	movlw	low vfpfcnvrt@ct
  4670  002724  6F00               	movwf	strncmp@_l& (0+255),b
  4671  002726  0E01               	movlw	high vfpfcnvrt@ct
  4672  002728  6F01               	movwf	(strncmp@_l+1)& (0+255),b
  4673  00272A  0EF6               	movlw	low STR_21
  4674  00272C  6F02               	movwf	strncmp@_r& (0+255),b
  4675  00272E  0E10               	movlw	high STR_21
  4676  002730  6F03               	movwf	(strncmp@_r+1)& (0+255),b
  4677  002732  0E00               	movlw	0
  4678  002734  6F05               	movwf	(strncmp@n+1)& (0+255),b
  4679  002736  0E02               	movlw	2
  4680  002738  6F04               	movwf	strncmp@n& (0+255),b
  4681  00273A  EC39  F030         	call	_strncmp	;wreg free
  4682  00273E  0101               	movlb	1	; () banked
  4683  002740  5100               	movf	?_strncmp& (0+255),w,b
  4684  002742  1101               	iorwf	(?_strncmp+1)& (0+255),w,b
  4685  002744  A4D8               	btfss	status,2,c
  4686  002746  D057               	goto	l8013
  4687                           
  4688                           ; BSR set to: 1
  4689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4690  002748  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4691  00274C  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4692  002750  CFDE F189          	movff	postinc2,??_vfpfcnvrt
  4693  002754  CFDD F18A          	movff	postdec2,??_vfpfcnvrt+1
  4694  002758  0E01               	movlw	1
  4695  00275A  2789               	addwf	??_vfpfcnvrt& (0+255),f,b
  4696  00275C  0E00               	movlw	0
  4697  00275E  238A               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4698  002760  C189  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4699  002764  C18A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4700  002768                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4701  002768  6AF8               	clrf	tblptru,c
  4702  00276A                     	endif
  4703  00276A                     	if	0	;tblptru may be non-zero
  4704  00276A                     	endif
  4705  00276A  0008               	tblrd		*
  4706  00276C  CFF5 F19D          	movff	tablat,vfpfcnvrt@c
  4707  002770  0EBF               	movlw	191
  4708  002772  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  4709  002774  0EFF               	movlw	255
  4710  002776  6F8A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4711  002778  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4712  00277C  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4713  002780  CFDE FFF6          	movff	postinc2,tblptrl
  4714  002784  CFDD FFF7          	movff	postdec2,tblptrh
  4715  002788                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4716  002788  6AF8               	clrf	tblptru,c
  4717  00278A                     	endif
  4718  00278A                     	if	0	;tblptru may be non-zero
  4719  00278A                     	endif
  4720  00278A  0008               	tblrd		*
  4721  00278C  50F5               	movf	tablat,w,c
  4722  00278E  6F8B               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4723  002790  6B8C               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4724  002792  5189               	movf	??_vfpfcnvrt& (0+255),w,b
  4725  002794  278B               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4726  002796  518A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4727  002798  238C               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4728  00279A  518C               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4729  00279C  E106               	bnz	u11380
  4730  00279E  0E1A               	movlw	26
  4731  0027A0  5D8B               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4732  0027A2  B0D8               	btfsc	status,0,c
  4733  0027A4  D002               	goto	u11380
  4734  0027A6  0E01               	movlw	1
  4735  0027A8  D001               	goto	u11390
  4736  0027AA                     u11380:
  4737  0027AA  0E00               	movlw	0
  4738  0027AC                     u11390:
  4739  0027AC  6F97               	movwf	_vfpfcnvrt$1568& (0+255),b
  4740  0027AE  6B98               	clrf	(_vfpfcnvrt$1568+1)& (0+255),b
  4741                           
  4742                           ; BSR set to: 1
  4743  0027B0  5197               	movf	_vfpfcnvrt$1568& (0+255),w,b
  4744  0027B2  1198               	iorwf	(_vfpfcnvrt$1568+1)& (0+255),w,b
  4745                           
  4746                           ; BSR set to: 1
  4747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4748                           
  4749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  4750                           
  4751                           ; BSR set to: 1
  4752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4753  0027B4  C187  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4754  0027B8  C188  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4755  0027BC  CFDF F189          	movff	indf2,??_vfpfcnvrt
  4756  0027C0  0E04               	movlw	4
  4757  0027C2  26DE               	addwf	postinc2,f,c
  4758  0027C4  CFDF F18A          	movff	indf2,??_vfpfcnvrt+1
  4759  0027C8  0E00               	movlw	0
  4760  0027CA  22DD               	addwfc	postdec2,f,c
  4761  0027CC  C189  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4762  0027D0  C18A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4763  0027D4  CFDE F199          	movff	postinc2,vfpfcnvrt@f
  4764  0027D8  CFDE F19A          	movff	postinc2,vfpfcnvrt@f+1
  4765  0027DC  CFDE F19B          	movff	postinc2,vfpfcnvrt@f+2
  4766  0027E0  CFDE F19C          	movff	postinc2,vfpfcnvrt@f+3
  4767                           
  4768                           ; BSR set to: 1
  4769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4770                           
  4771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  4772  0027E4  0E02               	movlw	2
  4773  0027E6  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4774  0027EA  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4775  0027EE  26DE               	addwf	postinc2,f,c
  4776  0027F0  0E00               	movlw	0
  4777  0027F2  22DD               	addwfc	postdec2,f,c
  4778  0027F4  D781               	goto	l7993
  4779  0027F6                     l8013:
  4780                           
  4781                           ; BSR set to: 1
  4782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4783  0027F6  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4784  0027FA  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4785  0027FE  CFDE FFF6          	movff	postinc2,tblptrl
  4786  002802  CFDD FFF7          	movff	postdec2,tblptrh
  4787  002806                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4788  002806  6AF8               	clrf	tblptru,c
  4789  002808                     	endif
  4790  002808                     	if	0	;tblptru may be non-zero
  4791  002808                     	endif
  4792  002808  0008               	tblrd		*
  4793  00280A  50F5               	movf	tablat,w,c
  4794  00280C  0A25               	xorlw	37
  4795  00280E  A4D8               	btfss	status,2,c
  4796  002810  D017               	goto	l8023
  4797                           
  4798                           ; BSR set to: 1
  4799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4800  002812  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4801  002816  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4802  00281A  2ADE               	incf	postinc2,f,c
  4803  00281C  0E00               	movlw	0
  4804  00281E  22DD               	addwfc	postdec2,f,c
  4805                           
  4806                           ; BSR set to: 1
  4807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4808  002820  0E00               	movlw	0
  4809  002822  6F03               	movwf	(fputc@c+1)& (0+255),b
  4810  002824  0E25               	movlw	37
  4811  002826  6F02               	movwf	fputc@c& (0+255),b
  4812  002828  C183  F104         	movff	vfpfcnvrt@fp,fputc@fp
  4813  00282C  C184  F105         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4814  002830  EC35  F031         	call	_fputc	;wreg free
  4815  002834                     l8019:
  4816                           
  4817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4818  002834  0E00               	movlw	0
  4819  002836  0101               	movlb	1	; () banked
  4820  002838  6F84               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4821  00283A  0E01               	movlw	1
  4822  00283C  6F83               	movwf	?_vfpfcnvrt& (0+255),b
  4823  00283E  0012               	return	
  4824  002840                     l8023:
  4825                           
  4826                           ; BSR set to: 1
  4827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4828  002840  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4829  002844  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4830  002848  2ADE               	incf	postinc2,f,c
  4831  00284A  0E00               	movlw	0
  4832  00284C  22DD               	addwfc	postdec2,f,c
  4833                           
  4834                           ; BSR set to: 1
  4835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4836  00284E  0E00               	movlw	0
  4837  002850  6F84               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4838  002852  0E00               	movlw	0
  4839  002854  6F83               	movwf	?_vfpfcnvrt& (0+255),b
  4840  002856  0012               	return	
  4841  002858                     l8029:
  4842                           
  4843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4844  002858  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4845  00285C  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4846  002860  CFDE FFF6          	movff	postinc2,tblptrl
  4847  002864  CFDD FFF7          	movff	postdec2,tblptrh
  4848  002868                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4849  002868  6AF8               	clrf	tblptru,c
  4850  00286A                     	endif
  4851  00286A                     	if	0	;tblptru may be non-zero
  4852  00286A                     	endif
  4853  00286A  0008               	tblrd		*
  4854  00286C  50F5               	movf	tablat,w,c
  4855  00286E  0101               	movlb	1	; () banked
  4856  002870  6F02               	movwf	fputc@c& (0+255),b
  4857  002872  6B03               	clrf	(fputc@c+1)& (0+255),b
  4858  002874  C183  F104         	movff	vfpfcnvrt@fp,fputc@fp
  4859  002878  C184  F105         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4860  00287C  EC35  F031         	call	_fputc	;wreg free
  4861                           
  4862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4863  002880  C185  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4864  002884  C186  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4865  002888  2ADE               	incf	postinc2,f,c
  4866  00288A  0E00               	movlw	0
  4867  00288C  22DD               	addwfc	postdec2,f,c
  4868  00288E  D7D2               	goto	l8019
  4869  002890                     __end_of_vfpfcnvrt:
  4870                           	opt callstack 0
  4871                           
  4872 ;; *************** function _strncmp *****************
  4873 ;; Defined at:
  4874 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  _l              2    0[BANK1 ] PTR const unsigned char 
  4877 ;;		 -> vfpfcnvrt@ct(3), 
  4878 ;;  _r              2    2[BANK1 ] PTR const unsigned char 
  4879 ;;		 -> STR_23(3), 
  4880 ;;  n               2    4[BANK1 ] unsigned int 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  r               2    9[BANK1 ] PTR const unsigned char 
  4883 ;;		 -> STR_23(3), 
  4884 ;;  l               2    7[BANK1 ] PTR const unsigned char 
  4885 ;;		 -> vfpfcnvrt@ct(3), 
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  2    0[BANK1 ] int 
  4888 ;; Registers used:
  4889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4895 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;Total ram usage:       11 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:   16
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_vfpfcnvrt
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text13
  4910  006072                     __ptext13:
  4911                           	opt callstack 0
  4912  006072                     _strncmp:
  4913                           	opt callstack 11
  4914                           
  4915                           ;incstack = 0
  4916  006072  C100  F107         	movff	strncmp@_l,strncmp@l
  4917  006076  C101  F108         	movff	strncmp@_l+1,strncmp@l+1
  4918  00607A  C102  F109         	movff	strncmp@_r,strncmp@r
  4919  00607E  C103  F10A         	movff	strncmp@_r+1,strncmp@r+1
  4920  006082  0101               	movlb	1	; () banked
  4921  006084  0704               	decf	strncmp@n& (0+255),f,b
  4922  006086  A0D8               	btfss	status,0,c
  4923  006088  0705               	decf	(strncmp@n+1)& (0+255),f,b
  4924  00608A  2904               	incf	strncmp@n& (0+255),w,b
  4925  00608C  E10F               	bnz	l7919
  4926  00608E  2905               	incf	(strncmp@n+1)& (0+255),w,b
  4927  006090  A4D8               	btfss	status,2,c
  4928  006092  D00C               	goto	l7919
  4929                           
  4930                           ; BSR set to: 1
  4931  006094  0E00               	movlw	0
  4932  006096  6F01               	movwf	(?_strncmp+1)& (0+255),b
  4933  006098  0E00               	movlw	0
  4934  00609A  6F00               	movwf	?_strncmp& (0+255),b
  4935  00609C  0012               	return	
  4936  00609E                     l7917:
  4937                           
  4938                           ; BSR set to: 1
  4939  00609E  4B07               	infsnz	strncmp@l& (0+255),f,b
  4940  0060A0  2B08               	incf	(strncmp@l+1)& (0+255),f,b
  4941  0060A2  4B09               	infsnz	strncmp@r& (0+255),f,b
  4942  0060A4  2B0A               	incf	(strncmp@r+1)& (0+255),f,b
  4943  0060A6  0704               	decf	strncmp@n& (0+255),f,b
  4944  0060A8  A0D8               	btfss	status,0,c
  4945  0060AA  0705               	decf	(strncmp@n+1)& (0+255),f,b
  4946  0060AC                     l7919:
  4947                           
  4948                           ; BSR set to: 1
  4949  0060AC  C107  FFD9         	movff	strncmp@l,fsr2l
  4950  0060B0  C108  FFDA         	movff	strncmp@l+1,fsr2h
  4951  0060B4  50DF               	movf	indf2,w,c
  4952  0060B6  B4D8               	btfsc	status,2,c
  4953  0060B8  D01E               	goto	u11250
  4954                           
  4955                           ; BSR set to: 1
  4956  0060BA  C109  FFF6         	movff	strncmp@r,tblptrl
  4957  0060BE  C10A  FFF7         	movff	strncmp@r+1,tblptrh
  4958  0060C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4959  0060C2  6AF8               	clrf	tblptru,c
  4960  0060C4                     	endif
  4961  0060C4                     	if	0	;tblptru may be non-zero
  4962  0060C4                     	endif
  4963  0060C4  0008               	tblrd		*
  4964  0060C6  50F5               	movf	tablat,w,c
  4965  0060C8  0900               	iorlw	0
  4966  0060CA  B4D8               	btfsc	status,2,c
  4967  0060CC  D014               	goto	u11250
  4968                           
  4969                           ; BSR set to: 1
  4970  0060CE  5104               	movf	strncmp@n& (0+255),w,b
  4971  0060D0  1105               	iorwf	(strncmp@n+1)& (0+255),w,b
  4972  0060D2  B4D8               	btfsc	status,2,c
  4973  0060D4  D010               	goto	u11250
  4974                           
  4975                           ; BSR set to: 1
  4976  0060D6  C107  FFD9         	movff	strncmp@l,fsr2l
  4977  0060DA  C108  FFDA         	movff	strncmp@l+1,fsr2h
  4978  0060DE  50DF               	movf	indf2,w,c
  4979  0060E0  6F06               	movwf	??_strncmp& (0+255),b
  4980  0060E2  C109  FFF6         	movff	strncmp@r,tblptrl
  4981  0060E6  C10A  FFF7         	movff	strncmp@r+1,tblptrh
  4982  0060EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4983  0060EA  6AF8               	clrf	tblptru,c
  4984  0060EC                     	endif
  4985  0060EC                     	if	0	;tblptru may be non-zero
  4986  0060EC                     	endif
  4987  0060EC  0008               	tblrd		*
  4988  0060EE  50F5               	movf	tablat,w,c
  4989  0060F0  1906               	xorwf	??_strncmp& (0+255),w,b
  4990  0060F2  B4D8               	btfsc	status,2,c
  4991  0060F4  D7D4               	goto	l7917
  4992  0060F6                     u11250:
  4993                           
  4994                           ; BSR set to: 1
  4995  0060F6  C107  FFD9         	movff	strncmp@l,fsr2l
  4996  0060FA  C108  FFDA         	movff	strncmp@l+1,fsr2h
  4997  0060FE  50DF               	movf	indf2,w,c
  4998  006100  6F06               	movwf	??_strncmp& (0+255),b
  4999  006102  C109  FFF6         	movff	strncmp@r,tblptrl
  5000  006106  C10A  FFF7         	movff	strncmp@r+1,tblptrh
  5001  00610A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5002  00610A  6AF8               	clrf	tblptru,c
  5003  00610C                     	endif
  5004  00610C                     	if	0	;tblptru may be non-zero
  5005  00610C                     	endif
  5006  00610C  0008               	tblrd		*
  5007  00610E  50F5               	movf	tablat,w,c
  5008  006110  5D06               	subwf	??_strncmp& (0+255),w,b
  5009  006112  6F00               	movwf	?_strncmp& (0+255),b
  5010  006114  6B01               	clrf	(?_strncmp+1)& (0+255),b
  5011  006116  A0D8               	btfss	status,0,c
  5012  006118  0701               	decf	(?_strncmp+1)& (0+255),f,b
  5013                           
  5014                           ; BSR set to: 1
  5015  00611A  0012               	return		;funcret
  5016  00611C                     __end_of_strncmp:
  5017                           	opt callstack 0
  5018                           
  5019 ;; *************** function _efgtoa *****************
  5020 ;; Defined at:
  5021 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  fp              2   63[BANK1 ] PTR struct _IO_FILE
  5024 ;;		 -> sprintf@f(6), NULL(0), 
  5025 ;;  f               4   65[BANK1 ] PTR struct _IO_FILE
  5026 ;;  c               1   69[BANK1 ] unsigned char 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;  u               4  127[BANK1 ] unsigned char 
  5029 ;;  g               4  119[BANK1 ] unsigned char 
  5030 ;;  l               4  113[BANK1 ] unsigned char 
  5031 ;;  h               4  109[BANK1 ] unsigned char 
  5032 ;;  ou              4   75[BANK1 ] unsigned char 
  5033 ;;  n               2  125[BANK1 ] int 
  5034 ;;  e               2  123[BANK1 ] int 
  5035 ;;  i               2  117[BANK1 ] int 
  5036 ;;  w               2  106[BANK1 ] int 
  5037 ;;  p               2  103[BANK1 ] int 
  5038 ;;  sign            2  101[BANK1 ] int 
  5039 ;;  d               2   99[BANK1 ] int 
  5040 ;;  ne              2   97[BANK1 ] int 
  5041 ;;  m               2   95[BANK1 ] int 
  5042 ;;  pp              2   93[BANK1 ] int 
  5043 ;;  t               2   91[BANK1 ] int 
  5044 ;;  mode            1  108[BANK1 ] unsigned char 
  5045 ;;  nmode           1  105[BANK1 ] unsigned char 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  2   63[BANK1 ] int 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5055 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Totals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;Total ram usage:       68 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:   21
  5062 ;; This function calls:
  5063 ;;		___awdiv
  5064 ;;		___awmod
  5065 ;;		___fladd
  5066 ;;		___fldiv
  5067 ;;		___fleq
  5068 ;;		___flge
  5069 ;;		___flmul
  5070 ;;		___flneg
  5071 ;;		___flsub
  5072 ;;		___fltol
  5073 ;;		___fpclassifyf
  5074 ;;		_floorf
  5075 ;;		_isupper
  5076 ;;		_pad
  5077 ;;		_strcpy
  5078 ;;		_tolower
  5079 ;; This function is called by:
  5080 ;;		_vfpfcnvrt
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text14
  5085  001A8E                     __ptext14:
  5086                           	opt callstack 0
  5087  001A8E                     _efgtoa:
  5088                           	opt callstack 6
  5089                           
  5090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  5091                           
  5092                           ; BSR set to: 1
  5093                           ;incstack = 0
  5094  001A8E  0E00               	movlw	0
  5095  001A90  0101               	movlb	1	; () banked
  5096  001A92  6F66               	movwf	(efgtoa@sign+1)& (0+255),b
  5097  001A94  0E00               	movlw	0
  5098  001A96  6F65               	movwf	efgtoa@sign& (0+255),b
  5099                           
  5100                           ; BSR set to: 1
  5101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  5102  001A98  C141  F177         	movff	efgtoa@f,efgtoa@g
  5103  001A9C  C142  F178         	movff	efgtoa@f+1,efgtoa@g+1
  5104  001AA0  C143  F179         	movff	efgtoa@f+2,efgtoa@g+2
  5105  001AA4  C144  F17A         	movff	efgtoa@f+3,efgtoa@g+3
  5106                           
  5107                           ; BSR set to: 1
  5108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  5109  001AA8  AF7A               	btfss	(efgtoa@g+3)& (0+255),7,b
  5110  001AAA  D016               	goto	l7581
  5111                           
  5112                           ; BSR set to: 1
  5113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  5114  001AAC  0E00               	movlw	0
  5115  001AAE  6F66               	movwf	(efgtoa@sign+1)& (0+255),b
  5116  001AB0  0E01               	movlw	1
  5117  001AB2  6F65               	movwf	efgtoa@sign& (0+255),b
  5118                           
  5119                           ; BSR set to: 1
  5120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  5121  001AB4  C177  F100         	movff	efgtoa@g,___flneg@f1
  5122  001AB8  C178  F101         	movff	efgtoa@g+1,___flneg@f1+1
  5123  001ABC  C179  F102         	movff	efgtoa@g+2,___flneg@f1+2
  5124  001AC0  C17A  F103         	movff	efgtoa@g+3,___flneg@f1+3
  5125  001AC4  ECC8  F038         	call	___flneg	;wreg free
  5126  001AC8  C100  F177         	movff	?___flneg,efgtoa@g
  5127  001ACC  C101  F178         	movff	?___flneg+1,efgtoa@g+1
  5128  001AD0  C102  F179         	movff	?___flneg+2,efgtoa@g+2
  5129  001AD4  C103  F17A         	movff	?___flneg+3,efgtoa@g+3
  5130  001AD8                     l7581:
  5131                           
  5132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  5133  001AD8  0E00               	movlw	0
  5134  001ADA  0101               	movlb	1	; () banked
  5135  001ADC  6F7E               	movwf	(efgtoa@n+1)& (0+255),b
  5136  001ADE  0E00               	movlw	0
  5137  001AE0  6F7D               	movwf	efgtoa@n& (0+255),b
  5138                           
  5139                           ; BSR set to: 1
  5140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  5141  001AE2  C1DD  F16A         	movff	_width,efgtoa@w
  5142  001AE6  C1DE  F16B         	movff	_width+1,efgtoa@w+1
  5143                           
  5144                           ; BSR set to: 1
  5145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  5146  001AEA  5165               	movf	efgtoa@sign& (0+255),w,b
  5147  001AEC  1166               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5148  001AEE  A4D8               	btfss	status,2,c
  5149  001AF0  D002               	goto	u10640
  5150                           
  5151                           ; BSR set to: 1
  5152  001AF2  A5E1               	btfss	_flags& (0+255),2,b
  5153  001AF4  D013               	goto	l7601
  5154  001AF6                     u10640:
  5155                           
  5156                           ; BSR set to: 1
  5157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  5158  001AF6  5165               	movf	efgtoa@sign& (0+255),w,b
  5159  001AF8  1166               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5160  001AFA  A4D8               	btfss	status,2,c
  5161  001AFC  D004               	goto	l7593
  5162                           
  5163                           ; BSR set to: 1
  5164  001AFE  0E00               	movlw	0
  5165  001B00  6F50               	movwf	(_efgtoa$1538+1)& (0+255),b
  5166  001B02  0E2B               	movlw	43
  5167  001B04  D003               	goto	L2
  5168  001B06                     l7593:
  5169                           
  5170                           ; BSR set to: 1
  5171  001B06  0E00               	movlw	0
  5172  001B08  6F50               	movwf	(_efgtoa$1538+1)& (0+255),b
  5173  001B0A  0E2D               	movlw	45
  5174  001B0C                     L2:
  5175  001B0C  6F4F               	movwf	_efgtoa$1538& (0+255),b
  5176                           
  5177                           ; BSR set to: 1
  5178  001B0E  C14F  F264         	movff	_efgtoa$1538,_dbuf
  5179                           
  5180                           ; BSR set to: 1
  5181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  5182  001B12  4B7D               	infsnz	efgtoa@n& (0+255),f,b
  5183  001B14  2B7E               	incf	(efgtoa@n+1)& (0+255),f,b
  5184                           
  5185                           ; BSR set to: 1
  5186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  5187  001B16  076A               	decf	efgtoa@w& (0+255),f,b
  5188  001B18  A0D8               	btfss	status,0,c
  5189  001B1A  076B               	decf	(efgtoa@w+1)& (0+255),f,b
  5190  001B1C                     l7601:
  5191                           
  5192                           ; BSR set to: 1
  5193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5194  001B1C  C177  F100         	movff	efgtoa@g,___fpclassifyf@x
  5195  001B20  C178  F101         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5196  001B24  C179  F102         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5197  001B28  C17A  F103         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5198  001B2C  EC9E  F02D         	call	___fpclassifyf	;wreg free
  5199  001B30  0101               	movlb	1	; () banked
  5200  001B32  0500               	decf	?___fpclassifyf& (0+255),w,b
  5201  001B34  1101               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  5202  001B36  A4D8               	btfss	status,2,c
  5203  001B38  D04C               	goto	l7619
  5204                           
  5205                           ; BSR set to: 1
  5206  001B3A  0EBF               	movlw	191
  5207  001B3C  6F46               	movwf	??_efgtoa& (0+255),b
  5208  001B3E  0EFF               	movlw	255
  5209  001B40  6F47               	movwf	(??_efgtoa+1)& (0+255),b
  5210  001B42  5145               	movf	efgtoa@c& (0+255),w,b
  5211  001B44  6F48               	movwf	(??_efgtoa+2)& (0+255),b
  5212  001B46  6B49               	clrf	(??_efgtoa+3)& (0+255),b
  5213  001B48  5146               	movf	??_efgtoa& (0+255),w,b
  5214  001B4A  2748               	addwf	(??_efgtoa+2)& (0+255),f,b
  5215  001B4C  5147               	movf	(??_efgtoa+1)& (0+255),w,b
  5216  001B4E  2349               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5217  001B50  5149               	movf	(??_efgtoa+3)& (0+255),w,b
  5218  001B52  E106               	bnz	u10670
  5219  001B54  0E1A               	movlw	26
  5220  001B56  5D48               	subwf	(??_efgtoa+2)& (0+255),w,b
  5221  001B58  B0D8               	btfsc	status,0,c
  5222  001B5A  D002               	goto	u10670
  5223  001B5C  0E01               	movlw	1
  5224  001B5E  D001               	goto	u10680
  5225  001B60                     u10670:
  5226  001B60  0E00               	movlw	0
  5227  001B62                     u10680:
  5228  001B62  6F51               	movwf	_efgtoa$1539& (0+255),b
  5229  001B64  6B52               	clrf	(_efgtoa$1539+1)& (0+255),b
  5230                           
  5231                           ; BSR set to: 1
  5232  001B66  5151               	movf	_efgtoa$1539& (0+255),w,b
  5233  001B68  1152               	iorwf	(_efgtoa$1539+1)& (0+255),w,b
  5234  001B6A  B4D8               	btfsc	status,2,c
  5235  001B6C  D00D               	goto	l7611
  5236                           
  5237                           ; BSR set to: 1
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  5239  001B6E  0E64               	movlw	low _dbuf
  5240  001B70  257D               	addwf	efgtoa@n& (0+255),w,b
  5241  001B72  6F00               	movwf	strcpy@dest& (0+255),b
  5242  001B74  0E02               	movlw	high _dbuf
  5243  001B76  217E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5244  001B78  6F01               	movwf	(strcpy@dest+1)& (0+255),b
  5245  001B7A  0EE2               	movlw	low STR_13
  5246  001B7C  6F02               	movwf	strcpy@src& (0+255),b
  5247  001B7E  0E10               	movlw	high STR_13
  5248  001B80  6F03               	movwf	(strcpy@src+1)& (0+255),b
  5249  001B82  EC5C  F036         	call	_strcpy	;wreg free
  5250                           
  5251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  5252  001B86  D00C               	goto	l7613
  5253  001B88                     l7611:
  5254                           
  5255                           ; BSR set to: 1
  5256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  5257  001B88  0E64               	movlw	low _dbuf
  5258  001B8A  257D               	addwf	efgtoa@n& (0+255),w,b
  5259  001B8C  6F00               	movwf	strcpy@dest& (0+255),b
  5260  001B8E  0E02               	movlw	high _dbuf
  5261  001B90  217E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5262  001B92  6F01               	movwf	(strcpy@dest+1)& (0+255),b
  5263  001B94  0EEA               	movlw	low STR_14
  5264  001B96  6F02               	movwf	strcpy@src& (0+255),b
  5265  001B98  0E10               	movlw	high STR_14
  5266  001B9A  6F03               	movwf	(strcpy@src+1)& (0+255),b
  5267  001B9C  EC5C  F036         	call	_strcpy	;wreg free
  5268  001BA0                     l7613:
  5269                           
  5270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  5271  001BA0  0101               	movlb	1	; () banked
  5272  001BA2  0EFD               	movlw	253
  5273  001BA4  276A               	addwf	efgtoa@w& (0+255),f,b
  5274  001BA6  0EFF               	movlw	255
  5275  001BA8  236B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5276  001BAA                     l7615:
  5277                           
  5278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  5279  001BAA  C13F  F112         	movff	efgtoa@fp,pad@fp
  5280  001BAE  C140  F113         	movff	efgtoa@fp+1,pad@fp+1
  5281  001BB2  0E64               	movlw	low _dbuf
  5282  001BB4  0101               	movlb	1	; () banked
  5283  001BB6  6F14               	movwf	pad@buf& (0+255),b
  5284  001BB8  0E02               	movlw	high _dbuf
  5285  001BBA  6F15               	movwf	(pad@buf+1)& (0+255),b
  5286  001BBC  C16A  F116         	movff	efgtoa@w,pad@p
  5287  001BC0  C16B  F117         	movff	efgtoa@w+1,pad@p+1
  5288  001BC4  ECD6  F031         	call	_pad	;wreg free
  5289  001BC8  C112  F13F         	movff	?_pad,?_efgtoa
  5290  001BCC  C113  F140         	movff	?_pad+1,?_efgtoa+1
  5291  001BD0  0012               	return	
  5292  001BD2                     l7619:
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5296  001BD2  C177  F100         	movff	efgtoa@g,___fpclassifyf@x
  5297  001BD6  C178  F101         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5298  001BDA  C179  F102         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5299  001BDE  C17A  F103         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5300  001BE2  EC9E  F02D         	call	___fpclassifyf	;wreg free
  5301  001BE6  0101               	movlb	1	; () banked
  5302  001BE8  5100               	movf	?___fpclassifyf& (0+255),w,b
  5303  001BEA  1101               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  5304  001BEC  A4D8               	btfss	status,2,c
  5305  001BEE  D034               	goto	l7637
  5306                           
  5307                           ; BSR set to: 1
  5308  001BF0  0EBF               	movlw	191
  5309  001BF2  6F46               	movwf	??_efgtoa& (0+255),b
  5310  001BF4  0EFF               	movlw	255
  5311  001BF6  6F47               	movwf	(??_efgtoa+1)& (0+255),b
  5312  001BF8  5145               	movf	efgtoa@c& (0+255),w,b
  5313  001BFA  6F48               	movwf	(??_efgtoa+2)& (0+255),b
  5314  001BFC  6B49               	clrf	(??_efgtoa+3)& (0+255),b
  5315  001BFE  5146               	movf	??_efgtoa& (0+255),w,b
  5316  001C00  2748               	addwf	(??_efgtoa+2)& (0+255),f,b
  5317  001C02  5147               	movf	(??_efgtoa+1)& (0+255),w,b
  5318  001C04  2349               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5319  001C06  5149               	movf	(??_efgtoa+3)& (0+255),w,b
  5320  001C08  E106               	bnz	u10710
  5321  001C0A  0E1A               	movlw	26
  5322  001C0C  5D48               	subwf	(??_efgtoa+2)& (0+255),w,b
  5323  001C0E  B0D8               	btfsc	status,0,c
  5324  001C10  D002               	goto	u10710
  5325  001C12  0E01               	movlw	1
  5326  001C14  D001               	goto	u10720
  5327  001C16                     u10710:
  5328  001C16  0E00               	movlw	0
  5329  001C18                     u10720:
  5330  001C18  6F53               	movwf	_efgtoa$1543& (0+255),b
  5331  001C1A  6B54               	clrf	(_efgtoa$1543+1)& (0+255),b
  5332                           
  5333                           ; BSR set to: 1
  5334  001C1C  5153               	movf	_efgtoa$1543& (0+255),w,b
  5335  001C1E  1154               	iorwf	(_efgtoa$1543+1)& (0+255),w,b
  5336  001C20  B4D8               	btfsc	status,2,c
  5337  001C22  D00D               	goto	l7629
  5338                           
  5339                           ; BSR set to: 1
  5340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  5341  001C24  0E64               	movlw	low _dbuf
  5342  001C26  257D               	addwf	efgtoa@n& (0+255),w,b
  5343  001C28  6F00               	movwf	strcpy@dest& (0+255),b
  5344  001C2A  0E02               	movlw	high _dbuf
  5345  001C2C  217E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5346  001C2E  6F01               	movwf	(strcpy@dest+1)& (0+255),b
  5347  001C30  0EE6               	movlw	low STR_17
  5348  001C32  6F02               	movwf	strcpy@src& (0+255),b
  5349  001C34  0E10               	movlw	high STR_17
  5350  001C36  6F03               	movwf	(strcpy@src+1)& (0+255),b
  5351  001C38  EC5C  F036         	call	_strcpy	;wreg free
  5352                           
  5353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  5354  001C3C  D7B1               	goto	l7613
  5355  001C3E                     l7629:
  5356                           
  5357                           ; BSR set to: 1
  5358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  5359  001C3E  0E64               	movlw	low _dbuf
  5360  001C40  257D               	addwf	efgtoa@n& (0+255),w,b
  5361  001C42  6F00               	movwf	strcpy@dest& (0+255),b
  5362  001C44  0E02               	movlw	high _dbuf
  5363  001C46  217E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5364  001C48  6F01               	movwf	(strcpy@dest+1)& (0+255),b
  5365  001C4A  0EEE               	movlw	low STR_18
  5366  001C4C  6F02               	movwf	strcpy@src& (0+255),b
  5367  001C4E  0E10               	movlw	high STR_18
  5368  001C50  6F03               	movwf	(strcpy@src+1)& (0+255),b
  5369  001C52  EC5C  F036         	call	_strcpy	;wreg free
  5370  001C56  D7A4               	goto	l7613
  5371  001C58                     l7637:
  5372                           
  5373                           ; BSR set to: 1
  5374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  5375  001C58  0E00               	movlw	0
  5376  001C5A  6F7F               	movwf	efgtoa@u& (0+255),b
  5377  001C5C  0E00               	movlw	0
  5378  001C5E  6F80               	movwf	(efgtoa@u+1)& (0+255),b
  5379  001C60  0E80               	movlw	128
  5380  001C62  6F81               	movwf	(efgtoa@u+2)& (0+255),b
  5381  001C64  0E3F               	movlw	63
  5382  001C66  6F82               	movwf	(efgtoa@u+3)& (0+255),b
  5383                           
  5384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  5385  001C68  0E00               	movlw	0
  5386  001C6A  6F7C               	movwf	(efgtoa@e+1)& (0+255),b
  5387  001C6C  0E00               	movlw	0
  5388  001C6E  6F7B               	movwf	efgtoa@e& (0+255),b
  5389                           
  5390                           ; BSR set to: 1
  5391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  5392  001C70  C177  F100         	movff	efgtoa@g,___fleq@ff1
  5393  001C74  C178  F101         	movff	efgtoa@g+1,___fleq@ff1+1
  5394  001C78  C179  F102         	movff	efgtoa@g+2,___fleq@ff1+2
  5395  001C7C  C17A  F103         	movff	efgtoa@g+3,___fleq@ff1+3
  5396  001C80  0E00               	movlw	0
  5397  001C82  6F04               	movwf	___fleq@ff2& (0+255),b
  5398  001C84  0E00               	movlw	0
  5399  001C86  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
  5400  001C88  0E00               	movlw	0
  5401  001C8A  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
  5402  001C8C  0E00               	movlw	0
  5403  001C8E  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
  5404  001C90  EC9F  F033         	call	___fleq	;wreg free
  5405  001C94  0101               	movlb	1	; () banked
  5406  001C96  A0D8               	btfss	status,0,c
  5407  001C98  D01E               	goto	l7647
  5408  001C9A  D078               	goto	u10760
  5409  001C9C                     l7643:
  5410                           
  5411                           ; BSR set to: 1
  5412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  5413  001C9C  C17F  F11A         	movff	efgtoa@u,___flmul@b
  5414  001CA0  C180  F11B         	movff	efgtoa@u+1,___flmul@b+1
  5415  001CA4  C181  F11C         	movff	efgtoa@u+2,___flmul@b+2
  5416  001CA8  C182  F11D         	movff	efgtoa@u+3,___flmul@b+3
  5417  001CAC  0E00               	movlw	0
  5418  001CAE  6F1E               	movwf	___flmul@a& (0+255),b
  5419  001CB0  0E00               	movlw	0
  5420  001CB2  6F1F               	movwf	(___flmul@a+1)& (0+255),b
  5421  001CB4  0E20               	movlw	32
  5422  001CB6  6F20               	movwf	(___flmul@a+2)& (0+255),b
  5423  001CB8  0E41               	movlw	65
  5424  001CBA  6F21               	movwf	(___flmul@a+3)& (0+255),b
  5425  001CBC  EC86  F016         	call	___flmul	;wreg free
  5426  001CC0  C11A  F17F         	movff	?___flmul,efgtoa@u
  5427  001CC4  C11B  F180         	movff	?___flmul+1,efgtoa@u+1
  5428  001CC8  C11C  F181         	movff	?___flmul+2,efgtoa@u+2
  5429  001CCC  C11D  F182         	movff	?___flmul+3,efgtoa@u+3
  5430                           
  5431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  5432  001CD0  0101               	movlb	1	; () banked
  5433  001CD2  4B7B               	infsnz	efgtoa@e& (0+255),f,b
  5434  001CD4  2B7C               	incf	(efgtoa@e+1)& (0+255),f,b
  5435  001CD6                     l7647:
  5436                           
  5437                           ; BSR set to: 1
  5438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  5439  001CD6  C177  F133         	movff	efgtoa@g,___flge@ff1
  5440  001CDA  C178  F134         	movff	efgtoa@g+1,___flge@ff1+1
  5441  001CDE  C179  F135         	movff	efgtoa@g+2,___flge@ff1+2
  5442  001CE2  C17A  F136         	movff	efgtoa@g+3,___flge@ff1+3
  5443  001CE6  0E00               	movlw	0
  5444  001CE8  6F1E               	movwf	___flmul@a& (0+255),b
  5445  001CEA  0E00               	movlw	0
  5446  001CEC  6F1F               	movwf	(___flmul@a+1)& (0+255),b
  5447  001CEE  0E20               	movlw	32
  5448  001CF0  6F20               	movwf	(___flmul@a+2)& (0+255),b
  5449  001CF2  0E41               	movlw	65
  5450  001CF4  6F21               	movwf	(___flmul@a+3)& (0+255),b
  5451  001CF6  C17F  F11A         	movff	efgtoa@u,___flmul@b
  5452  001CFA  C180  F11B         	movff	efgtoa@u+1,___flmul@b+1
  5453  001CFE  C181  F11C         	movff	efgtoa@u+2,___flmul@b+2
  5454  001D02  C182  F11D         	movff	efgtoa@u+3,___flmul@b+3
  5455  001D06  EC86  F016         	call	___flmul	;wreg free
  5456  001D0A  C11A  F137         	movff	?___flmul,___flge@ff2
  5457  001D0E  C11B  F138         	movff	?___flmul+1,___flge@ff2+1
  5458  001D12  C11C  F139         	movff	?___flmul+2,___flge@ff2+2
  5459  001D16  C11D  F13A         	movff	?___flmul+3,___flge@ff2+3
  5460  001D1A  ECCD  F02C         	call	___flge	;wreg free
  5461  001D1E  0101               	movlb	1	; () banked
  5462  001D20  A0D8               	btfss	status,0,c
  5463  001D22  D01F               	goto	l7653
  5464  001D24  D7BB               	goto	l7643
  5465  001D26                     l7649:
  5466                           
  5467                           ; BSR set to: 1
  5468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  5469  001D26  C17F  F100         	movff	efgtoa@u,___fldiv@b
  5470  001D2A  C180  F101         	movff	efgtoa@u+1,___fldiv@b+1
  5471  001D2E  C181  F102         	movff	efgtoa@u+2,___fldiv@b+2
  5472  001D32  C182  F103         	movff	efgtoa@u+3,___fldiv@b+3
  5473  001D36  0E00               	movlw	0
  5474  001D38  6F04               	movwf	___fldiv@a& (0+255),b
  5475  001D3A  0E00               	movlw	0
  5476  001D3C  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  5477  001D3E  0E20               	movlw	32
  5478  001D40  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  5479  001D42  0E41               	movlw	65
  5480  001D44  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  5481  001D46  ECE6  F01C         	call	___fldiv	;wreg free
  5482  001D4A  C100  F17F         	movff	?___fldiv,efgtoa@u
  5483  001D4E  C101  F180         	movff	?___fldiv+1,efgtoa@u+1
  5484  001D52  C102  F181         	movff	?___fldiv+2,efgtoa@u+2
  5485  001D56  C103  F182         	movff	?___fldiv+3,efgtoa@u+3
  5486                           
  5487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  5488  001D5A  0101               	movlb	1	; () banked
  5489  001D5C  077B               	decf	efgtoa@e& (0+255),f,b
  5490  001D5E  A0D8               	btfss	status,0,c
  5491  001D60  077C               	decf	(efgtoa@e+1)& (0+255),f,b
  5492  001D62                     l7653:
  5493                           
  5494                           ; BSR set to: 1
  5495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  5496  001D62  C177  F133         	movff	efgtoa@g,___flge@ff1
  5497  001D66  C178  F134         	movff	efgtoa@g+1,___flge@ff1+1
  5498  001D6A  C179  F135         	movff	efgtoa@g+2,___flge@ff1+2
  5499  001D6E  C17A  F136         	movff	efgtoa@g+3,___flge@ff1+3
  5500  001D72  C17F  F137         	movff	efgtoa@u,___flge@ff2
  5501  001D76  C180  F138         	movff	efgtoa@u+1,___flge@ff2+1
  5502  001D7A  C181  F139         	movff	efgtoa@u+2,___flge@ff2+2
  5503  001D7E  C182  F13A         	movff	efgtoa@u+3,___flge@ff2+3
  5504  001D82  ECCD  F02C         	call	___flge	;wreg free
  5505  001D86  0101               	movlb	1	; () banked
  5506  001D88  A0D8               	btfss	status,0,c
  5507  001D8A  D7CD               	goto	l7649
  5508  001D8C                     u10760:
  5509                           
  5510                           ; BSR set to: 1
  5511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  5512  001D8C  C145  F106         	movff	efgtoa@c,tolower@c
  5513  001D90  6B07               	clrf	(tolower@c+1)& (0+255),b
  5514  001D92  EC05  F037         	call	_tolower	;wreg free
  5515  001D96  0101               	movlb	1	; () banked
  5516  001D98  5106               	movf	?_tolower& (0+255),w,b
  5517  001D9A  6F6C               	movwf	efgtoa@mode& (0+255),b
  5518                           
  5519                           ; BSR set to: 1
  5520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  5521  001D9C  C16C  F169         	movff	efgtoa@mode,efgtoa@nmode
  5522                           
  5523                           ; BSR set to: 1
  5524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  5525  001DA0  0E67               	movlw	103
  5526  001DA2  196C               	xorwf	efgtoa@mode& (0+255),w,b
  5527  001DA4  A4D8               	btfss	status,2,c
  5528  001DA6  D019               	goto	l7669
  5529                           
  5530                           ; BSR set to: 1
  5531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  5532  001DA8  51DF               	movf	_prec& (0+255),w,b
  5533  001DAA  11E0               	iorwf	(_prec+1)& (0+255),w,b
  5534  001DAC  A4D8               	btfss	status,2,c
  5535  001DAE  D004               	goto	l7665
  5536                           
  5537                           ; BSR set to: 1
  5538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  5539  001DB0  0E00               	movlw	0
  5540  001DB2  6FE0               	movwf	(_prec+1)& (0+255),b
  5541  001DB4  0E01               	movlw	1
  5542  001DB6  6FDF               	movwf	_prec& (0+255),b
  5543  001DB8                     l7665:
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  5547  001DB8  BFE0               	btfsc	(_prec+1)& (0+255),7,b
  5548  001DBA  D005               	goto	u10790
  5549  001DBC  51E0               	movf	(_prec+1)& (0+255),w,b
  5550  001DBE  E108               	bnz	l664
  5551  001DC0  05DF               	decf	_prec& (0+255),w,b
  5552  001DC2  B0D8               	btfsc	status,0,c
  5553  001DC4  D005               	goto	l664
  5554  001DC6                     u10790:
  5555                           
  5556                           ; BSR set to: 1
  5557  001DC6  0E00               	movlw	0
  5558  001DC8  6F68               	movwf	(efgtoa@p+1)& (0+255),b
  5559  001DCA  0E06               	movlw	6
  5560  001DCC  6F67               	movwf	efgtoa@p& (0+255),b
  5561  001DCE  D008               	goto	l7675
  5562  001DD0                     l664:
  5563                           
  5564                           ; BSR set to: 1
  5565  001DD0  C1DF  F167         	movff	_prec,efgtoa@p
  5566  001DD4  C1E0  F168         	movff	_prec+1,efgtoa@p+1
  5567  001DD8  D003               	goto	l7675
  5568  001DDA                     l7669:
  5569                           
  5570                           ; BSR set to: 1
  5571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  5572  001DDA  AFE0               	btfss	(_prec+1)& (0+255),7,b
  5573  001DDC  D7F9               	goto	l664
  5574  001DDE  D7F3               	goto	u10790
  5575  001DE0                     l7675:
  5576                           
  5577                           ; BSR set to: 1
  5578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  5579  001DE0  0E67               	movlw	103
  5580  001DE2  196C               	xorwf	efgtoa@mode& (0+255),w,b
  5581  001DE4  A4D8               	btfss	status,2,c
  5582  001DE6  D022               	goto	l7685
  5583                           
  5584                           ; BSR set to: 1
  5585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  5586  001DE8  AF7C               	btfss	(efgtoa@e+1)& (0+255),7,b
  5587  001DEA  D006               	goto	u10820
  5588  001DEC  0EFC               	movlw	252
  5589  001DEE  5D7B               	subwf	efgtoa@e& (0+255),w,b
  5590  001DF0  0EFF               	movlw	255
  5591  001DF2  597C               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5592  001DF4  A0D8               	btfss	status,0,c
  5593  001DF6  D018               	goto	l7683
  5594  001DF8                     u10820:
  5595                           
  5596                           ; BSR set to: 1
  5597  001DF8  0EFF               	movlw	255
  5598  001DFA  6F46               	movwf	??_efgtoa& (0+255),b
  5599  001DFC  0EFF               	movlw	255
  5600  001DFE  6F47               	movwf	(??_efgtoa+1)& (0+255),b
  5601  001E00  C167  F148         	movff	efgtoa@p,??_efgtoa+2
  5602  001E04  C168  F149         	movff	efgtoa@p+1,??_efgtoa+3
  5603  001E08  5146               	movf	??_efgtoa& (0+255),w,b
  5604  001E0A  2748               	addwf	(??_efgtoa+2)& (0+255),f,b
  5605  001E0C  5147               	movf	(??_efgtoa+1)& (0+255),w,b
  5606  001E0E  2349               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5607  001E10  517B               	movf	efgtoa@e& (0+255),w,b
  5608  001E12  5D48               	subwf	(??_efgtoa+2)& (0+255),w,b
  5609  001E14  5149               	movf	(??_efgtoa+3)& (0+255),w,b
  5610  001E16  0A80               	xorlw	128
  5611  001E18  6F4A               	movwf	(??_efgtoa+4)& (0+255),b
  5612  001E1A  517C               	movf	(efgtoa@e+1)& (0+255),w,b
  5613  001E1C  0A80               	xorlw	128
  5614  001E1E  594A               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5615  001E20  A0D8               	btfss	status,0,c
  5616  001E22  D002               	goto	l7683
  5617                           
  5618                           ; BSR set to: 1
  5619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  5620  001E24  0E66               	movlw	102
  5621  001E26  D001               	goto	L3
  5622  001E28                     l7683:
  5623                           
  5624                           ; BSR set to: 1
  5625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  5626  001E28  0E65               	movlw	101
  5627  001E2A                     L3:
  5628  001E2A  6F69               	movwf	efgtoa@nmode& (0+255),b
  5629  001E2C                     l7685:
  5630                           
  5631                           ; BSR set to: 1
  5632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  5633  001E2C  C167  F15F         	movff	efgtoa@p,efgtoa@m
  5634  001E30  C168  F160         	movff	efgtoa@p+1,efgtoa@m+1
  5635                           
  5636                           ; BSR set to: 1
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  5638  001E34  0E67               	movlw	103
  5639  001E36  196C               	xorwf	efgtoa@mode& (0+255),w,b
  5640  001E38  A4D8               	btfss	status,2,c
  5641  001E3A  D005               	goto	u10860
  5642                           
  5643                           ; BSR set to: 1
  5644  001E3C  0E66               	movlw	102
  5645  001E3E  1969               	xorwf	efgtoa@nmode& (0+255),w,b
  5646  001E40  B4D8               	btfsc	status,2,c
  5647                           
  5648                           ; BSR set to: 1
  5649  001E42  AF7C               	btfss	(efgtoa@e+1)& (0+255),7,b
  5650  001E44  D002               	goto	l7695
  5651  001E46                     u10860:
  5652                           
  5653                           ; BSR set to: 1
  5654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  5655  001E46  4B5F               	infsnz	efgtoa@m& (0+255),f,b
  5656  001E48  2B60               	incf	(efgtoa@m+1)& (0+255),f,b
  5657  001E4A                     l7695:
  5658                           
  5659                           ; BSR set to: 1
  5660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  5661  001E4A  0E66               	movlw	102
  5662  001E4C  1969               	xorwf	efgtoa@nmode& (0+255),w,b
  5663  001E4E  A4D8               	btfss	status,2,c
  5664  001E50  D016               	goto	l7705
  5665                           
  5666                           ; BSR set to: 1
  5667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  5668  001E52  AF7C               	btfss	(efgtoa@e+1)& (0+255),7,b
  5669  001E54  D00C               	goto	l7701
  5670                           
  5671                           ; BSR set to: 1
  5672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  5673  001E56  0E00               	movlw	0
  5674  001E58  6F7F               	movwf	efgtoa@u& (0+255),b
  5675  001E5A  0E00               	movlw	0
  5676  001E5C  6F80               	movwf	(efgtoa@u+1)& (0+255),b
  5677  001E5E  0E80               	movlw	128
  5678  001E60  6F81               	movwf	(efgtoa@u+2)& (0+255),b
  5679  001E62  0E3F               	movlw	63
  5680  001E64  6F82               	movwf	(efgtoa@u+3)& (0+255),b
  5681                           
  5682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  5683  001E66  0E00               	movlw	0
  5684  001E68  6F7C               	movwf	(efgtoa@e+1)& (0+255),b
  5685  001E6A  0E00               	movlw	0
  5686  001E6C  6F7B               	movwf	efgtoa@e& (0+255),b
  5687  001E6E                     l7701:
  5688                           
  5689                           ; BSR set to: 1
  5690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  5691  001E6E  0E67               	movlw	103
  5692  001E70  196C               	xorwf	efgtoa@mode& (0+255),w,b
  5693  001E72  B4D8               	btfsc	status,2,c
  5694  001E74  D004               	goto	l7705
  5695                           
  5696                           ; BSR set to: 1
  5697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  5698  001E76  517B               	movf	efgtoa@e& (0+255),w,b
  5699  001E78  275F               	addwf	efgtoa@m& (0+255),f,b
  5700  001E7A  517C               	movf	(efgtoa@e+1)& (0+255),w,b
  5701  001E7C  2360               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5702  001E7E                     l7705:
  5703                           
  5704                           ; BSR set to: 1
  5705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  5706  001E7E  0E00               	movlw	0
  5707  001E80  6F76               	movwf	(efgtoa@i+1)& (0+255),b
  5708  001E82  0E00               	movlw	0
  5709  001E84  6F75               	movwf	efgtoa@i& (0+255),b
  5710                           
  5711                           ; BSR set to: 1
  5712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  5713  001E86  C177  F16D         	movff	efgtoa@g,efgtoa@h
  5714  001E8A  C178  F16E         	movff	efgtoa@g+1,efgtoa@h+1
  5715  001E8E  C179  F16F         	movff	efgtoa@g+2,efgtoa@h+2
  5716  001E92  C17A  F170         	movff	efgtoa@g+3,efgtoa@h+3
  5717                           
  5718                           ; BSR set to: 1
  5719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  5720  001E96  C17F  F14B         	movff	efgtoa@u,efgtoa@ou
  5721  001E9A  C180  F14C         	movff	efgtoa@u+1,efgtoa@ou+1
  5722  001E9E  C181  F14D         	movff	efgtoa@u+2,efgtoa@ou+2
  5723  001EA2  C182  F14E         	movff	efgtoa@u+3,efgtoa@ou+3
  5724                           
  5725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5726  001EA6  D07C               	goto	l7719
  5727  001EA8                     l7711:
  5728                           
  5729                           ; BSR set to: 1
  5730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  5731  001EA8  C16D  F100         	movff	efgtoa@h,___fldiv@b
  5732  001EAC  C16E  F101         	movff	efgtoa@h+1,___fldiv@b+1
  5733  001EB0  C16F  F102         	movff	efgtoa@h+2,___fldiv@b+2
  5734  001EB4  C170  F103         	movff	efgtoa@h+3,___fldiv@b+3
  5735  001EB8  C17F  F104         	movff	efgtoa@u,___fldiv@a
  5736  001EBC  C180  F105         	movff	efgtoa@u+1,___fldiv@a+1
  5737  001EC0  C181  F106         	movff	efgtoa@u+2,___fldiv@a+2
  5738  001EC4  C182  F107         	movff	efgtoa@u+3,___fldiv@a+3
  5739  001EC8  ECE6  F01C         	call	___fldiv	;wreg free
  5740  001ECC  C100  F119         	movff	?___fldiv,floorf@x
  5741  001ED0  C101  F11A         	movff	?___fldiv+1,floorf@x+1
  5742  001ED4  C102  F11B         	movff	?___fldiv+2,floorf@x+2
  5743  001ED8  C103  F11C         	movff	?___fldiv+3,floorf@x+3
  5744  001EDC  ECB7  F021         	call	_floorf	;wreg free
  5745  001EE0  C119  F171         	movff	?_floorf,efgtoa@l
  5746  001EE4  C11A  F172         	movff	?_floorf+1,efgtoa@l+1
  5747  001EE8  C11B  F173         	movff	?_floorf+2,efgtoa@l+2
  5748  001EEC  C11C  F174         	movff	?_floorf+3,efgtoa@l+3
  5749                           
  5750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  5751  001EF0  C171  F100         	movff	efgtoa@l,___fltol@f1
  5752  001EF4  C172  F101         	movff	efgtoa@l+1,___fltol@f1+1
  5753  001EF8  C173  F102         	movff	efgtoa@l+2,___fltol@f1+2
  5754  001EFC  C174  F103         	movff	efgtoa@l+3,___fltol@f1+3
  5755  001F00  EC6B  F02E         	call	___fltol	;wreg free
  5756  001F04  C100  F163         	movff	?___fltol,efgtoa@d
  5757  001F08  C101  F164         	movff	?___fltol+1,efgtoa@d+1
  5758                           
  5759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  5760  001F0C  C16D  F133         	movff	efgtoa@h,___flsub@b
  5761  001F10  C16E  F134         	movff	efgtoa@h+1,___flsub@b+1
  5762  001F14  C16F  F135         	movff	efgtoa@h+2,___flsub@b+2
  5763  001F18  C170  F136         	movff	efgtoa@h+3,___flsub@b+3
  5764  001F1C  C17F  F11E         	movff	efgtoa@u,___flmul@a
  5765  001F20  C180  F11F         	movff	efgtoa@u+1,___flmul@a+1
  5766  001F24  C181  F120         	movff	efgtoa@u+2,___flmul@a+2
  5767  001F28  C182  F121         	movff	efgtoa@u+3,___flmul@a+3
  5768  001F2C  C171  F11A         	movff	efgtoa@l,___flmul@b
  5769  001F30  C172  F11B         	movff	efgtoa@l+1,___flmul@b+1
  5770  001F34  C173  F11C         	movff	efgtoa@l+2,___flmul@b+2
  5771  001F38  C174  F11D         	movff	efgtoa@l+3,___flmul@b+3
  5772  001F3C  EC86  F016         	call	___flmul	;wreg free
  5773  001F40  C11A  F137         	movff	?___flmul,___flsub@a
  5774  001F44  C11B  F138         	movff	?___flmul+1,___flsub@a+1
  5775  001F48  C11C  F139         	movff	?___flmul+2,___flsub@a+2
  5776  001F4C  C11D  F13A         	movff	?___flmul+3,___flsub@a+3
  5777  001F50  EC52  F037         	call	___flsub	;wreg free
  5778  001F54  C133  F16D         	movff	?___flsub,efgtoa@h
  5779  001F58  C134  F16E         	movff	?___flsub+1,efgtoa@h+1
  5780  001F5C  C135  F16F         	movff	?___flsub+2,efgtoa@h+2
  5781  001F60  C136  F170         	movff	?___flsub+3,efgtoa@h+3
  5782                           
  5783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  5784  001F64  C17F  F100         	movff	efgtoa@u,___fldiv@b
  5785  001F68  C180  F101         	movff	efgtoa@u+1,___fldiv@b+1
  5786  001F6C  C181  F102         	movff	efgtoa@u+2,___fldiv@b+2
  5787  001F70  C182  F103         	movff	efgtoa@u+3,___fldiv@b+3
  5788  001F74  0E00               	movlw	0
  5789  001F76  0101               	movlb	1	; () banked
  5790  001F78  6F04               	movwf	___fldiv@a& (0+255),b
  5791  001F7A  0E00               	movlw	0
  5792  001F7C  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  5793  001F7E  0E20               	movlw	32
  5794  001F80  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  5795  001F82  0E41               	movlw	65
  5796  001F84  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  5797  001F86  ECE6  F01C         	call	___fldiv	;wreg free
  5798  001F8A  C100  F17F         	movff	?___fldiv,efgtoa@u
  5799  001F8E  C101  F180         	movff	?___fldiv+1,efgtoa@u+1
  5800  001F92  C102  F181         	movff	?___fldiv+2,efgtoa@u+2
  5801  001F96  C103  F182         	movff	?___fldiv+3,efgtoa@u+3
  5802                           
  5803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  5804  001F9A  0101               	movlb	1	; () banked
  5805  001F9C  4B75               	infsnz	efgtoa@i& (0+255),f,b
  5806  001F9E  2B76               	incf	(efgtoa@i+1)& (0+255),f,b
  5807  001FA0                     l7719:
  5808                           
  5809                           ; BSR set to: 1
  5810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5811  001FA0  515F               	movf	efgtoa@m& (0+255),w,b
  5812  001FA2  5D75               	subwf	efgtoa@i& (0+255),w,b
  5813  001FA4  5176               	movf	(efgtoa@i+1)& (0+255),w,b
  5814  001FA6  0A80               	xorlw	128
  5815  001FA8  6F46               	movwf	??_efgtoa& (0+255),b
  5816  001FAA  5160               	movf	(efgtoa@m+1)& (0+255),w,b
  5817  001FAC  0A80               	xorlw	128
  5818  001FAE  5946               	subwfb	??_efgtoa& (0+255),w,b
  5819  001FB0  A0D8               	btfss	status,0,c
  5820  001FB2  D77A               	goto	l7711
  5821                           
  5822                           ; BSR set to: 1
  5823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  5824  001FB4  C17F  F11A         	movff	efgtoa@u,___flmul@b
  5825  001FB8  C180  F11B         	movff	efgtoa@u+1,___flmul@b+1
  5826  001FBC  C181  F11C         	movff	efgtoa@u+2,___flmul@b+2
  5827  001FC0  C182  F11D         	movff	efgtoa@u+3,___flmul@b+3
  5828  001FC4  0E00               	movlw	0
  5829  001FC6  6F1E               	movwf	___flmul@a& (0+255),b
  5830  001FC8  0E00               	movlw	0
  5831  001FCA  6F1F               	movwf	(___flmul@a+1)& (0+255),b
  5832  001FCC  0EA0               	movlw	160
  5833  001FCE  6F20               	movwf	(___flmul@a+2)& (0+255),b
  5834  001FD0  0E40               	movlw	64
  5835  001FD2  6F21               	movwf	(___flmul@a+3)& (0+255),b
  5836  001FD4  EC86  F016         	call	___flmul	;wreg free
  5837  001FD8  C11A  F171         	movff	?___flmul,efgtoa@l
  5838  001FDC  C11B  F172         	movff	?___flmul+1,efgtoa@l+1
  5839  001FE0  C11C  F173         	movff	?___flmul+2,efgtoa@l+2
  5840  001FE4  C11D  F174         	movff	?___flmul+3,efgtoa@l+3
  5841                           
  5842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  5843  001FE8  C16D  F133         	movff	efgtoa@h,___flge@ff1
  5844  001FEC  C16E  F134         	movff	efgtoa@h+1,___flge@ff1+1
  5845  001FF0  C16F  F135         	movff	efgtoa@h+2,___flge@ff1+2
  5846  001FF4  C170  F136         	movff	efgtoa@h+3,___flge@ff1+3
  5847  001FF8  C171  F137         	movff	efgtoa@l,___flge@ff2
  5848  001FFC  C172  F138         	movff	efgtoa@l+1,___flge@ff2+1
  5849  002000  C173  F139         	movff	efgtoa@l+2,___flge@ff2+2
  5850  002004  C174  F13A         	movff	efgtoa@l+3,___flge@ff2+3
  5851  002008  ECCD  F02C         	call	___flge	;wreg free
  5852  00200C  0101               	movlb	1	; () banked
  5853  00200E  A0D8               	btfss	status,0,c
  5854  002010  D016               	goto	u10930
  5855                           
  5856                           ; BSR set to: 1
  5857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  5858                           
  5859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  5860                           
  5861                           ; BSR set to: 1
  5862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  5863  002012  C16D  F100         	movff	efgtoa@h,___fleq@ff1
  5864  002016  C16E  F101         	movff	efgtoa@h+1,___fleq@ff1+1
  5865  00201A  C16F  F102         	movff	efgtoa@h+2,___fleq@ff1+2
  5866  00201E  C170  F103         	movff	efgtoa@h+3,___fleq@ff1+3
  5867  002022  C171  F104         	movff	efgtoa@l,___fleq@ff2
  5868  002026  C172  F105         	movff	efgtoa@l+1,___fleq@ff2+1
  5869  00202A  C173  F106         	movff	efgtoa@l+2,___fleq@ff2+2
  5870  00202E  C174  F107         	movff	efgtoa@l+3,___fleq@ff2+3
  5871  002032  EC9F  F033         	call	___fleq	;wreg free
  5872  002036  0101               	movlb	1	; () banked
  5873  002038  B0D8               	btfsc	status,0,c
  5874                           
  5875                           ; BSR set to: 1
  5876  00203A  B163               	btfsc	efgtoa@d& (0+255),0,b
  5877  00203C  D008               	goto	l7733
  5878  00203E                     u10930:
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  5882  00203E  0E00               	movlw	0
  5883  002040  6F71               	movwf	efgtoa@l& (0+255),b
  5884  002042  0E00               	movlw	0
  5885  002044  6F72               	movwf	(efgtoa@l+1)& (0+255),b
  5886  002046  0E00               	movlw	0
  5887  002048  6F73               	movwf	(efgtoa@l+2)& (0+255),b
  5888  00204A  0E00               	movlw	0
  5889  00204C  6F74               	movwf	(efgtoa@l+3)& (0+255),b
  5890  00204E                     l7733:
  5891                           
  5892                           ; BSR set to: 1
  5893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  5894  00204E  C177  F100         	movff	efgtoa@g,___fladd@b
  5895  002052  C178  F101         	movff	efgtoa@g+1,___fladd@b+1
  5896  002056  C179  F102         	movff	efgtoa@g+2,___fladd@b+2
  5897  00205A  C17A  F103         	movff	efgtoa@g+3,___fladd@b+3
  5898  00205E  C171  F104         	movff	efgtoa@l,___fladd@a
  5899  002062  C172  F105         	movff	efgtoa@l+1,___fladd@a+1
  5900  002066  C173  F106         	movff	efgtoa@l+2,___fladd@a+2
  5901  00206A  C174  F107         	movff	efgtoa@l+3,___fladd@a+3
  5902  00206E  ECD9  F019         	call	___fladd	;wreg free
  5903  002072  C100  F16D         	movff	?___fladd,efgtoa@h
  5904  002076  C101  F16E         	movff	?___fladd+1,efgtoa@h+1
  5905  00207A  C102  F16F         	movff	?___fladd+2,efgtoa@h+2
  5906  00207E  C103  F170         	movff	?___fladd+3,efgtoa@h+3
  5907                           
  5908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  5909  002082  C14B  F17F         	movff	efgtoa@ou,efgtoa@u
  5910  002086  C14C  F180         	movff	efgtoa@ou+1,efgtoa@u+1
  5911  00208A  C14D  F181         	movff	efgtoa@ou+2,efgtoa@u+2
  5912  00208E  C14E  F182         	movff	efgtoa@ou+3,efgtoa@u+3
  5913                           
  5914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  5915  002092  0E65               	movlw	101
  5916  002094  0101               	movlb	1	; () banked
  5917  002096  1969               	xorwf	efgtoa@nmode& (0+255),w,b
  5918  002098  B4D8               	btfsc	status,2,c
  5919  00209A  D005               	goto	l7741
  5920                           
  5921                           ; BSR set to: 1
  5922  00209C  C17B  F161         	movff	efgtoa@e,efgtoa@ne
  5923  0020A0  C17C  F162         	movff	efgtoa@e+1,efgtoa@ne+1
  5924  0020A4  D004               	goto	l690
  5925  0020A6                     l7741:
  5926                           
  5927                           ; BSR set to: 1
  5928  0020A6  0E00               	movlw	0
  5929  0020A8  6F62               	movwf	(efgtoa@ne+1)& (0+255),b
  5930  0020AA  0E00               	movlw	0
  5931  0020AC  6F61               	movwf	efgtoa@ne& (0+255),b
  5932  0020AE                     l690:
  5933                           
  5934                           ; BSR set to: 1
  5935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  5936  0020AE  0E00               	movlw	0
  5937  0020B0  6F5E               	movwf	(efgtoa@pp+1)& (0+255),b
  5938  0020B2  0E00               	movlw	0
  5939  0020B4  6F5D               	movwf	efgtoa@pp& (0+255),b
  5940                           
  5941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  5942  0020B6  0E00               	movlw	0
  5943  0020B8  6F5C               	movwf	(efgtoa@t+1)& (0+255),b
  5944  0020BA  0E00               	movlw	0
  5945  0020BC  6F5B               	movwf	efgtoa@t& (0+255),b
  5946                           
  5947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  5948  0020BE  0E00               	movlw	0
  5949  0020C0  6F76               	movwf	(efgtoa@i+1)& (0+255),b
  5950  0020C2  0E00               	movlw	0
  5951  0020C4  6F75               	movwf	efgtoa@i& (0+255),b
  5952                           
  5953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5954  0020C6  D0C7               	goto	l7791
  5955  0020C8                     l7743:
  5956                           
  5957                           ; BSR set to: 1
  5958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  5959  0020C8  C16D  F100         	movff	efgtoa@h,___fldiv@b
  5960  0020CC  C16E  F101         	movff	efgtoa@h+1,___fldiv@b+1
  5961  0020D0  C16F  F102         	movff	efgtoa@h+2,___fldiv@b+2
  5962  0020D4  C170  F103         	movff	efgtoa@h+3,___fldiv@b+3
  5963  0020D8  C17F  F104         	movff	efgtoa@u,___fldiv@a
  5964  0020DC  C180  F105         	movff	efgtoa@u+1,___fldiv@a+1
  5965  0020E0  C181  F106         	movff	efgtoa@u+2,___fldiv@a+2
  5966  0020E4  C182  F107         	movff	efgtoa@u+3,___fldiv@a+3
  5967  0020E8  ECE6  F01C         	call	___fldiv	;wreg free
  5968  0020EC  C100  F119         	movff	?___fldiv,floorf@x
  5969  0020F0  C101  F11A         	movff	?___fldiv+1,floorf@x+1
  5970  0020F4  C102  F11B         	movff	?___fldiv+2,floorf@x+2
  5971  0020F8  C103  F11C         	movff	?___fldiv+3,floorf@x+3
  5972  0020FC  ECB7  F021         	call	_floorf	;wreg free
  5973  002100  C119  F171         	movff	?_floorf,efgtoa@l
  5974  002104  C11A  F172         	movff	?_floorf+1,efgtoa@l+1
  5975  002108  C11B  F173         	movff	?_floorf+2,efgtoa@l+2
  5976  00210C  C11C  F174         	movff	?_floorf+3,efgtoa@l+3
  5977                           
  5978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  5979  002110  C171  F100         	movff	efgtoa@l,___fltol@f1
  5980  002114  C172  F101         	movff	efgtoa@l+1,___fltol@f1+1
  5981  002118  C173  F102         	movff	efgtoa@l+2,___fltol@f1+2
  5982  00211C  C174  F103         	movff	efgtoa@l+3,___fltol@f1+3
  5983  002120  EC6B  F02E         	call	___fltol	;wreg free
  5984  002124  C100  F163         	movff	?___fltol,efgtoa@d
  5985  002128  C101  F164         	movff	?___fltol+1,efgtoa@d+1
  5986                           
  5987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5988  00212C  0101               	movlb	1	; () banked
  5989  00212E  B9E1               	btfsc	_flags& (0+255),4,b
  5990  002130  D00C               	goto	l7755
  5991                           
  5992                           ; BSR set to: 1
  5993  002132  5163               	movf	efgtoa@d& (0+255),w,b
  5994  002134  1164               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5995  002136  A4D8               	btfss	status,2,c
  5996  002138  D008               	goto	l7755
  5997                           
  5998                           ; BSR set to: 1
  5999  00213A  0E67               	movlw	103
  6000  00213C  196C               	xorwf	efgtoa@mode& (0+255),w,b
  6001  00213E  B4D8               	btfsc	status,2,c
  6002                           
  6003                           ; BSR set to: 1
  6004  002140  AF62               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6005  002142  D003               	goto	l7755
  6006                           
  6007                           ; BSR set to: 1
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  6009  002144  4B5B               	infsnz	efgtoa@t& (0+255),f,b
  6010  002146  2B5C               	incf	(efgtoa@t+1)& (0+255),f,b
  6011                           
  6012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  6013  002148  D039               	goto	l7783
  6014  00214A                     l7755:
  6015                           
  6016                           ; BSR set to: 1
  6017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  6018  00214A  515D               	movf	efgtoa@pp& (0+255),w,b
  6019  00214C  115E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6020  00214E  B4D8               	btfsc	status,2,c
  6021                           
  6022                           ; BSR set to: 1
  6023  002150  AF62               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6024  002152  D022               	goto	l7775
  6025                           
  6026                           ; BSR set to: 1
  6027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  6028  002154  0E64               	movlw	low _dbuf
  6029  002156  257D               	addwf	efgtoa@n& (0+255),w,b
  6030  002158  6ED9               	movwf	fsr2l,c
  6031  00215A  0E02               	movlw	high _dbuf
  6032  00215C  217E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6033  00215E  6EDA               	movwf	fsr2h,c
  6034  002160  0E2E               	movlw	46
  6035  002162  6EDF               	movwf	indf2,c
  6036                           
  6037                           ; BSR set to: 1
  6038  002164  4B7D               	infsnz	efgtoa@n& (0+255),f,b
  6039  002166  2B7E               	incf	(efgtoa@n+1)& (0+255),f,b
  6040                           
  6041                           ; BSR set to: 1
  6042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  6043  002168  076A               	decf	efgtoa@w& (0+255),f,b
  6044  00216A  A0D8               	btfss	status,0,c
  6045  00216C  076B               	decf	(efgtoa@w+1)& (0+255),f,b
  6046                           
  6047                           ; BSR set to: 1
  6048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  6049  00216E  0E00               	movlw	0
  6050  002170  6F5E               	movwf	(efgtoa@pp+1)& (0+255),b
  6051  002172  0E01               	movlw	1
  6052  002174  6F5D               	movwf	efgtoa@pp& (0+255),b
  6053  002176  D010               	goto	l7775
  6054  002178                     l7767:
  6055                           
  6056                           ; BSR set to: 1
  6057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  6058  002178  0E64               	movlw	low _dbuf
  6059  00217A  257D               	addwf	efgtoa@n& (0+255),w,b
  6060  00217C  6ED9               	movwf	fsr2l,c
  6061  00217E  0E02               	movlw	high _dbuf
  6062  002180  217E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6063  002182  6EDA               	movwf	fsr2h,c
  6064  002184  0E30               	movlw	48
  6065  002186  6EDF               	movwf	indf2,c
  6066                           
  6067                           ; BSR set to: 1
  6068  002188  4B7D               	infsnz	efgtoa@n& (0+255),f,b
  6069  00218A  2B7E               	incf	(efgtoa@n+1)& (0+255),f,b
  6070                           
  6071                           ; BSR set to: 1
  6072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  6073  00218C  076A               	decf	efgtoa@w& (0+255),f,b
  6074  00218E  A0D8               	btfss	status,0,c
  6075  002190  076B               	decf	(efgtoa@w+1)& (0+255),f,b
  6076                           
  6077                           ; BSR set to: 1
  6078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  6079  002192  075B               	decf	efgtoa@t& (0+255),f,b
  6080  002194  A0D8               	btfss	status,0,c
  6081  002196  075C               	decf	(efgtoa@t+1)& (0+255),f,b
  6082  002198                     l7775:
  6083                           
  6084                           ; BSR set to: 1
  6085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  6086  002198  515B               	movf	efgtoa@t& (0+255),w,b
  6087  00219A  115C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6088  00219C  A4D8               	btfss	status,2,c
  6089  00219E  D7EC               	goto	l7767
  6090                           
  6091                           ; BSR set to: 1
  6092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  6093  0021A0  0E64               	movlw	low _dbuf
  6094  0021A2  257D               	addwf	efgtoa@n& (0+255),w,b
  6095  0021A4  6ED9               	movwf	fsr2l,c
  6096  0021A6  0E02               	movlw	high _dbuf
  6097  0021A8  217E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6098  0021AA  6EDA               	movwf	fsr2h,c
  6099  0021AC  5163               	movf	efgtoa@d& (0+255),w,b
  6100  0021AE  0F30               	addlw	48
  6101  0021B0  6EDF               	movwf	indf2,c
  6102                           
  6103                           ; BSR set to: 1
  6104  0021B2  4B7D               	infsnz	efgtoa@n& (0+255),f,b
  6105  0021B4  2B7E               	incf	(efgtoa@n+1)& (0+255),f,b
  6106                           
  6107                           ; BSR set to: 1
  6108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  6109  0021B6  076A               	decf	efgtoa@w& (0+255),f,b
  6110  0021B8  A0D8               	btfss	status,0,c
  6111  0021BA  076B               	decf	(efgtoa@w+1)& (0+255),f,b
  6112  0021BC                     l7783:
  6113                           
  6114                           ; BSR set to: 1
  6115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  6116  0021BC  C16D  F133         	movff	efgtoa@h,___flsub@b
  6117  0021C0  C16E  F134         	movff	efgtoa@h+1,___flsub@b+1
  6118  0021C4  C16F  F135         	movff	efgtoa@h+2,___flsub@b+2
  6119  0021C8  C170  F136         	movff	efgtoa@h+3,___flsub@b+3
  6120  0021CC  C17F  F11E         	movff	efgtoa@u,___flmul@a
  6121  0021D0  C180  F11F         	movff	efgtoa@u+1,___flmul@a+1
  6122  0021D4  C181  F120         	movff	efgtoa@u+2,___flmul@a+2
  6123  0021D8  C182  F121         	movff	efgtoa@u+3,___flmul@a+3
  6124  0021DC  C171  F11A         	movff	efgtoa@l,___flmul@b
  6125  0021E0  C172  F11B         	movff	efgtoa@l+1,___flmul@b+1
  6126  0021E4  C173  F11C         	movff	efgtoa@l+2,___flmul@b+2
  6127  0021E8  C174  F11D         	movff	efgtoa@l+3,___flmul@b+3
  6128  0021EC  EC86  F016         	call	___flmul	;wreg free
  6129  0021F0  C11A  F137         	movff	?___flmul,___flsub@a
  6130  0021F4  C11B  F138         	movff	?___flmul+1,___flsub@a+1
  6131  0021F8  C11C  F139         	movff	?___flmul+2,___flsub@a+2
  6132  0021FC  C11D  F13A         	movff	?___flmul+3,___flsub@a+3
  6133  002200  EC52  F037         	call	___flsub	;wreg free
  6134  002204  C133  F16D         	movff	?___flsub,efgtoa@h
  6135  002208  C134  F16E         	movff	?___flsub+1,efgtoa@h+1
  6136  00220C  C135  F16F         	movff	?___flsub+2,efgtoa@h+2
  6137  002210  C136  F170         	movff	?___flsub+3,efgtoa@h+3
  6138                           
  6139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  6140  002214  C17F  F100         	movff	efgtoa@u,___fldiv@b
  6141  002218  C180  F101         	movff	efgtoa@u+1,___fldiv@b+1
  6142  00221C  C181  F102         	movff	efgtoa@u+2,___fldiv@b+2
  6143  002220  C182  F103         	movff	efgtoa@u+3,___fldiv@b+3
  6144  002224  0E00               	movlw	0
  6145  002226  0101               	movlb	1	; () banked
  6146  002228  6F04               	movwf	___fldiv@a& (0+255),b
  6147  00222A  0E00               	movlw	0
  6148  00222C  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  6149  00222E  0E20               	movlw	32
  6150  002230  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  6151  002232  0E41               	movlw	65
  6152  002234  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  6153  002236  ECE6  F01C         	call	___fldiv	;wreg free
  6154  00223A  C100  F17F         	movff	?___fldiv,efgtoa@u
  6155  00223E  C101  F180         	movff	?___fldiv+1,efgtoa@u+1
  6156  002242  C102  F181         	movff	?___fldiv+2,efgtoa@u+2
  6157  002246  C103  F182         	movff	?___fldiv+3,efgtoa@u+3
  6158                           
  6159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  6160  00224A  0101               	movlb	1	; () banked
  6161  00224C  0761               	decf	efgtoa@ne& (0+255),f,b
  6162  00224E  A0D8               	btfss	status,0,c
  6163  002250  0762               	decf	(efgtoa@ne+1)& (0+255),f,b
  6164                           
  6165                           ; BSR set to: 1
  6166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  6167  002252  4B75               	infsnz	efgtoa@i& (0+255),f,b
  6168  002254  2B76               	incf	(efgtoa@i+1)& (0+255),f,b
  6169  002256                     l7791:
  6170                           
  6171                           ; BSR set to: 1
  6172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  6173  002256  515F               	movf	efgtoa@m& (0+255),w,b
  6174  002258  5D75               	subwf	efgtoa@i& (0+255),w,b
  6175  00225A  5176               	movf	(efgtoa@i+1)& (0+255),w,b
  6176  00225C  0A80               	xorlw	128
  6177  00225E  6F46               	movwf	??_efgtoa& (0+255),b
  6178  002260  5160               	movf	(efgtoa@m+1)& (0+255),w,b
  6179  002262  0A80               	xorlw	128
  6180  002264  5946               	subwfb	??_efgtoa& (0+255),w,b
  6181  002266  B0D8               	btfsc	status,0,c
  6182  002268  D008               	goto	u11030
  6183                           
  6184                           ; BSR set to: 1
  6185  00226A  BF7E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6186  00226C  D72D               	goto	l7743
  6187  00226E  517E               	movf	(efgtoa@n+1)& (0+255),w,b
  6188  002270  E104               	bnz	u11030
  6189  002272  0E4B               	movlw	75
  6190  002274  5D7D               	subwf	efgtoa@n& (0+255),w,b
  6191  002276  A0D8               	btfss	status,0,c
  6192  002278  D727               	goto	l7743
  6193  00227A                     u11030:
  6194                           
  6195                           ; BSR set to: 1
  6196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  6197  00227A  515D               	movf	efgtoa@pp& (0+255),w,b
  6198  00227C  115E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6199  00227E  B4D8               	btfsc	status,2,c
  6200                           
  6201                           ; BSR set to: 1
  6202  002280  A9E1               	btfss	_flags& (0+255),4,b
  6203  002282  D00A               	goto	l7803
  6204                           
  6205                           ; BSR set to: 1
  6206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  6207  002284  0E64               	movlw	low _dbuf
  6208  002286  257D               	addwf	efgtoa@n& (0+255),w,b
  6209  002288  6ED9               	movwf	fsr2l,c
  6210  00228A  0E02               	movlw	high _dbuf
  6211  00228C  217E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6212  00228E  6EDA               	movwf	fsr2h,c
  6213  002290  0E2E               	movlw	46
  6214  002292  6EDF               	movwf	indf2,c
  6215                           
  6216                           ; BSR set to: 1
  6217  002294  4B7D               	infsnz	efgtoa@n& (0+255),f,b
  6218  002296  2B7E               	incf	(efgtoa@n+1)& (0+255),f,b
  6219  002298                     l7803:
  6220                           
  6221                           ; BSR set to: 1
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  6223  002298  0E64               	movlw	low _dbuf
  6224  00229A  257D               	addwf	efgtoa@n& (0+255),w,b
  6225  00229C  6ED9               	movwf	fsr2l,c
  6226  00229E  0E02               	movlw	high _dbuf
  6227  0022A0  217E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6228  0022A2  6EDA               	movwf	fsr2h,c
  6229  0022A4  0E00               	movlw	0
  6230  0022A6  6EDF               	movwf	indf2,c
  6231                           
  6232                           ; BSR set to: 1
  6233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  6234  0022A8  0E65               	movlw	101
  6235  0022AA  1969               	xorwf	efgtoa@nmode& (0+255),w,b
  6236  0022AC  A4D8               	btfss	status,2,c
  6237  0022AE  D47D               	goto	l7615
  6238                           
  6239                           ; BSR set to: 1
  6240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  6241  0022B0  0E00               	movlw	0
  6242  0022B2  6F76               	movwf	(efgtoa@i+1)& (0+255),b
  6243  0022B4  0E4F               	movlw	79
  6244  0022B6  6F75               	movwf	efgtoa@i& (0+255),b
  6245                           
  6246                           ; BSR set to: 1
  6247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  6248  0022B8  0E64               	movlw	low _dbuf
  6249  0022BA  2575               	addwf	efgtoa@i& (0+255),w,b
  6250  0022BC  6ED9               	movwf	fsr2l,c
  6251  0022BE  0E02               	movlw	high _dbuf
  6252  0022C0  2176               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6253  0022C2  6EDA               	movwf	fsr2h,c
  6254  0022C4  0E00               	movlw	0
  6255  0022C6  6EDF               	movwf	indf2,c
  6256                           
  6257                           ; BSR set to: 1
  6258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  6259  0022C8  0E00               	movlw	0
  6260  0022CA  6F66               	movwf	(efgtoa@sign+1)& (0+255),b
  6261  0022CC  0E00               	movlw	0
  6262  0022CE  6F65               	movwf	efgtoa@sign& (0+255),b
  6263                           
  6264                           ; BSR set to: 1
  6265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  6266  0022D0  AF7C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6267  0022D2  D008               	goto	l7819
  6268                           
  6269                           ; BSR set to: 1
  6270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  6271  0022D4  0E00               	movlw	0
  6272  0022D6  6F66               	movwf	(efgtoa@sign+1)& (0+255),b
  6273  0022D8  0E01               	movlw	1
  6274  0022DA  6F65               	movwf	efgtoa@sign& (0+255),b
  6275                           
  6276                           ; BSR set to: 1
  6277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  6278  0022DC  6D7B               	negf	efgtoa@e& (0+255),b
  6279  0022DE  1F7C               	comf	(efgtoa@e+1)& (0+255),f,b
  6280  0022E0  B0D8               	btfsc	status,0,c
  6281  0022E2  2B7C               	incf	(efgtoa@e+1)& (0+255),f,b
  6282  0022E4                     l7819:
  6283                           
  6284                           ; BSR set to: 1
  6285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  6286  0022E4  0E00               	movlw	0
  6287  0022E6  6F68               	movwf	(efgtoa@p+1)& (0+255),b
  6288  0022E8  0E02               	movlw	2
  6289  0022EA  6F67               	movwf	efgtoa@p& (0+255),b
  6290                           
  6291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  6292  0022EC  D02C               	goto	l7831
  6293  0022EE                     l7821:
  6294                           
  6295                           ; BSR set to: 1
  6296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  6297  0022EE  0775               	decf	efgtoa@i& (0+255),f,b
  6298  0022F0  A0D8               	btfss	status,0,c
  6299  0022F2  0776               	decf	(efgtoa@i+1)& (0+255),f,b
  6300                           
  6301                           ; BSR set to: 1
  6302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  6303  0022F4  0E64               	movlw	low _dbuf
  6304  0022F6  2575               	addwf	efgtoa@i& (0+255),w,b
  6305  0022F8  6ED9               	movwf	fsr2l,c
  6306  0022FA  0E02               	movlw	high _dbuf
  6307  0022FC  2176               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6308  0022FE  6EDA               	movwf	fsr2h,c
  6309  002300  C17B  F100         	movff	efgtoa@e,___awmod@dividend
  6310  002304  C17C  F101         	movff	efgtoa@e+1,___awmod@dividend+1
  6311  002308  0E00               	movlw	0
  6312  00230A  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
  6313  00230C  0E0A               	movlw	10
  6314  00230E  6F02               	movwf	___awmod@divisor& (0+255),b
  6315  002310  EC2F  F035         	call	___awmod	;wreg free
  6316  002314  0101               	movlb	1	; () banked
  6317  002316  5100               	movf	?___awmod& (0+255),w,b
  6318  002318  0F30               	addlw	48
  6319  00231A  6EDF               	movwf	indf2,c
  6320                           
  6321                           ; BSR set to: 1
  6322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  6323  00231C  C17B  F100         	movff	efgtoa@e,___awdiv@dividend
  6324  002320  C17C  F101         	movff	efgtoa@e+1,___awdiv@dividend+1
  6325  002324  0E00               	movlw	0
  6326  002326  6F03               	movwf	(___awdiv@divisor+1)& (0+255),b
  6327  002328  0E0A               	movlw	10
  6328  00232A  6F02               	movwf	___awdiv@divisor& (0+255),b
  6329  00232C  EC2A  F034         	call	___awdiv	;wreg free
  6330  002330  C100  F17B         	movff	?___awdiv,efgtoa@e
  6331  002334  C101  F17C         	movff	?___awdiv+1,efgtoa@e+1
  6332                           
  6333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  6334  002338  0101               	movlb	1	; () banked
  6335  00233A  0767               	decf	efgtoa@p& (0+255),f,b
  6336  00233C  A0D8               	btfss	status,0,c
  6337  00233E  0768               	decf	(efgtoa@p+1)& (0+255),f,b
  6338                           
  6339                           ; BSR set to: 1
  6340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  6341  002340  076A               	decf	efgtoa@w& (0+255),f,b
  6342  002342  A0D8               	btfss	status,0,c
  6343  002344  076B               	decf	(efgtoa@w+1)& (0+255),f,b
  6344  002346                     l7831:
  6345                           
  6346                           ; BSR set to: 1
  6347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  6348  002346  517B               	movf	efgtoa@e& (0+255),w,b
  6349  002348  117C               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6350  00234A  A4D8               	btfss	status,2,c
  6351  00234C  D7D0               	goto	l7821
  6352                           
  6353                           ; BSR set to: 1
  6354  00234E  BF68               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6355  002350  D005               	goto	u11090
  6356  002352  5168               	movf	(efgtoa@p+1)& (0+255),w,b
  6357  002354  E1CC               	bnz	l7821
  6358  002356  0567               	decf	efgtoa@p& (0+255),w,b
  6359  002358  B0D8               	btfsc	status,0,c
  6360  00235A  D7C9               	goto	l7821
  6361  00235C                     u11090:
  6362                           
  6363                           ; BSR set to: 1
  6364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  6365  00235C  0775               	decf	efgtoa@i& (0+255),f,b
  6366  00235E  A0D8               	btfss	status,0,c
  6367  002360  0776               	decf	(efgtoa@i+1)& (0+255),f,b
  6368                           
  6369                           ; BSR set to: 1
  6370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  6371  002362  5165               	movf	efgtoa@sign& (0+255),w,b
  6372  002364  1166               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6373  002366  A4D8               	btfss	status,2,c
  6374  002368  D004               	goto	l7841
  6375                           
  6376                           ; BSR set to: 1
  6377  00236A  0E00               	movlw	0
  6378  00236C  6F56               	movwf	(_efgtoa$1547+1)& (0+255),b
  6379  00236E  0E2B               	movlw	43
  6380  002370  D003               	goto	L4
  6381  002372                     l7841:
  6382                           
  6383                           ; BSR set to: 1
  6384  002372  0E00               	movlw	0
  6385  002374  6F56               	movwf	(_efgtoa$1547+1)& (0+255),b
  6386  002376  0E2D               	movlw	45
  6387  002378                     L4:
  6388  002378  6F55               	movwf	_efgtoa$1547& (0+255),b
  6389                           
  6390                           ; BSR set to: 1
  6391  00237A  0E64               	movlw	low _dbuf
  6392  00237C  2575               	addwf	efgtoa@i& (0+255),w,b
  6393  00237E  6ED9               	movwf	fsr2l,c
  6394  002380  0E02               	movlw	high _dbuf
  6395  002382  2176               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6396  002384  6EDA               	movwf	fsr2h,c
  6397  002386  C155  FFDF         	movff	_efgtoa$1547,indf2
  6398                           
  6399                           ; BSR set to: 1
  6400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  6401  00238A  076A               	decf	efgtoa@w& (0+255),f,b
  6402  00238C  A0D8               	btfss	status,0,c
  6403  00238E  076B               	decf	(efgtoa@w+1)& (0+255),f,b
  6404                           
  6405                           ; BSR set to: 1
  6406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6407  002390  0775               	decf	efgtoa@i& (0+255),f,b
  6408  002392  A0D8               	btfss	status,0,c
  6409  002394  0776               	decf	(efgtoa@i+1)& (0+255),f,b
  6410                           
  6411                           ; BSR set to: 1
  6412  002396  0EBF               	movlw	191
  6413  002398  6F46               	movwf	??_efgtoa& (0+255),b
  6414  00239A  0EFF               	movlw	255
  6415  00239C  6F47               	movwf	(??_efgtoa+1)& (0+255),b
  6416  00239E  5145               	movf	efgtoa@c& (0+255),w,b
  6417  0023A0  6F48               	movwf	(??_efgtoa+2)& (0+255),b
  6418  0023A2  6B49               	clrf	(??_efgtoa+3)& (0+255),b
  6419  0023A4  5146               	movf	??_efgtoa& (0+255),w,b
  6420  0023A6  2748               	addwf	(??_efgtoa+2)& (0+255),f,b
  6421  0023A8  5147               	movf	(??_efgtoa+1)& (0+255),w,b
  6422  0023AA  2349               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6423  0023AC  5149               	movf	(??_efgtoa+3)& (0+255),w,b
  6424  0023AE  E106               	bnz	u11110
  6425  0023B0  0E1A               	movlw	26
  6426  0023B2  5D48               	subwf	(??_efgtoa+2)& (0+255),w,b
  6427  0023B4  B0D8               	btfsc	status,0,c
  6428  0023B6  D002               	goto	u11110
  6429  0023B8  0E01               	movlw	1
  6430  0023BA  D001               	goto	u11120
  6431  0023BC                     u11110:
  6432  0023BC  0E00               	movlw	0
  6433  0023BE                     u11120:
  6434  0023BE  6F59               	movwf	_efgtoa$1549& (0+255),b
  6435  0023C0  6B5A               	clrf	(_efgtoa$1549+1)& (0+255),b
  6436                           
  6437                           ; BSR set to: 1
  6438  0023C2  5159               	movf	_efgtoa$1549& (0+255),w,b
  6439  0023C4  115A               	iorwf	(_efgtoa$1549+1)& (0+255),w,b
  6440  0023C6  A4D8               	btfss	status,2,c
  6441  0023C8  D004               	goto	l7857
  6442                           
  6443                           ; BSR set to: 1
  6444  0023CA  0E00               	movlw	0
  6445  0023CC  6F58               	movwf	(_efgtoa$1548+1)& (0+255),b
  6446  0023CE  0E65               	movlw	101
  6447  0023D0  D003               	goto	L5
  6448  0023D2                     l7857:
  6449                           
  6450                           ; BSR set to: 1
  6451  0023D2  0E00               	movlw	0
  6452  0023D4  6F58               	movwf	(_efgtoa$1548+1)& (0+255),b
  6453  0023D6  0E45               	movlw	69
  6454  0023D8                     L5:
  6455  0023D8  6F57               	movwf	_efgtoa$1548& (0+255),b
  6456                           
  6457                           ; BSR set to: 1
  6458  0023DA  0E64               	movlw	low _dbuf
  6459  0023DC  2575               	addwf	efgtoa@i& (0+255),w,b
  6460  0023DE  6ED9               	movwf	fsr2l,c
  6461  0023E0  0E02               	movlw	high _dbuf
  6462  0023E2  2176               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6463  0023E4  6EDA               	movwf	fsr2h,c
  6464  0023E6  C157  FFDF         	movff	_efgtoa$1548,indf2
  6465                           
  6466                           ; BSR set to: 1
  6467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  6468  0023EA  076A               	decf	efgtoa@w& (0+255),f,b
  6469  0023EC  A0D8               	btfss	status,0,c
  6470  0023EE  076B               	decf	(efgtoa@w+1)& (0+255),f,b
  6471                           
  6472                           ; BSR set to: 1
  6473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  6474  0023F0  0E64               	movlw	low _dbuf
  6475  0023F2  257D               	addwf	efgtoa@n& (0+255),w,b
  6476  0023F4  6F00               	movwf	strcpy@dest& (0+255),b
  6477  0023F6  0E02               	movlw	high _dbuf
  6478  0023F8  217E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6479  0023FA  6F01               	movwf	(strcpy@dest+1)& (0+255),b
  6480  0023FC  0E64               	movlw	low _dbuf
  6481  0023FE  2575               	addwf	efgtoa@i& (0+255),w,b
  6482  002400  6F02               	movwf	strcpy@src& (0+255),b
  6483  002402  0E02               	movlw	high _dbuf
  6484  002404  2176               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6485  002406  6F03               	movwf	(strcpy@src+1)& (0+255),b
  6486  002408  EC5C  F036         	call	_strcpy	;wreg free
  6487  00240C  EFD5  F00D         	goto	l7615
  6488  002410                     __end_of_efgtoa:
  6489                           	opt callstack 0
  6490                           
  6491 ;; *************** function _tolower *****************
  6492 ;; Defined at:
  6493 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  c               2    6[BANK1 ] int 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  2    6[BANK1 ] int 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6507 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;Total ram usage:        8 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:   17
  6514 ;; This function calls:
  6515 ;;		_isupper
  6516 ;; This function is called by:
  6517 ;;		_efgtoa
  6518 ;;		_vfpfcnvrt
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text15
  6523  006E0A                     __ptext15:
  6524                           	opt callstack 0
  6525  006E0A                     _tolower:
  6526                           	opt callstack 10
  6527                           
  6528                           ;incstack = 0
  6529  006E0A  0EBF               	movlw	191
  6530  006E0C  0101               	movlb	1	; () banked
  6531  006E0E  6F08               	movwf	??_tolower& (0+255),b
  6532  006E10  0EFF               	movlw	255
  6533  006E12  6F09               	movwf	(??_tolower+1)& (0+255),b
  6534  006E14  C106  F10A         	movff	tolower@c,??_tolower+2
  6535  006E18  C107  F10B         	movff	tolower@c+1,??_tolower+3
  6536  006E1C  5108               	movf	??_tolower& (0+255),w,b
  6537  006E1E  270A               	addwf	(??_tolower+2)& (0+255),f,b
  6538  006E20  5109               	movf	(??_tolower+1)& (0+255),w,b
  6539  006E22  230B               	addwfc	(??_tolower+3)& (0+255),f,b
  6540  006E24  510B               	movf	(??_tolower+3)& (0+255),w,b
  6541  006E26  E106               	bnz	u9460
  6542  006E28  0E1A               	movlw	26
  6543  006E2A  5D0A               	subwf	(??_tolower+2)& (0+255),w,b
  6544  006E2C  B0D8               	btfsc	status,0,c
  6545  006E2E  D002               	goto	u9460
  6546  006E30  0E01               	movlw	1
  6547  006E32  D001               	goto	u9470
  6548  006E34                     u9460:
  6549  006E34  0E00               	movlw	0
  6550  006E36                     u9470:
  6551  006E36  6F0C               	movwf	_tolower$2163& (0+255),b
  6552  006E38  6B0D               	clrf	(_tolower$2163+1)& (0+255),b
  6553                           
  6554                           ; BSR set to: 1
  6555  006E3A  510C               	movf	_tolower$2163& (0+255),w,b
  6556  006E3C  110D               	iorwf	(_tolower$2163+1)& (0+255),w,b
  6557  006E3E  B4D8               	btfsc	status,2,c
  6558  006E40  D006               	goto	l1569
  6559                           
  6560                           ; BSR set to: 1
  6561  006E42  0E20               	movlw	32
  6562  006E44  1106               	iorwf	tolower@c& (0+255),w,b
  6563  006E46  6F06               	movwf	?_tolower& (0+255),b
  6564  006E48  5107               	movf	(tolower@c+1)& (0+255),w,b
  6565  006E4A  6F07               	movwf	(?_tolower+1)& (0+255),b
  6566  006E4C  0012               	return	
  6567  006E4E                     l1569:
  6568                           
  6569                           ; BSR set to: 1
  6570  006E4E  C106  F106         	movff	tolower@c,?_tolower
  6571  006E52  C107  F107         	movff	tolower@c+1,?_tolower+1
  6572                           
  6573                           ; BSR set to: 1
  6574  006E56  0012               	return		;funcret
  6575  006E58                     __end_of_tolower:
  6576                           	opt callstack 0
  6577                           
  6578 ;; *************** function _isupper *****************
  6579 ;; Defined at:
  6580 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  c               2    0[BANK1 ] int 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  2    0[BANK1 ] int 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6594 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6598 ;;Total ram usage:        6 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:   16
  6601 ;; This function calls:
  6602 ;;		Nothing
  6603 ;; This function is called by:
  6604 ;;		_efgtoa
  6605 ;;		_vfpfcnvrt
  6606 ;;		_tolower
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text16
  6611  0070CA                     __ptext16:
  6612                           	opt callstack 0
  6613  0070CA                     _isupper:
  6614                           	opt callstack 10
  6615                           
  6616                           ; BSR set to: 1
  6617                           ;incstack = 0
  6618  0070CA  0EBF               	movlw	191
  6619  0070CC  0101               	movlb	1	; () banked
  6620  0070CE  6F02               	movwf	??_isupper& (0+255),b
  6621  0070D0  0EFF               	movlw	255
  6622  0070D2  6F03               	movwf	(??_isupper+1)& (0+255),b
  6623  0070D4  C100  F104         	movff	isupper@c,??_isupper+2
  6624  0070D8  C101  F105         	movff	isupper@c+1,??_isupper+3
  6625  0070DC  5102               	movf	??_isupper& (0+255),w,b
  6626  0070DE  2704               	addwf	(??_isupper+2)& (0+255),f,b
  6627  0070E0  5103               	movf	(??_isupper+1)& (0+255),w,b
  6628  0070E2  2305               	addwfc	(??_isupper+3)& (0+255),f,b
  6629  0070E4  5105               	movf	(??_isupper+3)& (0+255),w,b
  6630  0070E6  E106               	bnz	u8750
  6631  0070E8  0E1A               	movlw	26
  6632  0070EA  5D04               	subwf	(??_isupper+2)& (0+255),w,b
  6633  0070EC  B0D8               	btfsc	status,0,c
  6634  0070EE  D002               	goto	u8750
  6635  0070F0  0E01               	movlw	1
  6636  0070F2  D001               	goto	u8760
  6637  0070F4                     u8750:
  6638  0070F4  0E00               	movlw	0
  6639  0070F6                     u8760:
  6640  0070F6  6F00               	movwf	?_isupper& (0+255),b
  6641  0070F8  6B01               	clrf	(?_isupper+1)& (0+255),b
  6642                           
  6643                           ; BSR set to: 1
  6644  0070FA  0012               	return		;funcret
  6645  0070FC                     __end_of_isupper:
  6646                           	opt callstack 0
  6647                           
  6648 ;; *************** function _strcpy *****************
  6649 ;; Defined at:
  6650 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  dest            2    0[BANK1 ] PTR unsigned char 
  6653 ;;		 -> dbuf(80), 
  6654 ;;  src             2    2[BANK1 ] PTR const unsigned char 
  6655 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
  6656 ;;		 -> dbuf(80), 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  d               2    8[BANK1 ] PTR unsigned char 
  6659 ;;		 -> dbuf(80), 
  6660 ;;  s               2    6[BANK1 ] PTR const unsigned char 
  6661 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
  6662 ;;		 -> dbuf(80), 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  2    0[BANK1 ] PTR unsigned char 
  6665 ;; Registers used:
  6666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6672 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;Total ram usage:       10 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; Hardware stack levels required when called:   16
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		_efgtoa
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text17
  6687  006CB8                     __ptext17:
  6688                           	opt callstack 0
  6689  006CB8                     _strcpy:
  6690                           	opt callstack 10
  6691                           
  6692                           ; BSR set to: 1
  6693                           ;incstack = 0
  6694  006CB8  C102  F106         	movff	strcpy@src,strcpy@s
  6695  006CBC  C103  F107         	movff	strcpy@src+1,strcpy@s+1
  6696  006CC0  C100  F108         	movff	strcpy@dest,strcpy@d
  6697  006CC4  C101  F109         	movff	strcpy@dest+1,strcpy@d+1
  6698  006CC8                     l6915:
  6699  006CC8  0101               	movlb	1	; () banked
  6700  006CCA  5106               	movf	strcpy@s& (0+255),w,b
  6701  006CCC  6F04               	movwf	??_strcpy& (0+255),b
  6702  006CCE  5107               	movf	(strcpy@s+1)& (0+255),w,b
  6703  006CD0  6F05               	movwf	(??_strcpy+1)& (0+255),b
  6704  006CD2  4B06               	infsnz	strcpy@s& (0+255),f,b
  6705  006CD4  2B07               	incf	(strcpy@s+1)& (0+255),f,b
  6706  006CD6  C104  FFF6         	movff	??_strcpy,tblptrl
  6707  006CDA  C105  FFF7         	movff	??_strcpy+1,tblptrh
  6708  006CDE  0E00               	movlw	low (__smallconst shr (0+16))
  6709  006CE0  6EF8               	movwf	tblptru,c
  6710  006CE2  C108  FFD9         	movff	strcpy@d,fsr2l
  6711  006CE6  C109  FFDA         	movff	strcpy@d+1,fsr2h
  6712  006CEA  4B08               	infsnz	strcpy@d& (0+255),f,b
  6713  006CEC  2B09               	incf	(strcpy@d+1)& (0+255),f,b
  6714  006CEE  0E0F               	movlw	(high __ramtop+-1)
  6715  006CF0  64F7               	cpfsgt	tblptrh,c
  6716  006CF2  D003               	bra	u9447
  6717  006CF4  0008               	tblrd		*
  6718  006CF6  50F5               	movf	tablat,w,c
  6719  006CF8  D005               	bra	u9440
  6720  006CFA                     u9447:
  6721  006CFA  CFF6 FFE1          	movff	tblptrl,fsr1l
  6722  006CFE  CFF7 FFE2          	movff	tblptrh,fsr1h
  6723  006D02  50E7               	movf	indf1,w,c
  6724  006D04                     u9440:
  6725  006D04  6EDF               	movwf	indf2,c
  6726  006D06  50DF               	movf	indf2,w,c
  6727  006D08  B4D8               	btfsc	status,2,c
  6728  006D0A  0012               	return	
  6729  006D0C  D7DD               	goto	l6915
  6730  006D0E                     __end_of_strcpy:
  6731                           	opt callstack 0
  6732                           
  6733 ;; *************** function _floorf *****************
  6734 ;; Defined at:
  6735 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  x               4   25[BANK1 ] float 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  u               4   41[BANK1 ] struct .
  6740 ;;  m               4   35[BANK1 ] unsigned long 
  6741 ;;  e               2   39[BANK1 ] int 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  4   25[BANK1 ] float 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2, status,0
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6751 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;Total ram usage:       20 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:   16
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_efgtoa
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text18
  6766  00436E                     __ptext18:
  6767                           	opt callstack 0
  6768  00436E                     _floorf:
  6769                           	opt callstack 10
  6770                           
  6771                           ;incstack = 0
  6772  00436E  C256  F129         	movff	floorf@F524,floorf@u
  6773  004372  C257  F12A         	movff	floorf@F524+1,floorf@u+1
  6774  004376  C258  F12B         	movff	floorf@F524+2,floorf@u+2
  6775  00437A  C259  F12C         	movff	floorf@F524+3,floorf@u+3
  6776  00437E  C119  F129         	movff	floorf@x,floorf@u
  6777  004382  C11A  F12A         	movff	floorf@x+1,floorf@u+1
  6778  004386  C11B  F12B         	movff	floorf@x+2,floorf@u+2
  6779  00438A  C11C  F12C         	movff	floorf@x+3,floorf@u+3
  6780  00438E  0E81               	movlw	129
  6781  004390  0101               	movlb	1	; () banked
  6782  004392  6F1D               	movwf	??_floorf& (0+255),b
  6783  004394  0EFF               	movlw	255
  6784  004396  6F1E               	movwf	(??_floorf+1)& (0+255),b
  6785  004398  C129  F11F         	movff	floorf@u,??_floorf+2
  6786  00439C  C12A  F120         	movff	floorf@u+1,??_floorf+3
  6787  0043A0  C12B  F121         	movff	floorf@u+2,??_floorf+4
  6788  0043A4  C12C  F122         	movff	floorf@u+3,??_floorf+5
  6789  0043A8  0E18               	movlw	24
  6790  0043AA  D005               	goto	u9490
  6791  0043AC                     u9495:
  6792  0043AC  90D8               	bcf	status,0,c
  6793  0043AE  3322               	rrcf	(??_floorf+5)& (0+255),f,b
  6794  0043B0  3321               	rrcf	(??_floorf+4)& (0+255),f,b
  6795  0043B2  3320               	rrcf	(??_floorf+3)& (0+255),f,b
  6796  0043B4  331F               	rrcf	(??_floorf+2)& (0+255),f,b
  6797  0043B6                     u9490:
  6798  0043B6  2EE8               	decfsz	wreg,f,c
  6799  0043B8  D7F9               	goto	u9495
  6800  0043BA  511F               	movf	(??_floorf+2)& (0+255),w,b
  6801  0043BC  251D               	addwf	??_floorf& (0+255),w,b
  6802  0043BE  6F27               	movwf	floorf@e& (0+255),b
  6803  0043C0  0E00               	movlw	0
  6804  0043C2  211E               	addwfc	(??_floorf+1)& (0+255),w,b
  6805  0043C4  6F28               	movwf	(floorf@e+1)& (0+255),b
  6806  0043C6  BF28               	btfsc	(floorf@e+1)& (0+255),7,b
  6807  0043C8  D00F               	goto	l6933
  6808  0043CA  5128               	movf	(floorf@e+1)& (0+255),w,b
  6809  0043CC  E104               	bnz	u9500
  6810  0043CE  0E17               	movlw	23
  6811  0043D0  5D27               	subwf	floorf@e& (0+255),w,b
  6812  0043D2  A0D8               	btfss	status,0,c
  6813  0043D4  D009               	goto	l6933
  6814  0043D6                     u9500:
  6815                           
  6816                           ; BSR set to: 1
  6817  0043D6  C119  F119         	movff	floorf@x,?_floorf
  6818  0043DA  C11A  F11A         	movff	floorf@x+1,?_floorf+1
  6819  0043DE  C11B  F11B         	movff	floorf@x+2,?_floorf+2
  6820  0043E2  C11C  F11C         	movff	floorf@x+3,?_floorf+3
  6821  0043E6  0012               	return	
  6822  0043E8                     l6933:
  6823                           
  6824                           ; BSR set to: 1
  6825  0043E8  BF28               	btfsc	(floorf@e+1)& (0+255),7,b
  6826  0043EA  D05F               	goto	l6943
  6827                           
  6828                           ; BSR set to: 1
  6829  0043EC  C127  F11D         	movff	floorf@e,??_floorf
  6830  0043F0  0EFF               	movlw	255
  6831  0043F2  6F1E               	movwf	(??_floorf+1)& (0+255),b
  6832  0043F4  0EFF               	movlw	255
  6833  0043F6  6F1F               	movwf	(??_floorf+2)& (0+255),b
  6834  0043F8  0E7F               	movlw	127
  6835  0043FA  6F20               	movwf	(??_floorf+3)& (0+255),b
  6836  0043FC  0E00               	movlw	0
  6837  0043FE  6F21               	movwf	(??_floorf+4)& (0+255),b
  6838  004400                     u9525:
  6839  004400  671D               	tstfsz	??_floorf& (0+255),b
  6840  004402  D001               	goto	u9526
  6841  004404  D007               	goto	u9527
  6842  004406                     u9526:
  6843  004406  3521               	rlcf	(??_floorf+4)& (0+255),w,b
  6844  004408  3321               	rrcf	(??_floorf+4)& (0+255),f,b
  6845  00440A  3320               	rrcf	(??_floorf+3)& (0+255),f,b
  6846  00440C  331F               	rrcf	(??_floorf+2)& (0+255),f,b
  6847  00440E  331E               	rrcf	(??_floorf+1)& (0+255),f,b
  6848  004410  2F1D               	decfsz	??_floorf& (0+255),f,b
  6849  004412  D7F6               	goto	u9525
  6850  004414                     u9527:
  6851  004414  C11E  F123         	movff	??_floorf+1,floorf@m
  6852  004418  C11F  F124         	movff	??_floorf+2,floorf@m+1
  6853  00441C  C120  F125         	movff	??_floorf+3,floorf@m+2
  6854  004420  C121  F126         	movff	??_floorf+4,floorf@m+3
  6855  004424  0101               	movlb	1	; () banked
  6856  004426  5123               	movf	floorf@m& (0+255),w,b
  6857  004428  1529               	andwf	floorf@u& (0+255),w,b
  6858  00442A  6F1D               	movwf	??_floorf& (0+255),b
  6859  00442C  5124               	movf	(floorf@m+1)& (0+255),w,b
  6860  00442E  152A               	andwf	(floorf@u+1)& (0+255),w,b
  6861  004430  6F1E               	movwf	(??_floorf+1)& (0+255),b
  6862  004432  5125               	movf	(floorf@m+2)& (0+255),w,b
  6863  004434  152B               	andwf	(floorf@u+2)& (0+255),w,b
  6864  004436  6F1F               	movwf	(??_floorf+2)& (0+255),b
  6865  004438  5126               	movf	(floorf@m+3)& (0+255),w,b
  6866  00443A  152C               	andwf	(floorf@u+3)& (0+255),w,b
  6867  00443C  6F20               	movwf	(??_floorf+3)& (0+255),b
  6868  00443E  511D               	movf	??_floorf& (0+255),w,b
  6869  004440  111E               	iorwf	(??_floorf+1)& (0+255),w,b
  6870  004442  111F               	iorwf	(??_floorf+2)& (0+255),w,b
  6871  004444  1120               	iorwf	(??_floorf+3)& (0+255),w,b
  6872  004446  B4D8               	btfsc	status,2,c
  6873  004448  D7C6               	goto	u9500
  6874                           
  6875                           ; BSR set to: 1
  6876  00444A  C129  F11D         	movff	floorf@u,??_floorf
  6877  00444E  C12A  F11E         	movff	floorf@u+1,??_floorf+1
  6878  004452  C12B  F11F         	movff	floorf@u+2,??_floorf+2
  6879  004456  C12C  F120         	movff	floorf@u+3,??_floorf+3
  6880  00445A  0E20               	movlw	32
  6881  00445C  D005               	goto	u9540
  6882  00445E                     u9545:
  6883  00445E  90D8               	bcf	status,0,c
  6884  004460  3320               	rrcf	(??_floorf+3)& (0+255),f,b
  6885  004462  331F               	rrcf	(??_floorf+2)& (0+255),f,b
  6886  004464  331E               	rrcf	(??_floorf+1)& (0+255),f,b
  6887  004466  331D               	rrcf	??_floorf& (0+255),f,b
  6888  004468                     u9540:
  6889  004468  2EE8               	decfsz	wreg,f,c
  6890  00446A  D7F9               	goto	u9545
  6891  00446C  511D               	movf	??_floorf& (0+255),w,b
  6892  00446E  111E               	iorwf	(??_floorf+1)& (0+255),w,b
  6893  004470  111F               	iorwf	(??_floorf+2)& (0+255),w,b
  6894  004472  1120               	iorwf	(??_floorf+3)& (0+255),w,b
  6895  004474  B4D8               	btfsc	status,2,c
  6896  004476  D008               	goto	l1485
  6897                           
  6898                           ; BSR set to: 1
  6899  004478  5123               	movf	floorf@m& (0+255),w,b
  6900  00447A  2729               	addwf	floorf@u& (0+255),f,b
  6901  00447C  5124               	movf	(floorf@m+1)& (0+255),w,b
  6902  00447E  232A               	addwfc	(floorf@u+1)& (0+255),f,b
  6903  004480  5125               	movf	(floorf@m+2)& (0+255),w,b
  6904  004482  232B               	addwfc	(floorf@u+2)& (0+255),f,b
  6905  004484  5126               	movf	(floorf@m+3)& (0+255),w,b
  6906  004486  232C               	addwfc	(floorf@u+3)& (0+255),f,b
  6907  004488                     l1485:
  6908                           
  6909                           ; BSR set to: 1
  6910  004488  1D23               	comf	floorf@m& (0+255),w,b
  6911  00448A  6F1D               	movwf	??_floorf& (0+255),b
  6912  00448C  1D24               	comf	(floorf@m+1)& (0+255),w,b
  6913  00448E  6F1E               	movwf	(??_floorf+1)& (0+255),b
  6914  004490  1D25               	comf	(floorf@m+2)& (0+255),w,b
  6915  004492  6F1F               	movwf	(??_floorf+2)& (0+255),b
  6916  004494  1D26               	comf	(floorf@m+3)& (0+255),w,b
  6917  004496  6F20               	movwf	(??_floorf+3)& (0+255),b
  6918  004498  511D               	movf	??_floorf& (0+255),w,b
  6919  00449A  1729               	andwf	floorf@u& (0+255),f,b
  6920  00449C  511E               	movf	(??_floorf+1)& (0+255),w,b
  6921  00449E  172A               	andwf	(floorf@u+1)& (0+255),f,b
  6922  0044A0  511F               	movf	(??_floorf+2)& (0+255),w,b
  6923  0044A2  172B               	andwf	(floorf@u+2)& (0+255),f,b
  6924  0044A4  5120               	movf	(??_floorf+3)& (0+255),w,b
  6925  0044A6  172C               	andwf	(floorf@u+3)& (0+255),f,b
  6926  0044A8  D036               	goto	l6951
  6927  0044AA                     l6943:
  6928                           
  6929                           ; BSR set to: 1
  6930  0044AA  C129  F11D         	movff	floorf@u,??_floorf
  6931  0044AE  C12A  F11E         	movff	floorf@u+1,??_floorf+1
  6932  0044B2  C12B  F11F         	movff	floorf@u+2,??_floorf+2
  6933  0044B6  C12C  F120         	movff	floorf@u+3,??_floorf+3
  6934  0044BA  0E20               	movlw	32
  6935  0044BC  D005               	goto	u9560
  6936  0044BE                     u9565:
  6937  0044BE  90D8               	bcf	status,0,c
  6938  0044C0  3320               	rrcf	(??_floorf+3)& (0+255),f,b
  6939  0044C2  331F               	rrcf	(??_floorf+2)& (0+255),f,b
  6940  0044C4  331E               	rrcf	(??_floorf+1)& (0+255),f,b
  6941  0044C6  331D               	rrcf	??_floorf& (0+255),f,b
  6942  0044C8                     u9560:
  6943  0044C8  2EE8               	decfsz	wreg,f,c
  6944  0044CA  D7F9               	goto	u9565
  6945  0044CC  511D               	movf	??_floorf& (0+255),w,b
  6946  0044CE  111E               	iorwf	(??_floorf+1)& (0+255),w,b
  6947  0044D0  111F               	iorwf	(??_floorf+2)& (0+255),w,b
  6948  0044D2  1120               	iorwf	(??_floorf+3)& (0+255),w,b
  6949  0044D4  A4D8               	btfss	status,2,c
  6950  0044D6  D008               	goto	l6947
  6951                           
  6952                           ; BSR set to: 1
  6953  0044D8  0E00               	movlw	0
  6954  0044DA  6F29               	movwf	floorf@u& (0+255),b
  6955  0044DC  0E00               	movlw	0
  6956  0044DE  6F2A               	movwf	(floorf@u+1)& (0+255),b
  6957  0044E0  0E00               	movlw	0
  6958  0044E2  6F2B               	movwf	(floorf@u+2)& (0+255),b
  6959  0044E4  0E00               	movlw	0
  6960  0044E6  D016               	goto	L6
  6961  0044E8                     l6947:
  6962                           
  6963                           ; BSR set to: 1
  6964  0044E8  90D8               	bcf	status,0,c
  6965  0044EA  3529               	rlcf	floorf@u& (0+255),w,b
  6966  0044EC  6F1D               	movwf	??_floorf& (0+255),b
  6967  0044EE  352A               	rlcf	(floorf@u+1)& (0+255),w,b
  6968  0044F0  6F1E               	movwf	(??_floorf+1)& (0+255),b
  6969  0044F2  352B               	rlcf	(floorf@u+2)& (0+255),w,b
  6970  0044F4  6F1F               	movwf	(??_floorf+2)& (0+255),b
  6971  0044F6  352C               	rlcf	(floorf@u+3)& (0+255),w,b
  6972  0044F8  6F20               	movwf	(??_floorf+3)& (0+255),b
  6973  0044FA  511D               	movf	??_floorf& (0+255),w,b
  6974  0044FC  111E               	iorwf	(??_floorf+1)& (0+255),w,b
  6975  0044FE  111F               	iorwf	(??_floorf+2)& (0+255),w,b
  6976  004500  1120               	iorwf	(??_floorf+3)& (0+255),w,b
  6977  004502  B4D8               	btfsc	status,2,c
  6978  004504  D008               	goto	l6951
  6979                           
  6980                           ; BSR set to: 1
  6981  004506  0E00               	movlw	0
  6982  004508  6F29               	movwf	floorf@u& (0+255),b
  6983  00450A  0E00               	movlw	0
  6984  00450C  6F2A               	movwf	(floorf@u+1)& (0+255),b
  6985  00450E  0E80               	movlw	128
  6986  004510  6F2B               	movwf	(floorf@u+2)& (0+255),b
  6987  004512  0EBF               	movlw	191
  6988  004514                     L6:
  6989  004514  6F2C               	movwf	(floorf@u+3)& (0+255),b
  6990  004516                     l6951:
  6991                           
  6992                           ; BSR set to: 1
  6993  004516  C129  F119         	movff	floorf@u,?_floorf
  6994  00451A  C12A  F11A         	movff	floorf@u+1,?_floorf+1
  6995  00451E  C12B  F11B         	movff	floorf@u+2,?_floorf+2
  6996  004522  C12C  F11C         	movff	floorf@u+3,?_floorf+3
  6997                           
  6998                           ; BSR set to: 1
  6999  004526  0012               	return		;funcret
  7000  004528                     __end_of_floorf:
  7001                           	opt callstack 0
  7002                           
  7003 ;; *************** function ___fpclassifyf *****************
  7004 ;; Defined at:
  7005 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  x               4    0[BANK1 ] float 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  u               4   10[BANK1 ] struct .
  7010 ;;  e               2    8[BANK1 ] int 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  2    0[BANK1 ] int 
  7013 ;; Registers used:
  7014 ;;		wreg, status,2, status,0
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7020 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;Total ram usage:       14 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:   16
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_efgtoa
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text19
  7035  005B3C                     __ptext19:
  7036                           	opt callstack 0
  7037  005B3C                     ___fpclassifyf:
  7038                           	opt callstack 10
  7039                           
  7040                           ; BSR set to: 1
  7041                           ;incstack = 0
  7042  005B3C  C1D7  F10A         	movff	___fpclassifyf@F463,___fpclassifyf@u
  7043  005B40  C1D8  F10B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  7044  005B44  C1D9  F10C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  7045  005B48  C1DA  F10D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  7046  005B4C  C100  F10A         	movff	___fpclassifyf@x,___fpclassifyf@u
  7047  005B50  C101  F10B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7048  005B54  C102  F10C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7049  005B58  C103  F10D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7050  005B5C  C10A  F104         	movff	___fpclassifyf@u,??___fpclassifyf
  7051  005B60  C10B  F105         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7052  005B64  C10C  F106         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7053  005B68  C10D  F107         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7054  005B6C  0E18               	movlw	24
  7055  005B6E  D006               	goto	u9370
  7056  005B70                     u9375:
  7057  005B70  0101               	movlb	1	; () banked
  7058  005B72  90D8               	bcf	status,0,c
  7059  005B74  3307               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  7060  005B76  3306               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  7061  005B78  3305               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  7062  005B7A  3304               	rrcf	??___fpclassifyf& (0+255),f,b
  7063  005B7C                     u9370:
  7064  005B7C  2EE8               	decfsz	wreg,f,c
  7065  005B7E  D7F8               	goto	u9375
  7066  005B80  5104               	movf	??___fpclassifyf& (0+255),w,b
  7067  005B82  6F08               	movwf	___fpclassifyf@e& (0+255),b
  7068  005B84  6B09               	clrf	(___fpclassifyf@e+1)& (0+255),b
  7069  005B86  5108               	movf	___fpclassifyf@e& (0+255),w,b
  7070  005B88  1109               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  7071  005B8A  A4D8               	btfss	status,2,c
  7072  005B8C  D019               	goto	l6903
  7073                           
  7074                           ; BSR set to: 1
  7075  005B8E  90D8               	bcf	status,0,c
  7076  005B90  350A               	rlcf	___fpclassifyf@u& (0+255),w,b
  7077  005B92  6F04               	movwf	??___fpclassifyf& (0+255),b
  7078  005B94  350B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  7079  005B96  6F05               	movwf	(??___fpclassifyf+1)& (0+255),b
  7080  005B98  350C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  7081  005B9A  6F06               	movwf	(??___fpclassifyf+2)& (0+255),b
  7082  005B9C  350D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  7083  005B9E  6F07               	movwf	(??___fpclassifyf+3)& (0+255),b
  7084  005BA0  5104               	movf	??___fpclassifyf& (0+255),w,b
  7085  005BA2  1105               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  7086  005BA4  1106               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  7087  005BA6  1107               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  7088  005BA8  A4D8               	btfss	status,2,c
  7089  005BAA  D005               	goto	l6899
  7090                           
  7091                           ; BSR set to: 1
  7092  005BAC  0E00               	movlw	0
  7093  005BAE  6F01               	movwf	(?___fpclassifyf+1)& (0+255),b
  7094  005BB0  0E02               	movlw	2
  7095  005BB2  6F00               	movwf	?___fpclassifyf& (0+255),b
  7096  005BB4  0012               	return	
  7097  005BB6                     l6899:
  7098                           
  7099                           ; BSR set to: 1
  7100  005BB6  0E00               	movlw	0
  7101  005BB8  6F01               	movwf	(?___fpclassifyf+1)& (0+255),b
  7102  005BBA  0E03               	movlw	3
  7103  005BBC  6F00               	movwf	?___fpclassifyf& (0+255),b
  7104  005BBE  0012               	return	
  7105  005BC0                     l6903:
  7106                           
  7107                           ; BSR set to: 1
  7108  005BC0  2908               	incf	___fpclassifyf@e& (0+255),w,b
  7109  005BC2  1109               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  7110  005BC4  A4D8               	btfss	status,2,c
  7111  005BC6  D01C               	goto	l6909
  7112                           
  7113                           ; BSR set to: 1
  7114  005BC8  C10A  F104         	movff	___fpclassifyf@u,??___fpclassifyf
  7115  005BCC  C10B  F105         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7116  005BD0  C10C  F106         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7117  005BD4  C10D  F107         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7118  005BD8  0E09               	movlw	9
  7119  005BDA                     u9415:
  7120  005BDA  90D8               	bcf	status,0,c
  7121  005BDC  3704               	rlcf	??___fpclassifyf& (0+255),f,b
  7122  005BDE  3705               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  7123  005BE0  3706               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  7124  005BE2  3707               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  7125  005BE4  2EE8               	decfsz	wreg,f,c
  7126  005BE6  D7F9               	goto	u9415
  7127  005BE8  5104               	movf	??___fpclassifyf& (0+255),w,b
  7128  005BEA  1105               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  7129  005BEC  1106               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  7130  005BEE  1107               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  7131  005BF0  A4D8               	btfss	status,2,c
  7132  005BF2  D002               	goto	u9420
  7133  005BF4  0E01               	movlw	1
  7134  005BF6  D001               	goto	u9430
  7135  005BF8                     u9420:
  7136  005BF8  0E00               	movlw	0
  7137  005BFA                     u9430:
  7138  005BFA  6F00               	movwf	?___fpclassifyf& (0+255),b
  7139  005BFC  6B01               	clrf	(?___fpclassifyf+1)& (0+255),b
  7140  005BFE  0012               	return	
  7141  005C00                     l6909:
  7142                           
  7143                           ; BSR set to: 1
  7144  005C00  0E00               	movlw	0
  7145  005C02  6F01               	movwf	(?___fpclassifyf+1)& (0+255),b
  7146  005C04  0E04               	movlw	4
  7147  005C06  6F00               	movwf	?___fpclassifyf& (0+255),b
  7148                           
  7149                           ; BSR set to: 1
  7150  005C08  0012               	return		;funcret
  7151  005C0A                     __end_of___fpclassifyf:
  7152                           	opt callstack 0
  7153                           
  7154 ;; *************** function ___fltol *****************
  7155 ;; Defined at:
  7156 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  f1              4    0[BANK1 ] int 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  exp1            1    9[BANK1 ] unsigned char 
  7161 ;;  sign1           1    8[BANK1 ] unsigned char 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  4    0[BANK1 ] long 
  7164 ;; Registers used:
  7165 ;;		wreg, status,2, status,0
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7171 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;Total ram usage:       10 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:   16
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_efgtoa
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text20
  7186  005CD6                     __ptext20:
  7187                           	opt callstack 0
  7188  005CD6                     ___fltol:
  7189                           	opt callstack 10
  7190                           
  7191                           ; BSR set to: 1
  7192                           ;incstack = 0
  7193  005CD6  0101               	movlb	1	; () banked
  7194  005CD8  3502               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7195  005CDA  3503               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7196  005CDC  6F09               	movwf	___fltol@exp1& (0+255),b
  7197  005CDE  5109               	movf	___fltol@exp1& (0+255),w,b
  7198  005CE0  A4D8               	btfss	status,2,c
  7199  005CE2  D009               	goto	l7451
  7200  005CE4                     u10370:
  7201                           
  7202                           ; BSR set to: 1
  7203  005CE4  0E00               	movlw	0
  7204  005CE6  6F00               	movwf	?___fltol& (0+255),b
  7205  005CE8  0E00               	movlw	0
  7206  005CEA  6F01               	movwf	(?___fltol+1)& (0+255),b
  7207  005CEC  0E00               	movlw	0
  7208  005CEE  6F02               	movwf	(?___fltol+2)& (0+255),b
  7209  005CF0  0E00               	movlw	0
  7210  005CF2  6F03               	movwf	(?___fltol+3)& (0+255),b
  7211  005CF4  0012               	return	
  7212  005CF6                     l7451:
  7213                           
  7214                           ; BSR set to: 1
  7215  005CF6  C100  F104         	movff	___fltol@f1,??___fltol
  7216  005CFA  C101  F105         	movff	___fltol@f1+1,??___fltol+1
  7217  005CFE  C102  F106         	movff	___fltol@f1+2,??___fltol+2
  7218  005D02  C103  F107         	movff	___fltol@f1+3,??___fltol+3
  7219  005D06  0E20               	movlw	32
  7220  005D08  D005               	goto	u10380
  7221  005D0A                     u10385:
  7222  005D0A  90D8               	bcf	status,0,c
  7223  005D0C  3307               	rrcf	(??___fltol+3)& (0+255),f,b
  7224  005D0E  3306               	rrcf	(??___fltol+2)& (0+255),f,b
  7225  005D10  3305               	rrcf	(??___fltol+1)& (0+255),f,b
  7226  005D12  3304               	rrcf	??___fltol& (0+255),f,b
  7227  005D14                     u10380:
  7228  005D14  2EE8               	decfsz	wreg,f,c
  7229  005D16  D7F9               	goto	u10385
  7230  005D18  5104               	movf	??___fltol& (0+255),w,b
  7231  005D1A  6F08               	movwf	___fltol@sign1& (0+255),b
  7232                           
  7233                           ; BSR set to: 1
  7234  005D1C  8F02               	bsf	(___fltol@f1+2)& (0+255),7,b
  7235                           
  7236                           ; BSR set to: 1
  7237  005D1E  0EFF               	movlw	255
  7238  005D20  1700               	andwf	___fltol@f1& (0+255),f,b
  7239  005D22  0EFF               	movlw	255
  7240  005D24  1701               	andwf	(___fltol@f1+1)& (0+255),f,b
  7241  005D26  0EFF               	movlw	255
  7242  005D28  1702               	andwf	(___fltol@f1+2)& (0+255),f,b
  7243  005D2A  0E00               	movlw	0
  7244  005D2C  1703               	andwf	(___fltol@f1+3)& (0+255),f,b
  7245                           
  7246                           ; BSR set to: 1
  7247  005D2E  0E96               	movlw	150
  7248  005D30  5F09               	subwf	___fltol@exp1& (0+255),f,b
  7249                           
  7250                           ; BSR set to: 1
  7251  005D32  AF09               	btfss	___fltol@exp1& (0+255),7,b
  7252  005D34  D00D               	goto	l7471
  7253                           
  7254                           ; BSR set to: 1
  7255  005D36  5109               	movf	___fltol@exp1& (0+255),w,b
  7256  005D38  0A80               	xorlw	128
  7257  005D3A  0F97               	addlw	151
  7258  005D3C  A0D8               	btfss	status,0,c
  7259  005D3E  D7D2               	goto	u10370
  7260  005D40                     l7467:
  7261                           
  7262                           ; BSR set to: 1
  7263  005D40  90D8               	bcf	status,0,c
  7264  005D42  3303               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7265  005D44  3302               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7266  005D46  3301               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7267  005D48  3300               	rrcf	___fltol@f1& (0+255),f,b
  7268                           
  7269                           ; BSR set to: 1
  7270  005D4A  3F09               	incfsz	___fltol@exp1& (0+255),f,b
  7271  005D4C  D7F9               	goto	l7467
  7272  005D4E  D00D               	goto	u10420
  7273  005D50                     l7471:
  7274                           
  7275                           ; BSR set to: 1
  7276  005D50  0E1F               	movlw	31
  7277  005D52  6509               	cpfsgt	___fltol@exp1& (0+255),b
  7278  005D54  D007               	goto	l7479
  7279  005D56  D7C6               	goto	u10370
  7280  005D58                     l7477:
  7281                           
  7282                           ; BSR set to: 1
  7283  005D58  90D8               	bcf	status,0,c
  7284  005D5A  3700               	rlcf	___fltol@f1& (0+255),f,b
  7285  005D5C  3701               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7286  005D5E  3702               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7287  005D60  3703               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7288  005D62  0709               	decf	___fltol@exp1& (0+255),f,b
  7289  005D64                     l7479:
  7290                           
  7291                           ; BSR set to: 1
  7292  005D64  5109               	movf	___fltol@exp1& (0+255),w,b
  7293  005D66  A4D8               	btfss	status,2,c
  7294  005D68  D7F7               	goto	l7477
  7295  005D6A                     u10420:
  7296                           
  7297                           ; BSR set to: 1
  7298  005D6A  5108               	movf	___fltol@sign1& (0+255),w,b
  7299  005D6C  B4D8               	btfsc	status,2,c
  7300  005D6E  D008               	goto	l7485
  7301                           
  7302                           ; BSR set to: 1
  7303  005D70  1F03               	comf	(___fltol@f1+3)& (0+255),f,b
  7304  005D72  1F02               	comf	(___fltol@f1+2)& (0+255),f,b
  7305  005D74  1F01               	comf	(___fltol@f1+1)& (0+255),f,b
  7306  005D76  6D00               	negf	___fltol@f1& (0+255),b
  7307  005D78  0E00               	movlw	0
  7308  005D7A  2301               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7309  005D7C  2302               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7310  005D7E  2303               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7311  005D80                     l7485:
  7312                           
  7313                           ; BSR set to: 1
  7314  005D80  C100  F100         	movff	___fltol@f1,?___fltol
  7315  005D84  C101  F101         	movff	___fltol@f1+1,?___fltol+1
  7316  005D88  C102  F102         	movff	___fltol@f1+2,?___fltol+2
  7317  005D8C  C103  F103         	movff	___fltol@f1+3,?___fltol+3
  7318                           
  7319                           ; BSR set to: 1
  7320  005D90  0012               	return		;funcret
  7321  005D92                     __end_of___fltol:
  7322                           	opt callstack 0
  7323                           
  7324 ;; *************** function ___flsub *****************
  7325 ;; Defined at:
  7326 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  b               4   51[BANK1 ] long 
  7329 ;;  a               4   55[BANK1 ] long 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;		None
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  4   51[BANK1 ] long 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2, status,0, cstack
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7341 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;Total ram usage:        8 bytes
  7346 ;; Hardware stack levels used:    1
  7347 ;; Hardware stack levels required when called:   17
  7348 ;; This function calls:
  7349 ;;		___fladd
  7350 ;; This function is called by:
  7351 ;;		_efgtoa
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text21
  7356  006EA4                     __ptext21:
  7357                           	opt callstack 0
  7358  006EA4                     ___flsub:
  7359                           	opt callstack 9
  7360                           
  7361                           ; BSR set to: 1
  7362                           ;incstack = 0
  7363  006EA4  0E00               	movlw	0
  7364  006EA6  0101               	movlb	1	; () banked
  7365  006EA8  1B37               	xorwf	___flsub@a& (0+255),f,b
  7366  006EAA  0E00               	movlw	0
  7367  006EAC  1B38               	xorwf	(___flsub@a+1)& (0+255),f,b
  7368  006EAE  0E00               	movlw	0
  7369  006EB0  1B39               	xorwf	(___flsub@a+2)& (0+255),f,b
  7370  006EB2  0E80               	movlw	128
  7371  006EB4  1B3A               	xorwf	(___flsub@a+3)& (0+255),f,b
  7372                           
  7373                           ; BSR set to: 1
  7374  006EB6  C133  F100         	movff	___flsub@b,___fladd@b
  7375  006EBA  C134  F101         	movff	___flsub@b+1,___fladd@b+1
  7376  006EBE  C135  F102         	movff	___flsub@b+2,___fladd@b+2
  7377  006EC2  C136  F103         	movff	___flsub@b+3,___fladd@b+3
  7378  006EC6  C137  F104         	movff	___flsub@a,___fladd@a
  7379  006ECA  C138  F105         	movff	___flsub@a+1,___fladd@a+1
  7380  006ECE  C139  F106         	movff	___flsub@a+2,___fladd@a+2
  7381  006ED2  C13A  F107         	movff	___flsub@a+3,___fladd@a+3
  7382  006ED6  ECD9  F019         	call	___fladd	;wreg free
  7383  006EDA  C100  F133         	movff	?___fladd,?___flsub
  7384  006EDE  C101  F134         	movff	?___fladd+1,?___flsub+1
  7385  006EE2  C102  F135         	movff	?___fladd+2,?___flsub+2
  7386  006EE6  C103  F136         	movff	?___fladd+3,?___flsub+3
  7387  006EEA  0012               	return		;funcret
  7388  006EEC                     __end_of___flsub:
  7389                           	opt callstack 0
  7390                           
  7391 ;; *************** function ___fladd *****************
  7392 ;; Defined at:
  7393 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  b               4    0[BANK1 ] long 
  7396 ;;  a               4    4[BANK1 ] long 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  grs             1   15[BANK1 ] unsigned char 
  7399 ;;  bexp            1   14[BANK1 ] unsigned char 
  7400 ;;  aexp            1   13[BANK1 ] unsigned char 
  7401 ;;  signs           1   12[BANK1 ] unsigned char 
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  4    0[BANK1 ] unsigned char 
  7404 ;; Registers used:
  7405 ;;		wreg, status,2, status,0
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/0
  7408 ;;		On exit  : 0/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7411 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7414 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7415 ;;Total ram usage:       16 bytes
  7416 ;; Hardware stack levels used:    1
  7417 ;; Hardware stack levels required when called:   16
  7418 ;; This function calls:
  7419 ;;		Nothing
  7420 ;; This function is called by:
  7421 ;;		_ReadTemperature
  7422 ;;		_ReadHumidity
  7423 ;;		_efgtoa
  7424 ;;		___flsub
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text22
  7429  0033B2                     __ptext22:
  7430                           	opt callstack 0
  7431  0033B2                     ___fladd:
  7432                           	opt callstack 9
  7433                           
  7434                           ;incstack = 0
  7435  0033B2  0101               	movlb	1	; () banked
  7436  0033B4  5103               	movf	(___fladd@b+3)& (0+255),w,b
  7437  0033B6  0B80               	andlw	128
  7438  0033B8  6F0C               	movwf	___fladd@signs& (0+255),b
  7439  0033BA  5103               	movf	(___fladd@b+3)& (0+255),w,b
  7440  0033BC  2503               	addwf	(___fladd@b+3)& (0+255),w,b
  7441  0033BE  6F0E               	movwf	___fladd@bexp& (0+255),b
  7442                           
  7443                           ; BSR set to: 1
  7444  0033C0  BF02               	btfsc	(___fladd@b+2)& (0+255),7,b
  7445                           
  7446                           ; BSR set to: 1
  7447  0033C2  810E               	bsf	___fladd@bexp& (0+255),0,b
  7448                           
  7449                           ; BSR set to: 1
  7450  0033C4  510E               	movf	___fladd@bexp& (0+255),w,b
  7451  0033C6  B4D8               	btfsc	status,2,c
  7452  0033C8  D00D               	goto	l6579
  7453                           
  7454                           ; BSR set to: 1
  7455  0033CA  290E               	incf	___fladd@bexp& (0+255),w,b
  7456  0033CC  A4D8               	btfss	status,2,c
  7457  0033CE  D008               	goto	l6575
  7458                           
  7459                           ; BSR set to: 1
  7460  0033D0  0E00               	movlw	0
  7461  0033D2  6F00               	movwf	___fladd@b& (0+255),b
  7462  0033D4  0E00               	movlw	0
  7463  0033D6  6F01               	movwf	(___fladd@b+1)& (0+255),b
  7464  0033D8  0E00               	movlw	0
  7465  0033DA  6F02               	movwf	(___fladd@b+2)& (0+255),b
  7466  0033DC  0E00               	movlw	0
  7467  0033DE  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7468  0033E0                     l6575:
  7469                           
  7470                           ; BSR set to: 1
  7471  0033E0  8F02               	bsf	(___fladd@b+2)& (0+255),7,b
  7472  0033E2  D006               	goto	L7
  7473  0033E4                     l6579:
  7474                           
  7475                           ; BSR set to: 1
  7476  0033E4  0E00               	movlw	0
  7477  0033E6  6F00               	movwf	___fladd@b& (0+255),b
  7478  0033E8  0E00               	movlw	0
  7479  0033EA  6F01               	movwf	(___fladd@b+1)& (0+255),b
  7480  0033EC  0E00               	movlw	0
  7481  0033EE  6F02               	movwf	(___fladd@b+2)& (0+255),b
  7482  0033F0                     L7:
  7483  0033F0  0E00               	movlw	0
  7484  0033F2  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7485                           
  7486                           ; BSR set to: 1
  7487  0033F4  5107               	movf	(___fladd@a+3)& (0+255),w,b
  7488  0033F6  0B80               	andlw	128
  7489  0033F8  6F0D               	movwf	___fladd@aexp& (0+255),b
  7490                           
  7491                           ; BSR set to: 1
  7492  0033FA  510C               	movf	___fladd@signs& (0+255),w,b
  7493  0033FC  190D               	xorwf	___fladd@aexp& (0+255),w,b
  7494  0033FE  A4D8               	btfss	status,2,c
  7495                           
  7496                           ; BSR set to: 1
  7497  003400  8D0C               	bsf	___fladd@signs& (0+255),6,b
  7498                           
  7499                           ; BSR set to: 1
  7500  003402  5107               	movf	(___fladd@a+3)& (0+255),w,b
  7501  003404  2507               	addwf	(___fladd@a+3)& (0+255),w,b
  7502  003406  6F0D               	movwf	___fladd@aexp& (0+255),b
  7503                           
  7504                           ; BSR set to: 1
  7505  003408  BF06               	btfsc	(___fladd@a+2)& (0+255),7,b
  7506                           
  7507                           ; BSR set to: 1
  7508  00340A  810D               	bsf	___fladd@aexp& (0+255),0,b
  7509                           
  7510                           ; BSR set to: 1
  7511  00340C  510D               	movf	___fladd@aexp& (0+255),w,b
  7512  00340E  B4D8               	btfsc	status,2,c
  7513  003410  D00D               	goto	l6603
  7514                           
  7515                           ; BSR set to: 1
  7516  003412  290D               	incf	___fladd@aexp& (0+255),w,b
  7517  003414  A4D8               	btfss	status,2,c
  7518  003416  D008               	goto	l6599
  7519                           
  7520                           ; BSR set to: 1
  7521  003418  0E00               	movlw	0
  7522  00341A  6F04               	movwf	___fladd@a& (0+255),b
  7523  00341C  0E00               	movlw	0
  7524  00341E  6F05               	movwf	(___fladd@a+1)& (0+255),b
  7525  003420  0E00               	movlw	0
  7526  003422  6F06               	movwf	(___fladd@a+2)& (0+255),b
  7527  003424  0E00               	movlw	0
  7528  003426  6F07               	movwf	(___fladd@a+3)& (0+255),b
  7529  003428                     l6599:
  7530                           
  7531                           ; BSR set to: 1
  7532  003428  8F06               	bsf	(___fladd@a+2)& (0+255),7,b
  7533  00342A  D006               	goto	L8
  7534  00342C                     l6603:
  7535                           
  7536                           ; BSR set to: 1
  7537  00342C  0E00               	movlw	0
  7538  00342E  6F04               	movwf	___fladd@a& (0+255),b
  7539  003430  0E00               	movlw	0
  7540  003432  6F05               	movwf	(___fladd@a+1)& (0+255),b
  7541  003434  0E00               	movlw	0
  7542  003436  6F06               	movwf	(___fladd@a+2)& (0+255),b
  7543  003438                     L8:
  7544  003438  0E00               	movlw	0
  7545  00343A  6F07               	movwf	(___fladd@a+3)& (0+255),b
  7546                           
  7547                           ; BSR set to: 1
  7548  00343C  510E               	movf	___fladd@bexp& (0+255),w,b
  7549  00343E  5D0D               	subwf	___fladd@aexp& (0+255),w,b
  7550  003440  B0D8               	btfsc	status,0,c
  7551  003442  D022               	goto	l6641
  7552                           
  7553                           ; BSR set to: 1
  7554  003444  AD0C               	btfss	___fladd@signs& (0+255),6,b
  7555  003446  D002               	goto	l6611
  7556                           
  7557                           ; BSR set to: 1
  7558  003448  0E80               	movlw	128
  7559  00344A  1B0C               	xorwf	___fladd@signs& (0+255),f,b
  7560  00344C                     l6611:
  7561                           
  7562                           ; BSR set to: 1
  7563  00344C  C10E  F10F         	movff	___fladd@bexp,___fladd@grs
  7564                           
  7565                           ; BSR set to: 1
  7566  003450  C10D  F10E         	movff	___fladd@aexp,___fladd@bexp
  7567                           
  7568                           ; BSR set to: 1
  7569  003454  C10F  F10D         	movff	___fladd@grs,___fladd@aexp
  7570                           
  7571                           ; BSR set to: 1
  7572  003458  C100  F10F         	movff	___fladd@b,___fladd@grs
  7573                           
  7574                           ; BSR set to: 1
  7575  00345C  C104  F100         	movff	___fladd@a,___fladd@b
  7576                           
  7577                           ; BSR set to: 1
  7578  003460  C10F  F104         	movff	___fladd@grs,___fladd@a
  7579                           
  7580                           ; BSR set to: 1
  7581  003464  C101  F10F         	movff	___fladd@b+1,___fladd@grs
  7582                           
  7583                           ; BSR set to: 1
  7584  003468  C105  F101         	movff	___fladd@a+1,___fladd@b+1
  7585                           
  7586                           ; BSR set to: 1
  7587  00346C  C10F  F105         	movff	___fladd@grs,___fladd@a+1
  7588                           
  7589                           ; BSR set to: 1
  7590  003470  C102  F10F         	movff	___fladd@b+2,___fladd@grs
  7591                           
  7592                           ; BSR set to: 1
  7593  003474  C106  F102         	movff	___fladd@a+2,___fladd@b+2
  7594                           
  7595                           ; BSR set to: 1
  7596  003478  C10F  F106         	movff	___fladd@grs,___fladd@a+2
  7597                           
  7598                           ; BSR set to: 1
  7599  00347C  C103  F10F         	movff	___fladd@b+3,___fladd@grs
  7600                           
  7601                           ; BSR set to: 1
  7602  003480  C107  F103         	movff	___fladd@a+3,___fladd@b+3
  7603                           
  7604                           ; BSR set to: 1
  7605  003484  C10F  F107         	movff	___fladd@grs,___fladd@a+3
  7606  003488                     l6641:
  7607                           
  7608                           ; BSR set to: 1
  7609  003488  0E00               	movlw	0
  7610  00348A  6F0F               	movwf	___fladd@grs& (0+255),b
  7611                           
  7612                           ; BSR set to: 1
  7613  00348C  510E               	movf	___fladd@bexp& (0+255),w,b
  7614  00348E  C10D  F108         	movff	___fladd@aexp,??___fladd
  7615  003492  6B09               	clrf	(??___fladd+1)& (0+255),b
  7616  003494  5F08               	subwf	??___fladd& (0+255),f,b
  7617  003496  0E00               	movlw	0
  7618  003498  5B09               	subwfb	(??___fladd+1)& (0+255),f,b
  7619  00349A  BF09               	btfsc	(??___fladd+1)& (0+255),7,b
  7620  00349C  D02C               	goto	l1285
  7621  00349E  5109               	movf	(??___fladd+1)& (0+255),w,b
  7622  0034A0  E104               	bnz	u8860
  7623  0034A2  0E1A               	movlw	26
  7624  0034A4  5D08               	subwf	??___fladd& (0+255),w,b
  7625  0034A6  A0D8               	btfss	status,0,c
  7626  0034A8  D026               	goto	l1285
  7627  0034AA                     u8860:
  7628                           
  7629                           ; BSR set to: 1
  7630  0034AA  5100               	movf	___fladd@b& (0+255),w,b
  7631  0034AC  1101               	iorwf	(___fladd@b+1)& (0+255),w,b
  7632  0034AE  1102               	iorwf	(___fladd@b+2)& (0+255),w,b
  7633  0034B0  1103               	iorwf	(___fladd@b+3)& (0+255),w,b
  7634  0034B2  B4D8               	btfsc	status,2,c
  7635  0034B4  D002               	goto	u8870
  7636  0034B6  0E01               	movlw	1
  7637  0034B8  D001               	goto	u8880
  7638  0034BA                     u8870:
  7639  0034BA  0E00               	movlw	0
  7640  0034BC                     u8880:
  7641  0034BC  6F0F               	movwf	___fladd@grs& (0+255),b
  7642                           
  7643                           ; BSR set to: 1
  7644  0034BE  0E00               	movlw	0
  7645  0034C0  6F00               	movwf	___fladd@b& (0+255),b
  7646  0034C2  0E00               	movlw	0
  7647  0034C4  6F01               	movwf	(___fladd@b+1)& (0+255),b
  7648  0034C6  0E00               	movlw	0
  7649  0034C8  6F02               	movwf	(___fladd@b+2)& (0+255),b
  7650  0034CA  0E00               	movlw	0
  7651  0034CC  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7652                           
  7653                           ; BSR set to: 1
  7654  0034CE  C10D  F10E         	movff	___fladd@aexp,___fladd@bexp
  7655  0034D2  D015               	goto	u8910
  7656  0034D4                     l1286:
  7657                           
  7658                           ; BSR set to: 1
  7659  0034D4  A10F               	btfss	___fladd@grs& (0+255),0,b
  7660  0034D6  D005               	goto	l6653
  7661                           
  7662                           ; BSR set to: 1
  7663  0034D8  90D8               	bcf	status,0,c
  7664  0034DA  310F               	rrcf	___fladd@grs& (0+255),w,b
  7665  0034DC  0901               	iorlw	1
  7666  0034DE  6F0F               	movwf	___fladd@grs& (0+255),b
  7667  0034E0  D002               	goto	l6655
  7668  0034E2                     l6653:
  7669                           
  7670                           ; BSR set to: 1
  7671  0034E2  90D8               	bcf	status,0,c
  7672  0034E4  330F               	rrcf	___fladd@grs& (0+255),f,b
  7673  0034E6                     l6655:
  7674                           
  7675                           ; BSR set to: 1
  7676  0034E6  B100               	btfsc	___fladd@b& (0+255),0,b
  7677                           
  7678                           ; BSR set to: 1
  7679  0034E8  8F0F               	bsf	___fladd@grs& (0+255),7,b
  7680                           
  7681                           ; BSR set to: 1
  7682  0034EA  3503               	rlcf	(___fladd@b+3)& (0+255),w,b
  7683  0034EC  3303               	rrcf	(___fladd@b+3)& (0+255),f,b
  7684  0034EE  3302               	rrcf	(___fladd@b+2)& (0+255),f,b
  7685  0034F0  3301               	rrcf	(___fladd@b+1)& (0+255),f,b
  7686  0034F2  3300               	rrcf	___fladd@b& (0+255),f,b
  7687                           
  7688                           ; BSR set to: 1
  7689  0034F4  2B0E               	incf	___fladd@bexp& (0+255),f,b
  7690  0034F6                     l1285:
  7691                           
  7692                           ; BSR set to: 1
  7693  0034F6  510D               	movf	___fladd@aexp& (0+255),w,b
  7694  0034F8  5D0E               	subwf	___fladd@bexp& (0+255),w,b
  7695  0034FA  A0D8               	btfss	status,0,c
  7696  0034FC  D7EB               	goto	l1286
  7697  0034FE                     u8910:
  7698                           
  7699                           ; BSR set to: 1
  7700  0034FE  BD0C               	btfsc	___fladd@signs& (0+255),6,b
  7701  003500  D028               	goto	l6687
  7702                           
  7703                           ; BSR set to: 1
  7704  003502  510E               	movf	___fladd@bexp& (0+255),w,b
  7705  003504  A4D8               	btfss	status,2,c
  7706  003506  D009               	goto	l6669
  7707                           
  7708                           ; BSR set to: 1
  7709  003508  0E00               	movlw	0
  7710  00350A  6F00               	movwf	?___fladd& (0+255),b
  7711  00350C  0E00               	movlw	0
  7712  00350E  6F01               	movwf	(?___fladd+1)& (0+255),b
  7713  003510  0E00               	movlw	0
  7714  003512  6F02               	movwf	(?___fladd+2)& (0+255),b
  7715  003514  0E00               	movlw	0
  7716  003516  6F03               	movwf	(?___fladd+3)& (0+255),b
  7717  003518  0012               	return	
  7718  00351A                     l6669:
  7719                           
  7720                           ; BSR set to: 1
  7721  00351A  5104               	movf	___fladd@a& (0+255),w,b
  7722  00351C  2700               	addwf	___fladd@b& (0+255),f,b
  7723  00351E  5105               	movf	(___fladd@a+1)& (0+255),w,b
  7724  003520  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
  7725  003522  5106               	movf	(___fladd@a+2)& (0+255),w,b
  7726  003524  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
  7727  003526  5107               	movf	(___fladd@a+3)& (0+255),w,b
  7728  003528  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
  7729                           
  7730                           ; BSR set to: 1
  7731  00352A  A103               	btfss	(___fladd@b+3)& (0+255),0,b
  7732  00352C  D071               	goto	u9040
  7733                           
  7734                           ; BSR set to: 1
  7735  00352E  A10F               	btfss	___fladd@grs& (0+255),0,b
  7736  003530  D005               	goto	l6677
  7737                           
  7738                           ; BSR set to: 1
  7739  003532  90D8               	bcf	status,0,c
  7740  003534  310F               	rrcf	___fladd@grs& (0+255),w,b
  7741  003536  0901               	iorlw	1
  7742  003538  6F0F               	movwf	___fladd@grs& (0+255),b
  7743  00353A  D002               	goto	l6679
  7744  00353C                     l6677:
  7745                           
  7746                           ; BSR set to: 1
  7747  00353C  90D8               	bcf	status,0,c
  7748  00353E  330F               	rrcf	___fladd@grs& (0+255),f,b
  7749  003540                     l6679:
  7750                           
  7751                           ; BSR set to: 1
  7752  003540  B100               	btfsc	___fladd@b& (0+255),0,b
  7753                           
  7754                           ; BSR set to: 1
  7755  003542  8F0F               	bsf	___fladd@grs& (0+255),7,b
  7756                           
  7757                           ; BSR set to: 1
  7758  003544  3503               	rlcf	(___fladd@b+3)& (0+255),w,b
  7759  003546  3303               	rrcf	(___fladd@b+3)& (0+255),f,b
  7760  003548  3302               	rrcf	(___fladd@b+2)& (0+255),f,b
  7761  00354A  3301               	rrcf	(___fladd@b+1)& (0+255),f,b
  7762  00354C  3300               	rrcf	___fladd@b& (0+255),f,b
  7763                           
  7764                           ; BSR set to: 1
  7765  00354E  2B0E               	incf	___fladd@bexp& (0+255),f,b
  7766  003550  D05F               	goto	u9040
  7767  003552                     l6687:
  7768                           
  7769                           ; BSR set to: 1
  7770  003552  5104               	movf	___fladd@a& (0+255),w,b
  7771  003554  5D00               	subwf	___fladd@b& (0+255),w,b
  7772  003556  5105               	movf	(___fladd@a+1)& (0+255),w,b
  7773  003558  5901               	subwfb	(___fladd@b+1)& (0+255),w,b
  7774  00355A  5106               	movf	(___fladd@a+2)& (0+255),w,b
  7775  00355C  5902               	subwfb	(___fladd@b+2)& (0+255),w,b
  7776  00355E  5103               	movf	(___fladd@b+3)& (0+255),w,b
  7777  003560  0A80               	xorlw	128
  7778  003562  6F08               	movwf	??___fladd& (0+255),b
  7779  003564  5107               	movf	(___fladd@a+3)& (0+255),w,b
  7780  003566  0A80               	xorlw	128
  7781  003568  5908               	subwfb	??___fladd& (0+255),w,b
  7782  00356A  B0D8               	btfsc	status,0,c
  7783  00356C  D025               	goto	l6697
  7784                           
  7785                           ; BSR set to: 1
  7786  00356E  5100               	movf	___fladd@b& (0+255),w,b
  7787  003570  5D04               	subwf	___fladd@a& (0+255),w,b
  7788  003572  6F08               	movwf	??___fladd& (0+255),b
  7789  003574  5101               	movf	(___fladd@b+1)& (0+255),w,b
  7790  003576  5905               	subwfb	(___fladd@a+1)& (0+255),w,b
  7791  003578  6F09               	movwf	(??___fladd+1)& (0+255),b
  7792  00357A  5102               	movf	(___fladd@b+2)& (0+255),w,b
  7793  00357C  5906               	subwfb	(___fladd@a+2)& (0+255),w,b
  7794  00357E  6F0A               	movwf	(??___fladd+2)& (0+255),b
  7795  003580  5103               	movf	(___fladd@b+3)& (0+255),w,b
  7796  003582  5907               	subwfb	(___fladd@a+3)& (0+255),w,b
  7797  003584  6F0B               	movwf	(??___fladd+3)& (0+255),b
  7798  003586  0EFF               	movlw	255
  7799  003588  2508               	addwf	??___fladd& (0+255),w,b
  7800  00358A  6F00               	movwf	___fladd@b& (0+255),b
  7801  00358C  0EFF               	movlw	255
  7802  00358E  2109               	addwfc	(??___fladd+1)& (0+255),w,b
  7803  003590  6F01               	movwf	(___fladd@b+1)& (0+255),b
  7804  003592  0EFF               	movlw	255
  7805  003594  210A               	addwfc	(??___fladd+2)& (0+255),w,b
  7806  003596  6F02               	movwf	(___fladd@b+2)& (0+255),b
  7807  003598  0EFF               	movlw	255
  7808  00359A  210B               	addwfc	(??___fladd+3)& (0+255),w,b
  7809  00359C  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7810  00359E  0E80               	movlw	128
  7811  0035A0  1B0C               	xorwf	___fladd@signs& (0+255),f,b
  7812                           
  7813                           ; BSR set to: 1
  7814  0035A2  6D0F               	negf	___fladd@grs& (0+255),b
  7815                           
  7816                           ; BSR set to: 1
  7817  0035A4  510F               	movf	___fladd@grs& (0+255),w,b
  7818  0035A6  A4D8               	btfss	status,2,c
  7819  0035A8  D00F               	goto	l1301
  7820                           
  7821                           ; BSR set to: 1
  7822  0035AA  0E01               	movlw	1
  7823  0035AC  2700               	addwf	___fladd@b& (0+255),f,b
  7824  0035AE  0E00               	movlw	0
  7825  0035B0  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
  7826  0035B2  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
  7827  0035B4  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
  7828  0035B6  D008               	goto	l1301
  7829  0035B8                     l6697:
  7830                           
  7831                           ; BSR set to: 1
  7832  0035B8  5104               	movf	___fladd@a& (0+255),w,b
  7833  0035BA  5F00               	subwf	___fladd@b& (0+255),f,b
  7834  0035BC  5105               	movf	(___fladd@a+1)& (0+255),w,b
  7835  0035BE  5B01               	subwfb	(___fladd@b+1)& (0+255),f,b
  7836  0035C0  5106               	movf	(___fladd@a+2)& (0+255),w,b
  7837  0035C2  5B02               	subwfb	(___fladd@b+2)& (0+255),f,b
  7838  0035C4  5107               	movf	(___fladd@a+3)& (0+255),w,b
  7839  0035C6  5B03               	subwfb	(___fladd@b+3)& (0+255),f,b
  7840  0035C8                     l1301:
  7841                           
  7842                           ; BSR set to: 1
  7843  0035C8  5100               	movf	___fladd@b& (0+255),w,b
  7844  0035CA  1101               	iorwf	(___fladd@b+1)& (0+255),w,b
  7845  0035CC  1102               	iorwf	(___fladd@b+2)& (0+255),w,b
  7846  0035CE  1103               	iorwf	(___fladd@b+3)& (0+255),w,b
  7847  0035D0  A4D8               	btfss	status,2,c
  7848  0035D2  D01C               	goto	l6721
  7849                           
  7850                           ; BSR set to: 1
  7851  0035D4  510F               	movf	___fladd@grs& (0+255),w,b
  7852  0035D6  A4D8               	btfss	status,2,c
  7853  0035D8  D019               	goto	l6721
  7854                           
  7855                           ; BSR set to: 1
  7856  0035DA  0E00               	movlw	0
  7857  0035DC  6F00               	movwf	?___fladd& (0+255),b
  7858  0035DE  0E00               	movlw	0
  7859  0035E0  6F01               	movwf	(?___fladd+1)& (0+255),b
  7860  0035E2  0E00               	movlw	0
  7861  0035E4  6F02               	movwf	(?___fladd+2)& (0+255),b
  7862  0035E6  0E00               	movlw	0
  7863  0035E8  6F03               	movwf	(?___fladd+3)& (0+255),b
  7864  0035EA  0012               	return	
  7865  0035EC                     l6705:
  7866                           
  7867                           ; BSR set to: 1
  7868  0035EC  90D8               	bcf	status,0,c
  7869  0035EE  3700               	rlcf	___fladd@b& (0+255),f,b
  7870  0035F0  3701               	rlcf	(___fladd@b+1)& (0+255),f,b
  7871  0035F2  3702               	rlcf	(___fladd@b+2)& (0+255),f,b
  7872  0035F4  3703               	rlcf	(___fladd@b+3)& (0+255),f,b
  7873                           
  7874                           ; BSR set to: 1
  7875  0035F6  BF0F               	btfsc	___fladd@grs& (0+255),7,b
  7876                           
  7877                           ; BSR set to: 1
  7878  0035F8  8100               	bsf	___fladd@b& (0+255),0,b
  7879                           
  7880                           ; BSR set to: 1
  7881  0035FA  A10F               	btfss	___fladd@grs& (0+255),0,b
  7882  0035FC  D002               	goto	l6715
  7883                           
  7884                           ; BSR set to: 1
  7885  0035FE  80D8               	bsf	status,0,c
  7886  003600  D001               	goto	L9
  7887  003602                     l6715:
  7888                           
  7889                           ; BSR set to: 1
  7890  003602  90D8               	bcf	status,0,c
  7891  003604                     L9:
  7892  003604  370F               	rlcf	___fladd@grs& (0+255),f,b
  7893                           
  7894                           ; BSR set to: 1
  7895  003606  510E               	movf	___fladd@bexp& (0+255),w,b
  7896  003608  A4D8               	btfss	status,2,c
  7897                           
  7898                           ; BSR set to: 1
  7899  00360A  070E               	decf	___fladd@bexp& (0+255),f,b
  7900  00360C                     l6721:
  7901                           
  7902                           ; BSR set to: 1
  7903  00360C  AF02               	btfss	(___fladd@b+2)& (0+255),7,b
  7904  00360E  D7EE               	goto	l6705
  7905  003610                     u9040:
  7906                           
  7907                           ; BSR set to: 1
  7908  003610  0E00               	movlw	0
  7909  003612  6F0D               	movwf	___fladd@aexp& (0+255),b
  7910                           
  7911                           ; BSR set to: 1
  7912  003614  AF0F               	btfss	___fladd@grs& (0+255),7,b
  7913  003616  D00B               	goto	l1310
  7914                           
  7915                           ; BSR set to: 1
  7916  003618  C10F  F108         	movff	___fladd@grs,??___fladd
  7917  00361C  0E7F               	movlw	127
  7918  00361E  1708               	andwf	??___fladd& (0+255),f,b
  7919  003620  B4D8               	btfsc	status,2,c
  7920  003622  D003               	goto	l1311
  7921  003624                     u9060:
  7922                           
  7923                           ; BSR set to: 1
  7924  003624  0E01               	movlw	1
  7925  003626  6F0D               	movwf	___fladd@aexp& (0+255),b
  7926  003628  D002               	goto	l1310
  7927  00362A                     l1311:
  7928                           
  7929                           ; BSR set to: 1
  7930  00362A  B100               	btfsc	___fladd@b& (0+255),0,b
  7931  00362C  D7FB               	goto	u9060
  7932  00362E                     l1310:
  7933                           
  7934                           ; BSR set to: 1
  7935  00362E  510D               	movf	___fladd@aexp& (0+255),w,b
  7936  003630  B4D8               	btfsc	status,2,c
  7937  003632  D020               	goto	l6741
  7938                           
  7939                           ; BSR set to: 1
  7940  003634  0E01               	movlw	1
  7941  003636  2700               	addwf	___fladd@b& (0+255),f,b
  7942  003638  0E00               	movlw	0
  7943  00363A  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
  7944  00363C  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
  7945  00363E  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
  7946                           
  7947                           ; BSR set to: 1
  7948  003640  A103               	btfss	(___fladd@b+3)& (0+255),0,b
  7949  003642  D018               	goto	l6741
  7950                           
  7951                           ; BSR set to: 1
  7952  003644  C100  F108         	movff	___fladd@b,??___fladd
  7953  003648  C101  F109         	movff	___fladd@b+1,??___fladd+1
  7954  00364C  C102  F10A         	movff	___fladd@b+2,??___fladd+2
  7955  003650  C103  F10B         	movff	___fladd@b+3,??___fladd+3
  7956  003654  350B               	rlcf	(??___fladd+3)& (0+255),w,b
  7957  003656  330B               	rrcf	(??___fladd+3)& (0+255),f,b
  7958  003658  330A               	rrcf	(??___fladd+2)& (0+255),f,b
  7959  00365A  3309               	rrcf	(??___fladd+1)& (0+255),f,b
  7960  00365C  3308               	rrcf	??___fladd& (0+255),f,b
  7961  00365E  C108  F100         	movff	??___fladd,___fladd@b
  7962  003662  C109  F101         	movff	??___fladd+1,___fladd@b+1
  7963  003666  C10A  F102         	movff	??___fladd+2,___fladd@b+2
  7964  00366A  C10B  F103         	movff	??___fladd+3,___fladd@b+3
  7965  00366E  290E               	incf	___fladd@bexp& (0+255),w,b
  7966  003670  A4D8               	btfss	status,2,c
  7967                           
  7968                           ; BSR set to: 1
  7969  003672  2B0E               	incf	___fladd@bexp& (0+255),f,b
  7970  003674                     l6741:
  7971                           
  7972                           ; BSR set to: 1
  7973  003674  290E               	incf	___fladd@bexp& (0+255),w,b
  7974  003676  B4D8               	btfsc	status,2,c
  7975  003678  D003               	goto	u9120
  7976                           
  7977                           ; BSR set to: 1
  7978  00367A  510E               	movf	___fladd@bexp& (0+255),w,b
  7979  00367C  A4D8               	btfss	status,2,c
  7980  00367E  D00D               	goto	l6749
  7981  003680                     u9120:
  7982                           
  7983                           ; BSR set to: 1
  7984  003680  0E00               	movlw	0
  7985  003682  6F00               	movwf	___fladd@b& (0+255),b
  7986  003684  0E00               	movlw	0
  7987  003686  6F01               	movwf	(___fladd@b+1)& (0+255),b
  7988  003688  0E00               	movlw	0
  7989  00368A  6F02               	movwf	(___fladd@b+2)& (0+255),b
  7990  00368C  0E00               	movlw	0
  7991  00368E  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7992  003690  510E               	movf	___fladd@bexp& (0+255),w,b
  7993  003692  A4D8               	btfss	status,2,c
  7994  003694  D002               	goto	l6749
  7995                           
  7996                           ; BSR set to: 1
  7997  003696  0E00               	movlw	0
  7998  003698  6F0C               	movwf	___fladd@signs& (0+255),b
  7999  00369A                     l6749:
  8000                           
  8001                           ; BSR set to: 1
  8002  00369A  A10E               	btfss	___fladd@bexp& (0+255),0,b
  8003  00369C  D002               	goto	l6753
  8004                           
  8005                           ; BSR set to: 1
  8006  00369E  8F02               	bsf	(___fladd@b+2)& (0+255),7,b
  8007  0036A0  D001               	goto	l6755
  8008  0036A2                     l6753:
  8009                           
  8010                           ; BSR set to: 1
  8011  0036A2  9F02               	bcf	(___fladd@b+2)& (0+255),7,b
  8012  0036A4                     l6755:
  8013                           
  8014                           ; BSR set to: 1
  8015  0036A4  90D8               	bcf	status,0,c
  8016  0036A6  310E               	rrcf	___fladd@bexp& (0+255),w,b
  8017  0036A8  6F03               	movwf	(___fladd@b+3)& (0+255),b
  8018                           
  8019                           ; BSR set to: 1
  8020  0036AA  BF0C               	btfsc	___fladd@signs& (0+255),7,b
  8021                           
  8022                           ; BSR set to: 1
  8023  0036AC  8F03               	bsf	(___fladd@b+3)& (0+255),7,b
  8024                           
  8025                           ; BSR set to: 1
  8026  0036AE  C100  F100         	movff	___fladd@b,?___fladd
  8027  0036B2  C101  F101         	movff	___fladd@b+1,?___fladd+1
  8028  0036B6  C102  F102         	movff	___fladd@b+2,?___fladd+2
  8029  0036BA  C103  F103         	movff	___fladd@b+3,?___fladd+3
  8030                           
  8031                           ; BSR set to: 1
  8032  0036BE  0012               	return		;funcret
  8033  0036C0                     __end_of___fladd:
  8034                           	opt callstack 0
  8035                           
  8036 ;; *************** function ___flneg *****************
  8037 ;; Defined at:
  8038 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  f1              4    0[BANK1 ] unsigned char 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  4    0[BANK1 ] unsigned char 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8052 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;Total ram usage:        4 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:   16
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_efgtoa
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text23
  8067  007190                     __ptext23:
  8068                           	opt callstack 0
  8069  007190                     ___flneg:
  8070                           	opt callstack 10
  8071                           
  8072                           ; BSR set to: 1
  8073                           ;incstack = 0
  8074  007190  0101               	movlb	1	; () banked
  8075  007192  5100               	movf	___flneg@f1& (0+255),w,b
  8076  007194  1101               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8077  007196  1102               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8078  007198  1103               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8079  00719A  B4D8               	btfsc	status,2,c
  8080  00719C  D008               	goto	l7441
  8081                           
  8082                           ; BSR set to: 1
  8083  00719E  0E00               	movlw	0
  8084  0071A0  1B00               	xorwf	___flneg@f1& (0+255),f,b
  8085  0071A2  0E00               	movlw	0
  8086  0071A4  1B01               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8087  0071A6  0E00               	movlw	0
  8088  0071A8  1B02               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8089  0071AA  0E80               	movlw	128
  8090  0071AC  1B03               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8091  0071AE                     l7441:
  8092                           
  8093                           ; BSR set to: 1
  8094  0071AE  C100  F100         	movff	___flneg@f1,?___flneg
  8095  0071B2  C101  F101         	movff	___flneg@f1+1,?___flneg+1
  8096  0071B6  C102  F102         	movff	___flneg@f1+2,?___flneg+2
  8097  0071BA  C103  F103         	movff	___flneg@f1+3,?___flneg+3
  8098                           
  8099                           ; BSR set to: 1
  8100  0071BE  0012               	return		;funcret
  8101  0071C0                     __end_of___flneg:
  8102                           	opt callstack 0
  8103                           
  8104 ;; *************** function ___flmul *****************
  8105 ;; Defined at:
  8106 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;  b               4   26[BANK1 ] unsigned char 
  8109 ;;  a               4   30[BANK1 ] unsigned char 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  prod            4   45[BANK1 ] struct .
  8112 ;;  grs             4   39[BANK1 ] unsigned long 
  8113 ;;  temp            2   49[BANK1 ] struct .
  8114 ;;  bexp            1   44[BANK1 ] unsigned char 
  8115 ;;  aexp            1   43[BANK1 ] unsigned char 
  8116 ;;  sign            1   38[BANK1 ] unsigned char 
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  4   26[BANK1 ] unsigned char 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0, prodl, prodh
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8126 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;Total ram usage:       25 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:   16
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_ReadTemperature
  8137 ;;		_efgtoa
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text24
  8142  002D0C                     __ptext24:
  8143                           	opt callstack 0
  8144  002D0C                     ___flmul:
  8145                           	opt callstack 10
  8146                           
  8147                           ; BSR set to: 1
  8148                           ;incstack = 0
  8149  002D0C  0101               	movlb	1	; () banked
  8150  002D0E  511D               	movf	(___flmul@b+3)& (0+255),w,b
  8151  002D10  0B80               	andlw	128
  8152  002D12  6F26               	movwf	___flmul@sign& (0+255),b
  8153  002D14  511D               	movf	(___flmul@b+3)& (0+255),w,b
  8154  002D16  251D               	addwf	(___flmul@b+3)& (0+255),w,b
  8155  002D18  6F2C               	movwf	___flmul@bexp& (0+255),b
  8156                           
  8157                           ; BSR set to: 1
  8158  002D1A  BF1C               	btfsc	(___flmul@b+2)& (0+255),7,b
  8159                           
  8160                           ; BSR set to: 1
  8161  002D1C  812C               	bsf	___flmul@bexp& (0+255),0,b
  8162                           
  8163                           ; BSR set to: 1
  8164  002D1E  512C               	movf	___flmul@bexp& (0+255),w,b
  8165  002D20  B4D8               	btfsc	status,2,c
  8166  002D22  D00D               	goto	l7197
  8167                           
  8168                           ; BSR set to: 1
  8169  002D24  292C               	incf	___flmul@bexp& (0+255),w,b
  8170  002D26  A4D8               	btfss	status,2,c
  8171  002D28  D008               	goto	l7195
  8172                           
  8173                           ; BSR set to: 1
  8174  002D2A  0E00               	movlw	0
  8175  002D2C  6F1A               	movwf	___flmul@b& (0+255),b
  8176  002D2E  0E00               	movlw	0
  8177  002D30  6F1B               	movwf	(___flmul@b+1)& (0+255),b
  8178  002D32  0E00               	movlw	0
  8179  002D34  6F1C               	movwf	(___flmul@b+2)& (0+255),b
  8180  002D36  0E00               	movlw	0
  8181  002D38  6F1D               	movwf	(___flmul@b+3)& (0+255),b
  8182  002D3A                     l7195:
  8183                           
  8184                           ; BSR set to: 1
  8185  002D3A  8F1C               	bsf	(___flmul@b+2)& (0+255),7,b
  8186  002D3C  D008               	goto	l7199
  8187  002D3E                     l7197:
  8188                           
  8189                           ; BSR set to: 1
  8190  002D3E  0E00               	movlw	0
  8191  002D40  6F1A               	movwf	___flmul@b& (0+255),b
  8192  002D42  0E00               	movlw	0
  8193  002D44  6F1B               	movwf	(___flmul@b+1)& (0+255),b
  8194  002D46  0E00               	movlw	0
  8195  002D48  6F1C               	movwf	(___flmul@b+2)& (0+255),b
  8196  002D4A  0E00               	movlw	0
  8197  002D4C  6F1D               	movwf	(___flmul@b+3)& (0+255),b
  8198  002D4E                     l7199:
  8199                           
  8200                           ; BSR set to: 1
  8201  002D4E  5121               	movf	(___flmul@a+3)& (0+255),w,b
  8202  002D50  0B80               	andlw	128
  8203  002D52  1B26               	xorwf	___flmul@sign& (0+255),f,b
  8204                           
  8205                           ; BSR set to: 1
  8206  002D54  5121               	movf	(___flmul@a+3)& (0+255),w,b
  8207  002D56  2521               	addwf	(___flmul@a+3)& (0+255),w,b
  8208  002D58  6F2B               	movwf	___flmul@aexp& (0+255),b
  8209                           
  8210                           ; BSR set to: 1
  8211  002D5A  BF20               	btfsc	(___flmul@a+2)& (0+255),7,b
  8212                           
  8213                           ; BSR set to: 1
  8214  002D5C  812B               	bsf	___flmul@aexp& (0+255),0,b
  8215                           
  8216                           ; BSR set to: 1
  8217  002D5E  512B               	movf	___flmul@aexp& (0+255),w,b
  8218  002D60  B4D8               	btfsc	status,2,c
  8219  002D62  D00D               	goto	l7215
  8220                           
  8221                           ; BSR set to: 1
  8222  002D64  292B               	incf	___flmul@aexp& (0+255),w,b
  8223  002D66  A4D8               	btfss	status,2,c
  8224  002D68  D008               	goto	l7213
  8225                           
  8226                           ; BSR set to: 1
  8227  002D6A  0E00               	movlw	0
  8228  002D6C  6F1E               	movwf	___flmul@a& (0+255),b
  8229  002D6E  0E00               	movlw	0
  8230  002D70  6F1F               	movwf	(___flmul@a+1)& (0+255),b
  8231  002D72  0E00               	movlw	0
  8232  002D74  6F20               	movwf	(___flmul@a+2)& (0+255),b
  8233  002D76  0E00               	movlw	0
  8234  002D78  6F21               	movwf	(___flmul@a+3)& (0+255),b
  8235  002D7A                     l7213:
  8236                           
  8237                           ; BSR set to: 1
  8238  002D7A  8F20               	bsf	(___flmul@a+2)& (0+255),7,b
  8239  002D7C  D008               	goto	l1370
  8240  002D7E                     l7215:
  8241                           
  8242                           ; BSR set to: 1
  8243  002D7E  0E00               	movlw	0
  8244  002D80  6F1E               	movwf	___flmul@a& (0+255),b
  8245  002D82  0E00               	movlw	0
  8246  002D84  6F1F               	movwf	(___flmul@a+1)& (0+255),b
  8247  002D86  0E00               	movlw	0
  8248  002D88  6F20               	movwf	(___flmul@a+2)& (0+255),b
  8249  002D8A  0E00               	movlw	0
  8250  002D8C  6F21               	movwf	(___flmul@a+3)& (0+255),b
  8251  002D8E                     l1370:
  8252                           
  8253                           ; BSR set to: 1
  8254  002D8E  512B               	movf	___flmul@aexp& (0+255),w,b
  8255  002D90  B4D8               	btfsc	status,2,c
  8256  002D92  D003               	goto	u10040
  8257                           
  8258                           ; BSR set to: 1
  8259  002D94  512C               	movf	___flmul@bexp& (0+255),w,b
  8260  002D96  A4D8               	btfss	status,2,c
  8261  002D98  D009               	goto	l7223
  8262  002D9A                     u10040:
  8263                           
  8264                           ; BSR set to: 1
  8265  002D9A  0E00               	movlw	0
  8266  002D9C  6F1A               	movwf	?___flmul& (0+255),b
  8267  002D9E  0E00               	movlw	0
  8268  002DA0  6F1B               	movwf	(?___flmul+1)& (0+255),b
  8269  002DA2  0E00               	movlw	0
  8270  002DA4  6F1C               	movwf	(?___flmul+2)& (0+255),b
  8271  002DA6  0E00               	movlw	0
  8272  002DA8  6F1D               	movwf	(?___flmul+3)& (0+255),b
  8273  002DAA  0012               	return	
  8274  002DAC                     l7223:
  8275                           
  8276                           ; BSR set to: 1
  8277  002DAC  5120               	movf	(___flmul@a+2)& (0+255),w,b
  8278  002DAE  031A               	mulwf	___flmul@b& (0+255),b
  8279  002DB0  CFF3 F131          	movff	prodl,___flmul@temp
  8280  002DB4  CFF4 F132          	movff	prodh,___flmul@temp+1
  8281                           
  8282                           ; BSR set to: 1
  8283  002DB8  5131               	movf	___flmul@temp& (0+255),w,b
  8284  002DBA  6F27               	movwf	___flmul@grs& (0+255),b
  8285  002DBC  6B28               	clrf	(___flmul@grs+1)& (0+255),b
  8286  002DBE  6B29               	clrf	(___flmul@grs+2)& (0+255),b
  8287  002DC0  6B2A               	clrf	(___flmul@grs+3)& (0+255),b
  8288                           
  8289                           ; BSR set to: 1
  8290  002DC2  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8291  002DC4  6F2D               	movwf	___flmul@prod& (0+255),b
  8292  002DC6  6B2E               	clrf	(___flmul@prod+1)& (0+255),b
  8293  002DC8  6B2F               	clrf	(___flmul@prod+2)& (0+255),b
  8294  002DCA  6B30               	clrf	(___flmul@prod+3)& (0+255),b
  8295  002DCC  511F               	movf	(___flmul@a+1)& (0+255),w,b
  8296  002DCE  031B               	mulwf	(___flmul@b+1)& (0+255),b
  8297  002DD0  CFF3 F131          	movff	prodl,___flmul@temp
  8298  002DD4  CFF4 F132          	movff	prodh,___flmul@temp+1
  8299                           
  8300                           ; BSR set to: 1
  8301  002DD8  5131               	movf	___flmul@temp& (0+255),w,b
  8302  002DDA  2727               	addwf	___flmul@grs& (0+255),f,b
  8303  002DDC  0E00               	movlw	0
  8304  002DDE  2328               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8305  002DE0  2329               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8306  002DE2  232A               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8307                           
  8308                           ; BSR set to: 1
  8309  002DE4  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8310  002DE6  272D               	addwf	___flmul@prod& (0+255),f,b
  8311  002DE8  0E00               	movlw	0
  8312  002DEA  232E               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8313  002DEC  232F               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8314  002DEE  2330               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8315  002DF0  511E               	movf	___flmul@a& (0+255),w,b
  8316  002DF2  031C               	mulwf	(___flmul@b+2)& (0+255),b
  8317  002DF4  CFF3 F131          	movff	prodl,___flmul@temp
  8318  002DF8  CFF4 F132          	movff	prodh,___flmul@temp+1
  8319                           
  8320                           ; BSR set to: 1
  8321  002DFC  5131               	movf	___flmul@temp& (0+255),w,b
  8322  002DFE  2727               	addwf	___flmul@grs& (0+255),f,b
  8323  002E00  0E00               	movlw	0
  8324  002E02  2328               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8325  002E04  2329               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8326  002E06  232A               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8327                           
  8328                           ; BSR set to: 1
  8329  002E08  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8330  002E0A  272D               	addwf	___flmul@prod& (0+255),f,b
  8331  002E0C  0E00               	movlw	0
  8332  002E0E  232E               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8333  002E10  232F               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8334  002E12  2330               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8335                           
  8336                           ; BSR set to: 1
  8337  002E14  C129  F12A         	movff	___flmul@grs+2,___flmul@grs+3
  8338  002E18  C128  F129         	movff	___flmul@grs+1,___flmul@grs+2
  8339  002E1C  C127  F128         	movff	___flmul@grs,___flmul@grs+1
  8340  002E20  6B27               	clrf	___flmul@grs& (0+255),b
  8341                           
  8342                           ; BSR set to: 1
  8343  002E22  511E               	movf	___flmul@a& (0+255),w,b
  8344  002E24  031B               	mulwf	(___flmul@b+1)& (0+255),b
  8345  002E26  CFF3 F131          	movff	prodl,___flmul@temp
  8346  002E2A  CFF4 F132          	movff	prodh,___flmul@temp+1
  8347                           
  8348                           ; BSR set to: 1
  8349  002E2E  5131               	movf	___flmul@temp& (0+255),w,b
  8350  002E30  2727               	addwf	___flmul@grs& (0+255),f,b
  8351  002E32  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8352  002E34  2328               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8353  002E36  0E00               	movlw	0
  8354  002E38  2329               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8355  002E3A  0E00               	movlw	0
  8356  002E3C  232A               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8357                           
  8358                           ; BSR set to: 1
  8359  002E3E  511F               	movf	(___flmul@a+1)& (0+255),w,b
  8360  002E40  031A               	mulwf	___flmul@b& (0+255),b
  8361  002E42  CFF3 F131          	movff	prodl,___flmul@temp
  8362  002E46  CFF4 F132          	movff	prodh,___flmul@temp+1
  8363                           
  8364                           ; BSR set to: 1
  8365  002E4A  5131               	movf	___flmul@temp& (0+255),w,b
  8366  002E4C  2727               	addwf	___flmul@grs& (0+255),f,b
  8367  002E4E  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8368  002E50  2328               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8369  002E52  0E00               	movlw	0
  8370  002E54  2329               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8371  002E56  0E00               	movlw	0
  8372  002E58  232A               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8373                           
  8374                           ; BSR set to: 1
  8375  002E5A  C129  F12A         	movff	___flmul@grs+2,___flmul@grs+3
  8376  002E5E  C128  F129         	movff	___flmul@grs+1,___flmul@grs+2
  8377  002E62  C127  F128         	movff	___flmul@grs,___flmul@grs+1
  8378  002E66  6B27               	clrf	___flmul@grs& (0+255),b
  8379  002E68  511E               	movf	___flmul@a& (0+255),w,b
  8380  002E6A  031A               	mulwf	___flmul@b& (0+255),b
  8381  002E6C  CFF3 F131          	movff	prodl,___flmul@temp
  8382  002E70  CFF4 F132          	movff	prodh,___flmul@temp+1
  8383                           
  8384                           ; BSR set to: 1
  8385  002E74  5131               	movf	___flmul@temp& (0+255),w,b
  8386  002E76  2727               	addwf	___flmul@grs& (0+255),f,b
  8387  002E78  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8388  002E7A  2328               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8389  002E7C  0E00               	movlw	0
  8390  002E7E  2329               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8391  002E80  0E00               	movlw	0
  8392  002E82  232A               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8393                           
  8394                           ; BSR set to: 1
  8395  002E84  5120               	movf	(___flmul@a+2)& (0+255),w,b
  8396  002E86  031B               	mulwf	(___flmul@b+1)& (0+255),b
  8397  002E88  CFF3 F131          	movff	prodl,___flmul@temp
  8398  002E8C  CFF4 F132          	movff	prodh,___flmul@temp+1
  8399  002E90  5131               	movf	___flmul@temp& (0+255),w,b
  8400  002E92  272D               	addwf	___flmul@prod& (0+255),f,b
  8401  002E94  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8402  002E96  232E               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8403  002E98  0E00               	movlw	0
  8404  002E9A  232F               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8405  002E9C  0E00               	movlw	0
  8406  002E9E  2330               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8407                           
  8408                           ; BSR set to: 1
  8409  002EA0  511F               	movf	(___flmul@a+1)& (0+255),w,b
  8410  002EA2  031C               	mulwf	(___flmul@b+2)& (0+255),b
  8411  002EA4  CFF3 F131          	movff	prodl,___flmul@temp
  8412  002EA8  CFF4 F132          	movff	prodh,___flmul@temp+1
  8413                           
  8414                           ; BSR set to: 1
  8415  002EAC  5131               	movf	___flmul@temp& (0+255),w,b
  8416  002EAE  272D               	addwf	___flmul@prod& (0+255),f,b
  8417  002EB0  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8418  002EB2  232E               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8419  002EB4  0E00               	movlw	0
  8420  002EB6  232F               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8421  002EB8  0E00               	movlw	0
  8422  002EBA  2330               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8423  002EBC  5120               	movf	(___flmul@a+2)& (0+255),w,b
  8424  002EBE  031C               	mulwf	(___flmul@b+2)& (0+255),b
  8425  002EC0  CFF3 F131          	movff	prodl,___flmul@temp
  8426  002EC4  CFF4 F132          	movff	prodh,___flmul@temp+1
  8427                           
  8428                           ; BSR set to: 1
  8429  002EC8  5131               	movf	___flmul@temp& (0+255),w,b
  8430  002ECA  6F22               	movwf	??___flmul& (0+255),b
  8431  002ECC  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8432  002ECE  6F23               	movwf	(??___flmul+1)& (0+255),b
  8433  002ED0  6B24               	clrf	(??___flmul+2)& (0+255),b
  8434  002ED2  6B25               	clrf	(??___flmul+3)& (0+255),b
  8435  002ED4  C124  F125         	movff	??___flmul+2,??___flmul+3
  8436  002ED8  C123  F124         	movff	??___flmul+1,??___flmul+2
  8437  002EDC  C122  F123         	movff	??___flmul,??___flmul+1
  8438  002EE0  6B22               	clrf	??___flmul& (0+255),b
  8439  002EE2  5122               	movf	??___flmul& (0+255),w,b
  8440  002EE4  272D               	addwf	___flmul@prod& (0+255),f,b
  8441  002EE6  5123               	movf	(??___flmul+1)& (0+255),w,b
  8442  002EE8  232E               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8443  002EEA  5124               	movf	(??___flmul+2)& (0+255),w,b
  8444  002EEC  232F               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8445  002EEE  5125               	movf	(??___flmul+3)& (0+255),w,b
  8446  002EF0  2330               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8447                           
  8448                           ; BSR set to: 1
  8449  002EF2  C127  F122         	movff	___flmul@grs,??___flmul
  8450  002EF6  C128  F123         	movff	___flmul@grs+1,??___flmul+1
  8451  002EFA  C129  F124         	movff	___flmul@grs+2,??___flmul+2
  8452  002EFE  C12A  F125         	movff	___flmul@grs+3,??___flmul+3
  8453  002F02  0E19               	movlw	25
  8454  002F04  D005               	goto	u10050
  8455  002F06                     u10055:
  8456  002F06  90D8               	bcf	status,0,c
  8457  002F08  3325               	rrcf	(??___flmul+3)& (0+255),f,b
  8458  002F0A  3324               	rrcf	(??___flmul+2)& (0+255),f,b
  8459  002F0C  3323               	rrcf	(??___flmul+1)& (0+255),f,b
  8460  002F0E  3322               	rrcf	??___flmul& (0+255),f,b
  8461  002F10                     u10050:
  8462  002F10  2EE8               	decfsz	wreg,f,c
  8463  002F12  D7F9               	goto	u10055
  8464  002F14  5122               	movf	??___flmul& (0+255),w,b
  8465  002F16  272D               	addwf	___flmul@prod& (0+255),f,b
  8466  002F18  5123               	movf	(??___flmul+1)& (0+255),w,b
  8467  002F1A  232E               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8468  002F1C  5124               	movf	(??___flmul+2)& (0+255),w,b
  8469  002F1E  232F               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8470  002F20  5125               	movf	(??___flmul+3)& (0+255),w,b
  8471  002F22  2330               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8472                           
  8473                           ; BSR set to: 1
  8474  002F24  C129  F12A         	movff	___flmul@grs+2,___flmul@grs+3
  8475  002F28  C128  F129         	movff	___flmul@grs+1,___flmul@grs+2
  8476  002F2C  C127  F128         	movff	___flmul@grs,___flmul@grs+1
  8477  002F30  6B27               	clrf	___flmul@grs& (0+255),b
  8478                           
  8479                           ; BSR set to: 1
  8480  002F32  512B               	movf	___flmul@aexp& (0+255),w,b
  8481  002F34  C12C  F122         	movff	___flmul@bexp,??___flmul
  8482  002F38  6B23               	clrf	(??___flmul+1)& (0+255),b
  8483  002F3A  2722               	addwf	??___flmul& (0+255),f,b
  8484  002F3C  0E00               	movlw	0
  8485  002F3E  2323               	addwfc	(??___flmul+1)& (0+255),f,b
  8486  002F40  0E82               	movlw	130
  8487  002F42  2522               	addwf	??___flmul& (0+255),w,b
  8488  002F44  6F31               	movwf	___flmul@temp& (0+255),b
  8489  002F46  0EFF               	movlw	255
  8490  002F48  2123               	addwfc	(??___flmul+1)& (0+255),w,b
  8491  002F4A  6F32               	movwf	(___flmul@temp+1)& (0+255),b
  8492  002F4C  D00F               	goto	l7271
  8493  002F4E                     l7265:
  8494                           
  8495                           ; BSR set to: 1
  8496  002F4E  90D8               	bcf	status,0,c
  8497  002F50  372D               	rlcf	___flmul@prod& (0+255),f,b
  8498  002F52  372E               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8499  002F54  372F               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8500  002F56  3730               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8501                           
  8502                           ; BSR set to: 1
  8503  002F58  BF2A               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8504                           
  8505                           ; BSR set to: 1
  8506  002F5A  812D               	bsf	___flmul@prod& (0+255),0,b
  8507                           
  8508                           ; BSR set to: 1
  8509  002F5C  90D8               	bcf	status,0,c
  8510  002F5E  3727               	rlcf	___flmul@grs& (0+255),f,b
  8511  002F60  3728               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8512  002F62  3729               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8513  002F64  372A               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8514  002F66  0731               	decf	___flmul@temp& (0+255),f,b
  8515  002F68  A0D8               	btfss	status,0,c
  8516  002F6A  0732               	decf	(___flmul@temp+1)& (0+255),f,b
  8517  002F6C                     l7271:
  8518                           
  8519                           ; BSR set to: 1
  8520  002F6C  AF2F               	btfss	(___flmul@prod+2)& (0+255),7,b
  8521  002F6E  D7EF               	goto	l7265
  8522                           
  8523                           ; BSR set to: 1
  8524  002F70  0E00               	movlw	0
  8525  002F72  6F2B               	movwf	___flmul@aexp& (0+255),b
  8526                           
  8527                           ; BSR set to: 1
  8528  002F74  AF2A               	btfss	(___flmul@grs+3)& (0+255),7,b
  8529  002F76  D017               	goto	l1379
  8530                           
  8531                           ; BSR set to: 1
  8532  002F78  0EFF               	movlw	255
  8533  002F7A  1527               	andwf	___flmul@grs& (0+255),w,b
  8534  002F7C  6F22               	movwf	??___flmul& (0+255),b
  8535  002F7E  0EFF               	movlw	255
  8536  002F80  1528               	andwf	(___flmul@grs+1)& (0+255),w,b
  8537  002F82  6F23               	movwf	(??___flmul+1)& (0+255),b
  8538  002F84  0EFF               	movlw	255
  8539  002F86  1529               	andwf	(___flmul@grs+2)& (0+255),w,b
  8540  002F88  6F24               	movwf	(??___flmul+2)& (0+255),b
  8541  002F8A  0E7F               	movlw	127
  8542  002F8C  152A               	andwf	(___flmul@grs+3)& (0+255),w,b
  8543  002F8E  6F25               	movwf	(??___flmul+3)& (0+255),b
  8544  002F90  5122               	movf	??___flmul& (0+255),w,b
  8545  002F92  1123               	iorwf	(??___flmul+1)& (0+255),w,b
  8546  002F94  1124               	iorwf	(??___flmul+2)& (0+255),w,b
  8547  002F96  1125               	iorwf	(??___flmul+3)& (0+255),w,b
  8548  002F98  B4D8               	btfsc	status,2,c
  8549  002F9A  D003               	goto	l1380
  8550  002F9C                     u10090:
  8551                           
  8552                           ; BSR set to: 1
  8553  002F9C  0E01               	movlw	1
  8554  002F9E  6F2B               	movwf	___flmul@aexp& (0+255),b
  8555  002FA0  D002               	goto	l1379
  8556  002FA2                     l1380:
  8557                           
  8558                           ; BSR set to: 1
  8559  002FA2  B12D               	btfsc	___flmul@prod& (0+255),0,b
  8560  002FA4  D7FB               	goto	u10090
  8561  002FA6                     l1379:
  8562                           
  8563                           ; BSR set to: 1
  8564  002FA6  512B               	movf	___flmul@aexp& (0+255),w,b
  8565  002FA8  B4D8               	btfsc	status,2,c
  8566  002FAA  D01F               	goto	l7291
  8567                           
  8568                           ; BSR set to: 1
  8569  002FAC  0E01               	movlw	1
  8570  002FAE  272D               	addwf	___flmul@prod& (0+255),f,b
  8571  002FB0  0E00               	movlw	0
  8572  002FB2  232E               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8573  002FB4  232F               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8574  002FB6  2330               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8575                           
  8576                           ; BSR set to: 1
  8577  002FB8  A130               	btfss	(___flmul@prod+3)& (0+255),0,b
  8578  002FBA  D017               	goto	l7291
  8579                           
  8580                           ; BSR set to: 1
  8581  002FBC  C12D  F122         	movff	___flmul@prod,??___flmul
  8582  002FC0  C12E  F123         	movff	___flmul@prod+1,??___flmul+1
  8583  002FC4  C12F  F124         	movff	___flmul@prod+2,??___flmul+2
  8584  002FC8  C130  F125         	movff	___flmul@prod+3,??___flmul+3
  8585  002FCC  3525               	rlcf	(??___flmul+3)& (0+255),w,b
  8586  002FCE  3325               	rrcf	(??___flmul+3)& (0+255),f,b
  8587  002FD0  3324               	rrcf	(??___flmul+2)& (0+255),f,b
  8588  002FD2  3323               	rrcf	(??___flmul+1)& (0+255),f,b
  8589  002FD4  3322               	rrcf	??___flmul& (0+255),f,b
  8590  002FD6  C122  F12D         	movff	??___flmul,___flmul@prod
  8591  002FDA  C123  F12E         	movff	??___flmul+1,___flmul@prod+1
  8592  002FDE  C124  F12F         	movff	??___flmul+2,___flmul@prod+2
  8593  002FE2  C125  F130         	movff	??___flmul+3,___flmul@prod+3
  8594                           
  8595                           ; BSR set to: 1
  8596  002FE6  4B31               	infsnz	___flmul@temp& (0+255),f,b
  8597  002FE8  2B32               	incf	(___flmul@temp+1)& (0+255),f,b
  8598  002FEA                     l7291:
  8599                           
  8600                           ; BSR set to: 1
  8601  002FEA  BF32               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8602  002FEC  D00D               	goto	l7295
  8603  002FEE  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8604  002FF0  E103               	bnz	u10130
  8605  002FF2  2931               	incf	___flmul@temp& (0+255),w,b
  8606  002FF4  A0D8               	btfss	status,0,c
  8607  002FF6  D008               	goto	l7295
  8608  002FF8                     u10130:
  8609                           
  8610                           ; BSR set to: 1
  8611  002FF8  0E00               	movlw	0
  8612  002FFA  6F2D               	movwf	___flmul@prod& (0+255),b
  8613  002FFC  0E00               	movlw	0
  8614  002FFE  6F2E               	movwf	(___flmul@prod+1)& (0+255),b
  8615  003000  0E80               	movlw	128
  8616  003002  6F2F               	movwf	(___flmul@prod+2)& (0+255),b
  8617  003004  0E7F               	movlw	127
  8618  003006  D020               	goto	L10
  8619  003008                     l7295:
  8620                           
  8621                           ; BSR set to: 1
  8622  003008  BF32               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8623  00300A  D005               	goto	u10140
  8624  00300C  5132               	movf	(___flmul@temp+1)& (0+255),w,b
  8625  00300E  E10E               	bnz	l1387
  8626  003010  0531               	decf	___flmul@temp& (0+255),w,b
  8627  003012  B0D8               	btfsc	status,0,c
  8628  003014  D00B               	goto	l1387
  8629  003016                     u10140:
  8630                           
  8631                           ; BSR set to: 1
  8632  003016  0E00               	movlw	0
  8633  003018  6F2D               	movwf	___flmul@prod& (0+255),b
  8634  00301A  0E00               	movlw	0
  8635  00301C  6F2E               	movwf	(___flmul@prod+1)& (0+255),b
  8636  00301E  0E00               	movlw	0
  8637  003020  6F2F               	movwf	(___flmul@prod+2)& (0+255),b
  8638  003022  0E00               	movlw	0
  8639  003024  6F30               	movwf	(___flmul@prod+3)& (0+255),b
  8640  003026  0E00               	movlw	0
  8641  003028  6F26               	movwf	___flmul@sign& (0+255),b
  8642  00302A  D00F               	goto	l7307
  8643  00302C                     l1387:
  8644                           
  8645                           ; BSR set to: 1
  8646  00302C  C131  F12C         	movff	___flmul@temp,___flmul@bexp
  8647                           
  8648                           ; BSR set to: 1
  8649  003030  0EFF               	movlw	255
  8650  003032  172D               	andwf	___flmul@prod& (0+255),f,b
  8651  003034  0EFF               	movlw	255
  8652  003036  172E               	andwf	(___flmul@prod+1)& (0+255),f,b
  8653  003038  0E7F               	movlw	127
  8654  00303A  172F               	andwf	(___flmul@prod+2)& (0+255),f,b
  8655  00303C  0E00               	movlw	0
  8656  00303E  1730               	andwf	(___flmul@prod+3)& (0+255),f,b
  8657                           
  8658                           ; BSR set to: 1
  8659  003040  B12C               	btfsc	___flmul@bexp& (0+255),0,b
  8660                           
  8661                           ; BSR set to: 1
  8662  003042  8F2F               	bsf	(___flmul@prod+2)& (0+255),7,b
  8663                           
  8664                           ; BSR set to: 1
  8665  003044  90D8               	bcf	status,0,c
  8666  003046  312C               	rrcf	___flmul@bexp& (0+255),w,b
  8667  003048                     L10:
  8668  003048  6F30               	movwf	(___flmul@prod+3)& (0+255),b
  8669  00304A                     l7307:
  8670                           
  8671                           ; BSR set to: 1
  8672  00304A  5126               	movf	___flmul@sign& (0+255),w,b
  8673  00304C  1330               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8674                           
  8675                           ; BSR set to: 1
  8676  00304E  C12D  F11A         	movff	___flmul@prod,?___flmul
  8677  003052  C12E  F11B         	movff	___flmul@prod+1,?___flmul+1
  8678  003056  C12F  F11C         	movff	___flmul@prod+2,?___flmul+2
  8679  00305A  C130  F11D         	movff	___flmul@prod+3,?___flmul+3
  8680                           
  8681                           ; BSR set to: 1
  8682  00305E  0012               	return		;funcret
  8683  003060                     __end_of___flmul:
  8684                           	opt callstack 0
  8685                           
  8686 ;; *************** function ___flge *****************
  8687 ;; Defined at:
  8688 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  ff1             4   51[BANK1 ] unsigned char 
  8691 ;;  ff2             4   55[BANK1 ] unsigned char 
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;		None
  8694 ;; Return value:  Size  Location     Type
  8695 ;;		None               void
  8696 ;; Registers used:
  8697 ;;		wreg, status,2, status,0
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 0/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8703 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8705 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8707 ;;Total ram usage:       12 bytes
  8708 ;; Hardware stack levels used:    1
  8709 ;; Hardware stack levels required when called:   16
  8710 ;; This function calls:
  8711 ;;		Nothing
  8712 ;; This function is called by:
  8713 ;;		_efgtoa
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text25
  8718  00599A                     __ptext25:
  8719                           	opt callstack 0
  8720  00599A                     ___flge:
  8721                           	opt callstack 10
  8722                           
  8723                           ; BSR set to: 1
  8724                           ;incstack = 0
  8725  00599A  0E00               	movlw	0
  8726  00599C  0101               	movlb	1	; () banked
  8727  00599E  1533               	andwf	___flge@ff1& (0+255),w,b
  8728  0059A0  6F3B               	movwf	??___flge& (0+255),b
  8729  0059A2  0E00               	movlw	0
  8730  0059A4  1534               	andwf	(___flge@ff1+1)& (0+255),w,b
  8731  0059A6  6F3C               	movwf	(??___flge+1)& (0+255),b
  8732  0059A8  0E80               	movlw	128
  8733  0059AA  1535               	andwf	(___flge@ff1+2)& (0+255),w,b
  8734  0059AC  6F3D               	movwf	(??___flge+2)& (0+255),b
  8735  0059AE  0E7F               	movlw	127
  8736  0059B0  1536               	andwf	(___flge@ff1+3)& (0+255),w,b
  8737  0059B2  6F3E               	movwf	(??___flge+3)& (0+255),b
  8738  0059B4  513B               	movf	??___flge& (0+255),w,b
  8739  0059B6  113C               	iorwf	(??___flge+1)& (0+255),w,b
  8740  0059B8  113D               	iorwf	(??___flge+2)& (0+255),w,b
  8741  0059BA  113E               	iorwf	(??___flge+3)& (0+255),w,b
  8742  0059BC  A4D8               	btfss	status,2,c
  8743  0059BE  D008               	goto	l7419
  8744                           
  8745                           ; BSR set to: 1
  8746  0059C0  0E00               	movlw	0
  8747  0059C2  6F33               	movwf	___flge@ff1& (0+255),b
  8748  0059C4  0E00               	movlw	0
  8749  0059C6  6F34               	movwf	(___flge@ff1+1)& (0+255),b
  8750  0059C8  0E00               	movlw	0
  8751  0059CA  6F35               	movwf	(___flge@ff1+2)& (0+255),b
  8752  0059CC  0E00               	movlw	0
  8753  0059CE  6F36               	movwf	(___flge@ff1+3)& (0+255),b
  8754  0059D0                     l7419:
  8755                           
  8756                           ; BSR set to: 1
  8757  0059D0  0E00               	movlw	0
  8758  0059D2  1537               	andwf	___flge@ff2& (0+255),w,b
  8759  0059D4  6F3B               	movwf	??___flge& (0+255),b
  8760  0059D6  0E00               	movlw	0
  8761  0059D8  1538               	andwf	(___flge@ff2+1)& (0+255),w,b
  8762  0059DA  6F3C               	movwf	(??___flge+1)& (0+255),b
  8763  0059DC  0E80               	movlw	128
  8764  0059DE  1539               	andwf	(___flge@ff2+2)& (0+255),w,b
  8765  0059E0  6F3D               	movwf	(??___flge+2)& (0+255),b
  8766  0059E2  0E7F               	movlw	127
  8767  0059E4  153A               	andwf	(___flge@ff2+3)& (0+255),w,b
  8768  0059E6  6F3E               	movwf	(??___flge+3)& (0+255),b
  8769  0059E8  513B               	movf	??___flge& (0+255),w,b
  8770  0059EA  113C               	iorwf	(??___flge+1)& (0+255),w,b
  8771  0059EC  113D               	iorwf	(??___flge+2)& (0+255),w,b
  8772  0059EE  113E               	iorwf	(??___flge+3)& (0+255),w,b
  8773  0059F0  A4D8               	btfss	status,2,c
  8774  0059F2  D008               	goto	l7423
  8775                           
  8776                           ; BSR set to: 1
  8777  0059F4  0E00               	movlw	0
  8778  0059F6  6F37               	movwf	___flge@ff2& (0+255),b
  8779  0059F8  0E00               	movlw	0
  8780  0059FA  6F38               	movwf	(___flge@ff2+1)& (0+255),b
  8781  0059FC  0E00               	movlw	0
  8782  0059FE  6F39               	movwf	(___flge@ff2+2)& (0+255),b
  8783  005A00  0E00               	movlw	0
  8784  005A02  6F3A               	movwf	(___flge@ff2+3)& (0+255),b
  8785  005A04                     l7423:
  8786                           
  8787                           ; BSR set to: 1
  8788  005A04  AF36               	btfss	(___flge@ff1+3)& (0+255),7,b
  8789  005A06  D009               	goto	l7427
  8790                           
  8791                           ; BSR set to: 1
  8792  005A08  6D33               	negf	___flge@ff1& (0+255),b
  8793  005A0A  1F34               	comf	(___flge@ff1+1)& (0+255),f,b
  8794  005A0C  B0D8               	btfsc	status,0,c
  8795  005A0E  2B34               	incf	(___flge@ff1+1)& (0+255),f,b
  8796  005A10  1F35               	comf	(___flge@ff1+2)& (0+255),f,b
  8797  005A12  B0D8               	btfsc	status,0,c
  8798  005A14  2B35               	incf	(___flge@ff1+2)& (0+255),f,b
  8799  005A16  0E80               	movlw	128
  8800  005A18  5736               	subfwb	(___flge@ff1+3)& (0+255),f,b
  8801  005A1A                     l7427:
  8802                           
  8803                           ; BSR set to: 1
  8804  005A1A  AF3A               	btfss	(___flge@ff2+3)& (0+255),7,b
  8805  005A1C  D009               	goto	l1021
  8806                           
  8807                           ; BSR set to: 1
  8808  005A1E  6D37               	negf	___flge@ff2& (0+255),b
  8809  005A20  1F38               	comf	(___flge@ff2+1)& (0+255),f,b
  8810  005A22  B0D8               	btfsc	status,0,c
  8811  005A24  2B38               	incf	(___flge@ff2+1)& (0+255),f,b
  8812  005A26  1F39               	comf	(___flge@ff2+2)& (0+255),f,b
  8813  005A28  B0D8               	btfsc	status,0,c
  8814  005A2A  2B39               	incf	(___flge@ff2+2)& (0+255),f,b
  8815  005A2C  0E80               	movlw	128
  8816  005A2E  573A               	subfwb	(___flge@ff2+3)& (0+255),f,b
  8817  005A30                     l1021:
  8818                           
  8819                           ; BSR set to: 1
  8820  005A30  0E00               	movlw	0
  8821  005A32  1B33               	xorwf	___flge@ff1& (0+255),f,b
  8822  005A34  0E00               	movlw	0
  8823  005A36  1B34               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8824  005A38  0E00               	movlw	0
  8825  005A3A  1B35               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8826  005A3C  0E80               	movlw	128
  8827  005A3E  1B36               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8828  005A40  0E00               	movlw	0
  8829  005A42  1B37               	xorwf	___flge@ff2& (0+255),f,b
  8830  005A44  0E00               	movlw	0
  8831  005A46  1B38               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8832  005A48  0E00               	movlw	0
  8833  005A4A  1B39               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8834  005A4C  0E80               	movlw	128
  8835  005A4E  1B3A               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8836  005A50  5137               	movf	___flge@ff2& (0+255),w,b
  8837  005A52  5D33               	subwf	___flge@ff1& (0+255),w,b
  8838  005A54  5138               	movf	(___flge@ff2+1)& (0+255),w,b
  8839  005A56  5934               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8840  005A58  5139               	movf	(___flge@ff2+2)& (0+255),w,b
  8841  005A5A  5935               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8842  005A5C  513A               	movf	(___flge@ff2+3)& (0+255),w,b
  8843  005A5E  5936               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8844  005A60  B0D8               	btfsc	status,0,c
  8845  005A62  D002               	goto	l7433
  8846                           
  8847                           ; BSR set to: 1
  8848  005A64  90D8               	bcf	status,0,c
  8849  005A66  0012               	return	
  8850  005A68                     l7433:
  8851                           
  8852                           ; BSR set to: 1
  8853  005A68  80D8               	bsf	status,0,c
  8854                           
  8855                           ; BSR set to: 1
  8856  005A6A  0012               	return		;funcret
  8857  005A6C                     __end_of___flge:
  8858                           	opt callstack 0
  8859                           
  8860 ;; *************** function ___fleq *****************
  8861 ;; Defined at:
  8862 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  8863 ;; Parameters:    Size  Location     Type
  8864 ;;  ff1             4    0[BANK1 ] unsigned char 
  8865 ;;  ff2             4    4[BANK1 ] unsigned char 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;		None
  8868 ;; Return value:  Size  Location     Type
  8869 ;;		None               void
  8870 ;; Registers used:
  8871 ;;		wreg, status,2, status,0
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8877 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8879 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8880 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8881 ;;Total ram usage:       12 bytes
  8882 ;; Hardware stack levels used:    1
  8883 ;; Hardware stack levels required when called:   16
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_efgtoa
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text26
  8892  00673E                     __ptext26:
  8893                           	opt callstack 0
  8894  00673E                     ___fleq:
  8895                           	opt callstack 10
  8896                           
  8897                           ; BSR set to: 1
  8898                           ;incstack = 0
  8899  00673E  0E00               	movlw	0
  8900  006740  0101               	movlb	1	; () banked
  8901  006742  1500               	andwf	___fleq@ff1& (0+255),w,b
  8902  006744  6F08               	movwf	??___fleq& (0+255),b
  8903  006746  0E00               	movlw	0
  8904  006748  1501               	andwf	(___fleq@ff1+1)& (0+255),w,b
  8905  00674A  6F09               	movwf	(??___fleq+1)& (0+255),b
  8906  00674C  0E80               	movlw	128
  8907  00674E  1502               	andwf	(___fleq@ff1+2)& (0+255),w,b
  8908  006750  6F0A               	movwf	(??___fleq+2)& (0+255),b
  8909  006752  0E7F               	movlw	127
  8910  006754  1503               	andwf	(___fleq@ff1+3)& (0+255),w,b
  8911  006756  6F0B               	movwf	(??___fleq+3)& (0+255),b
  8912  006758  5108               	movf	??___fleq& (0+255),w,b
  8913  00675A  1109               	iorwf	(??___fleq+1)& (0+255),w,b
  8914  00675C  110A               	iorwf	(??___fleq+2)& (0+255),w,b
  8915  00675E  110B               	iorwf	(??___fleq+3)& (0+255),w,b
  8916  006760  A4D8               	btfss	status,2,c
  8917  006762  D008               	goto	l7403
  8918                           
  8919                           ; BSR set to: 1
  8920  006764  0E00               	movlw	0
  8921  006766  6F00               	movwf	___fleq@ff1& (0+255),b
  8922  006768  0E00               	movlw	0
  8923  00676A  6F01               	movwf	(___fleq@ff1+1)& (0+255),b
  8924  00676C  0E00               	movlw	0
  8925  00676E  6F02               	movwf	(___fleq@ff1+2)& (0+255),b
  8926  006770  0E00               	movlw	0
  8927  006772  6F03               	movwf	(___fleq@ff1+3)& (0+255),b
  8928  006774                     l7403:
  8929                           
  8930                           ; BSR set to: 1
  8931  006774  0E00               	movlw	0
  8932  006776  1504               	andwf	___fleq@ff2& (0+255),w,b
  8933  006778  6F08               	movwf	??___fleq& (0+255),b
  8934  00677A  0E00               	movlw	0
  8935  00677C  1505               	andwf	(___fleq@ff2+1)& (0+255),w,b
  8936  00677E  6F09               	movwf	(??___fleq+1)& (0+255),b
  8937  006780  0E80               	movlw	128
  8938  006782  1506               	andwf	(___fleq@ff2+2)& (0+255),w,b
  8939  006784  6F0A               	movwf	(??___fleq+2)& (0+255),b
  8940  006786  0E7F               	movlw	127
  8941  006788  1507               	andwf	(___fleq@ff2+3)& (0+255),w,b
  8942  00678A  6F0B               	movwf	(??___fleq+3)& (0+255),b
  8943  00678C  5108               	movf	??___fleq& (0+255),w,b
  8944  00678E  1109               	iorwf	(??___fleq+1)& (0+255),w,b
  8945  006790  110A               	iorwf	(??___fleq+2)& (0+255),w,b
  8946  006792  110B               	iorwf	(??___fleq+3)& (0+255),w,b
  8947  006794  A4D8               	btfss	status,2,c
  8948  006796  D008               	goto	l7407
  8949                           
  8950                           ; BSR set to: 1
  8951  006798  0E00               	movlw	0
  8952  00679A  6F04               	movwf	___fleq@ff2& (0+255),b
  8953  00679C  0E00               	movlw	0
  8954  00679E  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
  8955  0067A0  0E00               	movlw	0
  8956  0067A2  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
  8957  0067A4  0E00               	movlw	0
  8958  0067A6  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
  8959  0067A8                     l7407:
  8960                           
  8961                           ; BSR set to: 1
  8962  0067A8  5104               	movf	___fleq@ff2& (0+255),w,b
  8963  0067AA  1900               	xorwf	___fleq@ff1& (0+255),w,b
  8964  0067AC  E10A               	bnz	u10300
  8965  0067AE  5105               	movf	(___fleq@ff2+1)& (0+255),w,b
  8966  0067B0  1901               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  8967  0067B2  E107               	bnz	u10300
  8968  0067B4  5106               	movf	(___fleq@ff2+2)& (0+255),w,b
  8969  0067B6  1902               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  8970  0067B8  E104               	bnz	u10300
  8971  0067BA  5107               	movf	(___fleq@ff2+3)& (0+255),w,b
  8972  0067BC  1903               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  8973  0067BE  B4D8               	btfsc	status,2,c
  8974  0067C0  D002               	goto	l7411
  8975  0067C2                     u10300:
  8976                           
  8977                           ; BSR set to: 1
  8978  0067C2  90D8               	bcf	status,0,c
  8979  0067C4  0012               	return	
  8980  0067C6                     l7411:
  8981                           
  8982                           ; BSR set to: 1
  8983  0067C6  80D8               	bsf	status,0,c
  8984                           
  8985                           ; BSR set to: 1
  8986  0067C8  0012               	return		;funcret
  8987  0067CA                     __end_of___fleq:
  8988                           	opt callstack 0
  8989                           
  8990 ;; *************** function ___fldiv *****************
  8991 ;; Defined at:
  8992 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  b               4    0[BANK1 ] unsigned char 
  8995 ;;  a               4    4[BANK1 ] unsigned char 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;  grs             4   19[BANK1 ] unsigned long 
  8998 ;;  rem             4   12[BANK1 ] unsigned long 
  8999 ;;  new_exp         2   17[BANK1 ] short 
  9000 ;;  aexp            1   24[BANK1 ] unsigned char 
  9001 ;;  bexp            1   23[BANK1 ] unsigned char 
  9002 ;;  sign            1   16[BANK1 ] unsigned char 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  4    0[BANK1 ] unsigned char 
  9005 ;; Registers used:
  9006 ;;		wreg, status,2, status,0
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9012 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9013 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9014 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9015 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9016 ;;Total ram usage:       25 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:   16
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_ReadTemperature
  9023 ;;		_ReadHumidity
  9024 ;;		_efgtoa
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text27
  9029  0039CC                     __ptext27:
  9030                           	opt callstack 0
  9031  0039CC                     ___fldiv:
  9032                           	opt callstack 10
  9033                           
  9034                           ; BSR set to: 1
  9035                           ;incstack = 0
  9036  0039CC  0101               	movlb	1	; () banked
  9037  0039CE  5103               	movf	(___fldiv@b+3)& (0+255),w,b
  9038  0039D0  0B80               	andlw	128
  9039  0039D2  6F10               	movwf	___fldiv@sign& (0+255),b
  9040  0039D4  5103               	movf	(___fldiv@b+3)& (0+255),w,b
  9041  0039D6  2503               	addwf	(___fldiv@b+3)& (0+255),w,b
  9042  0039D8  6F17               	movwf	___fldiv@bexp& (0+255),b
  9043                           
  9044                           ; BSR set to: 1
  9045  0039DA  BF02               	btfsc	(___fldiv@b+2)& (0+255),7,b
  9046                           
  9047                           ; BSR set to: 1
  9048  0039DC  8117               	bsf	___fldiv@bexp& (0+255),0,b
  9049                           
  9050                           ; BSR set to: 1
  9051  0039DE  5117               	movf	___fldiv@bexp& (0+255),w,b
  9052  0039E0  B4D8               	btfsc	status,2,c
  9053  0039E2  D00D               	goto	l7061
  9054                           
  9055                           ; BSR set to: 1
  9056  0039E4  2917               	incf	___fldiv@bexp& (0+255),w,b
  9057  0039E6  A4D8               	btfss	status,2,c
  9058  0039E8  D008               	goto	l7057
  9059                           
  9060                           ; BSR set to: 1
  9061  0039EA  0E00               	movlw	0
  9062  0039EC  6F00               	movwf	___fldiv@b& (0+255),b
  9063  0039EE  0E00               	movlw	0
  9064  0039F0  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  9065  0039F2  0E00               	movlw	0
  9066  0039F4  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9067  0039F6  0E00               	movlw	0
  9068  0039F8  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9069  0039FA                     l7057:
  9070                           
  9071                           ; BSR set to: 1
  9072  0039FA  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
  9073  0039FC  D006               	goto	L11
  9074  0039FE                     l7061:
  9075                           
  9076                           ; BSR set to: 1
  9077  0039FE  0E00               	movlw	0
  9078  003A00  6F00               	movwf	___fldiv@b& (0+255),b
  9079  003A02  0E00               	movlw	0
  9080  003A04  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  9081  003A06  0E00               	movlw	0
  9082  003A08  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9083  003A0A                     L11:
  9084  003A0A  0E00               	movlw	0
  9085  003A0C  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9086                           
  9087                           ; BSR set to: 1
  9088  003A0E  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  9089  003A10  0B80               	andlw	128
  9090  003A12  1B10               	xorwf	___fldiv@sign& (0+255),f,b
  9091                           
  9092                           ; BSR set to: 1
  9093  003A14  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  9094  003A16  2507               	addwf	(___fldiv@a+3)& (0+255),w,b
  9095  003A18  6F18               	movwf	___fldiv@aexp& (0+255),b
  9096                           
  9097                           ; BSR set to: 1
  9098  003A1A  BF06               	btfsc	(___fldiv@a+2)& (0+255),7,b
  9099                           
  9100                           ; BSR set to: 1
  9101  003A1C  8118               	bsf	___fldiv@aexp& (0+255),0,b
  9102                           
  9103                           ; BSR set to: 1
  9104  003A1E  5118               	movf	___fldiv@aexp& (0+255),w,b
  9105  003A20  B4D8               	btfsc	status,2,c
  9106  003A22  D00D               	goto	l7081
  9107                           
  9108                           ; BSR set to: 1
  9109  003A24  2918               	incf	___fldiv@aexp& (0+255),w,b
  9110  003A26  A4D8               	btfss	status,2,c
  9111  003A28  D008               	goto	l7077
  9112                           
  9113                           ; BSR set to: 1
  9114  003A2A  0E00               	movlw	0
  9115  003A2C  6F04               	movwf	___fldiv@a& (0+255),b
  9116  003A2E  0E00               	movlw	0
  9117  003A30  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  9118  003A32  0E00               	movlw	0
  9119  003A34  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  9120  003A36  0E00               	movlw	0
  9121  003A38  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  9122  003A3A                     l7077:
  9123                           
  9124                           ; BSR set to: 1
  9125  003A3A  8F06               	bsf	(___fldiv@a+2)& (0+255),7,b
  9126  003A3C  D006               	goto	L12
  9127  003A3E                     l7081:
  9128                           
  9129                           ; BSR set to: 1
  9130  003A3E  0E00               	movlw	0
  9131  003A40  6F04               	movwf	___fldiv@a& (0+255),b
  9132  003A42  0E00               	movlw	0
  9133  003A44  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  9134  003A46  0E00               	movlw	0
  9135  003A48  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  9136  003A4A                     L12:
  9137  003A4A  0E00               	movlw	0
  9138  003A4C  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  9139                           
  9140                           ; BSR set to: 1
  9141  003A4E  5104               	movf	___fldiv@a& (0+255),w,b
  9142  003A50  1105               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9143  003A52  1106               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9144  003A54  1107               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9145  003A56  A4D8               	btfss	status,2,c
  9146  003A58  D017               	goto	l7095
  9147                           
  9148                           ; BSR set to: 1
  9149  003A5A  0E00               	movlw	0
  9150  003A5C  6F00               	movwf	___fldiv@b& (0+255),b
  9151  003A5E  0E00               	movlw	0
  9152  003A60  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  9153  003A62  0E00               	movlw	0
  9154  003A64  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9155  003A66  0E00               	movlw	0
  9156  003A68  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9157                           
  9158                           ; BSR set to: 1
  9159  003A6A  0E80               	movlw	128
  9160  003A6C  1302               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9161  003A6E  0E7F               	movlw	127
  9162  003A70  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9163  003A72                     l7089:
  9164                           
  9165                           ; BSR set to: 1
  9166  003A72  5110               	movf	___fldiv@sign& (0+255),w,b
  9167  003A74  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9168                           
  9169                           ; BSR set to: 1
  9170  003A76  C100  F100         	movff	___fldiv@b,?___fldiv
  9171  003A7A  C101  F101         	movff	___fldiv@b+1,?___fldiv+1
  9172  003A7E  C102  F102         	movff	___fldiv@b+2,?___fldiv+2
  9173  003A82  C103  F103         	movff	___fldiv@b+3,?___fldiv+3
  9174  003A86  0012               	return	
  9175  003A88                     l7095:
  9176                           
  9177                           ; BSR set to: 1
  9178  003A88  5117               	movf	___fldiv@bexp& (0+255),w,b
  9179  003A8A  A4D8               	btfss	status,2,c
  9180  003A8C  D009               	goto	l7103
  9181                           
  9182                           ; BSR set to: 1
  9183                           
  9184                           ; BSR set to: 1
  9185  003A8E  0E00               	movlw	0
  9186  003A90  6F00               	movwf	?___fldiv& (0+255),b
  9187  003A92  0E00               	movlw	0
  9188  003A94  6F01               	movwf	(?___fldiv+1)& (0+255),b
  9189  003A96  0E00               	movlw	0
  9190  003A98  6F02               	movwf	(?___fldiv+2)& (0+255),b
  9191  003A9A  0E00               	movlw	0
  9192  003A9C  6F03               	movwf	(?___fldiv+3)& (0+255),b
  9193  003A9E  0012               	return	
  9194  003AA0                     l7103:
  9195                           
  9196                           ; BSR set to: 1
  9197  003AA0  5118               	movf	___fldiv@aexp& (0+255),w,b
  9198  003AA2  C117  F108         	movff	___fldiv@bexp,??___fldiv
  9199  003AA6  6B09               	clrf	(??___fldiv+1)& (0+255),b
  9200  003AA8  5F08               	subwf	??___fldiv& (0+255),f,b
  9201  003AAA  0E00               	movlw	0
  9202  003AAC  5B09               	subwfb	(??___fldiv+1)& (0+255),f,b
  9203  003AAE  0E7F               	movlw	127
  9204  003AB0  2508               	addwf	??___fldiv& (0+255),w,b
  9205  003AB2  6F11               	movwf	___fldiv@new_exp& (0+255),b
  9206  003AB4  0E00               	movlw	0
  9207  003AB6  2109               	addwfc	(??___fldiv+1)& (0+255),w,b
  9208  003AB8  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9209                           
  9210                           ; BSR set to: 1
  9211  003ABA  C100  F10C         	movff	___fldiv@b,___fldiv@rem
  9212  003ABE  C101  F10D         	movff	___fldiv@b+1,___fldiv@rem+1
  9213  003AC2  C102  F10E         	movff	___fldiv@b+2,___fldiv@rem+2
  9214  003AC6  C103  F10F         	movff	___fldiv@b+3,___fldiv@rem+3
  9215                           
  9216                           ; BSR set to: 1
  9217  003ACA  0E00               	movlw	0
  9218  003ACC  6F00               	movwf	___fldiv@b& (0+255),b
  9219  003ACE  0E00               	movlw	0
  9220  003AD0  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  9221  003AD2  0E00               	movlw	0
  9222  003AD4  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9223  003AD6  0E00               	movlw	0
  9224  003AD8  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9225                           
  9226                           ; BSR set to: 1
  9227  003ADA  0E00               	movlw	0
  9228  003ADC  6F13               	movwf	___fldiv@grs& (0+255),b
  9229  003ADE  0E00               	movlw	0
  9230  003AE0  6F14               	movwf	(___fldiv@grs+1)& (0+255),b
  9231  003AE2  0E00               	movlw	0
  9232  003AE4  6F15               	movwf	(___fldiv@grs+2)& (0+255),b
  9233  003AE6  0E00               	movlw	0
  9234  003AE8  6F16               	movwf	(___fldiv@grs+3)& (0+255),b
  9235                           
  9236                           ; BSR set to: 1
  9237  003AEA  0E00               	movlw	0
  9238  003AEC  6F18               	movwf	___fldiv@aexp& (0+255),b
  9239  003AEE  D028               	goto	l1340
  9240  003AF0                     l7113:
  9241                           
  9242                           ; BSR set to: 1
  9243  003AF0  5118               	movf	___fldiv@aexp& (0+255),w,b
  9244  003AF2  B4D8               	btfsc	status,2,c
  9245  003AF4  D011               	goto	l7121
  9246                           
  9247                           ; BSR set to: 1
  9248  003AF6  90D8               	bcf	status,0,c
  9249  003AF8  370C               	rlcf	___fldiv@rem& (0+255),f,b
  9250  003AFA  370D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9251  003AFC  370E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9252  003AFE  370F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9253  003B00  90D8               	bcf	status,0,c
  9254  003B02  3700               	rlcf	___fldiv@b& (0+255),f,b
  9255  003B04  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9256  003B06  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9257  003B08  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9258                           
  9259                           ; BSR set to: 1
  9260  003B0A  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  9261                           
  9262                           ; BSR set to: 1
  9263  003B0C  8100               	bsf	___fldiv@b& (0+255),0,b
  9264                           
  9265                           ; BSR set to: 1
  9266  003B0E  90D8               	bcf	status,0,c
  9267  003B10  3713               	rlcf	___fldiv@grs& (0+255),f,b
  9268  003B12  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9269  003B14  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9270  003B16  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9271  003B18                     l7121:
  9272                           
  9273                           ; BSR set to: 1
  9274  003B18  5104               	movf	___fldiv@a& (0+255),w,b
  9275  003B1A  5D0C               	subwf	___fldiv@rem& (0+255),w,b
  9276  003B1C  5105               	movf	(___fldiv@a+1)& (0+255),w,b
  9277  003B1E  590D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9278  003B20  5106               	movf	(___fldiv@a+2)& (0+255),w,b
  9279  003B22  590E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9280  003B24  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  9281  003B26  590F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9282  003B28  A0D8               	btfss	status,0,c
  9283  003B2A  D009               	goto	l7127
  9284                           
  9285                           ; BSR set to: 1
  9286  003B2C  8D16               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9287                           
  9288                           ; BSR set to: 1
  9289  003B2E  5104               	movf	___fldiv@a& (0+255),w,b
  9290  003B30  5F0C               	subwf	___fldiv@rem& (0+255),f,b
  9291  003B32  5105               	movf	(___fldiv@a+1)& (0+255),w,b
  9292  003B34  5B0D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9293  003B36  5106               	movf	(___fldiv@a+2)& (0+255),w,b
  9294  003B38  5B0E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9295  003B3A  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  9296  003B3C  5B0F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9297  003B3E                     l7127:
  9298                           
  9299                           ; BSR set to: 1
  9300  003B3E  2B18               	incf	___fldiv@aexp& (0+255),f,b
  9301  003B40                     l1340:
  9302                           
  9303                           ; BSR set to: 1
  9304  003B40  0E19               	movlw	25
  9305  003B42  6518               	cpfsgt	___fldiv@aexp& (0+255),b
  9306  003B44  D7D5               	goto	l7113
  9307                           
  9308                           ; BSR set to: 1
  9309  003B46  510C               	movf	___fldiv@rem& (0+255),w,b
  9310  003B48  110D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9311  003B4A  110E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9312  003B4C  110F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9313  003B4E  B4D8               	btfsc	status,2,c
  9314  003B50  D011               	goto	l7139
  9315                           
  9316                           ; BSR set to: 1
  9317  003B52  8113               	bsf	___fldiv@grs& (0+255),0,b
  9318  003B54  D00F               	goto	l7139
  9319  003B56                     l7133:
  9320                           
  9321                           ; BSR set to: 1
  9322  003B56  90D8               	bcf	status,0,c
  9323  003B58  3700               	rlcf	___fldiv@b& (0+255),f,b
  9324  003B5A  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9325  003B5C  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9326  003B5E  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9327                           
  9328                           ; BSR set to: 1
  9329  003B60  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  9330                           
  9331                           ; BSR set to: 1
  9332  003B62  8100               	bsf	___fldiv@b& (0+255),0,b
  9333                           
  9334                           ; BSR set to: 1
  9335  003B64  90D8               	bcf	status,0,c
  9336  003B66  3713               	rlcf	___fldiv@grs& (0+255),f,b
  9337  003B68  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9338  003B6A  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9339  003B6C  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9340  003B6E  0711               	decf	___fldiv@new_exp& (0+255),f,b
  9341  003B70  A0D8               	btfss	status,0,c
  9342  003B72  0712               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9343  003B74                     l7139:
  9344                           
  9345                           ; BSR set to: 1
  9346  003B74  AF02               	btfss	(___fldiv@b+2)& (0+255),7,b
  9347  003B76  D7EF               	goto	l7133
  9348                           
  9349                           ; BSR set to: 1
  9350  003B78  0E00               	movlw	0
  9351  003B7A  6F18               	movwf	___fldiv@aexp& (0+255),b
  9352                           
  9353                           ; BSR set to: 1
  9354  003B7C  AF16               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9355  003B7E  D017               	goto	l1351
  9356                           
  9357                           ; BSR set to: 1
  9358  003B80  0EFF               	movlw	255
  9359  003B82  1513               	andwf	___fldiv@grs& (0+255),w,b
  9360  003B84  6F08               	movwf	??___fldiv& (0+255),b
  9361  003B86  0EFF               	movlw	255
  9362  003B88  1514               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9363  003B8A  6F09               	movwf	(??___fldiv+1)& (0+255),b
  9364  003B8C  0EFF               	movlw	255
  9365  003B8E  1515               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9366  003B90  6F0A               	movwf	(??___fldiv+2)& (0+255),b
  9367  003B92  0E7F               	movlw	127
  9368  003B94  1516               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9369  003B96  6F0B               	movwf	(??___fldiv+3)& (0+255),b
  9370  003B98  5108               	movf	??___fldiv& (0+255),w,b
  9371  003B9A  1109               	iorwf	(??___fldiv+1)& (0+255),w,b
  9372  003B9C  110A               	iorwf	(??___fldiv+2)& (0+255),w,b
  9373  003B9E  110B               	iorwf	(??___fldiv+3)& (0+255),w,b
  9374  003BA0  B4D8               	btfsc	status,2,c
  9375  003BA2  D003               	goto	l1352
  9376  003BA4                     u9900:
  9377                           
  9378                           ; BSR set to: 1
  9379  003BA4  0E01               	movlw	1
  9380  003BA6  6F18               	movwf	___fldiv@aexp& (0+255),b
  9381  003BA8  D002               	goto	l1351
  9382  003BAA                     l1352:
  9383                           
  9384                           ; BSR set to: 1
  9385  003BAA  B100               	btfsc	___fldiv@b& (0+255),0,b
  9386  003BAC  D7FB               	goto	u9900
  9387  003BAE                     l1351:
  9388                           
  9389                           ; BSR set to: 1
  9390  003BAE  5118               	movf	___fldiv@aexp& (0+255),w,b
  9391  003BB0  B4D8               	btfsc	status,2,c
  9392  003BB2  D01F               	goto	l7159
  9393                           
  9394                           ; BSR set to: 1
  9395  003BB4  0E01               	movlw	1
  9396  003BB6  2700               	addwf	___fldiv@b& (0+255),f,b
  9397  003BB8  0E00               	movlw	0
  9398  003BBA  2301               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9399  003BBC  2302               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9400  003BBE  2303               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9401                           
  9402                           ; BSR set to: 1
  9403  003BC0  A103               	btfss	(___fldiv@b+3)& (0+255),0,b
  9404  003BC2  D017               	goto	l7159
  9405                           
  9406                           ; BSR set to: 1
  9407  003BC4  C100  F108         	movff	___fldiv@b,??___fldiv
  9408  003BC8  C101  F109         	movff	___fldiv@b+1,??___fldiv+1
  9409  003BCC  C102  F10A         	movff	___fldiv@b+2,??___fldiv+2
  9410  003BD0  C103  F10B         	movff	___fldiv@b+3,??___fldiv+3
  9411  003BD4  350B               	rlcf	(??___fldiv+3)& (0+255),w,b
  9412  003BD6  330B               	rrcf	(??___fldiv+3)& (0+255),f,b
  9413  003BD8  330A               	rrcf	(??___fldiv+2)& (0+255),f,b
  9414  003BDA  3309               	rrcf	(??___fldiv+1)& (0+255),f,b
  9415  003BDC  3308               	rrcf	??___fldiv& (0+255),f,b
  9416  003BDE  C108  F100         	movff	??___fldiv,___fldiv@b
  9417  003BE2  C109  F101         	movff	??___fldiv+1,___fldiv@b+1
  9418  003BE6  C10A  F102         	movff	??___fldiv+2,___fldiv@b+2
  9419  003BEA  C10B  F103         	movff	??___fldiv+3,___fldiv@b+3
  9420                           
  9421                           ; BSR set to: 1
  9422  003BEE  4B11               	infsnz	___fldiv@new_exp& (0+255),f,b
  9423  003BF0  2B12               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9424  003BF2                     l7159:
  9425                           
  9426                           ; BSR set to: 1
  9427  003BF2  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9428  003BF4  D010               	goto	l7163
  9429  003BF6  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9430  003BF8  E103               	bnz	u9940
  9431  003BFA  2911               	incf	___fldiv@new_exp& (0+255),w,b
  9432  003BFC  A0D8               	btfss	status,0,c
  9433  003BFE  D00B               	goto	l7163
  9434  003C00                     u9940:
  9435                           
  9436                           ; BSR set to: 1
  9437  003C00  0E00               	movlw	0
  9438  003C02  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9439  003C04  6911               	setf	___fldiv@new_exp& (0+255),b
  9440  003C06  0E00               	movlw	0
  9441  003C08  6F00               	movwf	___fldiv@b& (0+255),b
  9442  003C0A  0E00               	movlw	0
  9443  003C0C  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  9444  003C0E  0E00               	movlw	0
  9445  003C10  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9446  003C12  0E00               	movlw	0
  9447  003C14  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9448  003C16                     l7163:
  9449                           
  9450                           ; BSR set to: 1
  9451  003C16  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9452  003C18  D005               	goto	u9950
  9453  003C1A  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9454  003C1C  E111               	bnz	l7167
  9455  003C1E  0511               	decf	___fldiv@new_exp& (0+255),w,b
  9456  003C20  B0D8               	btfsc	status,0,c
  9457  003C22  D00E               	goto	l7167
  9458  003C24                     u9950:
  9459                           
  9460                           ; BSR set to: 1
  9461  003C24  0E00               	movlw	0
  9462  003C26  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9463  003C28  0E00               	movlw	0
  9464  003C2A  6F11               	movwf	___fldiv@new_exp& (0+255),b
  9465  003C2C  0E00               	movlw	0
  9466  003C2E  6F00               	movwf	___fldiv@b& (0+255),b
  9467  003C30  0E00               	movlw	0
  9468  003C32  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  9469  003C34  0E00               	movlw	0
  9470  003C36  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9471  003C38  0E00               	movlw	0
  9472  003C3A  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9473  003C3C  0E00               	movlw	0
  9474  003C3E  6F10               	movwf	___fldiv@sign& (0+255),b
  9475  003C40                     l7167:
  9476                           
  9477                           ; BSR set to: 1
  9478  003C40  C111  F117         	movff	___fldiv@new_exp,___fldiv@bexp
  9479                           
  9480                           ; BSR set to: 1
  9481  003C44  A117               	btfss	___fldiv@bexp& (0+255),0,b
  9482  003C46  D002               	goto	l7173
  9483                           
  9484                           ; BSR set to: 1
  9485  003C48  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
  9486  003C4A  D001               	goto	l7175
  9487  003C4C                     l7173:
  9488                           
  9489                           ; BSR set to: 1
  9490  003C4C  9F02               	bcf	(___fldiv@b+2)& (0+255),7,b
  9491  003C4E                     l7175:
  9492                           
  9493                           ; BSR set to: 1
  9494  003C4E  90D8               	bcf	status,0,c
  9495  003C50  3117               	rrcf	___fldiv@bexp& (0+255),w,b
  9496  003C52  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9497  003C54  D70E               	goto	l7089
  9498  003C56                     __end_of___fldiv:
  9499                           	opt callstack 0
  9500                           
  9501 ;; *************** function ___awmod *****************
  9502 ;; Defined at:
  9503 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  dividend        2    0[BANK1 ] int 
  9506 ;;  divisor         2    2[BANK1 ] int 
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;  sign            1    5[BANK1 ] unsigned char 
  9509 ;;  counter         1    4[BANK1 ] unsigned char 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  2    0[BANK1 ] int 
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9519 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9520 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9522 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9523 ;;Total ram usage:        6 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:   16
  9526 ;; This function calls:
  9527 ;;		Nothing
  9528 ;; This function is called by:
  9529 ;;		_efgtoa
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text28
  9534  006A5E                     __ptext28:
  9535                           	opt callstack 0
  9536  006A5E                     ___awmod:
  9537                           	opt callstack 10
  9538                           
  9539                           ; BSR set to: 1
  9540                           ;incstack = 0
  9541  006A5E  0E00               	movlw	0
  9542  006A60  0101               	movlb	1	; () banked
  9543  006A62  6F05               	movwf	___awmod@sign& (0+255),b
  9544                           
  9545                           ; BSR set to: 1
  9546  006A64  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9547  006A66  D006               	goto	l7371
  9548                           
  9549                           ; BSR set to: 1
  9550  006A68  6D00               	negf	___awmod@dividend& (0+255),b
  9551  006A6A  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  9552  006A6C  B0D8               	btfsc	status,0,c
  9553  006A6E  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  9554                           
  9555                           ; BSR set to: 1
  9556  006A70  0E01               	movlw	1
  9557  006A72  6F05               	movwf	___awmod@sign& (0+255),b
  9558  006A74                     l7371:
  9559                           
  9560                           ; BSR set to: 1
  9561  006A74  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9562  006A76  D004               	goto	l7375
  9563                           
  9564                           ; BSR set to: 1
  9565  006A78  6D02               	negf	___awmod@divisor& (0+255),b
  9566  006A7A  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
  9567  006A7C  B0D8               	btfsc	status,0,c
  9568  006A7E  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
  9569  006A80                     l7375:
  9570                           
  9571                           ; BSR set to: 1
  9572  006A80  5102               	movf	___awmod@divisor& (0+255),w,b
  9573  006A82  1103               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9574  006A84  B4D8               	btfsc	status,2,c
  9575  006A86  D018               	goto	l7391
  9576                           
  9577                           ; BSR set to: 1
  9578  006A88  0E01               	movlw	1
  9579  006A8A  6F04               	movwf	___awmod@counter& (0+255),b
  9580  006A8C  D004               	goto	l7381
  9581  006A8E                     l7379:
  9582                           
  9583                           ; BSR set to: 1
  9584  006A8E  90D8               	bcf	status,0,c
  9585  006A90  3702               	rlcf	___awmod@divisor& (0+255),f,b
  9586  006A92  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9587  006A94  2B04               	incf	___awmod@counter& (0+255),f,b
  9588  006A96                     l7381:
  9589                           
  9590                           ; BSR set to: 1
  9591  006A96  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9592  006A98  D7FA               	goto	l7379
  9593  006A9A                     u10250:
  9594                           
  9595                           ; BSR set to: 1
  9596  006A9A  5102               	movf	___awmod@divisor& (0+255),w,b
  9597  006A9C  5D00               	subwf	___awmod@dividend& (0+255),w,b
  9598  006A9E  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  9599  006AA0  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9600  006AA2  A0D8               	btfss	status,0,c
  9601  006AA4  D004               	goto	l7387
  9602                           
  9603                           ; BSR set to: 1
  9604  006AA6  5102               	movf	___awmod@divisor& (0+255),w,b
  9605  006AA8  5F00               	subwf	___awmod@dividend& (0+255),f,b
  9606  006AAA  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  9607  006AAC  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9608  006AAE                     l7387:
  9609                           
  9610                           ; BSR set to: 1
  9611  006AAE  90D8               	bcf	status,0,c
  9612  006AB0  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9613  006AB2  3302               	rrcf	___awmod@divisor& (0+255),f,b
  9614                           
  9615                           ; BSR set to: 1
  9616  006AB4  2F04               	decfsz	___awmod@counter& (0+255),f,b
  9617  006AB6  D7F1               	goto	u10250
  9618  006AB8                     l7391:
  9619                           
  9620                           ; BSR set to: 1
  9621  006AB8  5105               	movf	___awmod@sign& (0+255),w,b
  9622  006ABA  B4D8               	btfsc	status,2,c
  9623  006ABC  D004               	goto	l7395
  9624                           
  9625                           ; BSR set to: 1
  9626  006ABE  6D00               	negf	___awmod@dividend& (0+255),b
  9627  006AC0  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  9628  006AC2  B0D8               	btfsc	status,0,c
  9629  006AC4  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  9630  006AC6                     l7395:
  9631                           
  9632                           ; BSR set to: 1
  9633  006AC6  C100  F100         	movff	___awmod@dividend,?___awmod
  9634  006ACA  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
  9635                           
  9636                           ; BSR set to: 1
  9637  006ACE  0012               	return		;funcret
  9638  006AD0                     __end_of___awmod:
  9639                           	opt callstack 0
  9640                           
  9641 ;; *************** function ___awdiv *****************
  9642 ;; Defined at:
  9643 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  dividend        2    0[BANK1 ] int 
  9646 ;;  divisor         2    2[BANK1 ] int 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;  quotient        2    6[BANK1 ] int 
  9649 ;;  sign            1    5[BANK1 ] unsigned char 
  9650 ;;  counter         1    4[BANK1 ] unsigned char 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  2    0[BANK1 ] int 
  9653 ;; Registers used:
  9654 ;;		wreg, status,2, status,0
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9660 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9661 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9663 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9664 ;;Total ram usage:        8 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:   16
  9667 ;; This function calls:
  9668 ;;		Nothing
  9669 ;; This function is called by:
  9670 ;;		_efgtoa
  9671 ;; This function uses a non-reentrant model
  9672 ;;
  9673                           
  9674                           	psect	text29
  9675  006854                     __ptext29:
  9676                           	opt callstack 0
  9677  006854                     ___awdiv:
  9678                           	opt callstack 10
  9679                           
  9680                           ; BSR set to: 1
  9681                           ;incstack = 0
  9682  006854  0E00               	movlw	0
  9683  006856  0101               	movlb	1	; () banked
  9684  006858  6F05               	movwf	___awdiv@sign& (0+255),b
  9685                           
  9686                           ; BSR set to: 1
  9687  00685A  AF03               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9688  00685C  D006               	goto	l7327
  9689                           
  9690                           ; BSR set to: 1
  9691  00685E  6D02               	negf	___awdiv@divisor& (0+255),b
  9692  006860  1F03               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9693  006862  B0D8               	btfsc	status,0,c
  9694  006864  2B03               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9695                           
  9696                           ; BSR set to: 1
  9697  006866  0E01               	movlw	1
  9698  006868  6F05               	movwf	___awdiv@sign& (0+255),b
  9699  00686A                     l7327:
  9700                           
  9701                           ; BSR set to: 1
  9702  00686A  AF01               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9703  00686C  D006               	goto	l7333
  9704                           
  9705                           ; BSR set to: 1
  9706  00686E  6D00               	negf	___awdiv@dividend& (0+255),b
  9707  006870  1F01               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9708  006872  B0D8               	btfsc	status,0,c
  9709  006874  2B01               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9710                           
  9711                           ; BSR set to: 1
  9712  006876  0E01               	movlw	1
  9713  006878  1B05               	xorwf	___awdiv@sign& (0+255),f,b
  9714  00687A                     l7333:
  9715                           
  9716                           ; BSR set to: 1
  9717  00687A  0E00               	movlw	0
  9718  00687C  6F07               	movwf	(___awdiv@quotient+1)& (0+255),b
  9719  00687E  0E00               	movlw	0
  9720  006880  6F06               	movwf	___awdiv@quotient& (0+255),b
  9721                           
  9722                           ; BSR set to: 1
  9723  006882  5102               	movf	___awdiv@divisor& (0+255),w,b
  9724  006884  1103               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9725  006886  B4D8               	btfsc	status,2,c
  9726  006888  D01C               	goto	l7355
  9727                           
  9728                           ; BSR set to: 1
  9729  00688A  0E01               	movlw	1
  9730  00688C  6F04               	movwf	___awdiv@counter& (0+255),b
  9731  00688E  D004               	goto	l7341
  9732  006890                     l7339:
  9733                           
  9734                           ; BSR set to: 1
  9735  006890  90D8               	bcf	status,0,c
  9736  006892  3702               	rlcf	___awdiv@divisor& (0+255),f,b
  9737  006894  3703               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9738  006896  2B04               	incf	___awdiv@counter& (0+255),f,b
  9739  006898                     l7341:
  9740                           
  9741                           ; BSR set to: 1
  9742  006898  AF03               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9743  00689A  D7FA               	goto	l7339
  9744  00689C                     u10190:
  9745                           
  9746                           ; BSR set to: 1
  9747  00689C  90D8               	bcf	status,0,c
  9748  00689E  3706               	rlcf	___awdiv@quotient& (0+255),f,b
  9749  0068A0  3707               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9750                           
  9751                           ; BSR set to: 1
  9752  0068A2  5102               	movf	___awdiv@divisor& (0+255),w,b
  9753  0068A4  5D00               	subwf	___awdiv@dividend& (0+255),w,b
  9754  0068A6  5103               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9755  0068A8  5901               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9756  0068AA  A0D8               	btfss	status,0,c
  9757  0068AC  D005               	goto	l7351
  9758                           
  9759                           ; BSR set to: 1
  9760  0068AE  5102               	movf	___awdiv@divisor& (0+255),w,b
  9761  0068B0  5F00               	subwf	___awdiv@dividend& (0+255),f,b
  9762  0068B2  5103               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9763  0068B4  5B01               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9764                           
  9765                           ; BSR set to: 1
  9766  0068B6  8106               	bsf	___awdiv@quotient& (0+255),0,b
  9767  0068B8                     l7351:
  9768                           
  9769                           ; BSR set to: 1
  9770  0068B8  90D8               	bcf	status,0,c
  9771  0068BA  3303               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9772  0068BC  3302               	rrcf	___awdiv@divisor& (0+255),f,b
  9773                           
  9774                           ; BSR set to: 1
  9775  0068BE  2F04               	decfsz	___awdiv@counter& (0+255),f,b
  9776  0068C0  D7ED               	goto	u10190
  9777  0068C2                     l7355:
  9778                           
  9779                           ; BSR set to: 1
  9780  0068C2  5105               	movf	___awdiv@sign& (0+255),w,b
  9781  0068C4  B4D8               	btfsc	status,2,c
  9782  0068C6  D004               	goto	l7359
  9783                           
  9784                           ; BSR set to: 1
  9785  0068C8  6D06               	negf	___awdiv@quotient& (0+255),b
  9786  0068CA  1F07               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9787  0068CC  B0D8               	btfsc	status,0,c
  9788  0068CE  2B07               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9789  0068D0                     l7359:
  9790                           
  9791                           ; BSR set to: 1
  9792  0068D0  C106  F100         	movff	___awdiv@quotient,?___awdiv
  9793  0068D4  C107  F101         	movff	___awdiv@quotient+1,?___awdiv+1
  9794                           
  9795                           ; BSR set to: 1
  9796  0068D8  0012               	return		;funcret
  9797  0068DA                     __end_of___awdiv:
  9798                           	opt callstack 0
  9799                           
  9800 ;; *************** function _dtoa *****************
  9801 ;; Defined at:
  9802 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  fp              2   29[BANK1 ] PTR struct _IO_FILE
  9805 ;;		 -> sprintf@f(6), NULL(0), 
  9806 ;;  d               8   31[BANK1 ] long long 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;  n               8   55[BANK1 ] long long 
  9809 ;;  i               2   63[BANK1 ] int 
  9810 ;;  s               2   53[BANK1 ] int 
  9811 ;;  w               2   51[BANK1 ] int 
  9812 ;;  p               2   49[BANK1 ] int 
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  2   29[BANK1 ] int 
  9815 ;; Registers used:
  9816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9822 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9823 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9824 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9825 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9826 ;;Total ram usage:       36 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:   21
  9829 ;; This function calls:
  9830 ;;		___aodiv
  9831 ;;		___aomod
  9832 ;;		_abs
  9833 ;;		_pad
  9834 ;; This function is called by:
  9835 ;;		_vfpfcnvrt
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           	psect	text30
  9840  003EDE                     __ptext30:
  9841                           	opt callstack 0
  9842  003EDE                     _dtoa:
  9843                           	opt callstack 6
  9844                           
  9845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9846                           
  9847                           ; BSR set to: 1
  9848                           ;incstack = 0
  9849  003EDE  C11F  F137         	movff	dtoa@d,dtoa@n
  9850  003EE2  C120  F138         	movff	dtoa@d+1,dtoa@n+1
  9851  003EE6  C121  F139         	movff	dtoa@d+2,dtoa@n+2
  9852  003EEA  C122  F13A         	movff	dtoa@d+3,dtoa@n+3
  9853  003EEE  C123  F13B         	movff	dtoa@d+4,dtoa@n+4
  9854  003EF2  C124  F13C         	movff	dtoa@d+5,dtoa@n+5
  9855  003EF6  C125  F13D         	movff	dtoa@d+6,dtoa@n+6
  9856  003EFA  C126  F13E         	movff	dtoa@d+7,dtoa@n+7
  9857                           
  9858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  9859  003EFE  0101               	movlb	1	; () banked
  9860  003F00  AF3E               	btfss	(dtoa@n+7)& (0+255),7,b
  9861  003F02  D002               	goto	u10470
  9862  003F04  0E01               	movlw	1
  9863  003F06  D001               	goto	u10480
  9864  003F08                     u10470:
  9865  003F08  0E00               	movlw	0
  9866  003F0A                     u10480:
  9867  003F0A  6F35               	movwf	dtoa@s& (0+255),b
  9868  003F0C  6B36               	clrf	(dtoa@s+1)& (0+255),b
  9869                           
  9870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9871  003F0E  5135               	movf	dtoa@s& (0+255),w,b
  9872  003F10  1136               	iorwf	(dtoa@s+1)& (0+255),w,b
  9873  003F12  B4D8               	btfsc	status,2,c
  9874  003F14  D010               	goto	l7515
  9875                           
  9876                           ; BSR set to: 1
  9877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9878  003F16  1F3E               	comf	(dtoa@n+7)& (0+255),f,b
  9879  003F18  1F3D               	comf	(dtoa@n+6)& (0+255),f,b
  9880  003F1A  1F3C               	comf	(dtoa@n+5)& (0+255),f,b
  9881  003F1C  1F3B               	comf	(dtoa@n+4)& (0+255),f,b
  9882  003F1E  1F3A               	comf	(dtoa@n+3)& (0+255),f,b
  9883  003F20  1F39               	comf	(dtoa@n+2)& (0+255),f,b
  9884  003F22  1F38               	comf	(dtoa@n+1)& (0+255),f,b
  9885  003F24  6D37               	negf	dtoa@n& (0+255),b
  9886  003F26  0E00               	movlw	0
  9887  003F28  2338               	addwfc	(dtoa@n+1)& (0+255),f,b
  9888  003F2A  2339               	addwfc	(dtoa@n+2)& (0+255),f,b
  9889  003F2C  233A               	addwfc	(dtoa@n+3)& (0+255),f,b
  9890  003F2E  233B               	addwfc	(dtoa@n+4)& (0+255),f,b
  9891  003F30  233C               	addwfc	(dtoa@n+5)& (0+255),f,b
  9892  003F32  233D               	addwfc	(dtoa@n+6)& (0+255),f,b
  9893  003F34  233E               	addwfc	(dtoa@n+7)& (0+255),f,b
  9894  003F36                     l7515:
  9895                           
  9896                           ; BSR set to: 1
  9897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9898  003F36  AFE0               	btfss	(_prec+1)& (0+255),7,b
  9899                           
  9900                           ; BSR set to: 1
  9901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9902  003F38  93E1               	bcf	_flags& (0+255),1,b
  9903                           
  9904                           ; BSR set to: 1
  9905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9906  003F3A  BFE0               	btfsc	(_prec+1)& (0+255),7,b
  9907  003F3C  D005               	goto	u10510
  9908  003F3E  51E0               	movf	(_prec+1)& (0+255),w,b
  9909  003F40  E108               	bnz	l608
  9910  003F42  05DF               	decf	_prec& (0+255),w,b
  9911  003F44  B0D8               	btfsc	status,0,c
  9912  003F46  D005               	goto	l608
  9913  003F48                     u10510:
  9914                           
  9915                           ; BSR set to: 1
  9916  003F48  0E00               	movlw	0
  9917  003F4A  6F32               	movwf	(dtoa@p+1)& (0+255),b
  9918  003F4C  0E01               	movlw	1
  9919  003F4E  6F31               	movwf	dtoa@p& (0+255),b
  9920  003F50  D004               	goto	l610
  9921  003F52                     l608:
  9922                           
  9923                           ; BSR set to: 1
  9924  003F52  C1DF  F131         	movff	_prec,dtoa@p
  9925  003F56  C1E0  F132         	movff	_prec+1,dtoa@p+1
  9926  003F5A                     l610:
  9927                           
  9928                           ; BSR set to: 1
  9929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9930  003F5A  C1DD  F133         	movff	_width,dtoa@w
  9931  003F5E  C1DE  F134         	movff	_width+1,dtoa@w+1
  9932                           
  9933                           ; BSR set to: 1
  9934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9935  003F62  5135               	movf	dtoa@s& (0+255),w,b
  9936  003F64  1136               	iorwf	(dtoa@s+1)& (0+255),w,b
  9937  003F66  A4D8               	btfss	status,2,c
  9938  003F68  D002               	goto	u10530
  9939                           
  9940                           ; BSR set to: 1
  9941  003F6A  A5E1               	btfss	_flags& (0+255),2,b
  9942  003F6C  D003               	goto	l7529
  9943  003F6E                     u10530:
  9944                           
  9945                           ; BSR set to: 1
  9946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9947  003F6E  0733               	decf	dtoa@w& (0+255),f,b
  9948  003F70  A0D8               	btfss	status,0,c
  9949  003F72  0734               	decf	(dtoa@w+1)& (0+255),f,b
  9950  003F74                     l7529:
  9951                           
  9952                           ; BSR set to: 1
  9953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9954  003F74  0E00               	movlw	0
  9955  003F76  6F40               	movwf	(dtoa@i+1)& (0+255),b
  9956  003F78  0E4F               	movlw	79
  9957  003F7A  6F3F               	movwf	dtoa@i& (0+255),b
  9958                           
  9959                           ; BSR set to: 1
  9960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9961  003F7C  0E00               	movlw	0
  9962  003F7E  0102               	movlb	2	; () banked
  9963  003F80  6FB3               	movwf	(_dbuf+79)& (0+255),b
  9964                           
  9965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9966  003F82  D07D               	goto	l7543
  9967  003F84                     l7533:
  9968                           
  9969                           ; BSR set to: 1
  9970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9971  003F84  073F               	decf	dtoa@i& (0+255),f,b
  9972  003F86  A0D8               	btfss	status,0,c
  9973  003F88  0740               	decf	(dtoa@i+1)& (0+255),f,b
  9974                           
  9975                           ; BSR set to: 1
  9976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9977  003F8A  0E64               	movlw	low _dbuf
  9978  003F8C  253F               	addwf	dtoa@i& (0+255),w,b
  9979  003F8E  6ED9               	movwf	fsr2l,c
  9980  003F90  0E02               	movlw	high _dbuf
  9981  003F92  2140               	addwfc	(dtoa@i+1)& (0+255),w,b
  9982  003F94  6EDA               	movwf	fsr2h,c
  9983  003F96  C137  F100         	movff	dtoa@n,___aomod@dividend
  9984  003F9A  C138  F101         	movff	dtoa@n+1,___aomod@dividend+1
  9985  003F9E  C139  F102         	movff	dtoa@n+2,___aomod@dividend+2
  9986  003FA2  C13A  F103         	movff	dtoa@n+3,___aomod@dividend+3
  9987  003FA6  C13B  F104         	movff	dtoa@n+4,___aomod@dividend+4
  9988  003FAA  C13C  F105         	movff	dtoa@n+5,___aomod@dividend+5
  9989  003FAE  C13D  F106         	movff	dtoa@n+6,___aomod@dividend+6
  9990  003FB2  C13E  F107         	movff	dtoa@n+7,___aomod@dividend+7
  9991  003FB6  0E0A               	movlw	10
  9992  003FB8  6F08               	movwf	___aomod@divisor& (0+255),b
  9993  003FBA  0E00               	movlw	0
  9994  003FBC  6F09               	movwf	(___aomod@divisor+1)& (0+255),b
  9995  003FBE  0E00               	movlw	0
  9996  003FC0  6F0A               	movwf	(___aomod@divisor+2)& (0+255),b
  9997  003FC2  0E00               	movlw	0
  9998  003FC4  6F0B               	movwf	(___aomod@divisor+3)& (0+255),b
  9999  003FC6  0E00               	movlw	0
 10000  003FC8  6F0C               	movwf	(___aomod@divisor+4)& (0+255),b
 10001  003FCA  0E00               	movlw	0
 10002  003FCC  6F0D               	movwf	(___aomod@divisor+5)& (0+255),b
 10003  003FCE  0E00               	movlw	0
 10004  003FD0  6F0E               	movwf	(___aomod@divisor+6)& (0+255),b
 10005  003FD2  0E00               	movlw	0
 10006  003FD4  6F0F               	movwf	(___aomod@divisor+7)& (0+255),b
 10007  003FD6  EC65  F029         	call	___aomod	;wreg free
 10008  003FDA  C100  F127         	movff	?___aomod,??_dtoa
 10009  003FDE  C101  F128         	movff	?___aomod+1,??_dtoa+1
 10010  003FE2  C102  F129         	movff	?___aomod+2,??_dtoa+2
 10011  003FE6  C103  F12A         	movff	?___aomod+3,??_dtoa+3
 10012  003FEA  C104  F12B         	movff	?___aomod+4,??_dtoa+4
 10013  003FEE  C105  F12C         	movff	?___aomod+5,??_dtoa+5
 10014  003FF2  C106  F12D         	movff	?___aomod+6,??_dtoa+6
 10015  003FF6  C107  F12E         	movff	?___aomod+7,??_dtoa+7
 10016  003FFA  C127  F112         	movff	??_dtoa,abs@a
 10017  003FFE  C129  F113         	movff	??_dtoa+2,abs@a+1
 10018  004002  EC4B  F038         	call	_abs	;wreg free
 10019  004006  0101               	movlb	1	; () banked
 10020  004008  5112               	movf	?_abs& (0+255),w,b
 10021  00400A  0F30               	addlw	48
 10022  00400C  6EDF               	movwf	indf2,c
 10023                           
 10024                           ; BSR set to: 1
 10025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 10026  00400E  0731               	decf	dtoa@p& (0+255),f,b
 10027  004010  A0D8               	btfss	status,0,c
 10028  004012  0732               	decf	(dtoa@p+1)& (0+255),f,b
 10029                           
 10030                           ; BSR set to: 1
 10031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 10032  004014  0733               	decf	dtoa@w& (0+255),f,b
 10033  004016  A0D8               	btfss	status,0,c
 10034  004018  0734               	decf	(dtoa@w+1)& (0+255),f,b
 10035                           
 10036                           ; BSR set to: 1
 10037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 10038  00401A  C137  F100         	movff	dtoa@n,___aodiv@dividend
 10039  00401E  C138  F101         	movff	dtoa@n+1,___aodiv@dividend+1
 10040  004022  C139  F102         	movff	dtoa@n+2,___aodiv@dividend+2
 10041  004026  C13A  F103         	movff	dtoa@n+3,___aodiv@dividend+3
 10042  00402A  C13B  F104         	movff	dtoa@n+4,___aodiv@dividend+4
 10043  00402E  C13C  F105         	movff	dtoa@n+5,___aodiv@dividend+5
 10044  004032  C13D  F106         	movff	dtoa@n+6,___aodiv@dividend+6
 10045  004036  C13E  F107         	movff	dtoa@n+7,___aodiv@dividend+7
 10046  00403A  0E0A               	movlw	10
 10047  00403C  6F08               	movwf	___aodiv@divisor& (0+255),b
 10048  00403E  0E00               	movlw	0
 10049  004040  6F09               	movwf	(___aodiv@divisor+1)& (0+255),b
 10050  004042  0E00               	movlw	0
 10051  004044  6F0A               	movwf	(___aodiv@divisor+2)& (0+255),b
 10052  004046  0E00               	movlw	0
 10053  004048  6F0B               	movwf	(___aodiv@divisor+3)& (0+255),b
 10054  00404A  0E00               	movlw	0
 10055  00404C  6F0C               	movwf	(___aodiv@divisor+4)& (0+255),b
 10056  00404E  0E00               	movlw	0
 10057  004050  6F0D               	movwf	(___aodiv@divisor+5)& (0+255),b
 10058  004052  0E00               	movlw	0
 10059  004054  6F0E               	movwf	(___aodiv@divisor+6)& (0+255),b
 10060  004056  0E00               	movlw	0
 10061  004058  6F0F               	movwf	(___aodiv@divisor+7)& (0+255),b
 10062  00405A  ECA2  F025         	call	___aodiv	;wreg free
 10063  00405E  C100  F137         	movff	?___aodiv,dtoa@n
 10064  004062  C101  F138         	movff	?___aodiv+1,dtoa@n+1
 10065  004066  C102  F139         	movff	?___aodiv+2,dtoa@n+2
 10066  00406A  C103  F13A         	movff	?___aodiv+3,dtoa@n+3
 10067  00406E  C104  F13B         	movff	?___aodiv+4,dtoa@n+4
 10068  004072  C105  F13C         	movff	?___aodiv+5,dtoa@n+5
 10069  004076  C106  F13D         	movff	?___aodiv+6,dtoa@n+6
 10070  00407A  C107  F13E         	movff	?___aodiv+7,dtoa@n+7
 10071  00407E                     l7543:
 10072                           
 10073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10074  00407E  0101               	movlb	1	; () banked
 10075  004080  BF40               	btfsc	(dtoa@i+1)& (0+255),7,b
 10076  004082  D01F               	goto	u10580
 10077  004084  5140               	movf	(dtoa@i+1)& (0+255),w,b
 10078  004086  E103               	bnz	u10540
 10079  004088  053F               	decf	dtoa@i& (0+255),w,b
 10080  00408A  A0D8               	btfss	status,0,c
 10081  00408C  D01A               	goto	u10580
 10082  00408E                     u10540:
 10083                           
 10084                           ; BSR set to: 1
 10085  00408E  5137               	movf	dtoa@n& (0+255),w,b
 10086  004090  1138               	iorwf	(dtoa@n+1)& (0+255),w,b
 10087  004092  1139               	iorwf	(dtoa@n+2)& (0+255),w,b
 10088  004094  113A               	iorwf	(dtoa@n+3)& (0+255),w,b
 10089  004096  113B               	iorwf	(dtoa@n+4)& (0+255),w,b
 10090  004098  113C               	iorwf	(dtoa@n+5)& (0+255),w,b
 10091  00409A  113D               	iorwf	(dtoa@n+6)& (0+255),w,b
 10092  00409C  113E               	iorwf	(dtoa@n+7)& (0+255),w,b
 10093  00409E  A4D8               	btfss	status,2,c
 10094  0040A0  D771               	goto	l7533
 10095                           
 10096                           ; BSR set to: 1
 10097  0040A2  BF32               	btfsc	(dtoa@p+1)& (0+255),7,b
 10098  0040A4  D005               	goto	u10560
 10099  0040A6  5132               	movf	(dtoa@p+1)& (0+255),w,b
 10100  0040A8  E102               	bnz	u10561
 10101  0040AA  0531               	decf	dtoa@p& (0+255),w,b
 10102  0040AC  B0D8               	btfsc	status,0,c
 10103  0040AE                     u10561:
 10104  0040AE  D76A               	goto	l7533
 10105  0040B0                     u10560:
 10106                           
 10107                           ; BSR set to: 1
 10108  0040B0  BF34               	btfsc	(dtoa@w+1)& (0+255),7,b
 10109  0040B2  D007               	goto	u10580
 10110  0040B4  5134               	movf	(dtoa@w+1)& (0+255),w,b
 10111  0040B6  E103               	bnz	u10570
 10112  0040B8  0533               	decf	dtoa@w& (0+255),w,b
 10113  0040BA  A0D8               	btfss	status,0,c
 10114  0040BC  D002               	goto	u10580
 10115  0040BE                     u10570:
 10116                           
 10117                           ; BSR set to: 1
 10118  0040BE  B3E1               	btfsc	_flags& (0+255),1,b
 10119  0040C0  D761               	goto	l7533
 10120  0040C2                     u10580:
 10121                           
 10122                           ; BSR set to: 1
 10123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 10124  0040C2  5135               	movf	dtoa@s& (0+255),w,b
 10125  0040C4  1136               	iorwf	(dtoa@s+1)& (0+255),w,b
 10126  0040C6  A4D8               	btfss	status,2,c
 10127  0040C8  D002               	goto	u10600
 10128                           
 10129                           ; BSR set to: 1
 10130  0040CA  A5E1               	btfss	_flags& (0+255),2,b
 10131  0040CC  D017               	goto	l7567
 10132  0040CE                     u10600:
 10133                           
 10134                           ; BSR set to: 1
 10135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 10136  0040CE  073F               	decf	dtoa@i& (0+255),f,b
 10137  0040D0  A0D8               	btfss	status,0,c
 10138  0040D2  0740               	decf	(dtoa@i+1)& (0+255),f,b
 10139                           
 10140                           ; BSR set to: 1
 10141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 10142  0040D4  5135               	movf	dtoa@s& (0+255),w,b
 10143  0040D6  1136               	iorwf	(dtoa@s+1)& (0+255),w,b
 10144  0040D8  A4D8               	btfss	status,2,c
 10145  0040DA  D004               	goto	l7563
 10146                           
 10147                           ; BSR set to: 1
 10148  0040DC  0E00               	movlw	0
 10149  0040DE  6F30               	movwf	(_dtoa$1514+1)& (0+255),b
 10150  0040E0  0E2B               	movlw	43
 10151  0040E2  D003               	goto	L13
 10152  0040E4                     l7563:
 10153                           
 10154                           ; BSR set to: 1
 10155  0040E4  0E00               	movlw	0
 10156  0040E6  6F30               	movwf	(_dtoa$1514+1)& (0+255),b
 10157  0040E8  0E2D               	movlw	45
 10158  0040EA                     L13:
 10159  0040EA  6F2F               	movwf	_dtoa$1514& (0+255),b
 10160                           
 10161                           ; BSR set to: 1
 10162  0040EC  0E64               	movlw	low _dbuf
 10163  0040EE  253F               	addwf	dtoa@i& (0+255),w,b
 10164  0040F0  6ED9               	movwf	fsr2l,c
 10165  0040F2  0E02               	movlw	high _dbuf
 10166  0040F4  2140               	addwfc	(dtoa@i+1)& (0+255),w,b
 10167  0040F6  6EDA               	movwf	fsr2h,c
 10168  0040F8  C12F  FFDF         	movff	_dtoa$1514,indf2
 10169  0040FC                     l7567:
 10170                           
 10171                           ; BSR set to: 1
 10172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 10173  0040FC  C11D  F112         	movff	dtoa@fp,pad@fp
 10174  004100  C11E  F113         	movff	dtoa@fp+1,pad@fp+1
 10175  004104  0E64               	movlw	low _dbuf
 10176  004106  253F               	addwf	dtoa@i& (0+255),w,b
 10177  004108  6F14               	movwf	pad@buf& (0+255),b
 10178  00410A  0E02               	movlw	high _dbuf
 10179  00410C  2140               	addwfc	(dtoa@i+1)& (0+255),w,b
 10180  00410E  6F15               	movwf	(pad@buf+1)& (0+255),b
 10181  004110  C133  F116         	movff	dtoa@w,pad@p
 10182  004114  C134  F117         	movff	dtoa@w+1,pad@p+1
 10183  004118  ECD6  F031         	call	_pad	;wreg free
 10184  00411C  C112  F11D         	movff	?_pad,?_dtoa
 10185  004120  C113  F11E         	movff	?_pad+1,?_dtoa+1
 10186  004124  0012               	return		;funcret
 10187  004126                     __end_of_dtoa:
 10188                           	opt callstack 0
 10189                           
 10190 ;; *************** function _pad *****************
 10191 ;; Defined at:
 10192 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  fp              2   18[BANK1 ] PTR struct _IO_FILE
 10195 ;;		 -> sprintf@f(6), NULL(0), 
 10196 ;;  buf             2   20[BANK1 ] PTR unsigned char 
 10197 ;;		 -> dbuf(80), 
 10198 ;;  p               2   22[BANK1 ] int 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;  w               2   27[BANK1 ] int 
 10201 ;;  i               2   25[BANK1 ] int 
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  2   18[BANK1 ] int 
 10204 ;; Registers used:
 10205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10211 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10212 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10213 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10214 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10215 ;;Total ram usage:       11 bytes
 10216 ;; Hardware stack levels used:    1
 10217 ;; Hardware stack levels required when called:   20
 10218 ;; This function calls:
 10219 ;;		_fputc
 10220 ;;		_fputs
 10221 ;;		_strlen
 10222 ;; This function is called by:
 10223 ;;		_dtoa
 10224 ;;		_efgtoa
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           	psect	text31
 10229  0063AC                     __ptext31:
 10230                           	opt callstack 0
 10231  0063AC                     _pad:
 10232                           	opt callstack 6
 10233                           
 10234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10235                           
 10236                           ;incstack = 0
 10237  0063AC  0101               	movlb	1	; () banked
 10238  0063AE  A1E1               	btfss	_flags& (0+255),0,b
 10239  0063B0  D00A               	goto	l6869
 10240                           
 10241                           ; BSR set to: 1
 10242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10243  0063B2  C114  F10B         	movff	pad@buf,fputs@s
 10244  0063B6  C115  F10C         	movff	pad@buf+1,fputs@s+1
 10245  0063BA  C112  F10D         	movff	pad@fp,fputs@fp
 10246  0063BE  C113  F10E         	movff	pad@fp+1,fputs@fp+1
 10247  0063C2  ECD8  F037         	call	_fputs	;wreg free
 10248  0063C6                     l6869:
 10249                           
 10250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10251  0063C6  0101               	movlb	1	; () banked
 10252  0063C8  BF17               	btfsc	(pad@p+1)& (0+255),7,b
 10253  0063CA  D005               	goto	l6873
 10254                           
 10255                           ; BSR set to: 1
 10256  0063CC  C116  F11B         	movff	pad@p,pad@w
 10257  0063D0  C117  F11C         	movff	pad@p+1,pad@w+1
 10258  0063D4  D004               	goto	l597
 10259  0063D6                     l6873:
 10260                           
 10261                           ; BSR set to: 1
 10262  0063D6  0E00               	movlw	0
 10263  0063D8  6F1C               	movwf	(pad@w+1)& (0+255),b
 10264  0063DA  0E00               	movlw	0
 10265  0063DC  6F1B               	movwf	pad@w& (0+255),b
 10266  0063DE                     l597:
 10267                           
 10268                           ; BSR set to: 1
 10269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10270  0063DE  0E00               	movlw	0
 10271  0063E0  6F1A               	movwf	(pad@i+1)& (0+255),b
 10272  0063E2  0E00               	movlw	0
 10273  0063E4  6F19               	movwf	pad@i& (0+255),b
 10274                           
 10275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10276  0063E6  D00D               	goto	l6879
 10277  0063E8                     l6875:
 10278                           
 10279                           ; BSR set to: 1
 10280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10281  0063E8  0E00               	movlw	0
 10282  0063EA  6F03               	movwf	(fputc@c+1)& (0+255),b
 10283  0063EC  0E20               	movlw	32
 10284  0063EE  6F02               	movwf	fputc@c& (0+255),b
 10285  0063F0  C112  F104         	movff	pad@fp,fputc@fp
 10286  0063F4  C113  F105         	movff	pad@fp+1,fputc@fp+1
 10287  0063F8  EC35  F031         	call	_fputc	;wreg free
 10288                           
 10289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10290  0063FC  0101               	movlb	1	; () banked
 10291  0063FE  4B19               	infsnz	pad@i& (0+255),f,b
 10292  006400  2B1A               	incf	(pad@i+1)& (0+255),f,b
 10293  006402                     l6879:
 10294                           
 10295                           ; BSR set to: 1
 10296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10297  006402  511B               	movf	pad@w& (0+255),w,b
 10298  006404  5D19               	subwf	pad@i& (0+255),w,b
 10299  006406  511A               	movf	(pad@i+1)& (0+255),w,b
 10300  006408  0A80               	xorlw	128
 10301  00640A  6F18               	movwf	??_pad& (0+255),b
 10302  00640C  511C               	movf	(pad@w+1)& (0+255),w,b
 10303  00640E  0A80               	xorlw	128
 10304  006410  5918               	subwfb	??_pad& (0+255),w,b
 10305  006412  A0D8               	btfss	status,0,c
 10306  006414  D7E9               	goto	l6875
 10307                           
 10308                           ; BSR set to: 1
 10309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10310  006416  B1E1               	btfsc	_flags& (0+255),0,b
 10311  006418  D00A               	goto	l6883
 10312                           
 10313                           ; BSR set to: 1
 10314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10315  00641A  C114  F10B         	movff	pad@buf,fputs@s
 10316  00641E  C115  F10C         	movff	pad@buf+1,fputs@s+1
 10317  006422  C112  F10D         	movff	pad@fp,fputs@fp
 10318  006426  C113  F10E         	movff	pad@fp+1,fputs@fp+1
 10319  00642A  ECD8  F037         	call	_fputs	;wreg free
 10320  00642E                     l6883:
 10321                           
 10322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10323  00642E  C114  F100         	movff	pad@buf,strlen@s
 10324  006432  C115  F101         	movff	pad@buf+1,strlen@s+1
 10325  006436  EC10  F039         	call	_strlen	;wreg free
 10326  00643A  0101               	movlb	1	; () banked
 10327  00643C  511B               	movf	pad@w& (0+255),w,b
 10328  00643E  2500               	addwf	?_strlen& (0+255),w,b
 10329  006440  6F12               	movwf	?_pad& (0+255),b
 10330  006442  511C               	movf	(pad@w+1)& (0+255),w,b
 10331  006444  2101               	addwfc	(?_strlen+1)& (0+255),w,b
 10332  006446  6F13               	movwf	(?_pad+1)& (0+255),b
 10333                           
 10334                           ; BSR set to: 1
 10335  006448  0012               	return		;funcret
 10336  00644A                     __end_of_pad:
 10337                           	opt callstack 0
 10338                           
 10339 ;; *************** function _strlen *****************
 10340 ;; Defined at:
 10341 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10342 ;; Parameters:    Size  Location     Type
 10343 ;;  s               2    0[BANK1 ] PTR const unsigned char 
 10344 ;;		 -> dbuf(80), 
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;  a               2    2[BANK1 ] PTR const unsigned char 
 10347 ;;		 -> dbuf(80), 
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  2    0[BANK1 ] unsigned int 
 10350 ;; Registers used:
 10351 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10357 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10358 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10360 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10361 ;;Total ram usage:        4 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:   16
 10364 ;; This function calls:
 10365 ;;		Nothing
 10366 ;; This function is called by:
 10367 ;;		_pad
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           	psect	text32
 10372  007220                     __ptext32:
 10373                           	opt callstack 0
 10374  007220                     _strlen:
 10375                           	opt callstack 9
 10376                           
 10377                           ; BSR set to: 1
 10378                           ;incstack = 0
 10379  007220  C100  F102         	movff	strlen@s,strlen@a
 10380  007224  C101  F103         	movff	strlen@s+1,strlen@a+1
 10381  007228  D003               	goto	l6553
 10382  00722A                     l6551:
 10383  00722A  0101               	movlb	1	; () banked
 10384  00722C  4B00               	infsnz	strlen@s& (0+255),f,b
 10385  00722E  2B01               	incf	(strlen@s+1)& (0+255),f,b
 10386  007230                     l6553:
 10387  007230  C100  FFD9         	movff	strlen@s,fsr2l
 10388  007234  C101  FFDA         	movff	strlen@s+1,fsr2h
 10389  007238  50DF               	movf	indf2,w,c
 10390  00723A  A4D8               	btfss	status,2,c
 10391  00723C  D7F6               	goto	l6551
 10392  00723E  0101               	movlb	1	; () banked
 10393  007240  5102               	movf	strlen@a& (0+255),w,b
 10394  007242  5D00               	subwf	strlen@s& (0+255),w,b
 10395  007244  6F00               	movwf	?_strlen& (0+255),b
 10396  007246  5103               	movf	(strlen@a+1)& (0+255),w,b
 10397  007248  5901               	subwfb	(strlen@s+1)& (0+255),w,b
 10398  00724A  6F01               	movwf	(?_strlen+1)& (0+255),b
 10399                           
 10400                           ; BSR set to: 1
 10401  00724C  0012               	return		;funcret
 10402  00724E                     __end_of_strlen:
 10403                           	opt callstack 0
 10404                           
 10405 ;; *************** function _fputs *****************
 10406 ;; Defined at:
 10407 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10408 ;; Parameters:    Size  Location     Type
 10409 ;;  s               2   11[BANK1 ] PTR const unsigned char 
 10410 ;;		 -> dbuf(80), 
 10411 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
 10412 ;;		 -> sprintf@f(6), NULL(0), 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;  i               2   16[BANK1 ] int 
 10415 ;;  c               1   15[BANK1 ] unsigned char 
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  2   11[BANK1 ] int 
 10418 ;; Registers used:
 10419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10425 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10426 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10428 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10429 ;;Total ram usage:        7 bytes
 10430 ;; Hardware stack levels used:    1
 10431 ;; Hardware stack levels required when called:   19
 10432 ;; This function calls:
 10433 ;;		_fputc
 10434 ;; This function is called by:
 10435 ;;		_pad
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text33
 10440  006FB0                     __ptext33:
 10441                           	opt callstack 0
 10442  006FB0                     _fputs:
 10443                           	opt callstack 6
 10444                           
 10445                           ; BSR set to: 1
 10446                           ;incstack = 0
 10447  006FB0  0E00               	movlw	0
 10448  006FB2  0101               	movlb	1	; () banked
 10449  006FB4  6F11               	movwf	(fputs@i+1)& (0+255),b
 10450  006FB6  0E00               	movlw	0
 10451  006FB8  6F10               	movwf	fputs@i& (0+255),b
 10452  006FBA  D00C               	goto	l6547
 10453  006FBC                     l6543:
 10454                           
 10455                           ; BSR set to: 1
 10456  006FBC  C10F  F102         	movff	fputs@c,fputc@c
 10457  006FC0  6B03               	clrf	(fputc@c+1)& (0+255),b
 10458  006FC2  C10D  F104         	movff	fputs@fp,fputc@fp
 10459  006FC6  C10E  F105         	movff	fputs@fp+1,fputc@fp+1
 10460  006FCA  EC35  F031         	call	_fputc	;wreg free
 10461  006FCE  0101               	movlb	1	; () banked
 10462  006FD0  4B10               	infsnz	fputs@i& (0+255),f,b
 10463  006FD2  2B11               	incf	(fputs@i+1)& (0+255),f,b
 10464  006FD4                     l6547:
 10465                           
 10466                           ; BSR set to: 1
 10467  006FD4  5110               	movf	fputs@i& (0+255),w,b
 10468  006FD6  250B               	addwf	fputs@s& (0+255),w,b
 10469  006FD8  6ED9               	movwf	fsr2l,c
 10470  006FDA  5111               	movf	(fputs@i+1)& (0+255),w,b
 10471  006FDC  210C               	addwfc	(fputs@s+1)& (0+255),w,b
 10472  006FDE  6EDA               	movwf	fsr2h,c
 10473  006FE0  50DF               	movf	indf2,w,c
 10474  006FE2  6F0F               	movwf	fputs@c& (0+255),b
 10475  006FE4  510F               	movf	fputs@c& (0+255),w,b
 10476  006FE6  B4D8               	btfsc	status,2,c
 10477  006FE8  0012               	return	
 10478  006FEA  D7E8               	goto	l6543
 10479  006FEC                     __end_of_fputs:
 10480                           	opt callstack 0
 10481                           
 10482 ;; *************** function _fputc *****************
 10483 ;; Defined at:
 10484 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10485 ;; Parameters:    Size  Location     Type
 10486 ;;  c               2    2[BANK1 ] int 
 10487 ;;  fp              2    4[BANK1 ] PTR struct _IO_FILE
 10488 ;;		 -> sprintf@f(6), NULL(0), 
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;		None
 10491 ;; Return value:  Size  Location     Type
 10492 ;;                  2    2[BANK1 ] int 
 10493 ;; Registers used:
 10494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/0
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10500 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10502 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10503 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;Total ram usage:        9 bytes
 10505 ;; Hardware stack levels used:    1
 10506 ;; Hardware stack levels required when called:   18
 10507 ;; This function calls:
 10508 ;;		_putch
 10509 ;; This function is called by:
 10510 ;;		_pad
 10511 ;;		_vfpfcnvrt
 10512 ;;		_fputs
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           	psect	text34
 10517  00626A                     __ptext34:
 10518                           	opt callstack 0
 10519  00626A                     _fputc:
 10520                           	opt callstack 9
 10521                           
 10522                           ; BSR set to: 1
 10523                           ;incstack = 0
 10524  00626A  0101               	movlb	1	; () banked
 10525  00626C  5104               	movf	fputc@fp& (0+255),w,b
 10526  00626E  1105               	iorwf	(fputc@fp+1)& (0+255),w,b
 10527  006270  B4D8               	btfsc	status,2,c
 10528  006272  D004               	goto	u7910
 10529                           
 10530                           ; BSR set to: 1
 10531  006274  5104               	movf	fputc@fp& (0+255),w,b
 10532  006276  1105               	iorwf	(fputc@fp+1)& (0+255),w,b
 10533  006278  A4D8               	btfss	status,2,c
 10534  00627A  D004               	goto	l6111
 10535  00627C                     u7910:
 10536                           
 10537                           ; BSR set to: 1
 10538  00627C  5102               	movf	fputc@c& (0+255),w,b
 10539  00627E  EC7E  F03A         	call	_putch
 10540  006282  0012               	return	
 10541  006284                     l6111:
 10542                           
 10543                           ; BSR set to: 1
 10544  006284  EE20 F004          	lfsr	2,4
 10545  006288  5104               	movf	fputc@fp& (0+255),w,b
 10546  00628A  26D9               	addwf	fsr2l,f,c
 10547  00628C  5105               	movf	(fputc@fp+1)& (0+255),w,b
 10548  00628E  22DA               	addwfc	fsr2h,f,c
 10549  006290  50DE               	movf	postinc2,w,c
 10550  006292  10DE               	iorwf	postinc2,w,c
 10551  006294  B4D8               	btfsc	status,2,c
 10552  006296  D016               	goto	u7930
 10553                           
 10554                           ; BSR set to: 1
 10555  006298  EE20 F004          	lfsr	2,4
 10556  00629C  5104               	movf	fputc@fp& (0+255),w,b
 10557  00629E  26D9               	addwf	fsr2l,f,c
 10558  0062A0  5105               	movf	(fputc@fp+1)& (0+255),w,b
 10559  0062A2  22DA               	addwfc	fsr2h,f,c
 10560  0062A4  EE10 F002          	lfsr	1,2
 10561  0062A8  5104               	movf	fputc@fp& (0+255),w,b
 10562  0062AA  26E1               	addwf	fsr1l,f,c
 10563  0062AC  5105               	movf	(fputc@fp+1)& (0+255),w,b
 10564  0062AE  22E2               	addwfc	fsr1h,f,c
 10565  0062B0  50DE               	movf	postinc2,w,c
 10566  0062B2  5CE6               	subwf	postinc1,w,c
 10567  0062B4  50E6               	movf	postinc1,w,c
 10568  0062B6  0A80               	xorlw	128
 10569  0062B8  6F0A               	movwf	(??_fputc+4)& (0+255),b
 10570  0062BA  50DE               	movf	postinc2,w,c
 10571  0062BC  0A80               	xorlw	128
 10572  0062BE  590A               	subwfb	(??_fputc+4)& (0+255),w,b
 10573  0062C0  B0D8               	btfsc	status,0,c
 10574  0062C2  0012               	return	
 10575  0062C4                     u7930:
 10576                           
 10577                           ; BSR set to: 1
 10578  0062C4  EE20 F002          	lfsr	2,2
 10579  0062C8  5104               	movf	fputc@fp& (0+255),w,b
 10580  0062CA  26D9               	addwf	fsr2l,f,c
 10581  0062CC  5105               	movf	(fputc@fp+1)& (0+255),w,b
 10582  0062CE  22DA               	addwfc	fsr2h,f,c
 10583  0062D0  CFDE F106          	movff	postinc2,??_fputc
 10584  0062D4  CFDD F107          	movff	postdec2,??_fputc+1
 10585  0062D8  C104  FFD9         	movff	fputc@fp,fsr2l
 10586  0062DC  C105  FFDA         	movff	fputc@fp+1,fsr2h
 10587  0062E0  CFDE F108          	movff	postinc2,??_fputc+2
 10588  0062E4  CFDD F109          	movff	postdec2,??_fputc+3
 10589  0062E8  5106               	movf	??_fputc& (0+255),w,b
 10590  0062EA  2508               	addwf	(??_fputc+2)& (0+255),w,b
 10591  0062EC  6ED9               	movwf	fsr2l,c
 10592  0062EE  5107               	movf	(??_fputc+1)& (0+255),w,b
 10593  0062F0  2109               	addwfc	(??_fputc+3)& (0+255),w,b
 10594  0062F2  6EDA               	movwf	fsr2h,c
 10595  0062F4  C102  FFDF         	movff	fputc@c,indf2
 10596  0062F8  EE20 F002          	lfsr	2,2
 10597  0062FC  5104               	movf	fputc@fp& (0+255),w,b
 10598  0062FE  26D9               	addwf	fsr2l,f,c
 10599  006300  5105               	movf	(fputc@fp+1)& (0+255),w,b
 10600  006302  22DA               	addwfc	fsr2h,f,c
 10601  006304  2ADE               	incf	postinc2,f,c
 10602  006306  0E00               	movlw	0
 10603  006308  22DD               	addwfc	postdec2,f,c
 10604  00630A  0012               	return		;funcret
 10605  00630C                     __end_of_fputc:
 10606                           	opt callstack 0
 10607                           
 10608 ;; *************** function _putch *****************
 10609 ;; Defined at:
 10610 ;;		line 201 in file "mcc_generated_files/eusart1.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  txData          1    wreg     unsigned char 
 10613 ;; Auto vars:     Size  Location     Type
 10614 ;;  txData          1    1[BANK1 ] unsigned char 
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  1    wreg      void 
 10617 ;; Registers used:
 10618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10619 ;; Tracked objects:
 10620 ;;		On entry : 0/0
 10621 ;;		On exit  : 0/0
 10622 ;;		Unchanged: 0/0
 10623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10625 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10627 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10628 ;;Total ram usage:        1 bytes
 10629 ;; Hardware stack levels used:    1
 10630 ;; Hardware stack levels required when called:   17
 10631 ;; This function calls:
 10632 ;;		_EUSART1_Write
 10633 ;; This function is called by:
 10634 ;;		_fputc
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text35
 10639  0074FC                     __ptext35:
 10640                           	opt callstack 0
 10641  0074FC                     _putch:
 10642                           	opt callstack 9
 10643                           
 10644                           ;incstack = 0
 10645                           ;putch@txData stored from wreg
 10646  0074FC  0101               	movlb	1	; () banked
 10647  0074FE  6F01               	movwf	putch@txData& (0+255),b
 10648                           
 10649                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
 10650  007500  0101               	movlb	1	; () banked
 10651  007502  5101               	movf	putch@txData& (0+255),w,b
 10652  007504  ECF6  F037         	call	_EUSART1_Write
 10653  007508  0012               	return		;funcret
 10654  00750A                     __end_of_putch:
 10655                           	opt callstack 0
 10656                           
 10657 ;; *************** function _EUSART1_Write *****************
 10658 ;; Defined at:
 10659 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 10660 ;; Parameters:    Size  Location     Type
 10661 ;;  txData          1    wreg     unsigned char 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  txData          1    0[BANK1 ] unsigned char 
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  1    wreg      void 
 10666 ;; Registers used:
 10667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10674 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10676 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10677 ;;Total ram usage:        1 bytes
 10678 ;; Hardware stack levels used:    1
 10679 ;; Hardware stack levels required when called:   16
 10680 ;; This function calls:
 10681 ;;		Nothing
 10682 ;; This function is called by:
 10683 ;;		_putch
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           	psect	text36
 10688  006FEC                     __ptext36:
 10689                           	opt callstack 0
 10690  006FEC                     _EUSART1_Write:
 10691                           	opt callstack 9
 10692                           
 10693                           ;incstack = 0
 10694                           ;EUSART1_Write@txData stored from wreg
 10695  006FEC  0101               	movlb	1	; () banked
 10696  006FEE  6F00               	movwf	EUSART1_Write@txData& (0+255),b
 10697  006FF0                     
 10698                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 10699                           
 10700                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 10701  006FF0  0101               	movlb	1	; () banked
 10702  006FF2  51F9               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 10703  006FF4  B4D8               	btfsc	status,2,c
 10704  006FF6  D7FC               	goto	l5225
 10705                           
 10706                           ; BSR set to: 1
 10707                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
 10708  006FF8  B89D               	btfsc	3997,4,c	;volatile
 10709  006FFA  D003               	goto	l159
 10710                           
 10711                           ; BSR set to: 1
 10712                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
 10713  006FFC  C100  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 10714                           
 10715                           ;mcc_generated_files/eusart1.c: 182:     }
 10716  007000  D010               	goto	l5241
 10717  007002                     l159:
 10718                           
 10719                           ; BSR set to: 1
 10720                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
 10721  007002  989D               	bcf	3997,4,c	;volatile
 10722                           
 10723                           ; BSR set to: 1
 10724                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 10725  007004  0E00               	movlw	low _eusart1TxBuffer
 10726  007006  25FB               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 10727  007008  6ED9               	movwf	fsr2l,c
 10728  00700A  6ADA               	clrf	fsr2h,c
 10729  00700C  0E02               	movlw	high _eusart1TxBuffer
 10730  00700E  22DA               	addwfc	fsr2h,f,c
 10731  007010  C100  FFDF         	movff	EUSART1_Write@txData,indf2
 10732                           
 10733                           ; BSR set to: 1
 10734  007014  2BFB               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 10735                           
 10736                           ; BSR set to: 1
 10737                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 10738  007016  0E3F               	movlw	63
 10739  007018  65FB               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 10740  00701A  D002               	goto	l5239
 10741                           
 10742                           ; BSR set to: 1
 10743                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 10744  00701C  0E00               	movlw	0
 10745  00701E  6FFB               	movwf	_eusart1TxHead& (0+255),b	;volatile
 10746  007020                     l5239:
 10747                           
 10748                           ; BSR set to: 1
 10749                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 10750  007020  07F9               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 10751  007022                     l5241:
 10752                           
 10753                           ; BSR set to: 1
 10754                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
 10755  007022  889D               	bsf	3997,4,c	;volatile
 10756                           
 10757                           ; BSR set to: 1
 10758  007024  0012               	return		;funcret
 10759  007026                     __end_of_EUSART1_Write:
 10760                           	opt callstack 0
 10761                           
 10762 ;; *************** function _abs *****************
 10763 ;; Defined at:
 10764 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 10765 ;; Parameters:    Size  Location     Type
 10766 ;;  a               2   18[BANK1 ] int 
 10767 ;; Auto vars:     Size  Location     Type
 10768 ;;		None
 10769 ;; Return value:  Size  Location     Type
 10770 ;;                  2   18[BANK1 ] int 
 10771 ;; Registers used:
 10772 ;;		wreg, status,2, status,0
 10773 ;; Tracked objects:
 10774 ;;		On entry : 0/0
 10775 ;;		On exit  : 0/0
 10776 ;;		Unchanged: 0/0
 10777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10778 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10780 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10781 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10782 ;;Total ram usage:        4 bytes
 10783 ;; Hardware stack levels used:    1
 10784 ;; Hardware stack levels required when called:   16
 10785 ;; This function calls:
 10786 ;;		Nothing
 10787 ;; This function is called by:
 10788 ;;		_dtoa
 10789 ;; This function uses a non-reentrant model
 10790 ;;
 10791                           
 10792                           	psect	text37
 10793  007096                     __ptext37:
 10794                           	opt callstack 0
 10795  007096                     _abs:
 10796                           	opt callstack 10
 10797                           
 10798                           ; BSR set to: 1
 10799                           ;incstack = 0
 10800  007096  0101               	movlb	1	; () banked
 10801  007098  BF13               	btfsc	(abs@a+1)& (0+255),7,b
 10802  00709A  D005               	goto	u9360
 10803  00709C  5113               	movf	(abs@a+1)& (0+255),w,b
 10804  00709E  E110               	bnz	l1442
 10805  0070A0  0512               	decf	abs@a& (0+255),w,b
 10806  0070A2  B0D8               	btfsc	status,0,c
 10807  0070A4  D00D               	goto	l1442
 10808  0070A6                     u9360:
 10809                           
 10810                           ; BSR set to: 1
 10811  0070A6  C112  F114         	movff	abs@a,??_abs
 10812  0070AA  C113  F115         	movff	abs@a+1,??_abs+1
 10813  0070AE  1F14               	comf	??_abs& (0+255),f,b
 10814  0070B0  1F15               	comf	(??_abs+1)& (0+255),f,b
 10815  0070B2  4B14               	infsnz	??_abs& (0+255),f,b
 10816  0070B4  2B15               	incf	(??_abs+1)& (0+255),f,b
 10817  0070B6  C114  F112         	movff	??_abs,?_abs
 10818  0070BA  C115  F113         	movff	??_abs+1,?_abs+1
 10819  0070BE  0012               	return	
 10820  0070C0                     l1442:
 10821                           
 10822                           ; BSR set to: 1
 10823  0070C0  C112  F112         	movff	abs@a,?_abs
 10824  0070C4  C113  F113         	movff	abs@a+1,?_abs+1
 10825                           
 10826                           ; BSR set to: 1
 10827  0070C8  0012               	return		;funcret
 10828  0070CA                     __end_of_abs:
 10829                           	opt callstack 0
 10830                           
 10831 ;; *************** function ___aomod *****************
 10832 ;; Defined at:
 10833 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;  dividend        8    0[BANK1 ] long long 
 10836 ;;  divisor         8    8[BANK1 ] long long 
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;  sign            1   17[BANK1 ] unsigned char 
 10839 ;;  counter         1   16[BANK1 ] unsigned char 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  8    0[BANK1 ] long long 
 10842 ;; Registers used:
 10843 ;;		wreg, status,2, status,0
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10849 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10850 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10852 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10853 ;;Total ram usage:       18 bytes
 10854 ;; Hardware stack levels used:    1
 10855 ;; Hardware stack levels required when called:   16
 10856 ;; This function calls:
 10857 ;;		Nothing
 10858 ;; This function is called by:
 10859 ;;		_dtoa
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863                           	psect	text38
 10864  0052CA                     __ptext38:
 10865                           	opt callstack 0
 10866  0052CA                     ___aomod:
 10867                           	opt callstack 10
 10868                           
 10869                           ; BSR set to: 1
 10870                           ;incstack = 0
 10871  0052CA  0E00               	movlw	0
 10872  0052CC  0101               	movlb	1	; () banked
 10873  0052CE  6F11               	movwf	___aomod@sign& (0+255),b
 10874                           
 10875                           ; BSR set to: 1
 10876  0052D0  AF07               	btfss	(___aomod@dividend+7)& (0+255),7,b
 10877  0052D2  D012               	goto	l7017
 10878                           
 10879                           ; BSR set to: 1
 10880  0052D4  1F07               	comf	(___aomod@dividend+7)& (0+255),f,b
 10881  0052D6  1F06               	comf	(___aomod@dividend+6)& (0+255),f,b
 10882  0052D8  1F05               	comf	(___aomod@dividend+5)& (0+255),f,b
 10883  0052DA  1F04               	comf	(___aomod@dividend+4)& (0+255),f,b
 10884  0052DC  1F03               	comf	(___aomod@dividend+3)& (0+255),f,b
 10885  0052DE  1F02               	comf	(___aomod@dividend+2)& (0+255),f,b
 10886  0052E0  1F01               	comf	(___aomod@dividend+1)& (0+255),f,b
 10887  0052E2  6D00               	negf	___aomod@dividend& (0+255),b
 10888  0052E4  0E00               	movlw	0
 10889  0052E6  2301               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10890  0052E8  2302               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10891  0052EA  2303               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10892  0052EC  2304               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10893  0052EE  2305               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10894  0052F0  2306               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10895  0052F2  2307               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10896                           
 10897                           ; BSR set to: 1
 10898  0052F4  0E01               	movlw	1
 10899  0052F6  6F11               	movwf	___aomod@sign& (0+255),b
 10900  0052F8                     l7017:
 10901                           
 10902                           ; BSR set to: 1
 10903  0052F8  AF0F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10904  0052FA  D010               	goto	l7021
 10905                           
 10906                           ; BSR set to: 1
 10907  0052FC  1F0F               	comf	(___aomod@divisor+7)& (0+255),f,b
 10908  0052FE  1F0E               	comf	(___aomod@divisor+6)& (0+255),f,b
 10909  005300  1F0D               	comf	(___aomod@divisor+5)& (0+255),f,b
 10910  005302  1F0C               	comf	(___aomod@divisor+4)& (0+255),f,b
 10911  005304  1F0B               	comf	(___aomod@divisor+3)& (0+255),f,b
 10912  005306  1F0A               	comf	(___aomod@divisor+2)& (0+255),f,b
 10913  005308  1F09               	comf	(___aomod@divisor+1)& (0+255),f,b
 10914  00530A  6D08               	negf	___aomod@divisor& (0+255),b
 10915  00530C  0E00               	movlw	0
 10916  00530E  2309               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10917  005310  230A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10918  005312  230B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10919  005314  230C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10920  005316  230D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10921  005318  230E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10922  00531A  230F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10923  00531C                     l7021:
 10924                           
 10925                           ; BSR set to: 1
 10926  00531C  5108               	movf	___aomod@divisor& (0+255),w,b
 10927  00531E  1109               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10928  005320  110A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10929  005322  110B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10930  005324  110C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10931  005326  110D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10932  005328  110E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10933  00532A  110F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10934  00532C  B4D8               	btfsc	status,2,c
 10935  00532E  D03C               	goto	l7037
 10936                           
 10937                           ; BSR set to: 1
 10938  005330  0E01               	movlw	1
 10939  005332  6F10               	movwf	___aomod@counter& (0+255),b
 10940  005334  D00A               	goto	l7027
 10941  005336                     l7025:
 10942                           
 10943                           ; BSR set to: 1
 10944  005336  90D8               	bcf	status,0,c
 10945  005338  3708               	rlcf	___aomod@divisor& (0+255),f,b
 10946  00533A  3709               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10947  00533C  370A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10948  00533E  370B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10949  005340  370C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10950  005342  370D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10951  005344  370E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10952  005346  370F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10953  005348  2B10               	incf	___aomod@counter& (0+255),f,b
 10954  00534A                     l7027:
 10955                           
 10956                           ; BSR set to: 1
 10957  00534A  AF0F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10958  00534C  D7F4               	goto	l7025
 10959  00534E                     u9710:
 10960                           
 10961                           ; BSR set to: 1
 10962  00534E  5108               	movf	___aomod@divisor& (0+255),w,b
 10963  005350  5D00               	subwf	___aomod@dividend& (0+255),w,b
 10964  005352  5109               	movf	(___aomod@divisor+1)& (0+255),w,b
 10965  005354  5901               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10966  005356  510A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10967  005358  5902               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10968  00535A  510B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10969  00535C  5903               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10970  00535E  510C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10971  005360  5904               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10972  005362  510D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10973  005364  5905               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10974  005366  510E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10975  005368  5906               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10976  00536A  510F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10977  00536C  5907               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10978  00536E  A0D8               	btfss	status,0,c
 10979  005370  D010               	goto	l7033
 10980                           
 10981                           ; BSR set to: 1
 10982  005372  5108               	movf	___aomod@divisor& (0+255),w,b
 10983  005374  5F00               	subwf	___aomod@dividend& (0+255),f,b
 10984  005376  5109               	movf	(___aomod@divisor+1)& (0+255),w,b
 10985  005378  5B01               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10986  00537A  510A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10987  00537C  5B02               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10988  00537E  510B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10989  005380  5B03               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10990  005382  510C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10991  005384  5B04               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10992  005386  510D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10993  005388  5B05               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10994  00538A  510E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10995  00538C  5B06               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10996  00538E  510F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10997  005390  5B07               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10998  005392                     l7033:
 10999                           
 11000                           ; BSR set to: 1
 11001  005392  90D8               	bcf	status,0,c
 11002  005394  330F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 11003  005396  330E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 11004  005398  330D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 11005  00539A  330C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 11006  00539C  330B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 11007  00539E  330A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 11008  0053A0  3309               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 11009  0053A2  3308               	rrcf	___aomod@divisor& (0+255),f,b
 11010                           
 11011                           ; BSR set to: 1
 11012  0053A4  2F10               	decfsz	___aomod@counter& (0+255),f,b
 11013  0053A6  D7D3               	goto	u9710
 11014  0053A8                     l7037:
 11015                           
 11016                           ; BSR set to: 1
 11017  0053A8  5111               	movf	___aomod@sign& (0+255),w,b
 11018  0053AA  B4D8               	btfsc	status,2,c
 11019  0053AC  D010               	goto	l7041
 11020                           
 11021                           ; BSR set to: 1
 11022  0053AE  1F07               	comf	(___aomod@dividend+7)& (0+255),f,b
 11023  0053B0  1F06               	comf	(___aomod@dividend+6)& (0+255),f,b
 11024  0053B2  1F05               	comf	(___aomod@dividend+5)& (0+255),f,b
 11025  0053B4  1F04               	comf	(___aomod@dividend+4)& (0+255),f,b
 11026  0053B6  1F03               	comf	(___aomod@dividend+3)& (0+255),f,b
 11027  0053B8  1F02               	comf	(___aomod@dividend+2)& (0+255),f,b
 11028  0053BA  1F01               	comf	(___aomod@dividend+1)& (0+255),f,b
 11029  0053BC  6D00               	negf	___aomod@dividend& (0+255),b
 11030  0053BE  0E00               	movlw	0
 11031  0053C0  2301               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 11032  0053C2  2302               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 11033  0053C4  2303               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 11034  0053C6  2304               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 11035  0053C8  2305               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 11036  0053CA  2306               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 11037  0053CC  2307               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 11038  0053CE                     l7041:
 11039                           
 11040                           ; BSR set to: 1
 11041  0053CE  C100  F100         	movff	___aomod@dividend,?___aomod
 11042  0053D2  C101  F101         	movff	___aomod@dividend+1,?___aomod+1
 11043  0053D6  C102  F102         	movff	___aomod@dividend+2,?___aomod+2
 11044  0053DA  C103  F103         	movff	___aomod@dividend+3,?___aomod+3
 11045  0053DE  C104  F104         	movff	___aomod@dividend+4,?___aomod+4
 11046  0053E2  C105  F105         	movff	___aomod@dividend+5,?___aomod+5
 11047  0053E6  C106  F106         	movff	___aomod@dividend+6,?___aomod+6
 11048  0053EA  C107  F107         	movff	___aomod@dividend+7,?___aomod+7
 11049                           
 11050                           ; BSR set to: 1
 11051  0053EE  0012               	return		;funcret
 11052  0053F0                     __end_of___aomod:
 11053                           	opt callstack 0
 11054                           
 11055 ;; *************** function ___aodiv *****************
 11056 ;; Defined at:
 11057 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 11058 ;; Parameters:    Size  Location     Type
 11059 ;;  dividend        8    0[BANK1 ] long long 
 11060 ;;  divisor         8    8[BANK1 ] long long 
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;  quotient        8   18[BANK1 ] long long 
 11063 ;;  sign            1   17[BANK1 ] unsigned char 
 11064 ;;  counter         1   16[BANK1 ] unsigned char 
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  8    0[BANK1 ] long long 
 11067 ;; Registers used:
 11068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11074 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11077 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;Total ram usage:       26 bytes
 11079 ;; Hardware stack levels used:    1
 11080 ;; Hardware stack levels required when called:   16
 11081 ;; This function calls:
 11082 ;;		Nothing
 11083 ;; This function is called by:
 11084 ;;		_dtoa
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           
 11088                           	psect	text39
 11089  004B44                     __ptext39:
 11090                           	opt callstack 0
 11091  004B44                     ___aodiv:
 11092                           	opt callstack 10
 11093                           
 11094                           ; BSR set to: 1
 11095                           ;incstack = 0
 11096  004B44  0E00               	movlw	0
 11097  004B46  0101               	movlb	1	; () banked
 11098  004B48  6F11               	movwf	___aodiv@sign& (0+255),b
 11099                           
 11100                           ; BSR set to: 1
 11101  004B4A  AF0F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11102  004B4C  D012               	goto	l6973
 11103                           
 11104                           ; BSR set to: 1
 11105  004B4E  1F0F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 11106  004B50  1F0E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 11107  004B52  1F0D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 11108  004B54  1F0C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 11109  004B56  1F0B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 11110  004B58  1F0A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 11111  004B5A  1F09               	comf	(___aodiv@divisor+1)& (0+255),f,b
 11112  004B5C  6D08               	negf	___aodiv@divisor& (0+255),b
 11113  004B5E  0E00               	movlw	0
 11114  004B60  2309               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 11115  004B62  230A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 11116  004B64  230B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 11117  004B66  230C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 11118  004B68  230D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 11119  004B6A  230E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 11120  004B6C  230F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 11121                           
 11122                           ; BSR set to: 1
 11123  004B6E  0E01               	movlw	1
 11124  004B70  6F11               	movwf	___aodiv@sign& (0+255),b
 11125  004B72                     l6973:
 11126                           
 11127                           ; BSR set to: 1
 11128  004B72  AF07               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 11129  004B74  D012               	goto	l6979
 11130                           
 11131                           ; BSR set to: 1
 11132  004B76  1F07               	comf	(___aodiv@dividend+7)& (0+255),f,b
 11133  004B78  1F06               	comf	(___aodiv@dividend+6)& (0+255),f,b
 11134  004B7A  1F05               	comf	(___aodiv@dividend+5)& (0+255),f,b
 11135  004B7C  1F04               	comf	(___aodiv@dividend+4)& (0+255),f,b
 11136  004B7E  1F03               	comf	(___aodiv@dividend+3)& (0+255),f,b
 11137  004B80  1F02               	comf	(___aodiv@dividend+2)& (0+255),f,b
 11138  004B82  1F01               	comf	(___aodiv@dividend+1)& (0+255),f,b
 11139  004B84  6D00               	negf	___aodiv@dividend& (0+255),b
 11140  004B86  0E00               	movlw	0
 11141  004B88  2301               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 11142  004B8A  2302               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 11143  004B8C  2303               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 11144  004B8E  2304               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 11145  004B90  2305               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 11146  004B92  2306               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 11147  004B94  2307               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 11148                           
 11149                           ; BSR set to: 1
 11150  004B96  0E01               	movlw	1
 11151  004B98  1B11               	xorwf	___aodiv@sign& (0+255),f,b
 11152  004B9A                     l6979:
 11153                           
 11154                           ; BSR set to: 1
 11155  004B9A  EE21  F012         	lfsr	2,___aodiv@quotient
 11156  004B9E  0E07               	movlw	7
 11157  004BA0                     u9631:
 11158  004BA0  6ADE               	clrf	postinc2,c
 11159  004BA2  06E8               	decf	wreg,f,c
 11160  004BA4  E2FD               	bc	u9631
 11161                           
 11162                           ; BSR set to: 1
 11163  004BA6  5108               	movf	___aodiv@divisor& (0+255),w,b
 11164  004BA8  1109               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 11165  004BAA  110A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 11166  004BAC  110B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 11167  004BAE  110C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 11168  004BB0  110D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 11169  004BB2  110E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 11170  004BB4  110F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 11171  004BB6  B4D8               	btfsc	status,2,c
 11172  004BB8  D046               	goto	l7001
 11173                           
 11174                           ; BSR set to: 1
 11175  004BBA  0E01               	movlw	1
 11176  004BBC  6F10               	movwf	___aodiv@counter& (0+255),b
 11177  004BBE  D00A               	goto	l6987
 11178  004BC0                     l6985:
 11179                           
 11180                           ; BSR set to: 1
 11181  004BC0  90D8               	bcf	status,0,c
 11182  004BC2  3708               	rlcf	___aodiv@divisor& (0+255),f,b
 11183  004BC4  3709               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 11184  004BC6  370A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 11185  004BC8  370B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 11186  004BCA  370C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 11187  004BCC  370D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 11188  004BCE  370E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 11189  004BD0  370F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 11190  004BD2  2B10               	incf	___aodiv@counter& (0+255),f,b
 11191  004BD4                     l6987:
 11192                           
 11193                           ; BSR set to: 1
 11194  004BD4  AF0F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 11195  004BD6  D7F4               	goto	l6985
 11196  004BD8                     u9650:
 11197                           
 11198                           ; BSR set to: 1
 11199  004BD8  90D8               	bcf	status,0,c
 11200  004BDA  3712               	rlcf	___aodiv@quotient& (0+255),f,b
 11201  004BDC  3713               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 11202  004BDE  3714               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 11203  004BE0  3715               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 11204  004BE2  3716               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 11205  004BE4  3717               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 11206  004BE6  3718               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 11207  004BE8  3719               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 11208                           
 11209                           ; BSR set to: 1
 11210  004BEA  5108               	movf	___aodiv@divisor& (0+255),w,b
 11211  004BEC  5D00               	subwf	___aodiv@dividend& (0+255),w,b
 11212  004BEE  5109               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11213  004BF0  5901               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 11214  004BF2  510A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11215  004BF4  5902               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 11216  004BF6  510B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11217  004BF8  5903               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 11218  004BFA  510C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11219  004BFC  5904               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 11220  004BFE  510D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11221  004C00  5905               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 11222  004C02  510E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11223  004C04  5906               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 11224  004C06  510F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11225  004C08  5907               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 11226  004C0A  A0D8               	btfss	status,0,c
 11227  004C0C  D011               	goto	l6997
 11228                           
 11229                           ; BSR set to: 1
 11230  004C0E  5108               	movf	___aodiv@divisor& (0+255),w,b
 11231  004C10  5F00               	subwf	___aodiv@dividend& (0+255),f,b
 11232  004C12  5109               	movf	(___aodiv@divisor+1)& (0+255),w,b
 11233  004C14  5B01               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 11234  004C16  510A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 11235  004C18  5B02               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 11236  004C1A  510B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 11237  004C1C  5B03               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 11238  004C1E  510C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 11239  004C20  5B04               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 11240  004C22  510D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 11241  004C24  5B05               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 11242  004C26  510E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 11243  004C28  5B06               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 11244  004C2A  510F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 11245  004C2C  5B07               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 11246                           
 11247                           ; BSR set to: 1
 11248  004C2E  8112               	bsf	___aodiv@quotient& (0+255),0,b
 11249  004C30                     l6997:
 11250                           
 11251                           ; BSR set to: 1
 11252  004C30  90D8               	bcf	status,0,c
 11253  004C32  330F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 11254  004C34  330E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 11255  004C36  330D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 11256  004C38  330C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 11257  004C3A  330B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 11258  004C3C  330A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 11259  004C3E  3309               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 11260  004C40  3308               	rrcf	___aodiv@divisor& (0+255),f,b
 11261                           
 11262                           ; BSR set to: 1
 11263  004C42  2F10               	decfsz	___aodiv@counter& (0+255),f,b
 11264  004C44  D7C9               	goto	u9650
 11265  004C46                     l7001:
 11266                           
 11267                           ; BSR set to: 1
 11268  004C46  5111               	movf	___aodiv@sign& (0+255),w,b
 11269  004C48  B4D8               	btfsc	status,2,c
 11270  004C4A  D010               	goto	l7005
 11271                           
 11272                           ; BSR set to: 1
 11273  004C4C  1F19               	comf	(___aodiv@quotient+7)& (0+255),f,b
 11274  004C4E  1F18               	comf	(___aodiv@quotient+6)& (0+255),f,b
 11275  004C50  1F17               	comf	(___aodiv@quotient+5)& (0+255),f,b
 11276  004C52  1F16               	comf	(___aodiv@quotient+4)& (0+255),f,b
 11277  004C54  1F15               	comf	(___aodiv@quotient+3)& (0+255),f,b
 11278  004C56  1F14               	comf	(___aodiv@quotient+2)& (0+255),f,b
 11279  004C58  1F13               	comf	(___aodiv@quotient+1)& (0+255),f,b
 11280  004C5A  6D12               	negf	___aodiv@quotient& (0+255),b
 11281  004C5C  0E00               	movlw	0
 11282  004C5E  2313               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 11283  004C60  2314               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 11284  004C62  2315               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 11285  004C64  2316               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 11286  004C66  2317               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 11287  004C68  2318               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 11288  004C6A  2319               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 11289  004C6C                     l7005:
 11290                           
 11291                           ; BSR set to: 1
 11292  004C6C  C112  F100         	movff	___aodiv@quotient,?___aodiv
 11293  004C70  C113  F101         	movff	___aodiv@quotient+1,?___aodiv+1
 11294  004C74  C114  F102         	movff	___aodiv@quotient+2,?___aodiv+2
 11295  004C78  C115  F103         	movff	___aodiv@quotient+3,?___aodiv+3
 11296  004C7C  C116  F104         	movff	___aodiv@quotient+4,?___aodiv+4
 11297  004C80  C117  F105         	movff	___aodiv@quotient+5,?___aodiv+5
 11298  004C84  C118  F106         	movff	___aodiv@quotient+6,?___aodiv+6
 11299  004C88  C119  F107         	movff	___aodiv@quotient+7,?___aodiv+7
 11300                           
 11301                           ; BSR set to: 1
 11302  004C8C  0012               	return		;funcret
 11303  004C8E                     __end_of___aodiv:
 11304                           	opt callstack 0
 11305                           
 11306 ;; *************** function _atoi *****************
 11307 ;; Defined at:
 11308 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;  s               2    7[BANK1 ] PTR const unsigned char 
 11311 ;;		 -> STR_12(61), STR_11(26), STR_9(6), STR_7(6), 
 11312 ;;		 -> STR_4(34), STR_3(31), STR_2(34), STR_1(14), 
 11313 ;; Auto vars:     Size  Location     Type
 11314 ;;  n               2   20[BANK1 ] int 
 11315 ;;  neg             2   13[BANK1 ] int 
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  2    7[BANK1 ] int 
 11318 ;; Registers used:
 11319 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11325 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11326 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11327 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11328 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11329 ;;Total ram usage:       15 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:   17
 11332 ;; This function calls:
 11333 ;;		___wmul
 11334 ;;		_isdigit
 11335 ;;		_isspace
 11336 ;; This function is called by:
 11337 ;;		_vfpfcnvrt
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text40
 11342  0049F6                     __ptext40:
 11343                           	opt callstack 0
 11344  0049F6                     _atoi:
 11345                           	opt callstack 10
 11346                           
 11347                           ; BSR set to: 1
 11348                           ;incstack = 0
 11349  0049F6  0E00               	movlw	0
 11350  0049F8  0101               	movlb	1	; () banked
 11351  0049FA  6F15               	movwf	(atoi@n+1)& (0+255),b
 11352  0049FC  0E00               	movlw	0
 11353  0049FE  6F14               	movwf	atoi@n& (0+255),b
 11354  004A00  0E00               	movlw	0
 11355  004A02  6F0E               	movwf	(atoi@neg+1)& (0+255),b
 11356  004A04  0E00               	movlw	0
 11357  004A06  6F0D               	movwf	atoi@neg& (0+255),b
 11358  004A08  D002               	goto	l7873
 11359  004A0A                     l7871:
 11360                           
 11361                           ; BSR set to: 1
 11362  004A0A  4B07               	infsnz	atoi@s& (0+255),f,b
 11363  004A0C  2B08               	incf	(atoi@s+1)& (0+255),f,b
 11364  004A0E                     l7873:
 11365                           
 11366                           ; BSR set to: 1
 11367  004A0E  0E01               	movlw	1
 11368  004A10  6F13               	movwf	_atoi$2042& (0+255),b
 11369                           
 11370                           ; BSR set to: 1
 11371  004A12  C107  FFF6         	movff	atoi@s,tblptrl
 11372  004A16  C108  FFF7         	movff	atoi@s+1,tblptrh
 11373  004A1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11374  004A1A  6AF8               	clrf	tblptru,c
 11375  004A1C                     	endif
 11376  004A1C                     	if	0	;tblptru may be non-zero
 11377  004A1C                     	endif
 11378  004A1C  0008               	tblrd		*
 11379  004A1E  50F5               	movf	tablat,w,c
 11380  004A20  0A20               	xorlw	32
 11381  004A22  B4D8               	btfsc	status,2,c
 11382  004A24  D019               	goto	l7881
 11383                           
 11384                           ; BSR set to: 1
 11385  004A26  0EF7               	movlw	247
 11386  004A28  6F09               	movwf	??_atoi& (0+255),b
 11387  004A2A  0EFF               	movlw	255
 11388  004A2C  6F0A               	movwf	(??_atoi+1)& (0+255),b
 11389  004A2E  C107  FFF6         	movff	atoi@s,tblptrl
 11390  004A32  C108  FFF7         	movff	atoi@s+1,tblptrh
 11391  004A36                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11392  004A36  6AF8               	clrf	tblptru,c
 11393  004A38                     	endif
 11394  004A38                     	if	0	;tblptru may be non-zero
 11395  004A38                     	endif
 11396  004A38  0008               	tblrd		*
 11397  004A3A  50F5               	movf	tablat,w,c
 11398  004A3C  6F0B               	movwf	(??_atoi+2)& (0+255),b
 11399  004A3E  6B0C               	clrf	(??_atoi+3)& (0+255),b
 11400  004A40  5109               	movf	??_atoi& (0+255),w,b
 11401  004A42  270B               	addwf	(??_atoi+2)& (0+255),f,b
 11402  004A44  510A               	movf	(??_atoi+1)& (0+255),w,b
 11403  004A46  230C               	addwfc	(??_atoi+3)& (0+255),f,b
 11404  004A48  510C               	movf	(??_atoi+3)& (0+255),w,b
 11405  004A4A  E104               	bnz	u11150
 11406  004A4C  0E05               	movlw	5
 11407  004A4E  5D0B               	subwf	(??_atoi+2)& (0+255),w,b
 11408  004A50  A0D8               	btfss	status,0,c
 11409  004A52  D002               	goto	l7881
 11410  004A54                     u11150:
 11411                           
 11412                           ; BSR set to: 1
 11413  004A54  0E00               	movlw	0
 11414  004A56  6F13               	movwf	_atoi$2042& (0+255),b
 11415  004A58                     l7881:
 11416                           
 11417                           ; BSR set to: 1
 11418  004A58  C113  F10F         	movff	_atoi$2042,_atoi$2041
 11419  004A5C  6B10               	clrf	(_atoi$2041+1)& (0+255),b
 11420                           
 11421                           ; BSR set to: 1
 11422  004A5E  510F               	movf	_atoi$2041& (0+255),w,b
 11423  004A60  1110               	iorwf	(_atoi$2041+1)& (0+255),w,b
 11424  004A62  B4D8               	btfsc	status,2,c
 11425  004A64  D008               	goto	l7891
 11426  004A66  D7D1               	goto	l7871
 11427  004A68                     l7887:
 11428                           
 11429                           ; BSR set to: 1
 11430  004A68  0E00               	movlw	0
 11431  004A6A  6F0E               	movwf	(atoi@neg+1)& (0+255),b
 11432  004A6C  0E01               	movlw	1
 11433  004A6E  6F0D               	movwf	atoi@neg& (0+255),b
 11434  004A70                     l7889:
 11435                           
 11436                           ; BSR set to: 1
 11437  004A70  4B07               	infsnz	atoi@s& (0+255),f,b
 11438  004A72  2B08               	incf	(atoi@s+1)& (0+255),f,b
 11439  004A74  D031               	goto	l7897
 11440  004A76                     l7891:
 11441                           
 11442                           ; BSR set to: 1
 11443  004A76  C107  FFF6         	movff	atoi@s,tblptrl
 11444  004A7A  C108  FFF7         	movff	atoi@s+1,tblptrh
 11445  004A7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11446  004A7E  6AF8               	clrf	tblptru,c
 11447  004A80                     	endif
 11448  004A80                     	if	0	;tblptru may be non-zero
 11449  004A80                     	endif
 11450  004A80  0008               	tblrd		*
 11451  004A82  50F5               	movf	tablat,w,c
 11452  004A84  6F09               	movwf	??_atoi& (0+255),b
 11453  004A86  6B0A               	clrf	(??_atoi+1)& (0+255),b
 11454                           
 11455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11456                           ; Switch size 1, requested type "simple"
 11457                           ; Number of cases is 1, Range of values is 0 to 0
 11458                           ; switch strategies available:
 11459                           ; Name         Instructions Cycles
 11460                           ; simple_byte            4     3 (average)
 11461                           ;	Chosen strategy is simple_byte
 11462  004A88  510A               	movf	(??_atoi+1)& (0+255),w,b
 11463  004A8A  0A00               	xorlw	0	; case 0
 11464  004A8C  A4D8               	btfss	status,2,c
 11465  004A8E  D024               	goto	l7897
 11466                           
 11467                           ; BSR set to: 1
 11468                           ; Switch size 1, requested type "simple"
 11469                           ; Number of cases is 2, Range of values is 43 to 45
 11470                           ; switch strategies available:
 11471                           ; Name         Instructions Cycles
 11472                           ; simple_byte            7     4 (average)
 11473                           ;	Chosen strategy is simple_byte
 11474  004A90  5109               	movf	??_atoi& (0+255),w,b
 11475  004A92  0A2B               	xorlw	43	; case 43
 11476  004A94  B4D8               	btfsc	status,2,c
 11477  004A96  D7EC               	goto	l7889
 11478  004A98  0A06               	xorlw	6	; case 45
 11479  004A9A  B4D8               	btfsc	status,2,c
 11480  004A9C  D7E5               	goto	l7887
 11481  004A9E  D01C               	goto	l7897
 11482  004AA0                     l7893:
 11483                           
 11484                           ; BSR set to: 1
 11485  004AA0  C114  F100         	movff	atoi@n,___wmul@multiplier
 11486  004AA4  C115  F101         	movff	atoi@n+1,___wmul@multiplier+1
 11487  004AA8  0E00               	movlw	0
 11488  004AAA  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11489  004AAC  0E0A               	movlw	10
 11490  004AAE  6F02               	movwf	___wmul@multiplicand& (0+255),b
 11491  004AB0  EC92  F039         	call	___wmul	;wreg free
 11492  004AB4  C107  FFF6         	movff	atoi@s,tblptrl
 11493  004AB8  C108  FFF7         	movff	atoi@s+1,tblptrh
 11494  004ABC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11495  004ABC  6AF8               	clrf	tblptru,c
 11496  004ABE                     	endif
 11497  004ABE                     	if	0	;tblptru may be non-zero
 11498  004ABE                     	endif
 11499  004ABE  0008               	tblrd		*
 11500  004AC0  50F5               	movf	tablat,w,c
 11501  004AC2  0101               	movlb	1	; () banked
 11502  004AC4  5F00               	subwf	?___wmul& (0+255),f,b
 11503  004AC6  0E00               	movlw	0
 11504  004AC8  5B01               	subwfb	(?___wmul+1)& (0+255),f,b
 11505  004ACA  0E30               	movlw	48
 11506  004ACC  2500               	addwf	?___wmul& (0+255),w,b
 11507  004ACE  6F14               	movwf	atoi@n& (0+255),b
 11508  004AD0  0E00               	movlw	0
 11509  004AD2  2101               	addwfc	(?___wmul+1)& (0+255),w,b
 11510  004AD4  6F15               	movwf	(atoi@n+1)& (0+255),b
 11511  004AD6  D7CC               	goto	l7889
 11512  004AD8                     l7897:
 11513                           
 11514                           ; BSR set to: 1
 11515  004AD8  0ED0               	movlw	208
 11516  004ADA  6F09               	movwf	??_atoi& (0+255),b
 11517  004ADC  0EFF               	movlw	255
 11518  004ADE  6F0A               	movwf	(??_atoi+1)& (0+255),b
 11519  004AE0  C107  FFF6         	movff	atoi@s,tblptrl
 11520  004AE4  C108  FFF7         	movff	atoi@s+1,tblptrh
 11521  004AE8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11522  004AE8  6AF8               	clrf	tblptru,c
 11523  004AEA                     	endif
 11524  004AEA                     	if	0	;tblptru may be non-zero
 11525  004AEA                     	endif
 11526  004AEA  0008               	tblrd		*
 11527  004AEC  50F5               	movf	tablat,w,c
 11528  004AEE  6F0B               	movwf	(??_atoi+2)& (0+255),b
 11529  004AF0  6B0C               	clrf	(??_atoi+3)& (0+255),b
 11530  004AF2  5109               	movf	??_atoi& (0+255),w,b
 11531  004AF4  270B               	addwf	(??_atoi+2)& (0+255),f,b
 11532  004AF6  510A               	movf	(??_atoi+1)& (0+255),w,b
 11533  004AF8  230C               	addwfc	(??_atoi+3)& (0+255),f,b
 11534  004AFA  510C               	movf	(??_atoi+3)& (0+255),w,b
 11535  004AFC  E106               	bnz	u11170
 11536  004AFE  0E0A               	movlw	10
 11537  004B00  5D0B               	subwf	(??_atoi+2)& (0+255),w,b
 11538  004B02  B0D8               	btfsc	status,0,c
 11539  004B04  D002               	goto	u11170
 11540  004B06  0E01               	movlw	1
 11541  004B08  D001               	goto	u11180
 11542  004B0A                     u11170:
 11543  004B0A  0E00               	movlw	0
 11544  004B0C                     u11180:
 11545  004B0C  6F11               	movwf	_atoi$2043& (0+255),b
 11546  004B0E  6B12               	clrf	(_atoi$2043+1)& (0+255),b
 11547                           
 11548                           ; BSR set to: 1
 11549  004B10  5111               	movf	_atoi$2043& (0+255),w,b
 11550  004B12  1112               	iorwf	(_atoi$2043+1)& (0+255),w,b
 11551  004B14  A4D8               	btfss	status,2,c
 11552  004B16  D7C4               	goto	l7893
 11553                           
 11554                           ; BSR set to: 1
 11555  004B18  510D               	movf	atoi@neg& (0+255),w,b
 11556  004B1A  110E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11557  004B1C  A4D8               	btfss	status,2,c
 11558  004B1E  D00D               	goto	l1473
 11559                           
 11560                           ; BSR set to: 1
 11561  004B20  C114  F109         	movff	atoi@n,??_atoi
 11562  004B24  C115  F10A         	movff	atoi@n+1,??_atoi+1
 11563  004B28  1F09               	comf	??_atoi& (0+255),f,b
 11564  004B2A  1F0A               	comf	(??_atoi+1)& (0+255),f,b
 11565  004B2C  4B09               	infsnz	??_atoi& (0+255),f,b
 11566  004B2E  2B0A               	incf	(??_atoi+1)& (0+255),f,b
 11567  004B30  C109  F107         	movff	??_atoi,?_atoi
 11568  004B34  C10A  F108         	movff	??_atoi+1,?_atoi+1
 11569  004B38  0012               	return	
 11570  004B3A                     l1473:
 11571                           
 11572                           ; BSR set to: 1
 11573  004B3A  C114  F107         	movff	atoi@n,?_atoi
 11574  004B3E  C115  F108         	movff	atoi@n+1,?_atoi+1
 11575                           
 11576                           ; BSR set to: 1
 11577  004B42  0012               	return		;funcret
 11578  004B44                     __end_of_atoi:
 11579                           	opt callstack 0
 11580                           
 11581 ;; *************** function _isspace *****************
 11582 ;; Defined at:
 11583 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;  c               2    0[BANK1 ] int 
 11586 ;; Auto vars:     Size  Location     Type
 11587 ;;		None
 11588 ;; Return value:  Size  Location     Type
 11589 ;;                  2    0[BANK1 ] int 
 11590 ;; Registers used:
 11591 ;;		wreg, status,2, status,0
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11597 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11598 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11599 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11600 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11601 ;;Total ram usage:        7 bytes
 11602 ;; Hardware stack levels used:    1
 11603 ;; Hardware stack levels required when called:   16
 11604 ;; This function calls:
 11605 ;;		Nothing
 11606 ;; This function is called by:
 11607 ;;		_atoi
 11608 ;; This function uses a non-reentrant model
 11609 ;;
 11610                           
 11611                           	psect	text41
 11612  006F32                     __ptext41:
 11613                           	opt callstack 0
 11614  006F32                     _isspace:
 11615                           	opt callstack 10
 11616                           
 11617                           ; BSR set to: 1
 11618                           ;incstack = 0
 11619  006F32  0E01               	movlw	1
 11620  006F34  0101               	movlb	1	; () banked
 11621  006F36  6F06               	movwf	_isspace$2072& (0+255),b
 11622                           
 11623                           ; BSR set to: 1
 11624  006F38  0E20               	movlw	32
 11625  006F3A  1900               	xorwf	isspace@c& (0+255),w,b
 11626  006F3C  1101               	iorwf	(isspace@c+1)& (0+255),w,b
 11627  006F3E  B4D8               	btfsc	status,2,c
 11628  006F40  D014               	goto	l7497
 11629                           
 11630                           ; BSR set to: 1
 11631  006F42  0EF7               	movlw	247
 11632  006F44  6F02               	movwf	??_isspace& (0+255),b
 11633  006F46  0EFF               	movlw	255
 11634  006F48  6F03               	movwf	(??_isspace+1)& (0+255),b
 11635  006F4A  C100  F104         	movff	isspace@c,??_isspace+2
 11636  006F4E  C101  F105         	movff	isspace@c+1,??_isspace+3
 11637  006F52  5102               	movf	??_isspace& (0+255),w,b
 11638  006F54  2704               	addwf	(??_isspace+2)& (0+255),f,b
 11639  006F56  5103               	movf	(??_isspace+1)& (0+255),w,b
 11640  006F58  2305               	addwfc	(??_isspace+3)& (0+255),f,b
 11641  006F5A  5105               	movf	(??_isspace+3)& (0+255),w,b
 11642  006F5C  E104               	bnz	u10450
 11643  006F5E  0E05               	movlw	5
 11644  006F60  5D04               	subwf	(??_isspace+2)& (0+255),w,b
 11645  006F62  A0D8               	btfss	status,0,c
 11646  006F64  D002               	goto	l7497
 11647  006F66                     u10450:
 11648                           
 11649                           ; BSR set to: 1
 11650  006F66  0E00               	movlw	0
 11651  006F68  6F06               	movwf	_isspace$2072& (0+255),b
 11652  006F6A                     l7497:
 11653                           
 11654                           ; BSR set to: 1
 11655  006F6A  C106  F100         	movff	_isspace$2072,?_isspace
 11656  006F6E  6B01               	clrf	(?_isspace+1)& (0+255),b
 11657                           
 11658                           ; BSR set to: 1
 11659  006F70  0012               	return		;funcret
 11660  006F72                     __end_of_isspace:
 11661                           	opt callstack 0
 11662                           
 11663 ;; *************** function _isdigit *****************
 11664 ;; Defined at:
 11665 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;  c               2    0[BANK1 ] int 
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;		None
 11670 ;; Return value:  Size  Location     Type
 11671 ;;                  2    0[BANK1 ] int 
 11672 ;; Registers used:
 11673 ;;		wreg, status,2, status,0
 11674 ;; Tracked objects:
 11675 ;;		On entry : 0/0
 11676 ;;		On exit  : 0/0
 11677 ;;		Unchanged: 0/0
 11678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11679 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11681 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11682 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11683 ;;Total ram usage:        6 bytes
 11684 ;; Hardware stack levels used:    1
 11685 ;; Hardware stack levels required when called:   16
 11686 ;; This function calls:
 11687 ;;		Nothing
 11688 ;; This function is called by:
 11689 ;;		_vfpfcnvrt
 11690 ;;		_atoi
 11691 ;; This function uses a non-reentrant model
 11692 ;;
 11693                           
 11694                           	psect	text42
 11695  0070FC                     __ptext42:
 11696                           	opt callstack 0
 11697  0070FC                     _isdigit:
 11698                           	opt callstack 11
 11699                           
 11700                           ; BSR set to: 1
 11701                           ;incstack = 0
 11702  0070FC  0ED0               	movlw	208
 11703  0070FE  0101               	movlb	1	; () banked
 11704  007100  6F02               	movwf	??_isdigit& (0+255),b
 11705  007102  0EFF               	movlw	255
 11706  007104  6F03               	movwf	(??_isdigit+1)& (0+255),b
 11707  007106  C100  F104         	movff	isdigit@c,??_isdigit+2
 11708  00710A  C101  F105         	movff	isdigit@c+1,??_isdigit+3
 11709  00710E  5102               	movf	??_isdigit& (0+255),w,b
 11710  007110  2704               	addwf	(??_isdigit+2)& (0+255),f,b
 11711  007112  5103               	movf	(??_isdigit+1)& (0+255),w,b
 11712  007114  2305               	addwfc	(??_isdigit+3)& (0+255),f,b
 11713  007116  5105               	movf	(??_isdigit+3)& (0+255),w,b
 11714  007118  E106               	bnz	u9590
 11715  00711A  0E0A               	movlw	10
 11716  00711C  5D04               	subwf	(??_isdigit+2)& (0+255),w,b
 11717  00711E  B0D8               	btfsc	status,0,c
 11718  007120  D002               	goto	u9590
 11719  007122  0E01               	movlw	1
 11720  007124  D001               	goto	u9600
 11721  007126                     u9590:
 11722  007126  0E00               	movlw	0
 11723  007128                     u9600:
 11724  007128  6F00               	movwf	?_isdigit& (0+255),b
 11725  00712A  6B01               	clrf	(?_isdigit+1)& (0+255),b
 11726                           
 11727                           ; BSR set to: 1
 11728  00712C  0012               	return		;funcret
 11729  00712E                     __end_of_isdigit:
 11730                           	opt callstack 0
 11731                           
 11732 ;; *************** function ___wmul *****************
 11733 ;; Defined at:
 11734 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;  multiplier      2    0[BANK1 ] unsigned int 
 11737 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;  product         2    4[BANK1 ] unsigned int 
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  2    0[BANK1 ] unsigned int 
 11742 ;; Registers used:
 11743 ;;		wreg, status,2, status,0, prodl, prodh
 11744 ;; Tracked objects:
 11745 ;;		On entry : 0/0
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11749 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11750 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11752 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11753 ;;Total ram usage:        6 bytes
 11754 ;; Hardware stack levels used:    1
 11755 ;; Hardware stack levels required when called:   16
 11756 ;; This function calls:
 11757 ;;		Nothing
 11758 ;; This function is called by:
 11759 ;;		_atoi
 11760 ;; This function uses a non-reentrant model
 11761 ;;
 11762                           
 11763                           	psect	text43
 11764  007324                     __ptext43:
 11765                           	opt callstack 0
 11766  007324                     ___wmul:
 11767                           	opt callstack 10
 11768                           
 11769                           ; BSR set to: 1
 11770                           ;incstack = 0
 11771  007324  0101               	movlb	1	; () banked
 11772  007326  5100               	movf	___wmul@multiplier& (0+255),w,b
 11773  007328  0302               	mulwf	___wmul@multiplicand& (0+255),b
 11774  00732A  CFF3 F104          	movff	prodl,___wmul@product
 11775  00732E  CFF4 F105          	movff	prodh,___wmul@product+1
 11776  007332  5100               	movf	___wmul@multiplier& (0+255),w,b
 11777  007334  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11778  007336  50F3               	movf	prodl,w,c
 11779  007338  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 11780  00733A  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11781  00733C  0302               	mulwf	___wmul@multiplicand& (0+255),b
 11782  00733E  50F3               	movf	prodl,w,c
 11783  007340  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 11784                           
 11785                           ; BSR set to: 1
 11786  007342  C104  F100         	movff	___wmul@product,?___wmul
 11787  007346  C105  F101         	movff	___wmul@product+1,?___wmul+1
 11788                           
 11789                           ; BSR set to: 1
 11790  00734A  0012               	return		;funcret
 11791  00734C                     __end_of___wmul:
 11792                           	opt callstack 0
 11793                           
 11794 ;; *************** function _SYSTEM_Initialize *****************
 11795 ;; Defined at:
 11796 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;		None
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;		None
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      void 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0, cstack
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;Total ram usage:        0 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:   18
 11817 ;; This function calls:
 11818 ;;		_EUSART1_Initialize
 11819 ;;		_INTERRUPT_Initialize
 11820 ;;		_OSCILLATOR_Initialize
 11821 ;;		_PIN_MANAGER_Initialize
 11822 ;;		_TMR2_Initialize
 11823 ;;		_TMR4_Initialize
 11824 ;; This function is called by:
 11825 ;;		_main
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           
 11829                           	psect	text44
 11830  0074A6                     __ptext44:
 11831                           	opt callstack 0
 11832  0074A6                     _SYSTEM_Initialize:
 11833                           	opt callstack 12
 11834                           
 11835                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 11836                           
 11837                           ; BSR set to: 1
 11838                           ;incstack = 0
 11839  0074A6  ECB5  F03A         	call	_INTERRUPT_Initialize	;wreg free
 11840                           
 11841                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 11842  0074AA  EC54  F039         	call	_PIN_MANAGER_Initialize	;wreg free
 11843                           
 11844                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 11845  0074AE  EC6C  F03A         	call	_OSCILLATOR_Initialize	;wreg free
 11846                           
 11847                           ;mcc_generated_files/mcc.c: 56:     TMR4_Initialize();
 11848  0074B2  ECCD  F039         	call	_TMR4_Initialize	;wreg free
 11849                           
 11850                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 11851  0074B6  EC14  F03A         	call	_TMR2_Initialize	;wreg free
 11852                           
 11853                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
 11854  0074BA  ECEF  F034         	call	_EUSART1_Initialize	;wreg free
 11855  0074BE  0012               	return		;funcret
 11856  0074C0                     __end_of_SYSTEM_Initialize:
 11857                           	opt callstack 0
 11858                           
 11859 ;; *************** function _TMR4_Initialize *****************
 11860 ;; Defined at:
 11861 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;		None
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;		None
 11866 ;; Return value:  Size  Location     Type
 11867 ;;                  1    wreg      void 
 11868 ;; Registers used:
 11869 ;;		wreg, status,2, status,0, cstack
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11879 ;;Total ram usage:        0 bytes
 11880 ;; Hardware stack levels used:    1
 11881 ;; Hardware stack levels required when called:   17
 11882 ;; This function calls:
 11883 ;;		_TMR4_SetInterruptHandler
 11884 ;; This function is called by:
 11885 ;;		_SYSTEM_Initialize
 11886 ;;		_main
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text45
 11891  00739A                     __ptext45:
 11892                           	opt callstack 0
 11893  00739A                     _TMR4_Initialize:
 11894                           	opt callstack 13
 11895                           
 11896                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0x63;
 11897                           
 11898                           ;incstack = 0
 11899  00739A  0E63               	movlw	99
 11900  00739C  010F               	movlb	15	; () banked
 11901  00739E  6F52               	movwf	82,b	;volatile
 11902                           
 11903                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
 11904  0073A0  0E00               	movlw	0
 11905  0073A2  6F53               	movwf	83,b	;volatile
 11906                           
 11907                           ; BSR set to: 15
 11908                           ;mcc_generated_files/tmr4.c: 75:     PIR5bits.TMR4IF = 0;
 11909  0073A4  907E               	bcf	3966,0,c	;volatile
 11910                           
 11911                           ; BSR set to: 15
 11912                           ;mcc_generated_files/tmr4.c: 78:     PIE5bits.TMR4IE = 1;
 11913  0073A6  807D               	bsf	3965,0,c	;volatile
 11914                           
 11915                           ; BSR set to: 15
 11916                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 11917  0073A8  0E70               	movlw	low _TMR4_DefaultInterruptHandler
 11918  0073AA  0101               	movlb	1	; () banked
 11919  0073AC  6F00               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 11920  0073AE  0E75               	movlw	high _TMR4_DefaultInterruptHandler
 11921  0073B0  6F01               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 11922  0073B2  EC85  F03A         	call	_TMR4_SetInterruptHandler	;wreg free
 11923                           
 11924                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x7C;
 11925  0073B6  0E7C               	movlw	124
 11926  0073B8  010F               	movlb	15	; () banked
 11927  0073BA  6F51               	movwf	81,b	;volatile
 11928                           
 11929                           ; BSR set to: 15
 11930  0073BC  0012               	return		;funcret
 11931  0073BE                     __end_of_TMR4_Initialize:
 11932                           	opt callstack 0
 11933                           
 11934 ;; *************** function _TMR4_SetInterruptHandler *****************
 11935 ;; Defined at:
 11936 ;;		line 147 in file "mcc_generated_files/tmr4.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11939 ;;		 -> Timer4Interrupt(1), TMR4_DefaultInterruptHandler(1), 
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;		None
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  1    wreg      void 
 11944 ;; Registers used:
 11945 ;;		wreg, status,2, status,0
 11946 ;; Tracked objects:
 11947 ;;		On entry : 0/0
 11948 ;;		On exit  : 0/0
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11951 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11954 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11955 ;;Total ram usage:        2 bytes
 11956 ;; Hardware stack levels used:    1
 11957 ;; Hardware stack levels required when called:   16
 11958 ;; This function calls:
 11959 ;;		Nothing
 11960 ;; This function is called by:
 11961 ;;		_TMR4_Initialize
 11962 ;;		_main
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           	psect	text46
 11967  00750A                     __ptext46:
 11968                           	opt callstack 0
 11969  00750A                     _TMR4_SetInterruptHandler:
 11970                           	opt callstack 14
 11971                           
 11972                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
 11973                           
 11974                           ; BSR set to: 15
 11975                           ;incstack = 0
 11976  00750A  C100  F1E5         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 11977  00750E  C101  F1E6         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 11978  007512  0012               	return		;funcret
 11979  007514                     __end_of_TMR4_SetInterruptHandler:
 11980                           	opt callstack 0
 11981                           
 11982 ;; *************** function _TMR2_Initialize *****************
 11983 ;; Defined at:
 11984 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 11985 ;; Parameters:    Size  Location     Type
 11986 ;;		None
 11987 ;; Auto vars:     Size  Location     Type
 11988 ;;		None
 11989 ;; Return value:  Size  Location     Type
 11990 ;;                  1    wreg      void 
 11991 ;; Registers used:
 11992 ;;		wreg, status,2, status,0, cstack
 11993 ;; Tracked objects:
 11994 ;;		On entry : 0/0
 11995 ;;		On exit  : 0/0
 11996 ;;		Unchanged: 0/0
 11997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12002 ;;Total ram usage:        0 bytes
 12003 ;; Hardware stack levels used:    1
 12004 ;; Hardware stack levels required when called:   17
 12005 ;; This function calls:
 12006 ;;		_TMR2_SetInterruptHandler
 12007 ;; This function is called by:
 12008 ;;		_SYSTEM_Initialize
 12009 ;;		_main
 12010 ;; This function uses a non-reentrant model
 12011 ;;
 12012                           
 12013                           	psect	text47
 12014  007428                     __ptext47:
 12015                           	opt callstack 0
 12016  007428                     _TMR2_Initialize:
 12017                           	opt callstack 13
 12018                           
 12019                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
 12020                           
 12021                           ;incstack = 0
 12022  007428  0E63               	movlw	99
 12023  00742A  6EBB               	movwf	4027,c	;volatile
 12024                           
 12025                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 12026  00742C  0E00               	movlw	0
 12027  00742E  6EBC               	movwf	4028,c	;volatile
 12028                           
 12029                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 12030  007430  929E               	bcf	3998,1,c	;volatile
 12031                           
 12032                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 12033  007432  829D               	bsf	3997,1,c	;volatile
 12034                           
 12035                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 12036  007434  0E72               	movlw	low _TMR2_DefaultInterruptHandler
 12037  007436  0101               	movlb	1	; () banked
 12038  007438  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 12039  00743A  0E75               	movlw	high _TMR2_DefaultInterruptHandler
 12040  00743C  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 12041  00743E  EC8A  F03A         	call	_TMR2_SetInterruptHandler	;wreg free
 12042                           
 12043                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7C;
 12044  007442  0E7C               	movlw	124
 12045  007444  6EBA               	movwf	4026,c	;volatile
 12046  007446  0012               	return		;funcret
 12047  007448                     __end_of_TMR2_Initialize:
 12048                           	opt callstack 0
 12049                           
 12050 ;; *************** function _TMR2_SetInterruptHandler *****************
 12051 ;; Defined at:
 12052 ;;		line 147 in file "mcc_generated_files/tmr2.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 12055 ;;		 -> Timer2Interrupt(1), TMR2_DefaultInterruptHandler(1), 
 12056 ;; Auto vars:     Size  Location     Type
 12057 ;;		None
 12058 ;; Return value:  Size  Location     Type
 12059 ;;                  1    wreg      void 
 12060 ;; Registers used:
 12061 ;;		wreg, status,2, status,0
 12062 ;; Tracked objects:
 12063 ;;		On entry : 0/0
 12064 ;;		On exit  : 0/0
 12065 ;;		Unchanged: 0/0
 12066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12067 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12070 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12071 ;;Total ram usage:        2 bytes
 12072 ;; Hardware stack levels used:    1
 12073 ;; Hardware stack levels required when called:   16
 12074 ;; This function calls:
 12075 ;;		Nothing
 12076 ;; This function is called by:
 12077 ;;		_TMR2_Initialize
 12078 ;;		_main
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           	psect	text48
 12083  007514                     __ptext48:
 12084                           	opt callstack 0
 12085  007514                     _TMR2_SetInterruptHandler:
 12086                           	opt callstack 14
 12087                           
 12088                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
 12089                           
 12090                           ;incstack = 0
 12091  007514  C100  F1E9         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 12092  007518  C101  F1EA         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 12093  00751C  0012               	return		;funcret
 12094  00751E                     __end_of_TMR2_SetInterruptHandler:
 12095                           	opt callstack 0
 12096                           
 12097 ;; *************** function _PIN_MANAGER_Initialize *****************
 12098 ;; Defined at:
 12099 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12100 ;; Parameters:    Size  Location     Type
 12101 ;;		None
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;		None
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  1    wreg      void 
 12106 ;; Registers used:
 12107 ;;		wreg, status,2
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12117 ;;Total ram usage:        0 bytes
 12118 ;; Hardware stack levels used:    1
 12119 ;; Hardware stack levels required when called:   16
 12120 ;; This function calls:
 12121 ;;		Nothing
 12122 ;; This function is called by:
 12123 ;;		_SYSTEM_Initialize
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127                           	psect	text49
 12128  0072A8                     __ptext49:
 12129                           	opt callstack 0
 12130  0072A8                     _PIN_MANAGER_Initialize:
 12131                           	opt callstack 13
 12132                           
 12133                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12134                           
 12135                           ;incstack = 0
 12136  0072A8  0E00               	movlw	0
 12137  0072AA  6E89               	movwf	3977,c	;volatile
 12138                           
 12139                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12140  0072AC  0E00               	movlw	0
 12141  0072AE  6E8A               	movwf	3978,c	;volatile
 12142                           
 12143                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12144  0072B0  0E00               	movlw	0
 12145  0072B2  6E8B               	movwf	3979,c	;volatile
 12146                           
 12147                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
 12148  0072B4  6892               	setf	3986,c	;volatile
 12149                           
 12150                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
 12151  0072B6  6893               	setf	3987,c	;volatile
 12152                           
 12153                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
 12154  0072B8  0EBF               	movlw	191
 12155  0072BA  6E94               	movwf	3988,c	;volatile
 12156                           
 12157                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
 12158  0072BC  0E3C               	movlw	60
 12159  0072BE  010F               	movlb	15	; () banked
 12160  0072C0  6F3A               	movwf	58,b	;volatile
 12161                           
 12162                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
 12163  0072C2  0E3F               	movlw	63
 12164  0072C4  6F39               	movwf	57,b	;volatile
 12165                           
 12166                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
 12167  0072C6  0E2F               	movlw	47
 12168  0072C8  6F38               	movwf	56,b	;volatile
 12169                           
 12170                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12171  0072CA  0E00               	movlw	0
 12172  0072CC  6E61               	movwf	3937,c	;volatile
 12173                           
 12174                           ; BSR set to: 15
 12175                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
 12176  0072CE  8EF1               	bsf	4081,7,c	;volatile
 12177                           
 12178                           ; BSR set to: 15
 12179  0072D0  0012               	return		;funcret
 12180  0072D2                     __end_of_PIN_MANAGER_Initialize:
 12181                           	opt callstack 0
 12182                           
 12183 ;; *************** function _OSCILLATOR_Initialize *****************
 12184 ;; Defined at:
 12185 ;;		line 61 in file "mcc_generated_files/mcc.c"
 12186 ;; Parameters:    Size  Location     Type
 12187 ;;		None
 12188 ;; Auto vars:     Size  Location     Type
 12189 ;;		None
 12190 ;; Return value:  Size  Location     Type
 12191 ;;                  1    wreg      void 
 12192 ;; Registers used:
 12193 ;;		wreg, status,2
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12203 ;;Total ram usage:        0 bytes
 12204 ;; Hardware stack levels used:    1
 12205 ;; Hardware stack levels required when called:   16
 12206 ;; This function calls:
 12207 ;;		Nothing
 12208 ;; This function is called by:
 12209 ;;		_SYSTEM_Initialize
 12210 ;; This function uses a non-reentrant model
 12211 ;;
 12212                           
 12213                           	psect	text50
 12214  0074D8                     __ptext50:
 12215                           	opt callstack 0
 12216  0074D8                     _OSCILLATOR_Initialize:
 12217                           	opt callstack 13
 12218                           
 12219                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
 12220                           
 12221                           ; BSR set to: 15
 12222                           ;incstack = 0
 12223  0074D8  0E70               	movlw	112
 12224  0074DA  6ED3               	movwf	4051,c	;volatile
 12225                           
 12226                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
 12227  0074DC  0E04               	movlw	4
 12228  0074DE  6ED2               	movwf	4050,c	;volatile
 12229                           
 12230                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
 12231  0074E0  0E40               	movlw	64
 12232  0074E2  6E9B               	movwf	3995,c	;volatile
 12233  0074E4                     l26:
 12234                           
 12235                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
 12236  0074E4  BED2               	btfsc	4050,7,c	;volatile
 12237  0074E6  0012               	return	
 12238  0074E8  D7FD               	goto	l26
 12239  0074EA                     __end_of_OSCILLATOR_Initialize:
 12240                           	opt callstack 0
 12241                           
 12242 ;; *************** function _INTERRUPT_Initialize *****************
 12243 ;; Defined at:
 12244 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;		None
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;		None
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  1    wreg      void 
 12251 ;; Registers used:
 12252 ;;		None
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12262 ;;Total ram usage:        0 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:   16
 12265 ;; This function calls:
 12266 ;;		Nothing
 12267 ;; This function is called by:
 12268 ;;		_SYSTEM_Initialize
 12269 ;; This function uses a non-reentrant model
 12270 ;;
 12271                           
 12272                           	psect	text51
 12273  00756A                     __ptext51:
 12274                           	opt callstack 0
 12275  00756A                     _INTERRUPT_Initialize:
 12276                           	opt callstack 13
 12277                           
 12278                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 12279                           
 12280                           ;incstack = 0
 12281  00756A  9ED0               	bcf	4048,7,c	;volatile
 12282  00756C  0012               	return		;funcret
 12283  00756E                     __end_of_INTERRUPT_Initialize:
 12284                           	opt callstack 0
 12285                           
 12286 ;; *************** function _EUSART1_Initialize *****************
 12287 ;; Defined at:
 12288 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;		None
 12291 ;; Auto vars:     Size  Location     Type
 12292 ;;		None
 12293 ;; Return value:  Size  Location     Type
 12294 ;;                  1    wreg      void 
 12295 ;; Registers used:
 12296 ;;		wreg, status,2, status,0, cstack
 12297 ;; Tracked objects:
 12298 ;;		On entry : 0/0
 12299 ;;		On exit  : 0/0
 12300 ;;		Unchanged: 0/0
 12301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12306 ;;Total ram usage:        0 bytes
 12307 ;; Hardware stack levels used:    1
 12308 ;; Hardware stack levels required when called:   17
 12309 ;; This function calls:
 12310 ;;		_EUSART1_SetErrorHandler
 12311 ;;		_EUSART1_SetFramingErrorHandler
 12312 ;;		_EUSART1_SetOverrunErrorHandler
 12313 ;;		_EUSART1_SetRxInterruptHandler
 12314 ;;		_EUSART1_SetTxInterruptHandler
 12315 ;; This function is called by:
 12316 ;;		_SYSTEM_Initialize
 12317 ;;		_main
 12318 ;; This function uses a non-reentrant model
 12319 ;;
 12320                           
 12321                           	psect	text52
 12322  0069DE                     __ptext52:
 12323                           	opt callstack 0
 12324  0069DE                     _EUSART1_Initialize:
 12325                           	opt callstack 12
 12326                           
 12327                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
 12328                           
 12329                           ;incstack = 0
 12330  0069DE  9A9D               	bcf	3997,5,c	;volatile
 12331                           
 12332                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12333  0069E0  0E4A               	movlw	low _EUSART1_Receive_ISR
 12334  0069E2  0101               	movlb	1	; () banked
 12335  0069E4  6F00               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
 12336  0069E6  0E64               	movlw	high _EUSART1_Receive_ISR
 12337  0069E8  6F01               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 12338  0069EA  EC94  F03A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 12339                           
 12340                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
 12341  0069EE  989D               	bcf	3997,4,c	;volatile
 12342                           
 12343                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 12344  0069F0  0E7C               	movlw	low _EUSART1_Transmit_ISR
 12345  0069F2  0101               	movlb	1	; () banked
 12346  0069F4  6F00               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
 12347  0069F6  0E72               	movlw	high _EUSART1_Transmit_ISR
 12348  0069F8  6F01               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 12349  0069FA  EC8F  F03A         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 12350                           
 12351                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
 12352  0069FE  0E08               	movlw	8
 12353  006A00  6EB8               	movwf	4024,c	;volatile
 12354                           
 12355                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
 12356  006A02  0E90               	movlw	144
 12357  006A04  6EAB               	movwf	4011,c	;volatile
 12358                           
 12359                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
 12360  006A06  0E24               	movlw	36
 12361  006A08  6EAC               	movwf	4012,c	;volatile
 12362                           
 12363                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
 12364  006A0A  0E8A               	movlw	138
 12365  006A0C  6EAF               	movwf	4015,c	;volatile
 12366                           
 12367                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
 12368  006A0E  0E00               	movlw	0
 12369  006A10  6EB0               	movwf	4016,c	;volatile
 12370                           
 12371                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12372  006A12  0E74               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12373  006A14  0101               	movlb	1	; () banked
 12374  006A16  6F00               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 12375  006A18  0E75               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12376  006A1A  6F01               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 12377  006A1C  EC9E  F03A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 12378                           
 12379                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12380  006A20  0E5A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12381  006A22  0101               	movlb	1	; () banked
 12382  006A24  6F00               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 12383  006A26  0E75               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12384  006A28  6F01               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 12385  006A2A  EC99  F03A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 12386                           
 12387                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12388  006A2E  0E60               	movlw	low _EUSART1_DefaultErrorHandler
 12389  006A30  0101               	movlb	1	; () banked
 12390  006A32  6F00               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 12391  006A34  0E75               	movlw	high _EUSART1_DefaultErrorHandler
 12392  006A36  6F01               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 12393  006A38  ECA3  F03A         	call	_EUSART1_SetErrorHandler	;wreg free
 12394                           
 12395                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 12396  006A3C  0E00               	movlw	0
 12397  006A3E  0101               	movlb	1	; () banked
 12398  006A40  6FF5               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 12399                           
 12400                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 12401  006A42  0E00               	movlw	0
 12402  006A44  6FFB               	movwf	_eusart1TxHead& (0+255),b	;volatile
 12403                           
 12404                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 12405  006A46  0E00               	movlw	0
 12406  006A48  6FFA               	movwf	_eusart1TxTail& (0+255),b	;volatile
 12407                           
 12408                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 12409  006A4A  0E40               	movlw	64
 12410  006A4C  6FF9               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 12411                           
 12412                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 12413  006A4E  0E00               	movlw	0
 12414  006A50  6FF8               	movwf	_eusart1RxHead& (0+255),b	;volatile
 12415                           
 12416                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 12417  006A52  0E00               	movlw	0
 12418  006A54  6FF7               	movwf	_eusart1RxTail& (0+255),b	;volatile
 12419                           
 12420                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 12421  006A56  0E00               	movlw	0
 12422  006A58  6FF6               	movwf	_eusart1RxCount& (0+255),b	;volatile
 12423                           
 12424                           ; BSR set to: 1
 12425                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
 12426  006A5A  8A9D               	bsf	3997,5,c	;volatile
 12427                           
 12428                           ; BSR set to: 1
 12429  006A5C  0012               	return		;funcret
 12430  006A5E                     __end_of_EUSART1_Initialize:
 12431                           	opt callstack 0
 12432                           
 12433 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 12434 ;; Defined at:
 12435 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 12438 ;;		 -> EUSART1_Transmit_ISR(1), 
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;		None
 12441 ;; Return value:  Size  Location     Type
 12442 ;;                  1    wreg      void 
 12443 ;; Registers used:
 12444 ;;		wreg, status,2, status,0
 12445 ;; Tracked objects:
 12446 ;;		On entry : 0/0
 12447 ;;		On exit  : 0/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12450 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12454 ;;Total ram usage:        2 bytes
 12455 ;; Hardware stack levels used:    1
 12456 ;; Hardware stack levels required when called:   16
 12457 ;; This function calls:
 12458 ;;		Nothing
 12459 ;; This function is called by:
 12460 ;;		_EUSART1_Initialize
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           
 12464                           	psect	text53
 12465  00751E                     __ptext53:
 12466                           	opt callstack 0
 12467  00751E                     _EUSART1_SetTxInterruptHandler:
 12468                           	opt callstack 12
 12469                           
 12470                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 12471                           
 12472                           ; BSR set to: 1
 12473                           ;incstack = 0
 12474  00751E  C100  F1F3         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 12475  007522  C101  F1F4         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 12476  007526  0012               	return		;funcret
 12477  007528                     __end_of_EUSART1_SetTxInterruptHandler:
 12478                           	opt callstack 0
 12479                           
 12480 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 12481 ;; Defined at:
 12482 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 12485 ;;		 -> EUSART1_Receive_ISR(1), 
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;		None
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  1    wreg      void 
 12490 ;; Registers used:
 12491 ;;		wreg, status,2, status,0
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12497 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12501 ;;Total ram usage:        2 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; Hardware stack levels required when called:   16
 12504 ;; This function calls:
 12505 ;;		Nothing
 12506 ;; This function is called by:
 12507 ;;		_EUSART1_Initialize
 12508 ;; This function uses a non-reentrant model
 12509 ;;
 12510                           
 12511                           	psect	text54
 12512  007528                     __ptext54:
 12513                           	opt callstack 0
 12514  007528                     _EUSART1_SetRxInterruptHandler:
 12515                           	opt callstack 12
 12516                           
 12517                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 12518                           
 12519                           ;incstack = 0
 12520  007528  C100  F1F1         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 12521  00752C  C101  F1F2         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 12522  007530  0012               	return		;funcret
 12523  007532                     __end_of_EUSART1_SetRxInterruptHandler:
 12524                           	opt callstack 0
 12525                           
 12526 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12527 ;; Defined at:
 12528 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 12529 ;; Parameters:    Size  Location     Type
 12530 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 12531 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;		None
 12534 ;; Return value:  Size  Location     Type
 12535 ;;                  1    wreg      void 
 12536 ;; Registers used:
 12537 ;;		wreg, status,2, status,0
 12538 ;; Tracked objects:
 12539 ;;		On entry : 0/0
 12540 ;;		On exit  : 0/0
 12541 ;;		Unchanged: 0/0
 12542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12543 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12546 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12547 ;;Total ram usage:        2 bytes
 12548 ;; Hardware stack levels used:    1
 12549 ;; Hardware stack levels required when called:   16
 12550 ;; This function calls:
 12551 ;;		Nothing
 12552 ;; This function is called by:
 12553 ;;		_EUSART1_Initialize
 12554 ;; This function uses a non-reentrant model
 12555 ;;
 12556                           
 12557                           	psect	text55
 12558  007532                     __ptext55:
 12559                           	opt callstack 0
 12560  007532                     _EUSART1_SetOverrunErrorHandler:
 12561                           	opt callstack 12
 12562                           
 12563                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 12564                           
 12565                           ;incstack = 0
 12566  007532  C100  F1ED         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 12567  007536  C101  F1EE         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 12568  00753A  0012               	return		;funcret
 12569  00753C                     __end_of_EUSART1_SetOverrunErrorHandler:
 12570                           	opt callstack 0
 12571                           
 12572 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12573 ;; Defined at:
 12574 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 12577 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12578 ;; Auto vars:     Size  Location     Type
 12579 ;;		None
 12580 ;; Return value:  Size  Location     Type
 12581 ;;                  1    wreg      void 
 12582 ;; Registers used:
 12583 ;;		wreg, status,2, status,0
 12584 ;; Tracked objects:
 12585 ;;		On entry : 0/0
 12586 ;;		On exit  : 0/0
 12587 ;;		Unchanged: 0/0
 12588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12589 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12592 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12593 ;;Total ram usage:        2 bytes
 12594 ;; Hardware stack levels used:    1
 12595 ;; Hardware stack levels required when called:   16
 12596 ;; This function calls:
 12597 ;;		Nothing
 12598 ;; This function is called by:
 12599 ;;		_EUSART1_Initialize
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           	psect	text56
 12604  00753C                     __ptext56:
 12605                           	opt callstack 0
 12606  00753C                     _EUSART1_SetFramingErrorHandler:
 12607                           	opt callstack 12
 12608                           
 12609                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 12610                           
 12611                           ;incstack = 0
 12612  00753C  C100  F1EF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 12613  007540  C101  F1F0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 12614  007544  0012               	return		;funcret
 12615  007546                     __end_of_EUSART1_SetFramingErrorHandler:
 12616                           	opt callstack 0
 12617                           
 12618 ;; *************** function _EUSART1_SetErrorHandler *****************
 12619 ;; Defined at:
 12620 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 12621 ;; Parameters:    Size  Location     Type
 12622 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 12623 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12624 ;; Auto vars:     Size  Location     Type
 12625 ;;		None
 12626 ;; Return value:  Size  Location     Type
 12627 ;;                  1    wreg      void 
 12628 ;; Registers used:
 12629 ;;		wreg, status,2, status,0
 12630 ;; Tracked objects:
 12631 ;;		On entry : 0/0
 12632 ;;		On exit  : 0/0
 12633 ;;		Unchanged: 0/0
 12634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12635 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12638 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12639 ;;Total ram usage:        2 bytes
 12640 ;; Hardware stack levels used:    1
 12641 ;; Hardware stack levels required when called:   16
 12642 ;; This function calls:
 12643 ;;		Nothing
 12644 ;; This function is called by:
 12645 ;;		_EUSART1_Initialize
 12646 ;; This function uses a non-reentrant model
 12647 ;;
 12648                           
 12649                           	psect	text57
 12650  007546                     __ptext57:
 12651                           	opt callstack 0
 12652  007546                     _EUSART1_SetErrorHandler:
 12653                           	opt callstack 12
 12654                           
 12655                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 12656                           
 12657                           ;incstack = 0
 12658  007546  C100  F1EB         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 12659  00754A  C101  F1EC         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 12660  00754E  0012               	return		;funcret
 12661  007550                     __end_of_EUSART1_SetErrorHandler:
 12662                           	opt callstack 0
 12663                           
 12664 ;; *************** function _I2c_init *****************
 12665 ;; Defined at:
 12666 ;;		line 191 in file "main.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;		None
 12669 ;; Auto vars:     Size  Location     Type
 12670 ;;  i2cClock        1    0        unsigned char 
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  1    wreg      void 
 12673 ;; Registers used:
 12674 ;;		wreg, status,2
 12675 ;; Tracked objects:
 12676 ;;		On entry : 0/0
 12677 ;;		On exit  : 0/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12681 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12683 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12684 ;;Total ram usage:        1 bytes
 12685 ;; Hardware stack levels used:    1
 12686 ;; Hardware stack levels required when called:   16
 12687 ;; This function calls:
 12688 ;;		Nothing
 12689 ;; This function is called by:
 12690 ;;		_main
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694                           	psect	text58
 12695  0074C0                     __ptext58:
 12696                           	opt callstack 0
 12697  0074C0                     _I2c_init:
 12698                           	opt callstack 14
 12699                           
 12700                           ;main.c: 192:     TRISCbits.RC3 = 1;
 12701                           
 12702                           ;incstack = 0
 12703  0074C0  8694               	bsf	3988,3,c	;volatile
 12704                           
 12705                           ;main.c: 193:     TRISCbits.RC4 = 1;
 12706  0074C2  8894               	bsf	3988,4,c	;volatile
 12707                           
 12708                           ;main.c: 195:     ANSELCbits.ANSC3 = 0;
 12709  0074C4  010F               	movlb	15	; () banked
 12710  0074C6  973A               	bcf	58,3,b	;volatile
 12711                           
 12712                           ;main.c: 196:     ANSELCbits.ANSC4 = 0;
 12713  0074C8  993A               	bcf	58,4,b	;volatile
 12714                           
 12715                           ; BSR set to: 15
 12716                           ;main.c: 200:     SSP1ADD = i2cClock;
 12717                           
 12718                           ; BSR set to: 15
 12719  0074CA  0E9F               	movlw	159
 12720  0074CC  6EC8               	movwf	4040,c	;volatile
 12721                           
 12722                           ;main.c: 201:     SSP1CON1 = 0x28;
 12723  0074CE  0E28               	movlw	40
 12724  0074D0  6EC6               	movwf	4038,c	;volatile
 12725                           
 12726                           ;main.c: 202:     SSP1CON2 = 0;
 12727  0074D2  0E00               	movlw	0
 12728  0074D4  6EC5               	movwf	4037,c	;volatile
 12729                           
 12730                           ; BSR set to: 15
 12731  0074D6  0012               	return		;funcret
 12732  0074D8                     __end_of_I2c_init:
 12733                           	opt callstack 0
 12734                           
 12735 ;; *************** function _INTERRUPT_InterruptManager *****************
 12736 ;; Defined at:
 12737 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 12738 ;; Parameters:    Size  Location     Type
 12739 ;;		None
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;		None
 12742 ;; Return value:  Size  Location     Type
 12743 ;;                  1    wreg      void 
 12744 ;; Registers used:
 12745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12746 ;; Tracked objects:
 12747 ;;		On entry : 0/0
 12748 ;;		On exit  : 0/0
 12749 ;;		Unchanged: 0/0
 12750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12753 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12754 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12755 ;;Total ram usage:       12 bytes
 12756 ;; Hardware stack levels used:    1
 12757 ;; Hardware stack levels required when called:   15
 12758 ;; This function calls:
 12759 ;;		Absolute function
 12760 ;;		_EUSART1_Receive_ISR
 12761 ;;		_EUSART1_Transmit_ISR
 12762 ;;		_TMR2_ISR
 12763 ;;		_TMR4_ISR
 12764 ;; This function is called by:
 12765 ;;		Interrupt level 2
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769                           	psect	intcode
 12770  000008                     __pintcode:
 12771                           	opt callstack 0
 12772  000008                     _INTERRUPT_InterruptManager:
 12773                           	opt callstack 3
 12774                           
 12775                           ; BSR set to: 15
 12776                           ;incstack = 0
 12777  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12778  00000A  CFFA F0F0          	movff	pclath,??_INTERRUPT_InterruptManager
 12779  00000E  CFFB F0F1          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12780  000012  CFE1 F0F2          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 12781  000016  CFE2 F0F3          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 12782  00001A  CFD9 F0F4          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 12783  00001E  CFDA F0F5          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 12784  000022  CFF3 F0F6          	movff	prodl,??_INTERRUPT_InterruptManager+6
 12785  000026  CFF4 F0F7          	movff	prodh,??_INTERRUPT_InterruptManager+7
 12786  00002A  CFF6 F0F8          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 12787  00002E  CFF7 F0F9          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 12788  000032  CFF8 F0FA          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 12789  000036  CFF5 F0FB          	movff	tablat,??_INTERRUPT_InterruptManager+11
 12790                           
 12791                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 12792  00003A  ACF2               	btfss	4082,6,c	;volatile
 12793  00003C  D026               	goto	i2l241
 12794                           
 12795                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 12796  00003E  B89D               	btfsc	3997,4,c	;volatile
 12797  000040  A89E               	btfss	3998,4,c	;volatile
 12798  000042  D009               	goto	i2l238
 12799                           
 12800                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
 12801  000044  D801               	call	i2u1237_48
 12802  000046  D021               	goto	i2l241
 12803  000048                     i2u1237_48:
 12804  000048  0005               	push	
 12805  00004A  6EFA               	movwf	pclath,c
 12806  00004C  0101               	movlb	1	; () banked
 12807  00004E  51F3               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 12808  000050  6EFD               	movwf	tosl,c
 12809  000052  51F4               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 12810  000054  D00B               	goto	L14
 12811  000056                     i2l238:
 12812  000056  BA9D               	btfsc	3997,5,c	;volatile
 12813  000058  AA9E               	btfss	3998,5,c	;volatile
 12814  00005A  D00C               	goto	i2l240
 12815                           
 12816                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
 12817  00005C  D801               	call	i2u1240_48
 12818  00005E  D015               	goto	i2l241
 12819  000060                     i2u1240_48:
 12820  000060  0005               	push	
 12821  000062  6EFA               	movwf	pclath,c
 12822  000064  0101               	movlb	1	; () banked
 12823  000066  51F1               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 12824  000068  6EFD               	movwf	tosl,c
 12825  00006A  51F2               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 12826  00006C                     L14:
 12827  00006C  6EFE               	movwf	tosh,c
 12828  00006E  6AFF               	clrf	tosu,c
 12829  000070  50FA               	movf	pclath,w,c
 12830  000072  0012               	return		;indir
 12831  000074                     i2l240:
 12832  000074  B07D               	btfsc	3965,0,c	;volatile
 12833  000076  A07E               	btfss	3966,0,c	;volatile
 12834  000078  D003               	goto	i2l242
 12835                           
 12836                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR4_ISR();
 12837  00007A  ECDF  F039         	call	_TMR4_ISR	;wreg free
 12838                           
 12839                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 12840  00007E  D005               	goto	i2l241
 12841  000080                     i2l242:
 12842  000080  B29D               	btfsc	3997,1,c	;volatile
 12843  000082  A29E               	btfss	3998,1,c	;volatile
 12844  000084  D002               	goto	i2l241
 12845                           
 12846                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR2_ISR();
 12847  000086  ECF1  F039         	call	_TMR2_ISR	;wreg free
 12848  00008A                     i2l241:
 12849  00008A  C0FB  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 12850  00008E  C0FA  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 12851  000092  C0F9  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 12852  000096  C0F8  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 12853  00009A  C0F7  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 12854  00009E  C0F6  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 12855  0000A2  C0F5  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 12856  0000A6  C0F4  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 12857  0000AA  C0F3  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 12858  0000AE  C0F2  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 12859  0000B2  C0F1  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12860  0000B6  C0F0  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 12861  0000BA  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12862  0000BC  0011               	retfie		f
 12863  0000BE                     __end_of_INTERRUPT_InterruptManager:
 12864                           	opt callstack 0
 12865                           
 12866 ;; *************** function _TMR4_ISR *****************
 12867 ;; Defined at:
 12868 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;		None
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;		None
 12873 ;; Return value:  Size  Location     Type
 12874 ;;                  1    wreg      void 
 12875 ;; Registers used:
 12876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12877 ;; Tracked objects:
 12878 ;;		On entry : 0/0
 12879 ;;		On exit  : 0/0
 12880 ;;		Unchanged: 0/0
 12881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12886 ;;Total ram usage:        0 bytes
 12887 ;; Hardware stack levels used:    1
 12888 ;; Hardware stack levels required when called:   12
 12889 ;; This function calls:
 12890 ;;		_TMR4_CallBack
 12891 ;; This function is called by:
 12892 ;;		_INTERRUPT_InterruptManager
 12893 ;; This function uses a non-reentrant model
 12894 ;;
 12895                           
 12896                           	psect	text60
 12897  0073BE                     __ptext60:
 12898                           	opt callstack 0
 12899  0073BE                     _TMR4_ISR:
 12900                           	opt callstack 5
 12901                           
 12902                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR5bits.TMR4IF = 0;
 12903                           
 12904                           ;incstack = 0
 12905  0073BE  907E               	bcf	3966,0,c	;volatile
 12906                           
 12907                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 60000)
 12908  0073C0  0101               	movlb	1	; () banked
 12909  0073C2  4BE3               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 12910  0073C4  2BE4               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 12911  0073C6  0E60               	movlw	96
 12912  0073C8  5DE3               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 12913  0073CA  0EEA               	movlw	234
 12914  0073CC  59E4               	subwfb	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 12915  0073CE  A0D8               	btfss	status,0,c
 12916  0073D0  0012               	return	
 12917                           
 12918                           ; BSR set to: 1
 12919                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
 12920  0073D2  EC24  F03A         	call	_TMR4_CallBack	;wreg free
 12921                           
 12922                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
 12923  0073D6  0E00               	movlw	0
 12924  0073D8  0101               	movlb	1	; () banked
 12925  0073DA  6FE4               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 12926  0073DC  0E00               	movlw	0
 12927  0073DE  6FE3               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 12928                           
 12929                           ; BSR set to: 1
 12930  0073E0  0012               	return		;funcret
 12931  0073E2                     __end_of_TMR4_ISR:
 12932                           	opt callstack 0
 12933                           
 12934 ;; *************** function _TMR4_CallBack *****************
 12935 ;; Defined at:
 12936 ;;		line 137 in file "mcc_generated_files/tmr4.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;		None
 12939 ;; Auto vars:     Size  Location     Type
 12940 ;;		None
 12941 ;; Return value:  Size  Location     Type
 12942 ;;                  1    wreg      void 
 12943 ;; Registers used:
 12944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12945 ;; Tracked objects:
 12946 ;;		On entry : 0/0
 12947 ;;		On exit  : 0/0
 12948 ;;		Unchanged: 0/0
 12949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12954 ;;Total ram usage:        0 bytes
 12955 ;; Hardware stack levels used:    1
 12956 ;; Hardware stack levels required when called:   11
 12957 ;; This function calls:
 12958 ;;		Absolute function
 12959 ;;		_TMR4_DefaultInterruptHandler
 12960 ;;		_Timer4Interrupt
 12961 ;; This function is called by:
 12962 ;;		_TMR4_ISR
 12963 ;; This function uses a non-reentrant model
 12964 ;;
 12965                           
 12966                           	psect	text61
 12967  007448                     __ptext61:
 12968                           	opt callstack 0
 12969  007448                     _TMR4_CallBack:
 12970                           	opt callstack 5
 12971                           
 12972                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
 12973                           
 12974                           ; BSR set to: 1
 12975                           ;incstack = 0
 12976  007448  0101               	movlb	1	; () banked
 12977  00744A  51E5               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12978  00744C  11E6               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12979  00744E  B4D8               	btfsc	status,2,c
 12980  007450  0012               	return	
 12981                           
 12982                           ; BSR set to: 1
 12983                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
 12984  007452  D801               	call	i2u1220_48
 12985  007454  0012               	return	
 12986  007456                     i2u1220_48:
 12987  007456  0005               	push	
 12988  007458  6EFA               	movwf	pclath,c
 12989  00745A  51E5               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12990  00745C  6EFD               	movwf	tosl,c
 12991  00745E  51E6               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12992  007460  6EFE               	movwf	tosh,c
 12993  007462  6AFF               	clrf	tosu,c
 12994  007464  50FA               	movf	pclath,w,c
 12995  007466  0012               	return		;indir
 12996  007468                     __end_of_TMR4_CallBack:
 12997                           	opt callstack 0
 12998                           
 12999 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 13000 ;; Defined at:
 13001 ;;		line 151 in file "mcc_generated_files/tmr4.c"
 13002 ;; Parameters:    Size  Location     Type
 13003 ;;		None
 13004 ;; Auto vars:     Size  Location     Type
 13005 ;;		None
 13006 ;; Return value:  Size  Location     Type
 13007 ;;                  1    wreg      void 
 13008 ;; Registers used:
 13009 ;;		None
 13010 ;; Tracked objects:
 13011 ;;		On entry : 0/0
 13012 ;;		On exit  : 0/0
 13013 ;;		Unchanged: 0/0
 13014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13019 ;;Total ram usage:        0 bytes
 13020 ;; Hardware stack levels used:    1
 13021 ;; This function calls:
 13022 ;;		Nothing
 13023 ;; This function is called by:
 13024 ;;		_TMR4_Initialize
 13025 ;;		_TMR4_CallBack
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           	psect	text62
 13030  007570                     __ptext62:
 13031                           	opt callstack 0
 13032  007570                     _TMR4_DefaultInterruptHandler:
 13033                           	opt callstack 15
 13034                           
 13035                           ;incstack = 0
 13036  007570  0012               	return		;funcret
 13037  007572                     __end_of_TMR4_DefaultInterruptHandler:
 13038                           	opt callstack 0
 13039                           
 13040 ;; *************** function _Timer4Interrupt *****************
 13041 ;; Defined at:
 13042 ;;		line 152 in file "main.c"
 13043 ;; Parameters:    Size  Location     Type
 13044 ;;		None
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  humid           4  104[BANK0 ] float 
 13047 ;;  temp            4  100[BANK0 ] float 
 13048 ;;  i               2  114[BANK0 ] unsigned short 
 13049 ;;  output          4  108[BANK0 ] unsigned char [4]
 13050 ;;  dataLength      2  112[BANK0 ] unsigned short 
 13051 ;;  location        2   98[BANK0 ] unsigned char [2]
 13052 ;; Return value:  Size  Location     Type
 13053 ;;                  1    wreg      void 
 13054 ;; Registers used:
 13055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13056 ;; Tracked objects:
 13057 ;;		On entry : 0/0
 13058 ;;		On exit  : 0/0
 13059 ;;		Unchanged: 0/0
 13060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13062 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13063 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13064 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13065 ;;Total ram usage:       20 bytes
 13066 ;; Hardware stack levels used:    1
 13067 ;; Hardware stack levels required when called:   10
 13068 ;; This function calls:
 13069 ;;		_ConvertByteArrayToFloat
 13070 ;;		i2_I2cReadSerial
 13071 ;;		i2_I2cWriteSerial
 13072 ;;		i2_printf
 13073 ;; This function is called by:
 13074 ;;		_main
 13075 ;;		_TMR4_CallBack
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078                           
 13079                           	psect	text63
 13080  004882                     __ptext63:
 13081                           	opt callstack 0
 13082  004882                     _Timer4Interrupt:
 13083                           	opt callstack 5
 13084                           
 13085                           ;main.c: 153:     counter++;
 13086                           
 13087                           ;incstack = 0
 13088  004882  0100               	movlb	0	; () banked
 13089  004884  2BFC               	incf	_counter& (0+255),f,b
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;main.c: 154:     if (counter == 100) {
 13093  004886  0E64               	movlw	100
 13094  004888  19FC               	xorwf	_counter& (0+255),w,b
 13095  00488A  A4D8               	btfss	status,2,c
 13096  00488C  0012               	return	
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;main.c: 155:         reading = 1;
 13100  00488E  0E01               	movlw	1
 13101  004890  6FFD               	movwf	_reading& (0+255),b
 13102                           
 13103                           ; BSR set to: 0
 13104                           ;main.c: 158:         uint8_t location[] = {0x00, 0x02};
 13105  004892  C2BA  F0C2         	movff	Timer4Interrupt@F6194,Timer4Interrupt@location
 13106  004896  C2BB  F0C3         	movff	Timer4Interrupt@F6194+1,Timer4Interrupt@location+1
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;main.c: 159:         _delay((unsigned long)((5)*(64000000/4000.0)));
 13110  00489A  0E68               	movlw	104
 13111  00489C  0100               	movlb	0	; () banked
 13112  00489E  6FC0               	movwf	??_Timer4Interrupt& (0+255),b
 13113  0048A0  0EE4               	movlw	228
 13114  0048A2                     i2u1247_47:
 13115  0048A2  2EE8               	decfsz	wreg,f,c
 13116  0048A4  D7FE               	bra	i2u1247_47
 13117  0048A6  2FC0               	decfsz	??_Timer4Interrupt& (0+255),f,b
 13118  0048A8  D7FC               	bra	i2u1247_47
 13119  0048AA  F000               	nop	
 13120                           
 13121                           ;main.c: 160:         I2cWriteSerial(eepromAddress, location, 2);
 13122  0048AC  0EC2               	movlw	low Timer4Interrupt@location
 13123  0048AE  0100               	movlb	0	; () banked
 13124  0048B0  6FB8               	movwf	i2I2cWriteSerial@writeData& (0+255),b
 13125  0048B2  0E00               	movlw	high Timer4Interrupt@location
 13126  0048B4  6FB9               	movwf	(i2I2cWriteSerial@writeData+1)& (0+255),b
 13127  0048B6  0E02               	movlw	2
 13128  0048B8  6FBA               	movwf	i2I2cWriteSerial@length& (0+255),b
 13129  0048BA  51FE               	movf	_eepromAddress& (0+255),w,b
 13130  0048BC  EC56  F033         	call	i2_I2cWriteSerial
 13131                           
 13132                           ;main.c: 161:         uint8_t output[4];;main.c: 162:         _delay((unsigned long)((5)
      +                          *(64000000/4000.0)));
 13133  0048C0  0E68               	movlw	104
 13134  0048C2  0100               	movlb	0	; () banked
 13135  0048C4  6FC0               	movwf	??_Timer4Interrupt& (0+255),b
 13136  0048C6  0EE4               	movlw	228
 13137  0048C8                     i2u1248_47:
 13138  0048C8  2EE8               	decfsz	wreg,f,c
 13139  0048CA  D7FE               	bra	i2u1248_47
 13140  0048CC  2FC0               	decfsz	??_Timer4Interrupt& (0+255),f,b
 13141  0048CE  D7FC               	bra	i2u1248_47
 13142  0048D0  F000               	nop	
 13143                           
 13144                           ;main.c: 163:         I2cReadSerial(eepromAddress, output, 2);
 13145  0048D2  0ECC               	movlw	low Timer4Interrupt@output
 13146  0048D4  6E01               	movwf	i2I2cReadSerial@readData,c
 13147  0048D6  0E00               	movlw	high Timer4Interrupt@output
 13148  0048D8  6E02               	movwf	i2I2cReadSerial@readData+1,c
 13149  0048DA  0E02               	movlw	2
 13150  0048DC  6E03               	movwf	i2I2cReadSerial@length,c
 13151  0048DE  0100               	movlb	0	; () banked
 13152  0048E0  51FE               	movf	_eepromAddress& (0+255),w,b
 13153  0048E2  ECC0  F032         	call	i2_I2cReadSerial
 13154                           
 13155                           ;main.c: 166:         uint16_t dataLength = output[0] << 8;
 13156  0048E6  0100               	movlb	0	; () banked
 13157  0048E8  51CC               	movf	Timer4Interrupt@output& (0+255),w,b
 13158  0048EA  6FD1               	movwf	(Timer4Interrupt@dataLength+1)& (0+255),b
 13159  0048EC  6BD0               	clrf	Timer4Interrupt@dataLength& (0+255),b
 13160                           
 13161                           ; BSR set to: 0
 13162                           ;main.c: 167:         dataLength += output[1];
 13163  0048EE  51CD               	movf	(Timer4Interrupt@output+1)& (0+255),w,b
 13164  0048F0  27D0               	addwf	Timer4Interrupt@dataLength& (0+255),f,b
 13165  0048F2  0E00               	movlw	0
 13166  0048F4  23D1               	addwfc	(Timer4Interrupt@dataLength+1)& (0+255),f,b
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;main.c: 168:         dataLength = dataLength / 4;
 13170  0048F6  C0D0  F0C0         	movff	Timer4Interrupt@dataLength,??_Timer4Interrupt
 13171  0048FA  C0D1  F0C1         	movff	Timer4Interrupt@dataLength+1,??_Timer4Interrupt+1
 13172  0048FE  90D8               	bcf	status,0,c
 13173  004900  33C1               	rrcf	(??_Timer4Interrupt+1)& (0+255),f,b
 13174  004902  33C0               	rrcf	??_Timer4Interrupt& (0+255),f,b
 13175  004904  90D8               	bcf	status,0,c
 13176  004906  33C1               	rrcf	(??_Timer4Interrupt+1)& (0+255),f,b
 13177  004908  33C0               	rrcf	??_Timer4Interrupt& (0+255),f,b
 13178  00490A  C0C0  F0D0         	movff	??_Timer4Interrupt,Timer4Interrupt@dataLength
 13179  00490E  C0C1  F0D1         	movff	??_Timer4Interrupt+1,Timer4Interrupt@dataLength+1
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;main.c: 171:         for (uint16_t i = 0; i < dataLength; i++) {
 13183  004912  0E00               	movlw	0
 13184  004914  6FD3               	movwf	(Timer4Interrupt@i+1)& (0+255),b
 13185  004916  0E00               	movlw	0
 13186  004918  6FD2               	movwf	Timer4Interrupt@i& (0+255),b
 13187  00491A  D058               	goto	i2l8369
 13188  00491C                     i2l8355:
 13189                           
 13190                           ; BSR set to: 0
 13191                           ;main.c: 172:             _delay((unsigned long)((5)*(64000000/4000.0)));
 13192  00491C  0E68               	movlw	104
 13193  00491E  0100               	movlb	0	; () banked
 13194  004920  6FC0               	movwf	??_Timer4Interrupt& (0+255),b
 13195  004922  0EE4               	movlw	228
 13196  004924                     i2u1249_47:
 13197  004924  2EE8               	decfsz	wreg,f,c
 13198  004926  D7FE               	bra	i2u1249_47
 13199  004928  2FC0               	decfsz	??_Timer4Interrupt& (0+255),f,b
 13200  00492A  D7FC               	bra	i2u1249_47
 13201  00492C  F000               	nop	
 13202                           
 13203                           ;main.c: 173:             I2cReadSerial(eepromAddress, output, 4);
 13204  00492E  0ECC               	movlw	low Timer4Interrupt@output
 13205  004930  6E01               	movwf	i2I2cReadSerial@readData,c
 13206  004932  0E00               	movlw	high Timer4Interrupt@output
 13207  004934  6E02               	movwf	i2I2cReadSerial@readData+1,c
 13208  004936  0E04               	movlw	4
 13209  004938  6E03               	movwf	i2I2cReadSerial@length,c
 13210  00493A  0100               	movlb	0	; () banked
 13211  00493C  51FE               	movf	_eepromAddress& (0+255),w,b
 13212  00493E  ECC0  F032         	call	i2_I2cReadSerial
 13213                           
 13214                           ;main.c: 175:             float temp = ConvertByteArrayToFloat(output[0], output[1]);
 13215  004942  C0CD  F01B         	movff	Timer4Interrupt@output+1,ConvertByteArrayToFloat@inputLeastSignificant
 13216  004946  0100               	movlb	0	; () banked
 13217  004948  51CC               	movf	Timer4Interrupt@output& (0+255),w,b
 13218  00494A  ECC9  F02E         	call	_ConvertByteArrayToFloat
 13219  00494E  C01B  F0C4         	movff	?_ConvertByteArrayToFloat,Timer4Interrupt@temp
 13220  004952  C01C  F0C5         	movff	?_ConvertByteArrayToFloat+1,Timer4Interrupt@temp+1
 13221  004956  C01D  F0C6         	movff	?_ConvertByteArrayToFloat+2,Timer4Interrupt@temp+2
 13222  00495A  C01E  F0C7         	movff	?_ConvertByteArrayToFloat+3,Timer4Interrupt@temp+3
 13223                           
 13224                           ;main.c: 176:             printf("Temperature number %d was %.1f \r\n", i, temp);
 13225  00495E  0E3E               	movlw	low STR_2
 13226  004960  0100               	movlb	0	; () banked
 13227  004962  6FAC               	movwf	i2printf@fmt& (0+255),b
 13228  004964  0E10               	movlw	high STR_2
 13229  004966  6FAD               	movwf	(i2printf@fmt+1)& (0+255),b
 13230  004968  C0D2  F0AE         	movff	Timer4Interrupt@i,?i2_printf+2
 13231  00496C  C0D3  F0AF         	movff	Timer4Interrupt@i+1,?i2_printf+3
 13232  004970  C0C4  F0B0         	movff	Timer4Interrupt@temp,?i2_printf+4
 13233  004974  C0C5  F0B1         	movff	Timer4Interrupt@temp+1,?i2_printf+5
 13234  004978  C0C6  F0B2         	movff	Timer4Interrupt@temp+2,?i2_printf+6
 13235  00497C  C0C7  F0B3         	movff	Timer4Interrupt@temp+3,?i2_printf+7
 13236  004980  ECA6  F039         	call	i2_printf	;wreg free
 13237                           
 13238                           ;main.c: 178:             float humid = ConvertByteArrayToFloat(output[2], output[3]);
 13239  004984  C0CF  F01B         	movff	Timer4Interrupt@output+3,ConvertByteArrayToFloat@inputLeastSignificant
 13240  004988  0100               	movlb	0	; () banked
 13241  00498A  51CE               	movf	(Timer4Interrupt@output+2)& (0+255),w,b
 13242  00498C  ECC9  F02E         	call	_ConvertByteArrayToFloat
 13243  004990  C01B  F0C8         	movff	?_ConvertByteArrayToFloat,Timer4Interrupt@humid
 13244  004994  C01C  F0C9         	movff	?_ConvertByteArrayToFloat+1,Timer4Interrupt@humid+1
 13245  004998  C01D  F0CA         	movff	?_ConvertByteArrayToFloat+2,Timer4Interrupt@humid+2
 13246  00499C  C01E  F0CB         	movff	?_ConvertByteArrayToFloat+3,Timer4Interrupt@humid+3
 13247                           
 13248                           ;main.c: 179:             printf("Humidity number %d was %.1f \r\n", i, humid);
 13249  0049A0  0E82               	movlw	low STR_3
 13250  0049A2  0100               	movlb	0	; () banked
 13251  0049A4  6FAC               	movwf	i2printf@fmt& (0+255),b
 13252  0049A6  0E10               	movlw	high STR_3
 13253  0049A8  6FAD               	movwf	(i2printf@fmt+1)& (0+255),b
 13254  0049AA  C0D2  F0AE         	movff	Timer4Interrupt@i,?i2_printf+2
 13255  0049AE  C0D3  F0AF         	movff	Timer4Interrupt@i+1,?i2_printf+3
 13256  0049B2  C0C8  F0B0         	movff	Timer4Interrupt@humid,?i2_printf+4
 13257  0049B6  C0C9  F0B1         	movff	Timer4Interrupt@humid+1,?i2_printf+5
 13258  0049BA  C0CA  F0B2         	movff	Timer4Interrupt@humid+2,?i2_printf+6
 13259  0049BE  C0CB  F0B3         	movff	Timer4Interrupt@humid+3,?i2_printf+7
 13260  0049C2  ECA6  F039         	call	i2_printf	;wreg free
 13261                           
 13262                           ;main.c: 181:         }
 13263  0049C6  0100               	movlb	0	; () banked
 13264  0049C8  4BD2               	infsnz	Timer4Interrupt@i& (0+255),f,b
 13265  0049CA  2BD3               	incf	(Timer4Interrupt@i+1)& (0+255),f,b
 13266  0049CC                     i2l8369:
 13267                           
 13268                           ; BSR set to: 0
 13269  0049CC  51D0               	movf	Timer4Interrupt@dataLength& (0+255),w,b
 13270  0049CE  5DD2               	subwf	Timer4Interrupt@i& (0+255),w,b
 13271  0049D0  51D1               	movf	(Timer4Interrupt@dataLength+1)& (0+255),w,b
 13272  0049D2  59D3               	subwfb	(Timer4Interrupt@i+1)& (0+255),w,b
 13273  0049D4  A0D8               	btfss	status,0,c
 13274  0049D6  D7A2               	goto	i2l8355
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;main.c: 184:         I2cWriteSerial(eepromAddress, resetEeprom, 4);
 13278  0049D8  0EB4               	movlw	low _resetEeprom
 13279  0049DA  6FB8               	movwf	i2I2cWriteSerial@writeData& (0+255),b
 13280  0049DC  0E02               	movlw	high _resetEeprom
 13281  0049DE  6FB9               	movwf	(i2I2cWriteSerial@writeData+1)& (0+255),b
 13282  0049E0  0E04               	movlw	4
 13283  0049E2  6FBA               	movwf	i2I2cWriteSerial@length& (0+255),b
 13284  0049E4  51FE               	movf	_eepromAddress& (0+255),w,b
 13285  0049E6  EC56  F033         	call	i2_I2cWriteSerial
 13286                           
 13287                           ;main.c: 186:         reading = 0;
 13288  0049EA  0E00               	movlw	0
 13289  0049EC  0100               	movlb	0	; () banked
 13290  0049EE  6FFD               	movwf	_reading& (0+255),b
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;main.c: 187:         counter = 0;
 13294  0049F0  0E00               	movlw	0
 13295  0049F2  6FFC               	movwf	_counter& (0+255),b
 13296                           
 13297                           ; BSR set to: 0
 13298  0049F4  0012               	return		;funcret
 13299  0049F6                     __end_of_Timer4Interrupt:
 13300                           	opt callstack 0
 13301                           
 13302 ;; *************** function _ConvertByteArrayToFloat *****************
 13303 ;; Defined at:
 13304 ;;		line 424 in file "main.c"
 13305 ;; Parameters:    Size  Location     Type
 13306 ;;  inputMostSig    1    wreg     unsigned char 
 13307 ;;  inputLeastSi    1   26[COMRAM] unsigned char 
 13308 ;; Auto vars:     Size  Location     Type
 13309 ;;  inputMostSig    1   30[COMRAM] unsigned char 
 13310 ;;  decimals        4   35[COMRAM] float 
 13311 ;;  result          4   31[COMRAM] float 
 13312 ;; Return value:  Size  Location     Type
 13313 ;;                  4   26[COMRAM] float 
 13314 ;; Registers used:
 13315 ;;		wreg, status,2, status,0, cstack
 13316 ;; Tracked objects:
 13317 ;;		On entry : 0/0
 13318 ;;		On exit  : 0/0
 13319 ;;		Unchanged: 0/0
 13320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13322 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13324 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13325 ;;Total ram usage:       13 bytes
 13326 ;; Hardware stack levels used:    1
 13327 ;; Hardware stack levels required when called:    1
 13328 ;; This function calls:
 13329 ;;		i2___fladd
 13330 ;;		i2___fldiv
 13331 ;;		i2___xxtofl
 13332 ;; This function is called by:
 13333 ;;		_Timer4Interrupt
 13334 ;; This function uses a non-reentrant model
 13335 ;;
 13336                           
 13337                           	psect	text64
 13338  005D92                     __ptext64:
 13339                           	opt callstack 0
 13340  005D92                     _ConvertByteArrayToFloat:
 13341                           	opt callstack 13
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;incstack = 0
 13345                           ;ConvertByteArrayToFloat@inputMostSignificant stored from wreg
 13346  005D92  6E1F               	movwf	ConvertByteArrayToFloat@inputMostSignificant,c
 13347                           
 13348                           ;main.c: 425:     float result = inputMostSignificant;
 13349  005D94  501F               	movf	ConvertByteArrayToFloat@inputMostSignificant,w,c
 13350  005D96  6E0D               	movwf	i2___xxtofl@val,c
 13351  005D98  6A0E               	clrf	i2___xxtofl@val+1,c
 13352  005D9A  6A0F               	clrf	i2___xxtofl@val+2,c
 13353  005D9C  6A10               	clrf	i2___xxtofl@val+3,c
 13354  005D9E  0E00               	movlw	0
 13355  005DA0  EC32  F028         	call	i2___xxtofl
 13356  005DA4  C00D  F020         	movff	?i2___xxtofl,ConvertByteArrayToFloat@result
 13357  005DA8  C00E  F021         	movff	?i2___xxtofl+1,ConvertByteArrayToFloat@result+1
 13358  005DAC  C00F  F022         	movff	?i2___xxtofl+2,ConvertByteArrayToFloat@result+2
 13359  005DB0  C010  F023         	movff	?i2___xxtofl+3,ConvertByteArrayToFloat@result+3
 13360                           
 13361                           ;main.c: 426:     float decimals = inputLeastSignificant;
 13362  005DB4  501B               	movf	ConvertByteArrayToFloat@inputLeastSignificant,w,c
 13363  005DB6  6E0D               	movwf	i2___xxtofl@val,c
 13364  005DB8  6A0E               	clrf	i2___xxtofl@val+1,c
 13365  005DBA  6A0F               	clrf	i2___xxtofl@val+2,c
 13366  005DBC  6A10               	clrf	i2___xxtofl@val+3,c
 13367  005DBE  0E00               	movlw	0
 13368  005DC0  EC32  F028         	call	i2___xxtofl
 13369  005DC4  C00D  F024         	movff	?i2___xxtofl,ConvertByteArrayToFloat@decimals
 13370  005DC8  C00E  F025         	movff	?i2___xxtofl+1,ConvertByteArrayToFloat@decimals+1
 13371  005DCC  C00F  F026         	movff	?i2___xxtofl+2,ConvertByteArrayToFloat@decimals+2
 13372  005DD0  C010  F027         	movff	?i2___xxtofl+3,ConvertByteArrayToFloat@decimals+3
 13373                           
 13374                           ;main.c: 427:     decimals = decimals / 100;
 13375  005DD4  C024  F001         	movff	ConvertByteArrayToFloat@decimals,i2___fldiv@b
 13376  005DD8  C025  F002         	movff	ConvertByteArrayToFloat@decimals+1,i2___fldiv@b+1
 13377  005DDC  C026  F003         	movff	ConvertByteArrayToFloat@decimals+2,i2___fldiv@b+2
 13378  005DE0  C027  F004         	movff	ConvertByteArrayToFloat@decimals+3,i2___fldiv@b+3
 13379  005DE4  0E00               	movlw	0
 13380  005DE6  6E05               	movwf	i2___fldiv@a,c
 13381  005DE8  0E00               	movlw	0
 13382  005DEA  6E06               	movwf	i2___fldiv@a+1,c
 13383  005DEC  0EC8               	movlw	200
 13384  005DEE  6E07               	movwf	i2___fldiv@a+2,c
 13385  005DF0  0E42               	movlw	66
 13386  005DF2  6E08               	movwf	i2___fldiv@a+3,c
 13387  005DF4  EC2B  F01E         	call	i2___fldiv	;wreg free
 13388  005DF8  C001  F024         	movff	?i2___fldiv,ConvertByteArrayToFloat@decimals
 13389  005DFC  C002  F025         	movff	?i2___fldiv+1,ConvertByteArrayToFloat@decimals+1
 13390  005E00  C003  F026         	movff	?i2___fldiv+2,ConvertByteArrayToFloat@decimals+2
 13391  005E04  C004  F027         	movff	?i2___fldiv+3,ConvertByteArrayToFloat@decimals+3
 13392                           
 13393                           ;main.c: 429:     result = result + decimals;
 13394  005E08  C020  F001         	movff	ConvertByteArrayToFloat@result,i2___fladd@b
 13395  005E0C  C021  F002         	movff	ConvertByteArrayToFloat@result+1,i2___fladd@b+1
 13396  005E10  C022  F003         	movff	ConvertByteArrayToFloat@result+2,i2___fladd@b+2
 13397  005E14  C023  F004         	movff	ConvertByteArrayToFloat@result+3,i2___fladd@b+3
 13398  005E18  C024  F005         	movff	ConvertByteArrayToFloat@decimals,i2___fladd@a
 13399  005E1C  C025  F006         	movff	ConvertByteArrayToFloat@decimals+1,i2___fladd@a+1
 13400  005E20  C026  F007         	movff	ConvertByteArrayToFloat@decimals+2,i2___fladd@a+2
 13401  005E24  C027  F008         	movff	ConvertByteArrayToFloat@decimals+3,i2___fladd@a+3
 13402  005E28  EC60  F01B         	call	i2___fladd	;wreg free
 13403  005E2C  C001  F020         	movff	?i2___fladd,ConvertByteArrayToFloat@result
 13404  005E30  C002  F021         	movff	?i2___fladd+1,ConvertByteArrayToFloat@result+1
 13405  005E34  C003  F022         	movff	?i2___fladd+2,ConvertByteArrayToFloat@result+2
 13406  005E38  C004  F023         	movff	?i2___fladd+3,ConvertByteArrayToFloat@result+3
 13407                           
 13408                           ;main.c: 431:     return result;
 13409  005E3C  C020  F01B         	movff	ConvertByteArrayToFloat@result,?_ConvertByteArrayToFloat
 13410  005E40  C021  F01C         	movff	ConvertByteArrayToFloat@result+1,?_ConvertByteArrayToFloat+1
 13411  005E44  C022  F01D         	movff	ConvertByteArrayToFloat@result+2,?_ConvertByteArrayToFloat+2
 13412  005E48  C023  F01E         	movff	ConvertByteArrayToFloat@result+3,?_ConvertByteArrayToFloat+3
 13413  005E4C  0012               	return		;funcret
 13414  005E4E                     __end_of_ConvertByteArrayToFloat:
 13415                           	opt callstack 0
 13416                           
 13417 ;; *************** function _TMR2_ISR *****************
 13418 ;; Defined at:
 13419 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 13420 ;; Parameters:    Size  Location     Type
 13421 ;;		None
 13422 ;; Auto vars:     Size  Location     Type
 13423 ;;		None
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  1    wreg      void 
 13426 ;; Registers used:
 13427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/0
 13430 ;;		On exit  : 0/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13437 ;;Total ram usage:        0 bytes
 13438 ;; Hardware stack levels used:    1
 13439 ;; Hardware stack levels required when called:   14
 13440 ;; This function calls:
 13441 ;;		_TMR2_CallBack
 13442 ;; This function is called by:
 13443 ;;		_INTERRUPT_InterruptManager
 13444 ;; This function uses a non-reentrant model
 13445 ;;
 13446                           
 13447                           	psect	text65
 13448  0073E2                     __ptext65:
 13449                           	opt callstack 0
 13450  0073E2                     _TMR2_ISR:
 13451                           	opt callstack 3
 13452                           
 13453                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
 13454                           
 13455                           ;incstack = 0
 13456  0073E2  929E               	bcf	3998,1,c	;volatile
 13457                           
 13458                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 50000)
 13459  0073E4  0101               	movlb	1	; () banked
 13460  0073E6  4BE7               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
 13461  0073E8  2BE8               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 13462  0073EA  0E50               	movlw	80
 13463  0073EC  5DE7               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
 13464  0073EE  0EC3               	movlw	195
 13465  0073F0  59E8               	subwfb	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 13466  0073F2  A0D8               	btfss	status,0,c
 13467  0073F4  0012               	return	
 13468                           
 13469                           ; BSR set to: 1
 13470                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
 13471  0073F6  EC34  F03A         	call	_TMR2_CallBack	;wreg free
 13472                           
 13473                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
 13474  0073FA  0E00               	movlw	0
 13475  0073FC  0101               	movlb	1	; () banked
 13476  0073FE  6FE8               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
 13477  007400  0E00               	movlw	0
 13478  007402  6FE7               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
 13479                           
 13480                           ; BSR set to: 1
 13481  007404  0012               	return		;funcret
 13482  007406                     __end_of_TMR2_ISR:
 13483                           	opt callstack 0
 13484                           
 13485 ;; *************** function _TMR2_CallBack *****************
 13486 ;; Defined at:
 13487 ;;		line 137 in file "mcc_generated_files/tmr2.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;		None
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;		None
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  1    wreg      void 
 13494 ;; Registers used:
 13495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13505 ;;Total ram usage:        0 bytes
 13506 ;; Hardware stack levels used:    1
 13507 ;; Hardware stack levels required when called:   13
 13508 ;; This function calls:
 13509 ;;		Absolute function
 13510 ;;		_TMR2_DefaultInterruptHandler
 13511 ;;		_Timer2Interrupt
 13512 ;; This function is called by:
 13513 ;;		_TMR2_ISR
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text66
 13518  007468                     __ptext66:
 13519                           	opt callstack 0
 13520  007468                     _TMR2_CallBack:
 13521                           	opt callstack 3
 13522                           
 13523                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
 13524                           
 13525                           ; BSR set to: 1
 13526                           ;incstack = 0
 13527  007468  0101               	movlb	1	; () banked
 13528  00746A  51E9               	movf	_TMR2_InterruptHandler& (0+255),w,b
 13529  00746C  11EA               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 13530  00746E  B4D8               	btfsc	status,2,c
 13531  007470  0012               	return	
 13532                           
 13533                           ; BSR set to: 1
 13534                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
 13535  007472  D801               	call	i2u1218_48
 13536  007474  0012               	return	
 13537  007476                     i2u1218_48:
 13538  007476  0005               	push	
 13539  007478  6EFA               	movwf	pclath,c
 13540  00747A  51E9               	movf	_TMR2_InterruptHandler& (0+255),w,b
 13541  00747C  6EFD               	movwf	tosl,c
 13542  00747E  51EA               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 13543  007480  6EFE               	movwf	tosh,c
 13544  007482  6AFF               	clrf	tosu,c
 13545  007484  50FA               	movf	pclath,w,c
 13546  007486  0012               	return		;indir
 13547  007488                     __end_of_TMR2_CallBack:
 13548                           	opt callstack 0
 13549                           
 13550 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 13551 ;; Defined at:
 13552 ;;		line 151 in file "mcc_generated_files/tmr2.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;		None
 13555 ;; Auto vars:     Size  Location     Type
 13556 ;;		None
 13557 ;; Return value:  Size  Location     Type
 13558 ;;                  1    wreg      void 
 13559 ;; Registers used:
 13560 ;;		None
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13570 ;;Total ram usage:        0 bytes
 13571 ;; Hardware stack levels used:    1
 13572 ;; This function calls:
 13573 ;;		Nothing
 13574 ;; This function is called by:
 13575 ;;		_TMR2_Initialize
 13576 ;;		_TMR2_CallBack
 13577 ;; This function uses a non-reentrant model
 13578 ;;
 13579                           
 13580                           	psect	text67
 13581  007572                     __ptext67:
 13582                           	opt callstack 0
 13583  007572                     _TMR2_DefaultInterruptHandler:
 13584                           	opt callstack 15
 13585                           
 13586                           ;incstack = 0
 13587  007572  0012               	return		;funcret
 13588  007574                     __end_of_TMR2_DefaultInterruptHandler:
 13589                           	opt callstack 0
 13590                           
 13591 ;; *************** function _Timer2Interrupt *****************
 13592 ;; Defined at:
 13593 ;;		line 145 in file "main.c"
 13594 ;; Parameters:    Size  Location     Type
 13595 ;;		None
 13596 ;; Auto vars:     Size  Location     Type
 13597 ;;		None
 13598 ;; Return value:  Size  Location     Type
 13599 ;;                  1    wreg      void 
 13600 ;; Registers used:
 13601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13602 ;; Tracked objects:
 13603 ;;		On entry : 0/0
 13604 ;;		On exit  : 0/0
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13611 ;;Total ram usage:        0 bytes
 13612 ;; Hardware stack levels used:    1
 13613 ;; Hardware stack levels required when called:   12
 13614 ;; This function calls:
 13615 ;;		_LogData
 13616 ;;		_VerifyLogging
 13617 ;; This function is called by:
 13618 ;;		_main
 13619 ;;		_TMR2_CallBack
 13620 ;; This function uses a non-reentrant model
 13621 ;;
 13622                           
 13623                           	psect	text68
 13624  0074EA                     __ptext68:
 13625                           	opt callstack 0
 13626  0074EA                     _Timer2Interrupt:
 13627                           	opt callstack 3
 13628                           
 13629                           ;main.c: 146:     if (reading == 0) {
 13630                           
 13631                           ;incstack = 0
 13632  0074EA  0100               	movlb	0	; () banked
 13633  0074EC  51FD               	movf	_reading& (0+255),w,b
 13634  0074EE  A4D8               	btfss	status,2,c
 13635  0074F0  0012               	return	
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;main.c: 147:         LogData();
 13639  0074F2  EC6F  F023         	call	_LogData	;wreg free
 13640                           
 13641                           ;main.c: 148:         VerifyLogging();
 13642  0074F6  EC68  F035         	call	_VerifyLogging	;wreg free
 13643  0074FA  0012               	return		;funcret
 13644  0074FC                     __end_of_Timer2Interrupt:
 13645                           	opt callstack 0
 13646                           
 13647 ;; *************** function _VerifyLogging *****************
 13648 ;; Defined at:
 13649 ;;		line 434 in file "main.c"
 13650 ;; Parameters:    Size  Location     Type
 13651 ;;		None
 13652 ;; Auto vars:     Size  Location     Type
 13653 ;;  output          4   98[BANK0 ] unsigned char [4]
 13654 ;;  location        2   96[BANK0 ] unsigned char [2]
 13655 ;; Return value:  Size  Location     Type
 13656 ;;                  1    wreg      _Bool 
 13657 ;; Registers used:
 13658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13659 ;; Tracked objects:
 13660 ;;		On entry : 0/0
 13661 ;;		On exit  : 0/0
 13662 ;;		Unchanged: 0/0
 13663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13665 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13667 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13668 ;;Total ram usage:        7 bytes
 13669 ;; Hardware stack levels used:    1
 13670 ;; Hardware stack levels required when called:   10
 13671 ;; This function calls:
 13672 ;;		i2_I2cReadSerial
 13673 ;;		i2_I2cWriteSerial
 13674 ;;		i2_printf
 13675 ;; This function is called by:
 13676 ;;		_Timer2Interrupt
 13677 ;; This function uses a non-reentrant model
 13678 ;;
 13679                           
 13680                           	psect	text69
 13681  006AD0                     __ptext69:
 13682                           	opt callstack 0
 13683  006AD0                     _VerifyLogging:
 13684                           	opt callstack 4
 13685                           
 13686                           ;main.c: 435:     uint8_t location[] = {0x00, 0x00};
 13687                           
 13688                           ;incstack = 0
 13689  006AD0  C262  F0C0         	movff	VerifyLogging@F6254,VerifyLogging@location
 13690  006AD4  C263  F0C1         	movff	VerifyLogging@F6254+1,VerifyLogging@location+1
 13691                           
 13692                           ;main.c: 436:     uint8_t output[4];;main.c: 438:     _delay((unsigned long)((5)*(640000
      +                          00/4000.0)));
 13693  006AD8  0E68               	movlw	104
 13694  006ADA  6E5E               	movwf	??_VerifyLogging& (0+255),c
 13695  006ADC  0EE4               	movlw	228
 13696  006ADE                     i2u1250_47:
 13697  006ADE  2EE8               	decfsz	wreg,f,c
 13698  006AE0  D7FE               	bra	i2u1250_47
 13699  006AE2  2E5E               	decfsz	??_VerifyLogging& (0+255),f,c
 13700  006AE4  D7FC               	bra	i2u1250_47
 13701  006AE6  D000               	nop2	
 13702                           
 13703                           ;main.c: 439:     I2cWriteSerial(eepromAddress, location, 2);
 13704  006AE8  0EC0               	movlw	low VerifyLogging@location
 13705  006AEA  0100               	movlb	0	; () banked
 13706  006AEC  6FB8               	movwf	i2I2cWriteSerial@writeData& (0+255),b
 13707  006AEE  0E00               	movlw	high VerifyLogging@location
 13708  006AF0  6FB9               	movwf	(i2I2cWriteSerial@writeData+1)& (0+255),b
 13709  006AF2  0E02               	movlw	2
 13710  006AF4  6FBA               	movwf	i2I2cWriteSerial@length& (0+255),b
 13711  006AF6  51FE               	movf	_eepromAddress& (0+255),w,b
 13712  006AF8  EC56  F033         	call	i2_I2cWriteSerial
 13713                           
 13714                           ;main.c: 440:     _delay((unsigned long)((5)*(64000000/4000.0)));
 13715  006AFC  0E68               	movlw	104
 13716  006AFE  6E5E               	movwf	??_VerifyLogging& (0+255),c
 13717  006B00  0EE4               	movlw	228
 13718  006B02                     i2u1251_47:
 13719  006B02  2EE8               	decfsz	wreg,f,c
 13720  006B04  D7FE               	bra	i2u1251_47
 13721  006B06  2E5E               	decfsz	??_VerifyLogging& (0+255),f,c
 13722  006B08  D7FC               	bra	i2u1251_47
 13723  006B0A  D000               	nop2	
 13724                           
 13725                           ;main.c: 441:     I2cReadSerial(eepromAddress, output, 4);
 13726  006B0C  0EC2               	movlw	low VerifyLogging@output
 13727  006B0E  6E01               	movwf	i2I2cReadSerial@readData,c
 13728  006B10  0E00               	movlw	high VerifyLogging@output
 13729  006B12  6E02               	movwf	i2I2cReadSerial@readData+1,c
 13730  006B14  0E04               	movlw	4
 13731  006B16  6E03               	movwf	i2I2cReadSerial@length,c
 13732  006B18  0100               	movlb	0	; () banked
 13733  006B1A  51FE               	movf	_eepromAddress& (0+255),w,b
 13734  006B1C  ECC0  F032         	call	i2_I2cReadSerial
 13735                           
 13736                           ;main.c: 442:     if (output[0] != output[2] || output[1] != output[3]) {
 13737  006B20  0100               	movlb	0	; () banked
 13738  006B22  51C2               	movf	VerifyLogging@output& (0+255),w,b
 13739  006B24  19C4               	xorwf	(VerifyLogging@output+2)& (0+255),w,b
 13740  006B26  A4D8               	btfss	status,2,c
 13741  006B28  D004               	goto	i2u1179_40
 13742                           
 13743                           ; BSR set to: 0
 13744  006B2A  51C5               	movf	(VerifyLogging@output+3)& (0+255),w,b
 13745  006B2C  19C3               	xorwf	(VerifyLogging@output+1)& (0+255),w,b
 13746  006B2E  B4D8               	btfsc	status,2,c
 13747  006B30  0012               	return	
 13748  006B32                     i2u1179_40:
 13749                           
 13750                           ; BSR set to: 0
 13751                           ;main.c: 443:         printf("last Successful write does not match last attempted write 
      +                          \r\n");
 13752  006B32  0E01               	movlw	low STR_12
 13753  006B34  6FAC               	movwf	i2printf@fmt& (0+255),b
 13754  006B36  0E10               	movlw	high STR_12
 13755  006B38  6FAD               	movwf	(i2printf@fmt+1)& (0+255),b
 13756  006B3A  ECA6  F039         	call	i2_printf	;wreg free
 13757  006B3E  0012               	return		;funcret
 13758  006B40                     __end_of_VerifyLogging:
 13759                           	opt callstack 0
 13760                           
 13761 ;; *************** function _LogData *****************
 13762 ;; Defined at:
 13763 ;;		line 359 in file "main.c"
 13764 ;; Parameters:    Size  Location     Type
 13765 ;;		None
 13766 ;; Auto vars:     Size  Location     Type
 13767 ;;  writeArray      6  124[BANK0 ] unsigned char [6]
 13768 ;;  lastSuccesfu    4  134[BANK0 ] unsigned char [4]
 13769 ;;  writeAttempt    4  130[BANK0 ] unsigned char [4]
 13770 ;;  humidity        4  120[BANK0 ] float 
 13771 ;;  temperature     4  116[BANK0 ] float 
 13772 ;;  location        2  142[BANK0 ] unsigned char [2]
 13773 ;;  humidityArra    2  140[BANK0 ] unsigned char [2]
 13774 ;;  temperatureA    2  138[BANK0 ] unsigned char [2]
 13775 ;; Return value:  Size  Location     Type
 13776 ;;                  1    wreg      void 
 13777 ;; Registers used:
 13778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13779 ;; Tracked objects:
 13780 ;;		On entry : 0/0
 13781 ;;		On exit  : 0/0
 13782 ;;		Unchanged: 0/0
 13783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13785 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13787 ;;      Totals:         1      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13788 ;;Total ram usage:       29 bytes
 13789 ;; Hardware stack levels used:    1
 13790 ;; Hardware stack levels required when called:   11
 13791 ;; This function calls:
 13792 ;;		_ConvertFloatToByteArray
 13793 ;;		i2_I2cReadSerial
 13794 ;;		i2_I2cWriteSerial
 13795 ;;		i2_ReadHumidity
 13796 ;;		i2_ReadTemperature
 13797 ;;		i2_printf
 13798 ;; This function is called by:
 13799 ;;		_Timer2Interrupt
 13800 ;; This function uses a non-reentrant model
 13801 ;;
 13802                           
 13803                           	psect	text70
 13804  0046DE                     __ptext70:
 13805                           	opt callstack 0
 13806  0046DE                     _LogData:
 13807                           	opt callstack 3
 13808                           
 13809                           ;main.c: 362:     uint8_t location[2];;main.c: 363:     _delay((unsigned long)((5)*(6400
      +                          0000/4000.0)));
 13810                           
 13811                           ;incstack = 0
 13812  0046DE  0E68               	movlw	104
 13813  0046E0  6E5E               	movwf	??_LogData& (0+255),c
 13814  0046E2  0EE4               	movlw	228
 13815  0046E4                     i2u1252_47:
 13816  0046E4  2EE8               	decfsz	wreg,f,c
 13817  0046E6  D7FE               	bra	i2u1252_47
 13818  0046E8  2E5E               	decfsz	??_LogData& (0+255),f,c
 13819  0046EA  D7FC               	bra	i2u1252_47
 13820  0046EC  D000               	nop2	
 13821                           
 13822                           ;main.c: 364:     I2cWriteSerial(eepromAddress,firstLocation,2);
 13823  0046EE  0EB8               	movlw	low _firstLocation
 13824  0046F0  0100               	movlb	0	; () banked
 13825  0046F2  6FB8               	movwf	i2I2cWriteSerial@writeData& (0+255),b
 13826  0046F4  0E02               	movlw	high _firstLocation
 13827  0046F6  6FB9               	movwf	(i2I2cWriteSerial@writeData+1)& (0+255),b
 13828  0046F8  0E02               	movlw	2
 13829  0046FA  6FBA               	movwf	i2I2cWriteSerial@length& (0+255),b
 13830  0046FC  51FE               	movf	_eepromAddress& (0+255),w,b
 13831  0046FE  EC56  F033         	call	i2_I2cWriteSerial
 13832                           
 13833                           ;main.c: 365:     _delay((unsigned long)((5)*(64000000/4000.0)));
 13834  004702  0E68               	movlw	104
 13835  004704  6E5E               	movwf	??_LogData& (0+255),c
 13836  004706  0EE4               	movlw	228
 13837  004708                     i2u1253_47:
 13838  004708  2EE8               	decfsz	wreg,f,c
 13839  00470A  D7FE               	bra	i2u1253_47
 13840  00470C  2E5E               	decfsz	??_LogData& (0+255),f,c
 13841  00470E  D7FC               	bra	i2u1253_47
 13842  004710  D000               	nop2	
 13843                           
 13844                           ;main.c: 366:     I2cReadSerial(eepromAddress, location, 2);
 13845  004712  0EEE               	movlw	low LogData@location
 13846  004714  6E01               	movwf	i2I2cReadSerial@readData,c
 13847  004716  0E00               	movlw	high LogData@location
 13848  004718  6E02               	movwf	i2I2cReadSerial@readData+1,c
 13849  00471A  0E02               	movlw	2
 13850  00471C  6E03               	movwf	i2I2cReadSerial@length,c
 13851  00471E  0100               	movlb	0	; () banked
 13852  004720  51FE               	movf	_eepromAddress& (0+255),w,b
 13853  004722  ECC0  F032         	call	i2_I2cReadSerial
 13854                           
 13855                           ;main.c: 368:     location[1] += 4;
 13856  004726  0E04               	movlw	4
 13857  004728  0100               	movlb	0	; () banked
 13858  00472A  27EF               	addwf	(LogData@location+1)& (0+255),f,b
 13859                           
 13860                           ; BSR set to: 0
 13861                           ;main.c: 369:     if (location[1] == 0) {
 13862  00472C  51EF               	movf	(LogData@location+1)& (0+255),w,b
 13863  00472E  A4D8               	btfss	status,2,c
 13864  004730  D00B               	goto	i2l531
 13865                           
 13866                           ; BSR set to: 0
 13867                           ;main.c: 370:         location[0]++;
 13868  004732  2BEE               	incf	LogData@location& (0+255),f,b
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;main.c: 371:         if (location[0] == 0) {
 13872  004734  51EE               	movf	LogData@location& (0+255),w,b
 13873  004736  A4D8               	btfss	status,2,c
 13874  004738  D007               	goto	i2l531
 13875                           
 13876                           ; BSR set to: 0
 13877                           ;main.c: 373:             printf("\n\r data logger is full \n\r");
 13878  00473A  0EA1               	movlw	low STR_11
 13879  00473C  6FAC               	movwf	i2printf@fmt& (0+255),b
 13880  00473E  0E10               	movlw	high STR_11
 13881  004740  6FAD               	movwf	(i2printf@fmt+1)& (0+255),b
 13882  004742  ECA6  F039         	call	i2_printf	;wreg free
 13883  004746  0012               	return	
 13884  004748                     i2l531:
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;main.c: 378:     uint8_t writeAttemptLocation[4] = {
 13888  004748  C25E  F0E2         	movff	LogData@F6234,LogData@writeAttemptLocation
 13889  00474C  C25F  F0E3         	movff	LogData@F6234+1,LogData@writeAttemptLocation+1
 13890  004750  C260  F0E4         	movff	LogData@F6234+2,LogData@writeAttemptLocation+2
 13891  004754  C261  F0E5         	movff	LogData@F6234+3,LogData@writeAttemptLocation+3
 13892                           
 13893                           ; BSR set to: 0
 13894  004758  0E00               	movlw	0
 13895  00475A  6FE2               	movwf	LogData@writeAttemptLocation& (0+255),b
 13896  00475C  0E00               	movlw	0
 13897  00475E  6FE3               	movwf	(LogData@writeAttemptLocation+1)& (0+255),b
 13898                           
 13899                           ; BSR set to: 0
 13900  004760  C0EE  F0E4         	movff	LogData@location,LogData@writeAttemptLocation+2
 13901                           
 13902                           ; BSR set to: 0
 13903  004764  C0EF  F0E5         	movff	LogData@location+1,LogData@writeAttemptLocation+3
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;main.c: 381:     _delay((unsigned long)((5)*(64000000/4000.0)));
 13907  004768  0E68               	movlw	104
 13908  00476A  6E5E               	movwf	??_LogData& (0+255),c
 13909  00476C  0EE4               	movlw	228
 13910  00476E                     i2u1254_47:
 13911  00476E  2EE8               	decfsz	wreg,f,c
 13912  004770  D7FE               	bra	i2u1254_47
 13913  004772  2E5E               	decfsz	??_LogData& (0+255),f,c
 13914  004774  D7FC               	bra	i2u1254_47
 13915  004776  D000               	nop2	
 13916                           
 13917                           ;main.c: 384:     I2cWriteSerial(eepromAddress, writeAttemptLocation, 4);
 13918  004778  0EE2               	movlw	low LogData@writeAttemptLocation
 13919  00477A  0100               	movlb	0	; () banked
 13920  00477C  6FB8               	movwf	i2I2cWriteSerial@writeData& (0+255),b
 13921  00477E  0E00               	movlw	high LogData@writeAttemptLocation
 13922  004780  6FB9               	movwf	(i2I2cWriteSerial@writeData+1)& (0+255),b
 13923  004782  0E04               	movlw	4
 13924  004784  6FBA               	movwf	i2I2cWriteSerial@length& (0+255),b
 13925  004786  51FE               	movf	_eepromAddress& (0+255),w,b
 13926  004788  EC56  F033         	call	i2_I2cWriteSerial
 13927                           
 13928                           ;main.c: 387:     float temperature = ReadTemperature();
 13929  00478C  ECAD  F02B         	call	i2_ReadTemperature	;wreg free
 13930  004790  C0C0  F0D4         	movff	?i2_ReadTemperature,LogData@temperature
 13931  004794  C0C1  F0D5         	movff	?i2_ReadTemperature+1,LogData@temperature+1
 13932  004798  C0C2  F0D6         	movff	?i2_ReadTemperature+2,LogData@temperature+2
 13933  00479C  C0C3  F0D7         	movff	?i2_ReadTemperature+3,LogData@temperature+3
 13934                           
 13935                           ;main.c: 388:     uint8_t temperatureArray[2];;main.c: 389:     ConvertFloatToByteArray(
      +                          temperature, temperatureArray);
 13936  0047A0  C0D4  F03E         	movff	LogData@temperature,ConvertFloatToByteArray@input
 13937  0047A4  C0D5  F03F         	movff	LogData@temperature+1,ConvertFloatToByteArray@input+1
 13938  0047A8  C0D6  F040         	movff	LogData@temperature+2,ConvertFloatToByteArray@input+2
 13939  0047AC  C0D7  F041         	movff	LogData@temperature+3,ConvertFloatToByteArray@input+3
 13940  0047B0  0EEA               	movlw	low LogData@temperatureArray
 13941  0047B2  6E42               	movwf	ConvertFloatToByteArray@output,c
 13942  0047B4  0E00               	movlw	high LogData@temperatureArray
 13943  0047B6  6E43               	movwf	ConvertFloatToByteArray@output+1,c
 13944  0047B8  EC27  F02F         	call	_ConvertFloatToByteArray	;wreg free
 13945                           
 13946                           ;main.c: 393:     float humidity = ReadHumidity();
 13947  0047BC  EC3D  F02C         	call	i2_ReadHumidity	;wreg free
 13948  0047C0  C0C0  F0D8         	movff	?i2_ReadHumidity,LogData@humidity
 13949  0047C4  C0C1  F0D9         	movff	?i2_ReadHumidity+1,LogData@humidity+1
 13950  0047C8  C0C2  F0DA         	movff	?i2_ReadHumidity+2,LogData@humidity+2
 13951  0047CC  C0C3  F0DB         	movff	?i2_ReadHumidity+3,LogData@humidity+3
 13952                           
 13953                           ;main.c: 394:     uint8_t humidityArray[2];;main.c: 395:     ConvertFloatToByteArray(hum
      +                          idity, humidityArray);
 13954  0047D0  C0D8  F03E         	movff	LogData@humidity,ConvertFloatToByteArray@input
 13955  0047D4  C0D9  F03F         	movff	LogData@humidity+1,ConvertFloatToByteArray@input+1
 13956  0047D8  C0DA  F040         	movff	LogData@humidity+2,ConvertFloatToByteArray@input+2
 13957  0047DC  C0DB  F041         	movff	LogData@humidity+3,ConvertFloatToByteArray@input+3
 13958  0047E0  0EEC               	movlw	low LogData@humidityArray
 13959  0047E2  6E42               	movwf	ConvertFloatToByteArray@output,c
 13960  0047E4  0E00               	movlw	high LogData@humidityArray
 13961  0047E6  6E43               	movwf	ConvertFloatToByteArray@output+1,c
 13962  0047E8  EC27  F02F         	call	_ConvertFloatToByteArray	;wreg free
 13963                           
 13964                           ;main.c: 398:     uint8_t writeArray[] = {
 13965  0047EC  EE22  F050         	lfsr	2,LogData@F6240
 13966  0047F0  EE10  F0DC         	lfsr	1,LogData@writeArray
 13967  0047F4  0E05               	movlw	5
 13968  0047F6                     i2u1177_41:
 13969  0047F6  CFDB FFE3          	movff	plusw2,plusw1
 13970  0047FA  06E8               	decf	wreg,f,c
 13971  0047FC  E2FC               	bc	i2u1177_41
 13972  0047FE  C0EE  F0DC         	movff	LogData@location,LogData@writeArray
 13973  004802  C0EF  F0DD         	movff	LogData@location+1,LogData@writeArray+1
 13974  004806  C0EA  F0DE         	movff	LogData@temperatureArray,LogData@writeArray+2
 13975  00480A  C0EB  F0DF         	movff	LogData@temperatureArray+1,LogData@writeArray+3
 13976  00480E  C0EC  F0E0         	movff	LogData@humidityArray,LogData@writeArray+4
 13977  004812  C0ED  F0E1         	movff	LogData@humidityArray+1,LogData@writeArray+5
 13978                           
 13979                           ;main.c: 404:     _delay((unsigned long)((5)*(64000000/4000.0)));
 13980  004816  0E68               	movlw	104
 13981  004818  6E5E               	movwf	??_LogData& (0+255),c
 13982  00481A  0EE4               	movlw	228
 13983  00481C                     i2u1255_47:
 13984  00481C  2EE8               	decfsz	wreg,f,c
 13985  00481E  D7FE               	bra	i2u1255_47
 13986  004820  2E5E               	decfsz	??_LogData& (0+255),f,c
 13987  004822  D7FC               	bra	i2u1255_47
 13988  004824  D000               	nop2	
 13989                           
 13990                           ;main.c: 405:     I2cWriteSerial(eepromAddress, writeArray, 6);
 13991  004826  0EDC               	movlw	low LogData@writeArray
 13992  004828  0100               	movlb	0	; () banked
 13993  00482A  6FB8               	movwf	i2I2cWriteSerial@writeData& (0+255),b
 13994  00482C  0E00               	movlw	high LogData@writeArray
 13995  00482E  6FB9               	movwf	(i2I2cWriteSerial@writeData+1)& (0+255),b
 13996  004830  0E06               	movlw	6
 13997  004832  6FBA               	movwf	i2I2cWriteSerial@length& (0+255),b
 13998  004834  51FE               	movf	_eepromAddress& (0+255),w,b
 13999  004836  EC56  F033         	call	i2_I2cWriteSerial
 14000                           
 14001                           ;main.c: 407:     uint8_t lastSuccesfulWriteLocation[4] = {
 14002  00483A  C25A  F0E6         	movff	LogData@F6242,LogData@lastSuccesfulWriteLocation
 14003  00483E  C25B  F0E7         	movff	LogData@F6242+1,LogData@lastSuccesfulWriteLocation+1
 14004  004842  C25C  F0E8         	movff	LogData@F6242+2,LogData@lastSuccesfulWriteLocation+2
 14005  004846  C25D  F0E9         	movff	LogData@F6242+3,LogData@lastSuccesfulWriteLocation+3
 14006  00484A  0E00               	movlw	0
 14007  00484C  0100               	movlb	0	; () banked
 14008  00484E  6FE6               	movwf	LogData@lastSuccesfulWriteLocation& (0+255),b
 14009                           
 14010                           ; BSR set to: 0
 14011  004850  0E02               	movlw	2
 14012  004852  6FE7               	movwf	(LogData@lastSuccesfulWriteLocation+1)& (0+255),b
 14013                           
 14014                           ; BSR set to: 0
 14015  004854  C0EE  F0E8         	movff	LogData@location,LogData@lastSuccesfulWriteLocation+2
 14016                           
 14017                           ; BSR set to: 0
 14018  004858  C0EF  F0E9         	movff	LogData@location+1,LogData@lastSuccesfulWriteLocation+3
 14019                           
 14020                           ; BSR set to: 0
 14021                           ;main.c: 411:     _delay((unsigned long)((5)*(64000000/4000.0)));
 14022  00485C  0E68               	movlw	104
 14023  00485E  6E5E               	movwf	??_LogData& (0+255),c
 14024  004860  0EE4               	movlw	228
 14025  004862                     i2u1256_47:
 14026  004862  2EE8               	decfsz	wreg,f,c
 14027  004864  D7FE               	bra	i2u1256_47
 14028  004866  2E5E               	decfsz	??_LogData& (0+255),f,c
 14029  004868  D7FC               	bra	i2u1256_47
 14030  00486A  D000               	nop2	
 14031                           
 14032                           ;main.c: 412:     I2cWriteSerial(eepromAddress, lastSuccesfulWriteLocation, 4);
 14033  00486C  0EE6               	movlw	low LogData@lastSuccesfulWriteLocation
 14034  00486E  0100               	movlb	0	; () banked
 14035  004870  6FB8               	movwf	i2I2cWriteSerial@writeData& (0+255),b
 14036  004872  0E00               	movlw	high LogData@lastSuccesfulWriteLocation
 14037  004874  6FB9               	movwf	(i2I2cWriteSerial@writeData+1)& (0+255),b
 14038  004876  0E04               	movlw	4
 14039  004878  6FBA               	movwf	i2I2cWriteSerial@length& (0+255),b
 14040  00487A  51FE               	movf	_eepromAddress& (0+255),w,b
 14041  00487C  EC56  F033         	call	i2_I2cWriteSerial
 14042  004880  0012               	return		;funcret
 14043  004882                     __end_of_LogData:
 14044                           	opt callstack 0
 14045                           
 14046 ;; *************** function i2_ReadTemperature *****************
 14047 ;; Defined at:
 14048 ;;		line 293 in file "main.c"
 14049 ;; Parameters:    Size  Location     Type
 14050 ;;		None
 14051 ;; Auto vars:     Size  Location     Type
 14052 ;;  ReadTemperat    4  112[BANK0 ] float 
 14053 ;;  ReadTemperat    4  108[BANK0 ] unsigned long 
 14054 ;;  ReadTemperat    4  102[BANK0 ] float 
 14055 ;;  ReadTemperat    2  106[BANK0 ] unsigned char [2]
 14056 ;; Return value:  Size  Location     Type
 14057 ;;                  4   96[BANK0 ] float 
 14058 ;; Registers used:
 14059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14060 ;; Tracked objects:
 14061 ;;		On entry : 0/0
 14062 ;;		On exit  : 0/0
 14063 ;;		Unchanged: 0/0
 14064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14066 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14067 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14068 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14069 ;;Total ram usage:       20 bytes
 14070 ;; Hardware stack levels used:    1
 14071 ;; Hardware stack levels required when called:   10
 14072 ;; This function calls:
 14073 ;;		i2_I2cReadSerial
 14074 ;;		i2_I2cWriteSerial
 14075 ;;		i2___fladd
 14076 ;;		i2___fldiv
 14077 ;;		i2___flmul
 14078 ;;		i2___xxtofl
 14079 ;; This function is called by:
 14080 ;;		_LogData
 14081 ;; This function uses a non-reentrant model
 14082 ;;
 14083                           
 14084                           	psect	text71
 14085  00575A                     __ptext71:
 14086                           	opt callstack 0
 14087  00575A                     i2_ReadTemperature:
 14088                           	opt callstack 3
 14089                           
 14090                           ;main.c: 295:     uint8_t result[2];;main.c: 297:     I2cWriteSerial(humidityTherometerA
      +                          ddress, readTemprature, 1);
 14091                           
 14092                           ;incstack = 0
 14093  00575A  0EFF               	movlw	low _readTemprature
 14094  00575C  0100               	movlb	0	; () banked
 14095  00575E  6FB8               	movwf	i2I2cWriteSerial@writeData& (0+255),b
 14096  005760  0E01               	movlw	high _readTemprature
 14097  005762  6FB9               	movwf	(i2I2cWriteSerial@writeData+1)& (0+255),b
 14098  005764  0E01               	movlw	1
 14099  005766  6FBA               	movwf	i2I2cWriteSerial@length& (0+255),b
 14100  005768  0101               	movlb	1	; () banked
 14101  00576A  51FC               	movf	_humidityTherometerAddress& (0+255),w,b
 14102  00576C  EC56  F033         	call	i2_I2cWriteSerial
 14103                           
 14104                           ;main.c: 298:     I2cReadSerial(humidityTherometerAddress, result, 2);
 14105  005770  0ECA               	movlw	low i2ReadTemperature@result
 14106  005772  6E01               	movwf	i2I2cReadSerial@readData,c
 14107  005774  0E00               	movlw	high i2ReadTemperature@result
 14108  005776  6E02               	movwf	i2I2cReadSerial@readData+1,c
 14109  005778  0E02               	movlw	2
 14110  00577A  6E03               	movwf	i2I2cReadSerial@length,c
 14111  00577C  0101               	movlb	1	; () banked
 14112  00577E  51FC               	movf	_humidityTherometerAddress& (0+255),w,b
 14113  005780  ECC0  F032         	call	i2_I2cReadSerial
 14114                           
 14115                           ;main.c: 300:     uint32_t resultWord = result[0] << 8;
 14116  005784  0100               	movlb	0	; () banked
 14117  005786  51CA               	movf	i2ReadTemperature@result& (0+255),w,b
 14118  005788  6FC5               	movwf	(??i2_ReadTemperature+1)& (0+255),b
 14119  00578A  6BC4               	clrf	??i2_ReadTemperature& (0+255),b
 14120  00578C  C0C4  F0CC         	movff	??i2_ReadTemperature,i2ReadTemperature@resultWord
 14121  005790  C0C5  F0CD         	movff	??i2_ReadTemperature+1,i2ReadTemperature@resultWord+1
 14122  005794  0E00               	movlw	0
 14123  005796  BFCD               	btfsc	(i2ReadTemperature@resultWord+1)& (0+255),7,b
 14124  005798  0EFF               	movlw	-1
 14125  00579A  6FCE               	movwf	(i2ReadTemperature@resultWord+2)& (0+255),b
 14126  00579C  6FCF               	movwf	(i2ReadTemperature@resultWord+3)& (0+255),b
 14127                           
 14128                           ; BSR set to: 0
 14129                           ;main.c: 301:     resultWord = resultWord + result[1];
 14130  00579E  51CB               	movf	(i2ReadTemperature@result+1)& (0+255),w,b
 14131  0057A0  25CC               	addwf	i2ReadTemperature@resultWord& (0+255),w,b
 14132  0057A2  6FCC               	movwf	i2ReadTemperature@resultWord& (0+255),b
 14133  0057A4  0E00               	movlw	0
 14134  0057A6  21CD               	addwfc	(i2ReadTemperature@resultWord+1)& (0+255),w,b
 14135  0057A8  6FCD               	movwf	(i2ReadTemperature@resultWord+1)& (0+255),b
 14136  0057AA  0E00               	movlw	0
 14137  0057AC  21CE               	addwfc	(i2ReadTemperature@resultWord+2)& (0+255),w,b
 14138  0057AE  6FCE               	movwf	(i2ReadTemperature@resultWord+2)& (0+255),b
 14139  0057B0  0E00               	movlw	0
 14140  0057B2  21CF               	addwfc	(i2ReadTemperature@resultWord+3)& (0+255),w,b
 14141  0057B4  6FCF               	movwf	(i2ReadTemperature@resultWord+3)& (0+255),b
 14142                           
 14143                           ; BSR set to: 0
 14144                           ;main.c: 304:     float conversion = 175.52 * resultWord;
 14145  0057B6  C0CC  F00D         	movff	i2ReadTemperature@resultWord,i2___xxtofl@val
 14146  0057BA  C0CD  F00E         	movff	i2ReadTemperature@resultWord+1,i2___xxtofl@val+1
 14147  0057BE  C0CE  F00F         	movff	i2ReadTemperature@resultWord+2,i2___xxtofl@val+2
 14148  0057C2  C0CF  F010         	movff	i2ReadTemperature@resultWord+3,i2___xxtofl@val+3
 14149  0057C6  0E00               	movlw	0
 14150  0057C8  EC32  F028         	call	i2___xxtofl
 14151  0057CC  C00D  F01B         	movff	?i2___xxtofl,i2___flmul@b
 14152  0057D0  C00E  F01C         	movff	?i2___xxtofl+1,i2___flmul@b+1
 14153  0057D4  C00F  F01D         	movff	?i2___xxtofl+2,i2___flmul@b+2
 14154  0057D8  C010  F01E         	movff	?i2___xxtofl+3,i2___flmul@b+3
 14155  0057DC  0E1F               	movlw	31
 14156  0057DE  6E1F               	movwf	i2___flmul@a,c
 14157  0057E0  0E85               	movlw	133
 14158  0057E2  6E20               	movwf	i2___flmul@a+1,c
 14159  0057E4  0E2F               	movlw	47
 14160  0057E6  6E21               	movwf	i2___flmul@a+2,c
 14161  0057E8  0E43               	movlw	67
 14162  0057EA  6E22               	movwf	i2___flmul@a+3,c
 14163  0057EC  EC30  F018         	call	i2___flmul	;wreg free
 14164  0057F0  C01B  F0D0         	movff	?i2___flmul,i2ReadTemperature@conversion
 14165  0057F4  C01C  F0D1         	movff	?i2___flmul+1,i2ReadTemperature@conversion+1
 14166  0057F8  C01D  F0D2         	movff	?i2___flmul+2,i2ReadTemperature@conversion+2
 14167  0057FC  C01E  F0D3         	movff	?i2___flmul+3,i2ReadTemperature@conversion+3
 14168                           
 14169                           ;main.c: 305:     conversion = conversion / 65536;
 14170  005800  C0D0  F001         	movff	i2ReadTemperature@conversion,i2___fldiv@b
 14171  005804  C0D1  F002         	movff	i2ReadTemperature@conversion+1,i2___fldiv@b+1
 14172  005808  C0D2  F003         	movff	i2ReadTemperature@conversion+2,i2___fldiv@b+2
 14173  00580C  C0D3  F004         	movff	i2ReadTemperature@conversion+3,i2___fldiv@b+3
 14174  005810  0E00               	movlw	0
 14175  005812  6E05               	movwf	i2___fldiv@a,c
 14176  005814  0E00               	movlw	0
 14177  005816  6E06               	movwf	i2___fldiv@a+1,c
 14178  005818  0E80               	movlw	128
 14179  00581A  6E07               	movwf	i2___fldiv@a+2,c
 14180  00581C  0E47               	movlw	71
 14181  00581E  6E08               	movwf	i2___fldiv@a+3,c
 14182  005820  EC2B  F01E         	call	i2___fldiv	;wreg free
 14183  005824  C001  F0D0         	movff	?i2___fldiv,i2ReadTemperature@conversion
 14184  005828  C002  F0D1         	movff	?i2___fldiv+1,i2ReadTemperature@conversion+1
 14185  00582C  C003  F0D2         	movff	?i2___fldiv+2,i2ReadTemperature@conversion+2
 14186  005830  C004  F0D3         	movff	?i2___fldiv+3,i2ReadTemperature@conversion+3
 14187                           
 14188                           ;main.c: 306:     float temperature = conversion - 46.85;
 14189  005834  C0D0  F001         	movff	i2ReadTemperature@conversion,i2___fladd@b
 14190  005838  C0D1  F002         	movff	i2ReadTemperature@conversion+1,i2___fladd@b+1
 14191  00583C  C0D2  F003         	movff	i2ReadTemperature@conversion+2,i2___fladd@b+2
 14192  005840  C0D3  F004         	movff	i2ReadTemperature@conversion+3,i2___fladd@b+3
 14193  005844  0E66               	movlw	102
 14194  005846  6E05               	movwf	i2___fladd@a,c
 14195  005848  0E66               	movlw	102
 14196  00584A  6E06               	movwf	i2___fladd@a+1,c
 14197  00584C  0E3B               	movlw	59
 14198  00584E  6E07               	movwf	i2___fladd@a+2,c
 14199  005850  0EC2               	movlw	194
 14200  005852  6E08               	movwf	i2___fladd@a+3,c
 14201  005854  EC60  F01B         	call	i2___fladd	;wreg free
 14202  005858  C001  F0C6         	movff	?i2___fladd,i2ReadTemperature@temperature
 14203  00585C  C002  F0C7         	movff	?i2___fladd+1,i2ReadTemperature@temperature+1
 14204  005860  C003  F0C8         	movff	?i2___fladd+2,i2ReadTemperature@temperature+2
 14205  005864  C004  F0C9         	movff	?i2___fladd+3,i2ReadTemperature@temperature+3
 14206                           
 14207                           ;main.c: 308:     return temperature;
 14208  005868  C0C6  F0C0         	movff	i2ReadTemperature@temperature,?i2_ReadTemperature
 14209  00586C  C0C7  F0C1         	movff	i2ReadTemperature@temperature+1,?i2_ReadTemperature+1
 14210  005870  C0C8  F0C2         	movff	i2ReadTemperature@temperature+2,?i2_ReadTemperature+2
 14211  005874  C0C9  F0C3         	movff	i2ReadTemperature@temperature+3,?i2_ReadTemperature+3
 14212  005878  0012               	return		;funcret
 14213  00587A                     __end_ofi2_ReadTemperature:
 14214                           	opt callstack 0
 14215                           
 14216 ;; *************** function i2_ReadHumidity *****************
 14217 ;; Defined at:
 14218 ;;		line 311 in file "main.c"
 14219 ;; Parameters:    Size  Location     Type
 14220 ;;		None
 14221 ;; Auto vars:     Size  Location     Type
 14222 ;;  ReadHumidity    4  112[BANK0 ] float 
 14223 ;;  ReadHumidity    4  108[BANK0 ] unsigned long 
 14224 ;;  ReadHumidity    4  102[BANK0 ] float 
 14225 ;;  ReadHumidity    2  106[BANK0 ] unsigned char [2]
 14226 ;; Return value:  Size  Location     Type
 14227 ;;                  4   96[BANK0 ] float 
 14228 ;; Registers used:
 14229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14230 ;; Tracked objects:
 14231 ;;		On entry : 0/0
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14235 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14236 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14237 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14238 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14239 ;;Total ram usage:       20 bytes
 14240 ;; Hardware stack levels used:    1
 14241 ;; Hardware stack levels required when called:   10
 14242 ;; This function calls:
 14243 ;;		i2_I2cReadSerial
 14244 ;;		i2_I2cWriteSerial
 14245 ;;		i2___fladd
 14246 ;;		i2___fldiv
 14247 ;;		i2___lmul
 14248 ;;		i2___xxtofl
 14249 ;; This function is called by:
 14250 ;;		_LogData
 14251 ;; This function uses a non-reentrant model
 14252 ;;
 14253                           
 14254                           	psect	text72
 14255  00587A                     __ptext72:
 14256                           	opt callstack 0
 14257  00587A                     i2_ReadHumidity:
 14258                           	opt callstack 3
 14259                           
 14260                           ;main.c: 312:     uint8_t result[2];;main.c: 315:     I2cWriteSerial(humidityTherometerA
      +                          ddress, readHumidity, 1);
 14261                           
 14262                           ;incstack = 0
 14263  00587A  0EFE               	movlw	low _readHumidity
 14264  00587C  0100               	movlb	0	; () banked
 14265  00587E  6FB8               	movwf	i2I2cWriteSerial@writeData& (0+255),b
 14266  005880  0E01               	movlw	high _readHumidity
 14267  005882  6FB9               	movwf	(i2I2cWriteSerial@writeData+1)& (0+255),b
 14268  005884  0E01               	movlw	1
 14269  005886  6FBA               	movwf	i2I2cWriteSerial@length& (0+255),b
 14270  005888  0101               	movlb	1	; () banked
 14271  00588A  51FC               	movf	_humidityTherometerAddress& (0+255),w,b
 14272  00588C  EC56  F033         	call	i2_I2cWriteSerial
 14273                           
 14274                           ;main.c: 316:     I2cReadSerial(humidityTherometerAddress, result, 2);
 14275  005890  0ECA               	movlw	low i2ReadHumidity@result
 14276  005892  6E01               	movwf	i2I2cReadSerial@readData,c
 14277  005894  0E00               	movlw	high i2ReadHumidity@result
 14278  005896  6E02               	movwf	i2I2cReadSerial@readData+1,c
 14279  005898  0E02               	movlw	2
 14280  00589A  6E03               	movwf	i2I2cReadSerial@length,c
 14281  00589C  0101               	movlb	1	; () banked
 14282  00589E  51FC               	movf	_humidityTherometerAddress& (0+255),w,b
 14283  0058A0  ECC0  F032         	call	i2_I2cReadSerial
 14284                           
 14285                           ;main.c: 319:     uint32_t resultWord = result[0] << 8;
 14286  0058A4  0100               	movlb	0	; () banked
 14287  0058A6  51CA               	movf	i2ReadHumidity@result& (0+255),w,b
 14288  0058A8  6FC5               	movwf	(??i2_ReadHumidity+1)& (0+255),b
 14289  0058AA  6BC4               	clrf	??i2_ReadHumidity& (0+255),b
 14290  0058AC  C0C4  F0CC         	movff	??i2_ReadHumidity,i2ReadHumidity@resultWord
 14291  0058B0  C0C5  F0CD         	movff	??i2_ReadHumidity+1,i2ReadHumidity@resultWord+1
 14292  0058B4  0E00               	movlw	0
 14293  0058B6  BFCD               	btfsc	(i2ReadHumidity@resultWord+1)& (0+255),7,b
 14294  0058B8  0EFF               	movlw	-1
 14295  0058BA  6FCE               	movwf	(i2ReadHumidity@resultWord+2)& (0+255),b
 14296  0058BC  6FCF               	movwf	(i2ReadHumidity@resultWord+3)& (0+255),b
 14297                           
 14298                           ; BSR set to: 0
 14299                           ;main.c: 320:     resultWord = resultWord + result[1];
 14300  0058BE  51CB               	movf	(i2ReadHumidity@result+1)& (0+255),w,b
 14301  0058C0  25CC               	addwf	i2ReadHumidity@resultWord& (0+255),w,b
 14302  0058C2  6FCC               	movwf	i2ReadHumidity@resultWord& (0+255),b
 14303  0058C4  0E00               	movlw	0
 14304  0058C6  21CD               	addwfc	(i2ReadHumidity@resultWord+1)& (0+255),w,b
 14305  0058C8  6FCD               	movwf	(i2ReadHumidity@resultWord+1)& (0+255),b
 14306  0058CA  0E00               	movlw	0
 14307  0058CC  21CE               	addwfc	(i2ReadHumidity@resultWord+2)& (0+255),w,b
 14308  0058CE  6FCE               	movwf	(i2ReadHumidity@resultWord+2)& (0+255),b
 14309  0058D0  0E00               	movlw	0
 14310  0058D2  21CF               	addwfc	(i2ReadHumidity@resultWord+3)& (0+255),w,b
 14311  0058D4  6FCF               	movwf	(i2ReadHumidity@resultWord+3)& (0+255),b
 14312                           
 14313                           ; BSR set to: 0
 14314                           ;main.c: 323:     float convertion = 125 * resultWord;
 14315  0058D6  C0CC  F001         	movff	i2ReadHumidity@resultWord,i2___lmul@multiplier
 14316  0058DA  C0CD  F002         	movff	i2ReadHumidity@resultWord+1,i2___lmul@multiplier+1
 14317  0058DE  C0CE  F003         	movff	i2ReadHumidity@resultWord+2,i2___lmul@multiplier+2
 14318  0058E2  C0CF  F004         	movff	i2ReadHumidity@resultWord+3,i2___lmul@multiplier+3
 14319  0058E6  0E7D               	movlw	125
 14320  0058E8  6E05               	movwf	i2___lmul@multiplicand,c
 14321  0058EA  0E00               	movlw	0
 14322  0058EC  6E06               	movwf	i2___lmul@multiplicand+1,c
 14323  0058EE  0E00               	movlw	0
 14324  0058F0  6E07               	movwf	i2___lmul@multiplicand+2,c
 14325  0058F2  0E00               	movlw	0
 14326  0058F4  6E08               	movwf	i2___lmul@multiplicand+3,c
 14327  0058F6  EC87  F036         	call	i2___lmul	;wreg free
 14328  0058FA  C001  F00D         	movff	?i2___lmul,i2___xxtofl@val
 14329  0058FE  C002  F00E         	movff	?i2___lmul+1,i2___xxtofl@val+1
 14330  005902  C003  F00F         	movff	?i2___lmul+2,i2___xxtofl@val+2
 14331  005906  C004  F010         	movff	?i2___lmul+3,i2___xxtofl@val+3
 14332  00590A  0E00               	movlw	0
 14333  00590C  EC32  F028         	call	i2___xxtofl
 14334  005910  C00D  F0D0         	movff	?i2___xxtofl,i2ReadHumidity@convertion
 14335  005914  C00E  F0D1         	movff	?i2___xxtofl+1,i2ReadHumidity@convertion+1
 14336  005918  C00F  F0D2         	movff	?i2___xxtofl+2,i2ReadHumidity@convertion+2
 14337  00591C  C010  F0D3         	movff	?i2___xxtofl+3,i2ReadHumidity@convertion+3
 14338                           
 14339                           ;main.c: 324:     convertion = convertion / 65536;
 14340  005920  C0D0  F001         	movff	i2ReadHumidity@convertion,i2___fldiv@b
 14341  005924  C0D1  F002         	movff	i2ReadHumidity@convertion+1,i2___fldiv@b+1
 14342  005928  C0D2  F003         	movff	i2ReadHumidity@convertion+2,i2___fldiv@b+2
 14343  00592C  C0D3  F004         	movff	i2ReadHumidity@convertion+3,i2___fldiv@b+3
 14344  005930  0E00               	movlw	0
 14345  005932  6E05               	movwf	i2___fldiv@a,c
 14346  005934  0E00               	movlw	0
 14347  005936  6E06               	movwf	i2___fldiv@a+1,c
 14348  005938  0E80               	movlw	128
 14349  00593A  6E07               	movwf	i2___fldiv@a+2,c
 14350  00593C  0E47               	movlw	71
 14351  00593E  6E08               	movwf	i2___fldiv@a+3,c
 14352  005940  EC2B  F01E         	call	i2___fldiv	;wreg free
 14353  005944  C001  F0D0         	movff	?i2___fldiv,i2ReadHumidity@convertion
 14354  005948  C002  F0D1         	movff	?i2___fldiv+1,i2ReadHumidity@convertion+1
 14355  00594C  C003  F0D2         	movff	?i2___fldiv+2,i2ReadHumidity@convertion+2
 14356  005950  C004  F0D3         	movff	?i2___fldiv+3,i2ReadHumidity@convertion+3
 14357                           
 14358                           ;main.c: 325:     float humidity = convertion - 6;
 14359  005954  C0D0  F001         	movff	i2ReadHumidity@convertion,i2___fladd@b
 14360  005958  C0D1  F002         	movff	i2ReadHumidity@convertion+1,i2___fladd@b+1
 14361  00595C  C0D2  F003         	movff	i2ReadHumidity@convertion+2,i2___fladd@b+2
 14362  005960  C0D3  F004         	movff	i2ReadHumidity@convertion+3,i2___fladd@b+3
 14363  005964  0E00               	movlw	0
 14364  005966  6E05               	movwf	i2___fladd@a,c
 14365  005968  0E00               	movlw	0
 14366  00596A  6E06               	movwf	i2___fladd@a+1,c
 14367  00596C  0EC0               	movlw	192
 14368  00596E  6E07               	movwf	i2___fladd@a+2,c
 14369  005970  0EC0               	movlw	192
 14370  005972  6E08               	movwf	i2___fladd@a+3,c
 14371  005974  EC60  F01B         	call	i2___fladd	;wreg free
 14372  005978  C001  F0C6         	movff	?i2___fladd,i2ReadHumidity@humidity
 14373  00597C  C002  F0C7         	movff	?i2___fladd+1,i2ReadHumidity@humidity+1
 14374  005980  C003  F0C8         	movff	?i2___fladd+2,i2ReadHumidity@humidity+2
 14375  005984  C004  F0C9         	movff	?i2___fladd+3,i2ReadHumidity@humidity+3
 14376                           
 14377                           ;main.c: 327:     return humidity;
 14378  005988  C0C6  F0C0         	movff	i2ReadHumidity@humidity,?i2_ReadHumidity
 14379  00598C  C0C7  F0C1         	movff	i2ReadHumidity@humidity+1,?i2_ReadHumidity+1
 14380  005990  C0C8  F0C2         	movff	i2ReadHumidity@humidity+2,?i2_ReadHumidity+2
 14381  005994  C0C9  F0C3         	movff	i2ReadHumidity@humidity+3,?i2_ReadHumidity+3
 14382  005998  0012               	return		;funcret
 14383  00599A                     __end_ofi2_ReadHumidity:
 14384                           	opt callstack 0
 14385                           
 14386 ;; *************** function i2___lmul *****************
 14387 ;; Defined at:
 14388 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 14389 ;; Parameters:    Size  Location     Type
 14390 ;;  multiplier      4    0[COMRAM] unsigned long 
 14391 ;;  multiplicand    4    4[COMRAM] unsigned long 
 14392 ;; Auto vars:     Size  Location     Type
 14393 ;;  __lmul          4    8[COMRAM] unsigned long 
 14394 ;; Return value:  Size  Location     Type
 14395 ;;                  4    0[COMRAM] unsigned long 
 14396 ;; Registers used:
 14397 ;;		wreg, status,2, status,0
 14398 ;; Tracked objects:
 14399 ;;		On entry : 0/0
 14400 ;;		On exit  : 0/0
 14401 ;;		Unchanged: 0/0
 14402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14403 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14404 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14406 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14407 ;;Total ram usage:       12 bytes
 14408 ;; Hardware stack levels used:    1
 14409 ;; This function calls:
 14410 ;;		Nothing
 14411 ;; This function is called by:
 14412 ;;		i2_ReadHumidity
 14413 ;; This function uses a non-reentrant model
 14414 ;;
 14415                           
 14416                           	psect	text73
 14417  006D0E                     __ptext73:
 14418                           	opt callstack 0
 14419  006D0E                     i2___lmul:
 14420                           	opt callstack 12
 14421                           
 14422                           ;incstack = 0
 14423  006D0E  0E00               	movlw	0
 14424  006D10  6E09               	movwf	i2___lmul@product,c
 14425  006D12  0E00               	movlw	0
 14426  006D14  6E0A               	movwf	i2___lmul@product+1,c
 14427  006D16  0E00               	movlw	0
 14428  006D18  6E0B               	movwf	i2___lmul@product+2,c
 14429  006D1A  0E00               	movlw	0
 14430  006D1C  6E0C               	movwf	i2___lmul@product+3,c
 14431  006D1E                     i2l8079:
 14432  006D1E  A001               	btfss	i2___lmul@multiplier,0,c
 14433  006D20  D008               	goto	i2l8083
 14434  006D22  5005               	movf	i2___lmul@multiplicand,w,c
 14435  006D24  2609               	addwf	i2___lmul@product,f,c
 14436  006D26  5006               	movf	i2___lmul@multiplicand+1,w,c
 14437  006D28  220A               	addwfc	i2___lmul@product+1,f,c
 14438  006D2A  5007               	movf	i2___lmul@multiplicand+2,w,c
 14439  006D2C  220B               	addwfc	i2___lmul@product+2,f,c
 14440  006D2E  5008               	movf	i2___lmul@multiplicand+3,w,c
 14441  006D30  220C               	addwfc	i2___lmul@product+3,f,c
 14442  006D32                     i2l8083:
 14443  006D32  90D8               	bcf	status,0,c
 14444  006D34  3605               	rlcf	i2___lmul@multiplicand,f,c
 14445  006D36  3606               	rlcf	i2___lmul@multiplicand+1,f,c
 14446  006D38  3607               	rlcf	i2___lmul@multiplicand+2,f,c
 14447  006D3A  3608               	rlcf	i2___lmul@multiplicand+3,f,c
 14448  006D3C  90D8               	bcf	status,0,c
 14449  006D3E  3204               	rrcf	i2___lmul@multiplier+3,f,c
 14450  006D40  3203               	rrcf	i2___lmul@multiplier+2,f,c
 14451  006D42  3202               	rrcf	i2___lmul@multiplier+1,f,c
 14452  006D44  3201               	rrcf	i2___lmul@multiplier,f,c
 14453  006D46  5001               	movf	i2___lmul@multiplier,w,c
 14454  006D48  1002               	iorwf	i2___lmul@multiplier+1,w,c
 14455  006D4A  1003               	iorwf	i2___lmul@multiplier+2,w,c
 14456  006D4C  1004               	iorwf	i2___lmul@multiplier+3,w,c
 14457  006D4E  A4D8               	btfss	status,2,c
 14458  006D50  D7E6               	goto	i2l8079
 14459  006D52  C009  F001         	movff	i2___lmul@product,?i2___lmul
 14460  006D56  C00A  F002         	movff	i2___lmul@product+1,?i2___lmul+1
 14461  006D5A  C00B  F003         	movff	i2___lmul@product+2,?i2___lmul+2
 14462  006D5E  C00C  F004         	movff	i2___lmul@product+3,?i2___lmul+3
 14463  006D62  0012               	return		;funcret
 14464  006D64                     __end_ofi2___lmul:
 14465                           	opt callstack 0
 14466                           
 14467 ;; *************** function i2_I2cWriteSerial *****************
 14468 ;; Defined at:
 14469 ;;		line 246 in file "main.c"
 14470 ;; Parameters:    Size  Location     Type
 14471 ;;  address         1    wreg     unsigned char 
 14472 ;;  writeData       2   88[BANK0 ] PTR unsigned char 
 14473 ;;		 -> VerifyLogging@location(2), LogData@lastSuccesfulWriteLocation(4), LogData@writeArray(6), LogData@writeAttemptLoc
      +ation(4), 
 14474 ;;		 -> firstLocation(2), STR_10(4), STR_8(4), WriteTempHumidToDisplay@printable(6), 
 14475 ;;		 -> STR_6(11), STR_5(8), readHumidity(1), readTemprature(1), 
 14476 ;;		 -> DisplaySetCursor@command(2), resetEeprom(4), Timer4Interrupt@location(2), customSign1(11), 
 14477 ;;		 -> customSign0(11), displayInitialize(5), 
 14478 ;;  length          1   90[BANK0 ] unsigned char 
 14479 ;; Auto vars:     Size  Location     Type
 14480 ;;  address         1   93[BANK0 ] unsigned char 
 14481 ;;  I2cWriteSeri    1   95[BANK0 ] unsigned char 
 14482 ;;  I2cWriteSeri    1   94[BANK0 ] unsigned char 
 14483 ;; Return value:  Size  Location     Type
 14484 ;;                  1    wreg      void 
 14485 ;; Registers used:
 14486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14487 ;; Tracked objects:
 14488 ;;		On entry : 0/0
 14489 ;;		On exit  : 0/0
 14490 ;;		Unchanged: 0/0
 14491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14492 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14493 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14494 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14496 ;;Total ram usage:        8 bytes
 14497 ;; Hardware stack levels used:    1
 14498 ;; Hardware stack levels required when called:    9
 14499 ;; This function calls:
 14500 ;;		i2_printf
 14501 ;; This function is called by:
 14502 ;;		_Timer4Interrupt
 14503 ;;		_LogData
 14504 ;;		_VerifyLogging
 14505 ;;		i2_ReadTemperature
 14506 ;;		i2_ReadHumidity
 14507 ;; This function uses a non-reentrant model
 14508 ;;
 14509                           
 14510                           	psect	text74
 14511  0066AC                     __ptext74:
 14512                           	opt callstack 0
 14513  0066AC                     i2_I2cWriteSerial:
 14514                           	opt callstack 5
 14515                           
 14516                           ;incstack = 0
 14517                           ;i2I2cWriteSerial@address stored from wreg
 14518  0066AC  0100               	movlb	0	; () banked
 14519  0066AE  6FBD               	movwf	i2I2cWriteSerial@address& (0+255),b
 14520  0066B0                     
 14521                           ;main.c: 247:     while (SSP1STAT & 0x04 || SSP1CON2 & 0x1F);
 14522  0066B0  B4C7               	btfsc	4039,2,c	;volatile
 14523  0066B2  D7FE               	goto	i2l8057
 14524  0066B4  CFC5 F0BB          	movff	4037,??i2_I2cWriteSerial	;volatile
 14525  0066B8  0E1F               	movlw	31
 14526  0066BA  0100               	movlb	0	; () banked
 14527  0066BC  17BB               	andwf	??i2_I2cWriteSerial& (0+255),f,b
 14528  0066BE  A4D8               	btfss	status,2,c
 14529  0066C0  D7F7               	goto	i2l8057
 14530                           
 14531                           ; BSR set to: 0
 14532                           ;main.c: 249:     uint8_t addressWrite = address << 1;
 14533  0066C2  51BD               	movf	i2I2cWriteSerial@address& (0+255),w,b
 14534  0066C4  25BD               	addwf	i2I2cWriteSerial@address& (0+255),w,b
 14535  0066C6  6FBE               	movwf	i2I2cWriteSerial@addressWrite& (0+255),b
 14536                           
 14537                           ; BSR set to: 0
 14538                           ;main.c: 251:     SSP1CON2bits.SEN = 1;
 14539  0066C8  80C5               	bsf	4037,0,c	;volatile
 14540  0066CA                     i2l496:
 14541  0066CA  B0C5               	btfsc	4037,0,c	;volatile
 14542  0066CC  D7FE               	goto	i2l496
 14543                           
 14544                           ;main.c: 254:     SSP1BUF = addressWrite;
 14545  0066CE  C0BE  FFC9         	movff	i2I2cWriteSerial@addressWrite,4041	;volatile
 14546  0066D2                     i2l499:
 14547  0066D2  B4C7               	btfsc	4039,2,c	;volatile
 14548  0066D4  D7FE               	goto	i2l499
 14549                           
 14550                           ;main.c: 258:     if (SSP1CON2bits.ACKSTAT == 0)
 14551  0066D6  BCC5               	btfsc	4037,6,c	;volatile
 14552  0066D8  D02E               	goto	i2u1160_40
 14553                           
 14554                           ;main.c: 259:     {;main.c: 260:         for (uint8_t i = 0; i < length; i++)
 14555  0066DA  0E00               	movlw	0
 14556  0066DC  0100               	movlb	0	; () banked
 14557  0066DE  6FBF               	movwf	i2I2cWriteSerial@i& (0+255),b
 14558  0066E0  D026               	goto	i2l8075
 14559  0066E2                     i2l8067:
 14560                           
 14561                           ; BSR set to: 0
 14562                           ;main.c: 261:         {;main.c: 262:             SSP1BUF = (uint8_t) writeData[i];
 14563  0066E2  51BF               	movf	i2I2cWriteSerial@i& (0+255),w,b
 14564  0066E4  25B8               	addwf	i2I2cWriteSerial@writeData& (0+255),w,b
 14565  0066E6  6FBB               	movwf	??i2_I2cWriteSerial& (0+255),b
 14566  0066E8  0E00               	movlw	0
 14567  0066EA  21B9               	addwfc	(i2I2cWriteSerial@writeData+1)& (0+255),w,b
 14568  0066EC  6FBC               	movwf	(??i2_I2cWriteSerial+1)& (0+255),b
 14569  0066EE  C0BB  FFF6         	movff	??i2_I2cWriteSerial,tblptrl
 14570  0066F2  C0BC  FFF7         	movff	??i2_I2cWriteSerial+1,tblptrh
 14571  0066F6  0E00               	movlw	low (__smallconst shr (0+16))
 14572  0066F8  6EF8               	movwf	tblptru,c
 14573  0066FA  0E0F               	movlw	(high __ramtop+-1)
 14574  0066FC  64F7               	cpfsgt	tblptrh,c
 14575  0066FE  D003               	bra	i2u1157_47
 14576  006700  0008               	tblrd		*
 14577  006702  50F5               	movf	tablat,w,c
 14578  006704  D005               	bra	i2u1157_40
 14579  006706                     i2u1157_47:
 14580  006706  CFF6 FFE1          	movff	tblptrl,fsr1l
 14581  00670A  CFF7 FFE2          	movff	tblptrh,fsr1h
 14582  00670E  50E7               	movf	indf1,w,c
 14583  006710                     i2u1157_40:
 14584  006710  6EC9               	movwf	4041,c	;volatile
 14585  006712                     i2l505:
 14586  006712  B4C7               	btfsc	4039,2,c	;volatile
 14587  006714  D7FE               	goto	i2l505
 14588                           
 14589                           ;main.c: 265:             if (SSP1CON2bits.ACKSTAT == 0)
 14590  006716  ACC5               	btfss	4037,6,c	;volatile
 14591  006718  D008               	goto	i2l8073
 14592                           
 14593                           ;main.c: 269:                 printf("No ack recieved while writting \r\n");
 14594  00671A  0E60               	movlw	low STR_4
 14595  00671C  0100               	movlb	0	; () banked
 14596  00671E  6FAC               	movwf	i2printf@fmt& (0+255),b
 14597  006720  0E10               	movlw	high STR_4
 14598  006722  6FAD               	movwf	(i2printf@fmt+1)& (0+255),b
 14599  006724  ECA6  F039         	call	i2_printf	;wreg free
 14600                           
 14601                           ;main.c: 270:                 break;
 14602  006728  D006               	goto	i2u1160_40
 14603  00672A                     i2l8073:
 14604                           
 14605                           ;main.c: 272:         }
 14606  00672A  0100               	movlb	0	; () banked
 14607  00672C  2BBF               	incf	i2I2cWriteSerial@i& (0+255),f,b
 14608  00672E                     i2l8075:
 14609                           
 14610                           ; BSR set to: 0
 14611  00672E  51BA               	movf	i2I2cWriteSerial@length& (0+255),w,b
 14612  006730  5DBF               	subwf	i2I2cWriteSerial@i& (0+255),w,b
 14613  006732  A0D8               	btfss	status,0,c
 14614  006734  D7D6               	goto	i2l8067
 14615  006736                     i2u1160_40:
 14616                           
 14617                           ;main.c: 274:     SSP1CON2bits.PEN = 1;
 14618                           
 14619                           ;main.c: 273:     }
 14620  006736  84C5               	bsf	4037,2,c	;volatile
 14621  006738                     i2l511:
 14622  006738  A4C5               	btfss	4037,2,c	;volatile
 14623  00673A  0012               	return	
 14624  00673C  D7FD               	goto	i2l511
 14625  00673E                     __end_ofi2_I2cWriteSerial:
 14626                           	opt callstack 0
 14627                           
 14628 ;; *************** function i2_printf *****************
 14629 ;; Defined at:
 14630 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
 14633 ;;		 -> STR_12(61), STR_11(26), STR_4(34), STR_3(31), 
 14634 ;;		 -> STR_2(34), STR_1(14), 
 14635 ;; Auto vars:     Size  Location     Type
 14636 ;;  printf          2   86[BANK0 ] PTR void [1]
 14637 ;;		 -> ?i2_printf(2), ?_printf(2), ?_sprintf(2), 
 14638 ;;  printf          2    0        int 
 14639 ;; Return value:  Size  Location     Type
 14640 ;;                  2   76[BANK0 ] int 
 14641 ;; Registers used:
 14642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14643 ;; Tracked objects:
 14644 ;;		On entry : 0/0
 14645 ;;		On exit  : 0/0
 14646 ;;		Unchanged: 0/0
 14647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14648 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14649 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14651 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14652 ;;Total ram usage:       12 bytes
 14653 ;; Hardware stack levels used:    1
 14654 ;; Hardware stack levels required when called:    8
 14655 ;; This function calls:
 14656 ;;		i2_vfprintf
 14657 ;; This function is called by:
 14658 ;;		_Timer4Interrupt
 14659 ;;		_LogData
 14660 ;;		_VerifyLogging
 14661 ;;		i2_I2cWriteSerial
 14662 ;; This function uses a non-reentrant model
 14663 ;;
 14664                           
 14665                           	psect	text75
 14666  00734C                     __ptext75:
 14667                           	opt callstack 0
 14668  00734C                     i2_printf:
 14669                           	opt callstack 6
 14670                           
 14671                           ;incstack = 0
 14672  00734C  0EAE               	movlw	low (?i2_printf+2)
 14673  00734E  0100               	movlb	0	; () banked
 14674  007350  6FB6               	movwf	i2printf@ap& (0+255),b
 14675  007352  0E00               	movlw	high (?i2_printf+2)
 14676  007354  6FB7               	movwf	(i2printf@ap+1)& (0+255),b
 14677                           
 14678                           ; BSR set to: 0
 14679  007356  0E00               	movlw	0
 14680  007358  6E56               	movwf	i2vfprintf@fp,c
 14681  00735A  0E00               	movlw	0
 14682  00735C  6E57               	movwf	i2vfprintf@fp+1,c
 14683  00735E  C0AC  F058         	movff	i2printf@fmt,i2vfprintf@fmt
 14684  007362  C0AD  F059         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 14685  007366  0EB6               	movlw	low i2printf@ap
 14686  007368  6E5A               	movwf	i2vfprintf@ap,c
 14687  00736A  0E00               	movlw	high i2printf@ap
 14688  00736C  6E5B               	movwf	i2vfprintf@ap+1,c
 14689  00736E  EC30  F036         	call	i2_vfprintf	;wreg free
 14690  007372  0012               	return		;funcret
 14691  007374                     __end_ofi2_printf:
 14692                           	opt callstack 0
 14693                           
 14694 ;; *************** function i2_vfprintf *****************
 14695 ;; Defined at:
 14696 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14697 ;; Parameters:    Size  Location     Type
 14698 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
 14699 ;;		 -> sprintf@f(6), NULL(0), 
 14700 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
 14701 ;;		 -> STR_12(61), STR_11(26), STR_9(6), STR_7(6), 
 14702 ;;		 -> STR_4(34), STR_3(31), STR_2(34), STR_1(14), 
 14703 ;;  ap              2   89[COMRAM] PTR PTR void 
 14704 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 14705 ;; Auto vars:     Size  Location     Type
 14706 ;;  vfprintf        2   91[COMRAM] PTR unsigned char 
 14707 ;;		 -> STR_12(61), STR_11(26), STR_9(6), STR_7(6), 
 14708 ;;		 -> STR_4(34), STR_3(31), STR_2(34), STR_1(14), 
 14709 ;; Return value:  Size  Location     Type
 14710 ;;                  2   85[COMRAM] int 
 14711 ;; Registers used:
 14712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14713 ;; Tracked objects:
 14714 ;;		On entry : 0/0
 14715 ;;		On exit  : 0/0
 14716 ;;		Unchanged: 0/0
 14717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14718 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14721 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14722 ;;Total ram usage:        8 bytes
 14723 ;; Hardware stack levels used:    1
 14724 ;; Hardware stack levels required when called:    7
 14725 ;; This function calls:
 14726 ;;		i2_vfpfcnvrt
 14727 ;; This function is called by:
 14728 ;;		i2_printf
 14729 ;; This function uses a non-reentrant model
 14730 ;;
 14731                           
 14732                           	psect	text76
 14733  006C60                     __ptext76:
 14734                           	opt callstack 0
 14735  006C60                     i2_vfprintf:
 14736                           	opt callstack 6
 14737                           
 14738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 14739                           
 14740                           ;incstack = 0
 14741  006C60  C058  F05C         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 14742  006C64  C059  F05D         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 14743                           
 14744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 14745  006C68  0E00               	movlw	0
 14746  006C6A  0101               	movlb	1	; () banked
 14747  006C6C  6FDC               	movwf	(_nout+1)& (0+255),b
 14748  006C6E  0E00               	movlw	0
 14749  006C70  6FDB               	movwf	_nout& (0+255),b
 14750                           
 14751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 14752  006C72  D013               	goto	i2l7507
 14753  006C74                     i2l7505:
 14754                           
 14755                           ; BSR set to: 1
 14756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 14757  006C74  C056  F04C         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 14758  006C78  C057  F04D         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 14759  006C7C  0E5C               	movlw	low i2vfprintf@cfmt
 14760  006C7E  6E4E               	movwf	i2vfpfcnvrt@fmt,c
 14761  006C80  0E00               	movlw	high i2vfprintf@cfmt
 14762  006C82  6E4F               	movwf	i2vfpfcnvrt@fmt+1,c
 14763  006C84  C05A  F050         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 14764  006C88  C05B  F051         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 14765  006C8C  EC48  F014         	call	i2_vfpfcnvrt	;wreg free
 14766  006C90  504C               	movf	?i2_vfpfcnvrt,w,c
 14767  006C92  0101               	movlb	1	; () banked
 14768  006C94  27DB               	addwf	_nout& (0+255),f,b
 14769  006C96  504D               	movf	?i2_vfpfcnvrt+1,w,c
 14770  006C98  23DC               	addwfc	(_nout+1)& (0+255),f,b
 14771  006C9A                     i2l7507:
 14772                           
 14773                           ; BSR set to: 1
 14774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 14775  006C9A  C05C  FFF6         	movff	i2vfprintf@cfmt,tblptrl
 14776  006C9E  C05D  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
 14777  006CA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14778  006CA2  6AF8               	clrf	tblptru,c
 14779  006CA4                     	endif
 14780  006CA4                     	if	0	;tblptru may be non-zero
 14781  006CA4                     	endif
 14782  006CA4  0008               	tblrd		*
 14783  006CA6  50F5               	movf	tablat,w,c
 14784  006CA8  0900               	iorlw	0
 14785  006CAA  A4D8               	btfss	status,2,c
 14786  006CAC  D7E3               	goto	i2l7505
 14787                           
 14788                           ; BSR set to: 1
 14789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 14790  006CAE  C1DB  F056         	movff	_nout,?i2_vfprintf
 14791  006CB2  C1DC  F057         	movff	_nout+1,?i2_vfprintf+1
 14792                           
 14793                           ; BSR set to: 1
 14794  006CB6  0012               	return		;funcret
 14795  006CB8                     __end_ofi2_vfprintf:
 14796                           	opt callstack 0
 14797                           
 14798 ;; *************** function i2_vfpfcnvrt *****************
 14799 ;; Defined at:
 14800 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14801 ;; Parameters:    Size  Location     Type
 14802 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
 14803 ;;		 -> sprintf@f(6), NULL(0), 
 14804 ;;  fmt             2   77[COMRAM] PTR PTR unsigned char 
 14805 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 14806 ;;  ap              2   79[COMRAM] PTR PTR void 
 14807 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 14808 ;; Auto vars:     Size  Location     Type
 14809 ;;  vfpfcnvrt       8   56[BANK0 ] long long 
 14810 ;;  vfpfcnvrt       8    0        unsigned long long 
 14811 ;;  vfpfcnvrt       4   68[BANK0 ] unsigned long long 
 14812 ;;  vfpfcnvrt       3   72[BANK0 ] unsigned char [3]
 14813 ;;  vfpfcnvrt       3    0        PTR void 
 14814 ;;  vfpfcnvrt       3    0        PTR unsigned char 
 14815 ;;  vfpfcnvrt       2    0        int 
 14816 ;;  vfpfcnvrt       2    0        int 
 14817 ;;  vfpfcnvrt       1   75[BANK0 ] unsigned char 
 14818 ;; Return value:  Size  Location     Type
 14819 ;;                  2   75[COMRAM] int 
 14820 ;; Registers used:
 14821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14822 ;; Tracked objects:
 14823 ;;		On entry : 0/0
 14824 ;;		On exit  : 0/0
 14825 ;;		Unchanged: 0/0
 14826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14827 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14828 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14829 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14830 ;;      Totals:        10      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14831 ;;Total ram usage:       30 bytes
 14832 ;; Hardware stack levels used:    1
 14833 ;; Hardware stack levels required when called:    6
 14834 ;; This function calls:
 14835 ;;		i2_atoi
 14836 ;;		i2_dtoa
 14837 ;;		i2_efgtoa
 14838 ;;		i2_fputc
 14839 ;;		i2_isdigit
 14840 ;;		i2_isupper
 14841 ;;		i2_strncmp
 14842 ;;		i2_tolower
 14843 ;; This function is called by:
 14844 ;;		i2_vfprintf
 14845 ;; This function uses a non-reentrant model
 14846 ;;
 14847                           
 14848                           	psect	text77
 14849  002890                     __ptext77:
 14850                           	opt callstack 0
 14851  002890                     i2_vfpfcnvrt:
 14852                           	opt callstack 6
 14853                           
 14854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 14855                           
 14856                           ; BSR set to: 1
 14857                           ;incstack = 0
 14858  002890  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14859  002894  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14860  002898  CFDE FFF6          	movff	postinc2,tblptrl
 14861  00289C  CFDD FFF7          	movff	postdec2,tblptrh
 14862  0028A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14863  0028A0  6AF8               	clrf	tblptru,c
 14864  0028A2                     	endif
 14865  0028A2                     	if	0	;tblptru may be non-zero
 14866  0028A2                     	endif
 14867  0028A2  0008               	tblrd		*
 14868  0028A4  50F5               	movf	tablat,w,c
 14869  0028A6  0A25               	xorlw	37
 14870  0028A8  A4D8               	btfss	status,2,c
 14871  0028AA  D215               	goto	i2l6857
 14872                           
 14873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 14874  0028AC  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14875  0028B0  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14876  0028B4  2ADE               	incf	postinc2,f,c
 14877  0028B6  0E00               	movlw	0
 14878  0028B8  22DD               	addwfc	postdec2,f,c
 14879                           
 14880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 14881  0028BA  0E00               	movlw	0
 14882  0028BC  0101               	movlb	1	; () banked
 14883  0028BE  6FDE               	movwf	(_width+1)& (0+255),b
 14884  0028C0  0E00               	movlw	0
 14885  0028C2  6FDD               	movwf	_width& (0+255),b
 14886  0028C4  C1DD  F1E1         	movff	_width,_flags
 14887  0028C8  C1DE  F1E2         	movff	_width+1,_flags+1
 14888                           
 14889                           ; BSR set to: 1
 14890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 14891  0028CC  69DF               	setf	_prec& (0+255),b
 14892  0028CE  69E0               	setf	(_prec+1)& (0+255),b
 14893                           
 14894                           ; BSR set to: 1
 14895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
 14896  0028D0  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14897  0028D4  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14898  0028D8  CFDE FFF6          	movff	postinc2,tblptrl
 14899  0028DC  CFDD FFF7          	movff	postdec2,tblptrh
 14900  0028E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14901  0028E0  6AF8               	clrf	tblptru,c
 14902  0028E2                     	endif
 14903  0028E2                     	if	0	;tblptru may be non-zero
 14904  0028E2                     	endif
 14905  0028E2  0008               	tblrd		*
 14906  0028E4  50F5               	movf	tablat,w,c
 14907  0028E6  0A2E               	xorlw	46
 14908  0028E8  A4D8               	btfss	status,2,c
 14909  0028EA  D070               	goto	i2u921_40
 14910                           
 14911                           ; BSR set to: 1
 14912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
 14913  0028EC  0E00               	movlw	0
 14914  0028EE  6FE0               	movwf	(_prec+1)& (0+255),b
 14915  0028F0  0E00               	movlw	0
 14916  0028F2  6FDF               	movwf	_prec& (0+255),b
 14917                           
 14918                           ; BSR set to: 1
 14919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
 14920  0028F4  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14921  0028F8  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14922  0028FC  2ADE               	incf	postinc2,f,c
 14923  0028FE  0E00               	movlw	0
 14924  002900  22DD               	addwfc	postdec2,f,c
 14925                           
 14926                           ; BSR set to: 1
 14927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
 14928  002902  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14929  002906  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14930  00290A  CFDE FFF6          	movff	postinc2,tblptrl
 14931  00290E  CFDD FFF7          	movff	postdec2,tblptrh
 14932  002912                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14933  002912  6AF8               	clrf	tblptru,c
 14934  002914                     	endif
 14935  002914                     	if	0	;tblptru may be non-zero
 14936  002914                     	endif
 14937  002914  0008               	tblrd		*
 14938  002916  50F5               	movf	tablat,w,c
 14939  002918  0A2A               	xorlw	42
 14940  00291A  A4D8               	btfss	status,2,c
 14941  00291C  D01C               	goto	i2l6783
 14942                           
 14943                           ; BSR set to: 1
 14944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
 14945  00291E  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14946  002922  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14947  002926  2ADE               	incf	postinc2,f,c
 14948  002928  0E00               	movlw	0
 14949  00292A  22DD               	addwfc	postdec2,f,c
 14950                           
 14951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 14952  00292C  C050  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 14953  002930  C051  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 14954  002934  CFDF F052          	movff	indf2,??i2_vfpfcnvrt
 14955  002938  0E02               	movlw	2
 14956  00293A  26DE               	addwf	postinc2,f,c
 14957  00293C  CFDF F053          	movff	indf2,??i2_vfpfcnvrt+1
 14958  002940  0E00               	movlw	0
 14959  002942  22DD               	addwfc	postdec2,f,c
 14960  002944  C052  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 14961  002948  C053  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 14962  00294C  CFDE F1DF          	movff	postinc2,_prec
 14963  002950  CFDD F1E0          	movff	postdec2,_prec+1
 14964                           
 14965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
 14966  002954  D03B               	goto	i2u921_40
 14967  002956                     i2l6783:
 14968                           
 14969                           ; BSR set to: 1
 14970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
 14971  002956  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14972  00295A  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14973  00295E  CFDE F008          	movff	postinc2,i2atoi@s
 14974  002962  CFDD F009          	movff	postdec2,i2atoi@s+1
 14975  002966  EC47  F026         	call	i2_atoi	;wreg free
 14976  00296A  C008  F1DF         	movff	?i2_atoi,_prec
 14977  00296E  C009  F1E0         	movff	?i2_atoi+1,_prec+1
 14978                           
 14979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 14980  002972  D007               	goto	i2l6787
 14981  002974                     i2l6785:
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
 14985  002974  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14986  002978  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14987  00297C  2ADE               	incf	postinc2,f,c
 14988  00297E  0E00               	movlw	0
 14989  002980  22DD               	addwfc	postdec2,f,c
 14990  002982                     i2l6787:
 14991  002982  0ED0               	movlw	208
 14992  002984  6E52               	movwf	??i2_vfpfcnvrt& (0+255),c
 14993  002986  0EFF               	movlw	255
 14994  002988  6E53               	movwf	(??i2_vfpfcnvrt+1)& (0+255),c
 14995  00298A  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14996  00298E  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14997  002992  CFDE FFF6          	movff	postinc2,tblptrl
 14998  002996  CFDD FFF7          	movff	postdec2,tblptrh
 14999  00299A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15000  00299A  6AF8               	clrf	tblptru,c
 15001  00299C                     	endif
 15002  00299C                     	if	0	;tblptru may be non-zero
 15003  00299C                     	endif
 15004  00299C  0008               	tblrd		*
 15005  00299E  50F5               	movf	tablat,w,c
 15006  0029A0  6E54               	movwf	(??i2_vfpfcnvrt+2)& (0+255),c
 15007  0029A2  6A55               	clrf	(??i2_vfpfcnvrt+3)& (0+255),c
 15008  0029A4  5052               	movf	??i2_vfpfcnvrt,w,c
 15009  0029A6  2654               	addwf	??i2_vfpfcnvrt+2,f,c
 15010  0029A8  5053               	movf	??i2_vfpfcnvrt+1,w,c
 15011  0029AA  2255               	addwfc	??i2_vfpfcnvrt+3,f,c
 15012  0029AC  5055               	movf	??i2_vfpfcnvrt+3,w,c
 15013  0029AE  E106               	bnz	i2u919_40
 15014  0029B0  0E0A               	movlw	10
 15015  0029B2  5C54               	subwf	??i2_vfpfcnvrt+2,w,c
 15016  0029B4  B0D8               	btfsc	status,0,c
 15017  0029B6  D002               	goto	i2u919_40
 15018  0029B8  0E01               	movlw	1
 15019  0029BA  D001               	goto	i2u920_40
 15020  0029BC                     i2u919_40:
 15021  0029BC  0E00               	movlw	0
 15022  0029BE                     i2u920_40:
 15023  0029BE  0100               	movlb	0	; () banked
 15024  0029C0  6FA0               	movwf	i2_vfpfcnvrt$1563& (0+255),b
 15025  0029C2  6BA1               	clrf	(i2_vfpfcnvrt$1563+1)& (0+255),b
 15026                           
 15027                           ; BSR set to: 0
 15028  0029C4  51A0               	movf	i2_vfpfcnvrt$1563& (0+255),w,b
 15029  0029C6  11A1               	iorwf	(i2_vfpfcnvrt$1563+1)& (0+255),w,b
 15030  0029C8  A4D8               	btfss	status,2,c
 15031  0029CA  D7D4               	goto	i2l6785
 15032  0029CC                     i2u921_40:
 15033                           
 15034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
 15035  0029CC  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15036  0029D0  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15037  0029D4  CFDE FFF6          	movff	postinc2,tblptrl
 15038  0029D8  CFDD FFF7          	movff	postdec2,tblptrh
 15039  0029DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15040  0029DC  6AF8               	clrf	tblptru,c
 15041  0029DE                     	endif
 15042  0029DE                     	if	0	;tblptru may be non-zero
 15043  0029DE                     	endif
 15044  0029DE  0008               	tblrd		*
 15045  0029E0  50F5               	movf	tablat,w,c
 15046  0029E2  6E07               	movwf	i2tolower@c,c
 15047  0029E4  6A08               	clrf	i2tolower@c+1,c
 15048  0029E6  EC2C  F037         	call	i2_tolower	;wreg free
 15049  0029EA  5007               	movf	?i2_tolower,w,c
 15050  0029EC  0100               	movlb	0	; () banked
 15051  0029EE  6FA8               	movwf	i2vfpfcnvrt@ct& (0+255),b
 15052                           
 15053                           ; BSR set to: 0
 15054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
 15055  0029F0  51A8               	movf	i2vfpfcnvrt@ct& (0+255),w,b
 15056  0029F2  B4D8               	btfsc	status,2,c
 15057  0029F4  D037               	goto	i2l6803
 15058                           
 15059                           ; BSR set to: 0
 15060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
 15061  0029F6  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15062  0029FA  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15063  0029FE  CFDE F052          	movff	postinc2,??i2_vfpfcnvrt
 15064  002A02  CFDD F053          	movff	postdec2,??i2_vfpfcnvrt+1
 15065  002A06  0E01               	movlw	1
 15066  002A08  2652               	addwf	??i2_vfpfcnvrt,f,c
 15067  002A0A  0E00               	movlw	0
 15068  002A0C  2253               	addwfc	??i2_vfpfcnvrt+1,f,c
 15069  002A0E  C052  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 15070  002A12  C053  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 15071  002A16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15072  002A16  6AF8               	clrf	tblptru,c
 15073  002A18                     	endif
 15074  002A18                     	if	0	;tblptru may be non-zero
 15075  002A18                     	endif
 15076  002A18  0008               	tblrd		*
 15077  002A1A  50F5               	movf	tablat,w,c
 15078  002A1C  6E07               	movwf	i2tolower@c,c
 15079  002A1E  6A08               	clrf	i2tolower@c+1,c
 15080  002A20  EC2C  F037         	call	i2_tolower	;wreg free
 15081  002A24  5007               	movf	?i2_tolower,w,c
 15082  002A26  0100               	movlb	0	; () banked
 15083  002A28  6FA9               	movwf	(i2vfpfcnvrt@ct+1)& (0+255),b
 15084                           
 15085                           ; BSR set to: 0
 15086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
 15087  002A2A  51A9               	movf	(i2vfpfcnvrt@ct+1)& (0+255),w,b
 15088  002A2C  B4D8               	btfsc	status,2,c
 15089  002A2E  D01A               	goto	i2l6803
 15090                           
 15091                           ; BSR set to: 0
 15092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
 15093  002A30  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15094  002A34  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15095  002A38  CFDE F052          	movff	postinc2,??i2_vfpfcnvrt
 15096  002A3C  CFDD F053          	movff	postdec2,??i2_vfpfcnvrt+1
 15097  002A40  0E02               	movlw	2
 15098  002A42  2652               	addwf	??i2_vfpfcnvrt,f,c
 15099  002A44  0E00               	movlw	0
 15100  002A46  2253               	addwfc	??i2_vfpfcnvrt+1,f,c
 15101  002A48  C052  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 15102  002A4C  C053  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 15103  002A50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15104  002A50  6AF8               	clrf	tblptru,c
 15105  002A52                     	endif
 15106  002A52                     	if	0	;tblptru may be non-zero
 15107  002A52                     	endif
 15108  002A52  0008               	tblrd		*
 15109  002A54  50F5               	movf	tablat,w,c
 15110  002A56  6E07               	movwf	i2tolower@c,c
 15111  002A58  6A08               	clrf	i2tolower@c+1,c
 15112  002A5A  EC2C  F037         	call	i2_tolower	;wreg free
 15113  002A5E  5007               	movf	?i2_tolower,w,c
 15114  002A60  0100               	movlb	0	; () banked
 15115  002A62  6FAA               	movwf	(i2vfpfcnvrt@ct+2)& (0+255),b
 15116  002A64                     i2l6803:
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 15120  002A64  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15121  002A68  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15122  002A6C  CFDE FFF6          	movff	postinc2,tblptrl
 15123  002A70  CFDD FFF7          	movff	postdec2,tblptrh
 15124  002A74                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15125  002A74  6AF8               	clrf	tblptru,c
 15126  002A76                     	endif
 15127  002A76                     	if	0	;tblptru may be non-zero
 15128  002A76                     	endif
 15129  002A76  0008               	tblrd		*
 15130  002A78  50F5               	movf	tablat,w,c
 15131  002A7A  0A64               	xorlw	100
 15132  002A7C  B4D8               	btfsc	status,2,c
 15133  002A7E  D00E               	goto	i2u925_40
 15134                           
 15135                           ; BSR set to: 0
 15136  002A80  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15137  002A84  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15138  002A88  CFDE FFF6          	movff	postinc2,tblptrl
 15139  002A8C  CFDD FFF7          	movff	postdec2,tblptrh
 15140  002A90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15141  002A90  6AF8               	clrf	tblptru,c
 15142  002A92                     	endif
 15143  002A92                     	if	0	;tblptru may be non-zero
 15144  002A92                     	endif
 15145  002A92  0008               	tblrd		*
 15146  002A94  50F5               	movf	tablat,w,c
 15147  002A96  0A69               	xorlw	105
 15148  002A98  A4D8               	btfss	status,2,c
 15149  002A9A  D03F               	goto	i2l6813
 15150  002A9C                     i2u925_40:
 15151                           
 15152                           ; BSR set to: 0
 15153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 15154  002A9C  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15155  002AA0  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15156  002AA4  2ADE               	incf	postinc2,f,c
 15157  002AA6  0E00               	movlw	0
 15158  002AA8  22DD               	addwfc	postdec2,f,c
 15159                           
 15160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 15161  002AAA  C050  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15162  002AAE  C051  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15163  002AB2  CFDF F052          	movff	indf2,??i2_vfpfcnvrt
 15164  002AB6  0E02               	movlw	2
 15165  002AB8  26DE               	addwf	postinc2,f,c
 15166  002ABA  CFDF F053          	movff	indf2,??i2_vfpfcnvrt+1
 15167  002ABE  0E00               	movlw	0
 15168  002AC0  22DD               	addwfc	postdec2,f,c
 15169  002AC2  C052  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15170  002AC6  C053  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15171  002ACA  CFDE F098          	movff	postinc2,i2vfpfcnvrt@ll
 15172  002ACE  CFDD F099          	movff	postdec2,i2vfpfcnvrt@ll+1
 15173  002AD2  0E00               	movlw	0
 15174  002AD4  BF99               	btfsc	(i2vfpfcnvrt@ll+1)& (0+255),7,b
 15175  002AD6  0EFF               	movlw	-1
 15176  002AD8  6F9A               	movwf	(i2vfpfcnvrt@ll+2)& (0+255),b
 15177  002ADA  6F9B               	movwf	(i2vfpfcnvrt@ll+3)& (0+255),b
 15178  002ADC  6F9C               	movwf	(i2vfpfcnvrt@ll+4)& (0+255),b
 15179  002ADE  6F9D               	movwf	(i2vfpfcnvrt@ll+5)& (0+255),b
 15180  002AE0  6F9E               	movwf	(i2vfpfcnvrt@ll+6)& (0+255),b
 15181  002AE2  6F9F               	movwf	(i2vfpfcnvrt@ll+7)& (0+255),b
 15182                           
 15183                           ; BSR set to: 0
 15184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 15185  002AE4  C04C  F01E         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 15186  002AE8  C04D  F01F         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 15187  002AEC  C098  F020         	movff	i2vfpfcnvrt@ll,i2dtoa@d
 15188  002AF0  C099  F021         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
 15189  002AF4  C09A  F022         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
 15190  002AF8  C09B  F023         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
 15191  002AFC  C09C  F024         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
 15192  002B00  C09D  F025         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
 15193  002B04  C09E  F026         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
 15194  002B08  C09F  F027         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
 15195  002B0C  EC93  F020         	call	i2_dtoa	;wreg free
 15196  002B10  C01E  F04C         	movff	?i2_dtoa,?i2_vfpfcnvrt
 15197  002B14  C01F  F04D         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
 15198  002B18  0012               	return	
 15199  002B1A                     i2l6813:
 15200                           
 15201                           ; BSR set to: 0
 15202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 15203  002B1A  0E66               	movlw	102
 15204  002B1C  19A8               	xorwf	i2vfpfcnvrt@ct& (0+255),w,b
 15205  002B1E  A4D8               	btfss	status,2,c
 15206  002B20  D040               	goto	i2l6825
 15207                           
 15208                           ; BSR set to: 0
 15209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 15210  002B22  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15211  002B26  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15212  002B2A  CFDE FFF6          	movff	postinc2,tblptrl
 15213  002B2E  CFDD FFF7          	movff	postdec2,tblptrh
 15214  002B32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15215  002B32  6AF8               	clrf	tblptru,c
 15216  002B34                     	endif
 15217  002B34                     	if	0	;tblptru may be non-zero
 15218  002B34                     	endif
 15219  002B34  0008               	tblrd		*
 15220  002B36  CFF5 F0AB          	movff	tablat,i2vfpfcnvrt@c
 15221                           
 15222                           ; BSR set to: 0
 15223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 15224  002B3A  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15225  002B3E  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15226  002B42  2ADE               	incf	postinc2,f,c
 15227  002B44  0E00               	movlw	0
 15228  002B46  22DD               	addwfc	postdec2,f,c
 15229                           
 15230                           ; BSR set to: 0
 15231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 15232  002B48  C050  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15233  002B4C  C051  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15234  002B50  CFDF F052          	movff	indf2,??i2_vfpfcnvrt
 15235  002B54  0E04               	movlw	4
 15236  002B56  26DE               	addwf	postinc2,f,c
 15237  002B58  CFDF F053          	movff	indf2,??i2_vfpfcnvrt+1
 15238  002B5C  0E00               	movlw	0
 15239  002B5E  22DD               	addwfc	postdec2,f,c
 15240  002B60  C052  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15241  002B64  C053  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15242  002B68  CFDE F0A4          	movff	postinc2,i2vfpfcnvrt@f
 15243  002B6C  CFDE F0A5          	movff	postinc2,i2vfpfcnvrt@f+1
 15244  002B70  CFDE F0A6          	movff	postinc2,i2vfpfcnvrt@f+2
 15245  002B74  CFDE F0A7          	movff	postinc2,i2vfpfcnvrt@f+3
 15246  002B78                     i2l6821:
 15247                           
 15248                           ; BSR set to: 0
 15249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 15250  002B78  C04C  F040         	movff	i2vfpfcnvrt@fp,i2efgtoa@fp
 15251  002B7C  C04D  F041         	movff	i2vfpfcnvrt@fp+1,i2efgtoa@fp+1
 15252  002B80  C0A4  F042         	movff	i2vfpfcnvrt@f,i2efgtoa@f
 15253  002B84  C0A5  F043         	movff	i2vfpfcnvrt@f+1,i2efgtoa@f+1
 15254  002B88  C0A6  F044         	movff	i2vfpfcnvrt@f+2,i2efgtoa@f+2
 15255  002B8C  C0A7  F045         	movff	i2vfpfcnvrt@f+3,i2efgtoa@f+3
 15256  002B90  C0AB  F046         	movff	i2vfpfcnvrt@c,i2efgtoa@c
 15257  002B94  EC7D  F008         	call	i2_efgtoa	;wreg free
 15258  002B98  C040  F04C         	movff	?i2_efgtoa,?i2_vfpfcnvrt
 15259  002B9C  C041  F04D         	movff	?i2_efgtoa+1,?i2_vfpfcnvrt+1
 15260  002BA0  0012               	return	
 15261  002BA2                     i2l6825:
 15262                           
 15263                           ; BSR set to: 0
 15264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 15265  002BA2  0EA8               	movlw	low i2vfpfcnvrt@ct
 15266  002BA4  6E01               	movwf	i2strncmp@_l,c
 15267  002BA6  0E00               	movlw	high i2vfpfcnvrt@ct
 15268  002BA8  6E02               	movwf	i2strncmp@_l+1,c
 15269  002BAA  0EF6               	movlw	low STR_21
 15270  002BAC  6E03               	movwf	i2strncmp@_r,c
 15271  002BAE  0E10               	movlw	high STR_21
 15272  002BB0  6E04               	movwf	i2strncmp@_r+1,c
 15273  002BB2  0E00               	movlw	0
 15274  002BB4  6E06               	movwf	i2strncmp@n+1,c
 15275  002BB6  0E02               	movlw	2
 15276  002BB8  6E05               	movwf	i2strncmp@n,c
 15277  002BBA  EC8E  F030         	call	i2_strncmp	;wreg free
 15278  002BBE  5001               	movf	?i2_strncmp,w,c
 15279  002BC0  1002               	iorwf	?i2_strncmp+1,w,c
 15280  002BC2  A4D8               	btfss	status,2,c
 15281  002BC4  D058               	goto	i2l6841
 15282                           
 15283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 15284  002BC6  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15285  002BCA  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15286  002BCE  CFDE F052          	movff	postinc2,??i2_vfpfcnvrt
 15287  002BD2  CFDD F053          	movff	postdec2,??i2_vfpfcnvrt+1
 15288  002BD6  0E01               	movlw	1
 15289  002BD8  2652               	addwf	??i2_vfpfcnvrt,f,c
 15290  002BDA  0E00               	movlw	0
 15291  002BDC  2253               	addwfc	??i2_vfpfcnvrt+1,f,c
 15292  002BDE  C052  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 15293  002BE2  C053  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 15294  002BE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15295  002BE6  6AF8               	clrf	tblptru,c
 15296  002BE8                     	endif
 15297  002BE8                     	if	0	;tblptru may be non-zero
 15298  002BE8                     	endif
 15299  002BE8  0008               	tblrd		*
 15300  002BEA  CFF5 F0AB          	movff	tablat,i2vfpfcnvrt@c
 15301  002BEE  0EBF               	movlw	191
 15302  002BF0  6E52               	movwf	??i2_vfpfcnvrt& (0+255),c
 15303  002BF2  0EFF               	movlw	255
 15304  002BF4  6E53               	movwf	(??i2_vfpfcnvrt+1)& (0+255),c
 15305  002BF6  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15306  002BFA  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15307  002BFE  CFDE FFF6          	movff	postinc2,tblptrl
 15308  002C02  CFDD FFF7          	movff	postdec2,tblptrh
 15309  002C06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15310  002C06  6AF8               	clrf	tblptru,c
 15311  002C08                     	endif
 15312  002C08                     	if	0	;tblptru may be non-zero
 15313  002C08                     	endif
 15314  002C08  0008               	tblrd		*
 15315  002C0A  50F5               	movf	tablat,w,c
 15316  002C0C  6E54               	movwf	(??i2_vfpfcnvrt+2)& (0+255),c
 15317  002C0E  6A55               	clrf	(??i2_vfpfcnvrt+3)& (0+255),c
 15318  002C10  5052               	movf	??i2_vfpfcnvrt,w,c
 15319  002C12  2654               	addwf	??i2_vfpfcnvrt+2,f,c
 15320  002C14  5053               	movf	??i2_vfpfcnvrt+1,w,c
 15321  002C16  2255               	addwfc	??i2_vfpfcnvrt+3,f,c
 15322  002C18  5055               	movf	??i2_vfpfcnvrt+3,w,c
 15323  002C1A  E106               	bnz	i2u928_40
 15324  002C1C  0E1A               	movlw	26
 15325  002C1E  5C54               	subwf	??i2_vfpfcnvrt+2,w,c
 15326  002C20  B0D8               	btfsc	status,0,c
 15327  002C22  D002               	goto	i2u928_40
 15328  002C24  0E01               	movlw	1
 15329  002C26  D001               	goto	i2u929_40
 15330  002C28                     i2u928_40:
 15331  002C28  0E00               	movlw	0
 15332  002C2A                     i2u929_40:
 15333  002C2A  0100               	movlb	0	; () banked
 15334  002C2C  6FA2               	movwf	i2_vfpfcnvrt$1568& (0+255),b
 15335  002C2E  6BA3               	clrf	(i2_vfpfcnvrt$1568+1)& (0+255),b
 15336                           
 15337                           ; BSR set to: 0
 15338  002C30  51A2               	movf	i2_vfpfcnvrt$1568& (0+255),w,b
 15339  002C32  11A3               	iorwf	(i2_vfpfcnvrt$1568+1)& (0+255),w,b
 15340                           
 15341                           ; BSR set to: 0
 15342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 15343                           
 15344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 15345                           
 15346                           ; BSR set to: 0
 15347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 15348  002C34  C050  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 15349  002C38  C051  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 15350  002C3C  CFDF F052          	movff	indf2,??i2_vfpfcnvrt
 15351  002C40  0E04               	movlw	4
 15352  002C42  26DE               	addwf	postinc2,f,c
 15353  002C44  CFDF F053          	movff	indf2,??i2_vfpfcnvrt+1
 15354  002C48  0E00               	movlw	0
 15355  002C4A  22DD               	addwfc	postdec2,f,c
 15356  002C4C  C052  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 15357  002C50  C053  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 15358  002C54  CFDE F0A4          	movff	postinc2,i2vfpfcnvrt@f
 15359  002C58  CFDE F0A5          	movff	postinc2,i2vfpfcnvrt@f+1
 15360  002C5C  CFDE F0A6          	movff	postinc2,i2vfpfcnvrt@f+2
 15361  002C60  CFDE F0A7          	movff	postinc2,i2vfpfcnvrt@f+3
 15362                           
 15363                           ; BSR set to: 0
 15364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 15365                           
 15366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
 15367  002C64  0E02               	movlw	2
 15368  002C66  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15369  002C6A  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15370  002C6E  26DE               	addwf	postinc2,f,c
 15371  002C70  0E00               	movlw	0
 15372  002C72  22DD               	addwfc	postdec2,f,c
 15373  002C74  D781               	goto	i2l6821
 15374  002C76                     i2l6841:
 15375                           
 15376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 15377  002C76  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15378  002C7A  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15379  002C7E  CFDE FFF6          	movff	postinc2,tblptrl
 15380  002C82  CFDD FFF7          	movff	postdec2,tblptrh
 15381  002C86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15382  002C86  6AF8               	clrf	tblptru,c
 15383  002C88                     	endif
 15384  002C88                     	if	0	;tblptru may be non-zero
 15385  002C88                     	endif
 15386  002C88  0008               	tblrd		*
 15387  002C8A  50F5               	movf	tablat,w,c
 15388  002C8C  0A25               	xorlw	37
 15389  002C8E  A4D8               	btfss	status,2,c
 15390  002C90  D016               	goto	i2l6851
 15391                           
 15392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 15393  002C92  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15394  002C96  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15395  002C9A  2ADE               	incf	postinc2,f,c
 15396  002C9C  0E00               	movlw	0
 15397  002C9E  22DD               	addwfc	postdec2,f,c
 15398                           
 15399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 15400  002CA0  0E00               	movlw	0
 15401  002CA2  6E04               	movwf	i2fputc@c+1,c
 15402  002CA4  0E25               	movlw	37
 15403  002CA6  6E03               	movwf	i2fputc@c,c
 15404  002CA8  C04C  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 15405  002CAC  C04D  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 15406  002CB0  EC86  F031         	call	i2_fputc	;wreg free
 15407  002CB4                     i2l6847:
 15408                           
 15409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 15410  002CB4  0E00               	movlw	0
 15411  002CB6  6E4D               	movwf	?i2_vfpfcnvrt+1,c
 15412  002CB8  0E01               	movlw	1
 15413  002CBA  6E4C               	movwf	?i2_vfpfcnvrt,c
 15414  002CBC  0012               	return	
 15415  002CBE                     i2l6851:
 15416                           
 15417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 15418  002CBE  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15419  002CC2  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15420  002CC6  2ADE               	incf	postinc2,f,c
 15421  002CC8  0E00               	movlw	0
 15422  002CCA  22DD               	addwfc	postdec2,f,c
 15423                           
 15424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 15425  002CCC  0E00               	movlw	0
 15426  002CCE  6E4D               	movwf	?i2_vfpfcnvrt+1,c
 15427  002CD0  0E00               	movlw	0
 15428  002CD2  6E4C               	movwf	?i2_vfpfcnvrt,c
 15429  002CD4  0012               	return	
 15430  002CD6                     i2l6857:
 15431                           
 15432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 15433  002CD6  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15434  002CDA  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15435  002CDE  CFDE FFF6          	movff	postinc2,tblptrl
 15436  002CE2  CFDD FFF7          	movff	postdec2,tblptrh
 15437  002CE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15438  002CE6  6AF8               	clrf	tblptru,c
 15439  002CE8                     	endif
 15440  002CE8                     	if	0	;tblptru may be non-zero
 15441  002CE8                     	endif
 15442  002CE8  0008               	tblrd		*
 15443  002CEA  50F5               	movf	tablat,w,c
 15444  002CEC  6E03               	movwf	i2fputc@c,c
 15445  002CEE  6A04               	clrf	i2fputc@c+1,c
 15446  002CF0  C04C  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 15447  002CF4  C04D  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 15448  002CF8  EC86  F031         	call	i2_fputc	;wreg free
 15449                           
 15450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 15451  002CFC  C04E  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 15452  002D00  C04F  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 15453  002D04  2ADE               	incf	postinc2,f,c
 15454  002D06  0E00               	movlw	0
 15455  002D08  22DD               	addwfc	postdec2,f,c
 15456  002D0A  D7D4               	goto	i2l6847
 15457  002D0C                     __end_ofi2_vfpfcnvrt:
 15458                           	opt callstack 0
 15459                           
 15460 ;; *************** function i2_strncmp *****************
 15461 ;; Defined at:
 15462 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
 15463 ;; Parameters:    Size  Location     Type
 15464 ;;  _l              2    0[COMRAM] PTR const unsigned char 
 15465 ;;		 -> i2vfpfcnvrt@ct(3), vfpfcnvrt@ct(3), 
 15466 ;;  _r              2    2[COMRAM] PTR const unsigned char 
 15467 ;;		 -> STR_23(3), 
 15468 ;;  n               2    4[COMRAM] unsigned int 
 15469 ;; Auto vars:     Size  Location     Type
 15470 ;;  strncmp         2    9[COMRAM] PTR const unsigned char 
 15471 ;;		 -> STR_23(3), 
 15472 ;;  strncmp         2    7[COMRAM] PTR const unsigned char 
 15473 ;;		 -> i2vfpfcnvrt@ct(3), vfpfcnvrt@ct(3), 
 15474 ;; Return value:  Size  Location     Type
 15475 ;;                  2    0[COMRAM] int 
 15476 ;; Registers used:
 15477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15478 ;; Tracked objects:
 15479 ;;		On entry : 0/0
 15480 ;;		On exit  : 0/0
 15481 ;;		Unchanged: 0/0
 15482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15483 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15484 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15486 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15487 ;;Total ram usage:       11 bytes
 15488 ;; Hardware stack levels used:    1
 15489 ;; This function calls:
 15490 ;;		Nothing
 15491 ;; This function is called by:
 15492 ;;		i2_vfpfcnvrt
 15493 ;; This function uses a non-reentrant model
 15494 ;;
 15495                           
 15496                           	psect	text78
 15497  00611C                     __ptext78:
 15498                           	opt callstack 0
 15499  00611C                     i2_strncmp:
 15500                           	opt callstack 11
 15501                           
 15502                           ;incstack = 0
 15503  00611C  C001  F008         	movff	i2strncmp@_l,i2strncmp@l
 15504  006120  C002  F009         	movff	i2strncmp@_l+1,i2strncmp@l+1
 15505  006124  C003  F00A         	movff	i2strncmp@_r,i2strncmp@r
 15506  006128  C004  F00B         	movff	i2strncmp@_r+1,i2strncmp@r+1
 15507  00612C  0605               	decf	i2strncmp@n,f,c
 15508  00612E  A0D8               	btfss	status,0,c
 15509  006130  0606               	decf	i2strncmp@n+1,f,c
 15510  006132  2805               	incf	i2strncmp@n,w,c
 15511  006134  E10F               	bnz	i2l6529
 15512  006136  2806               	incf	i2strncmp@n+1,w,c
 15513  006138  A4D8               	btfss	status,2,c
 15514  00613A  D00C               	goto	i2l6529
 15515  00613C  0E00               	movlw	0
 15516  00613E  6E02               	movwf	?i2_strncmp+1,c
 15517  006140  0E00               	movlw	0
 15518  006142  6E01               	movwf	?i2_strncmp,c
 15519  006144  0012               	return	
 15520  006146                     i2l6527:
 15521  006146  4A08               	infsnz	i2strncmp@l,f,c
 15522  006148  2A09               	incf	i2strncmp@l+1,f,c
 15523  00614A  4A0A               	infsnz	i2strncmp@r,f,c
 15524  00614C  2A0B               	incf	i2strncmp@r+1,f,c
 15525  00614E  0605               	decf	i2strncmp@n,f,c
 15526  006150  A0D8               	btfss	status,0,c
 15527  006152  0606               	decf	i2strncmp@n+1,f,c
 15528  006154                     i2l6529:
 15529  006154  C008  FFD9         	movff	i2strncmp@l,fsr2l
 15530  006158  C009  FFDA         	movff	i2strncmp@l+1,fsr2h
 15531  00615C  50DF               	movf	indf2,w,c
 15532  00615E  B4D8               	btfsc	status,2,c
 15533  006160  D01E               	goto	i2u872_40
 15534  006162  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 15535  006166  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 15536  00616A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15537  00616A  6AF8               	clrf	tblptru,c
 15538  00616C                     	endif
 15539  00616C                     	if	0	;tblptru may be non-zero
 15540  00616C                     	endif
 15541  00616C  0008               	tblrd		*
 15542  00616E  50F5               	movf	tablat,w,c
 15543  006170  0900               	iorlw	0
 15544  006172  B4D8               	btfsc	status,2,c
 15545  006174  D014               	goto	i2u872_40
 15546  006176  5005               	movf	i2strncmp@n,w,c
 15547  006178  1006               	iorwf	i2strncmp@n+1,w,c
 15548  00617A  B4D8               	btfsc	status,2,c
 15549  00617C  D010               	goto	i2u872_40
 15550  00617E  C008  FFD9         	movff	i2strncmp@l,fsr2l
 15551  006182  C009  FFDA         	movff	i2strncmp@l+1,fsr2h
 15552  006186  50DF               	movf	indf2,w,c
 15553  006188  6E07               	movwf	??i2_strncmp& (0+255),c
 15554  00618A  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 15555  00618E  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 15556  006192                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15557  006192  6AF8               	clrf	tblptru,c
 15558  006194                     	endif
 15559  006194                     	if	0	;tblptru may be non-zero
 15560  006194                     	endif
 15561  006194  0008               	tblrd		*
 15562  006196  50F5               	movf	tablat,w,c
 15563  006198  1807               	xorwf	??i2_strncmp,w,c
 15564  00619A  B4D8               	btfsc	status,2,c
 15565  00619C  D7D4               	goto	i2l6527
 15566  00619E                     i2u872_40:
 15567  00619E  C008  FFD9         	movff	i2strncmp@l,fsr2l
 15568  0061A2  C009  FFDA         	movff	i2strncmp@l+1,fsr2h
 15569  0061A6  50DF               	movf	indf2,w,c
 15570  0061A8  6E07               	movwf	??i2_strncmp& (0+255),c
 15571  0061AA  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 15572  0061AE  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 15573  0061B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15574  0061B2  6AF8               	clrf	tblptru,c
 15575  0061B4                     	endif
 15576  0061B4                     	if	0	;tblptru may be non-zero
 15577  0061B4                     	endif
 15578  0061B4  0008               	tblrd		*
 15579  0061B6  50F5               	movf	tablat,w,c
 15580  0061B8  5C07               	subwf	??i2_strncmp,w,c
 15581  0061BA  6E01               	movwf	?i2_strncmp,c
 15582  0061BC  6A02               	clrf	?i2_strncmp+1,c
 15583  0061BE  A0D8               	btfss	status,0,c
 15584  0061C0  0602               	decf	?i2_strncmp+1,f,c
 15585  0061C2  0012               	return		;funcret
 15586  0061C4                     __end_ofi2_strncmp:
 15587                           	opt callstack 0
 15588                           
 15589 ;; *************** function i2_efgtoa *****************
 15590 ;; Defined at:
 15591 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 15592 ;; Parameters:    Size  Location     Type
 15593 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 15594 ;;		 -> sprintf@f(6), NULL(0), 
 15595 ;;  f               4   65[COMRAM] PTR struct _IO_FILE
 15596 ;;  c               1   69[COMRAM] unsigned char 
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;  efgtoa          4   52[BANK0 ] unsigned char 
 15599 ;;  efgtoa          4   44[BANK0 ] unsigned char 
 15600 ;;  efgtoa          4   38[BANK0 ] unsigned char 
 15601 ;;  efgtoa          4   34[BANK0 ] unsigned char 
 15602 ;;  efgtoa          4    0[BANK0 ] unsigned char 
 15603 ;;  efgtoa          2   50[BANK0 ] int 
 15604 ;;  efgtoa          2   48[BANK0 ] int 
 15605 ;;  efgtoa          2   42[BANK0 ] int 
 15606 ;;  efgtoa          2   31[BANK0 ] int 
 15607 ;;  efgtoa          2   28[BANK0 ] int 
 15608 ;;  efgtoa          2   26[BANK0 ] int 
 15609 ;;  efgtoa          2   24[BANK0 ] int 
 15610 ;;  efgtoa          2   22[BANK0 ] int 
 15611 ;;  efgtoa          2   20[BANK0 ] int 
 15612 ;;  efgtoa          2   18[BANK0 ] int 
 15613 ;;  efgtoa          2   16[BANK0 ] int 
 15614 ;;  efgtoa          1   33[BANK0 ] unsigned char 
 15615 ;;  efgtoa          1   30[BANK0 ] unsigned char 
 15616 ;; Return value:  Size  Location     Type
 15617 ;;                  2   63[COMRAM] int 
 15618 ;; Registers used:
 15619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15620 ;; Tracked objects:
 15621 ;;		On entry : 0/0
 15622 ;;		On exit  : 0/0
 15623 ;;		Unchanged: 0/0
 15624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15625 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15626 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15627 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15628 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15629 ;;Total ram usage:       68 bytes
 15630 ;; Hardware stack levels used:    1
 15631 ;; Hardware stack levels required when called:    5
 15632 ;; This function calls:
 15633 ;;		i2___awdiv
 15634 ;;		i2___awmod
 15635 ;;		i2___fladd
 15636 ;;		i2___fldiv
 15637 ;;		i2___fleq
 15638 ;;		i2___flge
 15639 ;;		i2___flmul
 15640 ;;		i2___flneg
 15641 ;;		i2___flsub
 15642 ;;		i2___fltol
 15643 ;;		i2___fpclassifyf
 15644 ;;		i2_floorf
 15645 ;;		i2_isupper
 15646 ;;		i2_pad
 15647 ;;		i2_strcpy
 15648 ;;		i2_tolower
 15649 ;; This function is called by:
 15650 ;;		i2_vfpfcnvrt
 15651 ;; This function uses a non-reentrant model
 15652 ;;
 15653                           
 15654                           	psect	text79
 15655  0010FA                     __ptext79:
 15656                           	opt callstack 0
 15657  0010FA                     i2_efgtoa:
 15658                           	opt callstack 6
 15659                           
 15660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
 15661                           
 15662                           ;incstack = 0
 15663  0010FA  0E00               	movlw	0
 15664  0010FC  0100               	movlb	0	; () banked
 15665  0010FE  6F7B               	movwf	(i2efgtoa@sign+1)& (0+255),b
 15666  001100  0E00               	movlw	0
 15667  001102  6F7A               	movwf	i2efgtoa@sign& (0+255),b
 15668                           
 15669                           ; BSR set to: 0
 15670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
 15671  001104  C042  F08C         	movff	i2efgtoa@f,i2efgtoa@g
 15672  001108  C043  F08D         	movff	i2efgtoa@f+1,i2efgtoa@g+1
 15673  00110C  C044  F08E         	movff	i2efgtoa@f+2,i2efgtoa@g+2
 15674  001110  C045  F08F         	movff	i2efgtoa@f+3,i2efgtoa@g+3
 15675                           
 15676                           ; BSR set to: 0
 15677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
 15678  001114  AF8F               	btfss	(i2efgtoa@g+3)& (0+255),7,b
 15679  001116  D016               	goto	i2l6191
 15680                           
 15681                           ; BSR set to: 0
 15682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
 15683  001118  0E00               	movlw	0
 15684  00111A  6F7B               	movwf	(i2efgtoa@sign+1)& (0+255),b
 15685  00111C  0E01               	movlw	1
 15686  00111E  6F7A               	movwf	i2efgtoa@sign& (0+255),b
 15687                           
 15688                           ; BSR set to: 0
 15689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
 15690  001120  C08C  F001         	movff	i2efgtoa@g,i2___flneg@f1
 15691  001124  C08D  F002         	movff	i2efgtoa@g+1,i2___flneg@f1+1
 15692  001128  C08E  F003         	movff	i2efgtoa@g+2,i2___flneg@f1+2
 15693  00112C  C08F  F004         	movff	i2efgtoa@g+3,i2___flneg@f1+3
 15694  001130  EC27  F039         	call	i2___flneg	;wreg free
 15695  001134  C001  F08C         	movff	?i2___flneg,i2efgtoa@g
 15696  001138  C002  F08D         	movff	?i2___flneg+1,i2efgtoa@g+1
 15697  00113C  C003  F08E         	movff	?i2___flneg+2,i2efgtoa@g+2
 15698  001140  C004  F08F         	movff	?i2___flneg+3,i2efgtoa@g+3
 15699  001144                     i2l6191:
 15700                           
 15701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
 15702  001144  0E00               	movlw	0
 15703  001146  0100               	movlb	0	; () banked
 15704  001148  6F93               	movwf	(i2efgtoa@n+1)& (0+255),b
 15705  00114A  0E00               	movlw	0
 15706  00114C  6F92               	movwf	i2efgtoa@n& (0+255),b
 15707                           
 15708                           ; BSR set to: 0
 15709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
 15710  00114E  C1DD  F07F         	movff	_width,i2efgtoa@w
 15711  001152  C1DE  F080         	movff	_width+1,i2efgtoa@w+1
 15712                           
 15713                           ; BSR set to: 0
 15714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
 15715  001156  517A               	movf	i2efgtoa@sign& (0+255),w,b
 15716  001158  117B               	iorwf	(i2efgtoa@sign+1)& (0+255),w,b
 15717  00115A  A4D8               	btfss	status,2,c
 15718  00115C  D003               	goto	i2u811_40
 15719                           
 15720                           ; BSR set to: 0
 15721  00115E  0101               	movlb	1	; () banked
 15722  001160  A5E1               	btfss	_flags& (0+255),2,b
 15723  001162  D014               	goto	i2l6211
 15724  001164                     i2u811_40:
 15725                           
 15726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
 15727  001164  0100               	movlb	0	; () banked
 15728  001166  517A               	movf	i2efgtoa@sign& (0+255),w,b
 15729  001168  117B               	iorwf	(i2efgtoa@sign+1)& (0+255),w,b
 15730  00116A  A4D8               	btfss	status,2,c
 15731  00116C  D004               	goto	i2l6203
 15732                           
 15733                           ; BSR set to: 0
 15734  00116E  0E00               	movlw	0
 15735  001170  6F65               	movwf	(i2_efgtoa$1538+1)& (0+255),b
 15736  001172  0E2B               	movlw	43
 15737  001174  D003               	goto	L15
 15738  001176                     i2l6203:
 15739                           
 15740                           ; BSR set to: 0
 15741  001176  0E00               	movlw	0
 15742  001178  6F65               	movwf	(i2_efgtoa$1538+1)& (0+255),b
 15743  00117A  0E2D               	movlw	45
 15744  00117C                     L15:
 15745  00117C  6F64               	movwf	i2_efgtoa$1538& (0+255),b
 15746                           
 15747                           ; BSR set to: 0
 15748  00117E  C064  F264         	movff	i2_efgtoa$1538,_dbuf
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
 15752  001182  4B92               	infsnz	i2efgtoa@n& (0+255),f,b
 15753  001184  2B93               	incf	(i2efgtoa@n+1)& (0+255),f,b
 15754                           
 15755                           ; BSR set to: 0
 15756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
 15757  001186  077F               	decf	i2efgtoa@w& (0+255),f,b
 15758  001188  A0D8               	btfss	status,0,c
 15759  00118A  0780               	decf	(i2efgtoa@w+1)& (0+255),f,b
 15760  00118C                     i2l6211:
 15761                           
 15762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15763  00118C  C08C  F001         	movff	i2efgtoa@g,i2___fpclassifyf@x
 15764  001190  C08D  F002         	movff	i2efgtoa@g+1,i2___fpclassifyf@x+1
 15765  001194  C08E  F003         	movff	i2efgtoa@g+2,i2___fpclassifyf@x+2
 15766  001198  C08F  F004         	movff	i2efgtoa@g+3,i2___fpclassifyf@x+3
 15767  00119C  EC05  F02E         	call	i2___fpclassifyf	;wreg free
 15768  0011A0  0401               	decf	?i2___fpclassifyf,w,c
 15769  0011A2  1002               	iorwf	?i2___fpclassifyf+1,w,c
 15770  0011A4  A4D8               	btfss	status,2,c
 15771  0011A6  D04C               	goto	i2l6229
 15772  0011A8  0EBF               	movlw	191
 15773  0011AA  6E47               	movwf	??i2_efgtoa& (0+255),c
 15774  0011AC  0EFF               	movlw	255
 15775  0011AE  6E48               	movwf	(??i2_efgtoa+1)& (0+255),c
 15776  0011B0  5046               	movf	i2efgtoa@c,w,c
 15777  0011B2  6E49               	movwf	(??i2_efgtoa+2)& (0+255),c
 15778  0011B4  6A4A               	clrf	(??i2_efgtoa+3)& (0+255),c
 15779  0011B6  5047               	movf	??i2_efgtoa,w,c
 15780  0011B8  2649               	addwf	??i2_efgtoa+2,f,c
 15781  0011BA  5048               	movf	??i2_efgtoa+1,w,c
 15782  0011BC  224A               	addwfc	??i2_efgtoa+3,f,c
 15783  0011BE  504A               	movf	??i2_efgtoa+3,w,c
 15784  0011C0  E106               	bnz	i2u814_40
 15785  0011C2  0E1A               	movlw	26
 15786  0011C4  5C49               	subwf	??i2_efgtoa+2,w,c
 15787  0011C6  B0D8               	btfsc	status,0,c
 15788  0011C8  D002               	goto	i2u814_40
 15789  0011CA  0E01               	movlw	1
 15790  0011CC  D001               	goto	i2u815_40
 15791  0011CE                     i2u814_40:
 15792  0011CE  0E00               	movlw	0
 15793  0011D0                     i2u815_40:
 15794  0011D0  0100               	movlb	0	; () banked
 15795  0011D2  6F66               	movwf	i2_efgtoa$1539& (0+255),b
 15796  0011D4  6B67               	clrf	(i2_efgtoa$1539+1)& (0+255),b
 15797                           
 15798                           ; BSR set to: 0
 15799  0011D6  5166               	movf	i2_efgtoa$1539& (0+255),w,b
 15800  0011D8  1167               	iorwf	(i2_efgtoa$1539+1)& (0+255),w,b
 15801  0011DA  B4D8               	btfsc	status,2,c
 15802  0011DC  D00D               	goto	i2l6221
 15803                           
 15804                           ; BSR set to: 0
 15805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
 15806  0011DE  0E64               	movlw	low _dbuf
 15807  0011E0  2592               	addwf	i2efgtoa@n& (0+255),w,b
 15808  0011E2  6E01               	movwf	i2strcpy@dest,c
 15809  0011E4  0E02               	movlw	high _dbuf
 15810  0011E6  2193               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 15811  0011E8  6E02               	movwf	i2strcpy@dest+1,c
 15812  0011EA  0EE2               	movlw	low STR_13
 15813  0011EC  6E03               	movwf	i2strcpy@src,c
 15814  0011EE  0E10               	movlw	high STR_13
 15815  0011F0  6E04               	movwf	i2strcpy@src+1,c
 15816  0011F2  ECB2  F036         	call	i2_strcpy	;wreg free
 15817                           
 15818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
 15819  0011F6  D00C               	goto	i2l6223
 15820  0011F8                     i2l6221:
 15821                           
 15822                           ; BSR set to: 0
 15823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
 15824  0011F8  0E64               	movlw	low _dbuf
 15825  0011FA  2592               	addwf	i2efgtoa@n& (0+255),w,b
 15826  0011FC  6E01               	movwf	i2strcpy@dest,c
 15827  0011FE  0E02               	movlw	high _dbuf
 15828  001200  2193               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 15829  001202  6E02               	movwf	i2strcpy@dest+1,c
 15830  001204  0EEA               	movlw	low STR_14
 15831  001206  6E03               	movwf	i2strcpy@src,c
 15832  001208  0E10               	movlw	high STR_14
 15833  00120A  6E04               	movwf	i2strcpy@src+1,c
 15834  00120C  ECB2  F036         	call	i2_strcpy	;wreg free
 15835  001210                     i2l6223:
 15836                           
 15837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 15838  001210  0100               	movlb	0	; () banked
 15839  001212  0EFD               	movlw	253
 15840  001214  277F               	addwf	i2efgtoa@w& (0+255),f,b
 15841  001216  0EFF               	movlw	255
 15842  001218  2380               	addwfc	(i2efgtoa@w+1)& (0+255),f,b
 15843  00121A                     i2l6225:
 15844                           
 15845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
 15846  00121A  C040  F013         	movff	i2efgtoa@fp,i2pad@fp
 15847  00121E  C041  F014         	movff	i2efgtoa@fp+1,i2pad@fp+1
 15848  001222  0E64               	movlw	low _dbuf
 15849  001224  6E15               	movwf	i2pad@buf,c
 15850  001226  0E02               	movlw	high _dbuf
 15851  001228  6E16               	movwf	i2pad@buf+1,c
 15852  00122A  C07F  F017         	movff	i2efgtoa@w,i2pad@p
 15853  00122E  C080  F018         	movff	i2efgtoa@w+1,i2pad@p+1
 15854  001232  EC73  F032         	call	i2_pad	;wreg free
 15855  001236  C013  F040         	movff	?i2_pad,?i2_efgtoa
 15856  00123A  C014  F041         	movff	?i2_pad+1,?i2_efgtoa+1
 15857  00123E  0012               	return	
 15858  001240                     i2l6229:
 15859                           
 15860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15861  001240  C08C  F001         	movff	i2efgtoa@g,i2___fpclassifyf@x
 15862  001244  C08D  F002         	movff	i2efgtoa@g+1,i2___fpclassifyf@x+1
 15863  001248  C08E  F003         	movff	i2efgtoa@g+2,i2___fpclassifyf@x+2
 15864  00124C  C08F  F004         	movff	i2efgtoa@g+3,i2___fpclassifyf@x+3
 15865  001250  EC05  F02E         	call	i2___fpclassifyf	;wreg free
 15866  001254  5001               	movf	?i2___fpclassifyf,w,c
 15867  001256  1002               	iorwf	?i2___fpclassifyf+1,w,c
 15868  001258  A4D8               	btfss	status,2,c
 15869  00125A  D035               	goto	i2l6247
 15870  00125C  0EBF               	movlw	191
 15871  00125E  6E47               	movwf	??i2_efgtoa& (0+255),c
 15872  001260  0EFF               	movlw	255
 15873  001262  6E48               	movwf	(??i2_efgtoa+1)& (0+255),c
 15874  001264  5046               	movf	i2efgtoa@c,w,c
 15875  001266  6E49               	movwf	(??i2_efgtoa+2)& (0+255),c
 15876  001268  6A4A               	clrf	(??i2_efgtoa+3)& (0+255),c
 15877  00126A  5047               	movf	??i2_efgtoa,w,c
 15878  00126C  2649               	addwf	??i2_efgtoa+2,f,c
 15879  00126E  5048               	movf	??i2_efgtoa+1,w,c
 15880  001270  224A               	addwfc	??i2_efgtoa+3,f,c
 15881  001272  504A               	movf	??i2_efgtoa+3,w,c
 15882  001274  E106               	bnz	i2u818_40
 15883  001276  0E1A               	movlw	26
 15884  001278  5C49               	subwf	??i2_efgtoa+2,w,c
 15885  00127A  B0D8               	btfsc	status,0,c
 15886  00127C  D002               	goto	i2u818_40
 15887  00127E  0E01               	movlw	1
 15888  001280  D001               	goto	i2u819_40
 15889  001282                     i2u818_40:
 15890  001282  0E00               	movlw	0
 15891  001284                     i2u819_40:
 15892  001284  0100               	movlb	0	; () banked
 15893  001286  6F68               	movwf	i2_efgtoa$1543& (0+255),b
 15894  001288  6B69               	clrf	(i2_efgtoa$1543+1)& (0+255),b
 15895                           
 15896                           ; BSR set to: 0
 15897  00128A  5168               	movf	i2_efgtoa$1543& (0+255),w,b
 15898  00128C  1169               	iorwf	(i2_efgtoa$1543+1)& (0+255),w,b
 15899  00128E  B4D8               	btfsc	status,2,c
 15900  001290  D00D               	goto	i2l6239
 15901                           
 15902                           ; BSR set to: 0
 15903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
 15904  001292  0E64               	movlw	low _dbuf
 15905  001294  2592               	addwf	i2efgtoa@n& (0+255),w,b
 15906  001296  6E01               	movwf	i2strcpy@dest,c
 15907  001298  0E02               	movlw	high _dbuf
 15908  00129A  2193               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 15909  00129C  6E02               	movwf	i2strcpy@dest+1,c
 15910  00129E  0EE6               	movlw	low STR_17
 15911  0012A0  6E03               	movwf	i2strcpy@src,c
 15912  0012A2  0E10               	movlw	high STR_17
 15913  0012A4  6E04               	movwf	i2strcpy@src+1,c
 15914  0012A6  ECB2  F036         	call	i2_strcpy	;wreg free
 15915                           
 15916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
 15917  0012AA  D7B2               	goto	i2l6223
 15918  0012AC                     i2l6239:
 15919                           
 15920                           ; BSR set to: 0
 15921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
 15922  0012AC  0E64               	movlw	low _dbuf
 15923  0012AE  2592               	addwf	i2efgtoa@n& (0+255),w,b
 15924  0012B0  6E01               	movwf	i2strcpy@dest,c
 15925  0012B2  0E02               	movlw	high _dbuf
 15926  0012B4  2193               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 15927  0012B6  6E02               	movwf	i2strcpy@dest+1,c
 15928  0012B8  0EEE               	movlw	low STR_18
 15929  0012BA  6E03               	movwf	i2strcpy@src,c
 15930  0012BC  0E10               	movlw	high STR_18
 15931  0012BE  6E04               	movwf	i2strcpy@src+1,c
 15932  0012C0  ECB2  F036         	call	i2_strcpy	;wreg free
 15933  0012C4  D7A5               	goto	i2l6223
 15934  0012C6                     i2l6247:
 15935                           
 15936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
 15937  0012C6  0E00               	movlw	0
 15938  0012C8  0100               	movlb	0	; () banked
 15939  0012CA  6F94               	movwf	i2efgtoa@u& (0+255),b
 15940  0012CC  0E00               	movlw	0
 15941  0012CE  6F95               	movwf	(i2efgtoa@u+1)& (0+255),b
 15942  0012D0  0E80               	movlw	128
 15943  0012D2  6F96               	movwf	(i2efgtoa@u+2)& (0+255),b
 15944  0012D4  0E3F               	movlw	63
 15945  0012D6  6F97               	movwf	(i2efgtoa@u+3)& (0+255),b
 15946                           
 15947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
 15948  0012D8  0E00               	movlw	0
 15949  0012DA  6F91               	movwf	(i2efgtoa@e+1)& (0+255),b
 15950  0012DC  0E00               	movlw	0
 15951  0012DE  6F90               	movwf	i2efgtoa@e& (0+255),b
 15952                           
 15953                           ; BSR set to: 0
 15954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
 15955  0012E0  C08C  F001         	movff	i2efgtoa@g,i2___fleq@ff1
 15956  0012E4  C08D  F002         	movff	i2efgtoa@g+1,i2___fleq@ff1+1
 15957  0012E8  C08E  F003         	movff	i2efgtoa@g+2,i2___fleq@ff1+2
 15958  0012EC  C08F  F004         	movff	i2efgtoa@g+3,i2___fleq@ff1+3
 15959  0012F0  0E00               	movlw	0
 15960  0012F2  6E05               	movwf	i2___fleq@ff2,c
 15961  0012F4  0E00               	movlw	0
 15962  0012F6  6E06               	movwf	i2___fleq@ff2+1,c
 15963  0012F8  0E00               	movlw	0
 15964  0012FA  6E07               	movwf	i2___fleq@ff2+2,c
 15965  0012FC  0E00               	movlw	0
 15966  0012FE  6E08               	movwf	i2___fleq@ff2+3,c
 15967  001300  ECE5  F033         	call	i2___fleq	;wreg free
 15968  001304  A0D8               	btfss	status,0,c
 15969  001306  D01E               	goto	i2l6257
 15970  001308  D076               	goto	i2u823_40
 15971  00130A                     i2l6253:
 15972                           
 15973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
 15974  00130A  C094  F01B         	movff	i2efgtoa@u,i2___flmul@b
 15975  00130E  C095  F01C         	movff	i2efgtoa@u+1,i2___flmul@b+1
 15976  001312  C096  F01D         	movff	i2efgtoa@u+2,i2___flmul@b+2
 15977  001316  C097  F01E         	movff	i2efgtoa@u+3,i2___flmul@b+3
 15978  00131A  0E00               	movlw	0
 15979  00131C  6E1F               	movwf	i2___flmul@a,c
 15980  00131E  0E00               	movlw	0
 15981  001320  6E20               	movwf	i2___flmul@a+1,c
 15982  001322  0E20               	movlw	32
 15983  001324  6E21               	movwf	i2___flmul@a+2,c
 15984  001326  0E41               	movlw	65
 15985  001328  6E22               	movwf	i2___flmul@a+3,c
 15986  00132A  EC30  F018         	call	i2___flmul	;wreg free
 15987  00132E  C01B  F094         	movff	?i2___flmul,i2efgtoa@u
 15988  001332  C01C  F095         	movff	?i2___flmul+1,i2efgtoa@u+1
 15989  001336  C01D  F096         	movff	?i2___flmul+2,i2efgtoa@u+2
 15990  00133A  C01E  F097         	movff	?i2___flmul+3,i2efgtoa@u+3
 15991                           
 15992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
 15993  00133E  0100               	movlb	0	; () banked
 15994  001340  4B90               	infsnz	i2efgtoa@e& (0+255),f,b
 15995  001342  2B91               	incf	(i2efgtoa@e+1)& (0+255),f,b
 15996  001344                     i2l6257:
 15997                           
 15998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
 15999  001344  C08C  F034         	movff	i2efgtoa@g,i2___flge@ff1
 16000  001348  C08D  F035         	movff	i2efgtoa@g+1,i2___flge@ff1+1
 16001  00134C  C08E  F036         	movff	i2efgtoa@g+2,i2___flge@ff1+2
 16002  001350  C08F  F037         	movff	i2efgtoa@g+3,i2___flge@ff1+3
 16003  001354  0E00               	movlw	0
 16004  001356  6E1F               	movwf	i2___flmul@a,c
 16005  001358  0E00               	movlw	0
 16006  00135A  6E20               	movwf	i2___flmul@a+1,c
 16007  00135C  0E20               	movlw	32
 16008  00135E  6E21               	movwf	i2___flmul@a+2,c
 16009  001360  0E41               	movlw	65
 16010  001362  6E22               	movwf	i2___flmul@a+3,c
 16011  001364  C094  F01B         	movff	i2efgtoa@u,i2___flmul@b
 16012  001368  C095  F01C         	movff	i2efgtoa@u+1,i2___flmul@b+1
 16013  00136C  C096  F01D         	movff	i2efgtoa@u+2,i2___flmul@b+2
 16014  001370  C097  F01E         	movff	i2efgtoa@u+3,i2___flmul@b+3
 16015  001374  EC30  F018         	call	i2___flmul	;wreg free
 16016  001378  C01B  F038         	movff	?i2___flmul,i2___flge@ff2
 16017  00137C  C01C  F039         	movff	?i2___flmul+1,i2___flge@ff2+1
 16018  001380  C01D  F03A         	movff	?i2___flmul+2,i2___flge@ff2+2
 16019  001384  C01E  F03B         	movff	?i2___flmul+3,i2___flge@ff2+3
 16020  001388  EC36  F02D         	call	i2___flge	;wreg free
 16021  00138C  A0D8               	btfss	status,0,c
 16022  00138E  D01F               	goto	i2l6263
 16023  001390  D7BC               	goto	i2l6253
 16024  001392                     i2l6259:
 16025                           
 16026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
 16027  001392  C094  F001         	movff	i2efgtoa@u,i2___fldiv@b
 16028  001396  C095  F002         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 16029  00139A  C096  F003         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 16030  00139E  C097  F004         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 16031  0013A2  0E00               	movlw	0
 16032  0013A4  6E05               	movwf	i2___fldiv@a,c
 16033  0013A6  0E00               	movlw	0
 16034  0013A8  6E06               	movwf	i2___fldiv@a+1,c
 16035  0013AA  0E20               	movlw	32
 16036  0013AC  6E07               	movwf	i2___fldiv@a+2,c
 16037  0013AE  0E41               	movlw	65
 16038  0013B0  6E08               	movwf	i2___fldiv@a+3,c
 16039  0013B2  EC2B  F01E         	call	i2___fldiv	;wreg free
 16040  0013B6  C001  F094         	movff	?i2___fldiv,i2efgtoa@u
 16041  0013BA  C002  F095         	movff	?i2___fldiv+1,i2efgtoa@u+1
 16042  0013BE  C003  F096         	movff	?i2___fldiv+2,i2efgtoa@u+2
 16043  0013C2  C004  F097         	movff	?i2___fldiv+3,i2efgtoa@u+3
 16044                           
 16045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
 16046  0013C6  0100               	movlb	0	; () banked
 16047  0013C8  0790               	decf	i2efgtoa@e& (0+255),f,b
 16048  0013CA  A0D8               	btfss	status,0,c
 16049  0013CC  0791               	decf	(i2efgtoa@e+1)& (0+255),f,b
 16050  0013CE                     i2l6263:
 16051                           
 16052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
 16053  0013CE  C08C  F034         	movff	i2efgtoa@g,i2___flge@ff1
 16054  0013D2  C08D  F035         	movff	i2efgtoa@g+1,i2___flge@ff1+1
 16055  0013D6  C08E  F036         	movff	i2efgtoa@g+2,i2___flge@ff1+2
 16056  0013DA  C08F  F037         	movff	i2efgtoa@g+3,i2___flge@ff1+3
 16057  0013DE  C094  F038         	movff	i2efgtoa@u,i2___flge@ff2
 16058  0013E2  C095  F039         	movff	i2efgtoa@u+1,i2___flge@ff2+1
 16059  0013E6  C096  F03A         	movff	i2efgtoa@u+2,i2___flge@ff2+2
 16060  0013EA  C097  F03B         	movff	i2efgtoa@u+3,i2___flge@ff2+3
 16061  0013EE  EC36  F02D         	call	i2___flge	;wreg free
 16062  0013F2  A0D8               	btfss	status,0,c
 16063  0013F4  D7CE               	goto	i2l6259
 16064  0013F6                     i2u823_40:
 16065                           
 16066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
 16067  0013F6  C046  F007         	movff	i2efgtoa@c,i2tolower@c
 16068  0013FA  6A08               	clrf	i2tolower@c+1,c
 16069  0013FC  EC2C  F037         	call	i2_tolower	;wreg free
 16070  001400  5007               	movf	?i2_tolower,w,c
 16071  001402  0100               	movlb	0	; () banked
 16072  001404  6F81               	movwf	i2efgtoa@mode& (0+255),b
 16073                           
 16074                           ; BSR set to: 0
 16075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
 16076  001406  C081  F07E         	movff	i2efgtoa@mode,i2efgtoa@nmode
 16077                           
 16078                           ; BSR set to: 0
 16079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
 16080  00140A  0E67               	movlw	103
 16081  00140C  1981               	xorwf	i2efgtoa@mode& (0+255),w,b
 16082  00140E  A4D8               	btfss	status,2,c
 16083  001410  D01B               	goto	i2l6279
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
 16087  001412  0101               	movlb	1	; () banked
 16088  001414  51DF               	movf	_prec& (0+255),w,b
 16089  001416  11E0               	iorwf	(_prec+1)& (0+255),w,b
 16090  001418  A4D8               	btfss	status,2,c
 16091  00141A  D004               	goto	i2l6275
 16092                           
 16093                           ; BSR set to: 1
 16094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
 16095  00141C  0E00               	movlw	0
 16096  00141E  6FE0               	movwf	(_prec+1)& (0+255),b
 16097  001420  0E01               	movlw	1
 16098  001422  6FDF               	movwf	_prec& (0+255),b
 16099  001424                     i2l6275:
 16100                           
 16101                           ; BSR set to: 1
 16102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
 16103  001424  BFE0               	btfsc	(_prec+1)& (0+255),7,b
 16104  001426  D005               	goto	i2u826_40
 16105  001428  51E0               	movf	(_prec+1)& (0+255),w,b
 16106  00142A  E109               	bnz	i2l664
 16107  00142C  05DF               	decf	_prec& (0+255),w,b
 16108  00142E  B0D8               	btfsc	status,0,c
 16109  001430  D006               	goto	i2l664
 16110  001432                     i2u826_40:
 16111                           
 16112                           ; BSR set to: 1
 16113  001432  0E00               	movlw	0
 16114  001434  0100               	movlb	0	; () banked
 16115  001436  6F7D               	movwf	(i2efgtoa@p+1)& (0+255),b
 16116  001438  0E06               	movlw	6
 16117  00143A  6F7C               	movwf	i2efgtoa@p& (0+255),b
 16118  00143C  D009               	goto	i2l6285
 16119  00143E                     i2l664:
 16120                           
 16121                           ; BSR set to: 1
 16122  00143E  C1DF  F07C         	movff	_prec,i2efgtoa@p
 16123  001442  C1E0  F07D         	movff	_prec+1,i2efgtoa@p+1
 16124  001446  D004               	goto	i2l6285
 16125  001448                     i2l6279:
 16126                           
 16127                           ; BSR set to: 0
 16128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
 16129  001448  0101               	movlb	1	; () banked
 16130  00144A  AFE0               	btfss	(_prec+1)& (0+255),7,b
 16131  00144C  D7F8               	goto	i2l664
 16132  00144E  D7F1               	goto	i2u826_40
 16133  001450                     i2l6285:
 16134                           
 16135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
 16136  001450  0E67               	movlw	103
 16137  001452  0100               	movlb	0	; () banked
 16138  001454  1981               	xorwf	i2efgtoa@mode& (0+255),w,b
 16139  001456  A4D8               	btfss	status,2,c
 16140  001458  D022               	goto	i2l6295
 16141                           
 16142                           ; BSR set to: 0
 16143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
 16144  00145A  AF91               	btfss	(i2efgtoa@e+1)& (0+255),7,b
 16145  00145C  D006               	goto	i2u829_40
 16146  00145E  0EFC               	movlw	252
 16147  001460  5D90               	subwf	i2efgtoa@e& (0+255),w,b
 16148  001462  0EFF               	movlw	255
 16149  001464  5991               	subwfb	(i2efgtoa@e+1)& (0+255),w,b
 16150  001466  A0D8               	btfss	status,0,c
 16151  001468  D018               	goto	i2l6293
 16152  00146A                     i2u829_40:
 16153                           
 16154                           ; BSR set to: 0
 16155  00146A  0EFF               	movlw	255
 16156  00146C  6E47               	movwf	??i2_efgtoa& (0+255),c
 16157  00146E  0EFF               	movlw	255
 16158  001470  6E48               	movwf	(??i2_efgtoa+1)& (0+255),c
 16159  001472  C07C  F049         	movff	i2efgtoa@p,??i2_efgtoa+2
 16160  001476  C07D  F04A         	movff	i2efgtoa@p+1,??i2_efgtoa+3
 16161  00147A  5047               	movf	??i2_efgtoa,w,c
 16162  00147C  2649               	addwf	??i2_efgtoa+2,f,c
 16163  00147E  5048               	movf	??i2_efgtoa+1,w,c
 16164  001480  224A               	addwfc	??i2_efgtoa+3,f,c
 16165  001482  5190               	movf	i2efgtoa@e& (0+255),w,b
 16166  001484  5C49               	subwf	??i2_efgtoa+2,w,c
 16167  001486  504A               	movf	??i2_efgtoa+3,w,c
 16168  001488  0A80               	xorlw	128
 16169  00148A  6E4B               	movwf	(??i2_efgtoa+4)& (0+255),c
 16170  00148C  5191               	movf	(i2efgtoa@e+1)& (0+255),w,b
 16171  00148E  0A80               	xorlw	128
 16172  001490  584B               	subwfb	(??i2_efgtoa+4)& (0+255),w,c
 16173  001492  A0D8               	btfss	status,0,c
 16174  001494  D002               	goto	i2l6293
 16175                           
 16176                           ; BSR set to: 0
 16177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
 16178  001496  0E66               	movlw	102
 16179  001498  D001               	goto	L16
 16180  00149A                     i2l6293:
 16181                           
 16182                           ; BSR set to: 0
 16183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
 16184  00149A  0E65               	movlw	101
 16185  00149C                     L16:
 16186  00149C  6F7E               	movwf	i2efgtoa@nmode& (0+255),b
 16187  00149E                     i2l6295:
 16188                           
 16189                           ; BSR set to: 0
 16190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
 16191  00149E  C07C  F074         	movff	i2efgtoa@p,i2efgtoa@m
 16192  0014A2  C07D  F075         	movff	i2efgtoa@p+1,i2efgtoa@m+1
 16193                           
 16194                           ; BSR set to: 0
 16195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
 16196  0014A6  0E67               	movlw	103
 16197  0014A8  1981               	xorwf	i2efgtoa@mode& (0+255),w,b
 16198  0014AA  A4D8               	btfss	status,2,c
 16199  0014AC  D005               	goto	i2u833_40
 16200                           
 16201                           ; BSR set to: 0
 16202  0014AE  0E66               	movlw	102
 16203  0014B0  197E               	xorwf	i2efgtoa@nmode& (0+255),w,b
 16204  0014B2  B4D8               	btfsc	status,2,c
 16205                           
 16206                           ; BSR set to: 0
 16207  0014B4  AF91               	btfss	(i2efgtoa@e+1)& (0+255),7,b
 16208  0014B6  D002               	goto	i2l6305
 16209  0014B8                     i2u833_40:
 16210                           
 16211                           ; BSR set to: 0
 16212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
 16213  0014B8  4B74               	infsnz	i2efgtoa@m& (0+255),f,b
 16214  0014BA  2B75               	incf	(i2efgtoa@m+1)& (0+255),f,b
 16215  0014BC                     i2l6305:
 16216                           
 16217                           ; BSR set to: 0
 16218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
 16219  0014BC  0E66               	movlw	102
 16220  0014BE  197E               	xorwf	i2efgtoa@nmode& (0+255),w,b
 16221  0014C0  A4D8               	btfss	status,2,c
 16222  0014C2  D016               	goto	i2l6315
 16223                           
 16224                           ; BSR set to: 0
 16225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
 16226  0014C4  AF91               	btfss	(i2efgtoa@e+1)& (0+255),7,b
 16227  0014C6  D00C               	goto	i2l6311
 16228                           
 16229                           ; BSR set to: 0
 16230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
 16231  0014C8  0E00               	movlw	0
 16232  0014CA  6F94               	movwf	i2efgtoa@u& (0+255),b
 16233  0014CC  0E00               	movlw	0
 16234  0014CE  6F95               	movwf	(i2efgtoa@u+1)& (0+255),b
 16235  0014D0  0E80               	movlw	128
 16236  0014D2  6F96               	movwf	(i2efgtoa@u+2)& (0+255),b
 16237  0014D4  0E3F               	movlw	63
 16238  0014D6  6F97               	movwf	(i2efgtoa@u+3)& (0+255),b
 16239                           
 16240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
 16241  0014D8  0E00               	movlw	0
 16242  0014DA  6F91               	movwf	(i2efgtoa@e+1)& (0+255),b
 16243  0014DC  0E00               	movlw	0
 16244  0014DE  6F90               	movwf	i2efgtoa@e& (0+255),b
 16245  0014E0                     i2l6311:
 16246                           
 16247                           ; BSR set to: 0
 16248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
 16249  0014E0  0E67               	movlw	103
 16250  0014E2  1981               	xorwf	i2efgtoa@mode& (0+255),w,b
 16251  0014E4  B4D8               	btfsc	status,2,c
 16252  0014E6  D004               	goto	i2l6315
 16253                           
 16254                           ; BSR set to: 0
 16255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
 16256  0014E8  5190               	movf	i2efgtoa@e& (0+255),w,b
 16257  0014EA  2774               	addwf	i2efgtoa@m& (0+255),f,b
 16258  0014EC  5191               	movf	(i2efgtoa@e+1)& (0+255),w,b
 16259  0014EE  2375               	addwfc	(i2efgtoa@m+1)& (0+255),f,b
 16260  0014F0                     i2l6315:
 16261                           
 16262                           ; BSR set to: 0
 16263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
 16264  0014F0  0E00               	movlw	0
 16265  0014F2  6F8B               	movwf	(i2efgtoa@i+1)& (0+255),b
 16266  0014F4  0E00               	movlw	0
 16267  0014F6  6F8A               	movwf	i2efgtoa@i& (0+255),b
 16268                           
 16269                           ; BSR set to: 0
 16270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
 16271  0014F8  C08C  F082         	movff	i2efgtoa@g,i2efgtoa@h
 16272  0014FC  C08D  F083         	movff	i2efgtoa@g+1,i2efgtoa@h+1
 16273  001500  C08E  F084         	movff	i2efgtoa@g+2,i2efgtoa@h+2
 16274  001504  C08F  F085         	movff	i2efgtoa@g+3,i2efgtoa@h+3
 16275                           
 16276                           ; BSR set to: 0
 16277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
 16278  001508  C094  F060         	movff	i2efgtoa@u,i2efgtoa@ou
 16279  00150C  C095  F061         	movff	i2efgtoa@u+1,i2efgtoa@ou+1
 16280  001510  C096  F062         	movff	i2efgtoa@u+2,i2efgtoa@ou+2
 16281  001514  C097  F063         	movff	i2efgtoa@u+3,i2efgtoa@ou+3
 16282                           
 16283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 16284  001518  D07B               	goto	i2l6329
 16285  00151A                     i2l6321:
 16286                           
 16287                           ; BSR set to: 0
 16288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
 16289  00151A  C082  F001         	movff	i2efgtoa@h,i2___fldiv@b
 16290  00151E  C083  F002         	movff	i2efgtoa@h+1,i2___fldiv@b+1
 16291  001522  C084  F003         	movff	i2efgtoa@h+2,i2___fldiv@b+2
 16292  001526  C085  F004         	movff	i2efgtoa@h+3,i2___fldiv@b+3
 16293  00152A  C094  F005         	movff	i2efgtoa@u,i2___fldiv@a
 16294  00152E  C095  F006         	movff	i2efgtoa@u+1,i2___fldiv@a+1
 16295  001532  C096  F007         	movff	i2efgtoa@u+2,i2___fldiv@a+2
 16296  001536  C097  F008         	movff	i2efgtoa@u+3,i2___fldiv@a+3
 16297  00153A  EC2B  F01E         	call	i2___fldiv	;wreg free
 16298  00153E  C001  F01A         	movff	?i2___fldiv,i2floorf@x
 16299  001542  C002  F01B         	movff	?i2___fldiv+1,i2floorf@x+1
 16300  001546  C003  F01C         	movff	?i2___fldiv+2,i2floorf@x+2
 16301  00154A  C004  F01D         	movff	?i2___fldiv+3,i2floorf@x+3
 16302  00154E  EC94  F022         	call	i2_floorf	;wreg free
 16303  001552  C01A  F086         	movff	?i2_floorf,i2efgtoa@l
 16304  001556  C01B  F087         	movff	?i2_floorf+1,i2efgtoa@l+1
 16305  00155A  C01C  F088         	movff	?i2_floorf+2,i2efgtoa@l+2
 16306  00155E  C01D  F089         	movff	?i2_floorf+3,i2efgtoa@l+3
 16307                           
 16308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 16309  001562  C086  F034         	movff	i2efgtoa@l,i2___fltol@f1
 16310  001566  C087  F035         	movff	i2efgtoa@l+1,i2___fltol@f1+1
 16311  00156A  C088  F036         	movff	i2efgtoa@l+2,i2___fltol@f1+2
 16312  00156E  C089  F037         	movff	i2efgtoa@l+3,i2___fltol@f1+3
 16313  001572  EC84  F02F         	call	i2___fltol	;wreg free
 16314  001576  C034  F078         	movff	?i2___fltol,i2efgtoa@d
 16315  00157A  C035  F079         	movff	?i2___fltol+1,i2efgtoa@d+1
 16316                           
 16317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 16318  00157E  C082  F034         	movff	i2efgtoa@h,i2___flsub@b
 16319  001582  C083  F035         	movff	i2efgtoa@h+1,i2___flsub@b+1
 16320  001586  C084  F036         	movff	i2efgtoa@h+2,i2___flsub@b+2
 16321  00158A  C085  F037         	movff	i2efgtoa@h+3,i2___flsub@b+3
 16322  00158E  C094  F01F         	movff	i2efgtoa@u,i2___flmul@a
 16323  001592  C095  F020         	movff	i2efgtoa@u+1,i2___flmul@a+1
 16324  001596  C096  F021         	movff	i2efgtoa@u+2,i2___flmul@a+2
 16325  00159A  C097  F022         	movff	i2efgtoa@u+3,i2___flmul@a+3
 16326  00159E  C086  F01B         	movff	i2efgtoa@l,i2___flmul@b
 16327  0015A2  C087  F01C         	movff	i2efgtoa@l+1,i2___flmul@b+1
 16328  0015A6  C088  F01D         	movff	i2efgtoa@l+2,i2___flmul@b+2
 16329  0015AA  C089  F01E         	movff	i2efgtoa@l+3,i2___flmul@b+3
 16330  0015AE  EC30  F018         	call	i2___flmul	;wreg free
 16331  0015B2  C01B  F038         	movff	?i2___flmul,i2___flsub@a
 16332  0015B6  C01C  F039         	movff	?i2___flmul+1,i2___flsub@a+1
 16333  0015BA  C01D  F03A         	movff	?i2___flmul+2,i2___flsub@a+2
 16334  0015BE  C01E  F03B         	movff	?i2___flmul+3,i2___flsub@a+3
 16335  0015C2  EC76  F037         	call	i2___flsub	;wreg free
 16336  0015C6  C034  F082         	movff	?i2___flsub,i2efgtoa@h
 16337  0015CA  C035  F083         	movff	?i2___flsub+1,i2efgtoa@h+1
 16338  0015CE  C036  F084         	movff	?i2___flsub+2,i2efgtoa@h+2
 16339  0015D2  C037  F085         	movff	?i2___flsub+3,i2efgtoa@h+3
 16340                           
 16341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 16342  0015D6  C094  F001         	movff	i2efgtoa@u,i2___fldiv@b
 16343  0015DA  C095  F002         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 16344  0015DE  C096  F003         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 16345  0015E2  C097  F004         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 16346  0015E6  0E00               	movlw	0
 16347  0015E8  6E05               	movwf	i2___fldiv@a,c
 16348  0015EA  0E00               	movlw	0
 16349  0015EC  6E06               	movwf	i2___fldiv@a+1,c
 16350  0015EE  0E20               	movlw	32
 16351  0015F0  6E07               	movwf	i2___fldiv@a+2,c
 16352  0015F2  0E41               	movlw	65
 16353  0015F4  6E08               	movwf	i2___fldiv@a+3,c
 16354  0015F6  EC2B  F01E         	call	i2___fldiv	;wreg free
 16355  0015FA  C001  F094         	movff	?i2___fldiv,i2efgtoa@u
 16356  0015FE  C002  F095         	movff	?i2___fldiv+1,i2efgtoa@u+1
 16357  001602  C003  F096         	movff	?i2___fldiv+2,i2efgtoa@u+2
 16358  001606  C004  F097         	movff	?i2___fldiv+3,i2efgtoa@u+3
 16359                           
 16360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 16361  00160A  0100               	movlb	0	; () banked
 16362  00160C  4B8A               	infsnz	i2efgtoa@i& (0+255),f,b
 16363  00160E  2B8B               	incf	(i2efgtoa@i+1)& (0+255),f,b
 16364  001610                     i2l6329:
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 16368  001610  5174               	movf	i2efgtoa@m& (0+255),w,b
 16369  001612  5D8A               	subwf	i2efgtoa@i& (0+255),w,b
 16370  001614  518B               	movf	(i2efgtoa@i+1)& (0+255),w,b
 16371  001616  0A80               	xorlw	128
 16372  001618  6E47               	movwf	??i2_efgtoa& (0+255),c
 16373  00161A  5175               	movf	(i2efgtoa@m+1)& (0+255),w,b
 16374  00161C  0A80               	xorlw	128
 16375  00161E  5847               	subwfb	??i2_efgtoa& (0+255),w,c
 16376  001620  A0D8               	btfss	status,0,c
 16377  001622  D77B               	goto	i2l6321
 16378                           
 16379                           ; BSR set to: 0
 16380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 16381  001624  C094  F01B         	movff	i2efgtoa@u,i2___flmul@b
 16382  001628  C095  F01C         	movff	i2efgtoa@u+1,i2___flmul@b+1
 16383  00162C  C096  F01D         	movff	i2efgtoa@u+2,i2___flmul@b+2
 16384  001630  C097  F01E         	movff	i2efgtoa@u+3,i2___flmul@b+3
 16385  001634  0E00               	movlw	0
 16386  001636  6E1F               	movwf	i2___flmul@a,c
 16387  001638  0E00               	movlw	0
 16388  00163A  6E20               	movwf	i2___flmul@a+1,c
 16389  00163C  0EA0               	movlw	160
 16390  00163E  6E21               	movwf	i2___flmul@a+2,c
 16391  001640  0E40               	movlw	64
 16392  001642  6E22               	movwf	i2___flmul@a+3,c
 16393  001644  EC30  F018         	call	i2___flmul	;wreg free
 16394  001648  C01B  F086         	movff	?i2___flmul,i2efgtoa@l
 16395  00164C  C01C  F087         	movff	?i2___flmul+1,i2efgtoa@l+1
 16396  001650  C01D  F088         	movff	?i2___flmul+2,i2efgtoa@l+2
 16397  001654  C01E  F089         	movff	?i2___flmul+3,i2efgtoa@l+3
 16398                           
 16399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 16400  001658  C082  F034         	movff	i2efgtoa@h,i2___flge@ff1
 16401  00165C  C083  F035         	movff	i2efgtoa@h+1,i2___flge@ff1+1
 16402  001660  C084  F036         	movff	i2efgtoa@h+2,i2___flge@ff1+2
 16403  001664  C085  F037         	movff	i2efgtoa@h+3,i2___flge@ff1+3
 16404  001668  C086  F038         	movff	i2efgtoa@l,i2___flge@ff2
 16405  00166C  C087  F039         	movff	i2efgtoa@l+1,i2___flge@ff2+1
 16406  001670  C088  F03A         	movff	i2efgtoa@l+2,i2___flge@ff2+2
 16407  001674  C089  F03B         	movff	i2efgtoa@l+3,i2___flge@ff2+3
 16408  001678  EC36  F02D         	call	i2___flge	;wreg free
 16409  00167C  B0D8               	btfsc	status,0,c
 16410  00167E  D003               	goto	i2l6337
 16411                           
 16412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 16413  001680  0E00               	movlw	0
 16414  001682  0100               	movlb	0	; () banked
 16415  001684  D018               	goto	L17
 16416  001686                     i2l6337:
 16417                           
 16418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 16419  001686  C082  F001         	movff	i2efgtoa@h,i2___fleq@ff1
 16420  00168A  C083  F002         	movff	i2efgtoa@h+1,i2___fleq@ff1+1
 16421  00168E  C084  F003         	movff	i2efgtoa@h+2,i2___fleq@ff1+2
 16422  001692  C085  F004         	movff	i2efgtoa@h+3,i2___fleq@ff1+3
 16423  001696  C086  F005         	movff	i2efgtoa@l,i2___fleq@ff2
 16424  00169A  C087  F006         	movff	i2efgtoa@l+1,i2___fleq@ff2+1
 16425  00169E  C088  F007         	movff	i2efgtoa@l+2,i2___fleq@ff2+2
 16426  0016A2  C089  F008         	movff	i2efgtoa@l+3,i2___fleq@ff2+3
 16427  0016A6  ECE5  F033         	call	i2___fleq	;wreg free
 16428  0016AA  A0D8               	btfss	status,0,c
 16429  0016AC  D00B               	goto	i2l6343
 16430  0016AE  0100               	movlb	0	; () banked
 16431  0016B0  B178               	btfsc	i2efgtoa@d& (0+255),0,b
 16432  0016B2  D008               	goto	i2l6343
 16433                           
 16434                           ; BSR set to: 0
 16435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 16436  0016B4  0E00               	movlw	0
 16437  0016B6                     L17:
 16438  0016B6  6F86               	movwf	i2efgtoa@l& (0+255),b
 16439  0016B8  0E00               	movlw	0
 16440  0016BA  6F87               	movwf	(i2efgtoa@l+1)& (0+255),b
 16441  0016BC  0E00               	movlw	0
 16442  0016BE  6F88               	movwf	(i2efgtoa@l+2)& (0+255),b
 16443  0016C0  0E00               	movlw	0
 16444  0016C2  6F89               	movwf	(i2efgtoa@l+3)& (0+255),b
 16445  0016C4                     i2l6343:
 16446                           
 16447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 16448  0016C4  C08C  F001         	movff	i2efgtoa@g,i2___fladd@b
 16449  0016C8  C08D  F002         	movff	i2efgtoa@g+1,i2___fladd@b+1
 16450  0016CC  C08E  F003         	movff	i2efgtoa@g+2,i2___fladd@b+2
 16451  0016D0  C08F  F004         	movff	i2efgtoa@g+3,i2___fladd@b+3
 16452  0016D4  C086  F005         	movff	i2efgtoa@l,i2___fladd@a
 16453  0016D8  C087  F006         	movff	i2efgtoa@l+1,i2___fladd@a+1
 16454  0016DC  C088  F007         	movff	i2efgtoa@l+2,i2___fladd@a+2
 16455  0016E0  C089  F008         	movff	i2efgtoa@l+3,i2___fladd@a+3
 16456  0016E4  EC60  F01B         	call	i2___fladd	;wreg free
 16457  0016E8  C001  F082         	movff	?i2___fladd,i2efgtoa@h
 16458  0016EC  C002  F083         	movff	?i2___fladd+1,i2efgtoa@h+1
 16459  0016F0  C003  F084         	movff	?i2___fladd+2,i2efgtoa@h+2
 16460  0016F4  C004  F085         	movff	?i2___fladd+3,i2efgtoa@h+3
 16461                           
 16462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 16463  0016F8  C060  F094         	movff	i2efgtoa@ou,i2efgtoa@u
 16464  0016FC  C061  F095         	movff	i2efgtoa@ou+1,i2efgtoa@u+1
 16465  001700  C062  F096         	movff	i2efgtoa@ou+2,i2efgtoa@u+2
 16466  001704  C063  F097         	movff	i2efgtoa@ou+3,i2efgtoa@u+3
 16467                           
 16468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 16469  001708  0E65               	movlw	101
 16470  00170A  0100               	movlb	0	; () banked
 16471  00170C  197E               	xorwf	i2efgtoa@nmode& (0+255),w,b
 16472  00170E  B4D8               	btfsc	status,2,c
 16473  001710  D005               	goto	i2l6351
 16474                           
 16475                           ; BSR set to: 0
 16476  001712  C090  F076         	movff	i2efgtoa@e,i2efgtoa@ne
 16477  001716  C091  F077         	movff	i2efgtoa@e+1,i2efgtoa@ne+1
 16478  00171A  D004               	goto	i2l690
 16479  00171C                     i2l6351:
 16480                           
 16481                           ; BSR set to: 0
 16482  00171C  0E00               	movlw	0
 16483  00171E  6F77               	movwf	(i2efgtoa@ne+1)& (0+255),b
 16484  001720  0E00               	movlw	0
 16485  001722  6F76               	movwf	i2efgtoa@ne& (0+255),b
 16486  001724                     i2l690:
 16487                           
 16488                           ; BSR set to: 0
 16489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 16490  001724  0E00               	movlw	0
 16491  001726  6F73               	movwf	(i2efgtoa@pp+1)& (0+255),b
 16492  001728  0E00               	movlw	0
 16493  00172A  6F72               	movwf	i2efgtoa@pp& (0+255),b
 16494                           
 16495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 16496  00172C  0E00               	movlw	0
 16497  00172E  6F71               	movwf	(i2efgtoa@t+1)& (0+255),b
 16498  001730  0E00               	movlw	0
 16499  001732  6F70               	movwf	i2efgtoa@t& (0+255),b
 16500                           
 16501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 16502  001734  0E00               	movlw	0
 16503  001736  6F8B               	movwf	(i2efgtoa@i+1)& (0+255),b
 16504  001738  0E00               	movlw	0
 16505  00173A  6F8A               	movwf	i2efgtoa@i& (0+255),b
 16506                           
 16507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 16508  00173C  D0C8               	goto	i2l6401
 16509  00173E                     i2l6353:
 16510                           
 16511                           ; BSR set to: 0
 16512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 16513  00173E  C082  F001         	movff	i2efgtoa@h,i2___fldiv@b
 16514  001742  C083  F002         	movff	i2efgtoa@h+1,i2___fldiv@b+1
 16515  001746  C084  F003         	movff	i2efgtoa@h+2,i2___fldiv@b+2
 16516  00174A  C085  F004         	movff	i2efgtoa@h+3,i2___fldiv@b+3
 16517  00174E  C094  F005         	movff	i2efgtoa@u,i2___fldiv@a
 16518  001752  C095  F006         	movff	i2efgtoa@u+1,i2___fldiv@a+1
 16519  001756  C096  F007         	movff	i2efgtoa@u+2,i2___fldiv@a+2
 16520  00175A  C097  F008         	movff	i2efgtoa@u+3,i2___fldiv@a+3
 16521  00175E  EC2B  F01E         	call	i2___fldiv	;wreg free
 16522  001762  C001  F01A         	movff	?i2___fldiv,i2floorf@x
 16523  001766  C002  F01B         	movff	?i2___fldiv+1,i2floorf@x+1
 16524  00176A  C003  F01C         	movff	?i2___fldiv+2,i2floorf@x+2
 16525  00176E  C004  F01D         	movff	?i2___fldiv+3,i2floorf@x+3
 16526  001772  EC94  F022         	call	i2_floorf	;wreg free
 16527  001776  C01A  F086         	movff	?i2_floorf,i2efgtoa@l
 16528  00177A  C01B  F087         	movff	?i2_floorf+1,i2efgtoa@l+1
 16529  00177E  C01C  F088         	movff	?i2_floorf+2,i2efgtoa@l+2
 16530  001782  C01D  F089         	movff	?i2_floorf+3,i2efgtoa@l+3
 16531                           
 16532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 16533  001786  C086  F034         	movff	i2efgtoa@l,i2___fltol@f1
 16534  00178A  C087  F035         	movff	i2efgtoa@l+1,i2___fltol@f1+1
 16535  00178E  C088  F036         	movff	i2efgtoa@l+2,i2___fltol@f1+2
 16536  001792  C089  F037         	movff	i2efgtoa@l+3,i2___fltol@f1+3
 16537  001796  EC84  F02F         	call	i2___fltol	;wreg free
 16538  00179A  C034  F078         	movff	?i2___fltol,i2efgtoa@d
 16539  00179E  C035  F079         	movff	?i2___fltol+1,i2efgtoa@d+1
 16540                           
 16541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16542  0017A2  0101               	movlb	1	; () banked
 16543  0017A4  B9E1               	btfsc	_flags& (0+255),4,b
 16544  0017A6  D00D               	goto	i2l6365
 16545                           
 16546                           ; BSR set to: 1
 16547  0017A8  0100               	movlb	0	; () banked
 16548  0017AA  5178               	movf	i2efgtoa@d& (0+255),w,b
 16549  0017AC  1179               	iorwf	(i2efgtoa@d+1)& (0+255),w,b
 16550  0017AE  A4D8               	btfss	status,2,c
 16551  0017B0  D008               	goto	i2l6365
 16552                           
 16553                           ; BSR set to: 0
 16554  0017B2  0E67               	movlw	103
 16555  0017B4  1981               	xorwf	i2efgtoa@mode& (0+255),w,b
 16556  0017B6  B4D8               	btfsc	status,2,c
 16557                           
 16558                           ; BSR set to: 0
 16559  0017B8  AF77               	btfss	(i2efgtoa@ne+1)& (0+255),7,b
 16560  0017BA  D003               	goto	i2l6365
 16561                           
 16562                           ; BSR set to: 0
 16563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 16564  0017BC  4B70               	infsnz	i2efgtoa@t& (0+255),f,b
 16565  0017BE  2B71               	incf	(i2efgtoa@t+1)& (0+255),f,b
 16566                           
 16567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 16568  0017C0  D03A               	goto	i2l6393
 16569  0017C2                     i2l6365:
 16570                           
 16571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 16572  0017C2  0100               	movlb	0	; () banked
 16573  0017C4  5172               	movf	i2efgtoa@pp& (0+255),w,b
 16574  0017C6  1173               	iorwf	(i2efgtoa@pp+1)& (0+255),w,b
 16575  0017C8  B4D8               	btfsc	status,2,c
 16576                           
 16577                           ; BSR set to: 0
 16578  0017CA  AF77               	btfss	(i2efgtoa@ne+1)& (0+255),7,b
 16579  0017CC  D022               	goto	i2l6385
 16580                           
 16581                           ; BSR set to: 0
 16582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 16583  0017CE  0E64               	movlw	low _dbuf
 16584  0017D0  2592               	addwf	i2efgtoa@n& (0+255),w,b
 16585  0017D2  6ED9               	movwf	fsr2l,c
 16586  0017D4  0E02               	movlw	high _dbuf
 16587  0017D6  2193               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16588  0017D8  6EDA               	movwf	fsr2h,c
 16589  0017DA  0E2E               	movlw	46
 16590  0017DC  6EDF               	movwf	indf2,c
 16591                           
 16592                           ; BSR set to: 0
 16593  0017DE  4B92               	infsnz	i2efgtoa@n& (0+255),f,b
 16594  0017E0  2B93               	incf	(i2efgtoa@n+1)& (0+255),f,b
 16595                           
 16596                           ; BSR set to: 0
 16597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 16598  0017E2  077F               	decf	i2efgtoa@w& (0+255),f,b
 16599  0017E4  A0D8               	btfss	status,0,c
 16600  0017E6  0780               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16601                           
 16602                           ; BSR set to: 0
 16603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 16604  0017E8  0E00               	movlw	0
 16605  0017EA  6F73               	movwf	(i2efgtoa@pp+1)& (0+255),b
 16606  0017EC  0E01               	movlw	1
 16607  0017EE  6F72               	movwf	i2efgtoa@pp& (0+255),b
 16608  0017F0  D010               	goto	i2l6385
 16609  0017F2                     i2l6377:
 16610                           
 16611                           ; BSR set to: 0
 16612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 16613  0017F2  0E64               	movlw	low _dbuf
 16614  0017F4  2592               	addwf	i2efgtoa@n& (0+255),w,b
 16615  0017F6  6ED9               	movwf	fsr2l,c
 16616  0017F8  0E02               	movlw	high _dbuf
 16617  0017FA  2193               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16618  0017FC  6EDA               	movwf	fsr2h,c
 16619  0017FE  0E30               	movlw	48
 16620  001800  6EDF               	movwf	indf2,c
 16621                           
 16622                           ; BSR set to: 0
 16623  001802  4B92               	infsnz	i2efgtoa@n& (0+255),f,b
 16624  001804  2B93               	incf	(i2efgtoa@n+1)& (0+255),f,b
 16625                           
 16626                           ; BSR set to: 0
 16627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 16628  001806  077F               	decf	i2efgtoa@w& (0+255),f,b
 16629  001808  A0D8               	btfss	status,0,c
 16630  00180A  0780               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16631                           
 16632                           ; BSR set to: 0
 16633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 16634  00180C  0770               	decf	i2efgtoa@t& (0+255),f,b
 16635  00180E  A0D8               	btfss	status,0,c
 16636  001810  0771               	decf	(i2efgtoa@t+1)& (0+255),f,b
 16637  001812                     i2l6385:
 16638                           
 16639                           ; BSR set to: 0
 16640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 16641  001812  5170               	movf	i2efgtoa@t& (0+255),w,b
 16642  001814  1171               	iorwf	(i2efgtoa@t+1)& (0+255),w,b
 16643  001816  A4D8               	btfss	status,2,c
 16644  001818  D7EC               	goto	i2l6377
 16645                           
 16646                           ; BSR set to: 0
 16647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 16648  00181A  0E64               	movlw	low _dbuf
 16649  00181C  2592               	addwf	i2efgtoa@n& (0+255),w,b
 16650  00181E  6ED9               	movwf	fsr2l,c
 16651  001820  0E02               	movlw	high _dbuf
 16652  001822  2193               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16653  001824  6EDA               	movwf	fsr2h,c
 16654  001826  5178               	movf	i2efgtoa@d& (0+255),w,b
 16655  001828  0F30               	addlw	48
 16656  00182A  6EDF               	movwf	indf2,c
 16657                           
 16658                           ; BSR set to: 0
 16659  00182C  4B92               	infsnz	i2efgtoa@n& (0+255),f,b
 16660  00182E  2B93               	incf	(i2efgtoa@n+1)& (0+255),f,b
 16661                           
 16662                           ; BSR set to: 0
 16663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 16664  001830  077F               	decf	i2efgtoa@w& (0+255),f,b
 16665  001832  A0D8               	btfss	status,0,c
 16666  001834  0780               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16667  001836                     i2l6393:
 16668                           
 16669                           ; BSR set to: 0
 16670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 16671  001836  C082  F034         	movff	i2efgtoa@h,i2___flsub@b
 16672  00183A  C083  F035         	movff	i2efgtoa@h+1,i2___flsub@b+1
 16673  00183E  C084  F036         	movff	i2efgtoa@h+2,i2___flsub@b+2
 16674  001842  C085  F037         	movff	i2efgtoa@h+3,i2___flsub@b+3
 16675  001846  C094  F01F         	movff	i2efgtoa@u,i2___flmul@a
 16676  00184A  C095  F020         	movff	i2efgtoa@u+1,i2___flmul@a+1
 16677  00184E  C096  F021         	movff	i2efgtoa@u+2,i2___flmul@a+2
 16678  001852  C097  F022         	movff	i2efgtoa@u+3,i2___flmul@a+3
 16679  001856  C086  F01B         	movff	i2efgtoa@l,i2___flmul@b
 16680  00185A  C087  F01C         	movff	i2efgtoa@l+1,i2___flmul@b+1
 16681  00185E  C088  F01D         	movff	i2efgtoa@l+2,i2___flmul@b+2
 16682  001862  C089  F01E         	movff	i2efgtoa@l+3,i2___flmul@b+3
 16683  001866  EC30  F018         	call	i2___flmul	;wreg free
 16684  00186A  C01B  F038         	movff	?i2___flmul,i2___flsub@a
 16685  00186E  C01C  F039         	movff	?i2___flmul+1,i2___flsub@a+1
 16686  001872  C01D  F03A         	movff	?i2___flmul+2,i2___flsub@a+2
 16687  001876  C01E  F03B         	movff	?i2___flmul+3,i2___flsub@a+3
 16688  00187A  EC76  F037         	call	i2___flsub	;wreg free
 16689  00187E  C034  F082         	movff	?i2___flsub,i2efgtoa@h
 16690  001882  C035  F083         	movff	?i2___flsub+1,i2efgtoa@h+1
 16691  001886  C036  F084         	movff	?i2___flsub+2,i2efgtoa@h+2
 16692  00188A  C037  F085         	movff	?i2___flsub+3,i2efgtoa@h+3
 16693                           
 16694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 16695  00188E  C094  F001         	movff	i2efgtoa@u,i2___fldiv@b
 16696  001892  C095  F002         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 16697  001896  C096  F003         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 16698  00189A  C097  F004         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 16699  00189E  0E00               	movlw	0
 16700  0018A0  6E05               	movwf	i2___fldiv@a,c
 16701  0018A2  0E00               	movlw	0
 16702  0018A4  6E06               	movwf	i2___fldiv@a+1,c
 16703  0018A6  0E20               	movlw	32
 16704  0018A8  6E07               	movwf	i2___fldiv@a+2,c
 16705  0018AA  0E41               	movlw	65
 16706  0018AC  6E08               	movwf	i2___fldiv@a+3,c
 16707  0018AE  EC2B  F01E         	call	i2___fldiv	;wreg free
 16708  0018B2  C001  F094         	movff	?i2___fldiv,i2efgtoa@u
 16709  0018B6  C002  F095         	movff	?i2___fldiv+1,i2efgtoa@u+1
 16710  0018BA  C003  F096         	movff	?i2___fldiv+2,i2efgtoa@u+2
 16711  0018BE  C004  F097         	movff	?i2___fldiv+3,i2efgtoa@u+3
 16712                           
 16713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 16714  0018C2  0100               	movlb	0	; () banked
 16715  0018C4  0776               	decf	i2efgtoa@ne& (0+255),f,b
 16716  0018C6  A0D8               	btfss	status,0,c
 16717  0018C8  0777               	decf	(i2efgtoa@ne+1)& (0+255),f,b
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 16721  0018CA  4B8A               	infsnz	i2efgtoa@i& (0+255),f,b
 16722  0018CC  2B8B               	incf	(i2efgtoa@i+1)& (0+255),f,b
 16723  0018CE                     i2l6401:
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 16727  0018CE  5174               	movf	i2efgtoa@m& (0+255),w,b
 16728  0018D0  5D8A               	subwf	i2efgtoa@i& (0+255),w,b
 16729  0018D2  518B               	movf	(i2efgtoa@i+1)& (0+255),w,b
 16730  0018D4  0A80               	xorlw	128
 16731  0018D6  6E47               	movwf	??i2_efgtoa& (0+255),c
 16732  0018D8  5175               	movf	(i2efgtoa@m+1)& (0+255),w,b
 16733  0018DA  0A80               	xorlw	128
 16734  0018DC  5847               	subwfb	??i2_efgtoa& (0+255),w,c
 16735  0018DE  B0D8               	btfsc	status,0,c
 16736  0018E0  D008               	goto	i2u850_40
 16737                           
 16738                           ; BSR set to: 0
 16739  0018E2  BF93               	btfsc	(i2efgtoa@n+1)& (0+255),7,b
 16740  0018E4  D72C               	goto	i2l6353
 16741  0018E6  5193               	movf	(i2efgtoa@n+1)& (0+255),w,b
 16742  0018E8  E104               	bnz	i2u850_40
 16743  0018EA  0E4B               	movlw	75
 16744  0018EC  5D92               	subwf	i2efgtoa@n& (0+255),w,b
 16745  0018EE  A0D8               	btfss	status,0,c
 16746  0018F0  D726               	goto	i2l6353
 16747  0018F2                     i2u850_40:
 16748                           
 16749                           ; BSR set to: 0
 16750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 16751  0018F2  5172               	movf	i2efgtoa@pp& (0+255),w,b
 16752  0018F4  1173               	iorwf	(i2efgtoa@pp+1)& (0+255),w,b
 16753  0018F6  A4D8               	btfss	status,2,c
 16754  0018F8  D00E               	goto	i2l6413
 16755                           
 16756                           ; BSR set to: 0
 16757  0018FA  0101               	movlb	1	; () banked
 16758  0018FC  A9E1               	btfss	_flags& (0+255),4,b
 16759  0018FE  D00B               	goto	i2l6413
 16760                           
 16761                           ; BSR set to: 1
 16762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 16763  001900  0E64               	movlw	low _dbuf
 16764  001902  0100               	movlb	0	; () banked
 16765  001904  2592               	addwf	i2efgtoa@n& (0+255),w,b
 16766  001906  6ED9               	movwf	fsr2l,c
 16767  001908  0E02               	movlw	high _dbuf
 16768  00190A  2193               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16769  00190C  6EDA               	movwf	fsr2h,c
 16770  00190E  0E2E               	movlw	46
 16771  001910  6EDF               	movwf	indf2,c
 16772                           
 16773                           ; BSR set to: 0
 16774  001912  4B92               	infsnz	i2efgtoa@n& (0+255),f,b
 16775  001914  2B93               	incf	(i2efgtoa@n+1)& (0+255),f,b
 16776  001916                     i2l6413:
 16777                           
 16778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 16779  001916  0E64               	movlw	low _dbuf
 16780  001918  0100               	movlb	0	; () banked
 16781  00191A  2592               	addwf	i2efgtoa@n& (0+255),w,b
 16782  00191C  6ED9               	movwf	fsr2l,c
 16783  00191E  0E02               	movlw	high _dbuf
 16784  001920  2193               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16785  001922  6EDA               	movwf	fsr2h,c
 16786  001924  0E00               	movlw	0
 16787  001926  6EDF               	movwf	indf2,c
 16788                           
 16789                           ; BSR set to: 0
 16790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 16791  001928  0E65               	movlw	101
 16792  00192A  197E               	xorwf	i2efgtoa@nmode& (0+255),w,b
 16793  00192C  A4D8               	btfss	status,2,c
 16794  00192E  D475               	goto	i2l6225
 16795                           
 16796                           ; BSR set to: 0
 16797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 16798  001930  0E00               	movlw	0
 16799  001932  6F8B               	movwf	(i2efgtoa@i+1)& (0+255),b
 16800  001934  0E4F               	movlw	79
 16801  001936  6F8A               	movwf	i2efgtoa@i& (0+255),b
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 16805  001938  0E64               	movlw	low _dbuf
 16806  00193A  258A               	addwf	i2efgtoa@i& (0+255),w,b
 16807  00193C  6ED9               	movwf	fsr2l,c
 16808  00193E  0E02               	movlw	high _dbuf
 16809  001940  218B               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 16810  001942  6EDA               	movwf	fsr2h,c
 16811  001944  0E00               	movlw	0
 16812  001946  6EDF               	movwf	indf2,c
 16813                           
 16814                           ; BSR set to: 0
 16815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 16816  001948  0E00               	movlw	0
 16817  00194A  6F7B               	movwf	(i2efgtoa@sign+1)& (0+255),b
 16818  00194C  0E00               	movlw	0
 16819  00194E  6F7A               	movwf	i2efgtoa@sign& (0+255),b
 16820                           
 16821                           ; BSR set to: 0
 16822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 16823  001950  AF91               	btfss	(i2efgtoa@e+1)& (0+255),7,b
 16824  001952  D008               	goto	i2l6429
 16825                           
 16826                           ; BSR set to: 0
 16827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 16828  001954  0E00               	movlw	0
 16829  001956  6F7B               	movwf	(i2efgtoa@sign+1)& (0+255),b
 16830  001958  0E01               	movlw	1
 16831  00195A  6F7A               	movwf	i2efgtoa@sign& (0+255),b
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 16835  00195C  6D90               	negf	i2efgtoa@e& (0+255),b
 16836  00195E  1F91               	comf	(i2efgtoa@e+1)& (0+255),f,b
 16837  001960  B0D8               	btfsc	status,0,c
 16838  001962  2B91               	incf	(i2efgtoa@e+1)& (0+255),f,b
 16839  001964                     i2l6429:
 16840                           
 16841                           ; BSR set to: 0
 16842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 16843  001964  0E00               	movlw	0
 16844  001966  6F7D               	movwf	(i2efgtoa@p+1)& (0+255),b
 16845  001968  0E02               	movlw	2
 16846  00196A  6F7C               	movwf	i2efgtoa@p& (0+255),b
 16847                           
 16848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 16849  00196C  D02B               	goto	i2l6441
 16850  00196E                     i2l6431:
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 16854  00196E  078A               	decf	i2efgtoa@i& (0+255),f,b
 16855  001970  A0D8               	btfss	status,0,c
 16856  001972  078B               	decf	(i2efgtoa@i+1)& (0+255),f,b
 16857                           
 16858                           ; BSR set to: 0
 16859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 16860  001974  0E64               	movlw	low _dbuf
 16861  001976  258A               	addwf	i2efgtoa@i& (0+255),w,b
 16862  001978  6ED9               	movwf	fsr2l,c
 16863  00197A  0E02               	movlw	high _dbuf
 16864  00197C  218B               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 16865  00197E  6EDA               	movwf	fsr2h,c
 16866  001980  C090  F001         	movff	i2efgtoa@e,i2___awmod@dividend
 16867  001984  C091  F002         	movff	i2efgtoa@e+1,i2___awmod@dividend+1
 16868  001988  0E00               	movlw	0
 16869  00198A  6E04               	movwf	i2___awmod@divisor+1,c
 16870  00198C  0E0A               	movlw	10
 16871  00198E  6E03               	movwf	i2___awmod@divisor,c
 16872  001990  ECA0  F035         	call	i2___awmod	;wreg free
 16873  001994  5001               	movf	?i2___awmod,w,c
 16874  001996  0F30               	addlw	48
 16875  001998  6EDF               	movwf	indf2,c
 16876                           
 16877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 16878  00199A  C090  F001         	movff	i2efgtoa@e,i2___awdiv@dividend
 16879  00199E  C091  F002         	movff	i2efgtoa@e+1,i2___awdiv@dividend+1
 16880  0019A2  0E00               	movlw	0
 16881  0019A4  6E04               	movwf	i2___awdiv@divisor+1,c
 16882  0019A6  0E0A               	movlw	10
 16883  0019A8  6E03               	movwf	i2___awdiv@divisor,c
 16884  0019AA  EC6D  F034         	call	i2___awdiv	;wreg free
 16885  0019AE  C001  F090         	movff	?i2___awdiv,i2efgtoa@e
 16886  0019B2  C002  F091         	movff	?i2___awdiv+1,i2efgtoa@e+1
 16887                           
 16888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 16889  0019B6  0100               	movlb	0	; () banked
 16890  0019B8  077C               	decf	i2efgtoa@p& (0+255),f,b
 16891  0019BA  A0D8               	btfss	status,0,c
 16892  0019BC  077D               	decf	(i2efgtoa@p+1)& (0+255),f,b
 16893                           
 16894                           ; BSR set to: 0
 16895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 16896  0019BE  077F               	decf	i2efgtoa@w& (0+255),f,b
 16897  0019C0  A0D8               	btfss	status,0,c
 16898  0019C2  0780               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16899  0019C4                     i2l6441:
 16900                           
 16901                           ; BSR set to: 0
 16902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 16903  0019C4  5190               	movf	i2efgtoa@e& (0+255),w,b
 16904  0019C6  1191               	iorwf	(i2efgtoa@e+1)& (0+255),w,b
 16905  0019C8  A4D8               	btfss	status,2,c
 16906  0019CA  D7D1               	goto	i2l6431
 16907                           
 16908                           ; BSR set to: 0
 16909  0019CC  BF7D               	btfsc	(i2efgtoa@p+1)& (0+255),7,b
 16910  0019CE  D005               	goto	i2u856_40
 16911  0019D0  517D               	movf	(i2efgtoa@p+1)& (0+255),w,b
 16912  0019D2  E1CD               	bnz	i2l6431
 16913  0019D4  057C               	decf	i2efgtoa@p& (0+255),w,b
 16914  0019D6  B0D8               	btfsc	status,0,c
 16915  0019D8  D7CA               	goto	i2l6431
 16916  0019DA                     i2u856_40:
 16917                           
 16918                           ; BSR set to: 0
 16919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 16920  0019DA  078A               	decf	i2efgtoa@i& (0+255),f,b
 16921  0019DC  A0D8               	btfss	status,0,c
 16922  0019DE  078B               	decf	(i2efgtoa@i+1)& (0+255),f,b
 16923                           
 16924                           ; BSR set to: 0
 16925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 16926  0019E0  517A               	movf	i2efgtoa@sign& (0+255),w,b
 16927  0019E2  117B               	iorwf	(i2efgtoa@sign+1)& (0+255),w,b
 16928  0019E4  A4D8               	btfss	status,2,c
 16929  0019E6  D004               	goto	i2l6451
 16930                           
 16931                           ; BSR set to: 0
 16932  0019E8  0E00               	movlw	0
 16933  0019EA  6F6B               	movwf	(i2_efgtoa$1547+1)& (0+255),b
 16934  0019EC  0E2B               	movlw	43
 16935  0019EE  D003               	goto	L18
 16936  0019F0                     i2l6451:
 16937                           
 16938                           ; BSR set to: 0
 16939  0019F0  0E00               	movlw	0
 16940  0019F2  6F6B               	movwf	(i2_efgtoa$1547+1)& (0+255),b
 16941  0019F4  0E2D               	movlw	45
 16942  0019F6                     L18:
 16943  0019F6  6F6A               	movwf	i2_efgtoa$1547& (0+255),b
 16944                           
 16945                           ; BSR set to: 0
 16946  0019F8  0E64               	movlw	low _dbuf
 16947  0019FA  258A               	addwf	i2efgtoa@i& (0+255),w,b
 16948  0019FC  6ED9               	movwf	fsr2l,c
 16949  0019FE  0E02               	movlw	high _dbuf
 16950  001A00  218B               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 16951  001A02  6EDA               	movwf	fsr2h,c
 16952  001A04  C06A  FFDF         	movff	i2_efgtoa$1547,indf2
 16953                           
 16954                           ; BSR set to: 0
 16955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 16956  001A08  077F               	decf	i2efgtoa@w& (0+255),f,b
 16957  001A0A  A0D8               	btfss	status,0,c
 16958  001A0C  0780               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16959                           
 16960                           ; BSR set to: 0
 16961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16962  001A0E  078A               	decf	i2efgtoa@i& (0+255),f,b
 16963  001A10  A0D8               	btfss	status,0,c
 16964  001A12  078B               	decf	(i2efgtoa@i+1)& (0+255),f,b
 16965                           
 16966                           ; BSR set to: 0
 16967  001A14  0EBF               	movlw	191
 16968  001A16  6E47               	movwf	??i2_efgtoa& (0+255),c
 16969  001A18  0EFF               	movlw	255
 16970  001A1A  6E48               	movwf	(??i2_efgtoa+1)& (0+255),c
 16971  001A1C  5046               	movf	i2efgtoa@c,w,c
 16972  001A1E  6E49               	movwf	(??i2_efgtoa+2)& (0+255),c
 16973  001A20  6A4A               	clrf	(??i2_efgtoa+3)& (0+255),c
 16974  001A22  5047               	movf	??i2_efgtoa,w,c
 16975  001A24  2649               	addwf	??i2_efgtoa+2,f,c
 16976  001A26  5048               	movf	??i2_efgtoa+1,w,c
 16977  001A28  224A               	addwfc	??i2_efgtoa+3,f,c
 16978  001A2A  504A               	movf	??i2_efgtoa+3,w,c
 16979  001A2C  E106               	bnz	i2u858_40
 16980  001A2E  0E1A               	movlw	26
 16981  001A30  5C49               	subwf	??i2_efgtoa+2,w,c
 16982  001A32  B0D8               	btfsc	status,0,c
 16983  001A34  D002               	goto	i2u858_40
 16984  001A36  0E01               	movlw	1
 16985  001A38  D001               	goto	i2u859_40
 16986  001A3A                     i2u858_40:
 16987  001A3A  0E00               	movlw	0
 16988  001A3C                     i2u859_40:
 16989  001A3C  6F6E               	movwf	i2_efgtoa$1549& (0+255),b
 16990  001A3E  6B6F               	clrf	(i2_efgtoa$1549+1)& (0+255),b
 16991                           
 16992                           ; BSR set to: 0
 16993  001A40  516E               	movf	i2_efgtoa$1549& (0+255),w,b
 16994  001A42  116F               	iorwf	(i2_efgtoa$1549+1)& (0+255),w,b
 16995  001A44  A4D8               	btfss	status,2,c
 16996  001A46  D004               	goto	i2l6467
 16997                           
 16998                           ; BSR set to: 0
 16999  001A48  0E00               	movlw	0
 17000  001A4A  6F6D               	movwf	(i2_efgtoa$1548+1)& (0+255),b
 17001  001A4C  0E65               	movlw	101
 17002  001A4E  D003               	goto	L19
 17003  001A50                     i2l6467:
 17004                           
 17005                           ; BSR set to: 0
 17006  001A50  0E00               	movlw	0
 17007  001A52  6F6D               	movwf	(i2_efgtoa$1548+1)& (0+255),b
 17008  001A54  0E45               	movlw	69
 17009  001A56                     L19:
 17010  001A56  6F6C               	movwf	i2_efgtoa$1548& (0+255),b
 17011                           
 17012                           ; BSR set to: 0
 17013  001A58  0E64               	movlw	low _dbuf
 17014  001A5A  258A               	addwf	i2efgtoa@i& (0+255),w,b
 17015  001A5C  6ED9               	movwf	fsr2l,c
 17016  001A5E  0E02               	movlw	high _dbuf
 17017  001A60  218B               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 17018  001A62  6EDA               	movwf	fsr2h,c
 17019  001A64  C06C  FFDF         	movff	i2_efgtoa$1548,indf2
 17020                           
 17021                           ; BSR set to: 0
 17022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 17023  001A68  077F               	decf	i2efgtoa@w& (0+255),f,b
 17024  001A6A  A0D8               	btfss	status,0,c
 17025  001A6C  0780               	decf	(i2efgtoa@w+1)& (0+255),f,b
 17026                           
 17027                           ; BSR set to: 0
 17028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 17029  001A6E  0E64               	movlw	low _dbuf
 17030  001A70  2592               	addwf	i2efgtoa@n& (0+255),w,b
 17031  001A72  6E01               	movwf	i2strcpy@dest,c
 17032  001A74  0E02               	movlw	high _dbuf
 17033  001A76  2193               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 17034  001A78  6E02               	movwf	i2strcpy@dest+1,c
 17035  001A7A  0E64               	movlw	low _dbuf
 17036  001A7C  258A               	addwf	i2efgtoa@i& (0+255),w,b
 17037  001A7E  6E03               	movwf	i2strcpy@src,c
 17038  001A80  0E02               	movlw	high _dbuf
 17039  001A82  218B               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 17040  001A84  6E04               	movwf	i2strcpy@src+1,c
 17041  001A86  ECB2  F036         	call	i2_strcpy	;wreg free
 17042  001A8A  EF0D  F009         	goto	i2l6225
 17043  001A8E                     __end_ofi2_efgtoa:
 17044                           	opt callstack 0
 17045                           
 17046 ;; *************** function i2_tolower *****************
 17047 ;; Defined at:
 17048 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;  c               2    6[COMRAM] int 
 17051 ;; Auto vars:     Size  Location     Type
 17052 ;;		None
 17053 ;; Return value:  Size  Location     Type
 17054 ;;                  2    6[COMRAM] int 
 17055 ;; Registers used:
 17056 ;;		wreg, status,2, status,0
 17057 ;; Tracked objects:
 17058 ;;		On entry : 0/0
 17059 ;;		On exit  : 0/0
 17060 ;;		Unchanged: 0/0
 17061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17064 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17065 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17066 ;;Total ram usage:        8 bytes
 17067 ;; Hardware stack levels used:    1
 17068 ;; Hardware stack levels required when called:    1
 17069 ;; This function calls:
 17070 ;;		i2_isupper
 17071 ;; This function is called by:
 17072 ;;		i2_efgtoa
 17073 ;;		i2_vfpfcnvrt
 17074 ;; This function uses a non-reentrant model
 17075 ;;
 17076                           
 17077                           	psect	text80
 17078  006E58                     __ptext80:
 17079                           	opt callstack 0
 17080  006E58                     i2_tolower:
 17081                           	opt callstack 10
 17082                           
 17083                           ;incstack = 0
 17084  006E58  0EBF               	movlw	191
 17085  006E5A  6E09               	movwf	??i2_tolower& (0+255),c
 17086  006E5C  0EFF               	movlw	255
 17087  006E5E  6E0A               	movwf	(??i2_tolower+1)& (0+255),c
 17088  006E60  C007  F00B         	movff	i2tolower@c,??i2_tolower+2
 17089  006E64  C008  F00C         	movff	i2tolower@c+1,??i2_tolower+3
 17090  006E68  5009               	movf	??i2_tolower,w,c
 17091  006E6A  260B               	addwf	??i2_tolower+2,f,c
 17092  006E6C  500A               	movf	??i2_tolower+1,w,c
 17093  006E6E  220C               	addwfc	??i2_tolower+3,f,c
 17094  006E70  500C               	movf	??i2_tolower+3,w,c
 17095  006E72  E106               	bnz	i2u787_40
 17096  006E74  0E1A               	movlw	26
 17097  006E76  5C0B               	subwf	??i2_tolower+2,w,c
 17098  006E78  B0D8               	btfsc	status,0,c
 17099  006E7A  D002               	goto	i2u787_40
 17100  006E7C  0E01               	movlw	1
 17101  006E7E  D001               	goto	i2u788_40
 17102  006E80                     i2u787_40:
 17103  006E80  0E00               	movlw	0
 17104  006E82                     i2u788_40:
 17105  006E82  6E0D               	movwf	i2_tolower$2163,c
 17106  006E84  6A0E               	clrf	i2_tolower$2163+1,c
 17107  006E86  500D               	movf	i2_tolower$2163,w,c
 17108  006E88  100E               	iorwf	i2_tolower$2163+1,w,c
 17109  006E8A  B4D8               	btfsc	status,2,c
 17110  006E8C  D006               	goto	i2l1569
 17111  006E8E  0E20               	movlw	32
 17112  006E90  1007               	iorwf	i2tolower@c,w,c
 17113  006E92  6E07               	movwf	?i2_tolower,c
 17114  006E94  5008               	movf	i2tolower@c+1,w,c
 17115  006E96  6E08               	movwf	?i2_tolower+1,c
 17116  006E98  0012               	return	
 17117  006E9A                     i2l1569:
 17118  006E9A  C007  F007         	movff	i2tolower@c,?i2_tolower
 17119  006E9E  C008  F008         	movff	i2tolower@c+1,?i2_tolower+1
 17120  006EA2  0012               	return		;funcret
 17121  006EA4                     __end_ofi2_tolower:
 17122                           	opt callstack 0
 17123                           
 17124 ;; *************** function i2_isupper *****************
 17125 ;; Defined at:
 17126 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 17127 ;; Parameters:    Size  Location     Type
 17128 ;;  c               2    0[COMRAM] int 
 17129 ;; Auto vars:     Size  Location     Type
 17130 ;;		None
 17131 ;; Return value:  Size  Location     Type
 17132 ;;                  2    0[COMRAM] int 
 17133 ;; Registers used:
 17134 ;;		wreg, status,2, status,0
 17135 ;; Tracked objects:
 17136 ;;		On entry : 0/0
 17137 ;;		On exit  : 0/0
 17138 ;;		Unchanged: 0/0
 17139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17144 ;;Total ram usage:        6 bytes
 17145 ;; Hardware stack levels used:    1
 17146 ;; This function calls:
 17147 ;;		Nothing
 17148 ;; This function is called by:
 17149 ;;		i2_efgtoa
 17150 ;;		i2_vfpfcnvrt
 17151 ;;		i2_tolower
 17152 ;; This function uses a non-reentrant model
 17153 ;;
 17154                           
 17155                           	psect	text81
 17156  0071C0                     __ptext81:
 17157                           	opt callstack 0
 17158  0071C0                     i2_isupper:
 17159                           	opt callstack 10
 17160                           
 17161                           ;incstack = 0
 17162  0071C0  0EBF               	movlw	191
 17163  0071C2  6E03               	movwf	??i2_isupper& (0+255),c
 17164  0071C4  0EFF               	movlw	255
 17165  0071C6  6E04               	movwf	(??i2_isupper+1)& (0+255),c
 17166  0071C8  C001  F005         	movff	i2isupper@c,??i2_isupper+2
 17167  0071CC  C002  F006         	movff	i2isupper@c+1,??i2_isupper+3
 17168  0071D0  5003               	movf	??i2_isupper,w,c
 17169  0071D2  2605               	addwf	??i2_isupper+2,f,c
 17170  0071D4  5004               	movf	??i2_isupper+1,w,c
 17171  0071D6  2206               	addwfc	??i2_isupper+3,f,c
 17172  0071D8  5006               	movf	??i2_isupper+3,w,c
 17173  0071DA  E106               	bnz	i2u672_40
 17174  0071DC  0E1A               	movlw	26
 17175  0071DE  5C05               	subwf	??i2_isupper+2,w,c
 17176  0071E0  B0D8               	btfsc	status,0,c
 17177  0071E2  D002               	goto	i2u672_40
 17178  0071E4  0E01               	movlw	1
 17179  0071E6  D001               	goto	i2u673_40
 17180  0071E8                     i2u672_40:
 17181  0071E8  0E00               	movlw	0
 17182  0071EA                     i2u673_40:
 17183  0071EA  6E01               	movwf	?i2_isupper,c
 17184  0071EC  6A02               	clrf	?i2_isupper+1,c
 17185  0071EE  0012               	return		;funcret
 17186  0071F0                     __end_ofi2_isupper:
 17187                           	opt callstack 0
 17188                           
 17189 ;; *************** function i2_strcpy *****************
 17190 ;; Defined at:
 17191 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 17192 ;; Parameters:    Size  Location     Type
 17193 ;;  dest            2    0[COMRAM] PTR unsigned char 
 17194 ;;		 -> dbuf(80), 
 17195 ;;  src             2    2[COMRAM] PTR const unsigned char 
 17196 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
 17197 ;;		 -> dbuf(80), 
 17198 ;; Auto vars:     Size  Location     Type
 17199 ;;  strcpy          2    8[COMRAM] PTR unsigned char 
 17200 ;;		 -> dbuf(80), 
 17201 ;;  strcpy          2    6[COMRAM] PTR const unsigned char 
 17202 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
 17203 ;;		 -> dbuf(80), 
 17204 ;; Return value:  Size  Location     Type
 17205 ;;                  2    0[COMRAM] PTR unsigned char 
 17206 ;; Registers used:
 17207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17208 ;; Tracked objects:
 17209 ;;		On entry : 0/0
 17210 ;;		On exit  : 0/0
 17211 ;;		Unchanged: 0/0
 17212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17213 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17214 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17216 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17217 ;;Total ram usage:       10 bytes
 17218 ;; Hardware stack levels used:    1
 17219 ;; This function calls:
 17220 ;;		Nothing
 17221 ;; This function is called by:
 17222 ;;		i2_efgtoa
 17223 ;; This function uses a non-reentrant model
 17224 ;;
 17225                           
 17226                           	psect	text82
 17227  006D64                     __ptext82:
 17228                           	opt callstack 0
 17229  006D64                     i2_strcpy:
 17230                           	opt callstack 10
 17231                           
 17232                           ;incstack = 0
 17233  006D64  C003  F007         	movff	i2strcpy@src,i2strcpy@s
 17234  006D68  C004  F008         	movff	i2strcpy@src+1,i2strcpy@s+1
 17235  006D6C  C001  F009         	movff	i2strcpy@dest,i2strcpy@d
 17236  006D70  C002  F00A         	movff	i2strcpy@dest+1,i2strcpy@d+1
 17237  006D74                     i2l6093:
 17238  006D74  5007               	movf	i2strcpy@s,w,c
 17239  006D76  6E05               	movwf	??i2_strcpy& (0+255),c
 17240  006D78  5008               	movf	i2strcpy@s+1,w,c
 17241  006D7A  6E06               	movwf	(??i2_strcpy+1)& (0+255),c
 17242  006D7C  4A07               	infsnz	i2strcpy@s,f,c
 17243  006D7E  2A08               	incf	i2strcpy@s+1,f,c
 17244  006D80  C005  FFF6         	movff	??i2_strcpy,tblptrl
 17245  006D84  C006  FFF7         	movff	??i2_strcpy+1,tblptrh
 17246  006D88  0E00               	movlw	low (__smallconst shr (0+16))
 17247  006D8A  6EF8               	movwf	tblptru,c
 17248  006D8C  C009  FFD9         	movff	i2strcpy@d,fsr2l
 17249  006D90  C00A  FFDA         	movff	i2strcpy@d+1,fsr2h
 17250  006D94  4A09               	infsnz	i2strcpy@d,f,c
 17251  006D96  2A0A               	incf	i2strcpy@d+1,f,c
 17252  006D98  0E0F               	movlw	(high __ramtop+-1)
 17253  006D9A  64F7               	cpfsgt	tblptrh,c
 17254  006D9C  D003               	bra	i2u785_47
 17255  006D9E  0008               	tblrd		*
 17256  006DA0  50F5               	movf	tablat,w,c
 17257  006DA2  D005               	bra	i2u785_40
 17258  006DA4                     i2u785_47:
 17259  006DA4  CFF6 FFE1          	movff	tblptrl,fsr1l
 17260  006DA8  CFF7 FFE2          	movff	tblptrh,fsr1h
 17261  006DAC  50E7               	movf	indf1,w,c
 17262  006DAE                     i2u785_40:
 17263  006DAE  6EDF               	movwf	indf2,c
 17264  006DB0  50DF               	movf	indf2,w,c
 17265  006DB2  B4D8               	btfsc	status,2,c
 17266  006DB4  0012               	return	
 17267  006DB6  D7DE               	goto	i2l6093
 17268  006DB8                     __end_ofi2_strcpy:
 17269                           	opt callstack 0
 17270                           
 17271 ;; *************** function i2_floorf *****************
 17272 ;; Defined at:
 17273 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 17274 ;; Parameters:    Size  Location     Type
 17275 ;;  x               4   25[COMRAM] float 
 17276 ;; Auto vars:     Size  Location     Type
 17277 ;;  floorf          4   41[COMRAM] struct .
 17278 ;;  floorf          4   35[COMRAM] unsigned long 
 17279 ;;  floorf          2   39[COMRAM] int 
 17280 ;; Return value:  Size  Location     Type
 17281 ;;                  4   25[COMRAM] float 
 17282 ;; Registers used:
 17283 ;;		wreg, status,2, status,0
 17284 ;; Tracked objects:
 17285 ;;		On entry : 0/0
 17286 ;;		On exit  : 0/0
 17287 ;;		Unchanged: 0/0
 17288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17290 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17291 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17292 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17293 ;;Total ram usage:       20 bytes
 17294 ;; Hardware stack levels used:    1
 17295 ;; This function calls:
 17296 ;;		Nothing
 17297 ;; This function is called by:
 17298 ;;		i2_efgtoa
 17299 ;; This function uses a non-reentrant model
 17300 ;;
 17301                           
 17302                           	psect	text83
 17303  004528                     __ptext83:
 17304                           	opt callstack 0
 17305  004528                     i2_floorf:
 17306                           	opt callstack 10
 17307                           
 17308                           ;incstack = 0
 17309  004528  C256  F02A         	movff	floorf@F524,i2floorf@u
 17310  00452C  C257  F02B         	movff	floorf@F524+1,i2floorf@u+1
 17311  004530  C258  F02C         	movff	floorf@F524+2,i2floorf@u+2
 17312  004534  C259  F02D         	movff	floorf@F524+3,i2floorf@u+3
 17313  004538  C01A  F02A         	movff	i2floorf@x,i2floorf@u
 17314  00453C  C01B  F02B         	movff	i2floorf@x+1,i2floorf@u+1
 17315  004540  C01C  F02C         	movff	i2floorf@x+2,i2floorf@u+2
 17316  004544  C01D  F02D         	movff	i2floorf@x+3,i2floorf@u+3
 17317  004548  0E81               	movlw	129
 17318  00454A  6E1E               	movwf	??i2_floorf& (0+255),c
 17319  00454C  0EFF               	movlw	255
 17320  00454E  6E1F               	movwf	(??i2_floorf+1)& (0+255),c
 17321  004550  C02A  F020         	movff	i2floorf@u,??i2_floorf+2
 17322  004554  C02B  F021         	movff	i2floorf@u+1,??i2_floorf+3
 17323  004558  C02C  F022         	movff	i2floorf@u+2,??i2_floorf+4
 17324  00455C  C02D  F023         	movff	i2floorf@u+3,??i2_floorf+5
 17325  004560  0E18               	movlw	24
 17326  004562  D005               	goto	i2u771_40
 17327  004564                     i2u771_45:
 17328  004564  90D8               	bcf	status,0,c
 17329  004566  3223               	rrcf	??i2_floorf+5,f,c
 17330  004568  3222               	rrcf	??i2_floorf+4,f,c
 17331  00456A  3221               	rrcf	??i2_floorf+3,f,c
 17332  00456C  3220               	rrcf	??i2_floorf+2,f,c
 17333  00456E                     i2u771_40:
 17334  00456E  2EE8               	decfsz	wreg,f,c
 17335  004570  D7F9               	goto	i2u771_45
 17336  004572  5020               	movf	??i2_floorf+2,w,c
 17337  004574  241E               	addwf	??i2_floorf,w,c
 17338  004576  6E28               	movwf	i2floorf@e,c
 17339  004578  0E00               	movlw	0
 17340  00457A  201F               	addwfc	??i2_floorf+1,w,c
 17341  00457C  6E29               	movwf	i2floorf@e+1,c
 17342  00457E  BE29               	btfsc	i2floorf@e+1,7,c
 17343  004580  D00F               	goto	i2l6053
 17344  004582  5029               	movf	i2floorf@e+1,w,c
 17345  004584  E104               	bnz	i2u772_40
 17346  004586  0E17               	movlw	23
 17347  004588  5C28               	subwf	i2floorf@e,w,c
 17348  00458A  A0D8               	btfss	status,0,c
 17349  00458C  D009               	goto	i2l6053
 17350  00458E                     i2u772_40:
 17351  00458E  C01A  F01A         	movff	i2floorf@x,?i2_floorf
 17352  004592  C01B  F01B         	movff	i2floorf@x+1,?i2_floorf+1
 17353  004596  C01C  F01C         	movff	i2floorf@x+2,?i2_floorf+2
 17354  00459A  C01D  F01D         	movff	i2floorf@x+3,?i2_floorf+3
 17355  00459E  0012               	return	
 17356  0045A0                     i2l6053:
 17357  0045A0  BE29               	btfsc	i2floorf@e+1,7,c
 17358  0045A2  D05E               	goto	i2l6063
 17359  0045A4  C028  F01E         	movff	i2floorf@e,??i2_floorf
 17360  0045A8  0EFF               	movlw	255
 17361  0045AA  6E1F               	movwf	(??i2_floorf+1)& (0+255),c
 17362  0045AC  0EFF               	movlw	255
 17363  0045AE  6E20               	movwf	(??i2_floorf+2)& (0+255),c
 17364  0045B0  0E7F               	movlw	127
 17365  0045B2  6E21               	movwf	(??i2_floorf+3)& (0+255),c
 17366  0045B4  0E00               	movlw	0
 17367  0045B6  6E22               	movwf	(??i2_floorf+4)& (0+255),c
 17368  0045B8                     i2u774_45:
 17369  0045B8  661E               	tstfsz	??i2_floorf,c
 17370  0045BA  D001               	goto	i2u774_46
 17371  0045BC  D007               	goto	i2u774_47
 17372  0045BE                     i2u774_46:
 17373  0045BE  3422               	rlcf	??i2_floorf+4,w,c
 17374  0045C0  3222               	rrcf	??i2_floorf+4,f,c
 17375  0045C2  3221               	rrcf	??i2_floorf+3,f,c
 17376  0045C4  3220               	rrcf	??i2_floorf+2,f,c
 17377  0045C6  321F               	rrcf	??i2_floorf+1,f,c
 17378  0045C8  2E1E               	decfsz	??i2_floorf,f,c
 17379  0045CA  D7F6               	goto	i2u774_45
 17380  0045CC                     i2u774_47:
 17381  0045CC  C01F  F024         	movff	??i2_floorf+1,i2floorf@m
 17382  0045D0  C020  F025         	movff	??i2_floorf+2,i2floorf@m+1
 17383  0045D4  C021  F026         	movff	??i2_floorf+3,i2floorf@m+2
 17384  0045D8  C022  F027         	movff	??i2_floorf+4,i2floorf@m+3
 17385  0045DC  5024               	movf	i2floorf@m,w,c
 17386  0045DE  142A               	andwf	i2floorf@u,w,c
 17387  0045E0  6E1E               	movwf	??i2_floorf& (0+255),c
 17388  0045E2  5025               	movf	i2floorf@m+1,w,c
 17389  0045E4  142B               	andwf	i2floorf@u+1,w,c
 17390  0045E6  6E1F               	movwf	(??i2_floorf+1)& (0+255),c
 17391  0045E8  5026               	movf	i2floorf@m+2,w,c
 17392  0045EA  142C               	andwf	i2floorf@u+2,w,c
 17393  0045EC  6E20               	movwf	(??i2_floorf+2)& (0+255),c
 17394  0045EE  5027               	movf	i2floorf@m+3,w,c
 17395  0045F0  142D               	andwf	i2floorf@u+3,w,c
 17396  0045F2  6E21               	movwf	(??i2_floorf+3)& (0+255),c
 17397  0045F4  501E               	movf	??i2_floorf,w,c
 17398  0045F6  101F               	iorwf	??i2_floorf+1,w,c
 17399  0045F8  1020               	iorwf	??i2_floorf+2,w,c
 17400  0045FA  1021               	iorwf	??i2_floorf+3,w,c
 17401  0045FC  B4D8               	btfsc	status,2,c
 17402  0045FE  D7C7               	goto	i2u772_40
 17403  004600  C02A  F01E         	movff	i2floorf@u,??i2_floorf
 17404  004604  C02B  F01F         	movff	i2floorf@u+1,??i2_floorf+1
 17405  004608  C02C  F020         	movff	i2floorf@u+2,??i2_floorf+2
 17406  00460C  C02D  F021         	movff	i2floorf@u+3,??i2_floorf+3
 17407  004610  0E20               	movlw	32
 17408  004612  D005               	goto	i2u776_40
 17409  004614                     i2u776_45:
 17410  004614  90D8               	bcf	status,0,c
 17411  004616  3221               	rrcf	??i2_floorf+3,f,c
 17412  004618  3220               	rrcf	??i2_floorf+2,f,c
 17413  00461A  321F               	rrcf	??i2_floorf+1,f,c
 17414  00461C  321E               	rrcf	??i2_floorf,f,c
 17415  00461E                     i2u776_40:
 17416  00461E  2EE8               	decfsz	wreg,f,c
 17417  004620  D7F9               	goto	i2u776_45
 17418  004622  501E               	movf	??i2_floorf,w,c
 17419  004624  101F               	iorwf	??i2_floorf+1,w,c
 17420  004626  1020               	iorwf	??i2_floorf+2,w,c
 17421  004628  1021               	iorwf	??i2_floorf+3,w,c
 17422  00462A  B4D8               	btfsc	status,2,c
 17423  00462C  D008               	goto	i2l1485
 17424  00462E  5024               	movf	i2floorf@m,w,c
 17425  004630  262A               	addwf	i2floorf@u,f,c
 17426  004632  5025               	movf	i2floorf@m+1,w,c
 17427  004634  222B               	addwfc	i2floorf@u+1,f,c
 17428  004636  5026               	movf	i2floorf@m+2,w,c
 17429  004638  222C               	addwfc	i2floorf@u+2,f,c
 17430  00463A  5027               	movf	i2floorf@m+3,w,c
 17431  00463C  222D               	addwfc	i2floorf@u+3,f,c
 17432  00463E                     i2l1485:
 17433  00463E  1C24               	comf	i2floorf@m,w,c
 17434  004640  6E1E               	movwf	??i2_floorf& (0+255),c
 17435  004642  1C25               	comf	i2floorf@m+1,w,c
 17436  004644  6E1F               	movwf	(??i2_floorf+1)& (0+255),c
 17437  004646  1C26               	comf	i2floorf@m+2,w,c
 17438  004648  6E20               	movwf	(??i2_floorf+2)& (0+255),c
 17439  00464A  1C27               	comf	i2floorf@m+3,w,c
 17440  00464C  6E21               	movwf	(??i2_floorf+3)& (0+255),c
 17441  00464E  501E               	movf	??i2_floorf,w,c
 17442  004650  162A               	andwf	i2floorf@u,f,c
 17443  004652  501F               	movf	??i2_floorf+1,w,c
 17444  004654  162B               	andwf	i2floorf@u+1,f,c
 17445  004656  5020               	movf	??i2_floorf+2,w,c
 17446  004658  162C               	andwf	i2floorf@u+2,f,c
 17447  00465A  5021               	movf	??i2_floorf+3,w,c
 17448  00465C  162D               	andwf	i2floorf@u+3,f,c
 17449  00465E  D036               	goto	i2l6071
 17450  004660                     i2l6063:
 17451  004660  C02A  F01E         	movff	i2floorf@u,??i2_floorf
 17452  004664  C02B  F01F         	movff	i2floorf@u+1,??i2_floorf+1
 17453  004668  C02C  F020         	movff	i2floorf@u+2,??i2_floorf+2
 17454  00466C  C02D  F021         	movff	i2floorf@u+3,??i2_floorf+3
 17455  004670  0E20               	movlw	32
 17456  004672  D005               	goto	i2u778_40
 17457  004674                     i2u778_45:
 17458  004674  90D8               	bcf	status,0,c
 17459  004676  3221               	rrcf	??i2_floorf+3,f,c
 17460  004678  3220               	rrcf	??i2_floorf+2,f,c
 17461  00467A  321F               	rrcf	??i2_floorf+1,f,c
 17462  00467C  321E               	rrcf	??i2_floorf,f,c
 17463  00467E                     i2u778_40:
 17464  00467E  2EE8               	decfsz	wreg,f,c
 17465  004680  D7F9               	goto	i2u778_45
 17466  004682  501E               	movf	??i2_floorf,w,c
 17467  004684  101F               	iorwf	??i2_floorf+1,w,c
 17468  004686  1020               	iorwf	??i2_floorf+2,w,c
 17469  004688  1021               	iorwf	??i2_floorf+3,w,c
 17470  00468A  A4D8               	btfss	status,2,c
 17471  00468C  D008               	goto	i2l6067
 17472  00468E  0E00               	movlw	0
 17473  004690  6E2A               	movwf	i2floorf@u,c
 17474  004692  0E00               	movlw	0
 17475  004694  6E2B               	movwf	i2floorf@u+1,c
 17476  004696  0E00               	movlw	0
 17477  004698  6E2C               	movwf	i2floorf@u+2,c
 17478  00469A  0E00               	movlw	0
 17479  00469C  D016               	goto	L20
 17480  00469E                     i2l6067:
 17481  00469E  90D8               	bcf	status,0,c
 17482  0046A0  342A               	rlcf	i2floorf@u,w,c
 17483  0046A2  6E1E               	movwf	??i2_floorf& (0+255),c
 17484  0046A4  342B               	rlcf	i2floorf@u+1,w,c
 17485  0046A6  6E1F               	movwf	(??i2_floorf+1)& (0+255),c
 17486  0046A8  342C               	rlcf	i2floorf@u+2,w,c
 17487  0046AA  6E20               	movwf	(??i2_floorf+2)& (0+255),c
 17488  0046AC  342D               	rlcf	i2floorf@u+3,w,c
 17489  0046AE  6E21               	movwf	(??i2_floorf+3)& (0+255),c
 17490  0046B0  501E               	movf	??i2_floorf,w,c
 17491  0046B2  101F               	iorwf	??i2_floorf+1,w,c
 17492  0046B4  1020               	iorwf	??i2_floorf+2,w,c
 17493  0046B6  1021               	iorwf	??i2_floorf+3,w,c
 17494  0046B8  B4D8               	btfsc	status,2,c
 17495  0046BA  D008               	goto	i2l6071
 17496  0046BC  0E00               	movlw	0
 17497  0046BE  6E2A               	movwf	i2floorf@u,c
 17498  0046C0  0E00               	movlw	0
 17499  0046C2  6E2B               	movwf	i2floorf@u+1,c
 17500  0046C4  0E80               	movlw	128
 17501  0046C6  6E2C               	movwf	i2floorf@u+2,c
 17502  0046C8  0EBF               	movlw	191
 17503  0046CA                     L20:
 17504  0046CA  6E2D               	movwf	i2floorf@u+3,c
 17505  0046CC                     i2l6071:
 17506  0046CC  C02A  F01A         	movff	i2floorf@u,?i2_floorf
 17507  0046D0  C02B  F01B         	movff	i2floorf@u+1,?i2_floorf+1
 17508  0046D4  C02C  F01C         	movff	i2floorf@u+2,?i2_floorf+2
 17509  0046D8  C02D  F01D         	movff	i2floorf@u+3,?i2_floorf+3
 17510  0046DC  0012               	return		;funcret
 17511  0046DE                     __end_ofi2_floorf:
 17512                           	opt callstack 0
 17513                           
 17514 ;; *************** function i2___fpclassifyf *****************
 17515 ;; Defined at:
 17516 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 17517 ;; Parameters:    Size  Location     Type
 17518 ;;  x               4    0[COMRAM] float 
 17519 ;; Auto vars:     Size  Location     Type
 17520 ;;  __fpclassify    4   10[COMRAM] struct .
 17521 ;;  __fpclassify    2    8[COMRAM] int 
 17522 ;; Return value:  Size  Location     Type
 17523 ;;                  2    0[COMRAM] int 
 17524 ;; Registers used:
 17525 ;;		wreg, status,2, status,0
 17526 ;; Tracked objects:
 17527 ;;		On entry : 0/0
 17528 ;;		On exit  : 0/0
 17529 ;;		Unchanged: 0/0
 17530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17532 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17533 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17534 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17535 ;;Total ram usage:       14 bytes
 17536 ;; Hardware stack levels used:    1
 17537 ;; This function calls:
 17538 ;;		Nothing
 17539 ;; This function is called by:
 17540 ;;		i2_efgtoa
 17541 ;; This function uses a non-reentrant model
 17542 ;;
 17543                           
 17544                           	psect	text84
 17545  005C0A                     __ptext84:
 17546                           	opt callstack 0
 17547  005C0A                     i2___fpclassifyf:
 17548                           	opt callstack 10
 17549                           
 17550                           ;incstack = 0
 17551  005C0A  C1D7  F00B         	movff	___fpclassifyf@F463,i2___fpclassifyf@u
 17552  005C0E  C1D8  F00C         	movff	___fpclassifyf@F463+1,i2___fpclassifyf@u+1
 17553  005C12  C1D9  F00D         	movff	___fpclassifyf@F463+2,i2___fpclassifyf@u+2
 17554  005C16  C1DA  F00E         	movff	___fpclassifyf@F463+3,i2___fpclassifyf@u+3
 17555  005C1A  C001  F00B         	movff	i2___fpclassifyf@x,i2___fpclassifyf@u
 17556  005C1E  C002  F00C         	movff	i2___fpclassifyf@x+1,i2___fpclassifyf@u+1
 17557  005C22  C003  F00D         	movff	i2___fpclassifyf@x+2,i2___fpclassifyf@u+2
 17558  005C26  C004  F00E         	movff	i2___fpclassifyf@x+3,i2___fpclassifyf@u+3
 17559  005C2A  C00B  F005         	movff	i2___fpclassifyf@u,??i2___fpclassifyf
 17560  005C2E  C00C  F006         	movff	i2___fpclassifyf@u+1,??i2___fpclassifyf+1
 17561  005C32  C00D  F007         	movff	i2___fpclassifyf@u+2,??i2___fpclassifyf+2
 17562  005C36  C00E  F008         	movff	i2___fpclassifyf@u+3,??i2___fpclassifyf+3
 17563  005C3A  0E18               	movlw	24
 17564  005C3C  D005               	goto	i2u763_40
 17565  005C3E                     i2u763_45:
 17566  005C3E  90D8               	bcf	status,0,c
 17567  005C40  3208               	rrcf	??i2___fpclassifyf+3,f,c
 17568  005C42  3207               	rrcf	??i2___fpclassifyf+2,f,c
 17569  005C44  3206               	rrcf	??i2___fpclassifyf+1,f,c
 17570  005C46  3205               	rrcf	??i2___fpclassifyf,f,c
 17571  005C48                     i2u763_40:
 17572  005C48  2EE8               	decfsz	wreg,f,c
 17573  005C4A  D7F9               	goto	i2u763_45
 17574  005C4C  5005               	movf	??i2___fpclassifyf,w,c
 17575  005C4E  6E09               	movwf	i2___fpclassifyf@e,c
 17576  005C50  6A0A               	clrf	i2___fpclassifyf@e+1,c
 17577  005C52  5009               	movf	i2___fpclassifyf@e,w,c
 17578  005C54  100A               	iorwf	i2___fpclassifyf@e+1,w,c
 17579  005C56  A4D8               	btfss	status,2,c
 17580  005C58  D019               	goto	i2l6033
 17581  005C5A  90D8               	bcf	status,0,c
 17582  005C5C  340B               	rlcf	i2___fpclassifyf@u,w,c
 17583  005C5E  6E05               	movwf	??i2___fpclassifyf& (0+255),c
 17584  005C60  340C               	rlcf	i2___fpclassifyf@u+1,w,c
 17585  005C62  6E06               	movwf	(??i2___fpclassifyf+1)& (0+255),c
 17586  005C64  340D               	rlcf	i2___fpclassifyf@u+2,w,c
 17587  005C66  6E07               	movwf	(??i2___fpclassifyf+2)& (0+255),c
 17588  005C68  340E               	rlcf	i2___fpclassifyf@u+3,w,c
 17589  005C6A  6E08               	movwf	(??i2___fpclassifyf+3)& (0+255),c
 17590  005C6C  5005               	movf	??i2___fpclassifyf,w,c
 17591  005C6E  1006               	iorwf	??i2___fpclassifyf+1,w,c
 17592  005C70  1007               	iorwf	??i2___fpclassifyf+2,w,c
 17593  005C72  1008               	iorwf	??i2___fpclassifyf+3,w,c
 17594  005C74  A4D8               	btfss	status,2,c
 17595  005C76  D005               	goto	i2l6029
 17596  005C78  0E00               	movlw	0
 17597  005C7A  6E02               	movwf	?i2___fpclassifyf+1,c
 17598  005C7C  0E02               	movlw	2
 17599  005C7E  6E01               	movwf	?i2___fpclassifyf,c
 17600  005C80  0012               	return	
 17601  005C82                     i2l6029:
 17602  005C82  0E00               	movlw	0
 17603  005C84  6E02               	movwf	?i2___fpclassifyf+1,c
 17604  005C86  0E03               	movlw	3
 17605  005C88  6E01               	movwf	?i2___fpclassifyf,c
 17606  005C8A  0012               	return	
 17607  005C8C                     i2l6033:
 17608  005C8C  2809               	incf	i2___fpclassifyf@e,w,c
 17609  005C8E  100A               	iorwf	i2___fpclassifyf@e+1,w,c
 17610  005C90  A4D8               	btfss	status,2,c
 17611  005C92  D01C               	goto	i2l6039
 17612  005C94  C00B  F005         	movff	i2___fpclassifyf@u,??i2___fpclassifyf
 17613  005C98  C00C  F006         	movff	i2___fpclassifyf@u+1,??i2___fpclassifyf+1
 17614  005C9C  C00D  F007         	movff	i2___fpclassifyf@u+2,??i2___fpclassifyf+2
 17615  005CA0  C00E  F008         	movff	i2___fpclassifyf@u+3,??i2___fpclassifyf+3
 17616  005CA4  0E09               	movlw	9
 17617  005CA6                     i2u767_45:
 17618  005CA6  90D8               	bcf	status,0,c
 17619  005CA8  3605               	rlcf	??i2___fpclassifyf,f,c
 17620  005CAA  3606               	rlcf	??i2___fpclassifyf+1,f,c
 17621  005CAC  3607               	rlcf	??i2___fpclassifyf+2,f,c
 17622  005CAE  3608               	rlcf	??i2___fpclassifyf+3,f,c
 17623  005CB0  2EE8               	decfsz	wreg,f,c
 17624  005CB2  D7F9               	goto	i2u767_45
 17625  005CB4  5005               	movf	??i2___fpclassifyf,w,c
 17626  005CB6  1006               	iorwf	??i2___fpclassifyf+1,w,c
 17627  005CB8  1007               	iorwf	??i2___fpclassifyf+2,w,c
 17628  005CBA  1008               	iorwf	??i2___fpclassifyf+3,w,c
 17629  005CBC  A4D8               	btfss	status,2,c
 17630  005CBE  D002               	goto	i2u768_40
 17631  005CC0  0E01               	movlw	1
 17632  005CC2  D001               	goto	i2u769_40
 17633  005CC4                     i2u768_40:
 17634  005CC4  0E00               	movlw	0
 17635  005CC6                     i2u769_40:
 17636  005CC6  6E01               	movwf	?i2___fpclassifyf,c
 17637  005CC8  6A02               	clrf	?i2___fpclassifyf+1,c
 17638  005CCA  0012               	return	
 17639  005CCC                     i2l6039:
 17640  005CCC  0E00               	movlw	0
 17641  005CCE  6E02               	movwf	?i2___fpclassifyf+1,c
 17642  005CD0  0E04               	movlw	4
 17643  005CD2  6E01               	movwf	?i2___fpclassifyf,c
 17644  005CD4  0012               	return		;funcret
 17645  005CD6                     __end_ofi2___fpclassifyf:
 17646                           	opt callstack 0
 17647                           
 17648 ;; *************** function i2___flneg *****************
 17649 ;; Defined at:
 17650 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 17651 ;; Parameters:    Size  Location     Type
 17652 ;;  f1              4    0[COMRAM] int 
 17653 ;; Auto vars:     Size  Location     Type
 17654 ;;		None
 17655 ;; Return value:  Size  Location     Type
 17656 ;;                  4    0[COMRAM] int 
 17657 ;; Registers used:
 17658 ;;		wreg, status,2, status,0
 17659 ;; Tracked objects:
 17660 ;;		On entry : 0/0
 17661 ;;		On exit  : 0/0
 17662 ;;		Unchanged: 0/0
 17663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17667 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17668 ;;Total ram usage:        4 bytes
 17669 ;; Hardware stack levels used:    1
 17670 ;; This function calls:
 17671 ;;		Nothing
 17672 ;; This function is called by:
 17673 ;;		i2_efgtoa
 17674 ;; This function uses a non-reentrant model
 17675 ;;
 17676                           
 17677                           	psect	text85
 17678  00724E                     __ptext85:
 17679                           	opt callstack 0
 17680  00724E                     i2___flneg:
 17681                           	opt callstack 10
 17682                           
 17683                           ;incstack = 0
 17684  00724E  5001               	movf	i2___flneg@f1,w,c
 17685  007250  1002               	iorwf	i2___flneg@f1+1,w,c
 17686  007252  1003               	iorwf	i2___flneg@f1+2,w,c
 17687  007254  1004               	iorwf	i2___flneg@f1+3,w,c
 17688  007256  B4D8               	btfsc	status,2,c
 17689  007258  D008               	goto	i2l5699
 17690  00725A  0E00               	movlw	0
 17691  00725C  1A01               	xorwf	i2___flneg@f1,f,c
 17692  00725E  0E00               	movlw	0
 17693  007260  1A02               	xorwf	i2___flneg@f1+1,f,c
 17694  007262  0E00               	movlw	0
 17695  007264  1A03               	xorwf	i2___flneg@f1+2,f,c
 17696  007266  0E80               	movlw	128
 17697  007268  1A04               	xorwf	i2___flneg@f1+3,f,c
 17698  00726A                     i2l5699:
 17699  00726A  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 17700  00726E  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 17701  007272  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 17702  007276  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 17703  00727A  0012               	return		;funcret
 17704  00727C                     __end_ofi2___flneg:
 17705                           	opt callstack 0
 17706                           
 17707 ;; *************** function i2___flge *****************
 17708 ;; Defined at:
 17709 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 17710 ;; Parameters:    Size  Location     Type
 17711 ;;  ff1             4   51[COMRAM] int 
 17712 ;;  ff2             4   55[COMRAM] int 
 17713 ;; Auto vars:     Size  Location     Type
 17714 ;;		None
 17715 ;; Return value:  Size  Location     Type
 17716 ;;		None               void
 17717 ;; Registers used:
 17718 ;;		wreg, status,2, status,0
 17719 ;; Tracked objects:
 17720 ;;		On entry : 0/0
 17721 ;;		On exit  : 0/0
 17722 ;;		Unchanged: 0/0
 17723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17724 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17726 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17727 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17728 ;;Total ram usage:       12 bytes
 17729 ;; Hardware stack levels used:    1
 17730 ;; This function calls:
 17731 ;;		Nothing
 17732 ;; This function is called by:
 17733 ;;		i2_efgtoa
 17734 ;; This function uses a non-reentrant model
 17735 ;;
 17736                           
 17737                           	psect	text86
 17738  005A6C                     __ptext86:
 17739                           	opt callstack 0
 17740  005A6C                     i2___flge:
 17741                           	opt callstack 10
 17742                           
 17743                           ;incstack = 0
 17744  005A6C  0E00               	movlw	0
 17745  005A6E  1434               	andwf	i2___flge@ff1,w,c
 17746  005A70  6E3C               	movwf	??i2___flge& (0+255),c
 17747  005A72  0E00               	movlw	0
 17748  005A74  1435               	andwf	i2___flge@ff1+1,w,c
 17749  005A76  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 17750  005A78  0E80               	movlw	128
 17751  005A7A  1436               	andwf	i2___flge@ff1+2,w,c
 17752  005A7C  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 17753  005A7E  0E7F               	movlw	127
 17754  005A80  1437               	andwf	i2___flge@ff1+3,w,c
 17755  005A82  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 17756  005A84  503C               	movf	??i2___flge,w,c
 17757  005A86  103D               	iorwf	??i2___flge+1,w,c
 17758  005A88  103E               	iorwf	??i2___flge+2,w,c
 17759  005A8A  103F               	iorwf	??i2___flge+3,w,c
 17760  005A8C  A4D8               	btfss	status,2,c
 17761  005A8E  D008               	goto	i2l5677
 17762  005A90  0E00               	movlw	0
 17763  005A92  6E34               	movwf	i2___flge@ff1,c
 17764  005A94  0E00               	movlw	0
 17765  005A96  6E35               	movwf	i2___flge@ff1+1,c
 17766  005A98  0E00               	movlw	0
 17767  005A9A  6E36               	movwf	i2___flge@ff1+2,c
 17768  005A9C  0E00               	movlw	0
 17769  005A9E  6E37               	movwf	i2___flge@ff1+3,c
 17770  005AA0                     i2l5677:
 17771  005AA0  0E00               	movlw	0
 17772  005AA2  1438               	andwf	i2___flge@ff2,w,c
 17773  005AA4  6E3C               	movwf	??i2___flge& (0+255),c
 17774  005AA6  0E00               	movlw	0
 17775  005AA8  1439               	andwf	i2___flge@ff2+1,w,c
 17776  005AAA  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 17777  005AAC  0E80               	movlw	128
 17778  005AAE  143A               	andwf	i2___flge@ff2+2,w,c
 17779  005AB0  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 17780  005AB2  0E7F               	movlw	127
 17781  005AB4  143B               	andwf	i2___flge@ff2+3,w,c
 17782  005AB6  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 17783  005AB8  503C               	movf	??i2___flge,w,c
 17784  005ABA  103D               	iorwf	??i2___flge+1,w,c
 17785  005ABC  103E               	iorwf	??i2___flge+2,w,c
 17786  005ABE  103F               	iorwf	??i2___flge+3,w,c
 17787  005AC0  A4D8               	btfss	status,2,c
 17788  005AC2  D008               	goto	i2l5681
 17789  005AC4  0E00               	movlw	0
 17790  005AC6  6E38               	movwf	i2___flge@ff2,c
 17791  005AC8  0E00               	movlw	0
 17792  005ACA  6E39               	movwf	i2___flge@ff2+1,c
 17793  005ACC  0E00               	movlw	0
 17794  005ACE  6E3A               	movwf	i2___flge@ff2+2,c
 17795  005AD0  0E00               	movlw	0
 17796  005AD2  6E3B               	movwf	i2___flge@ff2+3,c
 17797  005AD4                     i2l5681:
 17798  005AD4  AE37               	btfss	i2___flge@ff1+3,7,c
 17799  005AD6  D009               	goto	i2l5685
 17800  005AD8  6C34               	negf	i2___flge@ff1,c
 17801  005ADA  1E35               	comf	i2___flge@ff1+1,f,c
 17802  005ADC  B0D8               	btfsc	status,0,c
 17803  005ADE  2A35               	incf	i2___flge@ff1+1,f,c
 17804  005AE0  1E36               	comf	i2___flge@ff1+2,f,c
 17805  005AE2  B0D8               	btfsc	status,0,c
 17806  005AE4  2A36               	incf	i2___flge@ff1+2,f,c
 17807  005AE6  0E80               	movlw	128
 17808  005AE8  5637               	subfwb	i2___flge@ff1+3,f,c
 17809  005AEA                     i2l5685:
 17810  005AEA  AE3B               	btfss	i2___flge@ff2+3,7,c
 17811  005AEC  D009               	goto	i2l1021
 17812  005AEE  6C38               	negf	i2___flge@ff2,c
 17813  005AF0  1E39               	comf	i2___flge@ff2+1,f,c
 17814  005AF2  B0D8               	btfsc	status,0,c
 17815  005AF4  2A39               	incf	i2___flge@ff2+1,f,c
 17816  005AF6  1E3A               	comf	i2___flge@ff2+2,f,c
 17817  005AF8  B0D8               	btfsc	status,0,c
 17818  005AFA  2A3A               	incf	i2___flge@ff2+2,f,c
 17819  005AFC  0E80               	movlw	128
 17820  005AFE  563B               	subfwb	i2___flge@ff2+3,f,c
 17821  005B00                     i2l1021:
 17822  005B00  0E00               	movlw	0
 17823  005B02  1A34               	xorwf	i2___flge@ff1,f,c
 17824  005B04  0E00               	movlw	0
 17825  005B06  1A35               	xorwf	i2___flge@ff1+1,f,c
 17826  005B08  0E00               	movlw	0
 17827  005B0A  1A36               	xorwf	i2___flge@ff1+2,f,c
 17828  005B0C  0E80               	movlw	128
 17829  005B0E  1A37               	xorwf	i2___flge@ff1+3,f,c
 17830  005B10  0E00               	movlw	0
 17831  005B12  1A38               	xorwf	i2___flge@ff2,f,c
 17832  005B14  0E00               	movlw	0
 17833  005B16  1A39               	xorwf	i2___flge@ff2+1,f,c
 17834  005B18  0E00               	movlw	0
 17835  005B1A  1A3A               	xorwf	i2___flge@ff2+2,f,c
 17836  005B1C  0E80               	movlw	128
 17837  005B1E  1A3B               	xorwf	i2___flge@ff2+3,f,c
 17838  005B20  5038               	movf	i2___flge@ff2,w,c
 17839  005B22  5C34               	subwf	i2___flge@ff1,w,c
 17840  005B24  5039               	movf	i2___flge@ff2+1,w,c
 17841  005B26  5835               	subwfb	i2___flge@ff1+1,w,c
 17842  005B28  503A               	movf	i2___flge@ff2+2,w,c
 17843  005B2A  5836               	subwfb	i2___flge@ff1+2,w,c
 17844  005B2C  503B               	movf	i2___flge@ff2+3,w,c
 17845  005B2E  5837               	subwfb	i2___flge@ff1+3,w,c
 17846  005B30  B0D8               	btfsc	status,0,c
 17847  005B32  D002               	goto	i2l5691
 17848  005B34  90D8               	bcf	status,0,c
 17849  005B36  0012               	return	
 17850  005B38                     i2l5691:
 17851  005B38  80D8               	bsf	status,0,c
 17852  005B3A  0012               	return		;funcret
 17853  005B3C                     __end_ofi2___flge:
 17854                           	opt callstack 0
 17855                           
 17856 ;; *************** function i2___fleq *****************
 17857 ;; Defined at:
 17858 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 17859 ;; Parameters:    Size  Location     Type
 17860 ;;  ff1             4    0[COMRAM] int 
 17861 ;;  ff2             4    4[COMRAM] int 
 17862 ;; Auto vars:     Size  Location     Type
 17863 ;;		None
 17864 ;; Return value:  Size  Location     Type
 17865 ;;		None               void
 17866 ;; Registers used:
 17867 ;;		wreg, status,2, status,0
 17868 ;; Tracked objects:
 17869 ;;		On entry : 0/0
 17870 ;;		On exit  : 0/0
 17871 ;;		Unchanged: 0/0
 17872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17873 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17875 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17876 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17877 ;;Total ram usage:       12 bytes
 17878 ;; Hardware stack levels used:    1
 17879 ;; This function calls:
 17880 ;;		Nothing
 17881 ;; This function is called by:
 17882 ;;		i2_efgtoa
 17883 ;; This function uses a non-reentrant model
 17884 ;;
 17885                           
 17886                           	psect	text87
 17887  0067CA                     __ptext87:
 17888                           	opt callstack 0
 17889  0067CA                     i2___fleq:
 17890                           	opt callstack 10
 17891                           
 17892                           ;incstack = 0
 17893  0067CA  0E00               	movlw	0
 17894  0067CC  1401               	andwf	i2___fleq@ff1,w,c
 17895  0067CE  6E09               	movwf	??i2___fleq& (0+255),c
 17896  0067D0  0E00               	movlw	0
 17897  0067D2  1402               	andwf	i2___fleq@ff1+1,w,c
 17898  0067D4  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 17899  0067D6  0E80               	movlw	128
 17900  0067D8  1403               	andwf	i2___fleq@ff1+2,w,c
 17901  0067DA  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 17902  0067DC  0E7F               	movlw	127
 17903  0067DE  1404               	andwf	i2___fleq@ff1+3,w,c
 17904  0067E0  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 17905  0067E2  5009               	movf	??i2___fleq,w,c
 17906  0067E4  100A               	iorwf	??i2___fleq+1,w,c
 17907  0067E6  100B               	iorwf	??i2___fleq+2,w,c
 17908  0067E8  100C               	iorwf	??i2___fleq+3,w,c
 17909  0067EA  A4D8               	btfss	status,2,c
 17910  0067EC  D008               	goto	i2l5661
 17911  0067EE  0E00               	movlw	0
 17912  0067F0  6E01               	movwf	i2___fleq@ff1,c
 17913  0067F2  0E00               	movlw	0
 17914  0067F4  6E02               	movwf	i2___fleq@ff1+1,c
 17915  0067F6  0E00               	movlw	0
 17916  0067F8  6E03               	movwf	i2___fleq@ff1+2,c
 17917  0067FA  0E00               	movlw	0
 17918  0067FC  6E04               	movwf	i2___fleq@ff1+3,c
 17919  0067FE                     i2l5661:
 17920  0067FE  0E00               	movlw	0
 17921  006800  1405               	andwf	i2___fleq@ff2,w,c
 17922  006802  6E09               	movwf	??i2___fleq& (0+255),c
 17923  006804  0E00               	movlw	0
 17924  006806  1406               	andwf	i2___fleq@ff2+1,w,c
 17925  006808  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 17926  00680A  0E80               	movlw	128
 17927  00680C  1407               	andwf	i2___fleq@ff2+2,w,c
 17928  00680E  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 17929  006810  0E7F               	movlw	127
 17930  006812  1408               	andwf	i2___fleq@ff2+3,w,c
 17931  006814  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 17932  006816  5009               	movf	??i2___fleq,w,c
 17933  006818  100A               	iorwf	??i2___fleq+1,w,c
 17934  00681A  100B               	iorwf	??i2___fleq+2,w,c
 17935  00681C  100C               	iorwf	??i2___fleq+3,w,c
 17936  00681E  A4D8               	btfss	status,2,c
 17937  006820  D008               	goto	i2l5665
 17938  006822  0E00               	movlw	0
 17939  006824  6E05               	movwf	i2___fleq@ff2,c
 17940  006826  0E00               	movlw	0
 17941  006828  6E06               	movwf	i2___fleq@ff2+1,c
 17942  00682A  0E00               	movlw	0
 17943  00682C  6E07               	movwf	i2___fleq@ff2+2,c
 17944  00682E  0E00               	movlw	0
 17945  006830  6E08               	movwf	i2___fleq@ff2+3,c
 17946  006832                     i2l5665:
 17947  006832  5005               	movf	i2___fleq@ff2,w,c
 17948  006834  1801               	xorwf	i2___fleq@ff1,w,c
 17949  006836  E10A               	bnz	i2u707_40
 17950  006838  5006               	movf	i2___fleq@ff2+1,w,c
 17951  00683A  1802               	xorwf	i2___fleq@ff1+1,w,c
 17952  00683C  E107               	bnz	i2u707_40
 17953  00683E  5007               	movf	i2___fleq@ff2+2,w,c
 17954  006840  1803               	xorwf	i2___fleq@ff1+2,w,c
 17955  006842  E104               	bnz	i2u707_40
 17956  006844  5008               	movf	i2___fleq@ff2+3,w,c
 17957  006846  1804               	xorwf	i2___fleq@ff1+3,w,c
 17958  006848  B4D8               	btfsc	status,2,c
 17959  00684A  D002               	goto	i2l5669
 17960  00684C                     i2u707_40:
 17961  00684C  90D8               	bcf	status,0,c
 17962  00684E  0012               	return	
 17963  006850                     i2l5669:
 17964  006850  80D8               	bsf	status,0,c
 17965  006852  0012               	return		;funcret
 17966  006854                     __end_ofi2___fleq:
 17967                           	opt callstack 0
 17968                           
 17969 ;; *************** function i2___fldiv *****************
 17970 ;; Defined at:
 17971 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 17972 ;; Parameters:    Size  Location     Type
 17973 ;;  b               4    0[COMRAM] int 
 17974 ;;  a               4    4[COMRAM] int 
 17975 ;; Auto vars:     Size  Location     Type
 17976 ;;  __fldiv         4   19[COMRAM] unsigned long 
 17977 ;;  __fldiv         4   12[COMRAM] unsigned long 
 17978 ;;  __fldiv         2   17[COMRAM] short 
 17979 ;;  __fldiv         1   24[COMRAM] unsigned char 
 17980 ;;  __fldiv         1   23[COMRAM] unsigned char 
 17981 ;;  __fldiv         1   16[COMRAM] unsigned char 
 17982 ;; Return value:  Size  Location     Type
 17983 ;;                  4    0[COMRAM] unsigned char 
 17984 ;; Registers used:
 17985 ;;		wreg, status,2, status,0
 17986 ;; Tracked objects:
 17987 ;;		On entry : 0/0
 17988 ;;		On exit  : 0/0
 17989 ;;		Unchanged: 0/0
 17990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17992 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17994 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17995 ;;Total ram usage:       25 bytes
 17996 ;; Hardware stack levels used:    1
 17997 ;; This function calls:
 17998 ;;		Nothing
 17999 ;; This function is called by:
 18000 ;;		_ConvertByteArrayToFloat
 18001 ;;		i2_ReadTemperature
 18002 ;;		i2_ReadHumidity
 18003 ;;		i2_efgtoa
 18004 ;; This function uses a non-reentrant model
 18005 ;;
 18006                           
 18007                           	psect	text88
 18008  003C56                     __ptext88:
 18009                           	opt callstack 0
 18010  003C56                     i2___fldiv:
 18011                           	opt callstack 10
 18012                           
 18013                           ;incstack = 0
 18014  003C56  5004               	movf	i2___fldiv@b+3,w,c
 18015  003C58  0B80               	andlw	128
 18016  003C5A  6E11               	movwf	i2___fldiv@sign,c
 18017  003C5C  5004               	movf	i2___fldiv@b+3,w,c
 18018  003C5E  2404               	addwf	i2___fldiv@b+3,w,c
 18019  003C60  6E18               	movwf	i2___fldiv@bexp,c
 18020  003C62  BE03               	btfsc	i2___fldiv@b+2,7,c
 18021  003C64  8018               	bsf	i2___fldiv@bexp,0,c
 18022  003C66  5018               	movf	i2___fldiv@bexp,w,c
 18023  003C68  B4D8               	btfsc	status,2,c
 18024  003C6A  D00D               	goto	i2l5769
 18025  003C6C  2818               	incf	i2___fldiv@bexp,w,c
 18026  003C6E  A4D8               	btfss	status,2,c
 18027  003C70  D008               	goto	i2l5765
 18028  003C72  0E00               	movlw	0
 18029  003C74  6E01               	movwf	i2___fldiv@b,c
 18030  003C76  0E00               	movlw	0
 18031  003C78  6E02               	movwf	i2___fldiv@b+1,c
 18032  003C7A  0E00               	movlw	0
 18033  003C7C  6E03               	movwf	i2___fldiv@b+2,c
 18034  003C7E  0E00               	movlw	0
 18035  003C80  6E04               	movwf	i2___fldiv@b+3,c
 18036  003C82                     i2l5765:
 18037  003C82  8E03               	bsf	i2___fldiv@b+2,7,c
 18038  003C84  D006               	goto	L21
 18039  003C86                     i2l5769:
 18040  003C86  0E00               	movlw	0
 18041  003C88  6E01               	movwf	i2___fldiv@b,c
 18042  003C8A  0E00               	movlw	0
 18043  003C8C  6E02               	movwf	i2___fldiv@b+1,c
 18044  003C8E  0E00               	movlw	0
 18045  003C90  6E03               	movwf	i2___fldiv@b+2,c
 18046  003C92                     L21:
 18047  003C92  0E00               	movlw	0
 18048  003C94  6E04               	movwf	i2___fldiv@b+3,c
 18049  003C96  5008               	movf	i2___fldiv@a+3,w,c
 18050  003C98  0B80               	andlw	128
 18051  003C9A  1A11               	xorwf	i2___fldiv@sign,f,c
 18052  003C9C  5008               	movf	i2___fldiv@a+3,w,c
 18053  003C9E  2408               	addwf	i2___fldiv@a+3,w,c
 18054  003CA0  6E19               	movwf	i2___fldiv@aexp,c
 18055  003CA2  BE07               	btfsc	i2___fldiv@a+2,7,c
 18056  003CA4  8019               	bsf	i2___fldiv@aexp,0,c
 18057  003CA6  5019               	movf	i2___fldiv@aexp,w,c
 18058  003CA8  B4D8               	btfsc	status,2,c
 18059  003CAA  D00D               	goto	i2l5789
 18060  003CAC  2819               	incf	i2___fldiv@aexp,w,c
 18061  003CAE  A4D8               	btfss	status,2,c
 18062  003CB0  D008               	goto	i2l5785
 18063  003CB2  0E00               	movlw	0
 18064  003CB4  6E05               	movwf	i2___fldiv@a,c
 18065  003CB6  0E00               	movlw	0
 18066  003CB8  6E06               	movwf	i2___fldiv@a+1,c
 18067  003CBA  0E00               	movlw	0
 18068  003CBC  6E07               	movwf	i2___fldiv@a+2,c
 18069  003CBE  0E00               	movlw	0
 18070  003CC0  6E08               	movwf	i2___fldiv@a+3,c
 18071  003CC2                     i2l5785:
 18072  003CC2  8E07               	bsf	i2___fldiv@a+2,7,c
 18073  003CC4  D006               	goto	L22
 18074  003CC6                     i2l5789:
 18075  003CC6  0E00               	movlw	0
 18076  003CC8  6E05               	movwf	i2___fldiv@a,c
 18077  003CCA  0E00               	movlw	0
 18078  003CCC  6E06               	movwf	i2___fldiv@a+1,c
 18079  003CCE  0E00               	movlw	0
 18080  003CD0  6E07               	movwf	i2___fldiv@a+2,c
 18081  003CD2                     L22:
 18082  003CD2  0E00               	movlw	0
 18083  003CD4  6E08               	movwf	i2___fldiv@a+3,c
 18084  003CD6  5005               	movf	i2___fldiv@a,w,c
 18085  003CD8  1006               	iorwf	i2___fldiv@a+1,w,c
 18086  003CDA  1007               	iorwf	i2___fldiv@a+2,w,c
 18087  003CDC  1008               	iorwf	i2___fldiv@a+3,w,c
 18088  003CDE  A4D8               	btfss	status,2,c
 18089  003CE0  D017               	goto	i2l5803
 18090  003CE2  0E00               	movlw	0
 18091  003CE4  6E01               	movwf	i2___fldiv@b,c
 18092  003CE6  0E00               	movlw	0
 18093  003CE8  6E02               	movwf	i2___fldiv@b+1,c
 18094  003CEA  0E00               	movlw	0
 18095  003CEC  6E03               	movwf	i2___fldiv@b+2,c
 18096  003CEE  0E00               	movlw	0
 18097  003CF0  6E04               	movwf	i2___fldiv@b+3,c
 18098  003CF2  0E80               	movlw	128
 18099  003CF4  1203               	iorwf	i2___fldiv@b+2,f,c
 18100  003CF6  0E7F               	movlw	127
 18101  003CF8  1204               	iorwf	i2___fldiv@b+3,f,c
 18102  003CFA                     i2l5797:
 18103  003CFA  5011               	movf	i2___fldiv@sign,w,c
 18104  003CFC  1204               	iorwf	i2___fldiv@b+3,f,c
 18105  003CFE  C001  F001         	movff	i2___fldiv@b,?i2___fldiv
 18106  003D02  C002  F002         	movff	i2___fldiv@b+1,?i2___fldiv+1
 18107  003D06  C003  F003         	movff	i2___fldiv@b+2,?i2___fldiv+2
 18108  003D0A  C004  F004         	movff	i2___fldiv@b+3,?i2___fldiv+3
 18109  003D0E  0012               	return	
 18110  003D10                     i2l5803:
 18111  003D10  5018               	movf	i2___fldiv@bexp,w,c
 18112  003D12  A4D8               	btfss	status,2,c
 18113  003D14  D009               	goto	i2l5811
 18114  003D16  0E00               	movlw	0
 18115  003D18  6E01               	movwf	?i2___fldiv,c
 18116  003D1A  0E00               	movlw	0
 18117  003D1C  6E02               	movwf	?i2___fldiv+1,c
 18118  003D1E  0E00               	movlw	0
 18119  003D20  6E03               	movwf	?i2___fldiv+2,c
 18120  003D22  0E00               	movlw	0
 18121  003D24  6E04               	movwf	?i2___fldiv+3,c
 18122  003D26  0012               	return	
 18123  003D28                     i2l5811:
 18124  003D28  5019               	movf	i2___fldiv@aexp,w,c
 18125  003D2A  C018  F009         	movff	i2___fldiv@bexp,??i2___fldiv
 18126  003D2E  6A0A               	clrf	(??i2___fldiv+1)& (0+255),c
 18127  003D30  5E09               	subwf	??i2___fldiv,f,c
 18128  003D32  0E00               	movlw	0
 18129  003D34  5A0A               	subwfb	??i2___fldiv+1,f,c
 18130  003D36  0E7F               	movlw	127
 18131  003D38  2409               	addwf	??i2___fldiv,w,c
 18132  003D3A  6E12               	movwf	i2___fldiv@new_exp,c
 18133  003D3C  0E00               	movlw	0
 18134  003D3E  200A               	addwfc	??i2___fldiv+1,w,c
 18135  003D40  6E13               	movwf	i2___fldiv@new_exp+1,c
 18136  003D42  C001  F00D         	movff	i2___fldiv@b,i2___fldiv@rem
 18137  003D46  C002  F00E         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 18138  003D4A  C003  F00F         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 18139  003D4E  C004  F010         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 18140  003D52  0E00               	movlw	0
 18141  003D54  6E01               	movwf	i2___fldiv@b,c
 18142  003D56  0E00               	movlw	0
 18143  003D58  6E02               	movwf	i2___fldiv@b+1,c
 18144  003D5A  0E00               	movlw	0
 18145  003D5C  6E03               	movwf	i2___fldiv@b+2,c
 18146  003D5E  0E00               	movlw	0
 18147  003D60  6E04               	movwf	i2___fldiv@b+3,c
 18148  003D62  0E00               	movlw	0
 18149  003D64  6E14               	movwf	i2___fldiv@grs,c
 18150  003D66  0E00               	movlw	0
 18151  003D68  6E15               	movwf	i2___fldiv@grs+1,c
 18152  003D6A  0E00               	movlw	0
 18153  003D6C  6E16               	movwf	i2___fldiv@grs+2,c
 18154  003D6E  0E00               	movlw	0
 18155  003D70  6E17               	movwf	i2___fldiv@grs+3,c
 18156  003D72  0E00               	movlw	0
 18157  003D74  6E19               	movwf	i2___fldiv@aexp,c
 18158  003D76  D028               	goto	i2l1340
 18159  003D78                     i2l5821:
 18160  003D78  5019               	movf	i2___fldiv@aexp,w,c
 18161  003D7A  B4D8               	btfsc	status,2,c
 18162  003D7C  D011               	goto	i2l5829
 18163  003D7E  90D8               	bcf	status,0,c
 18164  003D80  360D               	rlcf	i2___fldiv@rem,f,c
 18165  003D82  360E               	rlcf	i2___fldiv@rem+1,f,c
 18166  003D84  360F               	rlcf	i2___fldiv@rem+2,f,c
 18167  003D86  3610               	rlcf	i2___fldiv@rem+3,f,c
 18168  003D88  90D8               	bcf	status,0,c
 18169  003D8A  3601               	rlcf	i2___fldiv@b,f,c
 18170  003D8C  3602               	rlcf	i2___fldiv@b+1,f,c
 18171  003D8E  3603               	rlcf	i2___fldiv@b+2,f,c
 18172  003D90  3604               	rlcf	i2___fldiv@b+3,f,c
 18173  003D92  BE17               	btfsc	i2___fldiv@grs+3,7,c
 18174  003D94  8001               	bsf	i2___fldiv@b,0,c
 18175  003D96  90D8               	bcf	status,0,c
 18176  003D98  3614               	rlcf	i2___fldiv@grs,f,c
 18177  003D9A  3615               	rlcf	i2___fldiv@grs+1,f,c
 18178  003D9C  3616               	rlcf	i2___fldiv@grs+2,f,c
 18179  003D9E  3617               	rlcf	i2___fldiv@grs+3,f,c
 18180  003DA0                     i2l5829:
 18181  003DA0  5005               	movf	i2___fldiv@a,w,c
 18182  003DA2  5C0D               	subwf	i2___fldiv@rem,w,c
 18183  003DA4  5006               	movf	i2___fldiv@a+1,w,c
 18184  003DA6  580E               	subwfb	i2___fldiv@rem+1,w,c
 18185  003DA8  5007               	movf	i2___fldiv@a+2,w,c
 18186  003DAA  580F               	subwfb	i2___fldiv@rem+2,w,c
 18187  003DAC  5008               	movf	i2___fldiv@a+3,w,c
 18188  003DAE  5810               	subwfb	i2___fldiv@rem+3,w,c
 18189  003DB0  A0D8               	btfss	status,0,c
 18190  003DB2  D009               	goto	i2l5835
 18191  003DB4  8C17               	bsf	i2___fldiv@grs+3,6,c
 18192  003DB6  5005               	movf	i2___fldiv@a,w,c
 18193  003DB8  5E0D               	subwf	i2___fldiv@rem,f,c
 18194  003DBA  5006               	movf	i2___fldiv@a+1,w,c
 18195  003DBC  5A0E               	subwfb	i2___fldiv@rem+1,f,c
 18196  003DBE  5007               	movf	i2___fldiv@a+2,w,c
 18197  003DC0  5A0F               	subwfb	i2___fldiv@rem+2,f,c
 18198  003DC2  5008               	movf	i2___fldiv@a+3,w,c
 18199  003DC4  5A10               	subwfb	i2___fldiv@rem+3,f,c
 18200  003DC6                     i2l5835:
 18201  003DC6  2A19               	incf	i2___fldiv@aexp,f,c
 18202  003DC8                     i2l1340:
 18203  003DC8  0E19               	movlw	25
 18204  003DCA  6419               	cpfsgt	i2___fldiv@aexp,c
 18205  003DCC  D7D5               	goto	i2l5821
 18206  003DCE  500D               	movf	i2___fldiv@rem,w,c
 18207  003DD0  100E               	iorwf	i2___fldiv@rem+1,w,c
 18208  003DD2  100F               	iorwf	i2___fldiv@rem+2,w,c
 18209  003DD4  1010               	iorwf	i2___fldiv@rem+3,w,c
 18210  003DD6  B4D8               	btfsc	status,2,c
 18211  003DD8  D011               	goto	i2l5847
 18212  003DDA  8014               	bsf	i2___fldiv@grs,0,c
 18213  003DDC  D00F               	goto	i2l5847
 18214  003DDE                     i2l5841:
 18215  003DDE  90D8               	bcf	status,0,c
 18216  003DE0  3601               	rlcf	i2___fldiv@b,f,c
 18217  003DE2  3602               	rlcf	i2___fldiv@b+1,f,c
 18218  003DE4  3603               	rlcf	i2___fldiv@b+2,f,c
 18219  003DE6  3604               	rlcf	i2___fldiv@b+3,f,c
 18220  003DE8  BE17               	btfsc	i2___fldiv@grs+3,7,c
 18221  003DEA  8001               	bsf	i2___fldiv@b,0,c
 18222  003DEC  90D8               	bcf	status,0,c
 18223  003DEE  3614               	rlcf	i2___fldiv@grs,f,c
 18224  003DF0  3615               	rlcf	i2___fldiv@grs+1,f,c
 18225  003DF2  3616               	rlcf	i2___fldiv@grs+2,f,c
 18226  003DF4  3617               	rlcf	i2___fldiv@grs+3,f,c
 18227  003DF6  0612               	decf	i2___fldiv@new_exp,f,c
 18228  003DF8  A0D8               	btfss	status,0,c
 18229  003DFA  0613               	decf	i2___fldiv@new_exp+1,f,c
 18230  003DFC                     i2l5847:
 18231  003DFC  AE03               	btfss	i2___fldiv@b+2,7,c
 18232  003DFE  D7EF               	goto	i2l5841
 18233  003E00  0E00               	movlw	0
 18234  003E02  6E19               	movwf	i2___fldiv@aexp,c
 18235  003E04  AE17               	btfss	i2___fldiv@grs+3,7,c
 18236  003E06  D017               	goto	i2l1351
 18237  003E08  0EFF               	movlw	255
 18238  003E0A  1414               	andwf	i2___fldiv@grs,w,c
 18239  003E0C  6E09               	movwf	??i2___fldiv& (0+255),c
 18240  003E0E  0EFF               	movlw	255
 18241  003E10  1415               	andwf	i2___fldiv@grs+1,w,c
 18242  003E12  6E0A               	movwf	(??i2___fldiv+1)& (0+255),c
 18243  003E14  0EFF               	movlw	255
 18244  003E16  1416               	andwf	i2___fldiv@grs+2,w,c
 18245  003E18  6E0B               	movwf	(??i2___fldiv+2)& (0+255),c
 18246  003E1A  0E7F               	movlw	127
 18247  003E1C  1417               	andwf	i2___fldiv@grs+3,w,c
 18248  003E1E  6E0C               	movwf	(??i2___fldiv+3)& (0+255),c
 18249  003E20  5009               	movf	??i2___fldiv,w,c
 18250  003E22  100A               	iorwf	??i2___fldiv+1,w,c
 18251  003E24  100B               	iorwf	??i2___fldiv+2,w,c
 18252  003E26  100C               	iorwf	??i2___fldiv+3,w,c
 18253  003E28  B4D8               	btfsc	status,2,c
 18254  003E2A  D003               	goto	i2l1352
 18255  003E2C                     i2u737_40:
 18256  003E2C  0E01               	movlw	1
 18257  003E2E  6E19               	movwf	i2___fldiv@aexp,c
 18258  003E30  D002               	goto	i2l1351
 18259  003E32                     i2l1352:
 18260  003E32  B001               	btfsc	i2___fldiv@b,0,c
 18261  003E34  D7FB               	goto	i2u737_40
 18262  003E36                     i2l1351:
 18263  003E36  5019               	movf	i2___fldiv@aexp,w,c
 18264  003E38  B4D8               	btfsc	status,2,c
 18265  003E3A  D01F               	goto	i2l5867
 18266  003E3C  0E01               	movlw	1
 18267  003E3E  2601               	addwf	i2___fldiv@b,f,c
 18268  003E40  0E00               	movlw	0
 18269  003E42  2202               	addwfc	i2___fldiv@b+1,f,c
 18270  003E44  2203               	addwfc	i2___fldiv@b+2,f,c
 18271  003E46  2204               	addwfc	i2___fldiv@b+3,f,c
 18272  003E48  A004               	btfss	i2___fldiv@b+3,0,c
 18273  003E4A  D017               	goto	i2l5867
 18274  003E4C  C001  F009         	movff	i2___fldiv@b,??i2___fldiv
 18275  003E50  C002  F00A         	movff	i2___fldiv@b+1,??i2___fldiv+1
 18276  003E54  C003  F00B         	movff	i2___fldiv@b+2,??i2___fldiv+2
 18277  003E58  C004  F00C         	movff	i2___fldiv@b+3,??i2___fldiv+3
 18278  003E5C  340C               	rlcf	??i2___fldiv+3,w,c
 18279  003E5E  320C               	rrcf	??i2___fldiv+3,f,c
 18280  003E60  320B               	rrcf	??i2___fldiv+2,f,c
 18281  003E62  320A               	rrcf	??i2___fldiv+1,f,c
 18282  003E64  3209               	rrcf	??i2___fldiv,f,c
 18283  003E66  C009  F001         	movff	??i2___fldiv,i2___fldiv@b
 18284  003E6A  C00A  F002         	movff	??i2___fldiv+1,i2___fldiv@b+1
 18285  003E6E  C00B  F003         	movff	??i2___fldiv+2,i2___fldiv@b+2
 18286  003E72  C00C  F004         	movff	??i2___fldiv+3,i2___fldiv@b+3
 18287  003E76  4A12               	infsnz	i2___fldiv@new_exp,f,c
 18288  003E78  2A13               	incf	i2___fldiv@new_exp+1,f,c
 18289  003E7A                     i2l5867:
 18290  003E7A  BE13               	btfsc	i2___fldiv@new_exp+1,7,c
 18291  003E7C  D010               	goto	i2l5871
 18292  003E7E  5013               	movf	i2___fldiv@new_exp+1,w,c
 18293  003E80  E103               	bnz	i2u741_40
 18294  003E82  2812               	incf	i2___fldiv@new_exp,w,c
 18295  003E84  A0D8               	btfss	status,0,c
 18296  003E86  D00B               	goto	i2l5871
 18297  003E88                     i2u741_40:
 18298  003E88  0E00               	movlw	0
 18299  003E8A  6E13               	movwf	i2___fldiv@new_exp+1,c
 18300  003E8C  6812               	setf	i2___fldiv@new_exp,c
 18301  003E8E  0E00               	movlw	0
 18302  003E90  6E01               	movwf	i2___fldiv@b,c
 18303  003E92  0E00               	movlw	0
 18304  003E94  6E02               	movwf	i2___fldiv@b+1,c
 18305  003E96  0E00               	movlw	0
 18306  003E98  6E03               	movwf	i2___fldiv@b+2,c
 18307  003E9A  0E00               	movlw	0
 18308  003E9C  6E04               	movwf	i2___fldiv@b+3,c
 18309  003E9E                     i2l5871:
 18310  003E9E  BE13               	btfsc	i2___fldiv@new_exp+1,7,c
 18311  003EA0  D005               	goto	i2u742_40
 18312  003EA2  5013               	movf	i2___fldiv@new_exp+1,w,c
 18313  003EA4  E111               	bnz	i2l5875
 18314  003EA6  0412               	decf	i2___fldiv@new_exp,w,c
 18315  003EA8  B0D8               	btfsc	status,0,c
 18316  003EAA  D00E               	goto	i2l5875
 18317  003EAC                     i2u742_40:
 18318  003EAC  0E00               	movlw	0
 18319  003EAE  6E13               	movwf	i2___fldiv@new_exp+1,c
 18320  003EB0  0E00               	movlw	0
 18321  003EB2  6E12               	movwf	i2___fldiv@new_exp,c
 18322  003EB4  0E00               	movlw	0
 18323  003EB6  6E01               	movwf	i2___fldiv@b,c
 18324  003EB8  0E00               	movlw	0
 18325  003EBA  6E02               	movwf	i2___fldiv@b+1,c
 18326  003EBC  0E00               	movlw	0
 18327  003EBE  6E03               	movwf	i2___fldiv@b+2,c
 18328  003EC0  0E00               	movlw	0
 18329  003EC2  6E04               	movwf	i2___fldiv@b+3,c
 18330  003EC4  0E00               	movlw	0
 18331  003EC6  6E11               	movwf	i2___fldiv@sign,c
 18332  003EC8                     i2l5875:
 18333  003EC8  C012  F018         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 18334  003ECC  A018               	btfss	i2___fldiv@bexp,0,c
 18335  003ECE  D002               	goto	i2l5881
 18336  003ED0  8E03               	bsf	i2___fldiv@b+2,7,c
 18337  003ED2  D001               	goto	i2l5883
 18338  003ED4                     i2l5881:
 18339  003ED4  9E03               	bcf	i2___fldiv@b+2,7,c
 18340  003ED6                     i2l5883:
 18341  003ED6  90D8               	bcf	status,0,c
 18342  003ED8  3018               	rrcf	i2___fldiv@bexp,w,c
 18343  003EDA  6E04               	movwf	i2___fldiv@b+3,c
 18344  003EDC  D70E               	goto	i2l5797
 18345  003EDE                     __end_ofi2___fldiv:
 18346                           	opt callstack 0
 18347                           
 18348 ;; *************** function i2___awmod *****************
 18349 ;; Defined at:
 18350 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 18351 ;; Parameters:    Size  Location     Type
 18352 ;;  dividend        2    0[COMRAM] int 
 18353 ;;  divisor         2    2[COMRAM] int 
 18354 ;; Auto vars:     Size  Location     Type
 18355 ;;  __awmod         1    5[COMRAM] unsigned char 
 18356 ;;  __awmod         1    4[COMRAM] unsigned char 
 18357 ;; Return value:  Size  Location     Type
 18358 ;;                  2    0[COMRAM] int 
 18359 ;; Registers used:
 18360 ;;		wreg, status,2, status,0
 18361 ;; Tracked objects:
 18362 ;;		On entry : 0/0
 18363 ;;		On exit  : 0/0
 18364 ;;		Unchanged: 0/0
 18365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18370 ;;Total ram usage:        6 bytes
 18371 ;; Hardware stack levels used:    1
 18372 ;; This function calls:
 18373 ;;		Nothing
 18374 ;; This function is called by:
 18375 ;;		i2_efgtoa
 18376 ;; This function uses a non-reentrant model
 18377 ;;
 18378                           
 18379                           	psect	text89
 18380  006B40                     __ptext89:
 18381                           	opt callstack 0
 18382  006B40                     i2___awmod:
 18383                           	opt callstack 10
 18384                           
 18385                           ;incstack = 0
 18386  006B40  0E00               	movlw	0
 18387  006B42  6E06               	movwf	i2___awmod@sign,c
 18388  006B44  AE02               	btfss	i2___awmod@dividend+1,7,c
 18389  006B46  D006               	goto	i2l5629
 18390  006B48  6C01               	negf	i2___awmod@dividend,c
 18391  006B4A  1E02               	comf	i2___awmod@dividend+1,f,c
 18392  006B4C  B0D8               	btfsc	status,0,c
 18393  006B4E  2A02               	incf	i2___awmod@dividend+1,f,c
 18394  006B50  0E01               	movlw	1
 18395  006B52  6E06               	movwf	i2___awmod@sign,c
 18396  006B54                     i2l5629:
 18397  006B54  AE04               	btfss	i2___awmod@divisor+1,7,c
 18398  006B56  D004               	goto	i2l5633
 18399  006B58  6C03               	negf	i2___awmod@divisor,c
 18400  006B5A  1E04               	comf	i2___awmod@divisor+1,f,c
 18401  006B5C  B0D8               	btfsc	status,0,c
 18402  006B5E  2A04               	incf	i2___awmod@divisor+1,f,c
 18403  006B60                     i2l5633:
 18404  006B60  5003               	movf	i2___awmod@divisor,w,c
 18405  006B62  1004               	iorwf	i2___awmod@divisor+1,w,c
 18406  006B64  B4D8               	btfsc	status,2,c
 18407  006B66  D018               	goto	i2l5649
 18408  006B68  0E01               	movlw	1
 18409  006B6A  6E05               	movwf	i2___awmod@counter,c
 18410  006B6C  D004               	goto	i2l5639
 18411  006B6E                     i2l5637:
 18412  006B6E  90D8               	bcf	status,0,c
 18413  006B70  3603               	rlcf	i2___awmod@divisor,f,c
 18414  006B72  3604               	rlcf	i2___awmod@divisor+1,f,c
 18415  006B74  2A05               	incf	i2___awmod@counter,f,c
 18416  006B76                     i2l5639:
 18417  006B76  AE04               	btfss	i2___awmod@divisor+1,7,c
 18418  006B78  D7FA               	goto	i2l5637
 18419  006B7A                     i2u702_40:
 18420  006B7A  5003               	movf	i2___awmod@divisor,w,c
 18421  006B7C  5C01               	subwf	i2___awmod@dividend,w,c
 18422  006B7E  5004               	movf	i2___awmod@divisor+1,w,c
 18423  006B80  5802               	subwfb	i2___awmod@dividend+1,w,c
 18424  006B82  A0D8               	btfss	status,0,c
 18425  006B84  D004               	goto	i2l5645
 18426  006B86  5003               	movf	i2___awmod@divisor,w,c
 18427  006B88  5E01               	subwf	i2___awmod@dividend,f,c
 18428  006B8A  5004               	movf	i2___awmod@divisor+1,w,c
 18429  006B8C  5A02               	subwfb	i2___awmod@dividend+1,f,c
 18430  006B8E                     i2l5645:
 18431  006B8E  90D8               	bcf	status,0,c
 18432  006B90  3204               	rrcf	i2___awmod@divisor+1,f,c
 18433  006B92  3203               	rrcf	i2___awmod@divisor,f,c
 18434  006B94  2E05               	decfsz	i2___awmod@counter,f,c
 18435  006B96  D7F1               	goto	i2u702_40
 18436  006B98                     i2l5649:
 18437  006B98  5006               	movf	i2___awmod@sign,w,c
 18438  006B9A  B4D8               	btfsc	status,2,c
 18439  006B9C  D004               	goto	i2l5653
 18440  006B9E  6C01               	negf	i2___awmod@dividend,c
 18441  006BA0  1E02               	comf	i2___awmod@dividend+1,f,c
 18442  006BA2  B0D8               	btfsc	status,0,c
 18443  006BA4  2A02               	incf	i2___awmod@dividend+1,f,c
 18444  006BA6                     i2l5653:
 18445  006BA6  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 18446  006BAA  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 18447  006BAE  0012               	return		;funcret
 18448  006BB0                     __end_ofi2___awmod:
 18449                           	opt callstack 0
 18450                           
 18451 ;; *************** function i2___awdiv *****************
 18452 ;; Defined at:
 18453 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 18454 ;; Parameters:    Size  Location     Type
 18455 ;;  dividend        2    0[COMRAM] int 
 18456 ;;  divisor         2    2[COMRAM] int 
 18457 ;; Auto vars:     Size  Location     Type
 18458 ;;  __awdiv         2    6[COMRAM] int 
 18459 ;;  __awdiv         1    5[COMRAM] unsigned char 
 18460 ;;  __awdiv         1    4[COMRAM] unsigned char 
 18461 ;; Return value:  Size  Location     Type
 18462 ;;                  2    0[COMRAM] int 
 18463 ;; Registers used:
 18464 ;;		wreg, status,2, status,0
 18465 ;; Tracked objects:
 18466 ;;		On entry : 0/0
 18467 ;;		On exit  : 0/0
 18468 ;;		Unchanged: 0/0
 18469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18471 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18473 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18474 ;;Total ram usage:        8 bytes
 18475 ;; Hardware stack levels used:    1
 18476 ;; This function calls:
 18477 ;;		Nothing
 18478 ;; This function is called by:
 18479 ;;		i2_efgtoa
 18480 ;; This function uses a non-reentrant model
 18481 ;;
 18482                           
 18483                           	psect	text90
 18484  0068DA                     __ptext90:
 18485                           	opt callstack 0
 18486  0068DA                     i2___awdiv:
 18487                           	opt callstack 10
 18488                           
 18489                           ;incstack = 0
 18490  0068DA  0E00               	movlw	0
 18491  0068DC  6E06               	movwf	i2___awdiv@sign,c
 18492  0068DE  AE04               	btfss	i2___awdiv@divisor+1,7,c
 18493  0068E0  D006               	goto	i2l5585
 18494  0068E2  6C03               	negf	i2___awdiv@divisor,c
 18495  0068E4  1E04               	comf	i2___awdiv@divisor+1,f,c
 18496  0068E6  B0D8               	btfsc	status,0,c
 18497  0068E8  2A04               	incf	i2___awdiv@divisor+1,f,c
 18498  0068EA  0E01               	movlw	1
 18499  0068EC  6E06               	movwf	i2___awdiv@sign,c
 18500  0068EE                     i2l5585:
 18501  0068EE  AE02               	btfss	i2___awdiv@dividend+1,7,c
 18502  0068F0  D006               	goto	i2l5591
 18503  0068F2  6C01               	negf	i2___awdiv@dividend,c
 18504  0068F4  1E02               	comf	i2___awdiv@dividend+1,f,c
 18505  0068F6  B0D8               	btfsc	status,0,c
 18506  0068F8  2A02               	incf	i2___awdiv@dividend+1,f,c
 18507  0068FA  0E01               	movlw	1
 18508  0068FC  1A06               	xorwf	i2___awdiv@sign,f,c
 18509  0068FE                     i2l5591:
 18510  0068FE  0E00               	movlw	0
 18511  006900  6E08               	movwf	i2___awdiv@quotient+1,c
 18512  006902  0E00               	movlw	0
 18513  006904  6E07               	movwf	i2___awdiv@quotient,c
 18514  006906  5003               	movf	i2___awdiv@divisor,w,c
 18515  006908  1004               	iorwf	i2___awdiv@divisor+1,w,c
 18516  00690A  B4D8               	btfsc	status,2,c
 18517  00690C  D01C               	goto	i2l5613
 18518  00690E  0E01               	movlw	1
 18519  006910  6E05               	movwf	i2___awdiv@counter,c
 18520  006912  D004               	goto	i2l5599
 18521  006914                     i2l5597:
 18522  006914  90D8               	bcf	status,0,c
 18523  006916  3603               	rlcf	i2___awdiv@divisor,f,c
 18524  006918  3604               	rlcf	i2___awdiv@divisor+1,f,c
 18525  00691A  2A05               	incf	i2___awdiv@counter,f,c
 18526  00691C                     i2l5599:
 18527  00691C  AE04               	btfss	i2___awdiv@divisor+1,7,c
 18528  00691E  D7FA               	goto	i2l5597
 18529  006920                     i2u696_40:
 18530  006920  90D8               	bcf	status,0,c
 18531  006922  3607               	rlcf	i2___awdiv@quotient,f,c
 18532  006924  3608               	rlcf	i2___awdiv@quotient+1,f,c
 18533  006926  5003               	movf	i2___awdiv@divisor,w,c
 18534  006928  5C01               	subwf	i2___awdiv@dividend,w,c
 18535  00692A  5004               	movf	i2___awdiv@divisor+1,w,c
 18536  00692C  5802               	subwfb	i2___awdiv@dividend+1,w,c
 18537  00692E  A0D8               	btfss	status,0,c
 18538  006930  D005               	goto	i2l5609
 18539  006932  5003               	movf	i2___awdiv@divisor,w,c
 18540  006934  5E01               	subwf	i2___awdiv@dividend,f,c
 18541  006936  5004               	movf	i2___awdiv@divisor+1,w,c
 18542  006938  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 18543  00693A  8007               	bsf	i2___awdiv@quotient,0,c
 18544  00693C                     i2l5609:
 18545  00693C  90D8               	bcf	status,0,c
 18546  00693E  3204               	rrcf	i2___awdiv@divisor+1,f,c
 18547  006940  3203               	rrcf	i2___awdiv@divisor,f,c
 18548  006942  2E05               	decfsz	i2___awdiv@counter,f,c
 18549  006944  D7ED               	goto	i2u696_40
 18550  006946                     i2l5613:
 18551  006946  5006               	movf	i2___awdiv@sign,w,c
 18552  006948  B4D8               	btfsc	status,2,c
 18553  00694A  D004               	goto	i2l5617
 18554  00694C  6C07               	negf	i2___awdiv@quotient,c
 18555  00694E  1E08               	comf	i2___awdiv@quotient+1,f,c
 18556  006950  B0D8               	btfsc	status,0,c
 18557  006952  2A08               	incf	i2___awdiv@quotient+1,f,c
 18558  006954                     i2l5617:
 18559  006954  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 18560  006958  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 18561  00695C  0012               	return		;funcret
 18562  00695E                     __end_ofi2___awdiv:
 18563                           	opt callstack 0
 18564                           
 18565 ;; *************** function i2_dtoa *****************
 18566 ;; Defined at:
 18567 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 18568 ;; Parameters:    Size  Location     Type
 18569 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 18570 ;;		 -> sprintf@f(6), NULL(0), 
 18571 ;;  d               8   31[COMRAM] long long 
 18572 ;; Auto vars:     Size  Location     Type
 18573 ;;  dtoa            8   55[COMRAM] long long 
 18574 ;;  dtoa            2   63[COMRAM] int 
 18575 ;;  dtoa            2   53[COMRAM] int 
 18576 ;;  dtoa            2   51[COMRAM] int 
 18577 ;;  dtoa            2   49[COMRAM] int 
 18578 ;; Return value:  Size  Location     Type
 18579 ;;                  2   29[COMRAM] int 
 18580 ;; Registers used:
 18581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18582 ;; Tracked objects:
 18583 ;;		On entry : 0/0
 18584 ;;		On exit  : 0/0
 18585 ;;		Unchanged: 0/0
 18586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18587 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18588 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18589 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18590 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18591 ;;Total ram usage:       36 bytes
 18592 ;; Hardware stack levels used:    1
 18593 ;; Hardware stack levels required when called:    5
 18594 ;; This function calls:
 18595 ;;		i2___aodiv
 18596 ;;		i2___aomod
 18597 ;;		i2_abs
 18598 ;;		i2_pad
 18599 ;; This function is called by:
 18600 ;;		i2_vfpfcnvrt
 18601 ;; This function uses a non-reentrant model
 18602 ;;
 18603                           
 18604                           	psect	text91
 18605  004126                     __ptext91:
 18606                           	opt callstack 0
 18607  004126                     i2_dtoa:
 18608                           	opt callstack 6
 18609                           
 18610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 18611                           
 18612                           ;incstack = 0
 18613  004126  C020  F038         	movff	i2dtoa@d,i2dtoa@n
 18614  00412A  C021  F039         	movff	i2dtoa@d+1,i2dtoa@n+1
 18615  00412E  C022  F03A         	movff	i2dtoa@d+2,i2dtoa@n+2
 18616  004132  C023  F03B         	movff	i2dtoa@d+3,i2dtoa@n+3
 18617  004136  C024  F03C         	movff	i2dtoa@d+4,i2dtoa@n+4
 18618  00413A  C025  F03D         	movff	i2dtoa@d+5,i2dtoa@n+5
 18619  00413E  C026  F03E         	movff	i2dtoa@d+6,i2dtoa@n+6
 18620  004142  C027  F03F         	movff	i2dtoa@d+7,i2dtoa@n+7
 18621                           
 18622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 18623  004146  AE3F               	btfss	i2dtoa@n+7,7,c
 18624  004148  D002               	goto	i2u794_40
 18625  00414A  0E01               	movlw	1
 18626  00414C  D001               	goto	i2u795_40
 18627  00414E                     i2u794_40:
 18628  00414E  0E00               	movlw	0
 18629  004150                     i2u795_40:
 18630  004150  6E36               	movwf	i2dtoa@s,c
 18631  004152  6A37               	clrf	i2dtoa@s+1,c
 18632                           
 18633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 18634  004154  5036               	movf	i2dtoa@s,w,c
 18635  004156  1037               	iorwf	i2dtoa@s+1,w,c
 18636  004158  B4D8               	btfsc	status,2,c
 18637  00415A  D010               	goto	i2l6125
 18638                           
 18639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 18640  00415C  1E3F               	comf	i2dtoa@n+7,f,c
 18641  00415E  1E3E               	comf	i2dtoa@n+6,f,c
 18642  004160  1E3D               	comf	i2dtoa@n+5,f,c
 18643  004162  1E3C               	comf	i2dtoa@n+4,f,c
 18644  004164  1E3B               	comf	i2dtoa@n+3,f,c
 18645  004166  1E3A               	comf	i2dtoa@n+2,f,c
 18646  004168  1E39               	comf	i2dtoa@n+1,f,c
 18647  00416A  6C38               	negf	i2dtoa@n,c
 18648  00416C  0E00               	movlw	0
 18649  00416E  2239               	addwfc	i2dtoa@n+1,f,c
 18650  004170  223A               	addwfc	i2dtoa@n+2,f,c
 18651  004172  223B               	addwfc	i2dtoa@n+3,f,c
 18652  004174  223C               	addwfc	i2dtoa@n+4,f,c
 18653  004176  223D               	addwfc	i2dtoa@n+5,f,c
 18654  004178  223E               	addwfc	i2dtoa@n+6,f,c
 18655  00417A  223F               	addwfc	i2dtoa@n+7,f,c
 18656  00417C                     i2l6125:
 18657                           
 18658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 18659  00417C  0101               	movlb	1	; () banked
 18660  00417E  AFE0               	btfss	(_prec+1)& (0+255),7,b
 18661                           
 18662                           ; BSR set to: 1
 18663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 18664  004180  93E1               	bcf	_flags& (0+255),1,b
 18665                           
 18666                           ; BSR set to: 1
 18667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 18668  004182  BFE0               	btfsc	(_prec+1)& (0+255),7,b
 18669  004184  D005               	goto	i2u798_40
 18670  004186  51E0               	movf	(_prec+1)& (0+255),w,b
 18671  004188  E108               	bnz	i2l608
 18672  00418A  05DF               	decf	_prec& (0+255),w,b
 18673  00418C  B0D8               	btfsc	status,0,c
 18674  00418E  D005               	goto	i2l608
 18675  004190                     i2u798_40:
 18676                           
 18677                           ; BSR set to: 1
 18678  004190  0E00               	movlw	0
 18679  004192  6E33               	movwf	i2dtoa@p+1,c
 18680  004194  0E01               	movlw	1
 18681  004196  6E32               	movwf	i2dtoa@p,c
 18682  004198  D004               	goto	i2l610
 18683  00419A                     i2l608:
 18684                           
 18685                           ; BSR set to: 1
 18686  00419A  C1DF  F032         	movff	_prec,i2dtoa@p
 18687  00419E  C1E0  F033         	movff	_prec+1,i2dtoa@p+1
 18688  0041A2                     i2l610:
 18689                           
 18690                           ; BSR set to: 1
 18691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 18692  0041A2  C1DD  F034         	movff	_width,i2dtoa@w
 18693  0041A6  C1DE  F035         	movff	_width+1,i2dtoa@w+1
 18694                           
 18695                           ; BSR set to: 1
 18696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 18697  0041AA  5036               	movf	i2dtoa@s,w,c
 18698  0041AC  1037               	iorwf	i2dtoa@s+1,w,c
 18699  0041AE  A4D8               	btfss	status,2,c
 18700  0041B0  D002               	goto	i2u800_40
 18701                           
 18702                           ; BSR set to: 1
 18703  0041B2  A5E1               	btfss	_flags& (0+255),2,b
 18704  0041B4  D003               	goto	i2l6139
 18705  0041B6                     i2u800_40:
 18706                           
 18707                           ; BSR set to: 1
 18708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 18709  0041B6  0634               	decf	i2dtoa@w,f,c
 18710  0041B8  A0D8               	btfss	status,0,c
 18711  0041BA  0635               	decf	i2dtoa@w+1,f,c
 18712  0041BC                     i2l6139:
 18713                           
 18714                           ; BSR set to: 1
 18715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 18716  0041BC  0E00               	movlw	0
 18717  0041BE  6E41               	movwf	i2dtoa@i+1,c
 18718  0041C0  0E4F               	movlw	79
 18719  0041C2  6E40               	movwf	i2dtoa@i,c
 18720                           
 18721                           ; BSR set to: 1
 18722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 18723  0041C4  0E00               	movlw	0
 18724  0041C6  0102               	movlb	2	; () banked
 18725  0041C8  6FB3               	movwf	(_dbuf+79)& (0+255),b
 18726                           
 18727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18728  0041CA  D07C               	goto	i2l6153
 18729  0041CC                     i2l6143:
 18730                           
 18731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 18732  0041CC  0640               	decf	i2dtoa@i,f,c
 18733  0041CE  A0D8               	btfss	status,0,c
 18734  0041D0  0641               	decf	i2dtoa@i+1,f,c
 18735                           
 18736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 18737  0041D2  0E64               	movlw	low _dbuf
 18738  0041D4  2440               	addwf	i2dtoa@i,w,c
 18739  0041D6  6ED9               	movwf	fsr2l,c
 18740  0041D8  0E02               	movlw	high _dbuf
 18741  0041DA  2041               	addwfc	i2dtoa@i+1,w,c
 18742  0041DC  6EDA               	movwf	fsr2h,c
 18743  0041DE  C038  F001         	movff	i2dtoa@n,i2___aomod@dividend
 18744  0041E2  C039  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
 18745  0041E6  C03A  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
 18746  0041EA  C03B  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
 18747  0041EE  C03C  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
 18748  0041F2  C03D  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
 18749  0041F6  C03E  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
 18750  0041FA  C03F  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
 18751  0041FE  0E0A               	movlw	10
 18752  004200  6E09               	movwf	i2___aomod@divisor,c
 18753  004202  0E00               	movlw	0
 18754  004204  6E0A               	movwf	i2___aomod@divisor+1,c
 18755  004206  0E00               	movlw	0
 18756  004208  6E0B               	movwf	i2___aomod@divisor+2,c
 18757  00420A  0E00               	movlw	0
 18758  00420C  6E0C               	movwf	i2___aomod@divisor+3,c
 18759  00420E  0E00               	movlw	0
 18760  004210  6E0D               	movwf	i2___aomod@divisor+4,c
 18761  004212  0E00               	movlw	0
 18762  004214  6E0E               	movwf	i2___aomod@divisor+5,c
 18763  004216  0E00               	movlw	0
 18764  004218  6E0F               	movwf	i2___aomod@divisor+6,c
 18765  00421A  0E00               	movlw	0
 18766  00421C  6E10               	movwf	i2___aomod@divisor+7,c
 18767  00421E  EC8A  F02A         	call	i2___aomod	;wreg free
 18768  004222  C001  F028         	movff	?i2___aomod,??i2_dtoa
 18769  004226  C002  F029         	movff	?i2___aomod+1,??i2_dtoa+1
 18770  00422A  C003  F02A         	movff	?i2___aomod+2,??i2_dtoa+2
 18771  00422E  C004  F02B         	movff	?i2___aomod+3,??i2_dtoa+3
 18772  004232  C005  F02C         	movff	?i2___aomod+4,??i2_dtoa+4
 18773  004236  C006  F02D         	movff	?i2___aomod+5,??i2_dtoa+5
 18774  00423A  C007  F02E         	movff	?i2___aomod+6,??i2_dtoa+6
 18775  00423E  C008  F02F         	movff	?i2___aomod+7,??i2_dtoa+7
 18776  004242  C028  F013         	movff	??i2_dtoa,i2abs@a
 18777  004246  C02A  F014         	movff	??i2_dtoa+2,i2abs@a+1
 18778  00424A  EC97  F038         	call	i2_abs	;wreg free
 18779  00424E  5013               	movf	?i2_abs,w,c
 18780  004250  0F30               	addlw	48
 18781  004252  6EDF               	movwf	indf2,c
 18782                           
 18783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 18784  004254  0632               	decf	i2dtoa@p,f,c
 18785  004256  A0D8               	btfss	status,0,c
 18786  004258  0633               	decf	i2dtoa@p+1,f,c
 18787                           
 18788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 18789  00425A  0634               	decf	i2dtoa@w,f,c
 18790  00425C  A0D8               	btfss	status,0,c
 18791  00425E  0635               	decf	i2dtoa@w+1,f,c
 18792                           
 18793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 18794  004260  C038  F001         	movff	i2dtoa@n,i2___aodiv@dividend
 18795  004264  C039  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 18796  004268  C03A  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 18797  00426C  C03B  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 18798  004270  C03C  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 18799  004274  C03D  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 18800  004278  C03E  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 18801  00427C  C03F  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 18802  004280  0E0A               	movlw	10
 18803  004282  6E09               	movwf	i2___aodiv@divisor,c
 18804  004284  0E00               	movlw	0
 18805  004286  6E0A               	movwf	i2___aodiv@divisor+1,c
 18806  004288  0E00               	movlw	0
 18807  00428A  6E0B               	movwf	i2___aodiv@divisor+2,c
 18808  00428C  0E00               	movlw	0
 18809  00428E  6E0C               	movwf	i2___aodiv@divisor+3,c
 18810  004290  0E00               	movlw	0
 18811  004292  6E0D               	movwf	i2___aodiv@divisor+4,c
 18812  004294  0E00               	movlw	0
 18813  004296  6E0E               	movwf	i2___aodiv@divisor+5,c
 18814  004298  0E00               	movlw	0
 18815  00429A  6E0F               	movwf	i2___aodiv@divisor+6,c
 18816  00429C  0E00               	movlw	0
 18817  00429E  6E10               	movwf	i2___aodiv@divisor+7,c
 18818  0042A0  ECEC  F026         	call	i2___aodiv	;wreg free
 18819  0042A4  C001  F038         	movff	?i2___aodiv,i2dtoa@n
 18820  0042A8  C002  F039         	movff	?i2___aodiv+1,i2dtoa@n+1
 18821  0042AC  C003  F03A         	movff	?i2___aodiv+2,i2dtoa@n+2
 18822  0042B0  C004  F03B         	movff	?i2___aodiv+3,i2dtoa@n+3
 18823  0042B4  C005  F03C         	movff	?i2___aodiv+4,i2dtoa@n+4
 18824  0042B8  C006  F03D         	movff	?i2___aodiv+5,i2dtoa@n+5
 18825  0042BC  C007  F03E         	movff	?i2___aodiv+6,i2dtoa@n+6
 18826  0042C0  C008  F03F         	movff	?i2___aodiv+7,i2dtoa@n+7
 18827  0042C4                     i2l6153:
 18828                           
 18829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18830  0042C4  BE41               	btfsc	i2dtoa@i+1,7,c
 18831  0042C6  D020               	goto	i2u805_40
 18832  0042C8  5041               	movf	i2dtoa@i+1,w,c
 18833  0042CA  E103               	bnz	i2u801_40
 18834  0042CC  0440               	decf	i2dtoa@i,w,c
 18835  0042CE  A0D8               	btfss	status,0,c
 18836  0042D0  D01B               	goto	i2u805_40
 18837  0042D2                     i2u801_40:
 18838  0042D2  5038               	movf	i2dtoa@n,w,c
 18839  0042D4  1039               	iorwf	i2dtoa@n+1,w,c
 18840  0042D6  103A               	iorwf	i2dtoa@n+2,w,c
 18841  0042D8  103B               	iorwf	i2dtoa@n+3,w,c
 18842  0042DA  103C               	iorwf	i2dtoa@n+4,w,c
 18843  0042DC  103D               	iorwf	i2dtoa@n+5,w,c
 18844  0042DE  103E               	iorwf	i2dtoa@n+6,w,c
 18845  0042E0  103F               	iorwf	i2dtoa@n+7,w,c
 18846  0042E2  A4D8               	btfss	status,2,c
 18847  0042E4  D773               	goto	i2l6143
 18848  0042E6  BE33               	btfsc	i2dtoa@p+1,7,c
 18849  0042E8  D005               	goto	i2u803_40
 18850  0042EA  5033               	movf	i2dtoa@p+1,w,c
 18851  0042EC  E102               	bnz	i2u803_41
 18852  0042EE  0432               	decf	i2dtoa@p,w,c
 18853  0042F0  B0D8               	btfsc	status,0,c
 18854  0042F2                     i2u803_41:
 18855  0042F2  D76C               	goto	i2l6143
 18856  0042F4                     i2u803_40:
 18857  0042F4  BE35               	btfsc	i2dtoa@w+1,7,c
 18858  0042F6  D008               	goto	i2u805_40
 18859  0042F8  5035               	movf	i2dtoa@w+1,w,c
 18860  0042FA  E103               	bnz	i2u804_40
 18861  0042FC  0434               	decf	i2dtoa@w,w,c
 18862  0042FE  A0D8               	btfss	status,0,c
 18863  004300  D003               	goto	i2u805_40
 18864  004302                     i2u804_40:
 18865  004302  0101               	movlb	1	; () banked
 18866  004304  B3E1               	btfsc	_flags& (0+255),1,b
 18867  004306  D762               	goto	i2l6143
 18868  004308                     i2u805_40:
 18869                           
 18870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 18871  004308  5036               	movf	i2dtoa@s,w,c
 18872  00430A  1037               	iorwf	i2dtoa@s+1,w,c
 18873  00430C  A4D8               	btfss	status,2,c
 18874  00430E  D003               	goto	i2u807_40
 18875  004310  0101               	movlb	1	; () banked
 18876  004312  A5E1               	btfss	_flags& (0+255),2,b
 18877  004314  D017               	goto	i2l6177
 18878  004316                     i2u807_40:
 18879                           
 18880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 18881  004316  0640               	decf	i2dtoa@i,f,c
 18882  004318  A0D8               	btfss	status,0,c
 18883  00431A  0641               	decf	i2dtoa@i+1,f,c
 18884                           
 18885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 18886  00431C  5036               	movf	i2dtoa@s,w,c
 18887  00431E  1037               	iorwf	i2dtoa@s+1,w,c
 18888  004320  A4D8               	btfss	status,2,c
 18889  004322  D004               	goto	i2l6173
 18890  004324  0E00               	movlw	0
 18891  004326  6E31               	movwf	i2_dtoa$1514+1,c
 18892  004328  0E2B               	movlw	43
 18893  00432A  D003               	goto	L23
 18894  00432C                     i2l6173:
 18895  00432C  0E00               	movlw	0
 18896  00432E  6E31               	movwf	i2_dtoa$1514+1,c
 18897  004330  0E2D               	movlw	45
 18898  004332                     L23:
 18899  004332  6E30               	movwf	i2_dtoa$1514,c
 18900  004334  0E64               	movlw	low _dbuf
 18901  004336  2440               	addwf	i2dtoa@i,w,c
 18902  004338  6ED9               	movwf	fsr2l,c
 18903  00433A  0E02               	movlw	high _dbuf
 18904  00433C  2041               	addwfc	i2dtoa@i+1,w,c
 18905  00433E  6EDA               	movwf	fsr2h,c
 18906  004340  C030  FFDF         	movff	i2_dtoa$1514,indf2
 18907  004344                     i2l6177:
 18908                           
 18909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 18910  004344  C01E  F013         	movff	i2dtoa@fp,i2pad@fp
 18911  004348  C01F  F014         	movff	i2dtoa@fp+1,i2pad@fp+1
 18912  00434C  0E64               	movlw	low _dbuf
 18913  00434E  2440               	addwf	i2dtoa@i,w,c
 18914  004350  6E15               	movwf	i2pad@buf,c
 18915  004352  0E02               	movlw	high _dbuf
 18916  004354  2041               	addwfc	i2dtoa@i+1,w,c
 18917  004356  6E16               	movwf	i2pad@buf+1,c
 18918  004358  C034  F017         	movff	i2dtoa@w,i2pad@p
 18919  00435C  C035  F018         	movff	i2dtoa@w+1,i2pad@p+1
 18920  004360  EC73  F032         	call	i2_pad	;wreg free
 18921  004364  C013  F01E         	movff	?i2_pad,?i2_dtoa
 18922  004368  C014  F01F         	movff	?i2_pad+1,?i2_dtoa+1
 18923  00436C  0012               	return		;funcret
 18924  00436E                     __end_ofi2_dtoa:
 18925                           	opt callstack 0
 18926                           
 18927 ;; *************** function i2_pad *****************
 18928 ;; Defined at:
 18929 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 18930 ;; Parameters:    Size  Location     Type
 18931 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 18932 ;;		 -> sprintf@f(6), NULL(0), 
 18933 ;;  buf             2   20[COMRAM] PTR unsigned char 
 18934 ;;		 -> dbuf(80), 
 18935 ;;  p               2   22[COMRAM] int 
 18936 ;; Auto vars:     Size  Location     Type
 18937 ;;  pad             2   27[COMRAM] int 
 18938 ;;  pad             2   25[COMRAM] int 
 18939 ;; Return value:  Size  Location     Type
 18940 ;;                  2   18[COMRAM] int 
 18941 ;; Registers used:
 18942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18943 ;; Tracked objects:
 18944 ;;		On entry : 0/0
 18945 ;;		On exit  : 0/0
 18946 ;;		Unchanged: 0/0
 18947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18948 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18949 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18951 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18952 ;;Total ram usage:       11 bytes
 18953 ;; Hardware stack levels used:    1
 18954 ;; Hardware stack levels required when called:    4
 18955 ;; This function calls:
 18956 ;;		i2_fputc
 18957 ;;		i2_fputs
 18958 ;;		i2_strlen
 18959 ;; This function is called by:
 18960 ;;		i2_dtoa
 18961 ;;		i2_efgtoa
 18962 ;; This function uses a non-reentrant model
 18963 ;;
 18964                           
 18965                           	psect	text92
 18966  0064E6                     __ptext92:
 18967                           	opt callstack 0
 18968  0064E6                     i2_pad:
 18969                           	opt callstack 6
 18970                           
 18971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 18972                           
 18973                           ;incstack = 0
 18974  0064E6  0101               	movlb	1	; () banked
 18975  0064E8  A1E1               	btfss	_flags& (0+255),0,b
 18976  0064EA  D00A               	goto	i2l5473
 18977                           
 18978                           ; BSR set to: 1
 18979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 18980  0064EC  C015  F00C         	movff	i2pad@buf,i2fputs@s
 18981  0064F0  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 18982  0064F4  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 18983  0064F8  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 18984  0064FC  EC13  F038         	call	i2_fputs	;wreg free
 18985  006500                     i2l5473:
 18986                           
 18987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 18988  006500  BE18               	btfsc	i2pad@p+1,7,c
 18989  006502  D005               	goto	i2l5477
 18990  006504  C017  F01C         	movff	i2pad@p,i2pad@w
 18991  006508  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
 18992  00650C  D004               	goto	i2l597
 18993  00650E                     i2l5477:
 18994  00650E  0E00               	movlw	0
 18995  006510  6E1D               	movwf	i2pad@w+1,c
 18996  006512  0E00               	movlw	0
 18997  006514  6E1C               	movwf	i2pad@w,c
 18998  006516                     i2l597:
 18999                           
 19000                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 19001  006516  0E00               	movlw	0
 19002  006518  6E1B               	movwf	i2pad@i+1,c
 19003  00651A  0E00               	movlw	0
 19004  00651C  6E1A               	movwf	i2pad@i,c
 19005                           
 19006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 19007  00651E  D00C               	goto	i2l5483
 19008  006520                     i2l5479:
 19009                           
 19010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 19011  006520  0E00               	movlw	0
 19012  006522  6E04               	movwf	i2fputc@c+1,c
 19013  006524  0E20               	movlw	32
 19014  006526  6E03               	movwf	i2fputc@c,c
 19015  006528  C013  F005         	movff	i2pad@fp,i2fputc@fp
 19016  00652C  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
 19017  006530  EC86  F031         	call	i2_fputc	;wreg free
 19018                           
 19019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 19020  006534  4A1A               	infsnz	i2pad@i,f,c
 19021  006536  2A1B               	incf	i2pad@i+1,f,c
 19022  006538                     i2l5483:
 19023                           
 19024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 19025  006538  501C               	movf	i2pad@w,w,c
 19026  00653A  5C1A               	subwf	i2pad@i,w,c
 19027  00653C  501B               	movf	i2pad@i+1,w,c
 19028  00653E  0A80               	xorlw	128
 19029  006540  6E19               	movwf	??i2_pad& (0+255),c
 19030  006542  501D               	movf	i2pad@w+1,w,c
 19031  006544  0A80               	xorlw	128
 19032  006546  5819               	subwfb	??i2_pad& (0+255),w,c
 19033  006548  A0D8               	btfss	status,0,c
 19034  00654A  D7EA               	goto	i2l5479
 19035                           
 19036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 19037  00654C  0101               	movlb	1	; () banked
 19038  00654E  B1E1               	btfsc	_flags& (0+255),0,b
 19039  006550  D00A               	goto	i2l5487
 19040                           
 19041                           ; BSR set to: 1
 19042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 19043  006552  C015  F00C         	movff	i2pad@buf,i2fputs@s
 19044  006556  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 19045  00655A  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 19046  00655E  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 19047  006562  EC13  F038         	call	i2_fputs	;wreg free
 19048  006566                     i2l5487:
 19049                           
 19050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 19051  006566  C015  F001         	movff	i2pad@buf,i2strlen@s
 19052  00656A  C016  F002         	movff	i2pad@buf+1,i2strlen@s+1
 19053  00656E  EC69  F039         	call	i2_strlen	;wreg free
 19054  006572  501C               	movf	i2pad@w,w,c
 19055  006574  2401               	addwf	?i2_strlen,w,c
 19056  006576  6E13               	movwf	?i2_pad,c
 19057  006578  501D               	movf	i2pad@w+1,w,c
 19058  00657A  2002               	addwfc	?i2_strlen+1,w,c
 19059  00657C  6E14               	movwf	?i2_pad+1,c
 19060  00657E  0012               	return		;funcret
 19061  006580                     __end_ofi2_pad:
 19062                           	opt callstack 0
 19063                           
 19064 ;; *************** function i2_strlen *****************
 19065 ;; Defined at:
 19066 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 19067 ;; Parameters:    Size  Location     Type
 19068 ;;  s               2    0[COMRAM] PTR const unsigned char 
 19069 ;;		 -> dbuf(80), 
 19070 ;; Auto vars:     Size  Location     Type
 19071 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 19072 ;;		 -> dbuf(80), 
 19073 ;; Return value:  Size  Location     Type
 19074 ;;                  2    0[COMRAM] unsigned int 
 19075 ;; Registers used:
 19076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19077 ;; Tracked objects:
 19078 ;;		On entry : 0/0
 19079 ;;		On exit  : 0/0
 19080 ;;		Unchanged: 0/0
 19081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19085 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19086 ;;Total ram usage:        4 bytes
 19087 ;; Hardware stack levels used:    1
 19088 ;; This function calls:
 19089 ;;		Nothing
 19090 ;; This function is called by:
 19091 ;;		i2_pad
 19092 ;; This function uses a non-reentrant model
 19093 ;;
 19094                           
 19095                           	psect	text93
 19096  0072D2                     __ptext93:
 19097                           	opt callstack 0
 19098  0072D2                     i2_strlen:
 19099                           	opt callstack 9
 19100                           
 19101                           ;incstack = 0
 19102  0072D2  C001  F003         	movff	i2strlen@s,i2strlen@a
 19103  0072D6  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 19104  0072DA  D002               	goto	i2l5461
 19105  0072DC                     i2l5459:
 19106  0072DC  4A01               	infsnz	i2strlen@s,f,c
 19107  0072DE  2A02               	incf	i2strlen@s+1,f,c
 19108  0072E0                     i2l5461:
 19109  0072E0  C001  FFD9         	movff	i2strlen@s,fsr2l
 19110  0072E4  C002  FFDA         	movff	i2strlen@s+1,fsr2h
 19111  0072E8  50DF               	movf	indf2,w,c
 19112  0072EA  A4D8               	btfss	status,2,c
 19113  0072EC  D7F7               	goto	i2l5459
 19114  0072EE  5003               	movf	i2strlen@a,w,c
 19115  0072F0  5C01               	subwf	i2strlen@s,w,c
 19116  0072F2  6E01               	movwf	?i2_strlen,c
 19117  0072F4  5004               	movf	i2strlen@a+1,w,c
 19118  0072F6  5802               	subwfb	i2strlen@s+1,w,c
 19119  0072F8  6E02               	movwf	?i2_strlen+1,c
 19120  0072FA  0012               	return		;funcret
 19121  0072FC                     __end_ofi2_strlen:
 19122                           	opt callstack 0
 19123                           
 19124 ;; *************** function i2_fputs *****************
 19125 ;; Defined at:
 19126 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 19127 ;; Parameters:    Size  Location     Type
 19128 ;;  s               2   11[COMRAM] PTR const unsigned char 
 19129 ;;		 -> dbuf(80), 
 19130 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 19131 ;;		 -> sprintf@f(6), NULL(0), 
 19132 ;; Auto vars:     Size  Location     Type
 19133 ;;  fputs           2   16[COMRAM] int 
 19134 ;;  fputs           1   15[COMRAM] unsigned char 
 19135 ;; Return value:  Size  Location     Type
 19136 ;;                  2   11[COMRAM] int 
 19137 ;; Registers used:
 19138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19139 ;; Tracked objects:
 19140 ;;		On entry : 0/0
 19141 ;;		On exit  : 0/0
 19142 ;;		Unchanged: 0/0
 19143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19145 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19147 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19148 ;;Total ram usage:        7 bytes
 19149 ;; Hardware stack levels used:    1
 19150 ;; Hardware stack levels required when called:    3
 19151 ;; This function calls:
 19152 ;;		i2_fputc
 19153 ;; This function is called by:
 19154 ;;		i2_pad
 19155 ;; This function uses a non-reentrant model
 19156 ;;
 19157                           
 19158                           	psect	text94
 19159  007026                     __ptext94:
 19160                           	opt callstack 0
 19161  007026                     i2_fputs:
 19162                           	opt callstack 6
 19163                           
 19164                           ;incstack = 0
 19165  007026  0E00               	movlw	0
 19166  007028  6E12               	movwf	i2fputs@i+1,c
 19167  00702A  0E00               	movlw	0
 19168  00702C  6E11               	movwf	i2fputs@i,c
 19169  00702E  D00B               	goto	i2l5455
 19170  007030                     i2l5451:
 19171  007030  C010  F003         	movff	i2fputs@c,i2fputc@c
 19172  007034  6A04               	clrf	i2fputc@c+1,c
 19173  007036  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
 19174  00703A  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
 19175  00703E  EC86  F031         	call	i2_fputc	;wreg free
 19176  007042  4A11               	infsnz	i2fputs@i,f,c
 19177  007044  2A12               	incf	i2fputs@i+1,f,c
 19178  007046                     i2l5455:
 19179  007046  5011               	movf	i2fputs@i,w,c
 19180  007048  240C               	addwf	i2fputs@s,w,c
 19181  00704A  6ED9               	movwf	fsr2l,c
 19182  00704C  5012               	movf	i2fputs@i+1,w,c
 19183  00704E  200D               	addwfc	i2fputs@s+1,w,c
 19184  007050  6EDA               	movwf	fsr2h,c
 19185  007052  50DF               	movf	indf2,w,c
 19186  007054  6E10               	movwf	i2fputs@c,c
 19187  007056  5010               	movf	i2fputs@c,w,c
 19188  007058  B4D8               	btfsc	status,2,c
 19189  00705A  0012               	return	
 19190  00705C  D7E9               	goto	i2l5451
 19191  00705E                     __end_ofi2_fputs:
 19192                           	opt callstack 0
 19193                           
 19194 ;; *************** function i2_fputc *****************
 19195 ;; Defined at:
 19196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 19197 ;; Parameters:    Size  Location     Type
 19198 ;;  c               2    2[COMRAM] int 
 19199 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 19200 ;;		 -> sprintf@f(6), NULL(0), 
 19201 ;; Auto vars:     Size  Location     Type
 19202 ;;		None
 19203 ;; Return value:  Size  Location     Type
 19204 ;;                  2    2[COMRAM] int 
 19205 ;; Registers used:
 19206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19207 ;; Tracked objects:
 19208 ;;		On entry : 0/0
 19209 ;;		On exit  : 0/0
 19210 ;;		Unchanged: 0/0
 19211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19214 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19215 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19216 ;;Total ram usage:        9 bytes
 19217 ;; Hardware stack levels used:    1
 19218 ;; Hardware stack levels required when called:    2
 19219 ;; This function calls:
 19220 ;;		i2_putch
 19221 ;; This function is called by:
 19222 ;;		i2_pad
 19223 ;;		i2_vfpfcnvrt
 19224 ;;		i2_fputs
 19225 ;; This function uses a non-reentrant model
 19226 ;;
 19227                           
 19228                           	psect	text95
 19229  00630C                     __ptext95:
 19230                           	opt callstack 0
 19231  00630C                     i2_fputc:
 19232                           	opt callstack 9
 19233                           
 19234                           ;incstack = 0
 19235  00630C  5005               	movf	i2fputc@fp,w,c
 19236  00630E  1006               	iorwf	i2fputc@fp+1,w,c
 19237  006310  B4D8               	btfsc	status,2,c
 19238  006312  D004               	goto	i2u627_40
 19239  006314  5005               	movf	i2fputc@fp,w,c
 19240  006316  1006               	iorwf	i2fputc@fp+1,w,c
 19241  006318  A4D8               	btfss	status,2,c
 19242  00631A  D004               	goto	i2l5217
 19243  00631C                     i2u627_40:
 19244  00631C  5003               	movf	i2fputc@c,w,c
 19245  00631E  ECA8  F03A         	call	i2_putch
 19246  006322  0012               	return	
 19247  006324                     i2l5217:
 19248  006324  EE20 F004          	lfsr	2,4
 19249  006328  5005               	movf	i2fputc@fp,w,c
 19250  00632A  26D9               	addwf	fsr2l,f,c
 19251  00632C  5006               	movf	i2fputc@fp+1,w,c
 19252  00632E  22DA               	addwfc	fsr2h,f,c
 19253  006330  50DE               	movf	postinc2,w,c
 19254  006332  10DE               	iorwf	postinc2,w,c
 19255  006334  B4D8               	btfsc	status,2,c
 19256  006336  D016               	goto	i2u629_40
 19257  006338  EE20 F004          	lfsr	2,4
 19258  00633C  5005               	movf	i2fputc@fp,w,c
 19259  00633E  26D9               	addwf	fsr2l,f,c
 19260  006340  5006               	movf	i2fputc@fp+1,w,c
 19261  006342  22DA               	addwfc	fsr2h,f,c
 19262  006344  EE10 F002          	lfsr	1,2
 19263  006348  5005               	movf	i2fputc@fp,w,c
 19264  00634A  26E1               	addwf	fsr1l,f,c
 19265  00634C  5006               	movf	i2fputc@fp+1,w,c
 19266  00634E  22E2               	addwfc	fsr1h,f,c
 19267  006350  50DE               	movf	postinc2,w,c
 19268  006352  5CE6               	subwf	postinc1,w,c
 19269  006354  50E6               	movf	postinc1,w,c
 19270  006356  0A80               	xorlw	128
 19271  006358  6E0B               	movwf	(??i2_fputc+4)& (0+255),c
 19272  00635A  50DE               	movf	postinc2,w,c
 19273  00635C  0A80               	xorlw	128
 19274  00635E  580B               	subwfb	(??i2_fputc+4)& (0+255),w,c
 19275  006360  B0D8               	btfsc	status,0,c
 19276  006362  0012               	return	
 19277  006364                     i2u629_40:
 19278  006364  EE20 F002          	lfsr	2,2
 19279  006368  5005               	movf	i2fputc@fp,w,c
 19280  00636A  26D9               	addwf	fsr2l,f,c
 19281  00636C  5006               	movf	i2fputc@fp+1,w,c
 19282  00636E  22DA               	addwfc	fsr2h,f,c
 19283  006370  CFDE F007          	movff	postinc2,??i2_fputc
 19284  006374  CFDD F008          	movff	postdec2,??i2_fputc+1
 19285  006378  C005  FFD9         	movff	i2fputc@fp,fsr2l
 19286  00637C  C006  FFDA         	movff	i2fputc@fp+1,fsr2h
 19287  006380  CFDE F009          	movff	postinc2,??i2_fputc+2
 19288  006384  CFDD F00A          	movff	postdec2,??i2_fputc+3
 19289  006388  5007               	movf	??i2_fputc,w,c
 19290  00638A  2409               	addwf	??i2_fputc+2,w,c
 19291  00638C  6ED9               	movwf	fsr2l,c
 19292  00638E  5008               	movf	??i2_fputc+1,w,c
 19293  006390  200A               	addwfc	??i2_fputc+3,w,c
 19294  006392  6EDA               	movwf	fsr2h,c
 19295  006394  C003  FFDF         	movff	i2fputc@c,indf2
 19296  006398  EE20 F002          	lfsr	2,2
 19297  00639C  5005               	movf	i2fputc@fp,w,c
 19298  00639E  26D9               	addwf	fsr2l,f,c
 19299  0063A0  5006               	movf	i2fputc@fp+1,w,c
 19300  0063A2  22DA               	addwfc	fsr2h,f,c
 19301  0063A4  2ADE               	incf	postinc2,f,c
 19302  0063A6  0E00               	movlw	0
 19303  0063A8  22DD               	addwfc	postdec2,f,c
 19304  0063AA  0012               	return		;funcret
 19305  0063AC                     __end_ofi2_fputc:
 19306                           	opt callstack 0
 19307                           
 19308 ;; *************** function i2_putch *****************
 19309 ;; Defined at:
 19310 ;;		line 201 in file "mcc_generated_files/eusart1.c"
 19311 ;; Parameters:    Size  Location     Type
 19312 ;;  txData          1    wreg     unsigned char 
 19313 ;; Auto vars:     Size  Location     Type
 19314 ;;  txData          1    1[COMRAM] unsigned char 
 19315 ;; Return value:  Size  Location     Type
 19316 ;;                  1    wreg      void 
 19317 ;; Registers used:
 19318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19319 ;; Tracked objects:
 19320 ;;		On entry : 0/0
 19321 ;;		On exit  : 0/0
 19322 ;;		Unchanged: 0/0
 19323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19327 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19328 ;;Total ram usage:        1 bytes
 19329 ;; Hardware stack levels used:    1
 19330 ;; Hardware stack levels required when called:    1
 19331 ;; This function calls:
 19332 ;;		i2_EUSART1_Write
 19333 ;; This function is called by:
 19334 ;;		i2_fputc
 19335 ;; This function uses a non-reentrant model
 19336 ;;
 19337                           
 19338                           	psect	text96
 19339  007550                     __ptext96:
 19340                           	opt callstack 0
 19341  007550                     i2_putch:
 19342                           	opt callstack 9
 19343                           
 19344                           ;incstack = 0
 19345                           ;i2putch@txData stored from wreg
 19346  007550  6E02               	movwf	i2putch@txData,c
 19347                           
 19348                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
 19349  007552  5002               	movf	i2putch@txData,w,c
 19350  007554  EC2F  F038         	call	i2_EUSART1_Write
 19351  007558  0012               	return		;funcret
 19352  00755A                     __end_ofi2_putch:
 19353                           	opt callstack 0
 19354                           
 19355 ;; *************** function i2_EUSART1_Write *****************
 19356 ;; Defined at:
 19357 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 19358 ;; Parameters:    Size  Location     Type
 19359 ;;  txData          1    wreg     unsigned char 
 19360 ;; Auto vars:     Size  Location     Type
 19361 ;;  txData          1    0[COMRAM] unsigned char 
 19362 ;; Return value:  Size  Location     Type
 19363 ;;                  1    wreg      void 
 19364 ;; Registers used:
 19365 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19366 ;; Tracked objects:
 19367 ;;		On entry : 0/0
 19368 ;;		On exit  : 0/0
 19369 ;;		Unchanged: 0/0
 19370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19374 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19375 ;;Total ram usage:        1 bytes
 19376 ;; Hardware stack levels used:    1
 19377 ;; This function calls:
 19378 ;;		Nothing
 19379 ;; This function is called by:
 19380 ;;		i2_putch
 19381 ;; This function uses a non-reentrant model
 19382 ;;
 19383                           
 19384                           	psect	text97
 19385  00705E                     __ptext97:
 19386                           	opt callstack 0
 19387  00705E                     i2_EUSART1_Write:
 19388                           	opt callstack 9
 19389                           
 19390                           ;incstack = 0
 19391                           ;i2EUSART1_Write@txData stored from wreg
 19392  00705E  6E01               	movwf	i2EUSART1_Write@txData,c
 19393  007060                     
 19394                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 19395                           
 19396                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 19397  007060  0101               	movlb	1	; () banked
 19398  007062  51F9               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 19399  007064  B4D8               	btfsc	status,2,c
 19400  007066  D7FC               	goto	i2l5191
 19401                           
 19402                           ; BSR set to: 1
 19403                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
 19404  007068  B89D               	btfsc	3997,4,c	;volatile
 19405  00706A  D003               	goto	i2l159
 19406                           
 19407                           ; BSR set to: 1
 19408                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
 19409  00706C  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 19410                           
 19411                           ;mcc_generated_files/eusart1.c: 182:     }
 19412  007070  D010               	goto	i2l5207
 19413  007072                     i2l159:
 19414                           
 19415                           ; BSR set to: 1
 19416                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
 19417  007072  989D               	bcf	3997,4,c	;volatile
 19418                           
 19419                           ; BSR set to: 1
 19420                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 19421  007074  0E00               	movlw	low _eusart1TxBuffer
 19422  007076  25FB               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 19423  007078  6ED9               	movwf	fsr2l,c
 19424  00707A  6ADA               	clrf	fsr2h,c
 19425  00707C  0E02               	movlw	high _eusart1TxBuffer
 19426  00707E  22DA               	addwfc	fsr2h,f,c
 19427  007080  C001  FFDF         	movff	i2EUSART1_Write@txData,indf2
 19428                           
 19429                           ; BSR set to: 1
 19430  007084  2BFB               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 19431                           
 19432                           ; BSR set to: 1
 19433                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 19434  007086  0E3F               	movlw	63
 19435  007088  65FB               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 19436  00708A  D002               	goto	i2l5205
 19437                           
 19438                           ; BSR set to: 1
 19439                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 19440  00708C  0E00               	movlw	0
 19441  00708E  6FFB               	movwf	_eusart1TxHead& (0+255),b	;volatile
 19442  007090                     i2l5205:
 19443                           
 19444                           ; BSR set to: 1
 19445                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 19446  007090  07F9               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 19447  007092                     i2l5207:
 19448                           
 19449                           ; BSR set to: 1
 19450                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
 19451  007092  889D               	bsf	3997,4,c	;volatile
 19452                           
 19453                           ; BSR set to: 1
 19454  007094  0012               	return		;funcret
 19455  007096                     __end_ofi2_EUSART1_Write:
 19456                           	opt callstack 0
 19457                           
 19458 ;; *************** function i2_abs *****************
 19459 ;; Defined at:
 19460 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 19461 ;; Parameters:    Size  Location     Type
 19462 ;;  a               2   18[COMRAM] int 
 19463 ;; Auto vars:     Size  Location     Type
 19464 ;;		None
 19465 ;; Return value:  Size  Location     Type
 19466 ;;                  2   18[COMRAM] int 
 19467 ;; Registers used:
 19468 ;;		wreg, status,2, status,0
 19469 ;; Tracked objects:
 19470 ;;		On entry : 0/0
 19471 ;;		On exit  : 0/0
 19472 ;;		Unchanged: 0/0
 19473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19478 ;;Total ram usage:        4 bytes
 19479 ;; Hardware stack levels used:    1
 19480 ;; This function calls:
 19481 ;;		Nothing
 19482 ;; This function is called by:
 19483 ;;		i2_dtoa
 19484 ;; This function uses a non-reentrant model
 19485 ;;
 19486                           
 19487                           	psect	text98
 19488  00712E                     __ptext98:
 19489                           	opt callstack 0
 19490  00712E                     i2_abs:
 19491                           	opt callstack 10
 19492                           
 19493                           ; BSR set to: 1
 19494                           ;incstack = 0
 19495  00712E  BE14               	btfsc	i2abs@a+1,7,c
 19496  007130  D005               	goto	i2u770_40
 19497  007132  5014               	movf	i2abs@a+1,w,c
 19498  007134  E110               	bnz	i2l1442
 19499  007136  0413               	decf	i2abs@a,w,c
 19500  007138  B0D8               	btfsc	status,0,c
 19501  00713A  D00D               	goto	i2l1442
 19502  00713C                     i2u770_40:
 19503  00713C  C013  F015         	movff	i2abs@a,??i2_abs
 19504  007140  C014  F016         	movff	i2abs@a+1,??i2_abs+1
 19505  007144  1E15               	comf	??i2_abs,f,c
 19506  007146  1E16               	comf	??i2_abs+1,f,c
 19507  007148  4A15               	infsnz	??i2_abs,f,c
 19508  00714A  2A16               	incf	??i2_abs+1,f,c
 19509  00714C  C015  F013         	movff	??i2_abs,?i2_abs
 19510  007150  C016  F014         	movff	??i2_abs+1,?i2_abs+1
 19511  007154  0012               	return	
 19512  007156                     i2l1442:
 19513  007156  C013  F013         	movff	i2abs@a,?i2_abs
 19514  00715A  C014  F014         	movff	i2abs@a+1,?i2_abs+1
 19515  00715E  0012               	return		;funcret
 19516  007160                     __end_ofi2_abs:
 19517                           	opt callstack 0
 19518                           
 19519 ;; *************** function i2___aomod *****************
 19520 ;; Defined at:
 19521 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 19522 ;; Parameters:    Size  Location     Type
 19523 ;;  dividend        8    0[COMRAM] long long 
 19524 ;;  divisor         8    8[COMRAM] long long 
 19525 ;; Auto vars:     Size  Location     Type
 19526 ;;  __aomod         1   17[COMRAM] unsigned char 
 19527 ;;  __aomod         1   16[COMRAM] unsigned char 
 19528 ;; Return value:  Size  Location     Type
 19529 ;;                  8    0[COMRAM] long long 
 19530 ;; Registers used:
 19531 ;;		wreg, status,2, status,0
 19532 ;; Tracked objects:
 19533 ;;		On entry : 0/0
 19534 ;;		On exit  : 0/0
 19535 ;;		Unchanged: 0/0
 19536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19537 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19540 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19541 ;;Total ram usage:       18 bytes
 19542 ;; Hardware stack levels used:    1
 19543 ;; This function calls:
 19544 ;;		Nothing
 19545 ;; This function is called by:
 19546 ;;		i2_dtoa
 19547 ;; This function uses a non-reentrant model
 19548 ;;
 19549                           
 19550                           	psect	text99
 19551  005514                     __ptext99:
 19552                           	opt callstack 0
 19553  005514                     i2___aomod:
 19554                           	opt callstack 10
 19555                           
 19556                           ;incstack = 0
 19557  005514  0E00               	movlw	0
 19558  005516  6E12               	movwf	i2___aomod@sign,c
 19559  005518  AE08               	btfss	i2___aomod@dividend+7,7,c
 19560  00551A  D012               	goto	i2l5549
 19561  00551C  1E08               	comf	i2___aomod@dividend+7,f,c
 19562  00551E  1E07               	comf	i2___aomod@dividend+6,f,c
 19563  005520  1E06               	comf	i2___aomod@dividend+5,f,c
 19564  005522  1E05               	comf	i2___aomod@dividend+4,f,c
 19565  005524  1E04               	comf	i2___aomod@dividend+3,f,c
 19566  005526  1E03               	comf	i2___aomod@dividend+2,f,c
 19567  005528  1E02               	comf	i2___aomod@dividend+1,f,c
 19568  00552A  6C01               	negf	i2___aomod@dividend,c
 19569  00552C  0E00               	movlw	0
 19570  00552E  2202               	addwfc	i2___aomod@dividend+1,f,c
 19571  005530  2203               	addwfc	i2___aomod@dividend+2,f,c
 19572  005532  2204               	addwfc	i2___aomod@dividend+3,f,c
 19573  005534  2205               	addwfc	i2___aomod@dividend+4,f,c
 19574  005536  2206               	addwfc	i2___aomod@dividend+5,f,c
 19575  005538  2207               	addwfc	i2___aomod@dividend+6,f,c
 19576  00553A  2208               	addwfc	i2___aomod@dividend+7,f,c
 19577  00553C  0E01               	movlw	1
 19578  00553E  6E12               	movwf	i2___aomod@sign,c
 19579  005540                     i2l5549:
 19580  005540  AE10               	btfss	i2___aomod@divisor+7,7,c
 19581  005542  D010               	goto	i2l5553
 19582  005544  1E10               	comf	i2___aomod@divisor+7,f,c
 19583  005546  1E0F               	comf	i2___aomod@divisor+6,f,c
 19584  005548  1E0E               	comf	i2___aomod@divisor+5,f,c
 19585  00554A  1E0D               	comf	i2___aomod@divisor+4,f,c
 19586  00554C  1E0C               	comf	i2___aomod@divisor+3,f,c
 19587  00554E  1E0B               	comf	i2___aomod@divisor+2,f,c
 19588  005550  1E0A               	comf	i2___aomod@divisor+1,f,c
 19589  005552  6C09               	negf	i2___aomod@divisor,c
 19590  005554  0E00               	movlw	0
 19591  005556  220A               	addwfc	i2___aomod@divisor+1,f,c
 19592  005558  220B               	addwfc	i2___aomod@divisor+2,f,c
 19593  00555A  220C               	addwfc	i2___aomod@divisor+3,f,c
 19594  00555C  220D               	addwfc	i2___aomod@divisor+4,f,c
 19595  00555E  220E               	addwfc	i2___aomod@divisor+5,f,c
 19596  005560  220F               	addwfc	i2___aomod@divisor+6,f,c
 19597  005562  2210               	addwfc	i2___aomod@divisor+7,f,c
 19598  005564                     i2l5553:
 19599  005564  5009               	movf	i2___aomod@divisor,w,c
 19600  005566  100A               	iorwf	i2___aomod@divisor+1,w,c
 19601  005568  100B               	iorwf	i2___aomod@divisor+2,w,c
 19602  00556A  100C               	iorwf	i2___aomod@divisor+3,w,c
 19603  00556C  100D               	iorwf	i2___aomod@divisor+4,w,c
 19604  00556E  100E               	iorwf	i2___aomod@divisor+5,w,c
 19605  005570  100F               	iorwf	i2___aomod@divisor+6,w,c
 19606  005572  1010               	iorwf	i2___aomod@divisor+7,w,c
 19607  005574  B4D8               	btfsc	status,2,c
 19608  005576  D03C               	goto	i2l5569
 19609  005578  0E01               	movlw	1
 19610  00557A  6E11               	movwf	i2___aomod@counter,c
 19611  00557C  D00A               	goto	i2l5559
 19612  00557E                     i2l5557:
 19613  00557E  90D8               	bcf	status,0,c
 19614  005580  3609               	rlcf	i2___aomod@divisor,f,c
 19615  005582  360A               	rlcf	i2___aomod@divisor+1,f,c
 19616  005584  360B               	rlcf	i2___aomod@divisor+2,f,c
 19617  005586  360C               	rlcf	i2___aomod@divisor+3,f,c
 19618  005588  360D               	rlcf	i2___aomod@divisor+4,f,c
 19619  00558A  360E               	rlcf	i2___aomod@divisor+5,f,c
 19620  00558C  360F               	rlcf	i2___aomod@divisor+6,f,c
 19621  00558E  3610               	rlcf	i2___aomod@divisor+7,f,c
 19622  005590  2A11               	incf	i2___aomod@counter,f,c
 19623  005592                     i2l5559:
 19624  005592  AE10               	btfss	i2___aomod@divisor+7,7,c
 19625  005594  D7F4               	goto	i2l5557
 19626  005596                     i2u690_40:
 19627  005596  5009               	movf	i2___aomod@divisor,w,c
 19628  005598  5C01               	subwf	i2___aomod@dividend,w,c
 19629  00559A  500A               	movf	i2___aomod@divisor+1,w,c
 19630  00559C  5802               	subwfb	i2___aomod@dividend+1,w,c
 19631  00559E  500B               	movf	i2___aomod@divisor+2,w,c
 19632  0055A0  5803               	subwfb	i2___aomod@dividend+2,w,c
 19633  0055A2  500C               	movf	i2___aomod@divisor+3,w,c
 19634  0055A4  5804               	subwfb	i2___aomod@dividend+3,w,c
 19635  0055A6  500D               	movf	i2___aomod@divisor+4,w,c
 19636  0055A8  5805               	subwfb	i2___aomod@dividend+4,w,c
 19637  0055AA  500E               	movf	i2___aomod@divisor+5,w,c
 19638  0055AC  5806               	subwfb	i2___aomod@dividend+5,w,c
 19639  0055AE  500F               	movf	i2___aomod@divisor+6,w,c
 19640  0055B0  5807               	subwfb	i2___aomod@dividend+6,w,c
 19641  0055B2  5010               	movf	i2___aomod@divisor+7,w,c
 19642  0055B4  5808               	subwfb	i2___aomod@dividend+7,w,c
 19643  0055B6  A0D8               	btfss	status,0,c
 19644  0055B8  D010               	goto	i2l5565
 19645  0055BA  5009               	movf	i2___aomod@divisor,w,c
 19646  0055BC  5E01               	subwf	i2___aomod@dividend,f,c
 19647  0055BE  500A               	movf	i2___aomod@divisor+1,w,c
 19648  0055C0  5A02               	subwfb	i2___aomod@dividend+1,f,c
 19649  0055C2  500B               	movf	i2___aomod@divisor+2,w,c
 19650  0055C4  5A03               	subwfb	i2___aomod@dividend+2,f,c
 19651  0055C6  500C               	movf	i2___aomod@divisor+3,w,c
 19652  0055C8  5A04               	subwfb	i2___aomod@dividend+3,f,c
 19653  0055CA  500D               	movf	i2___aomod@divisor+4,w,c
 19654  0055CC  5A05               	subwfb	i2___aomod@dividend+4,f,c
 19655  0055CE  500E               	movf	i2___aomod@divisor+5,w,c
 19656  0055D0  5A06               	subwfb	i2___aomod@dividend+5,f,c
 19657  0055D2  500F               	movf	i2___aomod@divisor+6,w,c
 19658  0055D4  5A07               	subwfb	i2___aomod@dividend+6,f,c
 19659  0055D6  5010               	movf	i2___aomod@divisor+7,w,c
 19660  0055D8  5A08               	subwfb	i2___aomod@dividend+7,f,c
 19661  0055DA                     i2l5565:
 19662  0055DA  90D8               	bcf	status,0,c
 19663  0055DC  3210               	rrcf	i2___aomod@divisor+7,f,c
 19664  0055DE  320F               	rrcf	i2___aomod@divisor+6,f,c
 19665  0055E0  320E               	rrcf	i2___aomod@divisor+5,f,c
 19666  0055E2  320D               	rrcf	i2___aomod@divisor+4,f,c
 19667  0055E4  320C               	rrcf	i2___aomod@divisor+3,f,c
 19668  0055E6  320B               	rrcf	i2___aomod@divisor+2,f,c
 19669  0055E8  320A               	rrcf	i2___aomod@divisor+1,f,c
 19670  0055EA  3209               	rrcf	i2___aomod@divisor,f,c
 19671  0055EC  2E11               	decfsz	i2___aomod@counter,f,c
 19672  0055EE  D7D3               	goto	i2u690_40
 19673  0055F0                     i2l5569:
 19674  0055F0  5012               	movf	i2___aomod@sign,w,c
 19675  0055F2  B4D8               	btfsc	status,2,c
 19676  0055F4  D010               	goto	i2l5573
 19677  0055F6  1E08               	comf	i2___aomod@dividend+7,f,c
 19678  0055F8  1E07               	comf	i2___aomod@dividend+6,f,c
 19679  0055FA  1E06               	comf	i2___aomod@dividend+5,f,c
 19680  0055FC  1E05               	comf	i2___aomod@dividend+4,f,c
 19681  0055FE  1E04               	comf	i2___aomod@dividend+3,f,c
 19682  005600  1E03               	comf	i2___aomod@dividend+2,f,c
 19683  005602  1E02               	comf	i2___aomod@dividend+1,f,c
 19684  005604  6C01               	negf	i2___aomod@dividend,c
 19685  005606  0E00               	movlw	0
 19686  005608  2202               	addwfc	i2___aomod@dividend+1,f,c
 19687  00560A  2203               	addwfc	i2___aomod@dividend+2,f,c
 19688  00560C  2204               	addwfc	i2___aomod@dividend+3,f,c
 19689  00560E  2205               	addwfc	i2___aomod@dividend+4,f,c
 19690  005610  2206               	addwfc	i2___aomod@dividend+5,f,c
 19691  005612  2207               	addwfc	i2___aomod@dividend+6,f,c
 19692  005614  2208               	addwfc	i2___aomod@dividend+7,f,c
 19693  005616                     i2l5573:
 19694  005616  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
 19695  00561A  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
 19696  00561E  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
 19697  005622  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
 19698  005626  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
 19699  00562A  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
 19700  00562E  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
 19701  005632  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
 19702  005636  0012               	return		;funcret
 19703  005638                     __end_ofi2___aomod:
 19704                           	opt callstack 0
 19705                           
 19706 ;; *************** function i2___aodiv *****************
 19707 ;; Defined at:
 19708 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 19709 ;; Parameters:    Size  Location     Type
 19710 ;;  dividend        8    0[COMRAM] long long 
 19711 ;;  divisor         8    8[COMRAM] long long 
 19712 ;; Auto vars:     Size  Location     Type
 19713 ;;  __aodiv         8   18[COMRAM] long long 
 19714 ;;  __aodiv         1   17[COMRAM] unsigned char 
 19715 ;;  __aodiv         1   16[COMRAM] unsigned char 
 19716 ;; Return value:  Size  Location     Type
 19717 ;;                  8    0[COMRAM] long long 
 19718 ;; Registers used:
 19719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19720 ;; Tracked objects:
 19721 ;;		On entry : 0/0
 19722 ;;		On exit  : 0/0
 19723 ;;		Unchanged: 0/0
 19724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19725 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19726 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19728 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19729 ;;Total ram usage:       26 bytes
 19730 ;; Hardware stack levels used:    1
 19731 ;; This function calls:
 19732 ;;		Nothing
 19733 ;; This function is called by:
 19734 ;;		i2_dtoa
 19735 ;; This function uses a non-reentrant model
 19736 ;;
 19737                           
 19738                           	psect	text100
 19739  004DD8                     __ptext100:
 19740                           	opt callstack 0
 19741  004DD8                     i2___aodiv:
 19742                           	opt callstack 10
 19743                           
 19744                           ;incstack = 0
 19745  004DD8  0E00               	movlw	0
 19746  004DDA  6E12               	movwf	i2___aodiv@sign,c
 19747  004DDC  AE10               	btfss	i2___aodiv@divisor+7,7,c
 19748  004DDE  D012               	goto	i2l5505
 19749  004DE0  1E10               	comf	i2___aodiv@divisor+7,f,c
 19750  004DE2  1E0F               	comf	i2___aodiv@divisor+6,f,c
 19751  004DE4  1E0E               	comf	i2___aodiv@divisor+5,f,c
 19752  004DE6  1E0D               	comf	i2___aodiv@divisor+4,f,c
 19753  004DE8  1E0C               	comf	i2___aodiv@divisor+3,f,c
 19754  004DEA  1E0B               	comf	i2___aodiv@divisor+2,f,c
 19755  004DEC  1E0A               	comf	i2___aodiv@divisor+1,f,c
 19756  004DEE  6C09               	negf	i2___aodiv@divisor,c
 19757  004DF0  0E00               	movlw	0
 19758  004DF2  220A               	addwfc	i2___aodiv@divisor+1,f,c
 19759  004DF4  220B               	addwfc	i2___aodiv@divisor+2,f,c
 19760  004DF6  220C               	addwfc	i2___aodiv@divisor+3,f,c
 19761  004DF8  220D               	addwfc	i2___aodiv@divisor+4,f,c
 19762  004DFA  220E               	addwfc	i2___aodiv@divisor+5,f,c
 19763  004DFC  220F               	addwfc	i2___aodiv@divisor+6,f,c
 19764  004DFE  2210               	addwfc	i2___aodiv@divisor+7,f,c
 19765  004E00  0E01               	movlw	1
 19766  004E02  6E12               	movwf	i2___aodiv@sign,c
 19767  004E04                     i2l5505:
 19768  004E04  AE08               	btfss	i2___aodiv@dividend+7,7,c
 19769  004E06  D012               	goto	i2l5511
 19770  004E08  1E08               	comf	i2___aodiv@dividend+7,f,c
 19771  004E0A  1E07               	comf	i2___aodiv@dividend+6,f,c
 19772  004E0C  1E06               	comf	i2___aodiv@dividend+5,f,c
 19773  004E0E  1E05               	comf	i2___aodiv@dividend+4,f,c
 19774  004E10  1E04               	comf	i2___aodiv@dividend+3,f,c
 19775  004E12  1E03               	comf	i2___aodiv@dividend+2,f,c
 19776  004E14  1E02               	comf	i2___aodiv@dividend+1,f,c
 19777  004E16  6C01               	negf	i2___aodiv@dividend,c
 19778  004E18  0E00               	movlw	0
 19779  004E1A  2202               	addwfc	i2___aodiv@dividend+1,f,c
 19780  004E1C  2203               	addwfc	i2___aodiv@dividend+2,f,c
 19781  004E1E  2204               	addwfc	i2___aodiv@dividend+3,f,c
 19782  004E20  2205               	addwfc	i2___aodiv@dividend+4,f,c
 19783  004E22  2206               	addwfc	i2___aodiv@dividend+5,f,c
 19784  004E24  2207               	addwfc	i2___aodiv@dividend+6,f,c
 19785  004E26  2208               	addwfc	i2___aodiv@dividend+7,f,c
 19786  004E28  0E01               	movlw	1
 19787  004E2A  1A12               	xorwf	i2___aodiv@sign,f,c
 19788  004E2C                     i2l5511:
 19789  004E2C  EE20  F013         	lfsr	2,i2___aodiv@quotient
 19790  004E30  0E07               	movlw	7
 19791  004E32                     i2u682_41:
 19792  004E32  6ADE               	clrf	postinc2,c
 19793  004E34  06E8               	decf	wreg,f,c
 19794  004E36  E2FD               	bc	i2u682_41
 19795  004E38  5009               	movf	i2___aodiv@divisor,w,c
 19796  004E3A  100A               	iorwf	i2___aodiv@divisor+1,w,c
 19797  004E3C  100B               	iorwf	i2___aodiv@divisor+2,w,c
 19798  004E3E  100C               	iorwf	i2___aodiv@divisor+3,w,c
 19799  004E40  100D               	iorwf	i2___aodiv@divisor+4,w,c
 19800  004E42  100E               	iorwf	i2___aodiv@divisor+5,w,c
 19801  004E44  100F               	iorwf	i2___aodiv@divisor+6,w,c
 19802  004E46  1010               	iorwf	i2___aodiv@divisor+7,w,c
 19803  004E48  B4D8               	btfsc	status,2,c
 19804  004E4A  D046               	goto	i2l5533
 19805  004E4C  0E01               	movlw	1
 19806  004E4E  6E11               	movwf	i2___aodiv@counter,c
 19807  004E50  D00A               	goto	i2l5519
 19808  004E52                     i2l5517:
 19809  004E52  90D8               	bcf	status,0,c
 19810  004E54  3609               	rlcf	i2___aodiv@divisor,f,c
 19811  004E56  360A               	rlcf	i2___aodiv@divisor+1,f,c
 19812  004E58  360B               	rlcf	i2___aodiv@divisor+2,f,c
 19813  004E5A  360C               	rlcf	i2___aodiv@divisor+3,f,c
 19814  004E5C  360D               	rlcf	i2___aodiv@divisor+4,f,c
 19815  004E5E  360E               	rlcf	i2___aodiv@divisor+5,f,c
 19816  004E60  360F               	rlcf	i2___aodiv@divisor+6,f,c
 19817  004E62  3610               	rlcf	i2___aodiv@divisor+7,f,c
 19818  004E64  2A11               	incf	i2___aodiv@counter,f,c
 19819  004E66                     i2l5519:
 19820  004E66  AE10               	btfss	i2___aodiv@divisor+7,7,c
 19821  004E68  D7F4               	goto	i2l5517
 19822  004E6A                     i2u684_40:
 19823  004E6A  90D8               	bcf	status,0,c
 19824  004E6C  3613               	rlcf	i2___aodiv@quotient,f,c
 19825  004E6E  3614               	rlcf	i2___aodiv@quotient+1,f,c
 19826  004E70  3615               	rlcf	i2___aodiv@quotient+2,f,c
 19827  004E72  3616               	rlcf	i2___aodiv@quotient+3,f,c
 19828  004E74  3617               	rlcf	i2___aodiv@quotient+4,f,c
 19829  004E76  3618               	rlcf	i2___aodiv@quotient+5,f,c
 19830  004E78  3619               	rlcf	i2___aodiv@quotient+6,f,c
 19831  004E7A  361A               	rlcf	i2___aodiv@quotient+7,f,c
 19832  004E7C  5009               	movf	i2___aodiv@divisor,w,c
 19833  004E7E  5C01               	subwf	i2___aodiv@dividend,w,c
 19834  004E80  500A               	movf	i2___aodiv@divisor+1,w,c
 19835  004E82  5802               	subwfb	i2___aodiv@dividend+1,w,c
 19836  004E84  500B               	movf	i2___aodiv@divisor+2,w,c
 19837  004E86  5803               	subwfb	i2___aodiv@dividend+2,w,c
 19838  004E88  500C               	movf	i2___aodiv@divisor+3,w,c
 19839  004E8A  5804               	subwfb	i2___aodiv@dividend+3,w,c
 19840  004E8C  500D               	movf	i2___aodiv@divisor+4,w,c
 19841  004E8E  5805               	subwfb	i2___aodiv@dividend+4,w,c
 19842  004E90  500E               	movf	i2___aodiv@divisor+5,w,c
 19843  004E92  5806               	subwfb	i2___aodiv@dividend+5,w,c
 19844  004E94  500F               	movf	i2___aodiv@divisor+6,w,c
 19845  004E96  5807               	subwfb	i2___aodiv@dividend+6,w,c
 19846  004E98  5010               	movf	i2___aodiv@divisor+7,w,c
 19847  004E9A  5808               	subwfb	i2___aodiv@dividend+7,w,c
 19848  004E9C  A0D8               	btfss	status,0,c
 19849  004E9E  D011               	goto	i2l5529
 19850  004EA0  5009               	movf	i2___aodiv@divisor,w,c
 19851  004EA2  5E01               	subwf	i2___aodiv@dividend,f,c
 19852  004EA4  500A               	movf	i2___aodiv@divisor+1,w,c
 19853  004EA6  5A02               	subwfb	i2___aodiv@dividend+1,f,c
 19854  004EA8  500B               	movf	i2___aodiv@divisor+2,w,c
 19855  004EAA  5A03               	subwfb	i2___aodiv@dividend+2,f,c
 19856  004EAC  500C               	movf	i2___aodiv@divisor+3,w,c
 19857  004EAE  5A04               	subwfb	i2___aodiv@dividend+3,f,c
 19858  004EB0  500D               	movf	i2___aodiv@divisor+4,w,c
 19859  004EB2  5A05               	subwfb	i2___aodiv@dividend+4,f,c
 19860  004EB4  500E               	movf	i2___aodiv@divisor+5,w,c
 19861  004EB6  5A06               	subwfb	i2___aodiv@dividend+5,f,c
 19862  004EB8  500F               	movf	i2___aodiv@divisor+6,w,c
 19863  004EBA  5A07               	subwfb	i2___aodiv@dividend+6,f,c
 19864  004EBC  5010               	movf	i2___aodiv@divisor+7,w,c
 19865  004EBE  5A08               	subwfb	i2___aodiv@dividend+7,f,c
 19866  004EC0  8013               	bsf	i2___aodiv@quotient,0,c
 19867  004EC2                     i2l5529:
 19868  004EC2  90D8               	bcf	status,0,c
 19869  004EC4  3210               	rrcf	i2___aodiv@divisor+7,f,c
 19870  004EC6  320F               	rrcf	i2___aodiv@divisor+6,f,c
 19871  004EC8  320E               	rrcf	i2___aodiv@divisor+5,f,c
 19872  004ECA  320D               	rrcf	i2___aodiv@divisor+4,f,c
 19873  004ECC  320C               	rrcf	i2___aodiv@divisor+3,f,c
 19874  004ECE  320B               	rrcf	i2___aodiv@divisor+2,f,c
 19875  004ED0  320A               	rrcf	i2___aodiv@divisor+1,f,c
 19876  004ED2  3209               	rrcf	i2___aodiv@divisor,f,c
 19877  004ED4  2E11               	decfsz	i2___aodiv@counter,f,c
 19878  004ED6  D7C9               	goto	i2u684_40
 19879  004ED8                     i2l5533:
 19880  004ED8  5012               	movf	i2___aodiv@sign,w,c
 19881  004EDA  B4D8               	btfsc	status,2,c
 19882  004EDC  D010               	goto	i2l5537
 19883  004EDE  1E1A               	comf	i2___aodiv@quotient+7,f,c
 19884  004EE0  1E19               	comf	i2___aodiv@quotient+6,f,c
 19885  004EE2  1E18               	comf	i2___aodiv@quotient+5,f,c
 19886  004EE4  1E17               	comf	i2___aodiv@quotient+4,f,c
 19887  004EE6  1E16               	comf	i2___aodiv@quotient+3,f,c
 19888  004EE8  1E15               	comf	i2___aodiv@quotient+2,f,c
 19889  004EEA  1E14               	comf	i2___aodiv@quotient+1,f,c
 19890  004EEC  6C13               	negf	i2___aodiv@quotient,c
 19891  004EEE  0E00               	movlw	0
 19892  004EF0  2214               	addwfc	i2___aodiv@quotient+1,f,c
 19893  004EF2  2215               	addwfc	i2___aodiv@quotient+2,f,c
 19894  004EF4  2216               	addwfc	i2___aodiv@quotient+3,f,c
 19895  004EF6  2217               	addwfc	i2___aodiv@quotient+4,f,c
 19896  004EF8  2218               	addwfc	i2___aodiv@quotient+5,f,c
 19897  004EFA  2219               	addwfc	i2___aodiv@quotient+6,f,c
 19898  004EFC  221A               	addwfc	i2___aodiv@quotient+7,f,c
 19899  004EFE                     i2l5537:
 19900  004EFE  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
 19901  004F02  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 19902  004F06  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 19903  004F0A  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 19904  004F0E  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 19905  004F12  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 19906  004F16  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 19907  004F1A  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 19908  004F1E  0012               	return		;funcret
 19909  004F20                     __end_ofi2___aodiv:
 19910                           	opt callstack 0
 19911                           
 19912 ;; *************** function i2_atoi *****************
 19913 ;; Defined at:
 19914 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 19915 ;; Parameters:    Size  Location     Type
 19916 ;;  s               2    7[COMRAM] PTR const unsigned char 
 19917 ;;		 -> STR_12(61), STR_11(26), STR_9(6), STR_7(6), 
 19918 ;;		 -> STR_4(34), STR_3(31), STR_2(34), STR_1(14), 
 19919 ;; Auto vars:     Size  Location     Type
 19920 ;;  atoi            2   20[COMRAM] int 
 19921 ;;  atoi            2   13[COMRAM] int 
 19922 ;; Return value:  Size  Location     Type
 19923 ;;                  2    7[COMRAM] int 
 19924 ;; Registers used:
 19925 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19926 ;; Tracked objects:
 19927 ;;		On entry : 0/0
 19928 ;;		On exit  : 0/0
 19929 ;;		Unchanged: 0/0
 19930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19932 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19933 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19934 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19935 ;;Total ram usage:       15 bytes
 19936 ;; Hardware stack levels used:    1
 19937 ;; Hardware stack levels required when called:    1
 19938 ;; This function calls:
 19939 ;;		i2___wmul
 19940 ;;		i2_isdigit
 19941 ;;		i2_isspace
 19942 ;; This function is called by:
 19943 ;;		i2_vfpfcnvrt
 19944 ;; This function uses a non-reentrant model
 19945 ;;
 19946                           
 19947                           	psect	text101
 19948  004C8E                     __ptext101:
 19949                           	opt callstack 0
 19950  004C8E                     i2_atoi:
 19951                           	opt callstack 10
 19952                           
 19953                           ;incstack = 0
 19954  004C8E  0E00               	movlw	0
 19955  004C90  6E16               	movwf	i2atoi@n+1,c
 19956  004C92  0E00               	movlw	0
 19957  004C94  6E15               	movwf	i2atoi@n,c
 19958  004C96  0E00               	movlw	0
 19959  004C98  6E0F               	movwf	i2atoi@neg+1,c
 19960  004C9A  0E00               	movlw	0
 19961  004C9C  6E0E               	movwf	i2atoi@neg,c
 19962  004C9E  D002               	goto	i2l6483
 19963  004CA0                     i2l6481:
 19964  004CA0  4A08               	infsnz	i2atoi@s,f,c
 19965  004CA2  2A09               	incf	i2atoi@s+1,f,c
 19966  004CA4                     i2l6483:
 19967  004CA4  0E01               	movlw	1
 19968  004CA6  6E14               	movwf	i2_atoi$2042,c
 19969  004CA8  C008  FFF6         	movff	i2atoi@s,tblptrl
 19970  004CAC  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 19971  004CB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19972  004CB0  6AF8               	clrf	tblptru,c
 19973  004CB2                     	endif
 19974  004CB2                     	if	0	;tblptru may be non-zero
 19975  004CB2                     	endif
 19976  004CB2  0008               	tblrd		*
 19977  004CB4  50F5               	movf	tablat,w,c
 19978  004CB6  0A20               	xorlw	32
 19979  004CB8  B4D8               	btfsc	status,2,c
 19980  004CBA  D019               	goto	i2l6491
 19981  004CBC  0EF7               	movlw	247
 19982  004CBE  6E0A               	movwf	??i2_atoi& (0+255),c
 19983  004CC0  0EFF               	movlw	255
 19984  004CC2  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
 19985  004CC4  C008  FFF6         	movff	i2atoi@s,tblptrl
 19986  004CC8  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 19987  004CCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19988  004CCC  6AF8               	clrf	tblptru,c
 19989  004CCE                     	endif
 19990  004CCE                     	if	0	;tblptru may be non-zero
 19991  004CCE                     	endif
 19992  004CCE  0008               	tblrd		*
 19993  004CD0  50F5               	movf	tablat,w,c
 19994  004CD2  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
 19995  004CD4  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
 19996  004CD6  500A               	movf	??i2_atoi,w,c
 19997  004CD8  260C               	addwf	??i2_atoi+2,f,c
 19998  004CDA  500B               	movf	??i2_atoi+1,w,c
 19999  004CDC  220D               	addwfc	??i2_atoi+3,f,c
 20000  004CDE  500D               	movf	??i2_atoi+3,w,c
 20001  004CE0  E104               	bnz	i2u862_40
 20002  004CE2  0E05               	movlw	5
 20003  004CE4  5C0C               	subwf	??i2_atoi+2,w,c
 20004  004CE6  A0D8               	btfss	status,0,c
 20005  004CE8  D002               	goto	i2l6491
 20006  004CEA                     i2u862_40:
 20007  004CEA  0E00               	movlw	0
 20008  004CEC  6E14               	movwf	i2_atoi$2042,c
 20009  004CEE                     i2l6491:
 20010  004CEE  C014  F010         	movff	i2_atoi$2042,i2_atoi$2041
 20011  004CF2  6A11               	clrf	i2_atoi$2041+1,c
 20012  004CF4  5010               	movf	i2_atoi$2041,w,c
 20013  004CF6  1011               	iorwf	i2_atoi$2041+1,w,c
 20014  004CF8  B4D8               	btfsc	status,2,c
 20015  004CFA  D008               	goto	i2l6501
 20016  004CFC  D7D1               	goto	i2l6481
 20017  004CFE                     i2l6497:
 20018  004CFE  0E00               	movlw	0
 20019  004D00  6E0F               	movwf	i2atoi@neg+1,c
 20020  004D02  0E01               	movlw	1
 20021  004D04  6E0E               	movwf	i2atoi@neg,c
 20022  004D06                     i2l6499:
 20023  004D06  4A08               	infsnz	i2atoi@s,f,c
 20024  004D08  2A09               	incf	i2atoi@s+1,f,c
 20025  004D0A  D030               	goto	i2l6507
 20026  004D0C                     i2l6501:
 20027  004D0C  C008  FFF6         	movff	i2atoi@s,tblptrl
 20028  004D10  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 20029  004D14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20030  004D14  6AF8               	clrf	tblptru,c
 20031  004D16                     	endif
 20032  004D16                     	if	0	;tblptru may be non-zero
 20033  004D16                     	endif
 20034  004D16  0008               	tblrd		*
 20035  004D18  50F5               	movf	tablat,w,c
 20036  004D1A  6E0A               	movwf	??i2_atoi& (0+255),c
 20037  004D1C  6A0B               	clrf	(??i2_atoi+1)& (0+255),c
 20038                           
 20039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20040                           ; Switch size 1, requested type "simple"
 20041                           ; Number of cases is 1, Range of values is 0 to 0
 20042                           ; switch strategies available:
 20043                           ; Name         Instructions Cycles
 20044                           ; simple_byte            4     3 (average)
 20045                           ;	Chosen strategy is simple_byte
 20046  004D1E  500B               	movf	??i2_atoi+1,w,c
 20047  004D20  0A00               	xorlw	0	; case 0
 20048  004D22  A4D8               	btfss	status,2,c
 20049  004D24  D023               	goto	i2l6507
 20050                           
 20051                           ; Switch size 1, requested type "simple"
 20052                           ; Number of cases is 2, Range of values is 43 to 45
 20053                           ; switch strategies available:
 20054                           ; Name         Instructions Cycles
 20055                           ; simple_byte            7     4 (average)
 20056                           ;	Chosen strategy is simple_byte
 20057  004D26  500A               	movf	??i2_atoi,w,c
 20058  004D28  0A2B               	xorlw	43	; case 43
 20059  004D2A  B4D8               	btfsc	status,2,c
 20060  004D2C  D7EC               	goto	i2l6499
 20061  004D2E  0A06               	xorlw	6	; case 45
 20062  004D30  B4D8               	btfsc	status,2,c
 20063  004D32  D7E5               	goto	i2l6497
 20064  004D34  D01B               	goto	i2l6507
 20065  004D36                     i2l6503:
 20066  004D36  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
 20067  004D3A  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
 20068  004D3E  0E00               	movlw	0
 20069  004D40  6E04               	movwf	i2___wmul@multiplicand+1,c
 20070  004D42  0E0A               	movlw	10
 20071  004D44  6E03               	movwf	i2___wmul@multiplicand,c
 20072  004D46  ECBA  F039         	call	i2___wmul	;wreg free
 20073  004D4A  C008  FFF6         	movff	i2atoi@s,tblptrl
 20074  004D4E  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 20075  004D52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20076  004D52  6AF8               	clrf	tblptru,c
 20077  004D54                     	endif
 20078  004D54                     	if	0	;tblptru may be non-zero
 20079  004D54                     	endif
 20080  004D54  0008               	tblrd		*
 20081  004D56  50F5               	movf	tablat,w,c
 20082  004D58  5E01               	subwf	?i2___wmul,f,c
 20083  004D5A  0E00               	movlw	0
 20084  004D5C  5A02               	subwfb	?i2___wmul+1,f,c
 20085  004D5E  0E30               	movlw	48
 20086  004D60  2401               	addwf	?i2___wmul,w,c
 20087  004D62  6E15               	movwf	i2atoi@n,c
 20088  004D64  0E00               	movlw	0
 20089  004D66  2002               	addwfc	?i2___wmul+1,w,c
 20090  004D68  6E16               	movwf	i2atoi@n+1,c
 20091  004D6A  D7CD               	goto	i2l6499
 20092  004D6C                     i2l6507:
 20093  004D6C  0ED0               	movlw	208
 20094  004D6E  6E0A               	movwf	??i2_atoi& (0+255),c
 20095  004D70  0EFF               	movlw	255
 20096  004D72  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
 20097  004D74  C008  FFF6         	movff	i2atoi@s,tblptrl
 20098  004D78  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 20099  004D7C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20100  004D7C  6AF8               	clrf	tblptru,c
 20101  004D7E                     	endif
 20102  004D7E                     	if	0	;tblptru may be non-zero
 20103  004D7E                     	endif
 20104  004D7E  0008               	tblrd		*
 20105  004D80  50F5               	movf	tablat,w,c
 20106  004D82  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
 20107  004D84  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
 20108  004D86  500A               	movf	??i2_atoi,w,c
 20109  004D88  260C               	addwf	??i2_atoi+2,f,c
 20110  004D8A  500B               	movf	??i2_atoi+1,w,c
 20111  004D8C  220D               	addwfc	??i2_atoi+3,f,c
 20112  004D8E  500D               	movf	??i2_atoi+3,w,c
 20113  004D90  E106               	bnz	i2u864_40
 20114  004D92  0E0A               	movlw	10
 20115  004D94  5C0C               	subwf	??i2_atoi+2,w,c
 20116  004D96  B0D8               	btfsc	status,0,c
 20117  004D98  D002               	goto	i2u864_40
 20118  004D9A  0E01               	movlw	1
 20119  004D9C  D001               	goto	i2u865_40
 20120  004D9E                     i2u864_40:
 20121  004D9E  0E00               	movlw	0
 20122  004DA0                     i2u865_40:
 20123  004DA0  6E12               	movwf	i2_atoi$2043,c
 20124  004DA2  6A13               	clrf	i2_atoi$2043+1,c
 20125  004DA4  5012               	movf	i2_atoi$2043,w,c
 20126  004DA6  1013               	iorwf	i2_atoi$2043+1,w,c
 20127  004DA8  A4D8               	btfss	status,2,c
 20128  004DAA  D7C5               	goto	i2l6503
 20129  004DAC  500E               	movf	i2atoi@neg,w,c
 20130  004DAE  100F               	iorwf	i2atoi@neg+1,w,c
 20131  004DB0  A4D8               	btfss	status,2,c
 20132  004DB2  D00D               	goto	i2l1473
 20133  004DB4  C015  F00A         	movff	i2atoi@n,??i2_atoi
 20134  004DB8  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
 20135  004DBC  1E0A               	comf	??i2_atoi,f,c
 20136  004DBE  1E0B               	comf	??i2_atoi+1,f,c
 20137  004DC0  4A0A               	infsnz	??i2_atoi,f,c
 20138  004DC2  2A0B               	incf	??i2_atoi+1,f,c
 20139  004DC4  C00A  F008         	movff	??i2_atoi,?i2_atoi
 20140  004DC8  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
 20141  004DCC  0012               	return	
 20142  004DCE                     i2l1473:
 20143  004DCE  C015  F008         	movff	i2atoi@n,?i2_atoi
 20144  004DD2  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
 20145  004DD6  0012               	return		;funcret
 20146  004DD8                     __end_ofi2_atoi:
 20147                           	opt callstack 0
 20148                           
 20149 ;; *************** function i2_isspace *****************
 20150 ;; Defined at:
 20151 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 20152 ;; Parameters:    Size  Location     Type
 20153 ;;  c               2    0[COMRAM] int 
 20154 ;; Auto vars:     Size  Location     Type
 20155 ;;		None
 20156 ;; Return value:  Size  Location     Type
 20157 ;;                  2    0[COMRAM] int 
 20158 ;; Registers used:
 20159 ;;		wreg, status,2, status,0
 20160 ;; Tracked objects:
 20161 ;;		On entry : 0/0
 20162 ;;		On exit  : 0/0
 20163 ;;		Unchanged: 0/0
 20164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20167 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20168 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20169 ;;Total ram usage:        7 bytes
 20170 ;; Hardware stack levels used:    1
 20171 ;; This function calls:
 20172 ;;		Nothing
 20173 ;; This function is called by:
 20174 ;;		i2_atoi
 20175 ;; This function uses a non-reentrant model
 20176 ;;
 20177                           
 20178                           	psect	text102
 20179  006F72                     __ptext102:
 20180                           	opt callstack 0
 20181  006F72                     i2_isspace:
 20182                           	opt callstack 10
 20183                           
 20184                           ;incstack = 0
 20185  006F72  0E01               	movlw	1
 20186  006F74  6E07               	movwf	i2_isspace$2072,c
 20187  006F76  0E20               	movlw	32
 20188  006F78  1801               	xorwf	i2isspace@c,w,c
 20189  006F7A  1002               	iorwf	i2isspace@c+1,w,c
 20190  006F7C  B4D8               	btfsc	status,2,c
 20191  006F7E  D014               	goto	i2l6087
 20192  006F80  0EF7               	movlw	247
 20193  006F82  6E03               	movwf	??i2_isspace& (0+255),c
 20194  006F84  0EFF               	movlw	255
 20195  006F86  6E04               	movwf	(??i2_isspace+1)& (0+255),c
 20196  006F88  C001  F005         	movff	i2isspace@c,??i2_isspace+2
 20197  006F8C  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
 20198  006F90  5003               	movf	??i2_isspace,w,c
 20199  006F92  2605               	addwf	??i2_isspace+2,f,c
 20200  006F94  5004               	movf	??i2_isspace+1,w,c
 20201  006F96  2206               	addwfc	??i2_isspace+3,f,c
 20202  006F98  5006               	movf	??i2_isspace+3,w,c
 20203  006F9A  E104               	bnz	i2u784_40
 20204  006F9C  0E05               	movlw	5
 20205  006F9E  5C05               	subwf	??i2_isspace+2,w,c
 20206  006FA0  A0D8               	btfss	status,0,c
 20207  006FA2  D002               	goto	i2l6087
 20208  006FA4                     i2u784_40:
 20209  006FA4  0E00               	movlw	0
 20210  006FA6  6E07               	movwf	i2_isspace$2072,c
 20211  006FA8                     i2l6087:
 20212  006FA8  C007  F001         	movff	i2_isspace$2072,?i2_isspace
 20213  006FAC  6A02               	clrf	?i2_isspace+1,c
 20214  006FAE  0012               	return		;funcret
 20215  006FB0                     __end_ofi2_isspace:
 20216                           	opt callstack 0
 20217                           
 20218 ;; *************** function i2_isdigit *****************
 20219 ;; Defined at:
 20220 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 20221 ;; Parameters:    Size  Location     Type
 20222 ;;  c               2    0[COMRAM] int 
 20223 ;; Auto vars:     Size  Location     Type
 20224 ;;		None
 20225 ;; Return value:  Size  Location     Type
 20226 ;;                  2    0[COMRAM] int 
 20227 ;; Registers used:
 20228 ;;		wreg, status,2, status,0
 20229 ;; Tracked objects:
 20230 ;;		On entry : 0/0
 20231 ;;		On exit  : 0/0
 20232 ;;		Unchanged: 0/0
 20233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20238 ;;Total ram usage:        6 bytes
 20239 ;; Hardware stack levels used:    1
 20240 ;; This function calls:
 20241 ;;		Nothing
 20242 ;; This function is called by:
 20243 ;;		i2_vfpfcnvrt
 20244 ;;		i2_atoi
 20245 ;; This function uses a non-reentrant model
 20246 ;;
 20247                           
 20248                           	psect	text103
 20249  0071F0                     __ptext103:
 20250                           	opt callstack 0
 20251  0071F0                     i2_isdigit:
 20252                           	opt callstack 11
 20253                           
 20254                           ;incstack = 0
 20255  0071F0  0ED0               	movlw	208
 20256  0071F2  6E03               	movwf	??i2_isdigit& (0+255),c
 20257  0071F4  0EFF               	movlw	255
 20258  0071F6  6E04               	movwf	(??i2_isdigit+1)& (0+255),c
 20259  0071F8  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
 20260  0071FC  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
 20261  007200  5003               	movf	??i2_isdigit,w,c
 20262  007202  2605               	addwf	??i2_isdigit+2,f,c
 20263  007204  5004               	movf	??i2_isdigit+1,w,c
 20264  007206  2206               	addwfc	??i2_isdigit+3,f,c
 20265  007208  5006               	movf	??i2_isdigit+3,w,c
 20266  00720A  E106               	bnz	i2u781_40
 20267  00720C  0E0A               	movlw	10
 20268  00720E  5C05               	subwf	??i2_isdigit+2,w,c
 20269  007210  B0D8               	btfsc	status,0,c
 20270  007212  D002               	goto	i2u781_40
 20271  007214  0E01               	movlw	1
 20272  007216  D001               	goto	i2u782_40
 20273  007218                     i2u781_40:
 20274  007218  0E00               	movlw	0
 20275  00721A                     i2u782_40:
 20276  00721A  6E01               	movwf	?i2_isdigit,c
 20277  00721C  6A02               	clrf	?i2_isdigit+1,c
 20278  00721E  0012               	return		;funcret
 20279  007220                     __end_ofi2_isdigit:
 20280                           	opt callstack 0
 20281                           
 20282 ;; *************** function i2___wmul *****************
 20283 ;; Defined at:
 20284 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 20285 ;; Parameters:    Size  Location     Type
 20286 ;;  multiplier      2    0[COMRAM] unsigned int 
 20287 ;;  multiplicand    2    2[COMRAM] unsigned int 
 20288 ;; Auto vars:     Size  Location     Type
 20289 ;;  __wmul          2    4[COMRAM] unsigned int 
 20290 ;; Return value:  Size  Location     Type
 20291 ;;                  2    0[COMRAM] unsigned int 
 20292 ;; Registers used:
 20293 ;;		wreg, status,2, status,0, prodl, prodh
 20294 ;; Tracked objects:
 20295 ;;		On entry : 0/0
 20296 ;;		On exit  : 0/0
 20297 ;;		Unchanged: 0/0
 20298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20302 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20303 ;;Total ram usage:        6 bytes
 20304 ;; Hardware stack levels used:    1
 20305 ;; This function calls:
 20306 ;;		Nothing
 20307 ;; This function is called by:
 20308 ;;		i2_atoi
 20309 ;; This function uses a non-reentrant model
 20310 ;;
 20311                           
 20312                           	psect	text104
 20313  007374                     __ptext104:
 20314                           	opt callstack 0
 20315  007374                     i2___wmul:
 20316                           	opt callstack 10
 20317                           
 20318                           ;incstack = 0
 20319  007374  5001               	movf	i2___wmul@multiplier,w,c
 20320  007376  0203               	mulwf	i2___wmul@multiplicand,c
 20321  007378  CFF3 F005          	movff	prodl,i2___wmul@product
 20322  00737C  CFF4 F006          	movff	prodh,i2___wmul@product+1
 20323  007380  5001               	movf	i2___wmul@multiplier,w,c
 20324  007382  0204               	mulwf	i2___wmul@multiplicand+1,c
 20325  007384  50F3               	movf	prodl,w,c
 20326  007386  2606               	addwf	i2___wmul@product+1,f,c
 20327  007388  5002               	movf	i2___wmul@multiplier+1,w,c
 20328  00738A  0203               	mulwf	i2___wmul@multiplicand,c
 20329  00738C  50F3               	movf	prodl,w,c
 20330  00738E  2606               	addwf	i2___wmul@product+1,f,c
 20331  007390  C005  F001         	movff	i2___wmul@product,?i2___wmul
 20332  007394  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 20333  007398  0012               	return		;funcret
 20334  00739A                     __end_ofi2___wmul:
 20335                           	opt callstack 0
 20336                           
 20337 ;; *************** function i2_I2cReadSerial *****************
 20338 ;; Defined at:
 20339 ;;		line 207 in file "main.c"
 20340 ;; Parameters:    Size  Location     Type
 20341 ;;  address         1    wreg     unsigned char 
 20342 ;;  readData        2    0[COMRAM] PTR unsigned char 
 20343 ;;		 -> i2ReadHumidity@result(2), i2ReadTemperature@result(2), VerifyLogging@output(4), LogData@location(2), 
 20344 ;;		 -> ReadHumidity@result(2), ReadTemperature@result(2), Timer4Interrupt@output(4), 
 20345 ;;  length          1    2[COMRAM] unsigned char 
 20346 ;; Auto vars:     Size  Location     Type
 20347 ;;  address         1    7[COMRAM] unsigned char 
 20348 ;;  I2cReadSeria    2    9[COMRAM] unsigned short 
 20349 ;;  I2cReadSeria    1    8[COMRAM] unsigned char 
 20350 ;; Return value:  Size  Location     Type
 20351 ;;                  1    wreg      void 
 20352 ;; Registers used:
 20353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20354 ;; Tracked objects:
 20355 ;;		On entry : 0/0
 20356 ;;		On exit  : 0/0
 20357 ;;		Unchanged: 0/0
 20358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20359 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20360 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20361 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20362 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20363 ;;Total ram usage:       11 bytes
 20364 ;; Hardware stack levels used:    1
 20365 ;; This function calls:
 20366 ;;		Nothing
 20367 ;; This function is called by:
 20368 ;;		_Timer4Interrupt
 20369 ;;		_LogData
 20370 ;;		_VerifyLogging
 20371 ;;		i2_ReadTemperature
 20372 ;;		i2_ReadHumidity
 20373 ;; This function uses a non-reentrant model
 20374 ;;
 20375                           
 20376                           	psect	text105
 20377  006580                     __ptext105:
 20378                           	opt callstack 0
 20379  006580                     i2_I2cReadSerial:
 20380                           	opt callstack 14
 20381                           
 20382                           ;incstack = 0
 20383                           ;i2I2cReadSerial@address stored from wreg
 20384  006580  6E08               	movwf	i2I2cReadSerial@address,c
 20385  006582                     
 20386                           ;main.c: 209:     while (SSP1STAT & 0x04 || SSP1CON2 & 0x1F);
 20387  006582  B4C7               	btfsc	4039,2,c	;volatile
 20388  006584  D7FE               	goto	i2l8037
 20389  006586  CFC5 F004          	movff	4037,??i2_I2cReadSerial	;volatile
 20390  00658A  0E1F               	movlw	31
 20391  00658C  1604               	andwf	??i2_I2cReadSerial,f,c
 20392  00658E  A4D8               	btfss	status,2,c
 20393  006590  D7F8               	goto	i2l8037
 20394                           
 20395                           ;main.c: 211:     SSP1CON2bits.SEN = 1;
 20396  006592  80C5               	bsf	4037,0,c	;volatile
 20397  006594                     i2l469:
 20398  006594  B0C5               	btfsc	4037,0,c	;volatile
 20399  006596  D7FE               	goto	i2l469
 20400                           
 20401                           ;main.c: 213:     uint8_t target = (address << 1) + 1;
 20402  006598  5008               	movf	i2I2cReadSerial@address,w,c
 20403  00659A  0D02               	mullw	2
 20404  00659C  28F3               	incf	prodl,w,c
 20405  00659E  6E09               	movwf	i2I2cReadSerial@target,c
 20406                           
 20407                           ;main.c: 214:     SSP1BUF = target;
 20408  0065A0  C009  FFC9         	movff	i2I2cReadSerial@target,4041	;volatile
 20409  0065A4                     i2l472:
 20410  0065A4  B4C7               	btfsc	4039,2,c	;volatile
 20411  0065A6  D7FE               	goto	i2l472
 20412                           
 20413                           ;main.c: 216:     if (SSP1CON2bits.ACKSTAT == 0)
 20414  0065A8  BCC5               	btfsc	4037,6,c	;volatile
 20415  0065AA  0012               	return	
 20416                           
 20417                           ;main.c: 217:     {;main.c: 219:         for (uint16_t i = 0; i < length; i++)
 20418  0065AC  0E00               	movlw	0
 20419  0065AE  6E0B               	movwf	i2I2cReadSerial@i+1,c
 20420  0065B0  0E00               	movlw	0
 20421  0065B2  6E0A               	movwf	i2I2cReadSerial@i,c
 20422  0065B4  D025               	goto	i2l8055
 20423  0065B6                     i2l477:
 20424                           
 20425                           ;main.c: 220:         {;main.c: 222:             SSP1CON2bits.RCEN = 1;
 20426  0065B6  86C5               	bsf	4037,3,c	;volatile
 20427  0065B8                     i2l478:
 20428  0065B8  B6C5               	btfsc	4037,3,c	;volatile
 20429  0065BA  D7FE               	goto	i2l478
 20430                           
 20431                           ;main.c: 225:             readData[i] = SSP1BUF;
 20432  0065BC  500A               	movf	i2I2cReadSerial@i,w,c
 20433  0065BE  2401               	addwf	i2I2cReadSerial@readData,w,c
 20434  0065C0  6ED9               	movwf	fsr2l,c
 20435  0065C2  500B               	movf	i2I2cReadSerial@i+1,w,c
 20436  0065C4  2002               	addwfc	i2I2cReadSerial@readData+1,w,c
 20437  0065C6  6EDA               	movwf	fsr2h,c
 20438  0065C8  CFC9 FFDF          	movff	4041,indf2	;volatile
 20439                           
 20440                           ;main.c: 227:             if (i == length - 1)
 20441  0065CC  0EFF               	movlw	255
 20442  0065CE  6E04               	movwf	??i2_I2cReadSerial& (0+255),c
 20443  0065D0  0EFF               	movlw	255
 20444  0065D2  6E05               	movwf	(??i2_I2cReadSerial+1)& (0+255),c
 20445  0065D4  5003               	movf	i2I2cReadSerial@length,w,c
 20446  0065D6  6E06               	movwf	(??i2_I2cReadSerial+2)& (0+255),c
 20447  0065D8  6A07               	clrf	(??i2_I2cReadSerial+3)& (0+255),c
 20448  0065DA  5004               	movf	??i2_I2cReadSerial,w,c
 20449  0065DC  2606               	addwf	??i2_I2cReadSerial+2,f,c
 20450  0065DE  5005               	movf	??i2_I2cReadSerial+1,w,c
 20451  0065E0  2207               	addwfc	??i2_I2cReadSerial+3,f,c
 20452  0065E2  500A               	movf	i2I2cReadSerial@i,w,c
 20453  0065E4  1806               	xorwf	??i2_I2cReadSerial+2,w,c
 20454  0065E6  E106               	bnz	i2l481
 20455  0065E8  500B               	movf	i2I2cReadSerial@i+1,w,c
 20456  0065EA  1807               	xorwf	??i2_I2cReadSerial+3,w,c
 20457  0065EC  A4D8               	btfss	status,2,c
 20458  0065EE  D002               	goto	i2l481
 20459                           
 20460                           ;main.c: 228:             {;main.c: 229:                 SSP1CON2bits.ACKDT = 1;
 20461  0065F0  8AC5               	bsf	4037,5,c	;volatile
 20462                           
 20463                           ;main.c: 230:             } else {
 20464  0065F2  D001               	goto	i2l482
 20465  0065F4                     i2l481:
 20466                           
 20467                           ;main.c: 231:                 SSP1CON2bits.ACKDT = 0;
 20468  0065F4  9AC5               	bcf	4037,5,c	;volatile
 20469  0065F6                     i2l482:
 20470                           
 20471                           ;main.c: 234:             SSP1CON2bits.ACKEN = 1;
 20472  0065F6  88C5               	bsf	4037,4,c	;volatile
 20473  0065F8                     i2l483:
 20474  0065F8  B8C5               	btfsc	4037,4,c	;volatile
 20475  0065FA  D7FE               	goto	i2l483
 20476                           
 20477                           ;main.c: 236:         }
 20478  0065FC  4A0A               	infsnz	i2I2cReadSerial@i,f,c
 20479  0065FE  2A0B               	incf	i2I2cReadSerial@i+1,f,c
 20480  006600                     i2l8055:
 20481  006600  5003               	movf	i2I2cReadSerial@length,w,c
 20482  006602  6E04               	movwf	??i2_I2cReadSerial& (0+255),c
 20483  006604  6A05               	clrf	(??i2_I2cReadSerial+1)& (0+255),c
 20484  006606  5004               	movf	??i2_I2cReadSerial,w,c
 20485  006608  5C0A               	subwf	i2I2cReadSerial@i,w,c
 20486  00660A  5005               	movf	??i2_I2cReadSerial+1,w,c
 20487  00660C  580B               	subwfb	i2I2cReadSerial@i+1,w,c
 20488  00660E  A0D8               	btfss	status,0,c
 20489  006610  D7D2               	goto	i2l477
 20490                           
 20491                           ;main.c: 238:         SSP1CON2bits.PEN = 1;
 20492  006612  84C5               	bsf	4037,2,c	;volatile
 20493  006614                     i2l487:
 20494  006614  A4C5               	btfss	4037,2,c	;volatile
 20495  006616  0012               	return	
 20496  006618  D7FD               	goto	i2l487
 20497  00661A                     __end_ofi2_I2cReadSerial:
 20498                           	opt callstack 0
 20499                           
 20500 ;; *************** function _ConvertFloatToByteArray *****************
 20501 ;; Defined at:
 20502 ;;		line 415 in file "main.c"
 20503 ;; Parameters:    Size  Location     Type
 20504 ;;  input           4   61[COMRAM] float 
 20505 ;;  output          2   65[COMRAM] PTR unsigned char 
 20506 ;;		 -> LogData@humidityArray(2), LogData@temperatureArray(2), 
 20507 ;; Auto vars:     Size  Location     Type
 20508 ;;  decimals        4   68[COMRAM] float 
 20509 ;; Return value:  Size  Location     Type
 20510 ;;                  1    wreg      void 
 20511 ;; Registers used:
 20512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20513 ;; Tracked objects:
 20514 ;;		On entry : 0/0
 20515 ;;		On exit  : 0/0
 20516 ;;		Unchanged: 0/0
 20517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20518 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20519 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20520 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20521 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20522 ;;Total ram usage:       11 bytes
 20523 ;; Hardware stack levels used:    1
 20524 ;; Hardware stack levels required when called:    2
 20525 ;; This function calls:
 20526 ;;		i2___flmul
 20527 ;;		i2___flsub
 20528 ;;		i2___fltol
 20529 ;;		i2___xxtofl
 20530 ;; This function is called by:
 20531 ;;		_LogData
 20532 ;; This function uses a non-reentrant model
 20533 ;;
 20534                           
 20535                           	psect	text106
 20536  005E4E                     __ptext106:
 20537                           	opt callstack 0
 20538  005E4E                     _ConvertFloatToByteArray:
 20539                           	opt callstack 11
 20540                           
 20541                           ;main.c: 416:     output[0] = (uint8_t) input;
 20542                           
 20543                           ;incstack = 0
 20544  005E4E  C03E  F034         	movff	ConvertFloatToByteArray@input,i2___fltol@f1
 20545  005E52  C03F  F035         	movff	ConvertFloatToByteArray@input+1,i2___fltol@f1+1
 20546  005E56  C040  F036         	movff	ConvertFloatToByteArray@input+2,i2___fltol@f1+2
 20547  005E5A  C041  F037         	movff	ConvertFloatToByteArray@input+3,i2___fltol@f1+3
 20548  005E5E  EC84  F02F         	call	i2___fltol	;wreg free
 20549  005E62  5034               	movf	?i2___fltol,w,c
 20550  005E64  C042  FFD9         	movff	ConvertFloatToByteArray@output,fsr2l
 20551  005E68  C043  FFDA         	movff	ConvertFloatToByteArray@output+1,fsr2h
 20552  005E6C  6EDF               	movwf	indf2,c
 20553                           
 20554                           ;main.c: 417:     float decimals = input - output[0];
 20555  005E6E  C03E  F034         	movff	ConvertFloatToByteArray@input,i2___flsub@b
 20556  005E72  C03F  F035         	movff	ConvertFloatToByteArray@input+1,i2___flsub@b+1
 20557  005E76  C040  F036         	movff	ConvertFloatToByteArray@input+2,i2___flsub@b+2
 20558  005E7A  C041  F037         	movff	ConvertFloatToByteArray@input+3,i2___flsub@b+3
 20559  005E7E  C042  FFD9         	movff	ConvertFloatToByteArray@output,fsr2l
 20560  005E82  C043  FFDA         	movff	ConvertFloatToByteArray@output+1,fsr2h
 20561  005E86  50DF               	movf	indf2,w,c
 20562  005E88  6E44               	movwf	??_ConvertFloatToByteArray& (0+255),c
 20563  005E8A  5044               	movf	??_ConvertFloatToByteArray,w,c
 20564  005E8C  6E0D               	movwf	i2___xxtofl@val,c
 20565  005E8E  6A0E               	clrf	i2___xxtofl@val+1,c
 20566  005E90  6A0F               	clrf	i2___xxtofl@val+2,c
 20567  005E92  6A10               	clrf	i2___xxtofl@val+3,c
 20568  005E94  0E01               	movlw	1
 20569  005E96  EC32  F028         	call	i2___xxtofl
 20570  005E9A  C00D  F038         	movff	?i2___xxtofl,i2___flsub@a
 20571  005E9E  C00E  F039         	movff	?i2___xxtofl+1,i2___flsub@a+1
 20572  005EA2  C00F  F03A         	movff	?i2___xxtofl+2,i2___flsub@a+2
 20573  005EA6  C010  F03B         	movff	?i2___xxtofl+3,i2___flsub@a+3
 20574  005EAA  EC76  F037         	call	i2___flsub	;wreg free
 20575  005EAE  C034  F045         	movff	?i2___flsub,ConvertFloatToByteArray@decimals
 20576  005EB2  C035  F046         	movff	?i2___flsub+1,ConvertFloatToByteArray@decimals+1
 20577  005EB6  C036  F047         	movff	?i2___flsub+2,ConvertFloatToByteArray@decimals+2
 20578  005EBA  C037  F048         	movff	?i2___flsub+3,ConvertFloatToByteArray@decimals+3
 20579                           
 20580                           ;main.c: 419:     output[1] = (uint8_t) (decimals * 100);
 20581  005EBE  EE20 F001          	lfsr	2,1
 20582  005EC2  5042               	movf	ConvertFloatToByteArray@output,w,c
 20583  005EC4  26D9               	addwf	fsr2l,f,c
 20584  005EC6  5043               	movf	ConvertFloatToByteArray@output+1,w,c
 20585  005EC8  22DA               	addwfc	fsr2h,f,c
 20586  005ECA  0E00               	movlw	0
 20587  005ECC  6E1F               	movwf	i2___flmul@a,c
 20588  005ECE  0E00               	movlw	0
 20589  005ED0  6E20               	movwf	i2___flmul@a+1,c
 20590  005ED2  0EC8               	movlw	200
 20591  005ED4  6E21               	movwf	i2___flmul@a+2,c
 20592  005ED6  0E42               	movlw	66
 20593  005ED8  6E22               	movwf	i2___flmul@a+3,c
 20594  005EDA  C045  F01B         	movff	ConvertFloatToByteArray@decimals,i2___flmul@b
 20595  005EDE  C046  F01C         	movff	ConvertFloatToByteArray@decimals+1,i2___flmul@b+1
 20596  005EE2  C047  F01D         	movff	ConvertFloatToByteArray@decimals+2,i2___flmul@b+2
 20597  005EE6  C048  F01E         	movff	ConvertFloatToByteArray@decimals+3,i2___flmul@b+3
 20598  005EEA  EC30  F018         	call	i2___flmul	;wreg free
 20599  005EEE  C01B  F034         	movff	?i2___flmul,i2___fltol@f1
 20600  005EF2  C01C  F035         	movff	?i2___flmul+1,i2___fltol@f1+1
 20601  005EF6  C01D  F036         	movff	?i2___flmul+2,i2___fltol@f1+2
 20602  005EFA  C01E  F037         	movff	?i2___flmul+3,i2___fltol@f1+3
 20603  005EFE  EC84  F02F         	call	i2___fltol	;wreg free
 20604  005F02  5034               	movf	?i2___fltol,w,c
 20605  005F04  6EDF               	movwf	indf2,c
 20606  005F06  0012               	return		;funcret
 20607  005F08                     __end_of_ConvertFloatToByteArray:
 20608                           	opt callstack 0
 20609                           
 20610 ;; *************** function i2___xxtofl *****************
 20611 ;; Defined at:
 20612 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 20613 ;; Parameters:    Size  Location     Type
 20614 ;;  sign            1    wreg     unsigned char 
 20615 ;;  val             4   12[COMRAM] long 
 20616 ;; Auto vars:     Size  Location     Type
 20617 ;;  sign            1   20[COMRAM] unsigned char 
 20618 ;;  __xxtofl        4   22[COMRAM] unsigned long 
 20619 ;;  __xxtofl        1   21[COMRAM] unsigned char 
 20620 ;; Return value:  Size  Location     Type
 20621 ;;                  4   12[COMRAM] unsigned char 
 20622 ;; Registers used:
 20623 ;;		wreg, status,2, status,0
 20624 ;; Tracked objects:
 20625 ;;		On entry : 0/0
 20626 ;;		On exit  : 0/0
 20627 ;;		Unchanged: 0/0
 20628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20630 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20631 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20632 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20633 ;;Total ram usage:       14 bytes
 20634 ;; Hardware stack levels used:    1
 20635 ;; This function calls:
 20636 ;;		Nothing
 20637 ;; This function is called by:
 20638 ;;		_ConvertFloatToByteArray
 20639 ;;		_ConvertByteArrayToFloat
 20640 ;;		i2_ReadTemperature
 20641 ;;		i2_ReadHumidity
 20642 ;; This function uses a non-reentrant model
 20643 ;;
 20644                           
 20645                           	psect	text107
 20646  005064                     __ptext107:
 20647                           	opt callstack 0
 20648  005064                     i2___xxtofl:
 20649                           	opt callstack 13
 20650                           
 20651                           ;incstack = 0
 20652                           ;i2___xxtofl@sign stored from wreg
 20653  005064  6E15               	movwf	i2___xxtofl@sign,c
 20654  005066  5015               	movf	i2___xxtofl@sign,w,c
 20655  005068  A4D8               	btfss	status,2,c
 20656  00506A  AE10               	btfss	i2___xxtofl@val+3,7,c
 20657  00506C  D01A               	goto	i2l1411
 20658  00506E  C00D  F011         	movff	i2___xxtofl@val,??i2___xxtofl
 20659  005072  C00E  F012         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 20660  005076  C00F  F013         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 20661  00507A  C010  F014         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 20662  00507E  1E11               	comf	??i2___xxtofl,f,c
 20663  005080  1E12               	comf	??i2___xxtofl+1,f,c
 20664  005082  1E13               	comf	??i2___xxtofl+2,f,c
 20665  005084  1E14               	comf	??i2___xxtofl+3,f,c
 20666  005086  2A11               	incf	??i2___xxtofl,f,c
 20667  005088  0E00               	movlw	0
 20668  00508A  2212               	addwfc	??i2___xxtofl+1,f,c
 20669  00508C  2213               	addwfc	??i2___xxtofl+2,f,c
 20670  00508E  2214               	addwfc	??i2___xxtofl+3,f,c
 20671  005090  C011  F017         	movff	??i2___xxtofl,i2___xxtofl@arg
 20672  005094  C012  F018         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 20673  005098  C013  F019         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 20674  00509C  C014  F01A         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 20675  0050A0  D008               	goto	i2l8093
 20676  0050A2                     i2l1411:
 20677  0050A2  C00D  F017         	movff	i2___xxtofl@val,i2___xxtofl@arg
 20678  0050A6  C00E  F018         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 20679  0050AA  C00F  F019         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 20680  0050AE  C010  F01A         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 20681  0050B2                     i2l8093:
 20682  0050B2  500D               	movf	i2___xxtofl@val,w,c
 20683  0050B4  100E               	iorwf	i2___xxtofl@val+1,w,c
 20684  0050B6  100F               	iorwf	i2___xxtofl@val+2,w,c
 20685  0050B8  1010               	iorwf	i2___xxtofl@val+3,w,c
 20686  0050BA  A4D8               	btfss	status,2,c
 20687  0050BC  D009               	goto	i2l8099
 20688  0050BE  0E00               	movlw	0
 20689  0050C0  6E0D               	movwf	?i2___xxtofl,c
 20690  0050C2  0E00               	movlw	0
 20691  0050C4  6E0E               	movwf	?i2___xxtofl+1,c
 20692  0050C6  0E00               	movlw	0
 20693  0050C8  6E0F               	movwf	?i2___xxtofl+2,c
 20694  0050CA  0E00               	movlw	0
 20695  0050CC  6E10               	movwf	?i2___xxtofl+3,c
 20696  0050CE  0012               	return	
 20697  0050D0                     i2l8099:
 20698  0050D0  0E96               	movlw	150
 20699  0050D2  6E16               	movwf	i2___xxtofl@exp,c
 20700  0050D4  D006               	goto	i2l8103
 20701  0050D6                     i2l8101:
 20702  0050D6  2A16               	incf	i2___xxtofl@exp,f,c
 20703  0050D8  90D8               	bcf	status,0,c
 20704  0050DA  321A               	rrcf	i2___xxtofl@arg+3,f,c
 20705  0050DC  3219               	rrcf	i2___xxtofl@arg+2,f,c
 20706  0050DE  3218               	rrcf	i2___xxtofl@arg+1,f,c
 20707  0050E0  3217               	rrcf	i2___xxtofl@arg,f,c
 20708  0050E2                     i2l8103:
 20709  0050E2  0E00               	movlw	0
 20710  0050E4  1417               	andwf	i2___xxtofl@arg,w,c
 20711  0050E6  6E11               	movwf	??i2___xxtofl& (0+255),c
 20712  0050E8  0E00               	movlw	0
 20713  0050EA  1418               	andwf	i2___xxtofl@arg+1,w,c
 20714  0050EC  6E12               	movwf	(??i2___xxtofl+1)& (0+255),c
 20715  0050EE  0E00               	movlw	0
 20716  0050F0  1419               	andwf	i2___xxtofl@arg+2,w,c
 20717  0050F2  6E13               	movwf	(??i2___xxtofl+2)& (0+255),c
 20718  0050F4  0EFE               	movlw	254
 20719  0050F6  141A               	andwf	i2___xxtofl@arg+3,w,c
 20720  0050F8  6E14               	movwf	(??i2___xxtofl+3)& (0+255),c
 20721  0050FA  5011               	movf	??i2___xxtofl,w,c
 20722  0050FC  1012               	iorwf	??i2___xxtofl+1,w,c
 20723  0050FE  1013               	iorwf	??i2___xxtofl+2,w,c
 20724  005100  1014               	iorwf	??i2___xxtofl+3,w,c
 20725  005102  B4D8               	btfsc	status,2,c
 20726  005104  D00D               	goto	i2l1418
 20727  005106  D7E7               	goto	i2l8101
 20728  005108                     i2l8105:
 20729  005108  2A16               	incf	i2___xxtofl@exp,f,c
 20730  00510A  0E01               	movlw	1
 20731  00510C  2617               	addwf	i2___xxtofl@arg,f,c
 20732  00510E  0E00               	movlw	0
 20733  005110  2218               	addwfc	i2___xxtofl@arg+1,f,c
 20734  005112  2219               	addwfc	i2___xxtofl@arg+2,f,c
 20735  005114  221A               	addwfc	i2___xxtofl@arg+3,f,c
 20736  005116  90D8               	bcf	status,0,c
 20737  005118  321A               	rrcf	i2___xxtofl@arg+3,f,c
 20738  00511A  3219               	rrcf	i2___xxtofl@arg+2,f,c
 20739  00511C  3218               	rrcf	i2___xxtofl@arg+1,f,c
 20740  00511E  3217               	rrcf	i2___xxtofl@arg,f,c
 20741  005120                     i2l1418:
 20742  005120  0E00               	movlw	0
 20743  005122  1417               	andwf	i2___xxtofl@arg,w,c
 20744  005124  6E11               	movwf	??i2___xxtofl& (0+255),c
 20745  005126  0E00               	movlw	0
 20746  005128  1418               	andwf	i2___xxtofl@arg+1,w,c
 20747  00512A  6E12               	movwf	(??i2___xxtofl+1)& (0+255),c
 20748  00512C  0E00               	movlw	0
 20749  00512E  1419               	andwf	i2___xxtofl@arg+2,w,c
 20750  005130  6E13               	movwf	(??i2___xxtofl+2)& (0+255),c
 20751  005132  0EFF               	movlw	255
 20752  005134  141A               	andwf	i2___xxtofl@arg+3,w,c
 20753  005136  6E14               	movwf	(??i2___xxtofl+3)& (0+255),c
 20754  005138  5011               	movf	??i2___xxtofl,w,c
 20755  00513A  1012               	iorwf	??i2___xxtofl+1,w,c
 20756  00513C  1013               	iorwf	??i2___xxtofl+2,w,c
 20757  00513E  1014               	iorwf	??i2___xxtofl+3,w,c
 20758  005140  B4D8               	btfsc	status,2,c
 20759  005142  D007               	goto	i2l8113
 20760  005144  D7E1               	goto	i2l8105
 20761  005146                     i2l8111:
 20762  005146  0616               	decf	i2___xxtofl@exp,f,c
 20763  005148  90D8               	bcf	status,0,c
 20764  00514A  3617               	rlcf	i2___xxtofl@arg,f,c
 20765  00514C  3618               	rlcf	i2___xxtofl@arg+1,f,c
 20766  00514E  3619               	rlcf	i2___xxtofl@arg+2,f,c
 20767  005150  361A               	rlcf	i2___xxtofl@arg+3,f,c
 20768  005152                     i2l8113:
 20769  005152  BE19               	btfsc	i2___xxtofl@arg+2,7,c
 20770  005154  D003               	goto	i2u1170_40
 20771  005156  0E02               	movlw	2
 20772  005158  6016               	cpfslt	i2___xxtofl@exp,c
 20773  00515A  D7F5               	goto	i2l8111
 20774  00515C                     i2u1170_40:
 20775  00515C  A016               	btfss	i2___xxtofl@exp,0,c
 20776  00515E  9E19               	bcf	i2___xxtofl@arg+2,7,c
 20777  005160  90D8               	bcf	status,0,c
 20778  005162  3216               	rrcf	i2___xxtofl@exp,f,c
 20779  005164  C016  F011         	movff	i2___xxtofl@exp,??i2___xxtofl
 20780  005168  6A12               	clrf	(??i2___xxtofl+1)& (0+255),c
 20781  00516A  6A13               	clrf	(??i2___xxtofl+2)& (0+255),c
 20782  00516C  6A14               	clrf	(??i2___xxtofl+3)& (0+255),c
 20783  00516E  C011  F014         	movff	??i2___xxtofl,??i2___xxtofl+3
 20784  005172  6A13               	clrf	??i2___xxtofl+2,c
 20785  005174  6A12               	clrf	??i2___xxtofl+1,c
 20786  005176  6A11               	clrf	??i2___xxtofl,c
 20787  005178  5011               	movf	??i2___xxtofl,w,c
 20788  00517A  1217               	iorwf	i2___xxtofl@arg,f,c
 20789  00517C  5012               	movf	??i2___xxtofl+1,w,c
 20790  00517E  1218               	iorwf	i2___xxtofl@arg+1,f,c
 20791  005180  5013               	movf	??i2___xxtofl+2,w,c
 20792  005182  1219               	iorwf	i2___xxtofl@arg+2,f,c
 20793  005184  5014               	movf	??i2___xxtofl+3,w,c
 20794  005186  121A               	iorwf	i2___xxtofl@arg+3,f,c
 20795  005188  5015               	movf	i2___xxtofl@sign,w,c
 20796  00518A  A4D8               	btfss	status,2,c
 20797  00518C  AE10               	btfss	i2___xxtofl@val+3,7,c
 20798  00518E  D001               	goto	i2l8129
 20799  005190  8E1A               	bsf	i2___xxtofl@arg+3,7,c
 20800  005192                     i2l8129:
 20801  005192  C017  F00D         	movff	i2___xxtofl@arg,?i2___xxtofl
 20802  005196  C018  F00E         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 20803  00519A  C019  F00F         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 20804  00519E  C01A  F010         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 20805  0051A2  0012               	return		;funcret
 20806  0051A4                     __end_ofi2___xxtofl:
 20807                           	opt callstack 0
 20808                           
 20809 ;; *************** function i2___fltol *****************
 20810 ;; Defined at:
 20811 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 20812 ;; Parameters:    Size  Location     Type
 20813 ;;  f1              4   51[COMRAM] unsigned char 
 20814 ;; Auto vars:     Size  Location     Type
 20815 ;;  __fltol         1   60[COMRAM] unsigned char 
 20816 ;;  __fltol         1   59[COMRAM] unsigned char 
 20817 ;; Return value:  Size  Location     Type
 20818 ;;                  4   51[COMRAM] long 
 20819 ;; Registers used:
 20820 ;;		wreg, status,2, status,0
 20821 ;; Tracked objects:
 20822 ;;		On entry : 0/0
 20823 ;;		On exit  : 0/0
 20824 ;;		Unchanged: 0/0
 20825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20827 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20828 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20829 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20830 ;;Total ram usage:       10 bytes
 20831 ;; Hardware stack levels used:    1
 20832 ;; This function calls:
 20833 ;;		Nothing
 20834 ;; This function is called by:
 20835 ;;		_ConvertFloatToByteArray
 20836 ;;		i2_efgtoa
 20837 ;; This function uses a non-reentrant model
 20838 ;;
 20839                           
 20840                           	psect	text108
 20841  005F08                     __ptext108:
 20842                           	opt callstack 0
 20843  005F08                     i2___fltol:
 20844                           	opt callstack 10
 20845                           
 20846                           ;incstack = 0
 20847  005F08  3436               	rlcf	i2___fltol@f1+2,w,c
 20848  005F0A  3437               	rlcf	i2___fltol@f1+3,w,c
 20849  005F0C  6E3D               	movwf	i2___fltol@exp1,c
 20850  005F0E  503D               	movf	i2___fltol@exp1,w,c
 20851  005F10  A4D8               	btfss	status,2,c
 20852  005F12  D009               	goto	i2l5709
 20853  005F14                     i2u714_40:
 20854  005F14  0E00               	movlw	0
 20855  005F16  6E34               	movwf	?i2___fltol,c
 20856  005F18  0E00               	movlw	0
 20857  005F1A  6E35               	movwf	?i2___fltol+1,c
 20858  005F1C  0E00               	movlw	0
 20859  005F1E  6E36               	movwf	?i2___fltol+2,c
 20860  005F20  0E00               	movlw	0
 20861  005F22  6E37               	movwf	?i2___fltol+3,c
 20862  005F24  0012               	return	
 20863  005F26                     i2l5709:
 20864  005F26  C034  F038         	movff	i2___fltol@f1,??i2___fltol
 20865  005F2A  C035  F039         	movff	i2___fltol@f1+1,??i2___fltol+1
 20866  005F2E  C036  F03A         	movff	i2___fltol@f1+2,??i2___fltol+2
 20867  005F32  C037  F03B         	movff	i2___fltol@f1+3,??i2___fltol+3
 20868  005F36  0E20               	movlw	32
 20869  005F38  D005               	goto	i2u715_40
 20870  005F3A                     i2u715_45:
 20871  005F3A  90D8               	bcf	status,0,c
 20872  005F3C  323B               	rrcf	??i2___fltol+3,f,c
 20873  005F3E  323A               	rrcf	??i2___fltol+2,f,c
 20874  005F40  3239               	rrcf	??i2___fltol+1,f,c
 20875  005F42  3238               	rrcf	??i2___fltol,f,c
 20876  005F44                     i2u715_40:
 20877  005F44  2EE8               	decfsz	wreg,f,c
 20878  005F46  D7F9               	goto	i2u715_45
 20879  005F48  5038               	movf	??i2___fltol,w,c
 20880  005F4A  6E3C               	movwf	i2___fltol@sign1,c
 20881  005F4C  8E36               	bsf	i2___fltol@f1+2,7,c
 20882  005F4E  0EFF               	movlw	255
 20883  005F50  1634               	andwf	i2___fltol@f1,f,c
 20884  005F52  0EFF               	movlw	255
 20885  005F54  1635               	andwf	i2___fltol@f1+1,f,c
 20886  005F56  0EFF               	movlw	255
 20887  005F58  1636               	andwf	i2___fltol@f1+2,f,c
 20888  005F5A  0E00               	movlw	0
 20889  005F5C  1637               	andwf	i2___fltol@f1+3,f,c
 20890  005F5E  0E96               	movlw	150
 20891  005F60  5E3D               	subwf	i2___fltol@exp1,f,c
 20892  005F62  AE3D               	btfss	i2___fltol@exp1,7,c
 20893  005F64  D00D               	goto	i2l5729
 20894  005F66  503D               	movf	i2___fltol@exp1,w,c
 20895  005F68  0A80               	xorlw	128
 20896  005F6A  0F97               	addlw	151
 20897  005F6C  A0D8               	btfss	status,0,c
 20898  005F6E  D7D2               	goto	i2u714_40
 20899  005F70                     i2l5725:
 20900  005F70  90D8               	bcf	status,0,c
 20901  005F72  3237               	rrcf	i2___fltol@f1+3,f,c
 20902  005F74  3236               	rrcf	i2___fltol@f1+2,f,c
 20903  005F76  3235               	rrcf	i2___fltol@f1+1,f,c
 20904  005F78  3234               	rrcf	i2___fltol@f1,f,c
 20905  005F7A  3E3D               	incfsz	i2___fltol@exp1,f,c
 20906  005F7C  D7F9               	goto	i2l5725
 20907  005F7E  D00D               	goto	i2u719_40
 20908  005F80                     i2l5729:
 20909  005F80  0E1F               	movlw	31
 20910  005F82  643D               	cpfsgt	i2___fltol@exp1,c
 20911  005F84  D007               	goto	i2l5737
 20912  005F86  D7C6               	goto	i2u714_40
 20913  005F88                     i2l5735:
 20914  005F88  90D8               	bcf	status,0,c
 20915  005F8A  3634               	rlcf	i2___fltol@f1,f,c
 20916  005F8C  3635               	rlcf	i2___fltol@f1+1,f,c
 20917  005F8E  3636               	rlcf	i2___fltol@f1+2,f,c
 20918  005F90  3637               	rlcf	i2___fltol@f1+3,f,c
 20919  005F92  063D               	decf	i2___fltol@exp1,f,c
 20920  005F94                     i2l5737:
 20921  005F94  503D               	movf	i2___fltol@exp1,w,c
 20922  005F96  A4D8               	btfss	status,2,c
 20923  005F98  D7F7               	goto	i2l5735
 20924  005F9A                     i2u719_40:
 20925  005F9A  503C               	movf	i2___fltol@sign1,w,c
 20926  005F9C  B4D8               	btfsc	status,2,c
 20927  005F9E  D008               	goto	i2l5743
 20928  005FA0  1E37               	comf	i2___fltol@f1+3,f,c
 20929  005FA2  1E36               	comf	i2___fltol@f1+2,f,c
 20930  005FA4  1E35               	comf	i2___fltol@f1+1,f,c
 20931  005FA6  6C34               	negf	i2___fltol@f1,c
 20932  005FA8  0E00               	movlw	0
 20933  005FAA  2235               	addwfc	i2___fltol@f1+1,f,c
 20934  005FAC  2236               	addwfc	i2___fltol@f1+2,f,c
 20935  005FAE  2237               	addwfc	i2___fltol@f1+3,f,c
 20936  005FB0                     i2l5743:
 20937  005FB0  C034  F034         	movff	i2___fltol@f1,?i2___fltol
 20938  005FB4  C035  F035         	movff	i2___fltol@f1+1,?i2___fltol+1
 20939  005FB8  C036  F036         	movff	i2___fltol@f1+2,?i2___fltol+2
 20940  005FBC  C037  F037         	movff	i2___fltol@f1+3,?i2___fltol+3
 20941  005FC0  0012               	return		;funcret
 20942  005FC2                     __end_ofi2___fltol:
 20943                           	opt callstack 0
 20944                           
 20945 ;; *************** function i2___flsub *****************
 20946 ;; Defined at:
 20947 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 20948 ;; Parameters:    Size  Location     Type
 20949 ;;  b               4   51[COMRAM] long 
 20950 ;;  a               4   55[COMRAM] long 
 20951 ;; Auto vars:     Size  Location     Type
 20952 ;;		None
 20953 ;; Return value:  Size  Location     Type
 20954 ;;                  4   51[COMRAM] long 
 20955 ;; Registers used:
 20956 ;;		wreg, status,2, status,0, cstack
 20957 ;; Tracked objects:
 20958 ;;		On entry : 0/0
 20959 ;;		On exit  : 0/0
 20960 ;;		Unchanged: 0/0
 20961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20962 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20965 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20966 ;;Total ram usage:        8 bytes
 20967 ;; Hardware stack levels used:    1
 20968 ;; Hardware stack levels required when called:    1
 20969 ;; This function calls:
 20970 ;;		i2___fladd
 20971 ;; This function is called by:
 20972 ;;		_ConvertFloatToByteArray
 20973 ;;		i2_efgtoa
 20974 ;; This function uses a non-reentrant model
 20975 ;;
 20976                           
 20977                           	psect	text109
 20978  006EEC                     __ptext109:
 20979                           	opt callstack 0
 20980  006EEC                     i2___flsub:
 20981                           	opt callstack 9
 20982                           
 20983                           ;incstack = 0
 20984  006EEC  0E00               	movlw	0
 20985  006EEE  1A38               	xorwf	i2___flsub@a,f,c
 20986  006EF0  0E00               	movlw	0
 20987  006EF2  1A39               	xorwf	i2___flsub@a+1,f,c
 20988  006EF4  0E00               	movlw	0
 20989  006EF6  1A3A               	xorwf	i2___flsub@a+2,f,c
 20990  006EF8  0E80               	movlw	128
 20991  006EFA  1A3B               	xorwf	i2___flsub@a+3,f,c
 20992  006EFC  C034  F001         	movff	i2___flsub@b,i2___fladd@b
 20993  006F00  C035  F002         	movff	i2___flsub@b+1,i2___fladd@b+1
 20994  006F04  C036  F003         	movff	i2___flsub@b+2,i2___fladd@b+2
 20995  006F08  C037  F004         	movff	i2___flsub@b+3,i2___fladd@b+3
 20996  006F0C  C038  F005         	movff	i2___flsub@a,i2___fladd@a
 20997  006F10  C039  F006         	movff	i2___flsub@a+1,i2___fladd@a+1
 20998  006F14  C03A  F007         	movff	i2___flsub@a+2,i2___fladd@a+2
 20999  006F18  C03B  F008         	movff	i2___flsub@a+3,i2___fladd@a+3
 21000  006F1C  EC60  F01B         	call	i2___fladd	;wreg free
 21001  006F20  C001  F034         	movff	?i2___fladd,?i2___flsub
 21002  006F24  C002  F035         	movff	?i2___fladd+1,?i2___flsub+1
 21003  006F28  C003  F036         	movff	?i2___fladd+2,?i2___flsub+2
 21004  006F2C  C004  F037         	movff	?i2___fladd+3,?i2___flsub+3
 21005  006F30  0012               	return		;funcret
 21006  006F32                     __end_ofi2___flsub:
 21007                           	opt callstack 0
 21008                           
 21009 ;; *************** function i2___fladd *****************
 21010 ;; Defined at:
 21011 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 21012 ;; Parameters:    Size  Location     Type
 21013 ;;  b               4    0[COMRAM] long 
 21014 ;;  a               4    4[COMRAM] long 
 21015 ;; Auto vars:     Size  Location     Type
 21016 ;;  __fladd         1   15[COMRAM] unsigned char 
 21017 ;;  __fladd         1   14[COMRAM] unsigned char 
 21018 ;;  __fladd         1   13[COMRAM] unsigned char 
 21019 ;;  __fladd         1   12[COMRAM] unsigned char 
 21020 ;; Return value:  Size  Location     Type
 21021 ;;                  4    0[COMRAM] unsigned char 
 21022 ;; Registers used:
 21023 ;;		wreg, status,2, status,0
 21024 ;; Tracked objects:
 21025 ;;		On entry : 0/0
 21026 ;;		On exit  : 0/0
 21027 ;;		Unchanged: 0/0
 21028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21029 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21030 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21031 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21032 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21033 ;;Total ram usage:       16 bytes
 21034 ;; Hardware stack levels used:    1
 21035 ;; This function calls:
 21036 ;;		Nothing
 21037 ;; This function is called by:
 21038 ;;		_ConvertByteArrayToFloat
 21039 ;;		i2_ReadTemperature
 21040 ;;		i2_ReadHumidity
 21041 ;;		i2_efgtoa
 21042 ;;		i2___flsub
 21043 ;; This function uses a non-reentrant model
 21044 ;;
 21045                           
 21046                           	psect	text110
 21047  0036C0                     __ptext110:
 21048                           	opt callstack 0
 21049  0036C0                     i2___fladd:
 21050                           	opt callstack 9
 21051                           
 21052                           ;incstack = 0
 21053  0036C0  5004               	movf	i2___fladd@b+3,w,c
 21054  0036C2  0B80               	andlw	128
 21055  0036C4  6E0D               	movwf	i2___fladd@signs,c
 21056  0036C6  5004               	movf	i2___fladd@b+3,w,c
 21057  0036C8  2404               	addwf	i2___fladd@b+3,w,c
 21058  0036CA  6E0F               	movwf	i2___fladd@bexp,c
 21059  0036CC  BE03               	btfsc	i2___fladd@b+2,7,c
 21060  0036CE  800F               	bsf	i2___fladd@bexp,0,c
 21061  0036D0  500F               	movf	i2___fladd@bexp,w,c
 21062  0036D2  B4D8               	btfsc	status,2,c
 21063  0036D4  D00D               	goto	i2l5259
 21064  0036D6  280F               	incf	i2___fladd@bexp,w,c
 21065  0036D8  A4D8               	btfss	status,2,c
 21066  0036DA  D008               	goto	i2l5255
 21067  0036DC  0E00               	movlw	0
 21068  0036DE  6E01               	movwf	i2___fladd@b,c
 21069  0036E0  0E00               	movlw	0
 21070  0036E2  6E02               	movwf	i2___fladd@b+1,c
 21071  0036E4  0E00               	movlw	0
 21072  0036E6  6E03               	movwf	i2___fladd@b+2,c
 21073  0036E8  0E00               	movlw	0
 21074  0036EA  6E04               	movwf	i2___fladd@b+3,c
 21075  0036EC                     i2l5255:
 21076  0036EC  8E03               	bsf	i2___fladd@b+2,7,c
 21077  0036EE  D006               	goto	L24
 21078  0036F0                     i2l5259:
 21079  0036F0  0E00               	movlw	0
 21080  0036F2  6E01               	movwf	i2___fladd@b,c
 21081  0036F4  0E00               	movlw	0
 21082  0036F6  6E02               	movwf	i2___fladd@b+1,c
 21083  0036F8  0E00               	movlw	0
 21084  0036FA  6E03               	movwf	i2___fladd@b+2,c
 21085  0036FC                     L24:
 21086  0036FC  0E00               	movlw	0
 21087  0036FE  6E04               	movwf	i2___fladd@b+3,c
 21088  003700  5008               	movf	i2___fladd@a+3,w,c
 21089  003702  0B80               	andlw	128
 21090  003704  6E0E               	movwf	i2___fladd@aexp,c
 21091  003706  500D               	movf	i2___fladd@signs,w,c
 21092  003708  180E               	xorwf	i2___fladd@aexp,w,c
 21093  00370A  A4D8               	btfss	status,2,c
 21094  00370C  8C0D               	bsf	i2___fladd@signs,6,c
 21095  00370E  5008               	movf	i2___fladd@a+3,w,c
 21096  003710  2408               	addwf	i2___fladd@a+3,w,c
 21097  003712  6E0E               	movwf	i2___fladd@aexp,c
 21098  003714  BE07               	btfsc	i2___fladd@a+2,7,c
 21099  003716  800E               	bsf	i2___fladd@aexp,0,c
 21100  003718  500E               	movf	i2___fladd@aexp,w,c
 21101  00371A  B4D8               	btfsc	status,2,c
 21102  00371C  D00D               	goto	i2l5283
 21103  00371E  280E               	incf	i2___fladd@aexp,w,c
 21104  003720  A4D8               	btfss	status,2,c
 21105  003722  D008               	goto	i2l5279
 21106  003724  0E00               	movlw	0
 21107  003726  6E05               	movwf	i2___fladd@a,c
 21108  003728  0E00               	movlw	0
 21109  00372A  6E06               	movwf	i2___fladd@a+1,c
 21110  00372C  0E00               	movlw	0
 21111  00372E  6E07               	movwf	i2___fladd@a+2,c
 21112  003730  0E00               	movlw	0
 21113  003732  6E08               	movwf	i2___fladd@a+3,c
 21114  003734                     i2l5279:
 21115  003734  8E07               	bsf	i2___fladd@a+2,7,c
 21116  003736  D006               	goto	L25
 21117  003738                     i2l5283:
 21118  003738  0E00               	movlw	0
 21119  00373A  6E05               	movwf	i2___fladd@a,c
 21120  00373C  0E00               	movlw	0
 21121  00373E  6E06               	movwf	i2___fladd@a+1,c
 21122  003740  0E00               	movlw	0
 21123  003742  6E07               	movwf	i2___fladd@a+2,c
 21124  003744                     L25:
 21125  003744  0E00               	movlw	0
 21126  003746  6E08               	movwf	i2___fladd@a+3,c
 21127  003748  500F               	movf	i2___fladd@bexp,w,c
 21128  00374A  5C0E               	subwf	i2___fladd@aexp,w,c
 21129  00374C  B0D8               	btfsc	status,0,c
 21130  00374E  D022               	goto	i2l5321
 21131  003750  AC0D               	btfss	i2___fladd@signs,6,c
 21132  003752  D002               	goto	i2l5291
 21133  003754  0E80               	movlw	128
 21134  003756  1A0D               	xorwf	i2___fladd@signs,f,c
 21135  003758                     i2l5291:
 21136  003758  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
 21137  00375C  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 21138  003760  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
 21139  003764  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
 21140  003768  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 21141  00376C  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
 21142  003770  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
 21143  003774  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 21144  003778  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 21145  00377C  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
 21146  003780  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 21147  003784  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 21148  003788  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
 21149  00378C  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 21150  003790  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 21151  003794                     i2l5321:
 21152  003794  0E00               	movlw	0
 21153  003796  6E10               	movwf	i2___fladd@grs,c
 21154  003798  500F               	movf	i2___fladd@bexp,w,c
 21155  00379A  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
 21156  00379E  6A0A               	clrf	(??i2___fladd+1)& (0+255),c
 21157  0037A0  5E09               	subwf	??i2___fladd,f,c
 21158  0037A2  0E00               	movlw	0
 21159  0037A4  5A0A               	subwfb	??i2___fladd+1,f,c
 21160  0037A6  BE0A               	btfsc	??i2___fladd+1,7,c
 21161  0037A8  D02C               	goto	i2l1285
 21162  0037AA  500A               	movf	??i2___fladd+1,w,c
 21163  0037AC  E104               	bnz	i2u642_40
 21164  0037AE  0E1A               	movlw	26
 21165  0037B0  5C09               	subwf	??i2___fladd,w,c
 21166  0037B2  A0D8               	btfss	status,0,c
 21167  0037B4  D026               	goto	i2l1285
 21168  0037B6                     i2u642_40:
 21169  0037B6  5001               	movf	i2___fladd@b,w,c
 21170  0037B8  1002               	iorwf	i2___fladd@b+1,w,c
 21171  0037BA  1003               	iorwf	i2___fladd@b+2,w,c
 21172  0037BC  1004               	iorwf	i2___fladd@b+3,w,c
 21173  0037BE  B4D8               	btfsc	status,2,c
 21174  0037C0  D002               	goto	i2u643_40
 21175  0037C2  0E01               	movlw	1
 21176  0037C4  D001               	goto	i2u644_40
 21177  0037C6                     i2u643_40:
 21178  0037C6  0E00               	movlw	0
 21179  0037C8                     i2u644_40:
 21180  0037C8  6E10               	movwf	i2___fladd@grs,c
 21181  0037CA  0E00               	movlw	0
 21182  0037CC  6E01               	movwf	i2___fladd@b,c
 21183  0037CE  0E00               	movlw	0
 21184  0037D0  6E02               	movwf	i2___fladd@b+1,c
 21185  0037D2  0E00               	movlw	0
 21186  0037D4  6E03               	movwf	i2___fladd@b+2,c
 21187  0037D6  0E00               	movlw	0
 21188  0037D8  6E04               	movwf	i2___fladd@b+3,c
 21189  0037DA  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 21190  0037DE  D015               	goto	i2u647_40
 21191  0037E0                     i2l1286:
 21192  0037E0  A010               	btfss	i2___fladd@grs,0,c
 21193  0037E2  D005               	goto	i2l5333
 21194  0037E4  90D8               	bcf	status,0,c
 21195  0037E6  3010               	rrcf	i2___fladd@grs,w,c
 21196  0037E8  0901               	iorlw	1
 21197  0037EA  6E10               	movwf	i2___fladd@grs,c
 21198  0037EC  D002               	goto	i2l5335
 21199  0037EE                     i2l5333:
 21200  0037EE  90D8               	bcf	status,0,c
 21201  0037F0  3210               	rrcf	i2___fladd@grs,f,c
 21202  0037F2                     i2l5335:
 21203  0037F2  B001               	btfsc	i2___fladd@b,0,c
 21204  0037F4  8E10               	bsf	i2___fladd@grs,7,c
 21205  0037F6  3404               	rlcf	i2___fladd@b+3,w,c
 21206  0037F8  3204               	rrcf	i2___fladd@b+3,f,c
 21207  0037FA  3203               	rrcf	i2___fladd@b+2,f,c
 21208  0037FC  3202               	rrcf	i2___fladd@b+1,f,c
 21209  0037FE  3201               	rrcf	i2___fladd@b,f,c
 21210  003800  2A0F               	incf	i2___fladd@bexp,f,c
 21211  003802                     i2l1285:
 21212  003802  500E               	movf	i2___fladd@aexp,w,c
 21213  003804  5C0F               	subwf	i2___fladd@bexp,w,c
 21214  003806  A0D8               	btfss	status,0,c
 21215  003808  D7EB               	goto	i2l1286
 21216  00380A                     i2u647_40:
 21217  00380A  BC0D               	btfsc	i2___fladd@signs,6,c
 21218  00380C  D028               	goto	i2l5367
 21219  00380E  500F               	movf	i2___fladd@bexp,w,c
 21220  003810  A4D8               	btfss	status,2,c
 21221  003812  D009               	goto	i2l5349
 21222  003814  0E00               	movlw	0
 21223  003816  6E01               	movwf	?i2___fladd,c
 21224  003818  0E00               	movlw	0
 21225  00381A  6E02               	movwf	?i2___fladd+1,c
 21226  00381C  0E00               	movlw	0
 21227  00381E  6E03               	movwf	?i2___fladd+2,c
 21228  003820  0E00               	movlw	0
 21229  003822  6E04               	movwf	?i2___fladd+3,c
 21230  003824  0012               	return	
 21231  003826                     i2l5349:
 21232  003826  5005               	movf	i2___fladd@a,w,c
 21233  003828  2601               	addwf	i2___fladd@b,f,c
 21234  00382A  5006               	movf	i2___fladd@a+1,w,c
 21235  00382C  2202               	addwfc	i2___fladd@b+1,f,c
 21236  00382E  5007               	movf	i2___fladd@a+2,w,c
 21237  003830  2203               	addwfc	i2___fladd@b+2,f,c
 21238  003832  5008               	movf	i2___fladd@a+3,w,c
 21239  003834  2204               	addwfc	i2___fladd@b+3,f,c
 21240  003836  A004               	btfss	i2___fladd@b+3,0,c
 21241  003838  D071               	goto	i2u660_40
 21242  00383A  A010               	btfss	i2___fladd@grs,0,c
 21243  00383C  D005               	goto	i2l5357
 21244  00383E  90D8               	bcf	status,0,c
 21245  003840  3010               	rrcf	i2___fladd@grs,w,c
 21246  003842  0901               	iorlw	1
 21247  003844  6E10               	movwf	i2___fladd@grs,c
 21248  003846  D002               	goto	i2l5359
 21249  003848                     i2l5357:
 21250  003848  90D8               	bcf	status,0,c
 21251  00384A  3210               	rrcf	i2___fladd@grs,f,c
 21252  00384C                     i2l5359:
 21253  00384C  B001               	btfsc	i2___fladd@b,0,c
 21254  00384E  8E10               	bsf	i2___fladd@grs,7,c
 21255  003850  3404               	rlcf	i2___fladd@b+3,w,c
 21256  003852  3204               	rrcf	i2___fladd@b+3,f,c
 21257  003854  3203               	rrcf	i2___fladd@b+2,f,c
 21258  003856  3202               	rrcf	i2___fladd@b+1,f,c
 21259  003858  3201               	rrcf	i2___fladd@b,f,c
 21260  00385A  2A0F               	incf	i2___fladd@bexp,f,c
 21261  00385C  D05F               	goto	i2u660_40
 21262  00385E                     i2l5367:
 21263  00385E  5005               	movf	i2___fladd@a,w,c
 21264  003860  5C01               	subwf	i2___fladd@b,w,c
 21265  003862  5006               	movf	i2___fladd@a+1,w,c
 21266  003864  5802               	subwfb	i2___fladd@b+1,w,c
 21267  003866  5007               	movf	i2___fladd@a+2,w,c
 21268  003868  5803               	subwfb	i2___fladd@b+2,w,c
 21269  00386A  5004               	movf	i2___fladd@b+3,w,c
 21270  00386C  0A80               	xorlw	128
 21271  00386E  6E09               	movwf	??i2___fladd& (0+255),c
 21272  003870  5008               	movf	i2___fladd@a+3,w,c
 21273  003872  0A80               	xorlw	128
 21274  003874  5809               	subwfb	??i2___fladd& (0+255),w,c
 21275  003876  B0D8               	btfsc	status,0,c
 21276  003878  D025               	goto	i2l5377
 21277  00387A  5001               	movf	i2___fladd@b,w,c
 21278  00387C  5C05               	subwf	i2___fladd@a,w,c
 21279  00387E  6E09               	movwf	??i2___fladd& (0+255),c
 21280  003880  5002               	movf	i2___fladd@b+1,w,c
 21281  003882  5806               	subwfb	i2___fladd@a+1,w,c
 21282  003884  6E0A               	movwf	(??i2___fladd+1)& (0+255),c
 21283  003886  5003               	movf	i2___fladd@b+2,w,c
 21284  003888  5807               	subwfb	i2___fladd@a+2,w,c
 21285  00388A  6E0B               	movwf	(??i2___fladd+2)& (0+255),c
 21286  00388C  5004               	movf	i2___fladd@b+3,w,c
 21287  00388E  5808               	subwfb	i2___fladd@a+3,w,c
 21288  003890  6E0C               	movwf	(??i2___fladd+3)& (0+255),c
 21289  003892  0EFF               	movlw	255
 21290  003894  2409               	addwf	??i2___fladd,w,c
 21291  003896  6E01               	movwf	i2___fladd@b,c
 21292  003898  0EFF               	movlw	255
 21293  00389A  200A               	addwfc	??i2___fladd+1,w,c
 21294  00389C  6E02               	movwf	i2___fladd@b+1,c
 21295  00389E  0EFF               	movlw	255
 21296  0038A0  200B               	addwfc	??i2___fladd+2,w,c
 21297  0038A2  6E03               	movwf	i2___fladd@b+2,c
 21298  0038A4  0EFF               	movlw	255
 21299  0038A6  200C               	addwfc	??i2___fladd+3,w,c
 21300  0038A8  6E04               	movwf	i2___fladd@b+3,c
 21301  0038AA  0E80               	movlw	128
 21302  0038AC  1A0D               	xorwf	i2___fladd@signs,f,c
 21303  0038AE  6C10               	negf	i2___fladd@grs,c
 21304  0038B0  5010               	movf	i2___fladd@grs,w,c
 21305  0038B2  A4D8               	btfss	status,2,c
 21306  0038B4  D00F               	goto	i2l1301
 21307  0038B6  0E01               	movlw	1
 21308  0038B8  2601               	addwf	i2___fladd@b,f,c
 21309  0038BA  0E00               	movlw	0
 21310  0038BC  2202               	addwfc	i2___fladd@b+1,f,c
 21311  0038BE  2203               	addwfc	i2___fladd@b+2,f,c
 21312  0038C0  2204               	addwfc	i2___fladd@b+3,f,c
 21313  0038C2  D008               	goto	i2l1301
 21314  0038C4                     i2l5377:
 21315  0038C4  5005               	movf	i2___fladd@a,w,c
 21316  0038C6  5E01               	subwf	i2___fladd@b,f,c
 21317  0038C8  5006               	movf	i2___fladd@a+1,w,c
 21318  0038CA  5A02               	subwfb	i2___fladd@b+1,f,c
 21319  0038CC  5007               	movf	i2___fladd@a+2,w,c
 21320  0038CE  5A03               	subwfb	i2___fladd@b+2,f,c
 21321  0038D0  5008               	movf	i2___fladd@a+3,w,c
 21322  0038D2  5A04               	subwfb	i2___fladd@b+3,f,c
 21323  0038D4                     i2l1301:
 21324  0038D4  5001               	movf	i2___fladd@b,w,c
 21325  0038D6  1002               	iorwf	i2___fladd@b+1,w,c
 21326  0038D8  1003               	iorwf	i2___fladd@b+2,w,c
 21327  0038DA  1004               	iorwf	i2___fladd@b+3,w,c
 21328  0038DC  A4D8               	btfss	status,2,c
 21329  0038DE  D01C               	goto	i2l5401
 21330  0038E0  5010               	movf	i2___fladd@grs,w,c
 21331  0038E2  A4D8               	btfss	status,2,c
 21332  0038E4  D019               	goto	i2l5401
 21333  0038E6  0E00               	movlw	0
 21334  0038E8  6E01               	movwf	?i2___fladd,c
 21335  0038EA  0E00               	movlw	0
 21336  0038EC  6E02               	movwf	?i2___fladd+1,c
 21337  0038EE  0E00               	movlw	0
 21338  0038F0  6E03               	movwf	?i2___fladd+2,c
 21339  0038F2  0E00               	movlw	0
 21340  0038F4  6E04               	movwf	?i2___fladd+3,c
 21341  0038F6  0012               	return	
 21342  0038F8                     i2l5385:
 21343  0038F8  90D8               	bcf	status,0,c
 21344  0038FA  3601               	rlcf	i2___fladd@b,f,c
 21345  0038FC  3602               	rlcf	i2___fladd@b+1,f,c
 21346  0038FE  3603               	rlcf	i2___fladd@b+2,f,c
 21347  003900  3604               	rlcf	i2___fladd@b+3,f,c
 21348  003902  BE10               	btfsc	i2___fladd@grs,7,c
 21349  003904  8001               	bsf	i2___fladd@b,0,c
 21350  003906  A010               	btfss	i2___fladd@grs,0,c
 21351  003908  D002               	goto	i2l5395
 21352  00390A  80D8               	bsf	status,0,c
 21353  00390C  D001               	goto	L26
 21354  00390E                     i2l5395:
 21355  00390E  90D8               	bcf	status,0,c
 21356  003910                     L26:
 21357  003910  3610               	rlcf	i2___fladd@grs,f,c
 21358  003912  500F               	movf	i2___fladd@bexp,w,c
 21359  003914  A4D8               	btfss	status,2,c
 21360  003916  060F               	decf	i2___fladd@bexp,f,c
 21361  003918                     i2l5401:
 21362  003918  AE03               	btfss	i2___fladd@b+2,7,c
 21363  00391A  D7EE               	goto	i2l5385
 21364  00391C                     i2u660_40:
 21365  00391C  0E00               	movlw	0
 21366  00391E  6E0E               	movwf	i2___fladd@aexp,c
 21367  003920  AE10               	btfss	i2___fladd@grs,7,c
 21368  003922  D00B               	goto	i2l1310
 21369  003924  C010  F009         	movff	i2___fladd@grs,??i2___fladd
 21370  003928  0E7F               	movlw	127
 21371  00392A  1609               	andwf	??i2___fladd,f,c
 21372  00392C  B4D8               	btfsc	status,2,c
 21373  00392E  D003               	goto	i2l1311
 21374  003930                     i2u662_40:
 21375  003930  0E01               	movlw	1
 21376  003932  6E0E               	movwf	i2___fladd@aexp,c
 21377  003934  D002               	goto	i2l1310
 21378  003936                     i2l1311:
 21379  003936  B001               	btfsc	i2___fladd@b,0,c
 21380  003938  D7FB               	goto	i2u662_40
 21381  00393A                     i2l1310:
 21382  00393A  500E               	movf	i2___fladd@aexp,w,c
 21383  00393C  B4D8               	btfsc	status,2,c
 21384  00393E  D020               	goto	i2l5421
 21385  003940  0E01               	movlw	1
 21386  003942  2601               	addwf	i2___fladd@b,f,c
 21387  003944  0E00               	movlw	0
 21388  003946  2202               	addwfc	i2___fladd@b+1,f,c
 21389  003948  2203               	addwfc	i2___fladd@b+2,f,c
 21390  00394A  2204               	addwfc	i2___fladd@b+3,f,c
 21391  00394C  A004               	btfss	i2___fladd@b+3,0,c
 21392  00394E  D018               	goto	i2l5421
 21393  003950  C001  F009         	movff	i2___fladd@b,??i2___fladd
 21394  003954  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 21395  003958  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 21396  00395C  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 21397  003960  340C               	rlcf	??i2___fladd+3,w,c
 21398  003962  320C               	rrcf	??i2___fladd+3,f,c
 21399  003964  320B               	rrcf	??i2___fladd+2,f,c
 21400  003966  320A               	rrcf	??i2___fladd+1,f,c
 21401  003968  3209               	rrcf	??i2___fladd,f,c
 21402  00396A  C009  F001         	movff	??i2___fladd,i2___fladd@b
 21403  00396E  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 21404  003972  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 21405  003976  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 21406  00397A  280F               	incf	i2___fladd@bexp,w,c
 21407  00397C  A4D8               	btfss	status,2,c
 21408  00397E  2A0F               	incf	i2___fladd@bexp,f,c
 21409  003980                     i2l5421:
 21410  003980  280F               	incf	i2___fladd@bexp,w,c
 21411  003982  B4D8               	btfsc	status,2,c
 21412  003984  D003               	goto	i2u668_40
 21413  003986  500F               	movf	i2___fladd@bexp,w,c
 21414  003988  A4D8               	btfss	status,2,c
 21415  00398A  D00D               	goto	i2l5429
 21416  00398C                     i2u668_40:
 21417  00398C  0E00               	movlw	0
 21418  00398E  6E01               	movwf	i2___fladd@b,c
 21419  003990  0E00               	movlw	0
 21420  003992  6E02               	movwf	i2___fladd@b+1,c
 21421  003994  0E00               	movlw	0
 21422  003996  6E03               	movwf	i2___fladd@b+2,c
 21423  003998  0E00               	movlw	0
 21424  00399A  6E04               	movwf	i2___fladd@b+3,c
 21425  00399C  500F               	movf	i2___fladd@bexp,w,c
 21426  00399E  A4D8               	btfss	status,2,c
 21427  0039A0  D002               	goto	i2l5429
 21428  0039A2  0E00               	movlw	0
 21429  0039A4  6E0D               	movwf	i2___fladd@signs,c
 21430  0039A6                     i2l5429:
 21431  0039A6  A00F               	btfss	i2___fladd@bexp,0,c
 21432  0039A8  D002               	goto	i2l5433
 21433  0039AA  8E03               	bsf	i2___fladd@b+2,7,c
 21434  0039AC  D001               	goto	i2l5435
 21435  0039AE                     i2l5433:
 21436  0039AE  9E03               	bcf	i2___fladd@b+2,7,c
 21437  0039B0                     i2l5435:
 21438  0039B0  90D8               	bcf	status,0,c
 21439  0039B2  300F               	rrcf	i2___fladd@bexp,w,c
 21440  0039B4  6E04               	movwf	i2___fladd@b+3,c
 21441  0039B6  BE0D               	btfsc	i2___fladd@signs,7,c
 21442  0039B8  8E04               	bsf	i2___fladd@b+3,7,c
 21443  0039BA  C001  F001         	movff	i2___fladd@b,?i2___fladd
 21444  0039BE  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 21445  0039C2  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 21446  0039C6  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 21447  0039CA  0012               	return		;funcret
 21448  0039CC                     __end_ofi2___fladd:
 21449                           	opt callstack 0
 21450                           
 21451 ;; *************** function i2___flmul *****************
 21452 ;; Defined at:
 21453 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 21454 ;; Parameters:    Size  Location     Type
 21455 ;;  b               4   26[COMRAM] unsigned char 
 21456 ;;  a               4   30[COMRAM] unsigned char 
 21457 ;; Auto vars:     Size  Location     Type
 21458 ;;  __flmul         4   45[COMRAM] struct .
 21459 ;;  __flmul         4   39[COMRAM] unsigned long 
 21460 ;;  __flmul         2   49[COMRAM] struct .
 21461 ;;  __flmul         1   44[COMRAM] unsigned char 
 21462 ;;  __flmul         1   43[COMRAM] unsigned char 
 21463 ;;  __flmul         1   38[COMRAM] unsigned char 
 21464 ;; Return value:  Size  Location     Type
 21465 ;;                  4   26[COMRAM] unsigned char 
 21466 ;; Registers used:
 21467 ;;		wreg, status,2, status,0, prodl, prodh
 21468 ;; Tracked objects:
 21469 ;;		On entry : 0/0
 21470 ;;		On exit  : 0/0
 21471 ;;		Unchanged: 0/0
 21472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21473 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21474 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21475 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21476 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21477 ;;Total ram usage:       25 bytes
 21478 ;; Hardware stack levels used:    1
 21479 ;; This function calls:
 21480 ;;		Nothing
 21481 ;; This function is called by:
 21482 ;;		_ConvertFloatToByteArray
 21483 ;;		i2_ReadTemperature
 21484 ;;		i2_efgtoa
 21485 ;; This function uses a non-reentrant model
 21486 ;;
 21487                           
 21488                           	psect	text111
 21489  003060                     __ptext111:
 21490                           	opt callstack 0
 21491  003060                     i2___flmul:
 21492                           	opt callstack 10
 21493                           
 21494                           ;incstack = 0
 21495  003060  501E               	movf	i2___flmul@b+3,w,c
 21496  003062  0B80               	andlw	128
 21497  003064  6E27               	movwf	i2___flmul@sign,c
 21498  003066  501E               	movf	i2___flmul@b+3,w,c
 21499  003068  241E               	addwf	i2___flmul@b+3,w,c
 21500  00306A  6E2D               	movwf	i2___flmul@bexp,c
 21501  00306C  BE1D               	btfsc	i2___flmul@b+2,7,c
 21502  00306E  802D               	bsf	i2___flmul@bexp,0,c
 21503  003070  502D               	movf	i2___flmul@bexp,w,c
 21504  003072  B4D8               	btfsc	status,2,c
 21505  003074  D00D               	goto	i2l5905
 21506  003076  282D               	incf	i2___flmul@bexp,w,c
 21507  003078  A4D8               	btfss	status,2,c
 21508  00307A  D008               	goto	i2l5903
 21509  00307C  0E00               	movlw	0
 21510  00307E  6E1B               	movwf	i2___flmul@b,c
 21511  003080  0E00               	movlw	0
 21512  003082  6E1C               	movwf	i2___flmul@b+1,c
 21513  003084  0E00               	movlw	0
 21514  003086  6E1D               	movwf	i2___flmul@b+2,c
 21515  003088  0E00               	movlw	0
 21516  00308A  6E1E               	movwf	i2___flmul@b+3,c
 21517  00308C                     i2l5903:
 21518  00308C  8E1D               	bsf	i2___flmul@b+2,7,c
 21519  00308E  D008               	goto	i2l5907
 21520  003090                     i2l5905:
 21521  003090  0E00               	movlw	0
 21522  003092  6E1B               	movwf	i2___flmul@b,c
 21523  003094  0E00               	movlw	0
 21524  003096  6E1C               	movwf	i2___flmul@b+1,c
 21525  003098  0E00               	movlw	0
 21526  00309A  6E1D               	movwf	i2___flmul@b+2,c
 21527  00309C  0E00               	movlw	0
 21528  00309E  6E1E               	movwf	i2___flmul@b+3,c
 21529  0030A0                     i2l5907:
 21530  0030A0  5022               	movf	i2___flmul@a+3,w,c
 21531  0030A2  0B80               	andlw	128
 21532  0030A4  1A27               	xorwf	i2___flmul@sign,f,c
 21533  0030A6  5022               	movf	i2___flmul@a+3,w,c
 21534  0030A8  2422               	addwf	i2___flmul@a+3,w,c
 21535  0030AA  6E2C               	movwf	i2___flmul@aexp,c
 21536  0030AC  BE21               	btfsc	i2___flmul@a+2,7,c
 21537  0030AE  802C               	bsf	i2___flmul@aexp,0,c
 21538  0030B0  502C               	movf	i2___flmul@aexp,w,c
 21539  0030B2  B4D8               	btfsc	status,2,c
 21540  0030B4  D00D               	goto	i2l5923
 21541  0030B6  282C               	incf	i2___flmul@aexp,w,c
 21542  0030B8  A4D8               	btfss	status,2,c
 21543  0030BA  D008               	goto	i2l5921
 21544  0030BC  0E00               	movlw	0
 21545  0030BE  6E1F               	movwf	i2___flmul@a,c
 21546  0030C0  0E00               	movlw	0
 21547  0030C2  6E20               	movwf	i2___flmul@a+1,c
 21548  0030C4  0E00               	movlw	0
 21549  0030C6  6E21               	movwf	i2___flmul@a+2,c
 21550  0030C8  0E00               	movlw	0
 21551  0030CA  6E22               	movwf	i2___flmul@a+3,c
 21552  0030CC                     i2l5921:
 21553  0030CC  8E21               	bsf	i2___flmul@a+2,7,c
 21554  0030CE  D008               	goto	i2l1370
 21555  0030D0                     i2l5923:
 21556  0030D0  0E00               	movlw	0
 21557  0030D2  6E1F               	movwf	i2___flmul@a,c
 21558  0030D4  0E00               	movlw	0
 21559  0030D6  6E20               	movwf	i2___flmul@a+1,c
 21560  0030D8  0E00               	movlw	0
 21561  0030DA  6E21               	movwf	i2___flmul@a+2,c
 21562  0030DC  0E00               	movlw	0
 21563  0030DE  6E22               	movwf	i2___flmul@a+3,c
 21564  0030E0                     i2l1370:
 21565  0030E0  502C               	movf	i2___flmul@aexp,w,c
 21566  0030E2  B4D8               	btfsc	status,2,c
 21567  0030E4  D003               	goto	i2u751_40
 21568  0030E6  502D               	movf	i2___flmul@bexp,w,c
 21569  0030E8  A4D8               	btfss	status,2,c
 21570  0030EA  D009               	goto	i2l5931
 21571  0030EC                     i2u751_40:
 21572  0030EC  0E00               	movlw	0
 21573  0030EE  6E1B               	movwf	?i2___flmul,c
 21574  0030F0  0E00               	movlw	0
 21575  0030F2  6E1C               	movwf	?i2___flmul+1,c
 21576  0030F4  0E00               	movlw	0
 21577  0030F6  6E1D               	movwf	?i2___flmul+2,c
 21578  0030F8  0E00               	movlw	0
 21579  0030FA  6E1E               	movwf	?i2___flmul+3,c
 21580  0030FC  0012               	return	
 21581  0030FE                     i2l5931:
 21582  0030FE  5021               	movf	i2___flmul@a+2,w,c
 21583  003100  021B               	mulwf	i2___flmul@b,c
 21584  003102  CFF3 F032          	movff	prodl,i2___flmul@temp
 21585  003106  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 21586  00310A  5032               	movf	i2___flmul@temp,w,c
 21587  00310C  6E28               	movwf	i2___flmul@grs,c
 21588  00310E  6A29               	clrf	i2___flmul@grs+1,c
 21589  003110  6A2A               	clrf	i2___flmul@grs+2,c
 21590  003112  6A2B               	clrf	i2___flmul@grs+3,c
 21591  003114  5033               	movf	i2___flmul@temp+1,w,c
 21592  003116  6E2E               	movwf	i2___flmul@prod,c
 21593  003118  6A2F               	clrf	i2___flmul@prod+1,c
 21594  00311A  6A30               	clrf	i2___flmul@prod+2,c
 21595  00311C  6A31               	clrf	i2___flmul@prod+3,c
 21596  00311E  5020               	movf	i2___flmul@a+1,w,c
 21597  003120  021C               	mulwf	i2___flmul@b+1,c
 21598  003122  CFF3 F032          	movff	prodl,i2___flmul@temp
 21599  003126  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 21600  00312A  5032               	movf	i2___flmul@temp,w,c
 21601  00312C  2628               	addwf	i2___flmul@grs,f,c
 21602  00312E  0E00               	movlw	0
 21603  003130  2229               	addwfc	i2___flmul@grs+1,f,c
 21604  003132  222A               	addwfc	i2___flmul@grs+2,f,c
 21605  003134  222B               	addwfc	i2___flmul@grs+3,f,c
 21606  003136  5033               	movf	i2___flmul@temp+1,w,c
 21607  003138  262E               	addwf	i2___flmul@prod,f,c
 21608  00313A  0E00               	movlw	0
 21609  00313C  222F               	addwfc	i2___flmul@prod+1,f,c
 21610  00313E  2230               	addwfc	i2___flmul@prod+2,f,c
 21611  003140  2231               	addwfc	i2___flmul@prod+3,f,c
 21612  003142  501F               	movf	i2___flmul@a,w,c
 21613  003144  021D               	mulwf	i2___flmul@b+2,c
 21614  003146  CFF3 F032          	movff	prodl,i2___flmul@temp
 21615  00314A  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 21616  00314E  5032               	movf	i2___flmul@temp,w,c
 21617  003150  2628               	addwf	i2___flmul@grs,f,c
 21618  003152  0E00               	movlw	0
 21619  003154  2229               	addwfc	i2___flmul@grs+1,f,c
 21620  003156  222A               	addwfc	i2___flmul@grs+2,f,c
 21621  003158  222B               	addwfc	i2___flmul@grs+3,f,c
 21622  00315A  5033               	movf	i2___flmul@temp+1,w,c
 21623  00315C  262E               	addwf	i2___flmul@prod,f,c
 21624  00315E  0E00               	movlw	0
 21625  003160  222F               	addwfc	i2___flmul@prod+1,f,c
 21626  003162  2230               	addwfc	i2___flmul@prod+2,f,c
 21627  003164  2231               	addwfc	i2___flmul@prod+3,f,c
 21628  003166  C02A  F02B         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 21629  00316A  C029  F02A         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 21630  00316E  C028  F029         	movff	i2___flmul@grs,i2___flmul@grs+1
 21631  003172  6A28               	clrf	i2___flmul@grs,c
 21632  003174  501F               	movf	i2___flmul@a,w,c
 21633  003176  021C               	mulwf	i2___flmul@b+1,c
 21634  003178  CFF3 F032          	movff	prodl,i2___flmul@temp
 21635  00317C  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 21636  003180  5032               	movf	i2___flmul@temp,w,c
 21637  003182  2628               	addwf	i2___flmul@grs,f,c
 21638  003184  5033               	movf	i2___flmul@temp+1,w,c
 21639  003186  2229               	addwfc	i2___flmul@grs+1,f,c
 21640  003188  0E00               	movlw	0
 21641  00318A  222A               	addwfc	i2___flmul@grs+2,f,c
 21642  00318C  0E00               	movlw	0
 21643  00318E  222B               	addwfc	i2___flmul@grs+3,f,c
 21644  003190  5020               	movf	i2___flmul@a+1,w,c
 21645  003192  021B               	mulwf	i2___flmul@b,c
 21646  003194  CFF3 F032          	movff	prodl,i2___flmul@temp
 21647  003198  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 21648  00319C  5032               	movf	i2___flmul@temp,w,c
 21649  00319E  2628               	addwf	i2___flmul@grs,f,c
 21650  0031A0  5033               	movf	i2___flmul@temp+1,w,c
 21651  0031A2  2229               	addwfc	i2___flmul@grs+1,f,c
 21652  0031A4  0E00               	movlw	0
 21653  0031A6  222A               	addwfc	i2___flmul@grs+2,f,c
 21654  0031A8  0E00               	movlw	0
 21655  0031AA  222B               	addwfc	i2___flmul@grs+3,f,c
 21656  0031AC  C02A  F02B         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 21657  0031B0  C029  F02A         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 21658  0031B4  C028  F029         	movff	i2___flmul@grs,i2___flmul@grs+1
 21659  0031B8  6A28               	clrf	i2___flmul@grs,c
 21660  0031BA  501F               	movf	i2___flmul@a,w,c
 21661  0031BC  021B               	mulwf	i2___flmul@b,c
 21662  0031BE  CFF3 F032          	movff	prodl,i2___flmul@temp
 21663  0031C2  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 21664  0031C6  5032               	movf	i2___flmul@temp,w,c
 21665  0031C8  2628               	addwf	i2___flmul@grs,f,c
 21666  0031CA  5033               	movf	i2___flmul@temp+1,w,c
 21667  0031CC  2229               	addwfc	i2___flmul@grs+1,f,c
 21668  0031CE  0E00               	movlw	0
 21669  0031D0  222A               	addwfc	i2___flmul@grs+2,f,c
 21670  0031D2  0E00               	movlw	0
 21671  0031D4  222B               	addwfc	i2___flmul@grs+3,f,c
 21672  0031D6  5021               	movf	i2___flmul@a+2,w,c
 21673  0031D8  021C               	mulwf	i2___flmul@b+1,c
 21674  0031DA  CFF3 F032          	movff	prodl,i2___flmul@temp
 21675  0031DE  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 21676  0031E2  5032               	movf	i2___flmul@temp,w,c
 21677  0031E4  262E               	addwf	i2___flmul@prod,f,c
 21678  0031E6  5033               	movf	i2___flmul@temp+1,w,c
 21679  0031E8  222F               	addwfc	i2___flmul@prod+1,f,c
 21680  0031EA  0E00               	movlw	0
 21681  0031EC  2230               	addwfc	i2___flmul@prod+2,f,c
 21682  0031EE  0E00               	movlw	0
 21683  0031F0  2231               	addwfc	i2___flmul@prod+3,f,c
 21684  0031F2  5020               	movf	i2___flmul@a+1,w,c
 21685  0031F4  021D               	mulwf	i2___flmul@b+2,c
 21686  0031F6  CFF3 F032          	movff	prodl,i2___flmul@temp
 21687  0031FA  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 21688  0031FE  5032               	movf	i2___flmul@temp,w,c
 21689  003200  262E               	addwf	i2___flmul@prod,f,c
 21690  003202  5033               	movf	i2___flmul@temp+1,w,c
 21691  003204  222F               	addwfc	i2___flmul@prod+1,f,c
 21692  003206  0E00               	movlw	0
 21693  003208  2230               	addwfc	i2___flmul@prod+2,f,c
 21694  00320A  0E00               	movlw	0
 21695  00320C  2231               	addwfc	i2___flmul@prod+3,f,c
 21696  00320E  5021               	movf	i2___flmul@a+2,w,c
 21697  003210  021D               	mulwf	i2___flmul@b+2,c
 21698  003212  CFF3 F032          	movff	prodl,i2___flmul@temp
 21699  003216  CFF4 F033          	movff	prodh,i2___flmul@temp+1
 21700  00321A  5032               	movf	i2___flmul@temp,w,c
 21701  00321C  6E23               	movwf	??i2___flmul& (0+255),c
 21702  00321E  5033               	movf	i2___flmul@temp+1,w,c
 21703  003220  6E24               	movwf	(??i2___flmul+1)& (0+255),c
 21704  003222  6A25               	clrf	(??i2___flmul+2)& (0+255),c
 21705  003224  6A26               	clrf	(??i2___flmul+3)& (0+255),c
 21706  003226  C025  F026         	movff	??i2___flmul+2,??i2___flmul+3
 21707  00322A  C024  F025         	movff	??i2___flmul+1,??i2___flmul+2
 21708  00322E  C023  F024         	movff	??i2___flmul,??i2___flmul+1
 21709  003232  6A23               	clrf	??i2___flmul,c
 21710  003234  5023               	movf	??i2___flmul,w,c
 21711  003236  262E               	addwf	i2___flmul@prod,f,c
 21712  003238  5024               	movf	??i2___flmul+1,w,c
 21713  00323A  222F               	addwfc	i2___flmul@prod+1,f,c
 21714  00323C  5025               	movf	??i2___flmul+2,w,c
 21715  00323E  2230               	addwfc	i2___flmul@prod+2,f,c
 21716  003240  5026               	movf	??i2___flmul+3,w,c
 21717  003242  2231               	addwfc	i2___flmul@prod+3,f,c
 21718  003244  C028  F023         	movff	i2___flmul@grs,??i2___flmul
 21719  003248  C029  F024         	movff	i2___flmul@grs+1,??i2___flmul+1
 21720  00324C  C02A  F025         	movff	i2___flmul@grs+2,??i2___flmul+2
 21721  003250  C02B  F026         	movff	i2___flmul@grs+3,??i2___flmul+3
 21722  003254  0E19               	movlw	25
 21723  003256  D005               	goto	i2u752_40
 21724  003258                     i2u752_45:
 21725  003258  90D8               	bcf	status,0,c
 21726  00325A  3226               	rrcf	??i2___flmul+3,f,c
 21727  00325C  3225               	rrcf	??i2___flmul+2,f,c
 21728  00325E  3224               	rrcf	??i2___flmul+1,f,c
 21729  003260  3223               	rrcf	??i2___flmul,f,c
 21730  003262                     i2u752_40:
 21731  003262  2EE8               	decfsz	wreg,f,c
 21732  003264  D7F9               	goto	i2u752_45
 21733  003266  5023               	movf	??i2___flmul,w,c
 21734  003268  262E               	addwf	i2___flmul@prod,f,c
 21735  00326A  5024               	movf	??i2___flmul+1,w,c
 21736  00326C  222F               	addwfc	i2___flmul@prod+1,f,c
 21737  00326E  5025               	movf	??i2___flmul+2,w,c
 21738  003270  2230               	addwfc	i2___flmul@prod+2,f,c
 21739  003272  5026               	movf	??i2___flmul+3,w,c
 21740  003274  2231               	addwfc	i2___flmul@prod+3,f,c
 21741  003276  C02A  F02B         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 21742  00327A  C029  F02A         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 21743  00327E  C028  F029         	movff	i2___flmul@grs,i2___flmul@grs+1
 21744  003282  6A28               	clrf	i2___flmul@grs,c
 21745  003284  502C               	movf	i2___flmul@aexp,w,c
 21746  003286  C02D  F023         	movff	i2___flmul@bexp,??i2___flmul
 21747  00328A  6A24               	clrf	(??i2___flmul+1)& (0+255),c
 21748  00328C  2623               	addwf	??i2___flmul,f,c
 21749  00328E  0E00               	movlw	0
 21750  003290  2224               	addwfc	??i2___flmul+1,f,c
 21751  003292  0E82               	movlw	130
 21752  003294  2423               	addwf	??i2___flmul,w,c
 21753  003296  6E32               	movwf	i2___flmul@temp,c
 21754  003298  0EFF               	movlw	255
 21755  00329A  2024               	addwfc	??i2___flmul+1,w,c
 21756  00329C  6E33               	movwf	i2___flmul@temp+1,c
 21757  00329E  D00F               	goto	i2l5979
 21758  0032A0                     i2l5973:
 21759  0032A0  90D8               	bcf	status,0,c
 21760  0032A2  362E               	rlcf	i2___flmul@prod,f,c
 21761  0032A4  362F               	rlcf	i2___flmul@prod+1,f,c
 21762  0032A6  3630               	rlcf	i2___flmul@prod+2,f,c
 21763  0032A8  3631               	rlcf	i2___flmul@prod+3,f,c
 21764  0032AA  BE2B               	btfsc	i2___flmul@grs+3,7,c
 21765  0032AC  802E               	bsf	i2___flmul@prod,0,c
 21766  0032AE  90D8               	bcf	status,0,c
 21767  0032B0  3628               	rlcf	i2___flmul@grs,f,c
 21768  0032B2  3629               	rlcf	i2___flmul@grs+1,f,c
 21769  0032B4  362A               	rlcf	i2___flmul@grs+2,f,c
 21770  0032B6  362B               	rlcf	i2___flmul@grs+3,f,c
 21771  0032B8  0632               	decf	i2___flmul@temp,f,c
 21772  0032BA  A0D8               	btfss	status,0,c
 21773  0032BC  0633               	decf	i2___flmul@temp+1,f,c
 21774  0032BE                     i2l5979:
 21775  0032BE  AE30               	btfss	i2___flmul@prod+2,7,c
 21776  0032C0  D7EF               	goto	i2l5973
 21777  0032C2  0E00               	movlw	0
 21778  0032C4  6E2C               	movwf	i2___flmul@aexp,c
 21779  0032C6  AE2B               	btfss	i2___flmul@grs+3,7,c
 21780  0032C8  D017               	goto	i2l1379
 21781  0032CA  0EFF               	movlw	255
 21782  0032CC  1428               	andwf	i2___flmul@grs,w,c
 21783  0032CE  6E23               	movwf	??i2___flmul& (0+255),c
 21784  0032D0  0EFF               	movlw	255
 21785  0032D2  1429               	andwf	i2___flmul@grs+1,w,c
 21786  0032D4  6E24               	movwf	(??i2___flmul+1)& (0+255),c
 21787  0032D6  0EFF               	movlw	255
 21788  0032D8  142A               	andwf	i2___flmul@grs+2,w,c
 21789  0032DA  6E25               	movwf	(??i2___flmul+2)& (0+255),c
 21790  0032DC  0E7F               	movlw	127
 21791  0032DE  142B               	andwf	i2___flmul@grs+3,w,c
 21792  0032E0  6E26               	movwf	(??i2___flmul+3)& (0+255),c
 21793  0032E2  5023               	movf	??i2___flmul,w,c
 21794  0032E4  1024               	iorwf	??i2___flmul+1,w,c
 21795  0032E6  1025               	iorwf	??i2___flmul+2,w,c
 21796  0032E8  1026               	iorwf	??i2___flmul+3,w,c
 21797  0032EA  B4D8               	btfsc	status,2,c
 21798  0032EC  D003               	goto	i2l1380
 21799  0032EE                     i2u756_40:
 21800  0032EE  0E01               	movlw	1
 21801  0032F0  6E2C               	movwf	i2___flmul@aexp,c
 21802  0032F2  D002               	goto	i2l1379
 21803  0032F4                     i2l1380:
 21804  0032F4  B02E               	btfsc	i2___flmul@prod,0,c
 21805  0032F6  D7FB               	goto	i2u756_40
 21806  0032F8                     i2l1379:
 21807  0032F8  502C               	movf	i2___flmul@aexp,w,c
 21808  0032FA  B4D8               	btfsc	status,2,c
 21809  0032FC  D01F               	goto	i2l5999
 21810  0032FE  0E01               	movlw	1
 21811  003300  262E               	addwf	i2___flmul@prod,f,c
 21812  003302  0E00               	movlw	0
 21813  003304  222F               	addwfc	i2___flmul@prod+1,f,c
 21814  003306  2230               	addwfc	i2___flmul@prod+2,f,c
 21815  003308  2231               	addwfc	i2___flmul@prod+3,f,c
 21816  00330A  A031               	btfss	i2___flmul@prod+3,0,c
 21817  00330C  D017               	goto	i2l5999
 21818  00330E  C02E  F023         	movff	i2___flmul@prod,??i2___flmul
 21819  003312  C02F  F024         	movff	i2___flmul@prod+1,??i2___flmul+1
 21820  003316  C030  F025         	movff	i2___flmul@prod+2,??i2___flmul+2
 21821  00331A  C031  F026         	movff	i2___flmul@prod+3,??i2___flmul+3
 21822  00331E  3426               	rlcf	??i2___flmul+3,w,c
 21823  003320  3226               	rrcf	??i2___flmul+3,f,c
 21824  003322  3225               	rrcf	??i2___flmul+2,f,c
 21825  003324  3224               	rrcf	??i2___flmul+1,f,c
 21826  003326  3223               	rrcf	??i2___flmul,f,c
 21827  003328  C023  F02E         	movff	??i2___flmul,i2___flmul@prod
 21828  00332C  C024  F02F         	movff	??i2___flmul+1,i2___flmul@prod+1
 21829  003330  C025  F030         	movff	??i2___flmul+2,i2___flmul@prod+2
 21830  003334  C026  F031         	movff	??i2___flmul+3,i2___flmul@prod+3
 21831  003338  4A32               	infsnz	i2___flmul@temp,f,c
 21832  00333A  2A33               	incf	i2___flmul@temp+1,f,c
 21833  00333C                     i2l5999:
 21834  00333C  BE33               	btfsc	i2___flmul@temp+1,7,c
 21835  00333E  D00D               	goto	i2l6003
 21836  003340  5033               	movf	i2___flmul@temp+1,w,c
 21837  003342  E103               	bnz	i2u760_40
 21838  003344  2832               	incf	i2___flmul@temp,w,c
 21839  003346  A0D8               	btfss	status,0,c
 21840  003348  D008               	goto	i2l6003
 21841  00334A                     i2u760_40:
 21842  00334A  0E00               	movlw	0
 21843  00334C  6E2E               	movwf	i2___flmul@prod,c
 21844  00334E  0E00               	movlw	0
 21845  003350  6E2F               	movwf	i2___flmul@prod+1,c
 21846  003352  0E80               	movlw	128
 21847  003354  6E30               	movwf	i2___flmul@prod+2,c
 21848  003356  0E7F               	movlw	127
 21849  003358  D020               	goto	L27
 21850  00335A                     i2l6003:
 21851  00335A  BE33               	btfsc	i2___flmul@temp+1,7,c
 21852  00335C  D005               	goto	i2u761_40
 21853  00335E  5033               	movf	i2___flmul@temp+1,w,c
 21854  003360  E10E               	bnz	i2l1387
 21855  003362  0432               	decf	i2___flmul@temp,w,c
 21856  003364  B0D8               	btfsc	status,0,c
 21857  003366  D00B               	goto	i2l1387
 21858  003368                     i2u761_40:
 21859  003368  0E00               	movlw	0
 21860  00336A  6E2E               	movwf	i2___flmul@prod,c
 21861  00336C  0E00               	movlw	0
 21862  00336E  6E2F               	movwf	i2___flmul@prod+1,c
 21863  003370  0E00               	movlw	0
 21864  003372  6E30               	movwf	i2___flmul@prod+2,c
 21865  003374  0E00               	movlw	0
 21866  003376  6E31               	movwf	i2___flmul@prod+3,c
 21867  003378  0E00               	movlw	0
 21868  00337A  6E27               	movwf	i2___flmul@sign,c
 21869  00337C  D00F               	goto	i2l6015
 21870  00337E                     i2l1387:
 21871  00337E  C032  F02D         	movff	i2___flmul@temp,i2___flmul@bexp
 21872  003382  0EFF               	movlw	255
 21873  003384  162E               	andwf	i2___flmul@prod,f,c
 21874  003386  0EFF               	movlw	255
 21875  003388  162F               	andwf	i2___flmul@prod+1,f,c
 21876  00338A  0E7F               	movlw	127
 21877  00338C  1630               	andwf	i2___flmul@prod+2,f,c
 21878  00338E  0E00               	movlw	0
 21879  003390  1631               	andwf	i2___flmul@prod+3,f,c
 21880  003392  B02D               	btfsc	i2___flmul@bexp,0,c
 21881  003394  8E30               	bsf	i2___flmul@prod+2,7,c
 21882  003396  90D8               	bcf	status,0,c
 21883  003398  302D               	rrcf	i2___flmul@bexp,w,c
 21884  00339A                     L27:
 21885  00339A  6E31               	movwf	i2___flmul@prod+3,c
 21886  00339C                     i2l6015:
 21887  00339C  5027               	movf	i2___flmul@sign,w,c
 21888  00339E  1231               	iorwf	i2___flmul@prod+3,f,c
 21889  0033A0  C02E  F01B         	movff	i2___flmul@prod,?i2___flmul
 21890  0033A4  C02F  F01C         	movff	i2___flmul@prod+1,?i2___flmul+1
 21891  0033A8  C030  F01D         	movff	i2___flmul@prod+2,?i2___flmul+2
 21892  0033AC  C031  F01E         	movff	i2___flmul@prod+3,?i2___flmul+3
 21893  0033B0  0012               	return		;funcret
 21894  0033B2                     __end_ofi2___flmul:
 21895                           	opt callstack 0
 21896                           
 21897 ;; *************** function _EUSART1_Transmit_ISR *****************
 21898 ;; Defined at:
 21899 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 21900 ;; Parameters:    Size  Location     Type
 21901 ;;		None
 21902 ;; Auto vars:     Size  Location     Type
 21903 ;;		None
 21904 ;; Return value:  Size  Location     Type
 21905 ;;                  1    wreg      void 
 21906 ;; Registers used:
 21907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21908 ;; Tracked objects:
 21909 ;;		On entry : 0/0
 21910 ;;		On exit  : 0/0
 21911 ;;		Unchanged: 0/0
 21912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21917 ;;Total ram usage:        0 bytes
 21918 ;; Hardware stack levels used:    1
 21919 ;; This function calls:
 21920 ;;		Nothing
 21921 ;; This function is called by:
 21922 ;;		_EUSART1_Initialize
 21923 ;;		_INTERRUPT_InterruptManager
 21924 ;; This function uses a non-reentrant model
 21925 ;;
 21926                           
 21927                           	psect	text112
 21928  00727C                     __ptext112:
 21929                           	opt callstack 0
 21930  00727C                     _EUSART1_Transmit_ISR:
 21931                           	opt callstack 17
 21932                           
 21933                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 21934                           
 21935                           ;incstack = 0
 21936  00727C  0E40               	movlw	64
 21937  00727E  0101               	movlb	1	; () banked
 21938  007280  61F9               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 21939  007282  D010               	goto	i2l171
 21940                           
 21941                           ; BSR set to: 1
 21942                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
 21943  007284  0E00               	movlw	low _eusart1TxBuffer
 21944  007286  25FA               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 21945  007288  6ED9               	movwf	fsr2l,c
 21946  00728A  6ADA               	clrf	fsr2h,c
 21947  00728C  0E02               	movlw	high _eusart1TxBuffer
 21948  00728E  22DA               	addwfc	fsr2h,f,c
 21949  007290  50DF               	movf	indf2,w,c
 21950  007292  6EAD               	movwf	4013,c	;volatile
 21951                           
 21952                           ; BSR set to: 1
 21953  007294  2BFA               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 21954                           
 21955                           ; BSR set to: 1
 21956                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 21957  007296  0E3F               	movlw	63
 21958  007298  65FA               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 21959  00729A  D002               	goto	i2l8623
 21960                           
 21961                           ; BSR set to: 1
 21962                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 21963  00729C  0E00               	movlw	0
 21964  00729E  6FFA               	movwf	_eusart1TxTail& (0+255),b	;volatile
 21965  0072A0                     i2l8623:
 21966                           
 21967                           ; BSR set to: 1
 21968                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 21969  0072A0  2BF9               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 21970                           
 21971                           ;mcc_generated_files/eusart1.c: 218:     }
 21972  0072A2  0012               	return	
 21973  0072A4                     i2l171:
 21974                           
 21975                           ; BSR set to: 1
 21976                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
 21977  0072A4  989D               	bcf	3997,4,c	;volatile
 21978                           
 21979                           ; BSR set to: 1
 21980  0072A6  0012               	return		;funcret
 21981  0072A8                     __end_of_EUSART1_Transmit_ISR:
 21982                           	opt callstack 0
 21983                           
 21984 ;; *************** function _EUSART1_Receive_ISR *****************
 21985 ;; Defined at:
 21986 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 21987 ;; Parameters:    Size  Location     Type
 21988 ;;		None
 21989 ;; Auto vars:     Size  Location     Type
 21990 ;;		None
 21991 ;; Return value:  Size  Location     Type
 21992 ;;                  1    wreg      void 
 21993 ;; Registers used:
 21994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 21995 ;; Tracked objects:
 21996 ;;		On entry : 0/0
 21997 ;;		On exit  : 0/0
 21998 ;;		Unchanged: 0/0
 21999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22004 ;;Total ram usage:        0 bytes
 22005 ;; Hardware stack levels used:    1
 22006 ;; Hardware stack levels required when called:    2
 22007 ;; This function calls:
 22008 ;;		Absolute function
 22009 ;;		_EUSART1_DefaultErrorHandler
 22010 ;;		_EUSART1_DefaultFramingErrorHandler
 22011 ;;		_EUSART1_DefaultOverrunErrorHandler
 22012 ;;		_EUSART1_RxDataHandler
 22013 ;; This function is called by:
 22014 ;;		_EUSART1_Initialize
 22015 ;;		_INTERRUPT_InterruptManager
 22016 ;; This function uses a non-reentrant model
 22017 ;;
 22018                           
 22019                           	psect	text113
 22020  00644A                     __ptext113:
 22021                           	opt callstack 0
 22022  00644A                     _EUSART1_Receive_ISR:
 22023                           	opt callstack 15
 22024                           
 22025                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 22026                           
 22027                           ; BSR set to: 1
 22028                           ;incstack = 0
 22029  00644A  0E40               	movlw	low _eusart1RxStatusBuffer
 22030  00644C  0101               	movlb	1	; () banked
 22031  00644E  25F8               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 22032  006450  6ED9               	movwf	fsr2l,c
 22033  006452  6ADA               	clrf	fsr2h,c
 22034  006454  0E02               	movlw	high _eusart1RxStatusBuffer
 22035  006456  22DA               	addwfc	fsr2h,f,c
 22036  006458  0E00               	movlw	0
 22037  00645A  6EDF               	movwf	indf2,c
 22038                           
 22039                           ; BSR set to: 1
 22040                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
 22041  00645C  A4AB               	btfss	4011,2,c	;volatile
 22042  00645E  D014               	goto	i2u1227_49
 22043                           
 22044                           ; BSR set to: 1
 22045                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 22046  006460  0E40               	movlw	low _eusart1RxStatusBuffer
 22047  006462  25F8               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 22048  006464  6ED9               	movwf	fsr2l,c
 22049  006466  6ADA               	clrf	fsr2h,c
 22050  006468  0E02               	movlw	high _eusart1RxStatusBuffer
 22051  00646A  22DA               	addwfc	fsr2h,f,c
 22052  00646C  0102               	movlb	2	; () banked
 22053  00646E  82DF               	bsf	indf2,1,c
 22054                           
 22055                           ; BSR set to: 2
 22056                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 22057  006470  D801               	call	i2u1227_48
 22058  006472  D00A               	goto	i2u1227_49
 22059  006474                     i2u1227_48:
 22060  006474  0005               	push	
 22061  006476  6EFA               	movwf	pclath,c
 22062  006478  0101               	movlb	1	; () banked
 22063  00647A  51EF               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 22064  00647C  6EFD               	movwf	tosl,c
 22065  00647E  51F0               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 22066  006480  6EFE               	movwf	tosh,c
 22067  006482  6AFF               	clrf	tosu,c
 22068  006484  50FA               	movf	pclath,w,c
 22069  006486  0012               	return		;indir
 22070  006488                     i2u1227_49:
 22071                           
 22072                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
 22073  006488  A2AB               	btfss	4011,1,c	;volatile
 22074  00648A  D015               	goto	i2u1229_49
 22075                           
 22076                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 22077  00648C  0E40               	movlw	low _eusart1RxStatusBuffer
 22078  00648E  0101               	movlb	1	; () banked
 22079  006490  25F8               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 22080  006492  6ED9               	movwf	fsr2l,c
 22081  006494  6ADA               	clrf	fsr2h,c
 22082  006496  0E02               	movlw	high _eusart1RxStatusBuffer
 22083  006498  22DA               	addwfc	fsr2h,f,c
 22084  00649A  0102               	movlb	2	; () banked
 22085  00649C  84DF               	bsf	indf2,2,c
 22086                           
 22087                           ; BSR set to: 2
 22088                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 22089  00649E  D801               	call	i2u1229_48
 22090  0064A0  D00A               	goto	i2u1229_49
 22091  0064A2                     i2u1229_48:
 22092  0064A2  0005               	push	
 22093  0064A4  6EFA               	movwf	pclath,c
 22094  0064A6  0101               	movlb	1	; () banked
 22095  0064A8  51ED               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 22096  0064AA  6EFD               	movwf	tosl,c
 22097  0064AC  51EE               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 22098  0064AE  6EFE               	movwf	tosh,c
 22099  0064B0  6AFF               	clrf	tosu,c
 22100  0064B2  50FA               	movf	pclath,w,c
 22101  0064B4  0012               	return		;indir
 22102  0064B6                     i2u1229_49:
 22103                           
 22104                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 22105  0064B6  0E40               	movlw	low _eusart1RxStatusBuffer
 22106  0064B8  0101               	movlb	1	; () banked
 22107  0064BA  25F8               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 22108  0064BC  6ED9               	movwf	fsr2l,c
 22109  0064BE  6ADA               	clrf	fsr2h,c
 22110  0064C0  0E02               	movlw	high _eusart1RxStatusBuffer
 22111  0064C2  22DA               	addwfc	fsr2h,f,c
 22112  0064C4  50DF               	movf	indf2,w,c
 22113  0064C6  B4D8               	btfsc	status,2,c
 22114  0064C8  D00B               	goto	i2l8643
 22115                           
 22116                           ; BSR set to: 1
 22117                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 22118  0064CA  D801               	call	i2u1231_48
 22119  0064CC  0012               	return	
 22120  0064CE                     i2u1231_48:
 22121  0064CE  0005               	push	
 22122  0064D0  6EFA               	movwf	pclath,c
 22123  0064D2  51EB               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 22124  0064D4  6EFD               	movwf	tosl,c
 22125  0064D6  51EC               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 22126  0064D8  6EFE               	movwf	tosh,c
 22127  0064DA  6AFF               	clrf	tosu,c
 22128  0064DC  50FA               	movf	pclath,w,c
 22129  0064DE  0012               	return		;indir
 22130  0064E0                     i2l8643:
 22131                           
 22132                           ; BSR set to: 1
 22133                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 22134  0064E0  EC03  F03A         	call	_EUSART1_RxDataHandler	;wreg free
 22135  0064E4  0012               	return		;funcret
 22136  0064E6                     __end_of_EUSART1_Receive_ISR:
 22137                           	opt callstack 0
 22138                           
 22139 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 22140 ;; Defined at:
 22141 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 22142 ;; Parameters:    Size  Location     Type
 22143 ;;		None
 22144 ;; Auto vars:     Size  Location     Type
 22145 ;;		None
 22146 ;; Return value:  Size  Location     Type
 22147 ;;                  1    wreg      void 
 22148 ;; Registers used:
 22149 ;;		None
 22150 ;; Tracked objects:
 22151 ;;		On entry : 0/0
 22152 ;;		On exit  : 0/0
 22153 ;;		Unchanged: 0/0
 22154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22159 ;;Total ram usage:        0 bytes
 22160 ;; Hardware stack levels used:    1
 22161 ;; This function calls:
 22162 ;;		Nothing
 22163 ;; This function is called by:
 22164 ;;		_EUSART1_Initialize
 22165 ;;		_EUSART1_Receive_ISR
 22166 ;; This function uses a non-reentrant model
 22167 ;;
 22168                           
 22169                           	psect	text114
 22170  00755A                     __ptext114:
 22171                           	opt callstack 0
 22172  00755A                     _EUSART1_DefaultOverrunErrorHandler:
 22173                           	opt callstack 16
 22174                           
 22175                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
 22176                           
 22177                           ;incstack = 0
 22178  00755A  98AB               	bcf	4011,4,c	;volatile
 22179                           
 22180                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
 22181  00755C  88AB               	bsf	4011,4,c	;volatile
 22182  00755E  0012               	return		;funcret
 22183  007560                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 22184                           	opt callstack 0
 22185                           
 22186 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 22187 ;; Defined at:
 22188 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 22189 ;; Parameters:    Size  Location     Type
 22190 ;;		None
 22191 ;; Auto vars:     Size  Location     Type
 22192 ;;		None
 22193 ;; Return value:  Size  Location     Type
 22194 ;;                  1    wreg      void 
 22195 ;; Registers used:
 22196 ;;		None
 22197 ;; Tracked objects:
 22198 ;;		On entry : 0/0
 22199 ;;		On exit  : 0/0
 22200 ;;		Unchanged: 0/0
 22201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22206 ;;Total ram usage:        0 bytes
 22207 ;; Hardware stack levels used:    1
 22208 ;; This function calls:
 22209 ;;		Nothing
 22210 ;; This function is called by:
 22211 ;;		_EUSART1_Initialize
 22212 ;;		_EUSART1_Receive_ISR
 22213 ;; This function uses a non-reentrant model
 22214 ;;
 22215                           
 22216                           	psect	text115
 22217  007574                     __ptext115:
 22218                           	opt callstack 0
 22219  007574                     _EUSART1_DefaultFramingErrorHandler:
 22220                           	opt callstack 16
 22221                           
 22222                           ;incstack = 0
 22223  007574  0012               	return		;funcret
 22224  007576                     __end_of_EUSART1_DefaultFramingErrorHandler:
 22225                           	opt callstack 0
 22226                           
 22227 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 22228 ;; Defined at:
 22229 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 22230 ;; Parameters:    Size  Location     Type
 22231 ;;		None
 22232 ;; Auto vars:     Size  Location     Type
 22233 ;;		None
 22234 ;; Return value:  Size  Location     Type
 22235 ;;                  1    wreg      void 
 22236 ;; Registers used:
 22237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22238 ;; Tracked objects:
 22239 ;;		On entry : 0/0
 22240 ;;		On exit  : 0/0
 22241 ;;		Unchanged: 0/0
 22242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22247 ;;Total ram usage:        0 bytes
 22248 ;; Hardware stack levels used:    1
 22249 ;; Hardware stack levels required when called:    1
 22250 ;; This function calls:
 22251 ;;		_EUSART1_RxDataHandler
 22252 ;; This function is called by:
 22253 ;;		_EUSART1_Initialize
 22254 ;;		_EUSART1_Receive_ISR
 22255 ;; This function uses a non-reentrant model
 22256 ;;
 22257                           
 22258                           	psect	text116
 22259  007560                     __ptext116:
 22260                           	opt callstack 0
 22261  007560                     _EUSART1_DefaultErrorHandler:
 22262                           	opt callstack 15
 22263                           
 22264                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 22265                           
 22266                           ;incstack = 0
 22267  007560  EC03  F03A         	call	_EUSART1_RxDataHandler	;wreg free
 22268  007564  0012               	return		;funcret
 22269  007566                     __end_of_EUSART1_DefaultErrorHandler:
 22270                           	opt callstack 0
 22271                           
 22272 ;; *************** function _EUSART1_RxDataHandler *****************
 22273 ;; Defined at:
 22274 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 22275 ;; Parameters:    Size  Location     Type
 22276 ;;		None
 22277 ;; Auto vars:     Size  Location     Type
 22278 ;;		None
 22279 ;; Return value:  Size  Location     Type
 22280 ;;                  1    wreg      void 
 22281 ;; Registers used:
 22282 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22283 ;; Tracked objects:
 22284 ;;		On entry : 0/0
 22285 ;;		On exit  : 0/0
 22286 ;;		Unchanged: 0/0
 22287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22292 ;;Total ram usage:        0 bytes
 22293 ;; Hardware stack levels used:    1
 22294 ;; This function calls:
 22295 ;;		Nothing
 22296 ;; This function is called by:
 22297 ;;		_EUSART1_Receive_ISR
 22298 ;;		_EUSART1_DefaultErrorHandler
 22299 ;; This function uses a non-reentrant model
 22300 ;;
 22301                           
 22302                           	psect	text117
 22303  007406                     __ptext117:
 22304                           	opt callstack 0
 22305  007406                     _EUSART1_RxDataHandler:
 22306                           	opt callstack 16
 22307                           
 22308                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 22309                           
 22310                           ;incstack = 0
 22311  007406  0E48               	movlw	low _eusart1RxBuffer
 22312  007408  0101               	movlb	1	; () banked
 22313  00740A  25F8               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 22314  00740C  6ED9               	movwf	fsr2l,c
 22315  00740E  6ADA               	clrf	fsr2h,c
 22316  007410  0E02               	movlw	high _eusart1RxBuffer
 22317  007412  22DA               	addwfc	fsr2h,f,c
 22318  007414  CFAE FFDF          	movff	4014,indf2	;volatile
 22319                           
 22320                           ; BSR set to: 1
 22321  007418  2BF8               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 22322                           
 22323                           ; BSR set to: 1
 22324                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 22325  00741A  0E07               	movlw	7
 22326  00741C  65F8               	cpfsgt	_eusart1RxHead& (0+255),b	;volatile
 22327  00741E  D002               	goto	i2l8301
 22328                           
 22329                           ; BSR set to: 1
 22330                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 22331  007420  0E00               	movlw	0
 22332  007422  6FF8               	movwf	_eusart1RxHead& (0+255),b	;volatile
 22333  007424                     i2l8301:
 22334                           
 22335                           ; BSR set to: 1
 22336                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 22337  007424  2BF6               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 22338                           
 22339                           ; BSR set to: 1
 22340  007426  0012               	return		;funcret
 22341  007428                     __end_of_EUSART1_RxDataHandler:
 22342                           	opt callstack 0
 22343                           
 22344                           	psect	text118
 22345  000000                     __ptext118:
 22346                           	opt callstack 0
 22347                           
 22348                           	psect	rparam
 22349  0000                     
 22350                           	psect	temp
 22351  00005F                     btemp:
 22352                           	opt callstack 0
 22353  00005F                     	ds	1
 22354  0000                     int$flags	set	btemp
 22355  0000                     wtemp8	set	btemp+1
 22356  0000                     ttemp5	set	btemp+1
 22357  0000                     ttemp6	set	btemp+4
 22358  0000                     ttemp7	set	btemp+8
 22359                           tosu	equ	0xFFF
 22360                           tosh	equ	0xFFE
 22361                           tosl	equ	0xFFD
 22362                           stkptr	equ	0xFFC
 22363                           pclatu	equ	0xFFB
 22364                           pclath	equ	0xFFA
 22365                           pcl	equ	0xFF9
 22366                           tblptru	equ	0xFF8
 22367                           tblptrh	equ	0xFF7
 22368                           tblptrl	equ	0xFF6
 22369                           tablat	equ	0xFF5
 22370                           prodh	equ	0xFF4
 22371                           prodl	equ	0xFF3
 22372                           indf0	equ	0xFEF
 22373                           postinc0	equ	0xFEE
 22374                           postdec0	equ	0xFED
 22375                           preinc0	equ	0xFEC
 22376                           plusw0	equ	0xFEB
 22377                           fsr0h	equ	0xFEA
 22378                           fsr0l	equ	0xFE9
 22379                           wreg	equ	0xFE8
 22380                           indf1	equ	0xFE7
 22381                           postinc1	equ	0xFE6
 22382                           postdec1	equ	0xFE5
 22383                           preinc1	equ	0xFE4
 22384                           plusw1	equ	0xFE3
 22385                           fsr1h	equ	0xFE2
 22386                           fsr1l	equ	0xFE1
 22387                           bsr	equ	0xFE0
 22388                           indf2	equ	0xFDF
 22389                           postinc2	equ	0xFDE
 22390                           postdec2	equ	0xFDD
 22391                           preinc2	equ	0xFDC
 22392                           plusw2	equ	0xFDB
 22393                           fsr2h	equ	0xFDA
 22394                           fsr2l	equ	0xFD9
 22395                           status	equ	0xFD8


Data Sizes:
    Strings     248
    Constant    0
    Data        35
    BSS         225
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    156     160
    BANK1           256    215     256
    BANK2           256      0     215
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_12(CODE[61]), STR_11(CODE[26]), STR_4(CODE[34]), STR_3(CODE[31]), 
		 -> STR_2(CODE[34]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_9(CODE[6]), STR_7(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> WriteTempHumidToDisplay@printable(BANK1[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> WriteTempHumidToDisplay@printable(BANK1[6]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    S2085_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> WriteTempHumidToDisplay@printable(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> WriteTempHumidToDisplay@printable(BANK1[6]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_12(CODE[61]), STR_11(CODE[26]), STR_9(CODE[6]), STR_7(CODE[6]), 
		 -> STR_4(CODE[34]), STR_3(CODE[31]), STR_2(CODE[34]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 61
		 -> STR_12(CODE[61]), STR_11(CODE[26]), STR_9(CODE[6]), STR_7(CODE[6]), 
		 -> STR_4(CODE[34]), STR_3(CODE[31]), STR_2(CODE[34]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 61
		 -> STR_12(CODE[61]), STR_11(CODE[26]), STR_9(CODE[6]), STR_7(CODE[6]), 
		 -> STR_4(CODE[34]), STR_3(CODE[31]), STR_2(CODE[34]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    ConvertFloatToByteArray@output	PTR unsigned char  size(2) Largest target is 2
		 -> LogData@humidityArray(BANK0[2]), LogData@temperatureArray(BANK0[2]), 

    I2cWriteSerial@writeData	PTR unsigned char  size(2) Largest target is 11
		 -> VerifyLogging@location(BANK0[2]), LogData@lastSuccesfulWriteLocation(BANK0[4]), LogData@writeArray(BANK0[6]), LogData@writeAttemptLocation(BANK0[4]), 
		 -> firstLocation(BANK2[2]), STR_10(CODE[4]), STR_8(CODE[4]), WriteTempHumidToDisplay@printable(BANK1[6]), 
		 -> STR_6(CODE[11]), STR_5(CODE[8]), readHumidity(BANK1[1]), readTemprature(BANK1[1]), 
		 -> DisplaySetCursor@command(BANK1[2]), resetEeprom(BANK2[4]), Timer4Interrupt@location(BANK0[2]), customSign1(BANK2[11]), 
		 -> customSign0(BANK2[11]), displayInitialize(BANK2[5]), 

    I2cReadSerial@readData	PTR unsigned char  size(2) Largest target is 4
		 -> VerifyLogging@output(BANK0[4]), LogData@location(BANK0[2]), ReadHumidity@result(BANK1[2]), ReadTemperature@result(BANK1[2]), 
		 -> Timer4Interrupt@output(BANK0[4]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer4Interrupt(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer4Interrupt(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer2Interrupt(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer2Interrupt(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _ConvertByteArrayToFloat->i2___xxtofl
    _Timer2Interrupt->_LogData
    _Timer2Interrupt->_VerifyLogging
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_efgtoa
    i2_efgtoa->i2___flge
    i2_tolower->i2_isupper
    i2_floorf->i2___fldiv
    i2___flge->i2___flmul
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_abs->i2___aomod
    i2_atoi->i2_isspace
    _ConvertFloatToByteArray->i2___fltol
    i2___xxtofl->i2___lmul
    i2___fltol->i2___flmul
    i2___flsub->i2___flmul
    i2___flmul->i2___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_CallBack->_Timer4Interrupt
    _Timer4Interrupt->i2_I2cWriteSerial
    _Timer2Interrupt->_LogData
    _VerifyLogging->i2_I2cWriteSerial
    _LogData->i2_ReadHumidity
    _LogData->i2_ReadTemperature
    i2_ReadTemperature->i2_I2cWriteSerial
    i2_ReadHumidity->i2_I2cWriteSerial
    i2_I2cWriteSerial->i2_printf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_efgtoa

Critical Paths under _main in BANK1

    _main->_WriteTempHumidToDisplay
    _WriteTempHumidToDisplay->_ReadHumidity
    _WriteTempHumidToDisplay->_ReadTemperature
    _sprintf->_vfprintf
    _ReadTemperature->_I2cWriteSerial
    _ReadHumidity->_I2cWriteSerial
    ___xxtofl->___lmul
    _DisplaySetCursor->_I2cWriteSerial
    _I2cWriteSerial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _atoi->_isspace
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  280676
                                            213 BANK1      2     2      0
                 _EUSART1_Initialize
                     _I2cWriteSerial
                           _I2c_init
                  _SYSTEM_Initialize
                    _TMR2_Initialize
           _TMR2_SetInterruptHandler
                    _TMR4_Initialize
           _TMR4_SetInterruptHandler
            _WriteTempHumidToDisplay
                             _printf
 ---------------------------------------------------------------------------------
 (1) _WriteTempHumidToDisplay                             10    10      0  205176
                                            203 BANK1     10    10      0
                   _DisplaySetCursor
                     _I2cWriteSerial
                       _ReadHumidity
                    _ReadTemperature
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   35501
                                            169 BANK1     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _ReadTemperature                                     20    16      4   47582
                                            183 BANK1     20    16      4
                      _I2cReadSerial
                     _I2cWriteSerial
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _ReadHumidity                                        20    16      4   45348
                                            183 BANK1     20    16      4
                      _I2cReadSerial
                     _I2cWriteSerial
                            ___fladd
                            ___fldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     624
                                             12 BANK1     14    10      4
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (3) _I2cReadSerial                                       11     8      3     883
                                              0 BANK1     11     8      3
 ---------------------------------------------------------------------------------
 (2) _DisplaySetCursor                                     4     3      1   38499
                                            183 BANK1      4     3      1
                     _I2cWriteSerial
 ---------------------------------------------------------------------------------
 (3) _I2cWriteSerial                                       8     5      3   38056
                                            175 BANK1      8     5      3
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2   35397
                                            169 BANK1      6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34973
                                            161 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   34332
                                            131 BANK1     30    24      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 BANK1     11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23565
                                             63 BANK1     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 BANK1      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 BANK1     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     481
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3393
                                             51 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2818
                                              0 BANK1     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2604
                                             26 BANK1     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             51 BANK1     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2411
                                              0 BANK1     25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5174
                                             29 BANK1     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3525
                                             18 BANK1     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1301
                                             11 BANK1      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     900
                                              2 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      66
                                              1 BANK1      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      44
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK1      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK1     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK1     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              7 BANK1     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 BANK1      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     838
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2c_init                                             1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                         12    12      0  208515
                                            144 BANK0     12    12      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR4_ISR                                            0     0      0   51221
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR4_CallBack                                       0     0      0   51221
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                    _Timer4Interrupt *
 ---------------------------------------------------------------------------------
 (16) _Timer4Interrupt                                    20    20      0   51221
                                             96 BANK0     20    20      0
            _ConvertByteArrayToFloat
                    i2_I2cReadSerial
                   i2_I2cWriteSerial
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) _ConvertByteArrayToFloat                            13     9      4    4521
                                             26 COMRAM    13     9      4
                          i2___fladd
                          i2___fldiv
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (16) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR2_ISR                                            0     0      0  157294
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR2_CallBack                                       0     0      0  157294
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                    _Timer2Interrupt *
 ---------------------------------------------------------------------------------
 (16) _Timer2Interrupt                                     0     0      0  157294
                            _LogData
                      _VerifyLogging
 ---------------------------------------------------------------------------------
 (17) _VerifyLogging                                       7     7      0   46472
                                             93 COMRAM     1     1      0
                                             96 BANK0      6     6      0
                    i2_I2cReadSerial
                   i2_I2cWriteSerial
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) _LogData                                            29    29      0  110822
                                             93 COMRAM     1     1      0
                                            116 BANK0     28    28      0
            _ConvertFloatToByteArray
                    i2_I2cReadSerial
                   i2_I2cWriteSerial
                     i2_ReadHumidity
                  i2_ReadTemperature
                           i2_printf
 ---------------------------------------------------------------------------------
 (18) i2_ReadTemperature                                  20    16      4   29959
                                             96 BANK0     20    16      4
                    i2_I2cReadSerial
                   i2_I2cWriteSerial
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (18) i2_ReadHumidity                                     20    16      4   28273
                                             96 BANK0     20    16      4
                    i2_I2cReadSerial
                   i2_I2cWriteSerial
                          i2___fladd
                          i2___fldiv
                           i2___lmul
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (19) i2___lmul                                           12     4      8     144
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (17) i2_I2cWriteSerial                                    8     5      3   23221
                                             88 BANK0      8     5      3
                           i2_printf
 ---------------------------------------------------------------------------------
 (17) i2_printf                                           12     4      8   22618
                                             76 BANK0     12     4      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (18) i2_vfprintf                                          8     2      6   22426
                                             85 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) i2_vfpfcnvrt                                        48    42      6   22200
                                             75 COMRAM    10     4      6
                                             56 BANK0     20    20      0
                             i2_atoi
                             i2_dtoa
                           i2_efgtoa
                            i2_fputc
                          i2_isdigit
                          i2_isupper
                          i2_strncmp
                          i2_tolower
 ---------------------------------------------------------------------------------
 (20) i2_strncmp                                          11     5      6     303
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (20) i2_efgtoa                                           68    61      7   15706
                                             63 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                          i2___awdiv
                          i2___awmod
                          i2___fladd
                          i2___fldiv
                           i2___fleq
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                    i2___fpclassifyf
                           i2_floorf
                          i2_isupper
                              i2_pad
                           i2_strcpy
                          i2_tolower
 ---------------------------------------------------------------------------------
 (20) i2_tolower                                           8     6      2     368
                                              6 COMRAM     8     6      2
                          i2_isupper
 ---------------------------------------------------------------------------------
 (21) i2_isupper                                           6     4      2     152
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (21) i2_strcpy                                           10     6      4     356
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (21) i2_floorf                                           20    16      4     390
                                             25 COMRAM    20    16      4
                          i2___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (21) i2___fpclassifyf                                    14    10      4     187
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (21) i2___flneg                                           4     0      4      71
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (21) i2___flge                                           12     4      8     338
                                             51 COMRAM    12     4      8
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (21) i2___fleq                                           12     4      8     194
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (21) i2___fldiv                                          25    17      8    1537
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (21) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (21) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (20) i2_dtoa                                             36    26     10    3174
                                             29 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (21) i2_pad                                              11     5      6    1875
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (22) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (22) i2_fputs                                             7     3      4     701
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (20) i2_fputc                                             9     5      4     500
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (21) i2_putch                                             1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (22) i2_EUSART1_Write                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (21) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (21) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (21) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (20) i2_atoi                                             15    13      2     726
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (21) i2_isspace                                           7     5      2      94
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (20) i2_isdigit                                           6     4      2      74
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (21) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2_I2cReadSerial                                    11     8      3     491
                                              0 COMRAM    11     8      3
 ---------------------------------------------------------------------------------
 (18) _ConvertFloatToByteArray                            11     5      6    5497
                                             61 COMRAM    11     5      6
                          i2___flmul
                          i2___flsub
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (18) i2___xxtofl                                         14    10      4     452
                                             12 COMRAM    14    10      4
                           i2___lmul (ARG)
 ---------------------------------------------------------------------------------
 (21) i2___fltol                                          10     6      4     333
                                             51 COMRAM    10     6      4
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (21) i2___flsub                                           8     0      8    2445
                                             51 COMRAM     8     0      8
                          i2___fladd
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (22) i2___fladd                                          16     8      8    2244
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (21) i2___flmul                                          25    17      8    1830
                                             26 COMRAM    25    17      8
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 22
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _I2cWriteSerial
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lmul (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lmul (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _I2c_init
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _TMR2_Initialize
     _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR4_Initialize
     _TMR4_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _WriteTempHumidToDisplay
     _DisplaySetCursor
       _I2cWriteSerial
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lmul (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lmul (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lmul (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _EUSART1_Write
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
     _I2cWriteSerial
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lmul (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lmul (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _EUSART1_Write
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _ReadHumidity
       _I2cReadSerial
       _I2cWriteSerial
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lmul (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lmul (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lmul (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _EUSART1_Write
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
       ___fladd
       ___fldiv
       ___lmul
       ___xxtofl
         ___lmul (ARG)
     _ReadTemperature
       _I2cReadSerial
       _I2cWriteSerial
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lmul (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lmul (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lmul (ARG)
                 ___fltol
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _EUSART1_Write
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
       ___fladd
       ___fldiv
       ___flmul
         ___xxtofl (ARG)
           ___lmul (ARG)
       ___xxtofl
         ___lmul (ARG)
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lmul (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lmul (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lmul (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lmul (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _Timer2Interrupt *
         _LogData
           _ConvertFloatToByteArray
             i2___flmul
               i2___xxtofl (ARG)
                 i2___lmul (ARG)
             i2___flsub
               i2___fladd
               i2___flmul (ARG)
                 i2___xxtofl (ARG)
                   i2___lmul (ARG)
               i2___xxtofl (ARG)
                 i2___lmul (ARG)
             i2___fltol
               i2___flmul (ARG)
                 i2___xxtofl (ARG)
                   i2___lmul (ARG)
             i2___xxtofl
               i2___lmul (ARG)
           i2_I2cReadSerial
           i2_I2cWriteSerial
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_EUSART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_EUSART1_Write
                       i2_strlen
                   i2_efgtoa
                     i2___awdiv
                     i2___awmod
                     i2___fladd
                     i2___fldiv
                     i2___fleq
                     i2___flge
                       i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2___lmul (ARG)
                     i2___flmul
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                     i2___flneg
                     i2___flsub
                       i2___fladd
                       i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2___lmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                     i2___fltol
                       i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2___lmul (ARG)
                     i2___fpclassifyf
                     i2_floorf
                       i2___fldiv (ARG)
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_EUSART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_EUSART1_Write
                       i2_strlen
                     i2_strcpy
                     i2_tolower
                       i2_isupper
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_isdigit
                   i2_isupper
                   i2_strncmp
                   i2_tolower
                     i2_isupper
           i2_ReadHumidity
             i2_I2cReadSerial
             i2_I2cWriteSerial
               i2_printf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_EUSART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_EUSART1_Write
                         i2_strlen
                     i2_efgtoa
                       i2___awdiv
                       i2___awmod
                       i2___fladd
                       i2___fldiv
                       i2___fleq
                       i2___flge
                         i2___flmul (ARG)
                           i2___xxtofl (ARG)
                             i2___lmul (ARG)
                       i2___flmul
                         i2___xxtofl (ARG)
                           i2___lmul (ARG)
                       i2___flneg
                       i2___flsub
                         i2___fladd
                         i2___flmul (ARG)
                           i2___xxtofl (ARG)
                             i2___lmul (ARG)
                         i2___xxtofl (ARG)
                           i2___lmul (ARG)
                       i2___fltol
                         i2___flmul (ARG)
                           i2___xxtofl (ARG)
                             i2___lmul (ARG)
                       i2___fpclassifyf
                       i2_floorf
                         i2___fldiv (ARG)
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_EUSART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_EUSART1_Write
                         i2_strlen
                       i2_strcpy
                       i2_tolower
                         i2_isupper
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                     i2_isdigit
                     i2_isupper
                     i2_strncmp
                     i2_tolower
                       i2_isupper
             i2___fladd
             i2___fldiv
             i2___lmul
             i2___xxtofl
               i2___lmul (ARG)
           i2_ReadTemperature
             i2_I2cReadSerial
             i2_I2cWriteSerial
               i2_printf
                 i2_vfprintf
                   i2_vfpfcnvrt
                     i2_atoi
                       i2___wmul
                       i2_isdigit
                       i2_isspace
                     i2_dtoa
                       i2___aodiv
                       i2___aomod
                       i2_abs
                         i2___aomod (ARG)
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_EUSART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_EUSART1_Write
                         i2_strlen
                     i2_efgtoa
                       i2___awdiv
                       i2___awmod
                       i2___fladd
                       i2___fldiv
                       i2___fleq
                       i2___flge
                         i2___flmul (ARG)
                           i2___xxtofl (ARG)
                             i2___lmul (ARG)
                       i2___flmul
                         i2___xxtofl (ARG)
                           i2___lmul (ARG)
                       i2___flneg
                       i2___flsub
                         i2___fladd
                         i2___flmul (ARG)
                           i2___xxtofl (ARG)
                             i2___lmul (ARG)
                         i2___xxtofl (ARG)
                           i2___lmul (ARG)
                       i2___fltol
                         i2___flmul (ARG)
                           i2___xxtofl (ARG)
                             i2___lmul (ARG)
                       i2___fpclassifyf
                       i2_floorf
                         i2___fldiv (ARG)
                       i2_isupper
                       i2_pad
                         i2_fputc
                           i2_putch
                             i2_EUSART1_Write
                         i2_fputs
                           i2_fputc
                             i2_putch
                               i2_EUSART1_Write
                         i2_strlen
                       i2_strcpy
                       i2_tolower
                         i2_isupper
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                     i2_isdigit
                     i2_isupper
                     i2_strncmp
                     i2_tolower
                       i2_isupper
             i2___fladd
             i2___fldiv
             i2___flmul
               i2___xxtofl (ARG)
                 i2___lmul (ARG)
             i2___xxtofl
               i2___lmul (ARG)
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_EUSART1_Write
                     i2_strlen
                 i2_efgtoa
                   i2___awdiv
                   i2___awmod
                   i2___fladd
                   i2___fldiv
                   i2___fleq
                   i2___flge
                     i2___flmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                   i2___flmul
                     i2___xxtofl (ARG)
                       i2___lmul (ARG)
                   i2___flneg
                   i2___flsub
                     i2___fladd
                     i2___flmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                     i2___xxtofl (ARG)
                       i2___lmul (ARG)
                   i2___fltol
                     i2___flmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                   i2___fpclassifyf
                   i2_floorf
                     i2___fldiv (ARG)
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_EUSART1_Write
                     i2_strlen
                   i2_strcpy
                   i2_tolower
                     i2_isupper
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
                 i2_isdigit
                 i2_isupper
                 i2_strncmp
                 i2_tolower
                   i2_isupper
         _VerifyLogging
           i2_I2cReadSerial
           i2_I2cWriteSerial
             i2_printf
               i2_vfprintf
                 i2_vfpfcnvrt
                   i2_atoi
                     i2___wmul
                     i2_isdigit
                     i2_isspace
                   i2_dtoa
                     i2___aodiv
                     i2___aomod
                     i2_abs
                       i2___aomod (ARG)
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_EUSART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_EUSART1_Write
                       i2_strlen
                   i2_efgtoa
                     i2___awdiv
                     i2___awmod
                     i2___fladd
                     i2___fldiv
                     i2___fleq
                     i2___flge
                       i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2___lmul (ARG)
                     i2___flmul
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                     i2___flneg
                     i2___flsub
                       i2___fladd
                       i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2___lmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                     i2___fltol
                       i2___flmul (ARG)
                         i2___xxtofl (ARG)
                           i2___lmul (ARG)
                     i2___fpclassifyf
                     i2_floorf
                       i2___fldiv (ARG)
                     i2_isupper
                     i2_pad
                       i2_fputc
                         i2_putch
                           i2_EUSART1_Write
                       i2_fputs
                         i2_fputc
                           i2_putch
                             i2_EUSART1_Write
                       i2_strlen
                     i2_strcpy
                     i2_tolower
                       i2_isupper
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_isdigit
                   i2_isupper
                   i2_strncmp
                   i2_tolower
                     i2_isupper
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_EUSART1_Write
                     i2_strlen
                 i2_efgtoa
                   i2___awdiv
                   i2___awmod
                   i2___fladd
                   i2___fldiv
                   i2___fleq
                   i2___flge
                     i2___flmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                   i2___flmul
                     i2___xxtofl (ARG)
                       i2___lmul (ARG)
                   i2___flneg
                   i2___flsub
                     i2___fladd
                     i2___flmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                     i2___xxtofl (ARG)
                       i2___lmul (ARG)
                   i2___fltol
                     i2___flmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                   i2___fpclassifyf
                   i2_floorf
                     i2___fldiv (ARG)
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_EUSART1_Write
                     i2_strlen
                   i2_strcpy
                   i2_tolower
                     i2_isupper
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
                 i2_isdigit
                 i2_isupper
                 i2_strncmp
                 i2_tolower
                   i2_isupper
   _TMR4_ISR *
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _Timer4Interrupt *
         _ConvertByteArrayToFloat
           i2___fladd
           i2___fldiv
           i2___xxtofl
             i2___lmul (ARG)
         i2_I2cReadSerial
         i2_I2cWriteSerial
           i2_printf
             i2_vfprintf
               i2_vfpfcnvrt
                 i2_atoi
                   i2___wmul
                   i2_isdigit
                   i2_isspace
                 i2_dtoa
                   i2___aodiv
                   i2___aomod
                   i2_abs
                     i2___aomod (ARG)
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_EUSART1_Write
                     i2_strlen
                 i2_efgtoa
                   i2___awdiv
                   i2___awmod
                   i2___fladd
                   i2___fldiv
                   i2___fleq
                   i2___flge
                     i2___flmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                   i2___flmul
                     i2___xxtofl (ARG)
                       i2___lmul (ARG)
                   i2___flneg
                   i2___flsub
                     i2___fladd
                     i2___flmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                     i2___xxtofl (ARG)
                       i2___lmul (ARG)
                   i2___fltol
                     i2___flmul (ARG)
                       i2___xxtofl (ARG)
                         i2___lmul (ARG)
                   i2___fpclassifyf
                   i2_floorf
                     i2___fldiv (ARG)
                   i2_isupper
                   i2_pad
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                     i2_fputs
                       i2_fputc
                         i2_putch
                           i2_EUSART1_Write
                     i2_strlen
                   i2_strcpy
                   i2_tolower
                     i2_isupper
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
                 i2_isdigit
                 i2_isupper
                 i2_strncmp
                 i2_tolower
                   i2_isupper
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_dtoa
                 i2___aodiv
                 i2___aomod
                 i2_abs
                   i2___aomod (ARG)
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
               i2_efgtoa
                 i2___awdiv
                 i2___awmod
                 i2___fladd
                 i2___fldiv
                 i2___fleq
                 i2___flge
                   i2___flmul (ARG)
                     i2___xxtofl (ARG)
                       i2___lmul (ARG)
                 i2___flmul
                   i2___xxtofl (ARG)
                     i2___lmul (ARG)
                 i2___flneg
                 i2___flsub
                   i2___fladd
                   i2___flmul (ARG)
                     i2___xxtofl (ARG)
                       i2___lmul (ARG)
                   i2___xxtofl (ARG)
                     i2___lmul (ARG)
                 i2___fltol
                   i2___flmul (ARG)
                     i2___xxtofl (ARG)
                       i2___lmul (ARG)
                 i2___fpclassifyf
                 i2_floorf
                   i2___fldiv (ARG)
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
                 i2_strcpy
                 i2_tolower
                   i2_isupper
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_isdigit
               i2_isupper
               i2_strncmp
               i2_tolower
                 i2_isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D7       9       84.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D7     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9C      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2D5      12        0.0%
DATA                 0      0     2D5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Oct 22 10:00:18 2019

              __end_of_TMR2_SetInterruptHandler 751E                        _eusart1TxBufferRemaining 01F9  
                                  ___fldiv@aexp 0118                                    ___fldiv@bexp 0117  
                                  ___fldiv@sign 0110                                              l26 74E4  
                                  ___awdiv@sign 0105                             ___wmul@multiplicand 0102  
                     ??_ConvertFloatToByteArray 0044                         i2ReadTemperature@result 00CA  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                                             l159 7002  
                                           l511 66A6                                             l505 6680  
                                           l610 3F5A                                             l608 3F52  
                                           l472 61EE                                             l481 6242  
                                           l482 6244                                             l483 6246  
                                           l477 6202                                             l469 61DC  
                                           l478 6204                                             l487 6264  
                                           l664 1DD0                                             l496 6638  
                                           l690 20AE                                             l499 6640  
                                           l597 63DE                                    __CFG_CPB$OFF 000000  
                                           _PR2 000FBB                                             _PR4 000F52  
                                  __CFG_CPD$OFF 000000                              i2___aodiv@quotient 0013  
                                   i2___fladd@a 0005                                     i2___fladd@b 0001  
                                           _abs 7096                                             _pad 63AC  
                                   i2___fldiv@a 0005                                     i2___fldiv@b 0001  
                             ?i2_I2cWriteSerial 00B8                                    ___awmod@sign 0105  
                                    i2___xxtofl 5064                                 _TMR2_Initialize 7428  
                                           tosl 000FFD                                             wreg 000FE8  
                                   i2___flmul@a 001F                                     i2___flmul@b 001B  
                                    _TXSTA1bits 000FAC                             __end_ofi2_vfpfcnvrt 2D0C  
                                   i2___flsub@a 0038                                     i2___flsub@b 0034  
                                  ___flmul@aexp 012B                                    ___flmul@bexp 012C  
                                  ___flmul@sign 0126                                    ___flmul@temp 0131  
                                  ___flmul@prod 012D                              ??i2_I2cWriteSerial 00BB  
                                  ___fltol@exp1 0109                WriteTempHumidToDisplay@printable 01CB  
                                          l1021 5A30                                            ?_abs 0112  
                                          l1301 35C8                                            l1310 362E  
                                          l1311 362A                                            l1411 4F62  
                                          l1340 3B40                                            l1351 3BAE  
                                          l1352 3BAA                                            l1442 70C0  
                                          l1370 2D8E                                            l1418 4FE0  
                                          l1380 2FA2                                            l1285 34F6  
                                          l1286 34D4                                            l1473 4B3A  
                                          l1387 302C                                            l1379 2FA6  
                                          l1485 4488                                            l1569 6E4E  
                                          l6111 6284                                            l7001 4C46  
                                          l5241 7022                                            l5225 6FF0  
                                          l7005 4C6C                                            l7021 531C  
                                          ?_pad 0112                                            l5239 7020  
                                          l7103 3AA0                                            l7041 53CE  
                                          l7033 5392                                            l7025 5336  
                                          l7017 52F8                                            l7121 3B18  
                                          l7113 3AF0                                            l7027 534A  
                                          l7037 53A8                                            l7133 3B56  
                                          l7061 39FE                                            l7213 2D7A  
                                          l8013 27F6                                            l7127 3B3E  
                                          l7223 2DAC                                            l7215 2D7E  
                                          l8023 2840                                            l7081 3A3E  
                                          l7057 39FA                                            l7163 3C16  
                                          l7139 3B74                                            l7411 67C6  
                                          l7403 6774                                            l7307 304A  
                                          l6611 344C                                            l6603 342C  
                                          l8019 2834                                            l7341 6898  
                                          l7333 687A                                            l7173 3C4C  
                                          l7077 3A3A                                            l8029 2858  
                                          l8141 6C1C                                            l6543 6FBC  
                                          l6551 722A                                            l7351 68B8  
                                          l7327 686A                                            l7175 3C4E  
                                          l7167 3C40                                            l7159 3BF2  
                                          l7095 3A88                                            l7407 67A8  
                                          l7423 5A04                                            l7271 2F6C  
                                          l8143 6C42                                            l6553 7230  
                                          l7089 3A72                                            l7433 5A68  
                                          l7265 2F4E                                            l7441 71AE  
                                          l6705 35EC                                            l6721 360C  
                                          l6641 3488                                            l7601 1B1C  
                                          l6547 6FD4                                            l7515 3F36  
                                          l7339 6890                                            l7355 68C2  
                                          l7371 6A74                                            l7427 5A1A  
                                          l7419 59D0                                            l7291 2FEA  
                                          l7195 2D3A                                            l6715 3602  
                                          l7451 5CF6                                            l7611 1B88  
                                          l8323 6698                                            l8307 661E  
                                          l8403 6BD6                                            l7533 3F84  
                                          l7381 6A96                                            l7197 2D3E  
                                          l6741 3674                                            l6653 34E2  
                                          l7701 1E6E                                            l7613 1BA0  
                                          l8317 6650                                            l8325 669C  
                                          l8421 4F96                                            l8413 4F72  
                                          l7543 407E                                            l7359 68D0  
                                          l7391 6AB8                                            l7375 6A80  
                                          l7295 3008                                            l7199 2D4E  
                                          l6655 34E6                                            l6575 33E0  
                                          l7471 5D50                                            l6903 5BC0  
                                          l7711 1EA8                                            l7615 1BAA  
                                          l8431 5006                                            l8423 4FA2  
                                          l7529 3F74                                            l6753 36A2  
                                          l7705 1E7E                                            l8433 5012  
                                          l8425 4FC8                                            l7563 40E4  
                                          l7395 6AC6                                            l7387 6AAE  
                                          l7379 6A8E                                            l6755 36A4  
                                          l6579 33E4                                            l7467 5D40  
                                          l6915 6CC8                                            l7803 2298  
                                          l7643 1C9C                                            l7619 1BD2  
                                          l8419 4F90                                            l6749 369A  
                                          l6677 353C                                            l6669 351A  
                                          l7485 5D80                                            l7477 5D58  
                                          l6909 5C00                                            l6933 43E8  
                                          l7821 22EE                                            l7741 20A6  
                                          l7733 204E                                            l7653 1D62  
                                          l7629 1C3E                                            l7637 1C58  
                                          l7581 1AD8                                            l7567 40FC  
                                          l6679 3540                                            l6687 3552  
                                          l6599 3428                                            l7479 5D64  
                                          l6951 4516                                            l6943 44AA  
                                          l7831 2346                                            l7743 20C8  
                                          l7719 1FA0                                            l7647 1CD6  
                                          l8527 7176                                            l7497 6F6A  
                                          l6873 63D6                                            l6697 35B8  
                                          l7841 2372                                            l7665 1DB8  
                                          l7649 1D26                                            l7593 1B06  
                                          l8377 61C8                                            l8449 5052  
                                          l6883 642E                                            l6875 63E8  
                                          l6947 44E8                                            l7819 22E4  
                                          l7755 214A                                            l7683 1E28  
                                          l7675 1DE0                                            l8395 6250  
                                          l6973 4B72                                            l6869 63C6  
                                          l7685 1E2C                                            l7669 1DDA  
                                          l7917 609E                                            l7871 4A0A  
                                          l6879 6402                                            l7767 2178  
                                          l7775 2198                                            l7783 21BC  
                                          l7791 2256                                            l7695 1E4A  
                                          l7919 60AC                                            l8399 6BC2  
                                          l8727 6052                                            l7881 4A58  
                                          l7873 4A0E                                            l6985 4BC0  
                                          l7857 23D2                                            l7891 4A76  
                                          l6987 4BD4                                            l6979 4B9A  
                                          l6899 5BB6                                            l7955 24D6  
                                          l7893 4AA0                                            l6997 4C30  
                                          l7957 24F4                                            l7887 4A68  
                                          l7975 25E4                                            l7959 2502  
                                          l7897 4AD8                                            l7889 4A70  
                                          l7993 26F8                                            l7985 269A  
                                          l7997 2722                                            STR_1 10BB  
                                          STR_2 103E                                            STR_3 1082  
                                          STR_4 1060                                            STR_5 10D4  
                                          STR_6 10C9                                            STR_7 10DC  
                                          STR_8 10F2                                            STR_9 10DC  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u9120 3680  
                                          u9040 3610                                            u9060 3624  
                                          u9420 5BF8                                            u9500 43D6  
                                          u7910 627C                                            u9430 5BFA  
                                          u9415 5BDA                                            u9600 7128  
                                          u9360 70A6                                            u9440 6D04  
                                          u7930 62C4                                            u9370 5B7C  
                                          u9540 4468                                            u9460 6E34  
                                          u9525 4400                                            u9710 534E  
                                          u8910 34FE                                            u9526 4406  
                                          u8750 70F4                                            u9470 6E36  
                                          u9631 4BA0                                            u9375 5B70  
                                          u9527 4414                                            u9447 6CFA  
                                          u9560 44C8                                            u8760 70F6  
                                          u9545 445E                                            u9650 4BD8  
                                          u9490 43B6                                            u9900 3BA4  
                                          u8860 34AA                                            u9565 44BE  
                                          u9590 7126                                            u8870 34BA  
                                          u9495 43AC                                            u8880 34BC  
                                          u9940 3C00                                            u9950 3C24  
                                          _TMR2 000FBC                                            _TMR4 000F53  
                                          _WPUB 000F61                                    LogData@F6240 0250  
                                  LogData@F6234 025E                                    LogData@F6242 025A  
                                 _EUSART1_Write 6FEC                                    i2___flge@ff1 0034  
                                  i2___flge@ff2 0038                                    i2___fleq@ff1 0001  
                                  i2___fleq@ff2 0005                                            abs@a 0112  
                                          _dbuf 0264                                            _atoi 49F6  
                                          _main 5FC2                                            _dtoa 3EDE  
                                          _prec 01DF                                            _nout 01DB  
                                          pad@i 0119                                            pad@p 0116  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 011B  
                                          fsr2l 000FD9                                            btemp 005F  
                                  i2___flneg@f1 0001                                   __CFG_BORV$190 000000  
                                 ___fpclassifyf 5B3C                                     i2_atoi$2041 0010  
                                   i2_atoi$2042 0014                                     i2_atoi$2043 0012  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00BE                                   __CFG_IESO$OFF 000000  
                                  i2___fltol@f1 0034                                 ___fldiv@new_exp 0111  
                               __end_ofi2_fputc 63AC                                 __end_ofi2_fputs 705E  
                              ??_I2cWriteSerial 01B2                                 __end_ofi2_putch 755A  
                                  _tolower$2163 010C                                     i2_dtoa$1514 0030  
                    ??_TMR4_SetInterruptHandler 0102                                      i2efgtoa@fp 0040  
                                    i2efgtoa@ne 0076                                      i2efgtoa@pp 0072  
                                    i2efgtoa@ou 0060                                    ___param_bank 000000  
                               __end_of_LogData 4882                   ConvertFloatToByteArray@output 0042  
                      __size_ofi2_EUSART1_Write 0038                                __end_of_I2c_init 74D8  
                                         ??_abs 0114                                           ??_pad 0118  
                                    i2_vfprintf 6C60                        __size_ofi2___fpclassifyf 00CC  
                __size_of_OSCILLATOR_Initialize 0012                                   ?_ReadHumidity 01B7  
                 __end_of_OSCILLATOR_Initialize 74EA                           _eusart1RxStatusBuffer 0240  
                                 ___fltol@sign1 0108                                 __end_of___aodiv 4C8E  
                                         ?_atoi 0107                                 __end_of___fladd 36C0  
                                         ?_main 0001                                           ?_dtoa 011D  
                               __end_of___aomod 53F0                                 __end_of___fldiv 3C56  
                               __end_of___awdiv 68DA                                 __end_of___flneg 71C0  
                                         STR_10 10F2                                           STR_11 10A1  
                                         STR_12 1001                                           STR_21 10F6  
                                         STR_13 10E2                                           STR_14 10EA  
                                         STR_23 10F6                                           STR_17 10E6  
                                         STR_18 10EE                                 __end_of___awmod 6AD0  
                               __end_of___flmul 3060                                 __end_of___flsub 6EEC  
                               __end_of___fltol 5D92                        i2ReadHumidity@resultWord 00CC  
                                         u10040 2D9A                                           u10130 2FF8  
                                         u10050 2F10                                           u10300 67C2  
                                         u10140 3016                                           u11110 23BC  
                                         u11030 227A                                           u10055 2F06  
                                         u11120 23BE                                           u10250 6A9A  
                                         u10090 2F9C                                           u10420 5D6A  
                                         u11300 2540                                           u11150 4A54  
                                         u10510 3F48                                           u10190 689C  
                                         u11310 254C                                           u10600 40CE  
                                         u12120 501C                                           u10450 6F66  
                                         u11170 4B0A                                           u10530 3F6E  
                                         u10370 5CE4                                           u11090 235C  
                                         u11250 60F6                                           u11180 4B0C  
                                         u10540 408E                                           u10380 5D14  
                               ___awdiv@divisor 0102                                           u10470 3F08  
                                         u10710 1C16                                           u11350 261C  
                                         u10560 40B0                                           u10480 3F0A  
                                         u10720 1C18                                           u10640 1AF6  
                                         u10561 40AE                                           u10385 5D0A  
                                         u10570 40BE                                           u11290 253E  
                                         u10580 40C2                                           u10820 1DF8  
                                         u11380 27AA                                           u10670 1B60  
                                         u11390 27AC                                           u10760 1D8C  
                                         u10680 1B62                                           _T2CON 000FBA  
                                         u10930 203E                                           u10860 1E46  
                                         u10790 1DC6                                           u12457 6012  
                                         u12467 6062                                           u11860 667E  
                                         _T4CON 000F51                                           u11890 66A4  
                                         u11867 6674                                  __CFG_DEBUG$OFF 000000  
                                         i2l240 0074                                           i2l241 008A  
                                         i2l242 0080                                           i2l171 72A4  
                                         i2l238 0056                                           i2l159 7072  
                                         i2l511 6738                                           i2l505 6712  
                                         i2l610 41A2                                           i2l531 4748  
                                         i2l472 65A4                                           i2l608 419A  
                                         i2l481 65F4                                           i2l482 65F6  
                                         i2l483 65F8                                           i2l477 65B6  
                                         i2l469 6594                                           i2l478 65B8  
                                         i2l487 6614                                           i2l664 143E  
                                         i2l496 66CA                                           i2l690 1724  
                                         i2l499 66D2                                           i2l597 6516  
                               ___awdiv@counter 0104                                    vfpfcnvrt@fmt 0185  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           i2_abs 712E  
                                         i2_pad 64E6                                   __CFG_WRT0$OFF 000000  
                               _TMR4_Initialize 739A                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                             ___lmul@multiplicand 0104  
                                 __CFG_WRT3$OFF 000000                                   i2___fladd@grs 0010  
                          _EUSART1_Transmit_ISR 727C                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR2_ISR 7406                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                __end_of_TMR4_ISR 73E2  
                                 __CFG_WRTD$OFF 000000                        __size_of_ReadTemperature 0124  
                       _ConvertByteArrayToFloat 5D92                                  __CFG_EBTRB$OFF 000000  
                                    i2isdigit@c 0001                                           _flags 01E1  
                                 _firstLocation 02B8                                           _fputc 626A  
                                         _fputs 6FB0                                 __end_of_isdigit 712E  
                                 i2___fldiv@grs 0014                              __CFG_MCLRE$EXTMCLR 000000  
                                 i2___fldiv@rem 000D                                           atoi@n 0114  
                                         pad@fp 0112                                           atoi@s 0107  
                                         _width 01DD                                           _putch 74FC  
                                         dtoa@d 011F                                           dtoa@i 013F  
                                         dtoa@n 0137                                           dtoa@p 0131  
                                         dtoa@s 0135                                           dtoa@w 0133  
                               __end_of_isspace 6F72                                  ?_EUSART1_Write 0001  
                               __end_of_isupper 70FC                                           pclath 000FFA  
                              __end_ofi2___flge 5B3C                                __end_ofi2___fleq 6854  
                                         tablat 000FF5                                __end_ofi2___lmul 6D64  
                             ??_Timer2Interrupt 005F                                __end_ofi2___wmul 739A  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         ttemp5 0060                                           ttemp6 0063  
                                         ttemp7 0067                                           status 000FD8  
                              __end_ofi2_efgtoa 1A8E                                      i2isspace@c 0001  
                                         wtemp8 0060                                 __end_of_sprintf 6E0A  
                                ?___fpclassifyf 0100                                 __end_of_tolower 6E58  
                                 i2___flmul@grs 0028                                  __CFG_HFOFST$ON 000000  
                               __end_of_strncmp 611C                                __end_ofi2_floorf 46DE  
    __end_of_EUSART1_DefaultFramingErrorHandler 7576     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 7574                              __size_ofi2___aodiv 0148  
                            __size_ofi2___fladd 030C                     i2ReadTemperature@conversion 00D0  
                            __size_ofi2___aomod 0124                              __size_ofi2___fldiv 0288  
                            __size_ofi2___awdiv 0084                              __size_ofi2___flneg 002E  
                            __size_ofi2___awmod 0070                              __size_ofi2___flmul 0352  
                                __CFG_PBADEN$ON 000000                              __size_ofi2___flsub 0046  
                               i2_I2cReadSerial 6580                              __size_ofi2___fltol 00BA  
                                    i2isupper@c 0001                                __end_ofi2_printf 7374  
                              __end_ofi2_strcpy 6DB8                                __end_ofi2_strlen 72FC  
             LogData@lastSuccesfulWriteLocation 00E6                               ??_Timer4Interrupt 00C0  
                               __initialization 695E                                    __end_of_atoi 4B44  
                    __end_of_EUSART1_Initialize 6A5E                                    __end_of_main 6072  
                                  __end_of_dtoa 4126                                ??i2_ReadHumidity 00C4  
                                    i2printf@ap 00B6                         __end_of_TMR2_Initialize 7448  
                                ??_ReadHumidity 01BB                              __size_ofi2_isdigit 0030  
                          DisplaySetCursor@line 01B8                     ?_INTERRUPT_InterruptManager 0001  
                                   i2_vfpfcnvrt 2890                              __size_ofi2_isspace 003E  
                                 i2vfpfcnvrt@ap 0050                                   i2vfpfcnvrt@ct 00A8  
                                 i2vfpfcnvrt@fp 004C                                   i2vfpfcnvrt@ll 0098  
                            __size_ofi2_isupper 0030                                          ??_atoi 0109  
                     Timer4Interrupt@dataLength 00D0                        _TMR2_SetInterruptHandler 7514  
                                        ??_main 01D5                                          ??_dtoa 0127  
                                 __activetblptr 000003                                      i2tolower@c 0007  
                 ConvertByteArrayToFloat@result 0020                              __size_ofi2_tolower 004C  
                       I2cWriteSerial@writeData 01AF                                          ?i2_abs 0013  
                       DisplaySetCursor@charNum 01B7                              __size_ofi2_strncmp 00A8  
                                   ?i2___xxtofl 000D                                          ?i2_pad 0013  
                         ?_EUSART1_Transmit_ISR 0001                                      i2strncmp@l 0008  
                                    i2strncmp@n 0005                                      i2strncmp@r 000A  
                       DisplaySetCursor@command 01B9                               i2_ReadTemperature 575A  
                                        ?_fputc 0102                                          ?_fputs 010B  
                              ___awdiv@dividend 0100                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          i2l1021 5B00  
                                        i2l1301 38D4                                          i2l1310 393A  
                                        i2l1311 3936                                          i2l1411 50A2  
                                        i2l1340 3DC8                                          i2l1351 3E36  
                                        i2l1352 3E32                                          i2l1370 30E0  
                                        i2l1418 5120                                          i2l1442 7156  
                                        i2l1380 32F4                                          i2l1285 3802  
                                        i2l1286 37E0                                          i2l1473 4DCE  
                                        i2l1387 337E                                          i2l1379 32F8  
                                        i2l1485 463E                                  __CFG_WDTEN$OFF 000000  
                                        i2l1569 6E9A                                          i2l6003 335A  
                                        i2l5205 7090                                          i2l6015 339C  
                                        i2l5207 7092                                          i2l5401 3918  
                                        i2l5321 3794                                          i2l5217 6324  
                                        i2l6033 5C8C                              ?i2_ReadTemperature 00C0  
                                        i2l6203 1176                                          i2l6211 118C  
                                        i2l5421 3980                                          i2l5333 37EE  
                                        i2l6125 417C                                          i2l6029 5C82  
                                        i2l6053 45A0                                          i2l6221 11F8  
                                        i2l5335 37F2                                          i2l5255 36EC  
                                        i2l5511 4E2C                                          i2l5191 7060  
                                        i2l6143 41CC                                          i2l6039 5CCC  
                                        i2l6071 46CC                                          i2l6063 4660  
                                        i2l6311 14E0                                          i2l6223 1210  
                                        i2l5433 39AE                                          i2l5505 4E04  
                                        i2l6153 42C4                                          i2l6401 18CE  
                                        i2l6321 151A                                          i2l6305 14BC  
                                        i2l6225 121A                                          i2l5435 39B0  
                                        i2l5291 3758                                          i2l5283 3738  
                                        i2l5259 36F0                                          i2l5451 7030  
                                        i2l6139 41BC                                          i2l6067 469E  
                                        i2l6315 14F0                                          i2l5429 39A6  
                                        i2l5357 3848                                          i2l5349 3826  
                                        i2l8101 50D6                                          i2l6501 4D0C  
                                        i2l5517 4E52                                          i2l5533 4ED8  
                                        i2l5461 72E0                                          i2l6173 432C  
                                        i2l5613 6946                                          i2l6093 6D74  
                                        i2l6413 1916                                          i2l6253 130A  
                                        i2l6229 1240                                          i2l5359 384C  
                                        i2l5367 385E                                          i2l5279 3734  
                                        i2l8111 5146                                          i2l8103 50E2  
                                        i2l6087 6FA8                                          i2l6503 4D36  
                                        i2l5519 4E66                                          i2l5455 7046  
                                        i2l6431 196E                                          i2l6351 171C  
                                        i2l6343 16C4                                          i2l6263 13CE  
                                        i2l6239 12AC                                          i2l6247 12C6  
                                        i2l6191 1144                                          i2l5385 38F8  
                                        i2l5377 38C4                                          i2l8113 5152  
                                        i2l8105 5108                                          i2l5537 4EFE  
                                        i2l5529 4EC2                                          i2l5553 5564  
                                        i2l5473 6500                                          i2l6177 4344  
                                        i2l5617 6954                                          i2l5609 693C  
                                        i2l5633 6B60                                          i2l6441 19C4  
                                        i2l6353 173E                                          i2l6337 1686  
                                        i2l6329 1610                                          i2l6257 1344  
                                        i2l5395 390E                                          i2l6507 4D6C  
                                        i2l5459 72DC                                          i2l5483 6538  
                                        i2l5811 3D28                                          i2l5803 3D10  
                                        i2l6451 19F0                                          i2l6275 1424  
                                        i2l6259 1392                                          i2l8301 7424  
                                        i2l5725 5F70                                          i2l5709 5F26  
                                        i2l8037 6582                                          i2l5573 5616  
                                        i2l5565 55DA                                          i2l5557 557E  
                                        i2l5549 5540                                          i2l5477 650E  
                                        i2l5653 6BA6                                          i2l5645 6B8E  
                                        i2l5637 6B6E                                          i2l5629 6B54  
                                        i2l5821 3D78                                          i2l5661 67FE  
                                        i2l6429 1964                                          i2l6365 17C2  
                                        i2l6293 149A                                          i2l6285 1450  
                                        i2l5903 308C                                          i2l5743 5FB0  
                                        i2l5735 5F88                                          i2l8055 6600  
                                        i2l5559 5592                                          i2l5487 6566  
                                        i2l5479 6520                                          i2l5591 68FE  
                                        i2l5639 6B76                                          i2l6295 149E  
                                        i2l6279 1448                                          i2l6527 6146  
                                        i2l5921 30CC                                          i2l5905 3090  
                                        i2l5737 5F94                                          i2l5729 5F80  
                                        i2l8129 5192                                          i2l6481 4CA0  
                                        i2l5569 55F0                                          i2l5585 68EE  
                                        i2l5649 6B98                                          i2l5841 3DDE  
                                        i2l5665 6832                                          i2l5681 5AD4  
                                        i2l6377 17F2                                          i2l6385 1812  
                                        i2l6393 1836                                          i2l6529 6154  
                                        i2l7505 6C74                                          i2l8073 672A  
                                        i2l8057 66B0                                          i2l5931 30FE  
                                        i2l5923 30D0                                          i2l5907 30A0  
                                        i2l6491 4CEE                                          i2l6483 4CA4  
                                        i2l5835 3DC6                                          i2l5691 5B38  
                                        i2l6467 1A50                                          i2l6803 2A64  
                                        i2l7507 6C9A                                          i2l8067 66E2  
                                        i2l8075 672E                                          i2l8083 6D32  
                                        i2l8093 50B2                                          i2l5597 6914  
                                        i2l5829 3DA0                                          i2l5765 3C82  
                                        i2l5669 6850                                          i2l5685 5AEA  
                                        i2l5677 5AA0                                          i2l6821 2B78  
                                        i2l6813 2B1A                                          i2l5599 691C  
                                        i2l5871 3E9E                                          i2l5847 3DFC  
                                        i2l8079 6D1E                                   i2putch@txData 0002  
                                        i2l6497 4CFE                                          i2l5881 3ED4  
                                        i2l5785 3CC2                                          i2l5769 3C86  
                                        i2l6841 2C76                                          i2l6825 2BA2  
                                        i2l8099 50D0                                          i2l6499 4D06  
                                        i2l5883 3ED6                                          i2l5875 3EC8  
                                        i2l5867 3E7A                                          i2l5699 726A  
                                        i2l6851 2CBE                                          i2l8355 491C  
                                        i2l5973 32A0                                          i2l5797 3CFA  
                                        i2l5789 3CC6                                          i2l8623 72A0  
                                        i2l6847 2CB4                                          i2l6783 2956  
                                        i2l6785 2974                                          i2l6857 2CD6  
                                        i2l8369 49CC                                          i2l8643 64E0  
                                        i2l5979 32BE                                          i2l6787 2982  
                                        i2l5999 333C                                       ??i2_fputc 0007  
                                        _RCREG1 000FAE                                       ??i2_fputs 0010  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                      ?_WriteTempHumidToDisplay 0001                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                       ??i2_putch 0002  
                              i2___lmul@product 0009                                  i2___aodiv@sign 0012  
                                        _TXREG1 000FAD                                __end_of___xxtofl 5064  
                                        i2abs@a 0013                                          _TXSTA1 000FAC  
                                     ??_LogData 005E                                          i2_atoi 4C8E  
                                        i2_dtoa 4126                                          i2pad@i 001A  
                                        i2pad@p 0017                                          i2pad@w 001C  
                                i2___fladd@aexp 000E                                  i2___fladd@bexp 000F  
                           ??i2_ReadTemperature 00C4                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 01A7                                          ___flge 599A  
                                        ___fleq 673E                                  i2___aomod@sign 0012  
                                        ___lmul 6BB0                                       ??___aodiv 0110  
                                 i2vfprintf@fmt 0058                                       ??___fladd 0108  
                                     ??___aomod 0110                                          ___wmul 7324  
                                     ??___fldiv 0108                                       ??___awdiv 0104  
                                     ??___flneg 0104                                  __CFG_STVREN$ON 000000  
                                     ??___awmod 0104                                       ??___flmul 0122  
                                     ??___flsub 013B                                       ??___fltol 0104  
                                        _efgtoa 1A8E                                i2I2cReadSerial@i 000A  
                 WriteTempHumidToDisplay@result 01D1                                     ?i2_vfprintf 0056  
                      ?_EUSART1_SetErrorHandler 0100                                          _floorf 436E  
                       __end_of_TMR4_Initialize 73BE                                          clear_0 69BC  
                                        clear_1 69C8                                ___awdiv@quotient 0106  
                                i2___fldiv@aexp 0019                                  i2___fldiv@bexp 0018  
                               ___awmod@divisor 0102                         LogData@temperatureArray 00EA  
                                i2___fldiv@sign 0011                                 ___awmod@counter 0104  
                                        _printf 72FC                                          pad@buf 0114  
              ??_EUSART1_SetOverrunErrorHandler 0102                 ?_EUSART1_SetOverrunErrorHandler 0100  
                   i2ReadTemperature@resultWord 00CC                                          dtoa@fp 011D  
                                        _strcpy 6CB8                                          _strlen 7220  
                                i2___awdiv@sign 0006                               ??i2_EUSART1_Write 0001  
          __end_of_TMR4_DefaultInterruptHandler 7572           __size_of_TMR4_DefaultInterruptHandler 0002  
                  _TMR4_DefaultInterruptHandler 7570                                          fputc@c 0102  
                     ??_ConvertByteArrayToFloat 001F                                          fputs@c 010F  
                                        fputs@i 0110                               __end_ofi2___aodiv 4F20  
                                        fputs@s 010B                               __end_ofi2___fladd 39CC  
                                     ??_isdigit 0102                               __end_ofi2___aomod 5638  
                             __end_ofi2___fldiv 3EDE                               __end_ofi2___awdiv 695E  
                             __end_ofi2___flneg 727C                               __end_ofi2___awmod 6BB0  
                             __end_ofi2___flmul 33B2                               __end_ofi2___flsub 6F32  
                             __end_ofi2___fltol 5FC2                                 ___fpclassifyf@e 0108  
                               ___fpclassifyf@u 010A                                 ___fpclassifyf@x 0100  
                                  __mediumconst 0000                                       ??_isspace 0102  
                     __end_ofi2_ReadTemperature 587A                              ReadHumidity@result 01C1  
                             ??i2___fpclassifyf 0005                                          tblptrh 000FF7  
                                     ??_isupper 0102                                          tblptrl 000FF6  
                                        tblptru 000FF8                 ConvertFloatToByteArray@decimals 0045  
                            i2___aomod@dividend 0001                           __end_of_I2cReadSerial 626A  
                              __end_of_vfprintf 6C60                                  i2___awmod@sign 0006  
                               ??_EUSART1_Write 0100        TMR4_SetInterruptHandler@InterruptHandler 0100  
      TMR2_SetInterruptHandler@InterruptHandler 0100                                       ??_sprintf 01B1  
                                     ??_tolower 0108                                 _eusart1RxBuffer 0248  
                                i2___flmul@aexp 002C                                  i2___flmul@bexp 002D  
                                     ??_strncmp 0106                         __end_ofi2_I2cReadSerial 661A  
                                i2___flmul@sign 0027                                  i2___flmul@temp 0032  
                                i2___flmul@prod 002E                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0200                                      ___flge@ff1 0133  
                                    ___flge@ff2 0137                                 ??___fpclassifyf 0104  
                                  ___xxtofl@arg 0116                               __end_ofi2_isdigit 7220  
                                     ?_I2c_init 0001                                    ___xxtofl@exp 0115  
                             _SYSTEM_Initialize 74A6                                    ___xxtofl@val 010C  
                                    ___fleq@ff1 0100                                      ___fleq@ff2 0104  
                     _humidityTherometerAddress 01FC                                      __accesstop 0060  
                       __end_of__initialization 69D4                                  i2___fltol@exp1 003D  
                             __end_ofi2_isspace 6FB0                                      ___flneg@f1 0100  
                             ??_ReadTemperature 01BB                               __end_ofi2_isupper 71F0  
                         __end_of_TMR2_CallBack 7488                       __size_of_DisplaySetCursor 0030  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                    ___fltol@f1 0100                               __end_ofi2_tolower 6EA4  
                             __end_ofi2_strncmp 61C4                  __size_of_EUSART1_RxDataHandler 0022  
                                 __end_ofi2_abs 7160                                   __end_ofi2_pad 6580  
                 __end_of_EUSART1_RxDataHandler 7428                             __size_ofi2___xxtofl 0140  
                                 i2_efgtoa$1543 0068                                   i2_efgtoa$1538 0064  
                                 i2_efgtoa$1547 006A                                   i2_efgtoa$1539 0066  
                                 i2_efgtoa$1548 006C                                   i2_efgtoa$1549 006E  
                                __pcstackCOMRAM 0001                                    i2efgtoa@mode 0081  
                         __end_of_TMR4_CallBack 7468                                    i2efgtoa@sign 007A  
                                  __pidataBANK0 756E                                    __pidataBANK1 7566  
                                  __pidataBANK2 7488                             ??_SYSTEM_Initialize 0102  
                                     ?_TMR2_ISR 0001                                  i2_tolower$2163 000D  
                                     ?_TMR4_ISR 0001                                   __end_of_fputc 630C  
                                 __end_of_fputs 6FEC                                   __end_of_putch 750A  
                                   i2printf@fmt 00AC                                ?_TMR2_Initialize 0001  
                            VerifyLogging@F6254 0262                                       ?i2___flge 0034  
                                     ?i2___fleq 0001                                       ?i2___lmul 0001  
                                     ?i2___wmul 0001                          ??_EUSART1_Transmit_ISR 0001  
                                     ?i2_efgtoa 0040                                         ??i2_abs 0015  
                                       ??i2_pad 0019                                       ?i2_floorf 001A  
                   __end_of_EUSART1_Receive_ISR 64E6                   ?_TMR4_DefaultInterruptHandler 0001  
                                i2vfpfcnvrt@fmt 004E                                       ?i2_printf 00AC  
                                     ?i2_strcpy 0001                                       ?i2_strlen 0001  
                         i2EUSART1_Write@txData 0001                                         ??_fputc 0106  
                     __end_of_SYSTEM_Initialize 74C0                                         ??_fputs 010F  
                                       ??_putch 0101                                   _eusart1RxHead 01F8  
                                 _eusart1TxHead 01FB                                   _eusart1RxTail 01F7  
                                    __pbssBANK0 00FC                                      __pbssBANK1 01D7  
                                    __pbssBANK2 0200                                   _eusart1TxTail 01FA  
             _EUSART1_TxDefaultInterruptHandler 01F3                 ??_EUSART1_SetRxInterruptHandler 0102  
                                    ??_I2c_init 0100                             __size_ofi2_vfprintf 0058  
                               __CFG_PLLCFG$OFF 000000                            __end_of_ReadHumidity 575A  
                   LogData@writeAttemptLocation 00E2                                         ?i2_atoi 0008  
                                       ?i2_dtoa 001E                           _TMR4_InterruptHandler 01E5  
                     __size_ofi2_I2cWriteSerial 0092                                     i2strcpy@src 0003  
                                   i2strncmp@_l 0001                                     i2strncmp@_r 0003  
               __end_of_EUSART1_SetErrorHandler 7550                              __CFG_CCP2MX$PORTC1 000000  
                                       ?___flge 0133                                         ?___fleq 0100  
                         __end_of_VerifyLogging 6B40                                         ?___lmul 0100  
                                       ?___wmul 0100                                      ??_TMR2_ISR 005F  
                                    ??_TMR4_ISR 005E                              __CFG_CCP3MX$PORTB5 000000  
                                       ?_efgtoa 013F                                         ?_floorf 0119  
                                ___lmul@product 0108                                ?_TMR4_Initialize 0001  
                                       ?_printf 01A9                                      ??i2___flge 003C  
                                    ??i2___fleq 0009                                         ?_strcpy 0100  
                                       ?_strlen 0100          __end_of_EUSART1_SetFramingErrorHandler 7546  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 753C  
                                    ??i2___lmul 0009                             Timer4Interrupt@temp 00C4  
                                    ??i2___wmul 0005                                      ??i2_efgtoa 0047  
                               _Timer2Interrupt 74EA                                       ?___xxtofl 010C  
                                    ??i2_floorf 001E                    ?_EUSART1_DefaultErrorHandler 0001  
                    __size_ofi2_ReadTemperature 0120                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0480                                      ??i2_printf 005E  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP1ADD 000FC8                                         _SSP1BUF 000FC9  
                                    ??i2_strcpy 0005                                      ??i2_strlen 0003  
                                I2cReadSerial@i 0109                                 _Timer4Interrupt 4882  
                              ?i2_I2cReadSerial 0001                               _therometerAddress 00FF  
                                       i2_fputc 630C                                         i2_fputs 7026  
                                       i2atoi@n 0015                                         i2pad@fp 0013  
                                       i2atoi@s 0008                                         i2_putch 7550  
                        i2I2cReadSerial@address 0008                                         i2dtoa@d 0020  
                                       i2dtoa@i 0040                                         i2dtoa@n 0038  
                                       i2dtoa@p 0032                                         i2dtoa@s 0036  
                                       i2dtoa@w 0034                            I2cWriteSerial@length 01B1  
                                       _LogData 46DE                                 __size_ofi2_atoi 014A  
                               __size_ofi2_dtoa 0248                                 i2___fladd@signs 000D  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                      ??_TMR2_SetInterruptHandler 0102  
                      ?_ConvertFloatToByteArray 003E                                 __size_of___flge 00D2  
                               __size_of___fleq 008C                                         ___aodiv 4B44  
                                       ___fladd 33B2                                         ___aomod 52CA  
                                       ___fldiv 39CC                                         ___awdiv 6854  
                                       ___flneg 7190                                 __size_of___lmul 0058  
                                       ___awmod 6A5E                                         ___flmul 2D0C  
                                       ___flsub 6EA4                                         ___fltol 5CD6  
                               __size_of___wmul 0028                                       ?_vfprintf 01A1  
                                i2vfprintf@cfmt 005C                                    __psmallconst 1000  
                               __size_of_efgtoa 0982                    i2I2cWriteSerial@addressWrite 00BE  
                                  ?i2_vfpfcnvrt 004C                                 __size_of_floorf 01BA  
                                       __pcinit 695E                                         __ramtop 1000  
                                       __ptext0 5FC2                                         __ptext1 51A4  
                                       __ptext2 6DB8                                         __ptext3 53F0  
                                       __ptext4 5638                                         __ptext5 4F20  
                                       __ptext6 6BB0                                         __ptext7 61C4  
                                       __ptext8 7160                                         __ptext9 661A  
                               __size_of_printf 0028                                 __size_of_strcpy 0056  
                               __size_of_strlen 002E                           Timer4Interrupt@output 00CC  
                                       _counter 00FC                           _OSCILLATOR_Initialize 74D8  
                                     _T2CONbits 000FBA                                    __size_of_abs 0034  
                                  __size_of_pad 009E                                         _isdigit 70FC  
                                  ??i2___xxtofl 0011                               LogData@writeArray 00DC  
                                       _reading 00FD                                      ??___xxtofl 0110  
                              ___awmod@dividend 0100                                       _T4CONbits 000F51  
                            _EUSART1_Initialize 69DE                        ??_PIN_MANAGER_Initialize 0100  
             __size_of_TMR4_SetInterruptHandler 000A                                         _isspace 6F32  
                     ?_TMR4_SetInterruptHandler 0100                                         _isupper 70CA  
                                       efgtoa@c 0145                                         efgtoa@d 0163  
                                       efgtoa@e 017B                                         efgtoa@f 0141  
                                       efgtoa@g 0177                                         efgtoa@h 016D  
                                       efgtoa@i 0175                                         efgtoa@l 0171  
                                       efgtoa@m 015F                                         efgtoa@n 017D  
                                       efgtoa@p 0167                                         efgtoa@t 015B  
                                       efgtoa@u 017F                                         efgtoa@w 016A  
                  i2ReadTemperature@temperature 00C6                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 010D                      __size_of_SYSTEM_Initialize 001A  
                                       _sprintf 6DB8                                         _tolower 6E0A  
                         VerifyLogging@location 00C0                                         _strncmp 6072  
                          end_of_initialization 69D4                                         floorf@e 0127  
                                       floorf@m 0123                                         floorf@u 0129  
                                       floorf@x 0119                  ??_TMR4_DefaultInterruptHandler 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0104  
                   _EUSART1_OverrunErrorHandler 01ED                                         fputs@fp 010D  
                           i2___wmul@multiplier 0001                                _DisplaySetCursor 7160  
                                     i2u1220_48 7456                                       i2u1231_48 64CE  
                                     i2u1160_40 6736                                       i2u1240_48 0060  
                                     i2u1170_40 515C                                       i2u1250_47 6ADE  
                                     i2u1218_48 7476                                  i2___xxtofl@arg 0017  
                                     i2u1251_47 6B02                                       i2u1227_48 6474  
                                     i2u1227_49 6488                                       i2u1252_47 46E4  
                                     i2u1157_40 6710                                       i2u1157_47 6706  
                                     i2u1253_47 4708                                       i2u1229_48 64A2  
                                     i2u1237_48 0048                                       i2u1229_49 64B6  
                                     i2u1254_47 476E                                  i2___xxtofl@exp 0016  
                                     i2u1255_47 481C                                       i2u1247_47 48A2  
                                     i2u1256_47 4862                                       i2u1248_47 48C8  
                                     i2u1177_41 47F6                                       i2u1249_47 4924  
                                i2___xxtofl@val 000D                                       i2u1179_40 6B32  
         __end_of_EUSART1_SetRxInterruptHandler 7532          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 7528                                 i2_EUSART1_Write 705E  
                             __end_of_vfpfcnvrt 2890                                      efgtoa@mode 016C  
                                    efgtoa@sign 0165                              __end_ofi2___xxtofl 51A4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                             i2___lmul@multiplier 0001  
                               i2___fpclassifyf 5C0A                                    ??i2_vfprintf 005C  
                                    ??_vfprintf 01A7                         __end_of_Timer2Interrupt 74FC  
              __size_of_WriteTempHumidToDisplay 0126                            ??_EUSART1_Initialize 0102  
                                       strcpy@d 0108                                         strlen@a 0102  
                                       strcpy@s 0106                                         strlen@s 0100  
                    I2cWriteSerial@addressWrite 01B5                         __size_of_I2cWriteSerial 0092  
                             i2___aodiv@divisor 0009                                     ___fladd@grs 010F  
                       __end_of_Timer4Interrupt 49F6                               i2___aodiv@counter 0011  
                                 ___xxtofl@sign 0114                                 _ReadTemperature 53F0  
                                     _TRISCbits 000F94                               i2I2cWriteSerial@i 00BF  
                         __size_of_ReadHumidity 0122                                     ___fldiv@grs 0113  
                                   ___fldiv@rem 010C                                 i2___fltol@sign1 003C  
                                     i2___aodiv 4DD8                __size_of_EUSART1_SetErrorHandler 000A  
                                     i2___fladd 36C0                                       i2___aomod 5514  
                                     i2___fldiv 3C56                                       i2___awdiv 68DA  
                                     i2___flneg 724E                             EUSART1_Write@txData 0100  
                                     i2___awmod 6B40                                       i2___flmul 3060  
                    ReadTemperature@temperature 01BD                                       i2___flsub 6EEC  
                                     i2___fltol 5F08                          i2ReadHumidity@humidity 00C6  
                                   ___flmul@grs 0127                              __end_ofi2_vfprintf 6CB8  
               __end_of_ConvertFloatToByteArray 5F08                                i2_I2cWriteSerial 66AC  
                             __size_of_I2c_init 0018                              i2___awdiv@dividend 0001  
                     i2I2cWriteSerial@writeData 00B8                                       i2_isdigit 71F0  
                                __end_ofi2_atoi 4DD8            __size_of_EUSART1_DefaultErrorHandler 0006  
                                __end_ofi2_dtoa 436E                                       i2_isspace 6F72  
                                     i2_isupper 71C0                    ConvertFloatToByteArray@input 003E  
                                     i2efgtoa@c 0046                                       i2efgtoa@d 0078  
                                     i2efgtoa@e 0090                                       i2efgtoa@f 0042  
                                     i2efgtoa@g 008C                                       i2efgtoa@h 0082  
                                     i2efgtoa@i 008A                                       i2efgtoa@l 0086  
                                     i2efgtoa@m 0074                                       i2efgtoa@n 0092  
                                     i2efgtoa@p 007C                                       i2efgtoa@t 0070  
                                     i2efgtoa@u 0094                                       i2efgtoa@w 007F  
                                     i2atoi@neg 000E                                       i2_tolower 6E58  
                  __end_of_INTERRUPT_Initialize 756E            __end_of_TMR2_DefaultInterruptHandler 7574  
         __size_of_TMR2_DefaultInterruptHandler 0002                    _TMR2_DefaultInterruptHandler 7572  
                                 i2efgtoa@nmode 007E                                       i2_strncmp 611C  
                                __end_of___flge 5A6C                                  __end_of___fleq 67CA  
                                __end_of___lmul 6C08                                       i2floorf@e 0028  
                                   vfpfcnvrt@ap 0187                                       i2floorf@m 0024  
                                   vfpfcnvrt@ct 019E                                       i2floorf@u 002A  
                                   vfpfcnvrt@fp 0183                                       i2floorf@x 001A  
                                   vfpfcnvrt@ll 018D                                  __end_of___wmul 734C  
                                __end_of_efgtoa 2410                               _displayInitialize 02D2  
                             __size_of_TMR2_ISR 0024                               __size_of_TMR4_ISR 0024  
                                     i2fputc@fp 0005                                    _ReadHumidity 5638  
                                __end_of_floorf 4528                          ?_OSCILLATOR_Initialize 0001  
                                     i2fputs@fp 000E                                      floorf@F524 0256  
                              i2___wmul@product 0005                                  __end_of_printf 7324  
                          LogData@humidityArray 00EC                                  __end_of_strcpy 6D0E  
                                __end_of_strlen 724E                               __size_ofi2___flge 00D0  
                           start_initialization 695E                               __size_ofi2___fleq 008A  
                       __size_ofi2_ReadHumidity 0120                               __size_ofi2___lmul 0056  
                            i2___awdiv@quotient 0007                               __size_ofi2___wmul 0026  
               __size_of_PIN_MANAGER_Initialize 002A                                     __end_of_abs 70CA  
                             __size_ofi2_efgtoa 0994                                     __end_of_pad 644A  
                             __size_ofi2_floorf 01B6                                      ?i2___aodiv 0001  
                                    ?i2___fladd 0001                                      ?i2___aomod 0001  
 EUSART1_SetRxInterruptHandler@interruptHandler 0100   EUSART1_SetTxInterruptHandler@interruptHandler 0100  
                                    ?i2___fldiv 0001                                      ?i2___awdiv 0001  
                                    ?i2___flneg 0001                                      ?i2___awmod 0001  
                                    ?i2___flmul 001B                                      ?i2___flsub 0034  
                                    ?i2___fltol 0034                                    i2vfpfcnvrt@c 00AB  
                                  i2vfpfcnvrt@f 00A4                                     putch@txData 0101  
                               LogData@location 00EE                               __size_ofi2_printf 0028  
                         __end_of_EUSART1_Write 7026                                 LogData@humidity 00D8  
                             __size_ofi2_strcpy 0054                               __size_ofi2_strlen 002A  
                                     i2strcpy@d 0009                                       i2strlen@a 0003  
                                     i2strcpy@s 0007                                       i2strlen@s 0001  
                       __end_ofi2_EUSART1_Write 7096                           __end_of___fpclassifyf 5C0A  
                                _readTemprature 01FF                 ConvertByteArrayToFloat@decimals 0024  
                                      ??i2_atoi 000A                                        ??i2_dtoa 0028  
                       __end_ofi2___fpclassifyf 5CD6                                      ?i2_isdigit 0001  
                                    ?i2_isspace 0001                                      ?i2_isupper 0001  
                                   vfprintf@fmt 01A3                           I2cReadSerial@readData 0100  
                                  i2vfprintf@ap 005A                                    i2vfprintf@fp 0056  
                                      ??___flge 013B                                        ??___fleq 0108  
                                      ??___lmul 0108                          ReadHumidity@convertion 01C7  
                                      ??___wmul 0104                                      ?i2_tolower 0007  
                         _EUSART1_RxDataHandler 7406                                        ??_efgtoa 0146  
                                    ?i2_strncmp 0001                  ?_EUSART1_SetRxInterruptHandler 0100  
                        __size_of_I2cReadSerial 00A6                                     __pdataBANK0 00FE  
                                   __pdataBANK1 01FC                                     __pdataBANK2 02BA  
                                      ??_floorf 011D                                ?_Timer2Interrupt 0001  
                      ?_ConvertByteArrayToFloat 001B                         __end_of_ReadTemperature 5514  
                 ?_TMR2_DefaultInterruptHandler 0001                             VerifyLogging@output 00C2  
                                      ??_printf 01AB     ConvertByteArrayToFloat@inputMostSignificant 001F  
                             i2___aomod@divisor 0009                                        ??_strcpy 0104  
                                      ??_strlen 0102                                  _eusart1RxCount 01F6  
                             i2___aomod@counter 0011                                       ___fladd@a 0104  
                                     ___fladd@b 0100                            __size_ofi2_vfpfcnvrt 047C  
                                     ___fldiv@a 0104                                       ___fldiv@b 0100  
                        __size_of_TMR2_CallBack 0020                           TMR4_ISR@CountCallBack 01E3  
                                     ___flmul@a 011E                                       ___flmul@b 011A  
                              ?_Timer4Interrupt 0001                                       ___flsub@a 0137  
                                     ___flsub@b 0133               _EUSART1_RxDefaultInterruptHandler 01F1  
                          i2ReadHumidity@result 00CA                   __size_of_EUSART1_Transmit_ISR 002C  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0100  
                              ___aodiv@dividend 0100                        __size_of_TMR2_Initialize 0020  
                                  _readHumidity 01FE                               __size_of___xxtofl 0144  
                        __size_of_TMR4_CallBack 0020                 ??_EUSART1_SetTxInterruptHandler 0102  
                                      ?i2_fputc 0003                                        ?i2_fputs 000C  
                                  i2strcpy@dest 0001                ??_EUSART1_SetFramingErrorHandler 0102  
               ?_EUSART1_SetFramingErrorHandler 0100                    __size_of_EUSART1_Receive_ISR 009C  
                                      ?i2_putch 0001                                       _atoi$2041 010F  
                                      ?_LogData 0001                                       _atoi$2042 0113  
                                     _atoi$2043 0111                       ReadTemperature@conversion 01C7  
                                   _efgtoa$1543 0153                                     _efgtoa$1538 014F  
                                   _efgtoa$1547 0155                                     _efgtoa$1539 0151  
                                   _efgtoa$1548 0157                                     _efgtoa$1549 0159  
                        _PIN_MANAGER_Initialize 72A8                                       _dtoa$1514 012F  
                       Timer4Interrupt@location 00C2                                Timer4Interrupt@i 00D2  
                                     __pintcode 0008                         _WriteTempHumidToDisplay 51A4  
                                      ?___aodiv 0100                                        ?___fladd 0100  
                                      ?___aomod 0100                __end_of_TMR4_SetInterruptHandler 7514  
                                      ?___fldiv 0100                                        ?___awdiv 0100  
                                     __ptext100 4DD8                                       __ptext101 4C8E  
                                     __ptext110 36C0                                       __ptext102 6F72  
                              ___aodiv@quotient 0112                                        ?___flneg 0100  
                                     __ptext111 3060                                       __ptext103 71F0  
                                     __ptext112 727C                                       __ptext104 7374  
                                     __ptext113 644A                                       __ptext105 6580  
                                     __ptext114 755A                                       __ptext106 5E4E  
                                     __ptext115 7574                                       __ptext107 5064  
                                     __ptext116 7560                                       __ptext108 5F08  
                                     __ptext117 7406                                       __ptext109 6EEC  
                                     __ptext118 0000                                        ?___awmod 0100  
                                      ?___flmul 011A                                        ?___flsub 0133  
                                      ?___fltol 0100                    ??_INTERRUPT_InterruptManager 00F0  
                              __CFG_PRICLKEN$ON 000000                            Timer4Interrupt@F6194 02BA  
                                _I2cWriteSerial 661A                               __size_of_vfprintf 0058  
                      __end_of_DisplaySetCursor 7190                                     __smallconst 1000  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 7560  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 755A  
                                      ?_isdigit 0100                                  __size_ofi2_abs 0032  
                          _EUSART1_ErrorHandler 01EB                                  __size_ofi2_pad 009A  
              __size_of_ConvertFloatToByteArray 00BA                                        ?_isspace 0100  
                         i2I2cReadSerial@length 0003                                        ?_isupper 0100  
                        ReadHumidity@resultWord 01C3                         _EUSART1_SetErrorHandler 7546  
                      __size_of_TMR4_Initialize 0024                           i2I2cReadSerial@target 0009  
                                   ??i2___aodiv 0011                                     ??i2___fladd 0009  
                                   ??i2___aomod 0011                                     ??i2___fldiv 0009  
                                   ??i2___awdiv 0005                                     ??i2___flneg 0005  
                                   ??i2___awmod 0005                                        ?_sprintf 01A9  
                                      ?_tolower 0106                                     ??i2___flmul 0023  
                                   ??i2___flsub 003C                                     ??i2___fltol 0038  
                                __size_of_fputc 00A2                                   _I2cReadSerial 61C4  
                                __size_of_fputs 003C                          __size_of_VerifyLogging 0070  
                          Timer4Interrupt@humid 00C8                                        ?_strncmp 0100  
                                __size_of_putch 000E                            _INTERRUPT_Initialize 756A  
                                      _I2c_init 74C0                                ?i2_EUSART1_Write 0001  
                                ___wmul@product 0104         EUSART1_SetErrorHandler@interruptHandler 0100  
                                 _TMR2_CallBack 7468                                        _PIE1bits 000F9D  
                            LogData@temperature 00D4                                        _PIE5bits 000F7D  
                                   ??i2_isdigit 0003                                ?i2___fpclassifyf 0001  
                              i2_vfpfcnvrt$1563 00A0                                     ??i2_isspace 0003  
                              i2_vfpfcnvrt$1568 00A2             __size_of_INTERRUPT_InterruptManager 00B6  
                      __size_ofi2_I2cReadSerial 009A                                        _PIR1bits 000F9E  
                                   ??i2_isupper 0003                                        i2u702_40 6B7A  
                                      i2u800_40 41B6                                        i2u801_40 42D2  
                                      _PIR5bits 000F7E                                        i2u642_40 37B6  
                                      i2u714_40 5F14                                        i2u643_40 37C6  
                                      i2u715_40 5F44                                        i2u627_40 631C  
                                      i2u803_40 42F4                                        i2u707_40 684C  
                                      i2u811_40 1164                                        i2u803_41 42F2  
                                      i2u715_45 5F3A                                        i2u660_40 391C  
                                      i2u644_40 37C8                                        i2u804_40 4302  
                                      i2u629_40 6364                                        i2u805_40 4308  
                                      i2u741_40 3E88                                        i2u662_40 3930  
                                      i2u742_40 3EAC                                        i2u814_40 11CE  
                                      i2u751_40 30EC                                        i2u647_40 380A  
                                      i2u719_40 5F9A                                        i2u807_40 4316  
                                      i2u823_40 13F6                                        i2u815_40 11D0  
                                      i2u760_40 334A                                        i2u752_40 3262  
                                      i2u672_40 71E8                                        i2u920_40 29BE  
               __end_of_ConvertByteArrayToFloat 5E4E                                        i2u752_45 3258  
                                      i2u761_40 3368                                        i2u737_40 3E2C  
                                      i2u673_40 71EA                                        i2u833_40 14B8  
                                      i2u921_40 29CC                                        i2u690_40 5596  
                                      i2u770_40 713C                                        i2u850_40 18F2  
                                      i2u826_40 1432                                        i2u818_40 1282  
                                      i2u682_41 4E32                                        i2u763_40 5C48  
                                      i2u771_40 456E                                        i2u819_40 1284  
                                      i2u763_45 5C3E                                        i2u771_45 4564  
                                      i2u756_40 32EE                                        i2u668_40 398C  
                                      i2u684_40 4E6A                                        i2u772_40 458E  
                                      i2u781_40 7218                                        i2u829_40 146A  
                                      i2u925_40 2A9C                                        i2u782_40 721A  
                                      i2u862_40 4CEA                                        i2u774_45 45B8  
                                      i2u774_46 45BE                                        i2u774_47 45CC  
                                      i2u919_40 29BC                                        i2u767_45 5CA6  
                                      i2u784_40 6FA4                                        i2u864_40 4D9E  
                                      i2u696_40 6920                                        i2u768_40 5CC4  
                                      i2u776_40 461E                                        i2u856_40 19DA  
                                      i2u872_40 619E                                        i2u928_40 2C28  
                                      i2u776_45 4614                                        i2u865_40 4DA0  
                                      i2u769_40 5CC6                                        i2u785_40 6DAE  
                                      i2u929_40 2C2A                                        i2u785_47 6DA4  
                                      i2u794_40 414E                                        i2u778_40 467E  
                                      i2u858_40 1A3A                                        i2u778_45 4674  
                                      i2u795_40 4150                                        i2u787_40 6E80  
                                      i2u859_40 1A3C                          ?_EUSART1_RxDataHandler 0001  
                                      i2u788_40 6E82                                        i2u798_40 4190  
                                      _RCONbits 000FD0                               i2___fldiv@new_exp 0012  
                              __CFG_WDTPS$32768 000000                                        _SSP1CON1 000FC6  
                                      _SSP1CON2 000FC5                                     ??i2_tolower 0009  
                                      _TMR2_ISR 73E2                                        _TMR4_ISR 73BE  
                                 _TMR4_CallBack 7448                                     ??i2_strncmp 0007  
                                      _SSP1STAT 000FC7                          __end_of_I2cWriteSerial 66AC  
                                     _vfpfcnvrt 2410                                ?_ReadTemperature 01B7  
                                      i2___flge 5A6C                                        i2___fleq 67CA  
                             ___wmul@multiplier 0100                                        i2___lmul 6D0E  
                                      i2___wmul 7374                       ReadTemperature@resultWord 01C3  
                      __end_ofi2_I2cWriteSerial 673E                                        i2_efgtoa 10FA  
                         I2cWriteSerial@address 01B4                                  i2_ReadHumidity 587A  
                                      i2_floorf 4528                  ??_TMR2_DefaultInterruptHandler 0001  
             __size_of_TMR2_SetInterruptHandler 000A                               i2___awdiv@divisor 0003  
                     ?_TMR2_SetInterruptHandler 0100                               i2___awdiv@counter 0005  
                                  _isspace$2072 0106                                        i2_printf 734C  
                                      i2pad@buf 0015                                        i2dtoa@fp 001E  
                                      i2_strcpy 6D64                                  ?_I2cReadSerial 0100  
                                      i2_strlen 72D2                                      vfpfcnvrt@c 019D  
                                    vfpfcnvrt@f 0199                               ___lmul@multiplier 0100  
                                   _INTCON2bits 000FF1                                       copy_data0 6972  
                                     copy_data1 6992                                        i2fputc@c 0003  
                         ?_INTERRUPT_Initialize 0001                                        i2fputs@c 0010  
                                      i2fputs@i 0011                                        i2fputs@s 000C  
                            i2___awmod@dividend 0001                               ??_TMR2_Initialize 0102  
                              __size_ofi2_fputc 00A0                                __size_ofi2_fputs 0038  
                                ?_TMR2_CallBack 0001                            I2cReadSerial@address 0107  
                              __size_ofi2_putch 000A                                __size_of_LogData 01A4  
         __end_of_EUSART1_SetTxInterruptHandler 7528          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 751E                       ??_WriteTempHumidToDisplay 01CB  
                       i2I2cReadSerial@readData 0001                                        __Hrparam 0000  
                                    vfprintf@ap 01A5                                        __Lrparam 0000  
                                    vfprintf@fp 01A1                              __CFG_BOREN$SBORDIS 000000  
                                ?_TMR4_CallBack 0001                               __CFG_P2BMX$PORTB5 000000  
                                 _VerifyLogging 6AD0                         ??_OSCILLATOR_Initialize 0100  
                              __size_of___aodiv 014A                                __size_of___fladd 030E  
                              __size_of___aomod 0126                                __size_of___fldiv 028A  
                              __size_of___awdiv 0086                                __size_of___flneg 0030  
                              __size_of___awmod 0072                                __size_of___flmul 0354  
                               ?_I2cWriteSerial 01AF                                __size_of___flsub 0048  
                              __size_of___fltol 00BC                           i2___wmul@multiplicand 0003  
                   __size_of_EUSART1_Initialize 0080                                      ?_vfpfcnvrt 0183  
                               ___aodiv@divisor 0108    ConvertByteArrayToFloat@inputLeastSignificant 001B  
                        __end_ofi2_ReadHumidity 599A                                 ___aodiv@counter 0110  
                      _TMR4_SetInterruptHandler 750A                                      _ANSELCbits 000F3A  
                            ___fpclassifyf@F463 01D7                           ReadTemperature@result 01C1  
                     ??_EUSART1_SetErrorHandler 0102                                 I2cWriteSerial@i 01B6  
           __end_of_EUSART1_DefaultErrorHandler 7566                     _EUSART1_DefaultErrorHandler 7560  
                                    sprintf@fmt 01AB                                        ___xxtofl 4F20  
                              __size_of_isdigit 0032                                __size_of_isspace 0040  
                                      __ptext10 72FC                                        __ptext11 6C08  
                                      __ptext20 5CD6                                        __ptext12 2410  
                                      __ptext21 6EA4                                        __ptext13 6072  
                                      __ptext30 3EDE                                        __ptext22 33B2  
                                      __ptext14 1A8E                                        __ptext31 63AC  
                                      __ptext23 7190                                        __ptext15 6E0A  
                                      __ptext40 49F6                                        __ptext32 7220  
                                      __ptext24 2D0C                                        __ptext16 70CA  
                                      __ptext41 6F32                                        __ptext33 6FB0  
                                      __ptext25 599A                                        __ptext17 6CB8  
                                      __ptext50 74D8                                        __ptext42 70FC  
                                      __ptext34 626A                                        __ptext26 673E  
                                      __ptext18 436E                                        __ptext51 756A  
                                      __ptext43 7324                                        __ptext35 74FC  
                                      __ptext27 39CC                                        __ptext19 5B3C  
                                      __ptext60 73BE                                        __ptext52 69DE  
                                      __ptext44 74A6                                        __ptext36 6FEC  
                                      __ptext28 6A5E                                        __ptext61 7448  
                                      __ptext53 751E                                        __ptext45 739A  
                                      __ptext37 7096                                        __ptext29 6854  
                                      __ptext70 46DE                                        __ptext62 7570  
                                      __ptext54 7528                                        __ptext46 750A  
                                      __ptext38 52CA                                        __ptext71 575A  
                                      __ptext63 4882                                        __ptext55 7532  
                                      __ptext47 7428                                        __ptext39 4B44  
                                      __ptext80 6E58                                        __ptext72 587A  
                                      __ptext64 5D92                                        __ptext56 753C  
                                      __ptext48 7514                                        __ptext81 71C0  
                                      __ptext73 6D0E                                        __ptext65 73E2  
                                      __ptext57 7546                                        __ptext49 72A8  
                                      __ptext90 68DA                                        __ptext82 6D64  
                                      __ptext74 66AC                                        __ptext66 7468  
                                      __ptext58 74C0                                        __ptext91 4126  
                                      __ptext83 4528                                        __ptext75 734C  
                                      __ptext67 7572                                        __ptext92 64E6  
                                      __ptext84 5C0A                                        __ptext76 6C60  
                                      __ptext68 74EA                                        __ptext93 72D2  
                                      __ptext85 724E                                        __ptext77 2890  
                                      __ptext69 6AD0                                        __ptext94 7026  
                                      __ptext86 5A6C                                        __ptext78 611C  
                                      __ptext95 630C                                        __ptext87 67CA  
                                      __ptext79 10FA                                        __ptext96 7550  
                                      __ptext88 3C56                                        __ptext97 705E  
                                      __ptext89 6B40                                        __ptext98 712E  
                                      __ptext99 5514                                __size_of_isupper 0032  
                                   _customSign0 02C7                                     _customSign1 02BC  
                                  _SSP1CON2bits 000FC5                                __size_of_sprintf 0052  
                              __size_of_tolower 004E                                      strcpy@dest 0100  
                              __size_of_strncmp 00AA                               ??_TMR4_Initialize 0102  
                                 __size_of_atoi 014E                                   __size_of_main 00B0  
                                 __size_of_dtoa 0248                                   _eepromAddress 00FE  
                                      efgtoa@fp 013F                                        efgtoa@ne 0161  
                                      efgtoa@pp 015D                                        efgtoa@ou 014B  
EUSART1_SetOverrunErrorHandler@interruptHandler 0100                                  ?_VerifyLogging 0001  
                                      int$flags 005F                                        _vfprintf 6C08  
            __end_of_INTERRUPT_InterruptManager 00BE                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 01A9                                    _SSP1STATbits 000FC7  
                             ??i2_I2cReadSerial 0004                     _EUSART1_FramingErrorHandler 01EF  
                           _EUSART1_Receive_ISR 644A                                 ?i2_ReadHumidity 00C0  
                              ___aomod@dividend 0100                               i2___awmod@divisor 0003  
                       _ConvertFloatToByteArray 5E4E                               i2___awmod@counter 0005  
                                _vfpfcnvrt$1563 0195                                  _vfpfcnvrt$1568 0197  
               __end_of_WriteTempHumidToDisplay 52CA                                      _INTCONbits 000FF2  
                         i2___lmul@multiplicand 0005                                 ??_I2cReadSerial 0103  
                           I2cReadSerial@length 0102                                        isdigit@c 0100  
                        ??_INTERRUPT_Initialize 0100                               i2___fpclassifyf@e 0009  
                             i2___fpclassifyf@u 000B                               i2___fpclassifyf@x 0001  
                           I2cReadSerial@target 0108                __size_of_ConvertByteArrayToFloat 00BC  
                                      intlevel2 0000                                       sprintf@ap 01B3  
                               ??_TMR2_CallBack 005F                            ReadHumidity@humidity 01BD  
                          ?_EUSART1_Receive_ISR 0001                                 i2___xxtofl@sign 0015  
                                   _resetEeprom 02B4                                        isspace@c 0100  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 753C  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 7532  
                                     strcpy@src 0102                                      _RCSTA1bits 000FAB  
                                      isupper@c 0100                    __end_of_EUSART1_Transmit_ISR 72A8  
                                _displayAddress 01FD                                       strncmp@_l 0100  
                                     strncmp@_r 0102                                 ??_TMR4_CallBack 005E  
                                   efgtoa@nmode 0169                                        printf@ap 01AD  
EUSART1_SetFramingErrorHandler@interruptHandler 0100                  ?_EUSART1_SetTxInterruptHandler 0100  
                               ___aomod@divisor 0108                                   ??i2_vfpfcnvrt 0052  
                                   ??_vfpfcnvrt 0189                                 ___aomod@counter 0110  
                        __size_of_EUSART1_Write 003A                              _eusart1RxLastError 01F5  
                       i2I2cWriteSerial@address 00BD                                        sprintf@f 01B5  
                                      tolower@c 0106                                        sprintf@s 01A9  
                        __size_of___fpclassifyf 00CE                               ?_DisplaySetCursor 01B7  
                         TMR2_ISR@CountCallBack 01E7                                        strncmp@l 0107  
                                      strncmp@n 0104                                        strncmp@r 0109  
                      __size_of_Timer2Interrupt 0012                               __CFG_T3CMX$PORTC0 000000  
                            ??_DisplaySetCursor 01B8                                   ___fladd@signs 010C  
                                i2_isspace$2072 0007                                    ___aodiv@sign 0111  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 72D2  
                      __size_of_Timer4Interrupt 0174                              i2___aodiv@dividend 0001  
                        i2I2cWriteSerial@length 00BA                                    ___fladd@aexp 010D  
                                  ___fladd@bexp 010E                               __CFG_FOSC$INTIO67 000000  
                         _TMR2_InterruptHandler 01E9                         ??_EUSART1_RxDataHandler 0001  
                      i2ReadHumidity@convertion 00D0                                    ___aomod@sign 0111  
                               ??_VerifyLogging 005E  
