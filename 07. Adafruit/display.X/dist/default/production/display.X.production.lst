

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Oct 22 10:23:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133  0000                     
   134                           ; Version 2.05
   135                           ; Generated 20/12/2018 GMT
   136                           ; 
   137                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   138                           ; All rights reserved.
   139                           ; 
   140                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   141                           ; 
   142                           ; Redistribution and use in source and binary forms, with or without modification, are
   143                           ; permitted provided that the following conditions are met:
   144                           ; 
   145                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   146                           ;        conditions and the following disclaimer.
   147                           ; 
   148                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   149                           ;        of conditions and the following disclaimer in the documentation and/or other
   150                           ;        materials provided with the distribution.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18F26K22 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168  0000                     
   169                           	psect	idataBANK0
   170  006D60                     __pidataBANK0:
   171                           	opt callstack 0
   172                           
   173                           ;initializer for _readPos
   174  006D60  00                 	db	0
   175  006D61  03                 	db	3
   176                           
   177                           ;initializer for _costum_char
   178  006D62  40                 	db	64
   179  006D63  00                 	db	0
   180                           
   181                           	psect	idataBANK1
   182  006D40                     __pidataBANK1:
   183                           	opt callstack 0
   184                           
   185                           ;initializer for stoa@F1153
   186  006D40  28                 	db	40
   187  006D41  6E                 	db	110
   188  006D42  75                 	db	117
   189  006D43  6C                 	db	108
   190  006D44  6C                 	db	108
   191  006D45  29                 	db	41
   192  006D46  00                 	db	0
   193                           
   194                           	psect	smallconst
   195  001000                     __psmallconst:
   196                           	opt callstack 0
   197  001000  00                 	db	0
   198  001001  50                 	db	80
   199  001002                     __end_of_eeprom_Addr:
   200                           	opt callstack 0
   201  001002  40                 	db	64
   202  001003                     __end_of_adafruit_Addr:
   203                           	opt callstack 0
   204  001003  3C                 	db	60
   205  001004                     __end_of_display_Addr:
   206                           	opt callstack 0
   207  001004                     _procent_sign:
   208                           	opt callstack 0
   209  001004  80                 	db	128
   210  001005  48                 	db	72
   211  001006  40                 	db	64
   212  001007  18                 	db	24
   213  001008  19                 	db	25
   214  001009  02                 	db	2
   215  00100A  04                 	db	4
   216  00100B  08                 	db	8
   217  00100C  13                 	db	19
   218  00100D  03                 	db	3
   219  00100E  00                 	db	0
   220  00100F                     __end_of_procent_sign:
   221                           	opt callstack 0
   222  00100F                     _degree_sign:
   223                           	opt callstack 0
   224  00100F  80                 	db	128
   225  001010  40                 	db	64
   226  001011  40                 	db	64
   227  001012  06                 	db	6
   228  001013  09                 	db	9
   229  001014  09                 	db	9
   230  001015  06                 	db	6
   231  001016  00                 	db	0
   232  001017  00                 	db	0
   233  001018  00                 	db	0
   234  001019  00                 	db	0
   235  00101A                     __end_of_degree_sign:
   236                           	opt callstack 0
   237  00101A                     _humiText:
   238                           	opt callstack 0
   239  00101A  40                 	db	64
   240  00101B  48                 	db	72
   241  00101C  75                 	db	117
   242  00101D  6D                 	db	109
   243  00101E  69                 	db	105
   244  00101F  3A                 	db	58
   245  001020  00                 	db	0
   246  001021                     __end_of_humiText:
   247                           	opt callstack 0
   248  001021                     _tempText:
   249                           	opt callstack 0
   250  001021  40                 	db	64
   251  001022  54                 	db	84
   252  001023  65                 	db	101
   253  001024  6D                 	db	109
   254  001025  70                 	db	112
   255  001026  3A                 	db	58
   256  001027  00                 	db	0
   257  001028                     __end_of_tempText:
   258                           	opt callstack 0
   259  001028                     _nextPos:
   260                           	opt callstack 0
   261  001028  00                 	db	0
   262  001029  00                 	db	0
   263  00102A  00                 	db	0
   264  00102B  03                 	db	3
   265  00102C                     __end_of_nextPos:
   266                           	opt callstack 0
   267  00102C                     _displayInit:
   268                           	opt callstack 0
   269  00102C  00                 	db	0
   270  00102D  38                 	db	56
   271  00102E  0F                 	db	15
   272  00102F  06                 	db	6
   273  001030                     __end_of_displayInit:
   274                           	opt callstack 0
   275  001030                     _verifyPos:
   276                           	opt callstack 0
   277  001030  00                 	db	0
   278  001031  02                 	db	2
   279  001032  02                 	db	2
   280  001033                     __end_of_verifyPos:
   281                           	opt callstack 0
   282  001033                     _clearDisplay:
   283                           	opt callstack 0
   284  001033  00                 	db	0
   285  001034  01                 	db	1
   286  001035                     __end_of_clearDisplay:
   287                           	opt callstack 0
   288  001035                     _adafruit_temp_command:
   289                           	opt callstack 0
   290  001035  E3                 	db	227
   291  001036                     __end_of_adafruit_temp_command:
   292                           	opt callstack 0
   293  001036                     _adafruit_humi_command:
   294                           	opt callstack 0
   295  001036  E5                 	db	229
   296  001037                     __end_of_adafruit_humi_command:
   297                           	opt callstack 0
   298  0000                     _T6CONbits	set	3914
   299  0000                     _T6CON	set	3914
   300  0000                     _TMR6	set	3916
   301  0000                     _PR6	set	3915
   302  0000                     _T4CONbits	set	3921
   303  0000                     _T4CON	set	3921
   304  0000                     _TMR4	set	3923
   305  0000                     _PR4	set	3922
   306  0000                     _ANSELCbits	set	3898
   307  0000                     _ANSELA	set	3896
   308  0000                     _ANSELB	set	3897
   309  0000                     _ANSELC	set	3898
   310  0000                     _T2CONbits	set	4026
   311  0000                     _T2CON	set	4026
   312  0000                     _TMR2	set	4028
   313  0000                     _PR2	set	4027
   314  0000                     _SSP1STATbits	set	4039
   315  0000                     _SSP1BUF	set	4041
   316  0000                     _SSP1CON2bits	set	4037
   317  0000                     _SSP1STAT	set	4039
   318  0000                     _SSP1CON2	set	4037
   319  0000                     _SSP1CON1	set	4038
   320  0000                     _SSP1ADD	set	4040
   321  0000                     _TRISCbits	set	3988
   322  0000                     _PIR5bits	set	3966
   323  0000                     _PIE5bits	set	3965
   324  0000                     _PIR1bits	set	3998
   325  0000                     _RCONbits	set	4048
   326  0000                     _RCREG1	set	4014
   327  0000                     _RCSTA1bits	set	4011
   328  0000                     _TXREG1	set	4013
   329  0000                     _TXSTA1bits	set	4012
   330  0000                     _SPBRGH1	set	4016
   331  0000                     _SPBRG1	set	4015
   332  0000                     _TXSTA1	set	4012
   333  0000                     _RCSTA1	set	4011
   334  0000                     _BAUDCON1	set	4024
   335  0000                     _PIE1bits	set	3997
   336  0000                     _INTCONbits	set	4082
   337  0000                     _INTCON2bits	set	4081
   338  0000                     _WPUB	set	3937
   339  0000                     _TRISC	set	3988
   340  0000                     _TRISB	set	3987
   341  0000                     _TRISA	set	3986
   342  0000                     _LATC	set	3979
   343  0000                     _LATB	set	3978
   344  0000                     _LATA	set	3977
   345  0000                     _OSCTUNE	set	3995
   346  0000                     _OSCCON2	set	4050
   347  0000                     _OSCCON	set	4051
   348  0000                     _PLLRDY	set	32407
   349  001037                     STR_11:
   350                           
   351                           ; BSR set to: 1
   352  001037  54                 	db	84	;'T'
   353  001038  68                 	db	104	;'h'
   354  001039  65                 	db	101	;'e'
   355  00103A  20                 	db	32
   356  00103B  6C                 	db	108	;'l'
   357  00103C  61                 	db	97	;'a'
   358  00103D  73                 	db	115	;'s'
   359  00103E  74                 	db	116	;'t'
   360  00103F  20                 	db	32
   361  001040  73                 	db	115	;'s'
   362  001041  74                 	db	116	;'t'
   363  001042  61                 	db	97	;'a'
   364  001043  74                 	db	116	;'t'
   365  001044  75                 	db	117	;'u'
   366  001045  73                 	db	115	;'s'
   367  001046  20                 	db	32
   368  001047  69                 	db	105	;'i'
   369  001048  73                 	db	115	;'s'
   370  001049  20                 	db	32
   371  00104A  6E                 	db	110	;'n'
   372  00104B  6F                 	db	111	;'o'
   373  00104C  74                 	db	116	;'t'
   374  00104D  20                 	db	32
   375  00104E  30                 	db	48	;'0'
   376  00104F  78                 	db	120	;'x'
   377  001050  30                 	db	48	;'0'
   378  001051  31                 	db	49	;'1'
   379  001052  20                 	db	32
   380  001053  6F                 	db	111	;'o'
   381  001054  72                 	db	114	;'r'
   382  001055  20                 	db	32
   383  001056  30                 	db	48	;'0'
   384  001057  78                 	db	120	;'x'
   385  001058  30                 	db	48	;'0'
   386  001059  32                 	db	50	;'2'
   387  00105A  20                 	db	32
   388  00105B  0D                 	db	13
   389  00105C  0A                 	db	10
   390  00105D  00                 	db	0
   391  00105E                     STR_7:
   392                           
   393                           ; BSR set to: 1
   394  00105E  25                 	db	37
   395  00105F  73                 	db	115	;'s'
   396  001060  2C                 	db	44
   397  001061  20                 	db	32
   398  001062  64                 	db	100	;'d'
   399  001063  69                 	db	105	;'i'
   400  001064  64                 	db	100	;'d'
   401  001065  20                 	db	32
   402  001066  6E                 	db	110	;'n'
   403  001067  6F                 	db	111	;'o'
   404  001068  74                 	db	116	;'t'
   405  001069  20                 	db	32
   406  00106A  6D                 	db	109	;'m'
   407  00106B  61                 	db	97	;'a'
   408  00106C  74                 	db	116	;'t'
   409  00106D  63                 	db	99	;'c'
   410  00106E  68                 	db	104	;'h'
   411  00106F  20                 	db	32
   412  001070  61                 	db	97	;'a'
   413  001071  20                 	db	32
   414  001072  63                 	db	99	;'c'
   415  001073  6F                 	db	111	;'o'
   416  001074  6D                 	db	109	;'m'
   417  001075  6D                 	db	109	;'m'
   418  001076  61                 	db	97	;'a'
   419  001077  6E                 	db	110	;'n'
   420  001078  64                 	db	100	;'d'
   421  001079  20                 	db	32
   422  00107A  0A                 	db	10
   423  00107B  0D                 	db	13
   424  00107C  00                 	db	0
   425  00107D                     STR_15:
   426                           
   427                           ; BSR set to: 1
   428  00107D  32                 	db	50	;'2'
   429  00107E  6E                 	db	110	;'n'
   430  00107F  64                 	db	100	;'d'
   431  001080  20                 	db	32
   432  001081  52                 	db	82	;'R'
   433  001082  65                 	db	101	;'e'
   434  001083  61                 	db	97	;'a'
   435  001084  64                 	db	100	;'d'
   436  001085  20                 	db	32
   437  001086  64                 	db	100	;'d'
   438  001087  61                 	db	97	;'a'
   439  001088  74                 	db	116	;'t'
   440  001089  61                 	db	97	;'a'
   441  00108A  3A                 	db	58	;':'
   442  00108B  20                 	db	32
   443  00108C  25                 	db	37
   444  00108D  73                 	db	115	;'s'
   445  00108E  20                 	db	32
   446  00108F  0D                 	db	13
   447  001090  0A                 	db	10
   448  001091  00                 	db	0
   449  001092                     STR_13:
   450                           
   451                           ; BSR set to: 1
   452  001092  31                 	db	49	;'1'
   453  001093  73                 	db	115	;'s'
   454  001094  74                 	db	116	;'t'
   455  001095  20                 	db	32
   456  001096  52                 	db	82	;'R'
   457  001097  65                 	db	101	;'e'
   458  001098  61                 	db	97	;'a'
   459  001099  64                 	db	100	;'d'
   460  00109A  20                 	db	32
   461  00109B  64                 	db	100	;'d'
   462  00109C  61                 	db	97	;'a'
   463  00109D  74                 	db	116	;'t'
   464  00109E  61                 	db	97	;'a'
   465  00109F  3A                 	db	58	;':'
   466  0010A0  20                 	db	32
   467  0010A1  25                 	db	37
   468  0010A2  73                 	db	115	;'s'
   469  0010A3  20                 	db	32
   470  0010A4  0D                 	db	13
   471  0010A5  0A                 	db	10
   472  0010A6  00                 	db	0
   473  0010A7                     STR_3:
   474                           
   475                           ; BSR set to: 1
   476  0010A7  53                 	db	83	;'S'
   477  0010A8  74                 	db	116	;'t'
   478  0010A9  61                 	db	97	;'a'
   479  0010AA  72                 	db	114	;'r'
   480  0010AB  74                 	db	116	;'t'
   481  0010AC  20                 	db	32
   482  0010AD  74                 	db	116	;'t'
   483  0010AE  69                 	db	105	;'i'
   484  0010AF  6D                 	db	109	;'m'
   485  0010B0  65                 	db	101	;'e'
   486  0010B1  72                 	db	114	;'r'
   487  0010B2  20                 	db	32
   488  0010B3  0D                 	db	13
   489  0010B4  0A                 	db	10
   490  0010B5  00                 	db	0
   491  0010B6                     STR_6:
   492                           
   493                           ; BSR set to: 1
   494  0010B6  53                 	db	83	;'S'
   495  0010B7  74                 	db	116	;'t'
   496  0010B8  6F                 	db	111	;'o'
   497  0010B9  70                 	db	112	;'p'
   498  0010BA  20                 	db	32
   499  0010BB  74                 	db	116	;'t'
   500  0010BC  69                 	db	105	;'i'
   501  0010BD  6D                 	db	109	;'m'
   502  0010BE  65                 	db	101	;'e'
   503  0010BF  72                 	db	114	;'r'
   504  0010C0  20                 	db	32
   505  0010C1  0D                 	db	13
   506  0010C2  0A                 	db	10
   507  0010C3  00                 	db	0
   508  0010C4                     STR_10:
   509                           
   510                           ; BSR set to: 1
   511  0010C4  46                 	db	70	;'F'
   512  0010C5  75                 	db	117	;'u'
   513  0010C6  63                 	db	99	;'c'
   514  0010C7  6B                 	db	107	;'k'
   515  0010C8  20                 	db	32
   516  0010C9  31                 	db	49	;'1'
   517  0010CA  20                 	db	32
   518  0010CB  0D                 	db	13
   519  0010CC  0A                 	db	10
   520  0010CD  00                 	db	0
   521  0010CE                     STR_8:
   522                           
   523                           ; BSR set to: 1
   524  0010CE  40                 	db	64	;'@'
   525  0010CF  25                 	db	37
   526  0010D0  2E                 	db	46
   527  0010D1  31                 	db	49	;'1'
   528  0010D2  66                 	db	102	;'f'
   529  0010D3  00                 	db	0
   530  0010D4                     STR_1:
   531                           
   532                           ; BSR set to: 1
   533  0010D4  73                 	db	115	;'s'
   534  0010D5  74                 	db	116	;'t'
   535  0010D6  61                 	db	97	;'a'
   536  0010D7  72                 	db	114	;'r'
   537  0010D8  74                 	db	116	;'t'
   538  0010D9  00                 	db	0
   539  0010DA                     STR_4:
   540                           
   541                           ; BSR set to: 1
   542  0010DA  73                 	db	115	;'s'
   543  0010DB  74                 	db	116	;'t'
   544  0010DC  6F                 	db	111	;'o'
   545  0010DD  70                 	db	112	;'p'
   546  0010DE  00                 	db	0
   547  0010DF                     STR_16:
   548                           
   549                           ; BSR set to: 1
   550  0010DF  49                 	db	73	;'I'
   551  0010E0  4E                 	db	78	;'N'
   552  0010E1  46                 	db	70	;'F'
   553  0010E2  00                 	db	0
   554  0010E3                     STR_20:
   555                           
   556                           ; BSR set to: 1
   557  0010E3  4E                 	db	78	;'N'
   558  0010E4  41                 	db	65	;'A'
   559  0010E5  4E                 	db	78	;'N'
   560  0010E6  00                 	db	0
   561  0010E7                     STR_17:
   562                           
   563                           ; BSR set to: 1
   564  0010E7  69                 	db	105	;'i'
   565  0010E8  6E                 	db	110	;'n'
   566  0010E9  66                 	db	102	;'f'
   567  0010EA  00                 	db	0
   568  0010EB                     STR_21:
   569                           
   570                           ; BSR set to: 1
   571  0010EB  6E                 	db	110	;'n'
   572  0010EC  61                 	db	97	;'a'
   573  0010ED  6E                 	db	110	;'n'
   574  0010EE  00                 	db	0
   575  0010EF                     STR_24:
   576                           
   577                           ; BSR set to: 1
   578  0010EF  6C                 	db	108	;'l'
   579  0010F0  66                 	db	102	;'f'
   580  0010F1  00                 	db	0
   581  0000                     
   582                           ; #config settings
   583  0010F2  00                 	db	0	; dummy byte at the end
   584  0000                     
   585                           	psect	cinit
   586  00629C                     __pcinit:
   587                           	opt callstack 0
   588  00629C                     start_initialization:
   589                           	opt callstack 0
   590  00629C                     __initialization:
   591                           	opt callstack 0
   592                           
   593                           ; Initialize objects allocated to BANK1 (7 bytes)
   594                           ; load TBLPTR registers with __pidataBANK1
   595  00629C  0E40               	movlw	low __pidataBANK1
   596  00629E  6EF6               	movwf	tblptrl,c
   597  0062A0  0E6D               	movlw	high __pidataBANK1
   598  0062A2  6EF7               	movwf	tblptrh,c
   599  0062A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   600  0062A6  6EF8               	movwf	tblptru,c
   601  0062A8  EE01  F0D9         	lfsr	0,__pdataBANK1
   602  0062AC  EE10 F007          	lfsr	1,7
   603  0062B0                     copy_data0:
   604  0062B0  0009               	tblrd		*+
   605  0062B2  CFF5 FFEE          	movff	tablat,postinc0
   606  0062B6  50E5               	movf	postdec1,w,c
   607  0062B8  50E1               	movf	fsr1l,w,c
   608  0062BA  E1FA               	bnz	copy_data0
   609                           
   610                           ; Initialize objects allocated to BANK0 (4 bytes)
   611                           ; load TBLPTR registers with __pidataBANK0
   612  0062BC  0E60               	movlw	low __pidataBANK0
   613  0062BE  6EF6               	movwf	tblptrl,c
   614  0062C0  0E6D               	movlw	high __pidataBANK0
   615  0062C2  6EF7               	movwf	tblptrh,c
   616  0062C4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   617  0062C6  6EF8               	movwf	tblptru,c
   618  0062C8  EE00  F0FB         	lfsr	0,__pdataBANK0
   619  0062CC  EE10 F004          	lfsr	1,4
   620  0062D0                     copy_data1:
   621  0062D0  0009               	tblrd		*+
   622  0062D2  CFF5 FFEE          	movff	tablat,postinc0
   623  0062D6  50E5               	movf	postdec1,w,c
   624  0062D8  50E1               	movf	fsr1l,w,c
   625  0062DA  E1FA               	bnz	copy_data1
   626                           
   627                           ; Clear objects allocated to BANK3 (128 bytes)
   628  0062DC  EE03  F000         	lfsr	0,__pbssBANK3
   629  0062E0  0E80               	movlw	128
   630  0062E2                     clear_0:
   631  0062E2  6AEE               	clrf	postinc0,c
   632  0062E4  06E8               	decf	wreg,f,c
   633  0062E6  E1FD               	bnz	clear_0
   634                           
   635                           ; Clear objects allocated to BANK2 (208 bytes)
   636  0062E8  EE02  F000         	lfsr	0,__pbssBANK2
   637  0062EC  0ED0               	movlw	208
   638  0062EE                     clear_1:
   639  0062EE  6AEE               	clrf	postinc0,c
   640  0062F0  06E8               	decf	wreg,f,c
   641  0062F2  E1FD               	bnz	clear_1
   642                           
   643                           ; Clear objects allocated to BANK1 (60 bytes)
   644  0062F4  EE01  F09D         	lfsr	0,__pbssBANK1
   645  0062F8  0E3C               	movlw	60
   646  0062FA                     clear_2:
   647  0062FA  6AEE               	clrf	postinc0,c
   648  0062FC  06E8               	decf	wreg,f,c
   649  0062FE  E1FD               	bnz	clear_2
   650                           
   651                           ; Clear objects allocated to BANK0 (4 bytes)
   652  006300  0100               	movlb	0
   653  006302  6BFA               	clrf	(__pbssBANK0+3)& (0+255),b
   654  006304  6BF9               	clrf	(__pbssBANK0+2)& (0+255),b
   655  006306  6BF8               	clrf	(__pbssBANK0+1)& (0+255),b
   656  006308  6BF7               	clrf	__pbssBANK0& (0+255),b
   657  00630A                     end_of_initialization:
   658                           	opt callstack 0
   659  00630A                     __end_of__initialization:
   660                           	opt callstack 0
   661  00630A  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   662  00630C  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   663  00630E  0100               	movlb	0
   664  006310  EFE2  F025         	goto	_main	;jump to C main() function
   665                           
   666                           	psect	bssBANK0
   667  0000F7                     __pbssBANK0:
   668                           	opt callstack 0
   669  0000F7                     _tempRead:
   670                           	opt callstack 0
   671  0000F7                     	ds	2
   672  0000F9                     _displayLine:
   673                           	opt callstack 0
   674  0000F9                     	ds	2
   675                           
   676                           	psect	dataBANK0
   677  0000FB                     __pdataBANK0:
   678                           	opt callstack 0
   679  0000FB                     _readPos:
   680                           	opt callstack 0
   681  0000FB                     	ds	2
   682  0000FD                     _costum_char:
   683                           	opt callstack 0
   684  0000FD                     	ds	2
   685                           
   686                           	psect	bssBANK1
   687  00019D                     __pbssBANK1:
   688                           	opt callstack 0
   689  00019D                     floorf@F524:
   690                           	opt callstack 0
   691  00019D                     	ds	4
   692  0001A1                     ___fpclassifyf@F463:
   693                           	opt callstack 0
   694  0001A1                     	ds	4
   695  0001A5                     _nout:
   696                           	opt callstack 0
   697  0001A5                     	ds	2
   698  0001A7                     _width:
   699                           	opt callstack 0
   700  0001A7                     	ds	2
   701  0001A9                     _prec:
   702                           	opt callstack 0
   703  0001A9                     	ds	2
   704  0001AB                     _flags:
   705                           	opt callstack 0
   706  0001AB                     	ds	2
   707  0001AD                     TMR6_ISR@CountCallBack:
   708                           	opt callstack 0
   709  0001AD                     	ds	2
   710  0001AF                     _TMR6_InterruptHandler:
   711                           	opt callstack 0
   712  0001AF                     	ds	2
   713  0001B1                     TMR4_ISR@CountCallBack:
   714                           	opt callstack 0
   715  0001B1                     	ds	2
   716  0001B3                     _TMR4_InterruptHandler:
   717                           	opt callstack 0
   718  0001B3                     	ds	2
   719  0001B5                     TMR2_ISR@CountCallBack:
   720                           	opt callstack 0
   721  0001B5                     	ds	2
   722  0001B7                     _TMR2_InterruptHandler:
   723                           	opt callstack 0
   724  0001B7                     	ds	2
   725  0001B9                     _EUSART1_ErrorHandler:
   726                           	opt callstack 0
   727  0001B9                     	ds	2
   728  0001BB                     _EUSART1_OverrunErrorHandler:
   729                           	opt callstack 0
   730  0001BB                     	ds	2
   731  0001BD                     _EUSART1_FramingErrorHandler:
   732                           	opt callstack 0
   733  0001BD                     	ds	2
   734  0001BF                     _EUSART1_RxDefaultInterruptHandler:
   735                           	opt callstack 0
   736  0001BF                     	ds	2
   737  0001C1                     _EUSART1_TxDefaultInterruptHandler:
   738                           	opt callstack 0
   739  0001C1                     	ds	2
   740  0001C3                     _index:
   741                           	opt callstack 0
   742  0001C3                     	ds	1
   743  0001C4                     _eusart1RxLastError:
   744                           	opt callstack 0
   745  0001C4                     	ds	1
   746  0001C5                     _eusart1RxCount:
   747                           	opt callstack 0
   748  0001C5                     	ds	1
   749  0001C6                     _eusart1RxTail:
   750                           	opt callstack 0
   751  0001C6                     	ds	1
   752  0001C7                     _eusart1RxHead:
   753                           	opt callstack 0
   754  0001C7                     	ds	1
   755  0001C8                     _eusart1TxBufferRemaining:
   756                           	opt callstack 0
   757  0001C8                     	ds	1
   758  0001C9                     _eusart1TxTail:
   759                           	opt callstack 0
   760  0001C9                     	ds	1
   761  0001CA                     _eusart1TxHead:
   762                           	opt callstack 0
   763  0001CA                     	ds	1
   764  0001CB                     _readData:
   765                           	opt callstack 0
   766  0001CB                     	ds	4
   767  0001CF                     _logData:
   768                           	opt callstack 0
   769  0001CF                     	ds	4
   770  0001D3                     _logStatus:
   771                           	opt callstack 0
   772  0001D3                     	ds	2
   773  0001D5                     _logPos:
   774                           	opt callstack 0
   775  0001D5                     	ds	2
   776  0001D7                     _humiRead:
   777                           	opt callstack 0
   778  0001D7                     	ds	2
   779                           
   780                           	psect	dataBANK1
   781  0001D9                     __pdataBANK1:
   782                           	opt callstack 0
   783  0001D9                     stoa@F1153:
   784                           	opt callstack 0
   785  0001D9                     	ds	7
   786                           
   787                           	psect	bssBANK2
   788  000200                     __pbssBANK2:
   789                           	opt callstack 0
   790  000200                     _eusart1RxStatusBuffer:
   791                           	opt callstack 0
   792  000200                     	ds	64
   793  000240                     _eusart1TxBuffer:
   794                           	opt callstack 0
   795  000240                     	ds	64
   796  000280                     _dbuf:
   797                           	opt callstack 0
   798  000280                     	ds	80
   799                           
   800                           	psect	bssBANK3
   801  000300                     __pbssBANK3:
   802                           	opt callstack 0
   803  000300                     _eusart1RxBuffer:
   804                           	opt callstack 0
   805  000300                     	ds	64
   806  000340                     _stringArry:
   807                           	opt callstack 0
   808  000340                     	ds	64
   809                           
   810                           	psect	cstackBANK1
   811  000100                     __pcstackBANK1:
   812                           	opt callstack 0
   813  000100                     ?_strncmp:
   814                           	opt callstack 0
   815  000100                     ?_strlen:
   816                           	opt callstack 0
   817  000100                     ?___fpclassifyf:
   818                           	opt callstack 0
   819  000100                     ?_isupper:
   820                           	opt callstack 0
   821  000100                     ?_isdigit:
   822                           	opt callstack 0
   823  000100                     ?_isspace:
   824                           	opt callstack 0
   825  000100                     ?___wmul:
   826                           	opt callstack 0
   827  000100                     ?___awdiv:
   828                           	opt callstack 0
   829  000100                     ?___awmod:
   830                           	opt callstack 0
   831  000100                     ?___fladd:
   832                           	opt callstack 0
   833  000100                     ?___fldiv:
   834                           	opt callstack 0
   835  000100                     ?___flmul:
   836                           	opt callstack 0
   837  000100                     ?___flneg:
   838                           	opt callstack 0
   839  000100                     ?___fltol:
   840                           	opt callstack 0
   841  000100                     EUSART1_Read@readValue:
   842                           	opt callstack 0
   843  000100                     EUSART1_Write@txData:
   844                           	opt callstack 0
   845  000100                     EUSART1_SetFramingErrorHandler@interruptHandler:
   846                           	opt callstack 0
   847  000100                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   848                           	opt callstack 0
   849  000100                     EUSART1_SetErrorHandler@interruptHandler:
   850                           	opt callstack 0
   851  000100                     EUSART1_SetTxInterruptHandler@interruptHandler:
   852                           	opt callstack 0
   853  000100                     EUSART1_SetRxInterruptHandler@interruptHandler:
   854                           	opt callstack 0
   855  000100                     i2c_WriteSerial@addr:
   856                           	opt callstack 0
   857  000100                     i2c_ReadSerial@addr:
   858                           	opt callstack 0
   859  000100                     TMR2_SetInterruptHandler@InterruptHandler:
   860                           	opt callstack 0
   861  000100                     TMR4_SetInterruptHandler@InterruptHandler:
   862                           	opt callstack 0
   863  000100                     TMR6_SetInterruptHandler@InterruptHandler:
   864                           	opt callstack 0
   865  000100                     ___wmul@multiplier:
   866                           	opt callstack 0
   867  000100                     ___awdiv@dividend:
   868                           	opt callstack 0
   869  000100                     ___awmod@dividend:
   870                           	opt callstack 0
   871  000100                     isdigit@c:
   872                           	opt callstack 0
   873  000100                     isspace@c:
   874                           	opt callstack 0
   875  000100                     isupper@c:
   876                           	opt callstack 0
   877  000100                     memset@dest:
   878                           	opt callstack 0
   879  000100                     strcpy@dest:
   880                           	opt callstack 0
   881  000100                     strlen@s:
   882                           	opt callstack 0
   883  000100                     strncmp@_l:
   884                           	opt callstack 0
   885  000100                     ___fleq@ff1:
   886                           	opt callstack 0
   887  000100                     ___flneg@f1:
   888                           	opt callstack 0
   889  000100                     ___fltol@f1:
   890                           	opt callstack 0
   891  000100                     ___fladd@b:
   892                           	opt callstack 0
   893  000100                     ___fldiv@b:
   894                           	opt callstack 0
   895  000100                     ___flmul@b:
   896                           	opt callstack 0
   897  000100                     ___fpclassifyf@x:
   898                           	opt callstack 0
   899                           
   900                           ; 4 bytes @ 0x0
   901  000100                     	ds	1
   902  000101                     putch@txData:
   903                           	opt callstack 0
   904                           
   905                           ; 1 bytes @ 0x1
   906  000101                     	ds	1
   907  000102                     ??_isupper:
   908  000102                     ??_isdigit:
   909  000102                     ??_isspace:
   910  000102                     i2c_WriteSerial@data:
   911                           	opt callstack 0
   912  000102                     i2c_ReadSerial@data:
   913                           	opt callstack 0
   914  000102                     ___wmul@multiplicand:
   915                           	opt callstack 0
   916  000102                     ___awdiv@divisor:
   917                           	opt callstack 0
   918  000102                     ___awmod@divisor:
   919                           	opt callstack 0
   920  000102                     memset@c:
   921                           	opt callstack 0
   922  000102                     fputc@c:
   923                           	opt callstack 0
   924  000102                     strcpy@src:
   925                           	opt callstack 0
   926  000102                     strlen@a:
   927                           	opt callstack 0
   928  000102                     strncmp@_r:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0x2
   932  000102                     	ds	2
   933  000104                     ??___fpclassifyf:
   934  000104                     ??_strcpy:
   935  000104                     ??___fltol:
   936  000104                     ___awdiv@counter:
   937                           	opt callstack 0
   938  000104                     ___awmod@counter:
   939                           	opt callstack 0
   940  000104                     i2c_WriteSerial@length:
   941                           	opt callstack 0
   942  000104                     i2c_ReadSerial@length:
   943                           	opt callstack 0
   944  000104                     ___wmul@product:
   945                           	opt callstack 0
   946  000104                     memset@n:
   947                           	opt callstack 0
   948  000104                     fputc@fp:
   949                           	opt callstack 0
   950  000104                     strncmp@n:
   951                           	opt callstack 0
   952  000104                     ___fleq@ff2:
   953                           	opt callstack 0
   954  000104                     ___fladd@a:
   955                           	opt callstack 0
   956  000104                     ___fldiv@a:
   957                           	opt callstack 0
   958  000104                     ___flmul@a:
   959                           	opt callstack 0
   960                           
   961                           ; 4 bytes @ 0x4
   962  000104                     	ds	1
   963  000105                     ___awdiv@sign:
   964                           	opt callstack 0
   965  000105                     ___awmod@sign:
   966                           	opt callstack 0
   967                           
   968                           ; 1 bytes @ 0x5
   969  000105                     	ds	1
   970  000106                     ??_strncmp:
   971  000106                     ??_memset:
   972  000106                     ??_i2c_WriteSerial:
   973  000106                     ??_fputc:
   974  000106                     ??_i2c_ReadSerial:
   975  000106                     ?_tolower:
   976                           	opt callstack 0
   977  000106                     _isspace$2136:
   978                           	opt callstack 0
   979  000106                     ___awdiv@quotient:
   980                           	opt callstack 0
   981  000106                     strcpy@s:
   982                           	opt callstack 0
   983  000106                     tolower@c:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x6
   987  000106                     	ds	1
   988  000107                     ?_atoi:
   989                           	opt callstack 0
   990  000107                     atoi@s:
   991                           	opt callstack 0
   992  000107                     strncmp@l:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0x7
   996  000107                     	ds	1
   997  000108                     ??_tolower:
   998  000108                     ??___fladd:
   999  000108                     ??___fldiv:
  1000  000108                     ??___flmul:
  1001  000108                     ??___fleq:
  1002  000108                     i2c_WriteSerial@targetAddr:
  1003                           	opt callstack 0
  1004  000108                     ___fltol@sign1:
  1005                           	opt callstack 0
  1006  000108                     ___fpclassifyf@e:
  1007                           	opt callstack 0
  1008  000108                     memset@k:
  1009                           	opt callstack 0
  1010  000108                     strcpy@d:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x8
  1014  000108                     	ds	1
  1015  000109                     ??_atoi:
  1016  000109                     ___fltol@exp1:
  1017                           	opt callstack 0
  1018  000109                     i2c_WriteSerial@i:
  1019                           	opt callstack 0
  1020  000109                     strncmp@r:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x9
  1024  000109                     	ds	1
  1025  00010A                     i2c_ReadSerial@targetAddr:
  1026                           	opt callstack 0
  1027  00010A                     memset@s:
  1028                           	opt callstack 0
  1029  00010A                     ___fpclassifyf@u:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 4 bytes @ 0xA
  1033  00010A                     	ds	1
  1034  00010B                     ?_stoa:
  1035                           	opt callstack 0
  1036  00010B                     i2c_ReadSerial@i:
  1037                           	opt callstack 0
  1038  00010B                     stoa@fp:
  1039                           	opt callstack 0
  1040  00010B                     fputs@s:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xB
  1044  00010B                     	ds	1
  1045  00010C                     ___fladd@signs:
  1046                           	opt callstack 0
  1047  00010C                     ___flmul@sign:
  1048                           	opt callstack 0
  1049  00010C                     _tolower$2233:
  1050                           	opt callstack 0
  1051  00010C                     ___fldiv@rem:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 4 bytes @ 0xC
  1055  00010C                     	ds	1
  1056  00010D                     ___fladd@aexp:
  1057                           	opt callstack 0
  1058  00010D                     stoa@s:
  1059                           	opt callstack 0
  1060  00010D                     atoi@neg:
  1061                           	opt callstack 0
  1062  00010D                     fputs@fp:
  1063                           	opt callstack 0
  1064  00010D                     ___flmul@grs:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 4 bytes @ 0xD
  1068  00010D                     	ds	1
  1069  00010E                     ___fladd@bexp:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 1 bytes @ 0xE
  1073  00010E                     	ds	1
  1074  00010F                     ??_stoa:
  1075  00010F                     ___fladd@grs:
  1076                           	opt callstack 0
  1077  00010F                     fputs@c:
  1078                           	opt callstack 0
  1079  00010F                     _atoi$2105:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 2 bytes @ 0xF
  1083  00010F                     	ds	1
  1084  000110                     ___fldiv@sign:
  1085                           	opt callstack 0
  1086  000110                     fputs@i:
  1087                           	opt callstack 0
  1088  000110                     stoa@nuls:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 7 bytes @ 0x10
  1092  000110                     	ds	1
  1093  000111                     ___flmul@aexp:
  1094                           	opt callstack 0
  1095  000111                     ___fldiv@new_exp:
  1096                           	opt callstack 0
  1097  000111                     _atoi$2107:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x11
  1101  000111                     	ds	1
  1102  000112                     ?_pad:
  1103                           	opt callstack 0
  1104  000112                     ___flmul@bexp:
  1105                           	opt callstack 0
  1106  000112                     pad@fp:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x12
  1110  000112                     	ds	1
  1111  000113                     _atoi$2106:
  1112                           	opt callstack 0
  1113  000113                     ___fldiv@grs:
  1114                           	opt callstack 0
  1115  000113                     ___flmul@prod:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 4 bytes @ 0x13
  1119  000113                     	ds	1
  1120  000114                     pad@buf:
  1121                           	opt callstack 0
  1122  000114                     atoi@n:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x14
  1126  000114                     	ds	2
  1127  000116                     pad@p:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x16
  1131  000116                     	ds	1
  1132  000117                     ___fldiv@bexp:
  1133                           	opt callstack 0
  1134  000117                     stoa@i:
  1135                           	opt callstack 0
  1136  000117                     ___flmul@temp:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x17
  1140  000117                     	ds	1
  1141  000118                     ??_pad:
  1142  000118                     ___fldiv@aexp:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x18
  1146  000118                     	ds	1
  1147  000119                     ?_floorf:
  1148                           	opt callstack 0
  1149  000119                     ?___flsub:
  1150                           	opt callstack 0
  1151  000119                     pad@i:
  1152                           	opt callstack 0
  1153  000119                     stoa@w:
  1154                           	opt callstack 0
  1155  000119                     ___flge@ff1:
  1156                           	opt callstack 0
  1157  000119                     ___flsub@b:
  1158                           	opt callstack 0
  1159  000119                     floorf@x:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x19
  1163  000119                     	ds	2
  1164  00011B                     pad@w:
  1165                           	opt callstack 0
  1166  00011B                     stoa@cp:
  1167                           	opt callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x1B
  1170  00011B                     	ds	2
  1171  00011D                     ??_floorf:
  1172  00011D                     stoa@p:
  1173                           	opt callstack 0
  1174  00011D                     ___flge@ff2:
  1175                           	opt callstack 0
  1176  00011D                     ___flsub@a:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x1D
  1180  00011D                     	ds	2
  1181  00011F                     stoa@l:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x1F
  1185  00011F                     	ds	2
  1186  000121                     ??___flge:
  1187                           
  1188                           ; 1 bytes @ 0x21
  1189  000121                     	ds	2
  1190  000123                     floorf@m:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x23
  1194  000123                     	ds	4
  1195  000127                     floorf@e:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x27
  1199  000127                     	ds	2
  1200  000129                     floorf@u:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x29
  1204  000129                     	ds	4
  1205  00012D                     ?_efgtoa:
  1206                           	opt callstack 0
  1207  00012D                     efgtoa@fp:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x2D
  1211  00012D                     	ds	2
  1212  00012F                     efgtoa@f:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x2F
  1216  00012F                     	ds	4
  1217  000133                     efgtoa@c:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x33
  1221  000133                     	ds	1
  1222  000134                     ??_efgtoa:
  1223                           
  1224                           ; 1 bytes @ 0x34
  1225  000134                     	ds	5
  1226  000139                     efgtoa@ou:
  1227                           	opt callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x39
  1230  000139                     	ds	4
  1231  00013D                     _efgtoa$1592:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x3D
  1235  00013D                     	ds	2
  1236  00013F                     _efgtoa$1593:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x3F
  1240  00013F                     	ds	2
  1241  000141                     _efgtoa$1598:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x41
  1245  000141                     	ds	2
  1246  000143                     _efgtoa$1602:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x43
  1250  000143                     	ds	2
  1251  000145                     _efgtoa$1603:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x45
  1255  000145                     	ds	2
  1256  000147                     _efgtoa$1604:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x47
  1260  000147                     	ds	2
  1261  000149                     efgtoa@t:
  1262                           	opt callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x49
  1265  000149                     	ds	2
  1266  00014B                     efgtoa@pp:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x4B
  1270  00014B                     	ds	2
  1271  00014D                     efgtoa@m:
  1272                           	opt callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x4D
  1275  00014D                     	ds	2
  1276  00014F                     efgtoa@ne:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x4F
  1280  00014F                     	ds	2
  1281  000151                     efgtoa@d:
  1282                           	opt callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x51
  1285  000151                     	ds	2
  1286  000153                     efgtoa@sign:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x53
  1290  000153                     	ds	2
  1291  000155                     efgtoa@p:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x55
  1295  000155                     	ds	2
  1296  000157                     efgtoa@nmode:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x57
  1300  000157                     	ds	1
  1301  000158                     efgtoa@w:
  1302                           	opt callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x58
  1305  000158                     	ds	2
  1306  00015A                     efgtoa@mode:
  1307                           	opt callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x5A
  1310  00015A                     	ds	1
  1311  00015B                     efgtoa@h:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x5B
  1315  00015B                     	ds	4
  1316  00015F                     efgtoa@l:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 4 bytes @ 0x5F
  1320  00015F                     	ds	4
  1321  000163                     efgtoa@i:
  1322                           	opt callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x63
  1325  000163                     	ds	2
  1326  000165                     efgtoa@g:
  1327                           	opt callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x65
  1330  000165                     	ds	4
  1331  000169                     efgtoa@e:
  1332                           	opt callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x69
  1335  000169                     	ds	2
  1336  00016B                     efgtoa@n:
  1337                           	opt callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x6B
  1340  00016B                     	ds	2
  1341  00016D                     efgtoa@u:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 4 bytes @ 0x6D
  1345  00016D                     	ds	4
  1346  000171                     ?_vfpfcnvrt:
  1347                           	opt callstack 0
  1348  000171                     vfpfcnvrt@fp:
  1349                           	opt callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x71
  1352  000171                     	ds	2
  1353  000173                     vfpfcnvrt@fmt:
  1354                           	opt callstack 0
  1355                           
  1356                           ; 2 bytes @ 0x73
  1357  000173                     	ds	2
  1358  000175                     vfpfcnvrt@ap:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x75
  1362  000175                     	ds	2
  1363  000177                     ??_vfpfcnvrt:
  1364                           
  1365                           ; 1 bytes @ 0x77
  1366  000177                     	ds	4
  1367  00017B                     vfpfcnvrt@cp:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x7B
  1371  00017B                     	ds	2
  1372  00017D                     _vfpfcnvrt$1629:
  1373                           	opt callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x7D
  1376  00017D                     	ds	2
  1377  00017F                     _vfpfcnvrt$1633:
  1378                           	opt callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x7F
  1381  00017F                     	ds	2
  1382  000181                     vfpfcnvrt@f:
  1383                           	opt callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x81
  1386  000181                     	ds	4
  1387  000185                     vfpfcnvrt@c:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 1 bytes @ 0x85
  1391  000185                     	ds	1
  1392  000186                     vfpfcnvrt@ct:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 3 bytes @ 0x86
  1396  000186                     	ds	3
  1397  000189                     ?_vfprintf:
  1398                           	opt callstack 0
  1399  000189                     vfprintf@fp:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x89
  1403  000189                     	ds	2
  1404  00018B                     vfprintf@fmt:
  1405                           	opt callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x8B
  1408  00018B                     	ds	2
  1409  00018D                     vfprintf@ap:
  1410                           	opt callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x8D
  1413  00018D                     	ds	2
  1414  00018F                     vfprintf@cfmt:
  1415                           	opt callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x8F
  1418  00018F                     	ds	2
  1419  000191                     ?_printf:
  1420                           	opt callstack 0
  1421  000191                     printf@fmt:
  1422                           	opt callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x91
  1425  000191                     	ds	4
  1426  000195                     
  1427                           ; 1 bytes @ 0x95
  1428  000195                     	ds	2
  1429  000197                     printf@ap:
  1430                           	opt callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x97
  1433  000197                     	ds	2
  1434  000199                     ??_dataLogger_init:
  1435                           
  1436                           ; 1 bytes @ 0x99
  1437  000199                     	ds	1
  1438  00019A                     ??_main:
  1439                           
  1440                           ; 1 bytes @ 0x9A
  1441  00019A                     	ds	2
  1442  00019C                     main@tmp:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 1 bytes @ 0x9C
  1446  00019C                     	ds	1
  1447                           
  1448                           	psect	cstackBANK0
  1449  000060                     __pcstackBANK0:
  1450                           	opt callstack 0
  1451  000060                     ?i2_efgtoa:
  1452                           	opt callstack 0
  1453  000060                     i2efgtoa@fp:
  1454                           	opt callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x0
  1457  000060                     	ds	2
  1458  000062                     i2efgtoa@f:
  1459                           	opt callstack 0
  1460                           
  1461                           ; 4 bytes @ 0x2
  1462  000062                     	ds	4
  1463  000066                     i2efgtoa@c:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 1 bytes @ 0x6
  1467  000066                     	ds	1
  1468  000067                     i2efgtoa@ou:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x7
  1472  000067                     	ds	4
  1473  00006B                     i2_efgtoa$1592:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 2 bytes @ 0xB
  1477  00006B                     	ds	2
  1478  00006D                     i2_efgtoa$1593:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 2 bytes @ 0xD
  1482  00006D                     	ds	2
  1483  00006F                     i2_efgtoa$1598:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 2 bytes @ 0xF
  1487  00006F                     	ds	2
  1488  000071                     i2_efgtoa$1602:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x11
  1492  000071                     	ds	2
  1493  000073                     i2_efgtoa$1603:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x13
  1497  000073                     	ds	2
  1498  000075                     i2_efgtoa$1604:
  1499                           	opt callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x15
  1502  000075                     	ds	2
  1503  000077                     i2efgtoa@t:
  1504                           	opt callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x17
  1507  000077                     	ds	2
  1508  000079                     i2efgtoa@pp:
  1509                           	opt callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x19
  1512  000079                     	ds	2
  1513  00007B                     i2efgtoa@m:
  1514                           	opt callstack 0
  1515                           
  1516                           ; 2 bytes @ 0x1B
  1517  00007B                     	ds	2
  1518  00007D                     i2efgtoa@ne:
  1519                           	opt callstack 0
  1520                           
  1521                           ; 2 bytes @ 0x1D
  1522  00007D                     	ds	2
  1523  00007F                     i2efgtoa@d:
  1524                           	opt callstack 0
  1525                           
  1526                           ; 2 bytes @ 0x1F
  1527  00007F                     	ds	2
  1528  000081                     i2efgtoa@sign:
  1529                           	opt callstack 0
  1530                           
  1531                           ; 2 bytes @ 0x21
  1532  000081                     	ds	2
  1533  000083                     i2efgtoa@p:
  1534                           	opt callstack 0
  1535                           
  1536                           ; 2 bytes @ 0x23
  1537  000083                     	ds	2
  1538  000085                     i2efgtoa@nmode:
  1539                           	opt callstack 0
  1540                           
  1541                           ; 1 bytes @ 0x25
  1542  000085                     	ds	1
  1543  000086                     i2efgtoa@w:
  1544                           	opt callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x26
  1547  000086                     	ds	2
  1548  000088                     i2efgtoa@mode:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 1 bytes @ 0x28
  1552  000088                     	ds	1
  1553  000089                     i2efgtoa@h:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x29
  1557  000089                     	ds	4
  1558  00008D                     i2efgtoa@l:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 4 bytes @ 0x2D
  1562  00008D                     	ds	4
  1563  000091                     i2efgtoa@i:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x31
  1567  000091                     	ds	2
  1568  000093                     i2efgtoa@g:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 4 bytes @ 0x33
  1572  000093                     	ds	4
  1573  000097                     i2efgtoa@e:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x37
  1577  000097                     	ds	2
  1578  000099                     i2efgtoa@n:
  1579                           	opt callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x39
  1582  000099                     	ds	2
  1583  00009B                     i2efgtoa@u:
  1584                           	opt callstack 0
  1585                           
  1586                           ; 4 bytes @ 0x3B
  1587  00009B                     	ds	4
  1588  00009F                     ?i2_vfpfcnvrt:
  1589                           	opt callstack 0
  1590  00009F                     i2vfpfcnvrt@fp:
  1591                           	opt callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x3F
  1594  00009F                     	ds	2
  1595  0000A1                     i2vfpfcnvrt@fmt:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x41
  1599  0000A1                     	ds	2
  1600  0000A3                     i2vfpfcnvrt@ap:
  1601                           	opt callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x43
  1604  0000A3                     	ds	2
  1605  0000A5                     ??i2_vfpfcnvrt:
  1606                           
  1607                           ; 1 bytes @ 0x45
  1608  0000A5                     	ds	4
  1609  0000A9                     i2vfpfcnvrt@cp:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x49
  1613  0000A9                     	ds	2
  1614  0000AB                     i2_vfpfcnvrt$1629:
  1615                           	opt callstack 0
  1616                           
  1617                           ; 2 bytes @ 0x4B
  1618  0000AB                     	ds	2
  1619  0000AD                     i2_vfpfcnvrt$1633:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x4D
  1623  0000AD                     	ds	2
  1624  0000AF                     i2vfpfcnvrt@f:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 4 bytes @ 0x4F
  1628  0000AF                     	ds	4
  1629  0000B3                     i2vfpfcnvrt@ct:
  1630                           	opt callstack 0
  1631                           
  1632                           ; 3 bytes @ 0x53
  1633  0000B3                     	ds	3
  1634  0000B6                     i2vfpfcnvrt@c:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 1 bytes @ 0x56
  1638  0000B6                     	ds	1
  1639  0000B7                     ?i2_vfprintf:
  1640                           	opt callstack 0
  1641  0000B7                     i2vfprintf@fp:
  1642                           	opt callstack 0
  1643                           
  1644                           ; 2 bytes @ 0x57
  1645  0000B7                     	ds	2
  1646  0000B9                     i2vfprintf@fmt:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x59
  1650  0000B9                     	ds	2
  1651  0000BB                     i2vfprintf@ap:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x5B
  1655  0000BB                     	ds	2
  1656  0000BD                     i2vfprintf@cfmt:
  1657                           	opt callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x5D
  1660  0000BD                     	ds	2
  1661  0000BF                     ?_sprintf:
  1662                           	opt callstack 0
  1663  0000BF                     ?i2_printf:
  1664                           	opt callstack 0
  1665  0000BF                     sprintf@s:
  1666                           	opt callstack 0
  1667  0000BF                     i2printf@fmt:
  1668                           	opt callstack 0
  1669                           
  1670                           ; 2 bytes @ 0x5F
  1671  0000BF                     	ds	2
  1672  0000C1                     sprintf@fmt:
  1673                           	opt callstack 0
  1674                           
  1675                           ; 2 bytes @ 0x61
  1676  0000C1                     	ds	4
  1677  0000C5                     i2printf@ap:
  1678                           	opt callstack 0
  1679                           
  1680                           ; 2 bytes @ 0x65
  1681  0000C5                     	ds	4
  1682  0000C9                     sprintf@ap:
  1683                           	opt callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x69
  1686  0000C9                     	ds	2
  1687  0000CB                     sprintf@f:
  1688                           	opt callstack 0
  1689                           
  1690                           ; 6 bytes @ 0x6B
  1691  0000CB                     	ds	6
  1692  0000D1                     ??_adafruit:
  1693  0000D1                     ??_dataLogRead:
  1694                           
  1695                           ; 1 bytes @ 0x71
  1696  0000D1                     	ds	2
  1697  0000D3                     dataLogRead@readOutT:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 5 bytes @ 0x73
  1701  0000D3                     	ds	2
  1702  0000D5                     adafruit@outH:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 5 bytes @ 0x75
  1706  0000D5                     	ds	3
  1707  0000D8                     dataLogRead@readTemp:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 4 bytes @ 0x78
  1711  0000D8                     	ds	2
  1712  0000DA                     adafruit@outT:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 5 bytes @ 0x7A
  1716  0000DA                     	ds	5
  1717  0000DF                     adafruit@rh:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 4 bytes @ 0x7F
  1721  0000DF                     	ds	4
  1722  0000E3                     adafruit@temp:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 4 bytes @ 0x83
  1726  0000E3                     	ds	4
  1727  0000E7                     adafruit@rh_code:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 4 bytes @ 0x87
  1731  0000E7                     	ds	4
  1732  0000EB                     ??_INTERRUPT_InterruptManager:
  1733                           
  1734                           ; 1 bytes @ 0x8B
  1735  0000EB                     	ds	12
  1736                           
  1737                           	psect	cstackCOMRAM
  1738  000001                     __pcstackCOMRAM:
  1739                           	opt callstack 0
  1740  000001                     ?i2___wmul:
  1741                           	opt callstack 0
  1742  000001                     ?i2___awdiv:
  1743                           	opt callstack 0
  1744  000001                     ?i2___awmod:
  1745                           	opt callstack 0
  1746  000001                     ?i2___fpclassifyf:
  1747                           	opt callstack 0
  1748  000001                     ?i2_isdigit:
  1749                           	opt callstack 0
  1750  000001                     ?i2_isspace:
  1751                           	opt callstack 0
  1752  000001                     ?i2_isupper:
  1753                           	opt callstack 0
  1754  000001                     ?i2_strlen:
  1755                           	opt callstack 0
  1756  000001                     ?i2_strncmp:
  1757                           	opt callstack 0
  1758  000001                     ?___xxtofl:
  1759                           	opt callstack 0
  1760  000001                     ?i2___flneg:
  1761                           	opt callstack 0
  1762  000001                     ?i2___fltol:
  1763                           	opt callstack 0
  1764  000001                     i2EUSART1_Write@txData:
  1765                           	opt callstack 0
  1766  000001                     i2i2c_WriteSerial@addr:
  1767                           	opt callstack 0
  1768  000001                     i2i2c_ReadSerial@addr:
  1769                           	opt callstack 0
  1770  000001                     i2___wmul@multiplier:
  1771                           	opt callstack 0
  1772  000001                     i2___awdiv@dividend:
  1773                           	opt callstack 0
  1774  000001                     i2___awmod@dividend:
  1775                           	opt callstack 0
  1776  000001                     i2isdigit@c:
  1777                           	opt callstack 0
  1778  000001                     i2isspace@c:
  1779                           	opt callstack 0
  1780  000001                     i2isupper@c:
  1781                           	opt callstack 0
  1782  000001                     i2strcpy@dest:
  1783                           	opt callstack 0
  1784  000001                     i2strlen@s:
  1785                           	opt callstack 0
  1786  000001                     i2strncmp@_l:
  1787                           	opt callstack 0
  1788  000001                     ___xxtofl@val:
  1789                           	opt callstack 0
  1790  000001                     i2___fleq@ff1:
  1791                           	opt callstack 0
  1792  000001                     i2___flneg@f1:
  1793                           	opt callstack 0
  1794  000001                     i2___fltol@f1:
  1795                           	opt callstack 0
  1796  000001                     i2___fpclassifyf@x:
  1797                           	opt callstack 0
  1798                           
  1799                           ; 4 bytes @ 0x0
  1800  000001                     	ds	1
  1801  000002                     i2putch@txData:
  1802                           	opt callstack 0
  1803                           
  1804                           ; 1 bytes @ 0x1
  1805  000002                     	ds	1
  1806  000003                     ??i2_isdigit:
  1807  000003                     ??i2_isspace:
  1808  000003                     ??i2_isupper:
  1809  000003                     i2i2c_WriteSerial@data:
  1810                           	opt callstack 0
  1811  000003                     i2i2c_ReadSerial@data:
  1812                           	opt callstack 0
  1813  000003                     i2___wmul@multiplicand:
  1814                           	opt callstack 0
  1815  000003                     i2___awdiv@divisor:
  1816                           	opt callstack 0
  1817  000003                     i2___awmod@divisor:
  1818                           	opt callstack 0
  1819  000003                     i2fputc@c:
  1820                           	opt callstack 0
  1821  000003                     i2strcpy@src:
  1822                           	opt callstack 0
  1823  000003                     i2strlen@a:
  1824                           	opt callstack 0
  1825  000003                     i2strncmp@_r:
  1826                           	opt callstack 0
  1827                           
  1828                           ; 2 bytes @ 0x2
  1829  000003                     	ds	2
  1830  000005                     ??___xxtofl:
  1831  000005                     ??i2___fltol:
  1832  000005                     ??i2___fpclassifyf:
  1833  000005                     ??i2_strcpy:
  1834  000005                     i2___awdiv@counter:
  1835                           	opt callstack 0
  1836  000005                     i2___awmod@counter:
  1837                           	opt callstack 0
  1838  000005                     i2i2c_WriteSerial@length:
  1839                           	opt callstack 0
  1840  000005                     i2i2c_ReadSerial@length:
  1841                           	opt callstack 0
  1842  000005                     i2___wmul@product:
  1843                           	opt callstack 0
  1844  000005                     i2fputc@fp:
  1845                           	opt callstack 0
  1846  000005                     i2strncmp@n:
  1847                           	opt callstack 0
  1848  000005                     i2___fleq@ff2:
  1849                           	opt callstack 0
  1850                           
  1851                           ; 4 bytes @ 0x4
  1852  000005                     	ds	1
  1853  000006                     i2___awdiv@sign:
  1854                           	opt callstack 0
  1855  000006                     i2___awmod@sign:
  1856                           	opt callstack 0
  1857                           
  1858                           ; 1 bytes @ 0x5
  1859  000006                     	ds	1
  1860  000007                     ??i2_i2c_WriteSerial:
  1861  000007                     ??i2_i2c_ReadSerial:
  1862  000007                     ??i2_fputc:
  1863  000007                     ??i2_strncmp:
  1864  000007                     ?i2_tolower:
  1865                           	opt callstack 0
  1866  000007                     i2_isspace$2136:
  1867                           	opt callstack 0
  1868  000007                     i2___awdiv@quotient:
  1869                           	opt callstack 0
  1870  000007                     i2strcpy@s:
  1871                           	opt callstack 0
  1872  000007                     i2tolower@c:
  1873                           	opt callstack 0
  1874                           
  1875                           ; 2 bytes @ 0x6
  1876  000007                     	ds	1
  1877  000008                     ?i2_atoi:
  1878                           	opt callstack 0
  1879  000008                     i2atoi@s:
  1880                           	opt callstack 0
  1881  000008                     i2strncmp@l:
  1882                           	opt callstack 0
  1883                           
  1884                           ; 2 bytes @ 0x7
  1885  000008                     	ds	1
  1886  000009                     ??i2___fleq:
  1887  000009                     ??i2_tolower:
  1888  000009                     ___xxtofl@sign:
  1889                           	opt callstack 0
  1890  000009                     i2i2c_WriteSerial@targetAddr:
  1891                           	opt callstack 0
  1892  000009                     i2___fltol@sign1:
  1893                           	opt callstack 0
  1894  000009                     i2___fpclassifyf@e:
  1895                           	opt callstack 0
  1896  000009                     i2strcpy@d:
  1897                           	opt callstack 0
  1898                           
  1899                           ; 2 bytes @ 0x8
  1900  000009                     	ds	1
  1901  00000A                     ??i2_atoi:
  1902  00000A                     ___xxtofl@exp:
  1903                           	opt callstack 0
  1904  00000A                     i2___fltol@exp1:
  1905                           	opt callstack 0
  1906  00000A                     i2i2c_WriteSerial@i:
  1907                           	opt callstack 0
  1908  00000A                     i2strncmp@r:
  1909                           	opt callstack 0
  1910                           
  1911                           ; 2 bytes @ 0x9
  1912  00000A                     	ds	1
  1913  00000B                     i2i2c_ReadSerial@targetAddr:
  1914                           	opt callstack 0
  1915  00000B                     ___xxtofl@arg:
  1916                           	opt callstack 0
  1917  00000B                     i2___fpclassifyf@u:
  1918                           	opt callstack 0
  1919                           
  1920                           ; 4 bytes @ 0xA
  1921  00000B                     	ds	1
  1922  00000C                     ??_dataLogWrite:
  1923  00000C                     ?i2_stoa:
  1924                           	opt callstack 0
  1925  00000C                     i2i2c_ReadSerial@i:
  1926                           	opt callstack 0
  1927  00000C                     i2stoa@fp:
  1928                           	opt callstack 0
  1929  00000C                     i2fputs@s:
  1930                           	opt callstack 0
  1931                           
  1932                           ; 2 bytes @ 0xB
  1933  00000C                     	ds	1
  1934  00000D                     i2_tolower$2233:
  1935                           	opt callstack 0
  1936                           
  1937                           ; 2 bytes @ 0xC
  1938  00000D                     	ds	1
  1939  00000E                     i2stoa@s:
  1940                           	opt callstack 0
  1941  00000E                     i2atoi@neg:
  1942                           	opt callstack 0
  1943  00000E                     i2fputs@fp:
  1944                           	opt callstack 0
  1945                           
  1946                           ; 2 bytes @ 0xD
  1947  00000E                     	ds	1
  1948  00000F                     ?i2___flmul:
  1949                           	opt callstack 0
  1950  00000F                     i2___flmul@b:
  1951                           	opt callstack 0
  1952                           
  1953                           ; 4 bytes @ 0xE
  1954  00000F                     	ds	1
  1955  000010                     ??i2_stoa:
  1956  000010                     i2fputs@c:
  1957                           	opt callstack 0
  1958  000010                     i2_atoi$2105:
  1959                           	opt callstack 0
  1960                           
  1961                           ; 2 bytes @ 0xF
  1962  000010                     	ds	1
  1963  000011                     i2fputs@i:
  1964                           	opt callstack 0
  1965  000011                     i2stoa@nuls:
  1966                           	opt callstack 0
  1967                           
  1968                           ; 7 bytes @ 0x10
  1969  000011                     	ds	1
  1970  000012                     i2_atoi$2107:
  1971                           	opt callstack 0
  1972                           
  1973                           ; 2 bytes @ 0x11
  1974  000012                     	ds	1
  1975  000013                     ?i2_pad:
  1976                           	opt callstack 0
  1977  000013                     i2pad@fp:
  1978                           	opt callstack 0
  1979  000013                     i2___flmul@a:
  1980                           	opt callstack 0
  1981                           
  1982                           ; 4 bytes @ 0x12
  1983  000013                     	ds	1
  1984  000014                     i2_atoi$2106:
  1985                           	opt callstack 0
  1986                           
  1987                           ; 1 bytes @ 0x13
  1988  000014                     	ds	1
  1989  000015                     i2pad@buf:
  1990                           	opt callstack 0
  1991  000015                     i2atoi@n:
  1992                           	opt callstack 0
  1993                           
  1994                           ; 2 bytes @ 0x14
  1995  000015                     	ds	2
  1996  000017                     ??i2___flmul:
  1997  000017                     i2pad@p:
  1998                           	opt callstack 0
  1999                           
  2000                           ; 2 bytes @ 0x16
  2001  000017                     	ds	1
  2002  000018                     i2stoa@i:
  2003                           	opt callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x17
  2006  000018                     	ds	1
  2007  000019                     ??i2_pad:
  2008                           
  2009                           ; 1 bytes @ 0x18
  2010  000019                     	ds	1
  2011  00001A                     i2pad@i:
  2012                           	opt callstack 0
  2013  00001A                     i2stoa@w:
  2014                           	opt callstack 0
  2015                           
  2016                           ; 2 bytes @ 0x19
  2017  00001A                     	ds	1
  2018  00001B                     i2___flmul@sign:
  2019                           	opt callstack 0
  2020                           
  2021                           ; 1 bytes @ 0x1A
  2022  00001B                     	ds	1
  2023  00001C                     i2pad@w:
  2024                           	opt callstack 0
  2025  00001C                     i2stoa@cp:
  2026                           	opt callstack 0
  2027  00001C                     i2___flmul@grs:
  2028                           	opt callstack 0
  2029                           
  2030                           ; 4 bytes @ 0x1B
  2031  00001C                     	ds	2
  2032  00001E                     i2stoa@p:
  2033                           	opt callstack 0
  2034                           
  2035                           ; 2 bytes @ 0x1D
  2036  00001E                     	ds	2
  2037  000020                     i2___flmul@aexp:
  2038                           	opt callstack 0
  2039  000020                     i2stoa@l:
  2040                           	opt callstack 0
  2041                           
  2042                           ; 2 bytes @ 0x1F
  2043  000020                     	ds	1
  2044  000021                     i2___flmul@bexp:
  2045                           	opt callstack 0
  2046                           
  2047                           ; 1 bytes @ 0x20
  2048  000021                     	ds	1
  2049  000022                     i2___flmul@prod:
  2050                           	opt callstack 0
  2051                           
  2052                           ; 4 bytes @ 0x21
  2053  000022                     	ds	4
  2054  000026                     i2___flmul@temp:
  2055                           	opt callstack 0
  2056                           
  2057                           ; 2 bytes @ 0x25
  2058  000026                     	ds	2
  2059  000028                     ?i2___fldiv:
  2060                           	opt callstack 0
  2061  000028                     i2___flge@ff1:
  2062                           	opt callstack 0
  2063  000028                     i2___fldiv@b:
  2064                           	opt callstack 0
  2065                           
  2066                           ; 4 bytes @ 0x27
  2067  000028                     	ds	4
  2068  00002C                     i2___flge@ff2:
  2069                           	opt callstack 0
  2070  00002C                     i2___fldiv@a:
  2071                           	opt callstack 0
  2072                           
  2073                           ; 4 bytes @ 0x2B
  2074  00002C                     	ds	4
  2075  000030                     ??i2___flge:
  2076  000030                     ??i2___fldiv:
  2077                           
  2078                           ; 1 bytes @ 0x2F
  2079  000030                     	ds	4
  2080  000034                     i2___fldiv@rem:
  2081                           	opt callstack 0
  2082                           
  2083                           ; 4 bytes @ 0x33
  2084  000034                     	ds	4
  2085  000038                     i2___fldiv@sign:
  2086                           	opt callstack 0
  2087                           
  2088                           ; 1 bytes @ 0x37
  2089  000038                     	ds	1
  2090  000039                     i2___fldiv@new_exp:
  2091                           	opt callstack 0
  2092                           
  2093                           ; 2 bytes @ 0x38
  2094  000039                     	ds	2
  2095  00003B                     i2___fldiv@grs:
  2096                           	opt callstack 0
  2097                           
  2098                           ; 4 bytes @ 0x3A
  2099  00003B                     	ds	4
  2100  00003F                     i2___fldiv@bexp:
  2101                           	opt callstack 0
  2102                           
  2103                           ; 1 bytes @ 0x3E
  2104  00003F                     	ds	1
  2105  000040                     i2___fldiv@aexp:
  2106                           	opt callstack 0
  2107                           
  2108                           ; 1 bytes @ 0x3F
  2109  000040                     	ds	1
  2110  000041                     ?i2___fladd:
  2111                           	opt callstack 0
  2112  000041                     ?i2_floorf:
  2113                           	opt callstack 0
  2114  000041                     i2___fladd@b:
  2115                           	opt callstack 0
  2116  000041                     i2floorf@x:
  2117                           	opt callstack 0
  2118                           
  2119                           ; 4 bytes @ 0x40
  2120  000041                     	ds	4
  2121  000045                     ??i2_floorf:
  2122  000045                     i2___fladd@a:
  2123                           	opt callstack 0
  2124                           
  2125                           ; 4 bytes @ 0x44
  2126  000045                     	ds	4
  2127  000049                     ??i2___fladd:
  2128                           
  2129                           ; 1 bytes @ 0x48
  2130  000049                     	ds	2
  2131  00004B                     i2floorf@m:
  2132                           	opt callstack 0
  2133                           
  2134                           ; 4 bytes @ 0x4A
  2135  00004B                     	ds	2
  2136  00004D                     i2___fladd@signs:
  2137                           	opt callstack 0
  2138                           
  2139                           ; 1 bytes @ 0x4C
  2140  00004D                     	ds	1
  2141  00004E                     i2___fladd@aexp:
  2142                           	opt callstack 0
  2143                           
  2144                           ; 1 bytes @ 0x4D
  2145  00004E                     	ds	1
  2146  00004F                     i2___fladd@bexp:
  2147                           	opt callstack 0
  2148  00004F                     i2floorf@e:
  2149                           	opt callstack 0
  2150                           
  2151                           ; 2 bytes @ 0x4E
  2152  00004F                     	ds	1
  2153  000050                     i2___fladd@grs:
  2154                           	opt callstack 0
  2155                           
  2156                           ; 1 bytes @ 0x4F
  2157  000050                     	ds	1
  2158  000051                     ?i2___flsub:
  2159                           	opt callstack 0
  2160  000051                     i2___flsub@b:
  2161                           	opt callstack 0
  2162  000051                     i2floorf@u:
  2163                           	opt callstack 0
  2164                           
  2165                           ; 4 bytes @ 0x50
  2166  000051                     	ds	4
  2167  000055                     i2___flsub@a:
  2168                           	opt callstack 0
  2169                           
  2170                           ; 4 bytes @ 0x54
  2171  000055                     	ds	4
  2172  000059                     ??i2_efgtoa:
  2173  000059                     
  2174                           ; 1 bytes @ 0x58
  2175  000059                     	ds	5
  2176  00005E                     
  2177                           ; 1 bytes @ 0x5D
  2178 ;;
  2179 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2180 ;;
  2181 ;; *************** function _main *****************
  2182 ;; Defined at:
  2183 ;;		line 146 in file "main.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  tmp             1  156[BANK1 ] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;Total ram usage:        3 bytes
  2202 ;; Hardware stack levels required when called:   23
  2203 ;; This function calls:
  2204 ;;		_EUSART1_Initialize
  2205 ;;		_EUSART1_Read
  2206 ;;		_SYSTEM_Initialize
  2207 ;;		_TMR2_Initialize
  2208 ;;		_TMR2_SetInterruptHandler
  2209 ;;		_TMR4_Initialize
  2210 ;;		_TMR4_SetInterruptHandler
  2211 ;;		_TMR4_StartTimer
  2212 ;;		_TMR4_StopTimer
  2213 ;;		_TMR6_Initialize
  2214 ;;		_TMR6_SetInterruptHandler
  2215 ;;		_adafruit_init
  2216 ;;		_dataLogger_init
  2217 ;;		_i2c_init
  2218 ;;		_memset
  2219 ;;		_printf
  2220 ;;		_strncmp
  2221 ;; This function is called by:
  2222 ;;		Startup code after reset
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text0
  2227  004BC4                     __ptext0:
  2228                           	opt callstack 0
  2229  004BC4                     _main:
  2230                           	opt callstack 8
  2231                           
  2232                           ;main.c: 149:     SYSTEM_Initialize();
  2233                           
  2234                           ;incstack = 0
  2235  004BC4  EC54  F036         	call	_SYSTEM_Initialize	;wreg free
  2236                           
  2237                           ;main.c: 152:     (INTCONbits.GIE = 1);
  2238  004BC8  8EF2               	bsf	4082,7,c	;volatile
  2239                           
  2240                           ;main.c: 158:     (INTCONbits.PEIE = 1);
  2241  004BCA  8CF2               	bsf	4082,6,c	;volatile
  2242                           
  2243                           ;main.c: 163:     TMR2_Initialize();
  2244  004BCC  EC14  F036         	call	_TMR2_Initialize	;wreg free
  2245                           
  2246                           ;main.c: 164:     TMR4_Initialize();
  2247  004BD0  ECBD  F035         	call	_TMR4_Initialize	;wreg free
  2248                           
  2249                           ;main.c: 165:     TMR6_Initialize();
  2250  004BD4  ECAB  F035         	call	_TMR6_Initialize	;wreg free
  2251                           
  2252                           ;main.c: 167:     EUSART1_Initialize();
  2253  004BD8  EC0E  F031         	call	_EUSART1_Initialize	;wreg free
  2254                           
  2255                           ;main.c: 168:     i2c_init();
  2256  004BDC  EC59  F034         	call	_i2c_init	;wreg free
  2257                           
  2258                           ;main.c: 169:     adafruit_init();
  2259  004BE0  EC89  F033         	call	_adafruit_init	;wreg free
  2260                           
  2261                           ;main.c: 170:     dataLogger_init();
  2262  004BE4  EC43  F022         	call	_dataLogger_init	;wreg free
  2263                           
  2264                           ;main.c: 176:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  2265  004BE8  0EF4               	movlw	244
  2266  004BEA  0101               	movlb	1	; () banked
  2267  004BEC  6F9B               	movwf	(??_main+1)& (0+255),b
  2268  004BEE  0E82               	movlw	130
  2269  004BF0  6F9A               	movwf	??_main& (0+255),b
  2270  004BF2  0E05               	movlw	5
  2271  004BF4                     u11737:
  2272  004BF4  2EE8               	decfsz	wreg,f,c
  2273  004BF6  D7FE               	bra	u11737
  2274  004BF8  2F9A               	decfsz	??_main& (0+255),f,b
  2275  004BFA  D7FC               	bra	u11737
  2276  004BFC  2F9B               	decfsz	(??_main+1)& (0+255),f,b
  2277  004BFE  D7FA               	bra	u11737
  2278                           
  2279                           ;main.c: 178:     TMR2_SetInterruptHandler(adafruit);
  2280  004C00  0E7E               	movlw	low _adafruit
  2281  004C02  0101               	movlb	1	; () banked
  2282  004C04  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  2283  004C06  0E2C               	movlw	high _adafruit
  2284  004C08  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2285  004C0A  EC7D  F036         	call	_TMR2_SetInterruptHandler	;wreg free
  2286                           
  2287                           ;main.c: 179:     TMR4_SetInterruptHandler(dataLogRead);
  2288  004C0E  0EBE               	movlw	low _dataLogRead
  2289  004C10  0101               	movlb	1	; () banked
  2290  004C12  6F00               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
  2291  004C14  0E3C               	movlw	high _dataLogRead
  2292  004C16  6F01               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2293  004C18  EC78  F036         	call	_TMR4_SetInterruptHandler	;wreg free
  2294                           
  2295                           ;main.c: 180:     TMR6_SetInterruptHandler(dataLogWrite);
  2296  004C1C  0E20               	movlw	low _dataLogWrite
  2297  004C1E  0101               	movlb	1	; () banked
  2298  004C20  6F00               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  2299  004C22  0E4A               	movlw	high _dataLogWrite
  2300  004C24  6F01               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2301  004C26  EC73  F036         	call	_TMR6_SetInterruptHandler	;wreg free
  2302                           
  2303                           ;main.c: 193:     TMR4_StopTimer();
  2304  004C2A  ECA4  F036         	call	_TMR4_StopTimer	;wreg free
  2305  004C2E                     l8336:
  2306                           
  2307                           ;main.c: 203:             uint8_t tmp = EUSART1_Read();
  2308  004C2E  ECA8  F033         	call	_EUSART1_Read	;wreg free
  2309  004C32  0101               	movlb	1	; () banked
  2310  004C34  6F9C               	movwf	main@tmp& (0+255),b
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;main.c: 205:             if ((tmp == 10 || tmp == 13) && (index <= 64)) {
  2314  004C36  0E0A               	movlw	10
  2315  004C38  199C               	xorwf	main@tmp& (0+255),w,b
  2316  004C3A  B4D8               	btfsc	status,2,c
  2317  004C3C  D004               	goto	u11680
  2318                           
  2319                           ; BSR set to: 1
  2320  004C3E  0E0D               	movlw	13
  2321  004C40  199C               	xorwf	main@tmp& (0+255),w,b
  2322  004C42  A4D8               	btfss	status,2,c
  2323  004C44  D057               	goto	l8362
  2324  004C46                     u11680:
  2325                           
  2326                           ; BSR set to: 1
  2327  004C46  0E41               	movlw	65
  2328  004C48  61C3               	cpfslt	_index& (0+255),b
  2329  004C4A  D054               	goto	l8362
  2330                           
  2331                           ; BSR set to: 1
  2332                           ;main.c: 206:                 index = 0;
  2333  004C4C  0E00               	movlw	0
  2334  004C4E  6FC3               	movwf	_index& (0+255),b
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;main.c: 208:                 if (!strncmp(stringArry, "start", 4)) {
  2338  004C50  0E40               	movlw	low _stringArry
  2339  004C52  6F00               	movwf	strncmp@_l& (0+255),b
  2340  004C54  0E03               	movlw	high _stringArry
  2341  004C56  6F01               	movwf	(strncmp@_l+1)& (0+255),b
  2342  004C58  0ED4               	movlw	low STR_1
  2343  004C5A  6F02               	movwf	strncmp@_r& (0+255),b
  2344  004C5C  0E10               	movlw	high STR_1
  2345  004C5E  6F03               	movwf	(strncmp@_r+1)& (0+255),b
  2346  004C60  0E00               	movlw	0
  2347  004C62  6F05               	movwf	(strncmp@n+1)& (0+255),b
  2348  004C64  0E04               	movlw	4
  2349  004C66  6F04               	movwf	strncmp@n& (0+255),b
  2350  004C68  EC9F  F02C         	call	_strncmp	;wreg free
  2351  004C6C  0101               	movlb	1	; () banked
  2352  004C6E  5100               	movf	?_strncmp& (0+255),w,b
  2353  004C70  1101               	iorwf	(?_strncmp+1)& (0+255),w,b
  2354  004C72  A4D8               	btfss	status,2,c
  2355  004C74  D009               	goto	l8352
  2356                           
  2357                           ; BSR set to: 1
  2358                           ;main.c: 209:                     printf("Start timer \r\n");
  2359  004C76  0EA7               	movlw	low STR_3
  2360  004C78  6F91               	movwf	printf@fmt& (0+255),b
  2361  004C7A  0E10               	movlw	high STR_3
  2362  004C7C  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2363  004C7E  EC5C  F035         	call	_printf	;wreg free
  2364                           
  2365                           ;main.c: 210:                     TMR4_StartTimer();
  2366  004C82  ECA7  F036         	call	_TMR4_StartTimer	;wreg free
  2367                           
  2368                           ;main.c: 211:                 } else if (!strncmp(stringArry, "stop", 4)) {
  2369  004C86  D026               	goto	l8360
  2370  004C88                     l8352:
  2371                           
  2372                           ; BSR set to: 1
  2373  004C88  0E40               	movlw	low _stringArry
  2374  004C8A  6F00               	movwf	strncmp@_l& (0+255),b
  2375  004C8C  0E03               	movlw	high _stringArry
  2376  004C8E  6F01               	movwf	(strncmp@_l+1)& (0+255),b
  2377  004C90  0EDA               	movlw	low STR_4
  2378  004C92  6F02               	movwf	strncmp@_r& (0+255),b
  2379  004C94  0E10               	movlw	high STR_4
  2380  004C96  6F03               	movwf	(strncmp@_r+1)& (0+255),b
  2381  004C98  0E00               	movlw	0
  2382  004C9A  6F05               	movwf	(strncmp@n+1)& (0+255),b
  2383  004C9C  0E04               	movlw	4
  2384  004C9E  6F04               	movwf	strncmp@n& (0+255),b
  2385  004CA0  EC9F  F02C         	call	_strncmp	;wreg free
  2386  004CA4  0101               	movlb	1	; () banked
  2387  004CA6  5100               	movf	?_strncmp& (0+255),w,b
  2388  004CA8  1101               	iorwf	(?_strncmp+1)& (0+255),w,b
  2389  004CAA  A4D8               	btfss	status,2,c
  2390  004CAC  D009               	goto	l8358
  2391                           
  2392                           ; BSR set to: 1
  2393                           ;main.c: 212:                     printf("Stop timer \r\n");
  2394  004CAE  0EB6               	movlw	low STR_6
  2395  004CB0  6F91               	movwf	printf@fmt& (0+255),b
  2396  004CB2  0E10               	movlw	high STR_6
  2397  004CB4  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2398  004CB6  EC5C  F035         	call	_printf	;wreg free
  2399                           
  2400                           ;main.c: 213:                     TMR4_StopTimer();
  2401  004CBA  ECA4  F036         	call	_TMR4_StopTimer	;wreg free
  2402                           
  2403                           ;main.c: 214:                 } else {
  2404  004CBE  D00A               	goto	l8360
  2405  004CC0                     l8358:
  2406                           
  2407                           ; BSR set to: 1
  2408                           ;main.c: 215:                     printf("%s, did not match a command \n\r", stringArry)
      +                          ;
  2409  004CC0  0E5E               	movlw	low STR_7
  2410  004CC2  6F91               	movwf	printf@fmt& (0+255),b
  2411  004CC4  0E10               	movlw	high STR_7
  2412  004CC6  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2413  004CC8  0E40               	movlw	low _stringArry
  2414  004CCA  6F93               	movwf	(?_printf+2)& (0+255),b
  2415  004CCC  0E03               	movlw	high _stringArry
  2416  004CCE  6F94               	movwf	(?_printf+3)& (0+255),b
  2417  004CD0  EC5C  F035         	call	_printf	;wreg free
  2418  004CD4                     l8360:
  2419                           
  2420                           ;main.c: 218:                 memset(stringArry, 0, sizeof(stringArry));
  2421  004CD4  0E40               	movlw	low _stringArry
  2422  004CD6  0101               	movlb	1	; () banked
  2423  004CD8  6F00               	movwf	memset@dest& (0+255),b
  2424  004CDA  0E03               	movlw	high _stringArry
  2425  004CDC  6F01               	movwf	(memset@dest+1)& (0+255),b
  2426  004CDE  0E00               	movlw	0
  2427  004CE0  6F03               	movwf	(memset@c+1)& (0+255),b
  2428  004CE2  0E00               	movlw	0
  2429  004CE4  6F02               	movwf	memset@c& (0+255),b
  2430  004CE6  0E00               	movlw	0
  2431  004CE8  6F05               	movwf	(memset@n+1)& (0+255),b
  2432  004CEA  0E40               	movlw	64
  2433  004CEC  6F04               	movwf	memset@n& (0+255),b
  2434  004CEE  EC7D  F028         	call	_memset	;wreg free
  2435                           
  2436                           ;main.c: 219:             } else if (index >= 65) {
  2437  004CF2  D79D               	goto	l8336
  2438  004CF4                     l8362:
  2439                           
  2440                           ; BSR set to: 1
  2441  004CF4  0E40               	movlw	64
  2442  004CF6  65C3               	cpfsgt	_index& (0+255),b
  2443  004CF8  D002               	goto	l8366
  2444                           
  2445                           ; BSR set to: 1
  2446                           ;main.c: 220:                 index--;
  2447  004CFA  07C3               	decf	_index& (0+255),f,b
  2448                           
  2449                           ;main.c: 221:             } else {
  2450  004CFC  D798               	goto	l8336
  2451  004CFE                     l8366:
  2452                           
  2453                           ; BSR set to: 1
  2454                           ;main.c: 222:                 stringArry[index] = tmp;
  2455  004CFE  0E40               	movlw	low _stringArry
  2456  004D00  25C3               	addwf	_index& (0+255),w,b
  2457  004D02  6ED9               	movwf	fsr2l,c
  2458  004D04  6ADA               	clrf	fsr2h,c
  2459  004D06  0E03               	movlw	high _stringArry
  2460  004D08  22DA               	addwfc	fsr2h,f,c
  2461  004D0A  C19C  FFDF         	movff	main@tmp,indf2
  2462                           
  2463                           ; BSR set to: 1
  2464                           ;main.c: 224:                 index++;
  2465  004D0E  2BC3               	incf	_index& (0+255),f,b
  2466                           
  2467                           ; BSR set to: 1
  2468                           ;main.c: 226:                 stringArry[index] = 0x00;
  2469  004D10  0E40               	movlw	low _stringArry
  2470  004D12  25C3               	addwf	_index& (0+255),w,b
  2471  004D14  6ED9               	movwf	fsr2l,c
  2472  004D16  6ADA               	clrf	fsr2h,c
  2473  004D18  0E03               	movlw	high _stringArry
  2474  004D1A  22DA               	addwfc	fsr2h,f,c
  2475  004D1C  0E00               	movlw	0
  2476  004D1E  6EDF               	movwf	indf2,c
  2477  004D20  D786               	goto	l8336
  2478  004D22                     __end_of_main:
  2479                           	opt callstack 0
  2480                           
  2481 ;; *************** function _memset *****************
  2482 ;; Defined at:
  2483 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  dest            2    0[BANK1 ] PTR void 
  2486 ;;		 -> stringArry(64), 
  2487 ;;  c               2    2[BANK1 ] int 
  2488 ;;  n               2    4[BANK1 ] unsigned int 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  s               2   10[BANK1 ] PTR unsigned char 
  2491 ;;		 -> stringArry(64), 
  2492 ;;  k               2    8[BANK1 ] unsigned int 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2    0[BANK1 ] PTR void 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2502 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;Total ram usage:       12 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:   13
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text1
  2517  0050FA                     __ptext1:
  2518                           	opt callstack 0
  2519  0050FA                     _memset:
  2520                           	opt callstack 17
  2521                           
  2522                           ; BSR set to: 1
  2523                           ;incstack = 0
  2524  0050FA  C100  F10A         	movff	memset@dest,memset@s
  2525  0050FE  C101  F10B         	movff	memset@dest+1,memset@s+1
  2526  005102  0101               	movlb	1	; () banked
  2527  005104  5104               	movf	memset@n& (0+255),w,b
  2528  005106  1105               	iorwf	(memset@n+1)& (0+255),w,b
  2529  005108  B4D8               	btfsc	status,2,c
  2530  00510A  0012               	return	
  2531                           
  2532                           ; BSR set to: 1
  2533  00510C  C10A  FFD9         	movff	memset@s,fsr2l
  2534  005110  C10B  FFDA         	movff	memset@s+1,fsr2h
  2535  005114  C102  FFDF         	movff	memset@c,indf2
  2536                           
  2537                           ; BSR set to: 1
  2538  005118  5104               	movf	memset@n& (0+255),w,b
  2539  00511A  250A               	addwf	memset@s& (0+255),w,b
  2540  00511C  6F06               	movwf	??_memset& (0+255),b
  2541  00511E  5105               	movf	(memset@n+1)& (0+255),w,b
  2542  005120  210B               	addwfc	(memset@s+1)& (0+255),w,b
  2543  005122  6F07               	movwf	(??_memset+1)& (0+255),b
  2544  005124  0EFF               	movlw	255
  2545  005126  2506               	addwf	??_memset& (0+255),w,b
  2546  005128  6ED9               	movwf	fsr2l,c
  2547  00512A  0EFF               	movlw	255
  2548  00512C  2107               	addwfc	(??_memset+1)& (0+255),w,b
  2549  00512E  6EDA               	movwf	fsr2h,c
  2550  005130  C102  FFDF         	movff	memset@c,indf2
  2551  005134  5105               	movf	(memset@n+1)& (0+255),w,b
  2552  005136  E104               	bnz	l8264
  2553  005138  0E03               	movlw	3
  2554  00513A  5D04               	subwf	memset@n& (0+255),w,b
  2555  00513C  A0D8               	btfss	status,0,c
  2556  00513E  0012               	return	
  2557  005140                     l8264:
  2558                           
  2559                           ; BSR set to: 1
  2560  005140  EE20 F001          	lfsr	2,1
  2561  005144  510A               	movf	memset@s& (0+255),w,b
  2562  005146  26D9               	addwf	fsr2l,f,c
  2563  005148  510B               	movf	(memset@s+1)& (0+255),w,b
  2564  00514A  22DA               	addwfc	fsr2h,f,c
  2565  00514C  C102  FFDF         	movff	memset@c,indf2
  2566  005150  EE20 F002          	lfsr	2,2
  2567  005154  510A               	movf	memset@s& (0+255),w,b
  2568  005156  26D9               	addwf	fsr2l,f,c
  2569  005158  510B               	movf	(memset@s+1)& (0+255),w,b
  2570  00515A  22DA               	addwfc	fsr2h,f,c
  2571  00515C  C102  FFDF         	movff	memset@c,indf2
  2572  005160  5104               	movf	memset@n& (0+255),w,b
  2573  005162  250A               	addwf	memset@s& (0+255),w,b
  2574  005164  6F06               	movwf	??_memset& (0+255),b
  2575  005166  5105               	movf	(memset@n+1)& (0+255),w,b
  2576  005168  210B               	addwfc	(memset@s+1)& (0+255),w,b
  2577  00516A  6F07               	movwf	(??_memset+1)& (0+255),b
  2578  00516C  0EFE               	movlw	254
  2579  00516E  2506               	addwf	??_memset& (0+255),w,b
  2580  005170  6ED9               	movwf	fsr2l,c
  2581  005172  0EFF               	movlw	255
  2582  005174  2107               	addwfc	(??_memset+1)& (0+255),w,b
  2583  005176  6EDA               	movwf	fsr2h,c
  2584  005178  C102  FFDF         	movff	memset@c,indf2
  2585  00517C  5104               	movf	memset@n& (0+255),w,b
  2586  00517E  250A               	addwf	memset@s& (0+255),w,b
  2587  005180  6F06               	movwf	??_memset& (0+255),b
  2588  005182  5105               	movf	(memset@n+1)& (0+255),w,b
  2589  005184  210B               	addwfc	(memset@s+1)& (0+255),w,b
  2590  005186  6F07               	movwf	(??_memset+1)& (0+255),b
  2591  005188  0EFD               	movlw	253
  2592  00518A  2506               	addwf	??_memset& (0+255),w,b
  2593  00518C  6ED9               	movwf	fsr2l,c
  2594  00518E  0EFF               	movlw	255
  2595  005190  2107               	addwfc	(??_memset+1)& (0+255),w,b
  2596  005192  6EDA               	movwf	fsr2h,c
  2597  005194  C102  FFDF         	movff	memset@c,indf2
  2598                           
  2599                           ; BSR set to: 1
  2600  005198  5105               	movf	(memset@n+1)& (0+255),w,b
  2601  00519A  E104               	bnz	l8270
  2602  00519C  0E07               	movlw	7
  2603  00519E  5D04               	subwf	memset@n& (0+255),w,b
  2604  0051A0  A0D8               	btfss	status,0,c
  2605  0051A2  0012               	return	
  2606  0051A4                     l8270:
  2607                           
  2608                           ; BSR set to: 1
  2609  0051A4  EE20 F003          	lfsr	2,3
  2610  0051A8  510A               	movf	memset@s& (0+255),w,b
  2611  0051AA  26D9               	addwf	fsr2l,f,c
  2612  0051AC  510B               	movf	(memset@s+1)& (0+255),w,b
  2613  0051AE  22DA               	addwfc	fsr2h,f,c
  2614  0051B0  C102  FFDF         	movff	memset@c,indf2
  2615  0051B4  5104               	movf	memset@n& (0+255),w,b
  2616  0051B6  250A               	addwf	memset@s& (0+255),w,b
  2617  0051B8  6F06               	movwf	??_memset& (0+255),b
  2618  0051BA  5105               	movf	(memset@n+1)& (0+255),w,b
  2619  0051BC  210B               	addwfc	(memset@s+1)& (0+255),w,b
  2620  0051BE  6F07               	movwf	(??_memset+1)& (0+255),b
  2621  0051C0  0EFC               	movlw	252
  2622  0051C2  2506               	addwf	??_memset& (0+255),w,b
  2623  0051C4  6ED9               	movwf	fsr2l,c
  2624  0051C6  0EFF               	movlw	255
  2625  0051C8  2107               	addwfc	(??_memset+1)& (0+255),w,b
  2626  0051CA  6EDA               	movwf	fsr2h,c
  2627  0051CC  C102  FFDF         	movff	memset@c,indf2
  2628                           
  2629                           ; BSR set to: 1
  2630  0051D0  5105               	movf	(memset@n+1)& (0+255),w,b
  2631  0051D2  E104               	bnz	l8276
  2632  0051D4  0E09               	movlw	9
  2633  0051D6  5D04               	subwf	memset@n& (0+255),w,b
  2634  0051D8  A0D8               	btfss	status,0,c
  2635  0051DA  0012               	return	
  2636  0051DC                     l8276:
  2637                           
  2638                           ; BSR set to: 1
  2639  0051DC  C10A  F106         	movff	memset@s,??_memset
  2640  0051E0  C10B  F107         	movff	memset@s+1,??_memset+1
  2641  0051E4  1F06               	comf	??_memset& (0+255),f,b
  2642  0051E6  1F07               	comf	(??_memset+1)& (0+255),f,b
  2643  0051E8  4B06               	infsnz	??_memset& (0+255),f,b
  2644  0051EA  2B07               	incf	(??_memset+1)& (0+255),f,b
  2645  0051EC  0E03               	movlw	3
  2646  0051EE  1506               	andwf	??_memset& (0+255),w,b
  2647  0051F0  6F08               	movwf	memset@k& (0+255),b
  2648  0051F2  6B09               	clrf	(memset@k+1)& (0+255),b
  2649  0051F4  5108               	movf	memset@k& (0+255),w,b
  2650  0051F6  270A               	addwf	memset@s& (0+255),f,b
  2651  0051F8  5109               	movf	(memset@k+1)& (0+255),w,b
  2652  0051FA  230B               	addwfc	(memset@s+1)& (0+255),f,b
  2653  0051FC  5108               	movf	memset@k& (0+255),w,b
  2654  0051FE  5F04               	subwf	memset@n& (0+255),f,b
  2655  005200  5109               	movf	(memset@k+1)& (0+255),w,b
  2656  005202  5B05               	subwfb	(memset@n+1)& (0+255),f,b
  2657  005204  0EFC               	movlw	252
  2658  005206  1704               	andwf	memset@n& (0+255),f,b
  2659  005208  0EFF               	movlw	255
  2660  00520A  1705               	andwf	(memset@n+1)& (0+255),f,b
  2661  00520C  D00B               	goto	l8284
  2662  00520E                     l8278:
  2663                           
  2664                           ; BSR set to: 1
  2665  00520E  C10A  FFD9         	movff	memset@s,fsr2l
  2666  005212  C10B  FFDA         	movff	memset@s+1,fsr2h
  2667  005216  C102  FFDF         	movff	memset@c,indf2
  2668                           
  2669                           ; BSR set to: 1
  2670  00521A  0704               	decf	memset@n& (0+255),f,b
  2671  00521C  A0D8               	btfss	status,0,c
  2672  00521E  0705               	decf	(memset@n+1)& (0+255),f,b
  2673                           
  2674                           ; BSR set to: 1
  2675  005220  4B0A               	infsnz	memset@s& (0+255),f,b
  2676  005222  2B0B               	incf	(memset@s+1)& (0+255),f,b
  2677  005224                     l8284:
  2678                           
  2679                           ; BSR set to: 1
  2680  005224  5104               	movf	memset@n& (0+255),w,b
  2681  005226  1105               	iorwf	(memset@n+1)& (0+255),w,b
  2682  005228  B4D8               	btfsc	status,2,c
  2683  00522A  0012               	return	
  2684  00522C  D7F0               	goto	l8278
  2685  00522E                     __end_of_memset:
  2686                           	opt callstack 0
  2687                           
  2688 ;; *************** function _i2c_init *****************
  2689 ;; Defined at:
  2690 ;;		line 236 in file "main.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  i2c_clock       1    0        unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;Total ram usage:        1 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:   14
  2711 ;; This function calls:
  2712 ;;		_i2c_WriteSerial
  2713 ;; This function is called by:
  2714 ;;		_main
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text2
  2719  0068B2                     __ptext2:
  2720                           	opt callstack 0
  2721  0068B2                     _i2c_init:
  2722                           	opt callstack 16
  2723                           
  2724                           ;main.c: 241:     TRISCbits.RC3 = 1;
  2725                           
  2726                           ; BSR set to: 1
  2727                           ;incstack = 0
  2728  0068B2  8694               	bsf	3988,3,c	;volatile
  2729                           
  2730                           ;main.c: 242:     TRISCbits.RC4 = 1;
  2731  0068B4  8894               	bsf	3988,4,c	;volatile
  2732                           
  2733                           ;main.c: 244:     ANSELCbits.ANSC3 = 0;
  2734  0068B6  010F               	movlb	15	; () banked
  2735  0068B8  973A               	bcf	58,3,b	;volatile
  2736                           
  2737                           ;main.c: 245:     ANSELCbits.ANSC4 = 0;
  2738  0068BA  993A               	bcf	58,4,b	;volatile
  2739                           
  2740                           ; BSR set to: 15
  2741                           ;main.c: 249:     SSP1ADD = i2c_clock;
  2742                           
  2743                           ; BSR set to: 15
  2744  0068BC  0E9F               	movlw	159
  2745  0068BE  6EC8               	movwf	4040,c	;volatile
  2746                           
  2747                           ;main.c: 250:     SSP1CON1 = 0x28;
  2748  0068C0  0E28               	movlw	40
  2749  0068C2  6EC6               	movwf	4038,c	;volatile
  2750                           
  2751                           ;main.c: 251:     SSP1CON2 = 0;
  2752  0068C4  0E00               	movlw	0
  2753  0068C6  6EC5               	movwf	4037,c	;volatile
  2754                           
  2755                           ; BSR set to: 15
  2756                           ;main.c: 253:     i2c_WriteSerial(display_Addr, displayInit, 4);
  2757  0068C8  0E00               	movlw	0
  2758  0068CA  0101               	movlb	1	; () banked
  2759  0068CC  6F01               	movwf	(i2c_WriteSerial@addr+1)& (0+255),b
  2760  0068CE  0E3C               	movlw	60
  2761  0068D0  6F00               	movwf	i2c_WriteSerial@addr& (0+255),b
  2762  0068D2  0E2C               	movlw	low _displayInit
  2763  0068D4  6F02               	movwf	i2c_WriteSerial@data& (0+255),b
  2764  0068D6  0E10               	movlw	high _displayInit
  2765  0068D8  6F03               	movwf	(i2c_WriteSerial@data+1)& (0+255),b
  2766  0068DA  0E00               	movlw	0
  2767  0068DC  6F05               	movwf	(i2c_WriteSerial@length+1)& (0+255),b
  2768  0068DE  0E04               	movlw	4
  2769  0068E0  6F04               	movwf	i2c_WriteSerial@length& (0+255),b
  2770  0068E2  EC74  F02F         	call	_i2c_WriteSerial	;wreg free
  2771  0068E6  0012               	return		;funcret
  2772  0068E8                     __end_of_i2c_init:
  2773                           	opt callstack 0
  2774                           
  2775 ;; *************** function _dataLogger_init *****************
  2776 ;; Defined at:
  2777 ;;		line 446 in file "main.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;Total ram usage:        1 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:   22
  2798 ;; This function calls:
  2799 ;;		_i2c_ReadSerial
  2800 ;;		_i2c_WriteSerial
  2801 ;;		_printf
  2802 ;; This function is called by:
  2803 ;;		_main
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text3
  2808  004486                     __ptext3:
  2809                           	opt callstack 0
  2810  004486                     _dataLogger_init:
  2811                           	opt callstack 8
  2812                           
  2813                           ;main.c: 452:     i2c_WriteSerial(eeprom_Addr, verifyPos, 2);
  2814                           
  2815                           ;incstack = 0
  2816  004486  0E00               	movlw	0
  2817  004488  0101               	movlb	1	; () banked
  2818  00448A  6F01               	movwf	(i2c_WriteSerial@addr+1)& (0+255),b
  2819  00448C  0E50               	movlw	80
  2820  00448E  6F00               	movwf	i2c_WriteSerial@addr& (0+255),b
  2821  004490  0E30               	movlw	low _verifyPos
  2822  004492  6F02               	movwf	i2c_WriteSerial@data& (0+255),b
  2823  004494  0E10               	movlw	high _verifyPos
  2824  004496  6F03               	movwf	(i2c_WriteSerial@data+1)& (0+255),b
  2825  004498  0E00               	movlw	0
  2826  00449A  6F05               	movwf	(i2c_WriteSerial@length+1)& (0+255),b
  2827  00449C  0E02               	movlw	2
  2828  00449E  6F04               	movwf	i2c_WriteSerial@length& (0+255),b
  2829  0044A0  EC74  F02F         	call	_i2c_WriteSerial	;wreg free
  2830                           
  2831                           ;main.c: 453:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2832  0044A4  0ED0               	movlw	208
  2833  0044A6  0101               	movlb	1	; () banked
  2834  0044A8  6F99               	movwf	??_dataLogger_init& (0+255),b
  2835  0044AA  0EC9               	movlw	201
  2836  0044AC                     u11747:
  2837  0044AC  2EE8               	decfsz	wreg,f,c
  2838  0044AE  D7FE               	bra	u11747
  2839  0044B0  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  2840  0044B2  D7FC               	bra	u11747
  2841  0044B4  D000               	nop2	
  2842                           
  2843                           ;main.c: 455:     i2c_ReadSerial(eeprom_Addr, logStatus, 1);
  2844  0044B6  0E00               	movlw	0
  2845  0044B8  0101               	movlb	1	; () banked
  2846  0044BA  6F01               	movwf	(i2c_ReadSerial@addr+1)& (0+255),b
  2847  0044BC  0E50               	movlw	80
  2848  0044BE  6F00               	movwf	i2c_ReadSerial@addr& (0+255),b
  2849  0044C0  0ED3               	movlw	low _logStatus
  2850  0044C2  6F02               	movwf	i2c_ReadSerial@data& (0+255),b
  2851  0044C4  0E01               	movlw	high _logStatus
  2852  0044C6  6F03               	movwf	(i2c_ReadSerial@data+1)& (0+255),b
  2853  0044C8  0E00               	movlw	0
  2854  0044CA  6F05               	movwf	(i2c_ReadSerial@length+1)& (0+255),b
  2855  0044CC  0E01               	movlw	1
  2856  0044CE  6F04               	movwf	i2c_ReadSerial@length& (0+255),b
  2857  0044D0  EC48  F02D         	call	_i2c_ReadSerial	;wreg free
  2858                           
  2859                           ;main.c: 456:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2860  0044D4  0ED0               	movlw	208
  2861  0044D6  0101               	movlb	1	; () banked
  2862  0044D8  6F99               	movwf	??_dataLogger_init& (0+255),b
  2863  0044DA  0EC9               	movlw	201
  2864  0044DC                     u11757:
  2865  0044DC  2EE8               	decfsz	wreg,f,c
  2866  0044DE  D7FE               	bra	u11757
  2867  0044E0  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  2868  0044E2  D7FC               	bra	u11757
  2869  0044E4  D000               	nop2	
  2870                           
  2871                           ;main.c: 460:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2872  0044E6  0ED0               	movlw	208
  2873  0044E8  0101               	movlb	1	; () banked
  2874  0044EA  6F99               	movwf	??_dataLogger_init& (0+255),b
  2875  0044EC  0EC9               	movlw	201
  2876  0044EE                     u11767:
  2877  0044EE  2EE8               	decfsz	wreg,f,c
  2878  0044F0  D7FE               	bra	u11767
  2879  0044F2  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  2880  0044F4  D7FC               	bra	u11767
  2881  0044F6  D000               	nop2	
  2882                           
  2883                           ;main.c: 463:     i2c_WriteSerial(eeprom_Addr, nextPos, 2);
  2884  0044F8  0E00               	movlw	0
  2885  0044FA  0101               	movlb	1	; () banked
  2886  0044FC  6F01               	movwf	(i2c_WriteSerial@addr+1)& (0+255),b
  2887  0044FE  0E50               	movlw	80
  2888  004500  6F00               	movwf	i2c_WriteSerial@addr& (0+255),b
  2889  004502  0E28               	movlw	low _nextPos
  2890  004504  6F02               	movwf	i2c_WriteSerial@data& (0+255),b
  2891  004506  0E10               	movlw	high _nextPos
  2892  004508  6F03               	movwf	(i2c_WriteSerial@data+1)& (0+255),b
  2893  00450A  0E00               	movlw	0
  2894  00450C  6F05               	movwf	(i2c_WriteSerial@length+1)& (0+255),b
  2895  00450E  0E02               	movlw	2
  2896  004510  6F04               	movwf	i2c_WriteSerial@length& (0+255),b
  2897  004512  EC74  F02F         	call	_i2c_WriteSerial	;wreg free
  2898                           
  2899                           ;main.c: 464:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2900  004516  0ED0               	movlw	208
  2901  004518  0101               	movlb	1	; () banked
  2902  00451A  6F99               	movwf	??_dataLogger_init& (0+255),b
  2903  00451C  0EC9               	movlw	201
  2904  00451E                     u11777:
  2905  00451E  2EE8               	decfsz	wreg,f,c
  2906  004520  D7FE               	bra	u11777
  2907  004522  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  2908  004524  D7FC               	bra	u11777
  2909  004526  D000               	nop2	
  2910                           
  2911                           ;main.c: 466:     i2c_ReadSerial(eeprom_Addr, logPos, 2);
  2912  004528  0E00               	movlw	0
  2913  00452A  0101               	movlb	1	; () banked
  2914  00452C  6F01               	movwf	(i2c_ReadSerial@addr+1)& (0+255),b
  2915  00452E  0E50               	movlw	80
  2916  004530  6F00               	movwf	i2c_ReadSerial@addr& (0+255),b
  2917  004532  0ED5               	movlw	low _logPos
  2918  004534  6F02               	movwf	i2c_ReadSerial@data& (0+255),b
  2919  004536  0E01               	movlw	high _logPos
  2920  004538  6F03               	movwf	(i2c_ReadSerial@data+1)& (0+255),b
  2921  00453A  0E00               	movlw	0
  2922  00453C  6F05               	movwf	(i2c_ReadSerial@length+1)& (0+255),b
  2923  00453E  0E02               	movlw	2
  2924  004540  6F04               	movwf	i2c_ReadSerial@length& (0+255),b
  2925  004542  EC48  F02D         	call	_i2c_ReadSerial	;wreg free
  2926                           
  2927                           ;main.c: 467:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2928  004546  0ED0               	movlw	208
  2929  004548  0101               	movlb	1	; () banked
  2930  00454A  6F99               	movwf	??_dataLogger_init& (0+255),b
  2931  00454C  0EC9               	movlw	201
  2932  00454E                     u11787:
  2933  00454E  2EE8               	decfsz	wreg,f,c
  2934  004550  D7FE               	bra	u11787
  2935  004552  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  2936  004554  D7FC               	bra	u11787
  2937  004556  D000               	nop2	
  2938                           
  2939                           ;main.c: 475:     if((logPos[0] == 0x00) && (logPos[1] < 0x03)) {
  2940  004558  0101               	movlb	1	; () banked
  2941  00455A  51D5               	movf	_logPos& (0+255),w,b
  2942  00455C  A4D8               	btfss	status,2,c
  2943  00455E  D051               	goto	l8232
  2944                           
  2945                           ; BSR set to: 1
  2946  004560  0E03               	movlw	3
  2947  004562  61D6               	cpfslt	(_logPos+1)& (0+255),b
  2948  004564  D04E               	goto	l8232
  2949                           
  2950                           ; BSR set to: 1
  2951                           ;main.c: 478:         printf("Fuck 1 \r\n");
  2952  004566  0EC4               	movlw	low STR_10
  2953  004568  6F91               	movwf	printf@fmt& (0+255),b
  2954  00456A  0E10               	movlw	high STR_10
  2955  00456C  6F92               	movwf	(printf@fmt+1)& (0+255),b
  2956  00456E  EC5C  F035         	call	_printf	;wreg free
  2957                           
  2958                           ;main.c: 480:         i2c_WriteSerial(eeprom_Addr, nextPos, 4);
  2959  004572  0E00               	movlw	0
  2960  004574  0101               	movlb	1	; () banked
  2961  004576  6F01               	movwf	(i2c_WriteSerial@addr+1)& (0+255),b
  2962  004578  0E50               	movlw	80
  2963  00457A  6F00               	movwf	i2c_WriteSerial@addr& (0+255),b
  2964  00457C  0E28               	movlw	low _nextPos
  2965  00457E  6F02               	movwf	i2c_WriteSerial@data& (0+255),b
  2966  004580  0E10               	movlw	high _nextPos
  2967  004582  6F03               	movwf	(i2c_WriteSerial@data+1)& (0+255),b
  2968  004584  0E00               	movlw	0
  2969  004586  6F05               	movwf	(i2c_WriteSerial@length+1)& (0+255),b
  2970  004588  0E04               	movlw	4
  2971  00458A  6F04               	movwf	i2c_WriteSerial@length& (0+255),b
  2972  00458C  EC74  F02F         	call	_i2c_WriteSerial	;wreg free
  2973                           
  2974                           ;main.c: 481:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2975  004590  0ED0               	movlw	208
  2976  004592  0101               	movlb	1	; () banked
  2977  004594  6F99               	movwf	??_dataLogger_init& (0+255),b
  2978  004596  0EC9               	movlw	201
  2979  004598                     u11797:
  2980  004598  2EE8               	decfsz	wreg,f,c
  2981  00459A  D7FE               	bra	u11797
  2982  00459C  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  2983  00459E  D7FC               	bra	u11797
  2984  0045A0  D000               	nop2	
  2985                           
  2986                           ;main.c: 483:         i2c_WriteSerial(eeprom_Addr, nextPos, 2);
  2987  0045A2  0E00               	movlw	0
  2988  0045A4  0101               	movlb	1	; () banked
  2989  0045A6  6F01               	movwf	(i2c_WriteSerial@addr+1)& (0+255),b
  2990  0045A8  0E50               	movlw	80
  2991  0045AA  6F00               	movwf	i2c_WriteSerial@addr& (0+255),b
  2992  0045AC  0E28               	movlw	low _nextPos
  2993  0045AE  6F02               	movwf	i2c_WriteSerial@data& (0+255),b
  2994  0045B0  0E10               	movlw	high _nextPos
  2995  0045B2  6F03               	movwf	(i2c_WriteSerial@data+1)& (0+255),b
  2996  0045B4  0E00               	movlw	0
  2997  0045B6  6F05               	movwf	(i2c_WriteSerial@length+1)& (0+255),b
  2998  0045B8  0E02               	movlw	2
  2999  0045BA  6F04               	movwf	i2c_WriteSerial@length& (0+255),b
  3000  0045BC  EC74  F02F         	call	_i2c_WriteSerial	;wreg free
  3001                           
  3002                           ;main.c: 484:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3003  0045C0  0ED0               	movlw	208
  3004  0045C2  0101               	movlb	1	; () banked
  3005  0045C4  6F99               	movwf	??_dataLogger_init& (0+255),b
  3006  0045C6  0EC9               	movlw	201
  3007  0045C8                     u11807:
  3008  0045C8  2EE8               	decfsz	wreg,f,c
  3009  0045CA  D7FE               	bra	u11807
  3010  0045CC  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  3011  0045CE  D7FC               	bra	u11807
  3012  0045D0  D000               	nop2	
  3013                           
  3014                           ;main.c: 486:         i2c_ReadSerial(eeprom_Addr, logPos, 2);
  3015  0045D2  0E00               	movlw	0
  3016  0045D4  0101               	movlb	1	; () banked
  3017  0045D6  6F01               	movwf	(i2c_ReadSerial@addr+1)& (0+255),b
  3018  0045D8  0E50               	movlw	80
  3019  0045DA  6F00               	movwf	i2c_ReadSerial@addr& (0+255),b
  3020  0045DC  0ED5               	movlw	low _logPos
  3021  0045DE  6F02               	movwf	i2c_ReadSerial@data& (0+255),b
  3022  0045E0  0E01               	movlw	high _logPos
  3023  0045E2  6F03               	movwf	(i2c_ReadSerial@data+1)& (0+255),b
  3024  0045E4  0E00               	movlw	0
  3025  0045E6  6F05               	movwf	(i2c_ReadSerial@length+1)& (0+255),b
  3026  0045E8  0E02               	movlw	2
  3027  0045EA  6F04               	movwf	i2c_ReadSerial@length& (0+255),b
  3028  0045EC  EC48  F02D         	call	_i2c_ReadSerial	;wreg free
  3029                           
  3030                           ;main.c: 487:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3031  0045F0  0ED0               	movlw	208
  3032  0045F2  0101               	movlb	1	; () banked
  3033  0045F4  6F99               	movwf	??_dataLogger_init& (0+255),b
  3034  0045F6  0EC9               	movlw	201
  3035  0045F8                     u11817:
  3036  0045F8  2EE8               	decfsz	wreg,f,c
  3037  0045FA  D7FE               	bra	u11817
  3038  0045FC  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  3039  0045FE  D7FC               	bra	u11817
  3040  004600  D000               	nop2	
  3041  004602                     l8232:
  3042                           
  3043                           ;main.c: 498:     if ((logStatus[0] != 0x02) && (logStatus[0] != 0x01)){
  3044  004602  0E02               	movlw	2
  3045  004604  0101               	movlb	1	; () banked
  3046  004606  19D3               	xorwf	_logStatus& (0+255),w,b
  3047  004608  B4D8               	btfsc	status,2,c
  3048  00460A  0012               	return	
  3049                           
  3050                           ; BSR set to: 1
  3051  00460C  05D3               	decf	_logStatus& (0+255),w,b
  3052  00460E  B4D8               	btfsc	status,2,c
  3053  004610  0012               	return	
  3054                           
  3055                           ; BSR set to: 1
  3056                           ;main.c: 500:         printf("The last status is not 0x01 or 0x02 \r\n");
  3057  004612  0E37               	movlw	low STR_11
  3058  004614  6F91               	movwf	printf@fmt& (0+255),b
  3059  004616  0E10               	movlw	high STR_11
  3060  004618  6F92               	movwf	(printf@fmt+1)& (0+255),b
  3061  00461A  EC5C  F035         	call	_printf	;wreg free
  3062                           
  3063                           ;main.c: 502:         i2c_WriteSerial(eeprom_Addr, verifyPos, 3);
  3064  00461E  0E00               	movlw	0
  3065  004620  0101               	movlb	1	; () banked
  3066  004622  6F01               	movwf	(i2c_WriteSerial@addr+1)& (0+255),b
  3067  004624  0E50               	movlw	80
  3068  004626  6F00               	movwf	i2c_WriteSerial@addr& (0+255),b
  3069  004628  0E30               	movlw	low _verifyPos
  3070  00462A  6F02               	movwf	i2c_WriteSerial@data& (0+255),b
  3071  00462C  0E10               	movlw	high _verifyPos
  3072  00462E  6F03               	movwf	(i2c_WriteSerial@data+1)& (0+255),b
  3073  004630  0E00               	movlw	0
  3074  004632  6F05               	movwf	(i2c_WriteSerial@length+1)& (0+255),b
  3075  004634  0E03               	movlw	3
  3076  004636  6F04               	movwf	i2c_WriteSerial@length& (0+255),b
  3077  004638  EC74  F02F         	call	_i2c_WriteSerial	;wreg free
  3078                           
  3079                           ;main.c: 503:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3080  00463C  0ED0               	movlw	208
  3081  00463E  0101               	movlb	1	; () banked
  3082  004640  6F99               	movwf	??_dataLogger_init& (0+255),b
  3083  004642  0EC9               	movlw	201
  3084  004644                     u11827:
  3085  004644  2EE8               	decfsz	wreg,f,c
  3086  004646  D7FE               	bra	u11827
  3087  004648  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  3088  00464A  D7FC               	bra	u11827
  3089  00464C  D000               	nop2	
  3090                           
  3091                           ;main.c: 505:         i2c_WriteSerial(eeprom_Addr, verifyPos, 2);
  3092  00464E  0E00               	movlw	0
  3093  004650  0101               	movlb	1	; () banked
  3094  004652  6F01               	movwf	(i2c_WriteSerial@addr+1)& (0+255),b
  3095  004654  0E50               	movlw	80
  3096  004656  6F00               	movwf	i2c_WriteSerial@addr& (0+255),b
  3097  004658  0E30               	movlw	low _verifyPos
  3098  00465A  6F02               	movwf	i2c_WriteSerial@data& (0+255),b
  3099  00465C  0E10               	movlw	high _verifyPos
  3100  00465E  6F03               	movwf	(i2c_WriteSerial@data+1)& (0+255),b
  3101  004660  0E00               	movlw	0
  3102  004662  6F05               	movwf	(i2c_WriteSerial@length+1)& (0+255),b
  3103  004664  0E02               	movlw	2
  3104  004666  6F04               	movwf	i2c_WriteSerial@length& (0+255),b
  3105  004668  EC74  F02F         	call	_i2c_WriteSerial	;wreg free
  3106                           
  3107                           ;main.c: 506:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3108  00466C  0ED0               	movlw	208
  3109  00466E  0101               	movlb	1	; () banked
  3110  004670  6F99               	movwf	??_dataLogger_init& (0+255),b
  3111  004672  0EC9               	movlw	201
  3112  004674                     u11837:
  3113  004674  2EE8               	decfsz	wreg,f,c
  3114  004676  D7FE               	bra	u11837
  3115  004678  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  3116  00467A  D7FC               	bra	u11837
  3117  00467C  D000               	nop2	
  3118                           
  3119                           ;main.c: 508:         i2c_ReadSerial(eeprom_Addr, logStatus, 1);
  3120  00467E  0E00               	movlw	0
  3121  004680  0101               	movlb	1	; () banked
  3122  004682  6F01               	movwf	(i2c_ReadSerial@addr+1)& (0+255),b
  3123  004684  0E50               	movlw	80
  3124  004686  6F00               	movwf	i2c_ReadSerial@addr& (0+255),b
  3125  004688  0ED3               	movlw	low _logStatus
  3126  00468A  6F02               	movwf	i2c_ReadSerial@data& (0+255),b
  3127  00468C  0E01               	movlw	high _logStatus
  3128  00468E  6F03               	movwf	(i2c_ReadSerial@data+1)& (0+255),b
  3129  004690  0E00               	movlw	0
  3130  004692  6F05               	movwf	(i2c_ReadSerial@length+1)& (0+255),b
  3131  004694  0E01               	movlw	1
  3132  004696  6F04               	movwf	i2c_ReadSerial@length& (0+255),b
  3133  004698  EC48  F02D         	call	_i2c_ReadSerial	;wreg free
  3134                           
  3135                           ;main.c: 509:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3136  00469C  0ED0               	movlw	208
  3137  00469E  0101               	movlb	1	; () banked
  3138  0046A0  6F99               	movwf	??_dataLogger_init& (0+255),b
  3139  0046A2  0EC9               	movlw	201
  3140  0046A4                     u11847:
  3141  0046A4  2EE8               	decfsz	wreg,f,c
  3142  0046A6  D7FE               	bra	u11847
  3143  0046A8  2F99               	decfsz	??_dataLogger_init& (0+255),f,b
  3144  0046AA  D7FC               	bra	u11847
  3145  0046AC  D000               	nop2	
  3146  0046AE  0012               	return		;funcret
  3147  0046B0                     __end_of_dataLogger_init:
  3148                           	opt callstack 0
  3149                           
  3150 ;; *************** function _printf *****************
  3151 ;; Defined at:
  3152 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  fmt             2  145[BANK1 ] PTR const unsigned char 
  3155 ;;		 -> STR_15(21), STR_13(21), STR_11(39), STR_10(10), 
  3156 ;;		 -> STR_7(31), STR_6(14), STR_3(15), 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  ap              2  151[BANK1 ] PTR void [1]
  3159 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3160 ;;  ret             2    0        int 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  2  145[BANK1 ] int 
  3163 ;; Registers used:
  3164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3170 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;Total ram usage:        8 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:   21
  3177 ;; This function calls:
  3178 ;;		_vfprintf
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;;		_dataLogger_init
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text4
  3186  006AB8                     __ptext4:
  3187                           	opt callstack 0
  3188  006AB8                     _printf:
  3189                           	opt callstack 9
  3190                           
  3191                           ;incstack = 0
  3192  006AB8  0E93               	movlw	low (?_printf+2)
  3193  006ABA  0101               	movlb	1	; () banked
  3194  006ABC  6F97               	movwf	printf@ap& (0+255),b
  3195  006ABE  0E01               	movlw	high (?_printf+2)
  3196  006AC0  6F98               	movwf	(printf@ap+1)& (0+255),b
  3197                           
  3198                           ; BSR set to: 1
  3199  006AC2  0E00               	movlw	0
  3200  006AC4  6F89               	movwf	vfprintf@fp& (0+255),b
  3201  006AC6  0E00               	movlw	0
  3202  006AC8  6F8A               	movwf	(vfprintf@fp+1)& (0+255),b
  3203  006ACA  C191  F18B         	movff	printf@fmt,vfprintf@fmt
  3204  006ACE  C192  F18C         	movff	printf@fmt+1,vfprintf@fmt+1
  3205  006AD2  0E97               	movlw	low printf@ap
  3206  006AD4  6F8D               	movwf	vfprintf@ap& (0+255),b
  3207  006AD6  0E01               	movlw	high printf@ap
  3208  006AD8  6F8E               	movwf	(vfprintf@ap+1)& (0+255),b
  3209  006ADA  EC2B  F032         	call	_vfprintf	;wreg free
  3210  006ADE  0012               	return		;funcret
  3211  006AE0                     __end_of_printf:
  3212                           	opt callstack 0
  3213                           
  3214 ;; *************** function _vfprintf *****************
  3215 ;; Defined at:
  3216 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  fp              2  137[BANK1 ] PTR struct _IO_FILE
  3219 ;;		 -> sprintf@f(6), NULL(0), 
  3220 ;;  fmt             2  139[BANK1 ] PTR const unsigned char 
  3221 ;;		 -> STR_15(21), STR_14(5), STR_13(21), STR_12(5), 
  3222 ;;		 -> STR_11(39), STR_10(10), STR_9(6), STR_8(6), 
  3223 ;;		 -> STR_7(31), STR_6(14), STR_3(15), 
  3224 ;;  ap              2  141[BANK1 ] PTR PTR void 
  3225 ;;		 -> printf@ap(2), sprintf@ap(2), 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  cfmt            2  143[BANK1 ] PTR unsigned char 
  3228 ;;		 -> STR_15(21), STR_14(5), STR_13(21), STR_12(5), 
  3229 ;;		 -> STR_11(39), STR_10(10), STR_9(6), STR_8(6), 
  3230 ;;		 -> STR_7(31), STR_6(14), STR_3(15), 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  2  137[BANK1 ] int 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3240 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:        8 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:   20
  3247 ;; This function calls:
  3248 ;;		_vfpfcnvrt
  3249 ;; This function is called by:
  3250 ;;		_printf
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text5
  3255  006456                     __ptext5:
  3256                           	opt callstack 0
  3257  006456                     _vfprintf:
  3258                           	opt callstack 9
  3259                           
  3260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3261                           
  3262                           ;incstack = 0
  3263  006456  C18B  F18F         	movff	vfprintf@fmt,vfprintf@cfmt
  3264  00645A  C18C  F190         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3265                           
  3266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3267  00645E  0E00               	movlw	0
  3268  006460  0101               	movlb	1	; () banked
  3269  006462  6FA6               	movwf	(_nout+1)& (0+255),b
  3270  006464  0E00               	movlw	0
  3271  006466  6FA5               	movwf	_nout& (0+255),b
  3272                           
  3273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3274  006468  D013               	goto	l7970
  3275  00646A                     l7968:
  3276                           
  3277                           ; BSR set to: 1
  3278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3279  00646A  C189  F171         	movff	vfprintf@fp,vfpfcnvrt@fp
  3280  00646E  C18A  F172         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3281  006472  0E8F               	movlw	low vfprintf@cfmt
  3282  006474  6F73               	movwf	vfpfcnvrt@fmt& (0+255),b
  3283  006476  0E01               	movlw	high vfprintf@cfmt
  3284  006478  6F74               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3285  00647A  C18D  F175         	movff	vfprintf@ap,vfpfcnvrt@ap
  3286  00647E  C18E  F176         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3287  006482  EC05  F012         	call	_vfpfcnvrt	;wreg free
  3288  006486  0101               	movlb	1	; () banked
  3289  006488  5171               	movf	?_vfpfcnvrt& (0+255),w,b
  3290  00648A  27A5               	addwf	_nout& (0+255),f,b
  3291  00648C  5172               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3292  00648E  23A6               	addwfc	(_nout+1)& (0+255),f,b
  3293  006490                     l7970:
  3294                           
  3295                           ; BSR set to: 1
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3297  006490  C18F  FFF6         	movff	vfprintf@cfmt,tblptrl
  3298  006494  C190  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3299  006498                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3300  006498  6AF8               	clrf	tblptru,c
  3301  00649A                     	endif
  3302  00649A                     	if	0	;tblptru may be non-zero
  3303  00649A                     	endif
  3304  00649A  0008               	tblrd		*
  3305  00649C  50F5               	movf	tablat,w,c
  3306  00649E  0900               	iorlw	0
  3307  0064A0  A4D8               	btfss	status,2,c
  3308  0064A2  D7E3               	goto	l7968
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3312  0064A4  C1A5  F189         	movff	_nout,?_vfprintf
  3313  0064A8  C1A6  F18A         	movff	_nout+1,?_vfprintf+1
  3314                           
  3315                           ; BSR set to: 1
  3316  0064AC  0012               	return		;funcret
  3317  0064AE                     __end_of_vfprintf:
  3318                           	opt callstack 0
  3319                           
  3320 ;; *************** function _vfpfcnvrt *****************
  3321 ;; Defined at:
  3322 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  fp              2  113[BANK1 ] PTR struct _IO_FILE
  3325 ;;		 -> sprintf@f(6), NULL(0), 
  3326 ;;  fmt             2  115[BANK1 ] PTR PTR unsigned char 
  3327 ;;		 -> vfprintf@cfmt(2), 
  3328 ;;  ap              2  117[BANK1 ] PTR PTR void 
  3329 ;;		 -> printf@ap(2), sprintf@ap(2), 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  llu             8    0        unsigned long long 
  3332 ;;  ll              8    0        long long 
  3333 ;;  f               4  129[BANK1 ] long long 
  3334 ;;  ct              3  134[BANK1 ] unsigned char [3]
  3335 ;;  vp              3    0        PTR void 
  3336 ;;  cp              2  123[BANK1 ] PTR unsigned char 
  3337 ;;		 -> ?_printf(2), ?_sprintf(2), dataLogRead@readOutT(5), readData(4), 
  3338 ;;		 -> tempRead(2), adafruit@rh_code(4), stringArry(64), 
  3339 ;;  i               2    0        int 
  3340 ;;  done            2    0        int 
  3341 ;;  c               1  133[BANK1 ] unsigned char 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  2  113[BANK1 ] int 
  3344 ;; Registers used:
  3345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3351 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;Total ram usage:       24 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:   19
  3358 ;; This function calls:
  3359 ;;		_atoi
  3360 ;;		_efgtoa
  3361 ;;		_fputc
  3362 ;;		_isdigit
  3363 ;;		_isupper
  3364 ;;		_stoa
  3365 ;;		_strncmp
  3366 ;;		_tolower
  3367 ;; This function is called by:
  3368 ;;		_vfprintf
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text6
  3373  00240A                     __ptext6:
  3374                           	opt callstack 0
  3375  00240A                     _vfpfcnvrt:
  3376                           	opt callstack 9
  3377                           
  3378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3379                           
  3380                           ; BSR set to: 1
  3381                           ;incstack = 0
  3382  00240A  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3383  00240E  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3384  002412  CFDE FFF6          	movff	postinc2,tblptrl
  3385  002416  CFDD FFF7          	movff	postdec2,tblptrh
  3386  00241A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3387  00241A  6AF8               	clrf	tblptru,c
  3388  00241C                     	endif
  3389  00241C                     	if	0	;tblptru may be non-zero
  3390  00241C                     	endif
  3391  00241C  0008               	tblrd		*
  3392  00241E  50F5               	movf	tablat,w,c
  3393  002420  0A25               	xorlw	37
  3394  002422  A4D8               	btfss	status,2,c
  3395  002424  D1F3               	goto	l7684
  3396                           
  3397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3398  002426  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3399  00242A  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3400  00242E  2ADE               	incf	postinc2,f,c
  3401  002430  0E00               	movlw	0
  3402  002432  22DD               	addwfc	postdec2,f,c
  3403                           
  3404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3405  002434  0E00               	movlw	0
  3406  002436  0101               	movlb	1	; () banked
  3407  002438  6FA8               	movwf	(_width+1)& (0+255),b
  3408  00243A  0E00               	movlw	0
  3409  00243C  6FA7               	movwf	_width& (0+255),b
  3410  00243E  C1A7  F1AB         	movff	_width,_flags
  3411  002442  C1A8  F1AC         	movff	_width+1,_flags+1
  3412                           
  3413                           ; BSR set to: 1
  3414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3415  002446  69A9               	setf	_prec& (0+255),b
  3416  002448  69AA               	setf	(_prec+1)& (0+255),b
  3417                           
  3418                           ; BSR set to: 1
  3419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3420  00244A  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3421  00244E  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3422  002452  CFDE FFF6          	movff	postinc2,tblptrl
  3423  002456  CFDD FFF7          	movff	postdec2,tblptrh
  3424  00245A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3425  00245A  6AF8               	clrf	tblptru,c
  3426  00245C                     	endif
  3427  00245C                     	if	0	;tblptru may be non-zero
  3428  00245C                     	endif
  3429  00245C  0008               	tblrd		*
  3430  00245E  50F5               	movf	tablat,w,c
  3431  002460  0A2E               	xorlw	46
  3432  002462  A4D8               	btfss	status,2,c
  3433  002464  D070               	goto	u10540
  3434                           
  3435                           ; BSR set to: 1
  3436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3437  002466  0E00               	movlw	0
  3438  002468  6FAA               	movwf	(_prec+1)& (0+255),b
  3439  00246A  0E00               	movlw	0
  3440  00246C  6FA9               	movwf	_prec& (0+255),b
  3441                           
  3442                           ; BSR set to: 1
  3443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3444  00246E  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3445  002472  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3446  002476  2ADE               	incf	postinc2,f,c
  3447  002478  0E00               	movlw	0
  3448  00247A  22DD               	addwfc	postdec2,f,c
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3452  00247C  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3453  002480  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3454  002484  CFDE FFF6          	movff	postinc2,tblptrl
  3455  002488  CFDD FFF7          	movff	postdec2,tblptrh
  3456  00248C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3457  00248C  6AF8               	clrf	tblptru,c
  3458  00248E                     	endif
  3459  00248E                     	if	0	;tblptru may be non-zero
  3460  00248E                     	endif
  3461  00248E  0008               	tblrd		*
  3462  002490  50F5               	movf	tablat,w,c
  3463  002492  0A2A               	xorlw	42
  3464  002494  A4D8               	btfss	status,2,c
  3465  002496  D01C               	goto	l7612
  3466                           
  3467                           ; BSR set to: 1
  3468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3469  002498  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3470  00249C  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3471  0024A0  2ADE               	incf	postinc2,f,c
  3472  0024A2  0E00               	movlw	0
  3473  0024A4  22DD               	addwfc	postdec2,f,c
  3474                           
  3475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3476  0024A6  C175  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3477  0024AA  C176  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3478  0024AE  CFDF F177          	movff	indf2,??_vfpfcnvrt
  3479  0024B2  0E02               	movlw	2
  3480  0024B4  26DE               	addwf	postinc2,f,c
  3481  0024B6  CFDF F178          	movff	indf2,??_vfpfcnvrt+1
  3482  0024BA  0E00               	movlw	0
  3483  0024BC  22DD               	addwfc	postdec2,f,c
  3484  0024BE  C177  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3485  0024C2  C178  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3486  0024C6  CFDE F1A9          	movff	postinc2,_prec
  3487  0024CA  CFDD F1AA          	movff	postdec2,_prec+1
  3488                           
  3489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3490  0024CE  D03B               	goto	u10540
  3491  0024D0                     l7612:
  3492                           
  3493                           ; BSR set to: 1
  3494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3495  0024D0  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3496  0024D4  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3497  0024D8  CFDE F107          	movff	postinc2,atoi@s
  3498  0024DC  CFDD F108          	movff	postdec2,atoi@s+1
  3499  0024E0  EC91  F026         	call	_atoi	;wreg free
  3500  0024E4  C107  F1A9         	movff	?_atoi,_prec
  3501  0024E8  C108  F1AA         	movff	?_atoi+1,_prec+1
  3502                           
  3503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3504  0024EC  D007               	goto	l7616
  3505  0024EE                     l7614:
  3506                           
  3507                           ; BSR set to: 1
  3508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3509  0024EE  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3510  0024F2  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3511  0024F6  2ADE               	incf	postinc2,f,c
  3512  0024F8  0E00               	movlw	0
  3513  0024FA  22DD               	addwfc	postdec2,f,c
  3514  0024FC                     l7616:
  3515  0024FC  0ED0               	movlw	208
  3516  0024FE  0101               	movlb	1	; () banked
  3517  002500  6F77               	movwf	??_vfpfcnvrt& (0+255),b
  3518  002502  0EFF               	movlw	255
  3519  002504  6F78               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3520  002506  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3521  00250A  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3522  00250E  CFDE FFF6          	movff	postinc2,tblptrl
  3523  002512  CFDD FFF7          	movff	postdec2,tblptrh
  3524  002516                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3525  002516  6AF8               	clrf	tblptru,c
  3526  002518                     	endif
  3527  002518                     	if	0	;tblptru may be non-zero
  3528  002518                     	endif
  3529  002518  0008               	tblrd		*
  3530  00251A  50F5               	movf	tablat,w,c
  3531  00251C  6F79               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3532  00251E  6B7A               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3533  002520  5177               	movf	??_vfpfcnvrt& (0+255),w,b
  3534  002522  2779               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3535  002524  5178               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3536  002526  237A               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3537  002528  517A               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3538  00252A  E106               	bnz	u10520
  3539  00252C  0E0A               	movlw	10
  3540  00252E  5D79               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3541  002530  B0D8               	btfsc	status,0,c
  3542  002532  D002               	goto	u10520
  3543  002534  0E01               	movlw	1
  3544  002536  D001               	goto	u10530
  3545  002538                     u10520:
  3546  002538  0E00               	movlw	0
  3547  00253A                     u10530:
  3548  00253A  6F7D               	movwf	_vfpfcnvrt$1629& (0+255),b
  3549  00253C  6B7E               	clrf	(_vfpfcnvrt$1629+1)& (0+255),b
  3550                           
  3551                           ; BSR set to: 1
  3552  00253E  517D               	movf	_vfpfcnvrt$1629& (0+255),w,b
  3553  002540  117E               	iorwf	(_vfpfcnvrt$1629+1)& (0+255),w,b
  3554  002542  A4D8               	btfss	status,2,c
  3555  002544  D7D4               	goto	l7614
  3556  002546                     u10540:
  3557                           
  3558                           ; BSR set to: 1
  3559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3560  002546  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3561  00254A  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3562  00254E  CFDE FFF6          	movff	postinc2,tblptrl
  3563  002552  CFDD FFF7          	movff	postdec2,tblptrh
  3564  002556                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3565  002556  6AF8               	clrf	tblptru,c
  3566  002558                     	endif
  3567  002558                     	if	0	;tblptru may be non-zero
  3568  002558                     	endif
  3569  002558  0008               	tblrd		*
  3570  00255A  50F5               	movf	tablat,w,c
  3571  00255C  6F06               	movwf	tolower@c& (0+255),b
  3572  00255E  6B07               	clrf	(tolower@c+1)& (0+255),b
  3573  002560  ECD5  F032         	call	_tolower	;wreg free
  3574  002564  0101               	movlb	1	; () banked
  3575  002566  5106               	movf	?_tolower& (0+255),w,b
  3576  002568  6F86               	movwf	vfpfcnvrt@ct& (0+255),b
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3580  00256A  5186               	movf	vfpfcnvrt@ct& (0+255),w,b
  3581  00256C  B4D8               	btfsc	status,2,c
  3582  00256E  D037               	goto	l7632
  3583                           
  3584                           ; BSR set to: 1
  3585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3586  002570  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3587  002574  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3588  002578  CFDE F177          	movff	postinc2,??_vfpfcnvrt
  3589  00257C  CFDD F178          	movff	postdec2,??_vfpfcnvrt+1
  3590  002580  0E01               	movlw	1
  3591  002582  2777               	addwf	??_vfpfcnvrt& (0+255),f,b
  3592  002584  0E00               	movlw	0
  3593  002586  2378               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3594  002588  C177  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3595  00258C  C178  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3596  002590                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3597  002590  6AF8               	clrf	tblptru,c
  3598  002592                     	endif
  3599  002592                     	if	0	;tblptru may be non-zero
  3600  002592                     	endif
  3601  002592  0008               	tblrd		*
  3602  002594  50F5               	movf	tablat,w,c
  3603  002596  6F06               	movwf	tolower@c& (0+255),b
  3604  002598  6B07               	clrf	(tolower@c+1)& (0+255),b
  3605  00259A  ECD5  F032         	call	_tolower	;wreg free
  3606  00259E  0101               	movlb	1	; () banked
  3607  0025A0  5106               	movf	?_tolower& (0+255),w,b
  3608  0025A2  6F87               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3609                           
  3610                           ; BSR set to: 1
  3611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3612  0025A4  5187               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3613  0025A6  B4D8               	btfsc	status,2,c
  3614  0025A8  D01A               	goto	l7632
  3615                           
  3616                           ; BSR set to: 1
  3617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3618  0025AA  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3619  0025AE  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3620  0025B2  CFDE F177          	movff	postinc2,??_vfpfcnvrt
  3621  0025B6  CFDD F178          	movff	postdec2,??_vfpfcnvrt+1
  3622  0025BA  0E02               	movlw	2
  3623  0025BC  2777               	addwf	??_vfpfcnvrt& (0+255),f,b
  3624  0025BE  0E00               	movlw	0
  3625  0025C0  2378               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3626  0025C2  C177  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3627  0025C6  C178  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3628  0025CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3629  0025CA  6AF8               	clrf	tblptru,c
  3630  0025CC                     	endif
  3631  0025CC                     	if	0	;tblptru may be non-zero
  3632  0025CC                     	endif
  3633  0025CC  0008               	tblrd		*
  3634  0025CE  50F5               	movf	tablat,w,c
  3635  0025D0  6F06               	movwf	tolower@c& (0+255),b
  3636  0025D2  6B07               	clrf	(tolower@c+1)& (0+255),b
  3637  0025D4  ECD5  F032         	call	_tolower	;wreg free
  3638  0025D8  0101               	movlb	1	; () banked
  3639  0025DA  5106               	movf	?_tolower& (0+255),w,b
  3640  0025DC  6F88               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3641  0025DE                     l7632:
  3642                           
  3643                           ; BSR set to: 1
  3644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3645  0025DE  0E66               	movlw	102
  3646  0025E0  1986               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3647  0025E2  A4D8               	btfss	status,2,c
  3648  0025E4  D040               	goto	l7644
  3649                           
  3650                           ; BSR set to: 1
  3651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3652  0025E6  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3653  0025EA  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3654  0025EE  CFDE FFF6          	movff	postinc2,tblptrl
  3655  0025F2  CFDD FFF7          	movff	postdec2,tblptrh
  3656  0025F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3657  0025F6  6AF8               	clrf	tblptru,c
  3658  0025F8                     	endif
  3659  0025F8                     	if	0	;tblptru may be non-zero
  3660  0025F8                     	endif
  3661  0025F8  0008               	tblrd		*
  3662  0025FA  CFF5 F185          	movff	tablat,vfpfcnvrt@c
  3663                           
  3664                           ; BSR set to: 1
  3665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3666  0025FE  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3667  002602  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3668  002606  2ADE               	incf	postinc2,f,c
  3669  002608  0E00               	movlw	0
  3670  00260A  22DD               	addwfc	postdec2,f,c
  3671                           
  3672                           ; BSR set to: 1
  3673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3674  00260C  C175  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3675  002610  C176  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3676  002614  CFDF F177          	movff	indf2,??_vfpfcnvrt
  3677  002618  0E04               	movlw	4
  3678  00261A  26DE               	addwf	postinc2,f,c
  3679  00261C  CFDF F178          	movff	indf2,??_vfpfcnvrt+1
  3680  002620  0E00               	movlw	0
  3681  002622  22DD               	addwfc	postdec2,f,c
  3682  002624  C177  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3683  002628  C178  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3684  00262C  CFDE F181          	movff	postinc2,vfpfcnvrt@f
  3685  002630  CFDE F182          	movff	postinc2,vfpfcnvrt@f+1
  3686  002634  CFDE F183          	movff	postinc2,vfpfcnvrt@f+2
  3687  002638  CFDE F184          	movff	postinc2,vfpfcnvrt@f+3
  3688  00263C                     l7640:
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3692  00263C  C171  F12D         	movff	vfpfcnvrt@fp,efgtoa@fp
  3693  002640  C172  F12E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3694  002644  C181  F12F         	movff	vfpfcnvrt@f,efgtoa@f
  3695  002648  C182  F130         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3696  00264C  C183  F131         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3697  002650  C184  F132         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3698  002654  C185  F133         	movff	vfpfcnvrt@c,efgtoa@c
  3699  002658  EC44  F00D         	call	_efgtoa	;wreg free
  3700  00265C  C12D  F171         	movff	?_efgtoa,?_vfpfcnvrt
  3701  002660  C12E  F172         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3702  002664  0012               	return	
  3703  002666                     l7644:
  3704                           
  3705                           ; BSR set to: 1
  3706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3707  002666  0E86               	movlw	low vfpfcnvrt@ct
  3708  002668  6F00               	movwf	strncmp@_l& (0+255),b
  3709  00266A  0E01               	movlw	high vfpfcnvrt@ct
  3710  00266C  6F01               	movwf	(strncmp@_l+1)& (0+255),b
  3711  00266E  0EEF               	movlw	low STR_24
  3712  002670  6F02               	movwf	strncmp@_r& (0+255),b
  3713  002672  0E10               	movlw	high STR_24
  3714  002674  6F03               	movwf	(strncmp@_r+1)& (0+255),b
  3715  002676  0E00               	movlw	0
  3716  002678  6F05               	movwf	(strncmp@n+1)& (0+255),b
  3717  00267A  0E02               	movlw	2
  3718  00267C  6F04               	movwf	strncmp@n& (0+255),b
  3719  00267E  EC9F  F02C         	call	_strncmp	;wreg free
  3720  002682  0101               	movlb	1	; () banked
  3721  002684  5100               	movf	?_strncmp& (0+255),w,b
  3722  002686  1101               	iorwf	(?_strncmp+1)& (0+255),w,b
  3723  002688  A4D8               	btfss	status,2,c
  3724  00268A  D057               	goto	l7660
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3728  00268C  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3729  002690  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3730  002694  CFDE F177          	movff	postinc2,??_vfpfcnvrt
  3731  002698  CFDD F178          	movff	postdec2,??_vfpfcnvrt+1
  3732  00269C  0E01               	movlw	1
  3733  00269E  2777               	addwf	??_vfpfcnvrt& (0+255),f,b
  3734  0026A0  0E00               	movlw	0
  3735  0026A2  2378               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3736  0026A4  C177  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3737  0026A8  C178  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3738  0026AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3739  0026AC  6AF8               	clrf	tblptru,c
  3740  0026AE                     	endif
  3741  0026AE                     	if	0	;tblptru may be non-zero
  3742  0026AE                     	endif
  3743  0026AE  0008               	tblrd		*
  3744  0026B0  CFF5 F185          	movff	tablat,vfpfcnvrt@c
  3745  0026B4  0EBF               	movlw	191
  3746  0026B6  6F77               	movwf	??_vfpfcnvrt& (0+255),b
  3747  0026B8  0EFF               	movlw	255
  3748  0026BA  6F78               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3749  0026BC  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3750  0026C0  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3751  0026C4  CFDE FFF6          	movff	postinc2,tblptrl
  3752  0026C8  CFDD FFF7          	movff	postdec2,tblptrh
  3753  0026CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3754  0026CC  6AF8               	clrf	tblptru,c
  3755  0026CE                     	endif
  3756  0026CE                     	if	0	;tblptru may be non-zero
  3757  0026CE                     	endif
  3758  0026CE  0008               	tblrd		*
  3759  0026D0  50F5               	movf	tablat,w,c
  3760  0026D2  6F79               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3761  0026D4  6B7A               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3762  0026D6  5177               	movf	??_vfpfcnvrt& (0+255),w,b
  3763  0026D8  2779               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3764  0026DA  5178               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3765  0026DC  237A               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3766  0026DE  517A               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3767  0026E0  E106               	bnz	u10590
  3768  0026E2  0E1A               	movlw	26
  3769  0026E4  5D79               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3770  0026E6  B0D8               	btfsc	status,0,c
  3771  0026E8  D002               	goto	u10590
  3772  0026EA  0E01               	movlw	1
  3773  0026EC  D001               	goto	u10600
  3774  0026EE                     u10590:
  3775  0026EE  0E00               	movlw	0
  3776  0026F0                     u10600:
  3777  0026F0  6F7F               	movwf	_vfpfcnvrt$1633& (0+255),b
  3778  0026F2  6B80               	clrf	(_vfpfcnvrt$1633+1)& (0+255),b
  3779                           
  3780                           ; BSR set to: 1
  3781  0026F4  517F               	movf	_vfpfcnvrt$1633& (0+255),w,b
  3782  0026F6  1180               	iorwf	(_vfpfcnvrt$1633+1)& (0+255),w,b
  3783                           
  3784                           ; BSR set to: 1
  3785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3786                           
  3787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3788                           
  3789                           ; BSR set to: 1
  3790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3791  0026F8  C175  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3792  0026FC  C176  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3793  002700  CFDF F177          	movff	indf2,??_vfpfcnvrt
  3794  002704  0E04               	movlw	4
  3795  002706  26DE               	addwf	postinc2,f,c
  3796  002708  CFDF F178          	movff	indf2,??_vfpfcnvrt+1
  3797  00270C  0E00               	movlw	0
  3798  00270E  22DD               	addwfc	postdec2,f,c
  3799  002710  C177  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3800  002714  C178  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3801  002718  CFDE F181          	movff	postinc2,vfpfcnvrt@f
  3802  00271C  CFDE F182          	movff	postinc2,vfpfcnvrt@f+1
  3803  002720  CFDE F183          	movff	postinc2,vfpfcnvrt@f+2
  3804  002724  CFDE F184          	movff	postinc2,vfpfcnvrt@f+3
  3805                           
  3806                           ; BSR set to: 1
  3807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3808                           
  3809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  3810  002728  0E02               	movlw	2
  3811  00272A  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3812  00272E  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3813  002732  26DE               	addwf	postinc2,f,c
  3814  002734  0E00               	movlw	0
  3815  002736  22DD               	addwfc	postdec2,f,c
  3816  002738  D781               	goto	l7640
  3817  00273A                     l7660:
  3818                           
  3819                           ; BSR set to: 1
  3820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3821  00273A  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3822  00273E  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3823  002742  CFDE FFF6          	movff	postinc2,tblptrl
  3824  002746  CFDD FFF7          	movff	postdec2,tblptrh
  3825  00274A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3826  00274A  6AF8               	clrf	tblptru,c
  3827  00274C                     	endif
  3828  00274C                     	if	0	;tblptru may be non-zero
  3829  00274C                     	endif
  3830  00274C  0008               	tblrd		*
  3831  00274E  50F5               	movf	tablat,w,c
  3832  002750  0A73               	xorlw	115
  3833  002752  A4D8               	btfss	status,2,c
  3834  002754  D02A               	goto	l7668
  3835                           
  3836                           ; BSR set to: 1
  3837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3838  002756  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3839  00275A  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3840  00275E  2ADE               	incf	postinc2,f,c
  3841  002760  0E00               	movlw	0
  3842  002762  22DD               	addwfc	postdec2,f,c
  3843                           
  3844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3845  002764  C175  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3846  002768  C176  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3847  00276C  CFDF F177          	movff	indf2,??_vfpfcnvrt
  3848  002770  0E02               	movlw	2
  3849  002772  26DE               	addwf	postinc2,f,c
  3850  002774  CFDF F178          	movff	indf2,??_vfpfcnvrt+1
  3851  002778  0E00               	movlw	0
  3852  00277A  22DD               	addwfc	postdec2,f,c
  3853  00277C  C177  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3854  002780  C178  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3855  002784  CFDE F17B          	movff	postinc2,vfpfcnvrt@cp
  3856  002788  CFDD F17C          	movff	postdec2,vfpfcnvrt@cp+1
  3857                           
  3858                           ; BSR set to: 1
  3859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3860  00278C  C171  F10B         	movff	vfpfcnvrt@fp,stoa@fp
  3861  002790  C172  F10C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3862  002794  C17B  F10D         	movff	vfpfcnvrt@cp,stoa@s
  3863  002798  C17C  F10E         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3864  00279C  EC17  F029         	call	_stoa	;wreg free
  3865  0027A0  C10B  F171         	movff	?_stoa,?_vfpfcnvrt
  3866  0027A4  C10C  F172         	movff	?_stoa+1,?_vfpfcnvrt+1
  3867  0027A8  0012               	return	
  3868  0027AA                     l7668:
  3869                           
  3870                           ; BSR set to: 1
  3871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3872  0027AA  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3873  0027AE  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3874  0027B2  CFDE FFF6          	movff	postinc2,tblptrl
  3875  0027B6  CFDD FFF7          	movff	postdec2,tblptrh
  3876  0027BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3877  0027BA  6AF8               	clrf	tblptru,c
  3878  0027BC                     	endif
  3879  0027BC                     	if	0	;tblptru may be non-zero
  3880  0027BC                     	endif
  3881  0027BC  0008               	tblrd		*
  3882  0027BE  50F5               	movf	tablat,w,c
  3883  0027C0  0A25               	xorlw	37
  3884  0027C2  A4D8               	btfss	status,2,c
  3885  0027C4  D017               	goto	l7678
  3886                           
  3887                           ; BSR set to: 1
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3889  0027C6  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3890  0027CA  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3891  0027CE  2ADE               	incf	postinc2,f,c
  3892  0027D0  0E00               	movlw	0
  3893  0027D2  22DD               	addwfc	postdec2,f,c
  3894                           
  3895                           ; BSR set to: 1
  3896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3897  0027D4  0E00               	movlw	0
  3898  0027D6  6F03               	movwf	(fputc@c+1)& (0+255),b
  3899  0027D8  0E25               	movlw	37
  3900  0027DA  6F02               	movwf	fputc@c& (0+255),b
  3901  0027DC  C171  F104         	movff	vfpfcnvrt@fp,fputc@fp
  3902  0027E0  C172  F105         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3903  0027E4  EC9B  F02D         	call	_fputc	;wreg free
  3904  0027E8                     l7674:
  3905                           
  3906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3907  0027E8  0E00               	movlw	0
  3908  0027EA  0101               	movlb	1	; () banked
  3909  0027EC  6F72               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3910  0027EE  0E01               	movlw	1
  3911  0027F0  6F71               	movwf	?_vfpfcnvrt& (0+255),b
  3912  0027F2  0012               	return	
  3913  0027F4                     l7678:
  3914                           
  3915                           ; BSR set to: 1
  3916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3917  0027F4  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3918  0027F8  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3919  0027FC  2ADE               	incf	postinc2,f,c
  3920  0027FE  0E00               	movlw	0
  3921  002800  22DD               	addwfc	postdec2,f,c
  3922                           
  3923                           ; BSR set to: 1
  3924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3925  002802  0E00               	movlw	0
  3926  002804  6F72               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3927  002806  0E00               	movlw	0
  3928  002808  6F71               	movwf	?_vfpfcnvrt& (0+255),b
  3929  00280A  0012               	return	
  3930  00280C                     l7684:
  3931                           
  3932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3933  00280C  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3934  002810  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3935  002814  CFDE FFF6          	movff	postinc2,tblptrl
  3936  002818  CFDD FFF7          	movff	postdec2,tblptrh
  3937  00281C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3938  00281C  6AF8               	clrf	tblptru,c
  3939  00281E                     	endif
  3940  00281E                     	if	0	;tblptru may be non-zero
  3941  00281E                     	endif
  3942  00281E  0008               	tblrd		*
  3943  002820  50F5               	movf	tablat,w,c
  3944  002822  0101               	movlb	1	; () banked
  3945  002824  6F02               	movwf	fputc@c& (0+255),b
  3946  002826  6B03               	clrf	(fputc@c+1)& (0+255),b
  3947  002828  C171  F104         	movff	vfpfcnvrt@fp,fputc@fp
  3948  00282C  C172  F105         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3949  002830  EC9B  F02D         	call	_fputc	;wreg free
  3950                           
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3952  002834  C173  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3953  002838  C174  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3954  00283C  2ADE               	incf	postinc2,f,c
  3955  00283E  0E00               	movlw	0
  3956  002840  22DD               	addwfc	postdec2,f,c
  3957  002842  D7D2               	goto	l7674
  3958  002844                     __end_of_vfpfcnvrt:
  3959                           	opt callstack 0
  3960                           
  3961 ;; *************** function _strncmp *****************
  3962 ;; Defined at:
  3963 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  _l              2    0[BANK1 ] PTR const unsigned char 
  3966 ;;		 -> vfpfcnvrt@ct(3), stringArry(64), 
  3967 ;;  _r              2    2[BANK1 ] PTR const unsigned char 
  3968 ;;		 -> STR_26(3), STR_5(5), STR_2(6), 
  3969 ;;  n               2    4[BANK1 ] unsigned int 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  r               2    9[BANK1 ] PTR const unsigned char 
  3972 ;;		 -> STR_26(3), STR_5(5), STR_2(6), 
  3973 ;;  l               2    7[BANK1 ] PTR const unsigned char 
  3974 ;;		 -> vfpfcnvrt@ct(3), stringArry(64), 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  2    0[BANK1 ] int 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3984 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;Total ram usage:       11 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:   13
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;;		_vfpfcnvrt
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text7
  4000  00593E                     __ptext7:
  4001                           	opt callstack 0
  4002  00593E                     _strncmp:
  4003                           	opt callstack 17
  4004                           
  4005                           ;incstack = 0
  4006  00593E  C100  F107         	movff	strncmp@_l,strncmp@l
  4007  005942  C101  F108         	movff	strncmp@_l+1,strncmp@l+1
  4008  005946  C102  F109         	movff	strncmp@_r,strncmp@r
  4009  00594A  C103  F10A         	movff	strncmp@_r+1,strncmp@r+1
  4010  00594E  0101               	movlb	1	; () banked
  4011  005950  0704               	decf	strncmp@n& (0+255),f,b
  4012  005952  A0D8               	btfss	status,0,c
  4013  005954  0705               	decf	(strncmp@n+1)& (0+255),f,b
  4014  005956  2904               	incf	strncmp@n& (0+255),w,b
  4015  005958  E10F               	bnz	l7180
  4016  00595A  2905               	incf	(strncmp@n+1)& (0+255),w,b
  4017  00595C  A4D8               	btfss	status,2,c
  4018  00595E  D00C               	goto	l7180
  4019                           
  4020                           ; BSR set to: 1
  4021  005960  0E00               	movlw	0
  4022  005962  6F01               	movwf	(?_strncmp+1)& (0+255),b
  4023  005964  0E00               	movlw	0
  4024  005966  6F00               	movwf	?_strncmp& (0+255),b
  4025  005968  0012               	return	
  4026  00596A                     l7178:
  4027                           
  4028                           ; BSR set to: 1
  4029  00596A  4B07               	infsnz	strncmp@l& (0+255),f,b
  4030  00596C  2B08               	incf	(strncmp@l+1)& (0+255),f,b
  4031  00596E  4B09               	infsnz	strncmp@r& (0+255),f,b
  4032  005970  2B0A               	incf	(strncmp@r+1)& (0+255),f,b
  4033  005972  0704               	decf	strncmp@n& (0+255),f,b
  4034  005974  A0D8               	btfss	status,0,c
  4035  005976  0705               	decf	(strncmp@n+1)& (0+255),f,b
  4036  005978                     l7180:
  4037                           
  4038                           ; BSR set to: 1
  4039  005978  C107  FFD9         	movff	strncmp@l,fsr2l
  4040  00597C  C108  FFDA         	movff	strncmp@l+1,fsr2h
  4041  005980  50DF               	movf	indf2,w,c
  4042  005982  B4D8               	btfsc	status,2,c
  4043  005984  D01E               	goto	u9790
  4044                           
  4045                           ; BSR set to: 1
  4046  005986  C109  FFF6         	movff	strncmp@r,tblptrl
  4047  00598A  C10A  FFF7         	movff	strncmp@r+1,tblptrh
  4048  00598E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4049  00598E  6AF8               	clrf	tblptru,c
  4050  005990                     	endif
  4051  005990                     	if	0	;tblptru may be non-zero
  4052  005990                     	endif
  4053  005990  0008               	tblrd		*
  4054  005992  50F5               	movf	tablat,w,c
  4055  005994  0900               	iorlw	0
  4056  005996  B4D8               	btfsc	status,2,c
  4057  005998  D014               	goto	u9790
  4058                           
  4059                           ; BSR set to: 1
  4060  00599A  5104               	movf	strncmp@n& (0+255),w,b
  4061  00599C  1105               	iorwf	(strncmp@n+1)& (0+255),w,b
  4062  00599E  B4D8               	btfsc	status,2,c
  4063  0059A0  D010               	goto	u9790
  4064                           
  4065                           ; BSR set to: 1
  4066  0059A2  C107  FFD9         	movff	strncmp@l,fsr2l
  4067  0059A6  C108  FFDA         	movff	strncmp@l+1,fsr2h
  4068  0059AA  50DF               	movf	indf2,w,c
  4069  0059AC  6F06               	movwf	??_strncmp& (0+255),b
  4070  0059AE  C109  FFF6         	movff	strncmp@r,tblptrl
  4071  0059B2  C10A  FFF7         	movff	strncmp@r+1,tblptrh
  4072  0059B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4073  0059B6  6AF8               	clrf	tblptru,c
  4074  0059B8                     	endif
  4075  0059B8                     	if	0	;tblptru may be non-zero
  4076  0059B8                     	endif
  4077  0059B8  0008               	tblrd		*
  4078  0059BA  50F5               	movf	tablat,w,c
  4079  0059BC  1906               	xorwf	??_strncmp& (0+255),w,b
  4080  0059BE  B4D8               	btfsc	status,2,c
  4081  0059C0  D7D4               	goto	l7178
  4082  0059C2                     u9790:
  4083                           
  4084                           ; BSR set to: 1
  4085  0059C2  C107  FFD9         	movff	strncmp@l,fsr2l
  4086  0059C6  C108  FFDA         	movff	strncmp@l+1,fsr2h
  4087  0059CA  50DF               	movf	indf2,w,c
  4088  0059CC  6F06               	movwf	??_strncmp& (0+255),b
  4089  0059CE  C109  FFF6         	movff	strncmp@r,tblptrl
  4090  0059D2  C10A  FFF7         	movff	strncmp@r+1,tblptrh
  4091  0059D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4092  0059D6  6AF8               	clrf	tblptru,c
  4093  0059D8                     	endif
  4094  0059D8                     	if	0	;tblptru may be non-zero
  4095  0059D8                     	endif
  4096  0059D8  0008               	tblrd		*
  4097  0059DA  50F5               	movf	tablat,w,c
  4098  0059DC  5D06               	subwf	??_strncmp& (0+255),w,b
  4099  0059DE  6F00               	movwf	?_strncmp& (0+255),b
  4100  0059E0  6B01               	clrf	(?_strncmp+1)& (0+255),b
  4101  0059E2  A0D8               	btfss	status,0,c
  4102  0059E4  0701               	decf	(?_strncmp+1)& (0+255),f,b
  4103                           
  4104                           ; BSR set to: 1
  4105  0059E6  0012               	return		;funcret
  4106  0059E8                     __end_of_strncmp:
  4107                           	opt callstack 0
  4108                           
  4109 ;; *************** function _stoa *****************
  4110 ;; Defined at:
  4111 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  fp              2   11[BANK1 ] PTR struct _IO_FILE
  4114 ;;		 -> sprintf@f(6), NULL(0), 
  4115 ;;  s               2   13[BANK1 ] PTR unsigned char 
  4116 ;;		 -> ?_printf(2), ?_sprintf(2), dataLogRead@readOutT(5), readData(4), 
  4117 ;;		 -> tempRead(2), adafruit@rh_code(4), stringArry(64), 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  nuls            7   16[BANK1 ] unsigned char [7]
  4120 ;;  l               2   31[BANK1 ] int 
  4121 ;;  p               2   29[BANK1 ] int 
  4122 ;;  cp              2   27[BANK1 ] PTR unsigned char 
  4123 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dataLogRead@readOutT(5), 
  4124 ;;		 -> readData(4), tempRead(2), adafruit@rh_code(4), stringArry(64), 
  4125 ;;  w               2   25[BANK1 ] int 
  4126 ;;  i               2   23[BANK1 ] int 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  2   11[BANK1 ] int 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4136 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;Total ram usage:       22 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:   16
  4143 ;; This function calls:
  4144 ;;		_fputc
  4145 ;;		_strlen
  4146 ;; This function is called by:
  4147 ;;		_vfpfcnvrt
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text8
  4152  00522E                     __ptext8:
  4153                           	opt callstack 0
  4154  00522E                     _stoa:
  4155                           	opt callstack 11
  4156                           
  4157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  4158                           
  4159                           ; BSR set to: 1
  4160                           ;incstack = 0
  4161  00522E  EE21  F0D9         	lfsr	2,stoa@F1153
  4162  005232  EE11  F010         	lfsr	1,stoa@nuls
  4163  005236  0E06               	movlw	6
  4164  005238                     u10321:
  4165  005238  CFDB FFE3          	movff	plusw2,plusw1
  4166  00523C  06E8               	decf	wreg,f,c
  4167  00523E  E2FC               	bc	u10321
  4168                           
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  4170  005240  C10D  F11B         	movff	stoa@s,stoa@cp
  4171  005244  C10E  F11C         	movff	stoa@s+1,stoa@cp+1
  4172                           
  4173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  4174  005248  0101               	movlb	1	; () banked
  4175  00524A  511B               	movf	stoa@cp& (0+255),w,b
  4176  00524C  111C               	iorwf	(stoa@cp+1)& (0+255),w,b
  4177  00524E  A4D8               	btfss	status,2,c
  4178  005250  D004               	goto	l7498
  4179                           
  4180                           ; BSR set to: 1
  4181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  4182  005252  0E10               	movlw	low stoa@nuls
  4183  005254  6F1B               	movwf	stoa@cp& (0+255),b
  4184  005256  0E01               	movlw	high stoa@nuls
  4185  005258  6F1C               	movwf	(stoa@cp+1)& (0+255),b
  4186  00525A                     l7498:
  4187                           
  4188                           ; BSR set to: 1
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  4190  00525A  C11B  F100         	movff	stoa@cp,strlen@s
  4191  00525E  C11C  F101         	movff	stoa@cp+1,strlen@s+1
  4192  005262  ECEE  F034         	call	_strlen	;wreg free
  4193  005266  C100  F11F         	movff	?_strlen,stoa@l
  4194  00526A  C101  F120         	movff	?_strlen+1,stoa@l+1
  4195                           
  4196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  4197  00526E  C1A9  F11D         	movff	_prec,stoa@p
  4198  005272  C1AA  F11E         	movff	_prec+1,stoa@p+1
  4199                           
  4200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  4201  005276  0101               	movlb	1	; () banked
  4202  005278  BF1E               	btfsc	(stoa@p+1)& (0+255),7,b
  4203  00527A  D00E               	goto	l779
  4204                           
  4205                           ; BSR set to: 1
  4206  00527C  511F               	movf	stoa@l& (0+255),w,b
  4207  00527E  5D1D               	subwf	stoa@p& (0+255),w,b
  4208  005280  511E               	movf	(stoa@p+1)& (0+255),w,b
  4209  005282  0A80               	xorlw	128
  4210  005284  6F0F               	movwf	??_stoa& (0+255),b
  4211  005286  5120               	movf	(stoa@l+1)& (0+255),w,b
  4212  005288  0A80               	xorlw	128
  4213  00528A  590F               	subwfb	??_stoa& (0+255),w,b
  4214  00528C  B0D8               	btfsc	status,0,c
  4215  00528E  D004               	goto	l779
  4216                           
  4217                           ; BSR set to: 1
  4218  005290  C11D  F11F         	movff	stoa@p,stoa@l
  4219  005294  C11E  F120         	movff	stoa@p+1,stoa@l+1
  4220  005298                     l779:
  4221                           
  4222                           ; BSR set to: 1
  4223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  4224  005298  C11F  F11D         	movff	stoa@l,stoa@p
  4225  00529C  C120  F11E         	movff	stoa@l+1,stoa@p+1
  4226                           
  4227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  4228  0052A0  C1A7  F119         	movff	_width,stoa@w
  4229  0052A4  C1A8  F11A         	movff	_width+1,stoa@w+1
  4230                           
  4231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  4232  0052A8  A1AB               	btfss	_flags& (0+255),0,b
  4233  0052AA  D00E               	goto	l7512
  4234  0052AC  D017               	goto	u10370
  4235  0052AE                     l7508:
  4236                           
  4237                           ; BSR set to: 1
  4238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  4239  0052AE  0E00               	movlw	0
  4240  0052B0  6F03               	movwf	(fputc@c+1)& (0+255),b
  4241  0052B2  0E20               	movlw	32
  4242  0052B4  6F02               	movwf	fputc@c& (0+255),b
  4243  0052B6  C10B  F104         	movff	stoa@fp,fputc@fp
  4244  0052BA  C10C  F105         	movff	stoa@fp+1,fputc@fp+1
  4245  0052BE  EC9B  F02D         	call	_fputc	;wreg free
  4246                           
  4247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  4248  0052C2  0101               	movlb	1	; () banked
  4249  0052C4  4B1F               	infsnz	stoa@l& (0+255),f,b
  4250  0052C6  2B20               	incf	(stoa@l+1)& (0+255),f,b
  4251  0052C8                     l7512:
  4252                           
  4253                           ; BSR set to: 1
  4254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  4255  0052C8  5119               	movf	stoa@w& (0+255),w,b
  4256  0052CA  5D1F               	subwf	stoa@l& (0+255),w,b
  4257  0052CC  5120               	movf	(stoa@l+1)& (0+255),w,b
  4258  0052CE  0A80               	xorlw	128
  4259  0052D0  6F0F               	movwf	??_stoa& (0+255),b
  4260  0052D2  511A               	movf	(stoa@w+1)& (0+255),w,b
  4261  0052D4  0A80               	xorlw	128
  4262  0052D6  590F               	subwfb	??_stoa& (0+255),w,b
  4263  0052D8  A0D8               	btfss	status,0,c
  4264  0052DA  D7E9               	goto	l7508
  4265  0052DC                     u10370:
  4266                           
  4267                           ; BSR set to: 1
  4268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  4269  0052DC  0E00               	movlw	0
  4270  0052DE  6F18               	movwf	(stoa@i+1)& (0+255),b
  4271  0052E0  0E00               	movlw	0
  4272  0052E2  6F17               	movwf	stoa@i& (0+255),b
  4273                           
  4274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4275  0052E4  D014               	goto	l7522
  4276  0052E6                     l7516:
  4277                           
  4278                           ; BSR set to: 1
  4279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  4280  0052E6  C11B  FFD9         	movff	stoa@cp,fsr2l
  4281  0052EA  C11C  FFDA         	movff	stoa@cp+1,fsr2h
  4282  0052EE  50DF               	movf	indf2,w,c
  4283  0052F0  6F0F               	movwf	??_stoa& (0+255),b
  4284  0052F2  510F               	movf	??_stoa& (0+255),w,b
  4285  0052F4  6F02               	movwf	fputc@c& (0+255),b
  4286  0052F6  6B03               	clrf	(fputc@c+1)& (0+255),b
  4287  0052F8  C10B  F104         	movff	stoa@fp,fputc@fp
  4288  0052FC  C10C  F105         	movff	stoa@fp+1,fputc@fp+1
  4289  005300  EC9B  F02D         	call	_fputc	;wreg free
  4290                           
  4291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  4292  005304  0101               	movlb	1	; () banked
  4293  005306  4B1B               	infsnz	stoa@cp& (0+255),f,b
  4294  005308  2B1C               	incf	(stoa@cp+1)& (0+255),f,b
  4295                           
  4296                           ; BSR set to: 1
  4297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  4298  00530A  4B17               	infsnz	stoa@i& (0+255),f,b
  4299  00530C  2B18               	incf	(stoa@i+1)& (0+255),f,b
  4300  00530E                     l7522:
  4301                           
  4302                           ; BSR set to: 1
  4303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  4304  00530E  511D               	movf	stoa@p& (0+255),w,b
  4305  005310  5D17               	subwf	stoa@i& (0+255),w,b
  4306  005312  5118               	movf	(stoa@i+1)& (0+255),w,b
  4307  005314  0A80               	xorlw	128
  4308  005316  6F0F               	movwf	??_stoa& (0+255),b
  4309  005318  511E               	movf	(stoa@p+1)& (0+255),w,b
  4310  00531A  0A80               	xorlw	128
  4311  00531C  590F               	subwfb	??_stoa& (0+255),w,b
  4312  00531E  A0D8               	btfss	status,0,c
  4313  005320  D7E2               	goto	l7516
  4314                           
  4315                           ; BSR set to: 1
  4316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  4317  005322  B1AB               	btfsc	_flags& (0+255),0,b
  4318  005324  D00E               	goto	l7530
  4319  005326  D017               	goto	u10400
  4320  005328                     l7526:
  4321                           
  4322                           ; BSR set to: 1
  4323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  4324  005328  0E00               	movlw	0
  4325  00532A  6F03               	movwf	(fputc@c+1)& (0+255),b
  4326  00532C  0E20               	movlw	32
  4327  00532E  6F02               	movwf	fputc@c& (0+255),b
  4328  005330  C10B  F104         	movff	stoa@fp,fputc@fp
  4329  005334  C10C  F105         	movff	stoa@fp+1,fputc@fp+1
  4330  005338  EC9B  F02D         	call	_fputc	;wreg free
  4331                           
  4332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  4333  00533C  0101               	movlb	1	; () banked
  4334  00533E  4B1F               	infsnz	stoa@l& (0+255),f,b
  4335  005340  2B20               	incf	(stoa@l+1)& (0+255),f,b
  4336  005342                     l7530:
  4337                           
  4338                           ; BSR set to: 1
  4339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  4340  005342  5119               	movf	stoa@w& (0+255),w,b
  4341  005344  5D1F               	subwf	stoa@l& (0+255),w,b
  4342  005346  5120               	movf	(stoa@l+1)& (0+255),w,b
  4343  005348  0A80               	xorlw	128
  4344  00534A  6F0F               	movwf	??_stoa& (0+255),b
  4345  00534C  511A               	movf	(stoa@w+1)& (0+255),w,b
  4346  00534E  0A80               	xorlw	128
  4347  005350  590F               	subwfb	??_stoa& (0+255),w,b
  4348  005352  A0D8               	btfss	status,0,c
  4349  005354  D7E9               	goto	l7526
  4350  005356                     u10400:
  4351                           
  4352                           ; BSR set to: 1
  4353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  4354                           
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  4356  005356  C11F  F10B         	movff	stoa@l,?_stoa
  4357  00535A  C120  F10C         	movff	stoa@l+1,?_stoa+1
  4358                           
  4359                           ; BSR set to: 1
  4360  00535E  0012               	return		;funcret
  4361  005360                     __end_of_stoa:
  4362                           	opt callstack 0
  4363                           
  4364 ;; *************** function _efgtoa *****************
  4365 ;; Defined at:
  4366 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  fp              2   45[BANK1 ] PTR struct _IO_FILE
  4369 ;;		 -> sprintf@f(6), NULL(0), 
  4370 ;;  f               4   47[BANK1 ] PTR struct _IO_FILE
  4371 ;;  c               1   51[BANK1 ] unsigned char 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  u               4  109[BANK1 ] unsigned char 
  4374 ;;  g               4  101[BANK1 ] unsigned char 
  4375 ;;  l               4   95[BANK1 ] unsigned char 
  4376 ;;  h               4   91[BANK1 ] unsigned char 
  4377 ;;  ou              4   57[BANK1 ] unsigned char 
  4378 ;;  n               2  107[BANK1 ] int 
  4379 ;;  e               2  105[BANK1 ] int 
  4380 ;;  i               2   99[BANK1 ] int 
  4381 ;;  w               2   88[BANK1 ] int 
  4382 ;;  p               2   85[BANK1 ] int 
  4383 ;;  sign            2   83[BANK1 ] int 
  4384 ;;  d               2   81[BANK1 ] int 
  4385 ;;  ne              2   79[BANK1 ] int 
  4386 ;;  m               2   77[BANK1 ] int 
  4387 ;;  pp              2   75[BANK1 ] int 
  4388 ;;  t               2   73[BANK1 ] int 
  4389 ;;  mode            1   90[BANK1 ] unsigned char 
  4390 ;;  nmode           1   87[BANK1 ] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  2   45[BANK1 ] int 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4400 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Totals:         0       0      68       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;Total ram usage:       68 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:   18
  4407 ;; This function calls:
  4408 ;;		___awdiv
  4409 ;;		___awmod
  4410 ;;		___fladd
  4411 ;;		___fldiv
  4412 ;;		___fleq
  4413 ;;		___flge
  4414 ;;		___flmul
  4415 ;;		___flneg
  4416 ;;		___flsub
  4417 ;;		___fltol
  4418 ;;		___fpclassifyf
  4419 ;;		_floorf
  4420 ;;		_isupper
  4421 ;;		_pad
  4422 ;;		_strcpy
  4423 ;;		_tolower
  4424 ;; This function is called by:
  4425 ;;		_vfpfcnvrt
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text9
  4430  001A88                     __ptext9:
  4431                           	opt callstack 0
  4432  001A88                     _efgtoa:
  4433                           	opt callstack 9
  4434                           
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  4436                           
  4437                           ; BSR set to: 1
  4438                           ;incstack = 0
  4439  001A88  0E00               	movlw	0
  4440  001A8A  0101               	movlb	1	; () banked
  4441  001A8C  6F54               	movwf	(efgtoa@sign+1)& (0+255),b
  4442  001A8E  0E00               	movlw	0
  4443  001A90  6F53               	movwf	efgtoa@sign& (0+255),b
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  4447  001A92  C12F  F165         	movff	efgtoa@f,efgtoa@g
  4448  001A96  C130  F166         	movff	efgtoa@f+1,efgtoa@g+1
  4449  001A9A  C131  F167         	movff	efgtoa@f+2,efgtoa@g+2
  4450  001A9E  C132  F168         	movff	efgtoa@f+3,efgtoa@g+3
  4451                           
  4452                           ; BSR set to: 1
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  4454  001AA2  AF68               	btfss	(efgtoa@g+3)& (0+255),7,b
  4455  001AA4  D016               	goto	l7202
  4456                           
  4457                           ; BSR set to: 1
  4458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  4459  001AA6  0E00               	movlw	0
  4460  001AA8  6F54               	movwf	(efgtoa@sign+1)& (0+255),b
  4461  001AAA  0E01               	movlw	1
  4462  001AAC  6F53               	movwf	efgtoa@sign& (0+255),b
  4463                           
  4464                           ; BSR set to: 1
  4465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  4466  001AAE  C165  F100         	movff	efgtoa@g,___flneg@f1
  4467  001AB2  C166  F101         	movff	efgtoa@g+1,___flneg@f1+1
  4468  001AB6  C167  F102         	movff	efgtoa@g+2,___flneg@f1+2
  4469  001ABA  C168  F103         	movff	efgtoa@g+3,___flneg@f1+3
  4470  001ABE  ECA6  F034         	call	___flneg	;wreg free
  4471  001AC2  C100  F165         	movff	?___flneg,efgtoa@g
  4472  001AC6  C101  F166         	movff	?___flneg+1,efgtoa@g+1
  4473  001ACA  C102  F167         	movff	?___flneg+2,efgtoa@g+2
  4474  001ACE  C103  F168         	movff	?___flneg+3,efgtoa@g+3
  4475  001AD2                     l7202:
  4476                           
  4477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  4478  001AD2  0E00               	movlw	0
  4479  001AD4  0101               	movlb	1	; () banked
  4480  001AD6  6F6C               	movwf	(efgtoa@n+1)& (0+255),b
  4481  001AD8  0E00               	movlw	0
  4482  001ADA  6F6B               	movwf	efgtoa@n& (0+255),b
  4483                           
  4484                           ; BSR set to: 1
  4485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  4486  001ADC  C1A7  F158         	movff	_width,efgtoa@w
  4487  001AE0  C1A8  F159         	movff	_width+1,efgtoa@w+1
  4488                           
  4489                           ; BSR set to: 1
  4490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  4491  001AE4  5153               	movf	efgtoa@sign& (0+255),w,b
  4492  001AE6  1154               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4493  001AE8  A4D8               	btfss	status,2,c
  4494  001AEA  D002               	goto	u9820
  4495                           
  4496                           ; BSR set to: 1
  4497  001AEC  A5AB               	btfss	_flags& (0+255),2,b
  4498  001AEE  D013               	goto	l7222
  4499  001AF0                     u9820:
  4500                           
  4501                           ; BSR set to: 1
  4502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  4503  001AF0  5153               	movf	efgtoa@sign& (0+255),w,b
  4504  001AF2  1154               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4505  001AF4  A4D8               	btfss	status,2,c
  4506  001AF6  D004               	goto	l7214
  4507                           
  4508                           ; BSR set to: 1
  4509  001AF8  0E00               	movlw	0
  4510  001AFA  6F3E               	movwf	(_efgtoa$1592+1)& (0+255),b
  4511  001AFC  0E2B               	movlw	43
  4512  001AFE  D003               	goto	L1
  4513  001B00                     l7214:
  4514                           
  4515                           ; BSR set to: 1
  4516  001B00  0E00               	movlw	0
  4517  001B02  6F3E               	movwf	(_efgtoa$1592+1)& (0+255),b
  4518  001B04  0E2D               	movlw	45
  4519  001B06                     L1:
  4520  001B06  6F3D               	movwf	_efgtoa$1592& (0+255),b
  4521                           
  4522                           ; BSR set to: 1
  4523  001B08  C13D  F280         	movff	_efgtoa$1592,_dbuf
  4524                           
  4525                           ; BSR set to: 1
  4526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4527  001B0C  4B6B               	infsnz	efgtoa@n& (0+255),f,b
  4528  001B0E  2B6C               	incf	(efgtoa@n+1)& (0+255),f,b
  4529                           
  4530                           ; BSR set to: 1
  4531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4532  001B10  0758               	decf	efgtoa@w& (0+255),f,b
  4533  001B12  A0D8               	btfss	status,0,c
  4534  001B14  0759               	decf	(efgtoa@w+1)& (0+255),f,b
  4535  001B16                     l7222:
  4536                           
  4537                           ; BSR set to: 1
  4538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4539  001B16  C165  F100         	movff	efgtoa@g,___fpclassifyf@x
  4540  001B1A  C166  F101         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4541  001B1E  C167  F102         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4542  001B22  C168  F103         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4543  001B26  EC17  F02B         	call	___fpclassifyf	;wreg free
  4544  001B2A  0101               	movlb	1	; () banked
  4545  001B2C  0500               	decf	?___fpclassifyf& (0+255),w,b
  4546  001B2E  1101               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  4547  001B30  A4D8               	btfss	status,2,c
  4548  001B32  D04C               	goto	l7240
  4549                           
  4550                           ; BSR set to: 1
  4551  001B34  0EBF               	movlw	191
  4552  001B36  6F34               	movwf	??_efgtoa& (0+255),b
  4553  001B38  0EFF               	movlw	255
  4554  001B3A  6F35               	movwf	(??_efgtoa+1)& (0+255),b
  4555  001B3C  5133               	movf	efgtoa@c& (0+255),w,b
  4556  001B3E  6F36               	movwf	(??_efgtoa+2)& (0+255),b
  4557  001B40  6B37               	clrf	(??_efgtoa+3)& (0+255),b
  4558  001B42  5134               	movf	??_efgtoa& (0+255),w,b
  4559  001B44  2736               	addwf	(??_efgtoa+2)& (0+255),f,b
  4560  001B46  5135               	movf	(??_efgtoa+1)& (0+255),w,b
  4561  001B48  2337               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4562  001B4A  5137               	movf	(??_efgtoa+3)& (0+255),w,b
  4563  001B4C  E106               	bnz	u9850
  4564  001B4E  0E1A               	movlw	26
  4565  001B50  5D36               	subwf	(??_efgtoa+2)& (0+255),w,b
  4566  001B52  B0D8               	btfsc	status,0,c
  4567  001B54  D002               	goto	u9850
  4568  001B56  0E01               	movlw	1
  4569  001B58  D001               	goto	u9860
  4570  001B5A                     u9850:
  4571  001B5A  0E00               	movlw	0
  4572  001B5C                     u9860:
  4573  001B5C  6F3F               	movwf	_efgtoa$1593& (0+255),b
  4574  001B5E  6B40               	clrf	(_efgtoa$1593+1)& (0+255),b
  4575                           
  4576                           ; BSR set to: 1
  4577  001B60  513F               	movf	_efgtoa$1593& (0+255),w,b
  4578  001B62  1140               	iorwf	(_efgtoa$1593+1)& (0+255),w,b
  4579  001B64  B4D8               	btfsc	status,2,c
  4580  001B66  D00D               	goto	l7232
  4581                           
  4582                           ; BSR set to: 1
  4583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4584  001B68  0E80               	movlw	low _dbuf
  4585  001B6A  256B               	addwf	efgtoa@n& (0+255),w,b
  4586  001B6C  6F00               	movwf	strcpy@dest& (0+255),b
  4587  001B6E  0E02               	movlw	high _dbuf
  4588  001B70  216C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4589  001B72  6F01               	movwf	(strcpy@dest+1)& (0+255),b
  4590  001B74  0EDF               	movlw	low STR_16
  4591  001B76  6F02               	movwf	strcpy@src& (0+255),b
  4592  001B78  0E10               	movlw	high STR_16
  4593  001B7A  6F03               	movwf	(strcpy@src+1)& (0+255),b
  4594  001B7C  EC57  F032         	call	_strcpy	;wreg free
  4595                           
  4596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4597  001B80  D00C               	goto	l7234
  4598  001B82                     l7232:
  4599                           
  4600                           ; BSR set to: 1
  4601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4602  001B82  0E80               	movlw	low _dbuf
  4603  001B84  256B               	addwf	efgtoa@n& (0+255),w,b
  4604  001B86  6F00               	movwf	strcpy@dest& (0+255),b
  4605  001B88  0E02               	movlw	high _dbuf
  4606  001B8A  216C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4607  001B8C  6F01               	movwf	(strcpy@dest+1)& (0+255),b
  4608  001B8E  0EE7               	movlw	low STR_17
  4609  001B90  6F02               	movwf	strcpy@src& (0+255),b
  4610  001B92  0E10               	movlw	high STR_17
  4611  001B94  6F03               	movwf	(strcpy@src+1)& (0+255),b
  4612  001B96  EC57  F032         	call	_strcpy	;wreg free
  4613  001B9A                     l7234:
  4614                           
  4615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4616  001B9A  0101               	movlb	1	; () banked
  4617  001B9C  0EFD               	movlw	253
  4618  001B9E  2758               	addwf	efgtoa@w& (0+255),f,b
  4619  001BA0  0EFF               	movlw	255
  4620  001BA2  2359               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4621  001BA4                     l7236:
  4622                           
  4623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4624  001BA4  C12D  F112         	movff	efgtoa@fp,pad@fp
  4625  001BA8  C12E  F113         	movff	efgtoa@fp+1,pad@fp+1
  4626  001BAC  0E80               	movlw	low _dbuf
  4627  001BAE  0101               	movlb	1	; () banked
  4628  001BB0  6F14               	movwf	pad@buf& (0+255),b
  4629  001BB2  0E02               	movlw	high _dbuf
  4630  001BB4  6F15               	movwf	(pad@buf+1)& (0+255),b
  4631  001BB6  C158  F116         	movff	efgtoa@w,pad@p
  4632  001BBA  C159  F117         	movff	efgtoa@w+1,pad@p+1
  4633  001BBE  EC3C  F02E         	call	_pad	;wreg free
  4634  001BC2  C112  F12D         	movff	?_pad,?_efgtoa
  4635  001BC6  C113  F12E         	movff	?_pad+1,?_efgtoa+1
  4636  001BCA  0012               	return	
  4637  001BCC                     l7240:
  4638                           
  4639                           ; BSR set to: 1
  4640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4641  001BCC  C165  F100         	movff	efgtoa@g,___fpclassifyf@x
  4642  001BD0  C166  F101         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4643  001BD4  C167  F102         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4644  001BD8  C168  F103         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4645  001BDC  EC17  F02B         	call	___fpclassifyf	;wreg free
  4646  001BE0  0101               	movlb	1	; () banked
  4647  001BE2  5100               	movf	?___fpclassifyf& (0+255),w,b
  4648  001BE4  1101               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  4649  001BE6  A4D8               	btfss	status,2,c
  4650  001BE8  D034               	goto	l7258
  4651                           
  4652                           ; BSR set to: 1
  4653  001BEA  0EBF               	movlw	191
  4654  001BEC  6F34               	movwf	??_efgtoa& (0+255),b
  4655  001BEE  0EFF               	movlw	255
  4656  001BF0  6F35               	movwf	(??_efgtoa+1)& (0+255),b
  4657  001BF2  5133               	movf	efgtoa@c& (0+255),w,b
  4658  001BF4  6F36               	movwf	(??_efgtoa+2)& (0+255),b
  4659  001BF6  6B37               	clrf	(??_efgtoa+3)& (0+255),b
  4660  001BF8  5134               	movf	??_efgtoa& (0+255),w,b
  4661  001BFA  2736               	addwf	(??_efgtoa+2)& (0+255),f,b
  4662  001BFC  5135               	movf	(??_efgtoa+1)& (0+255),w,b
  4663  001BFE  2337               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4664  001C00  5137               	movf	(??_efgtoa+3)& (0+255),w,b
  4665  001C02  E106               	bnz	u9890
  4666  001C04  0E1A               	movlw	26
  4667  001C06  5D36               	subwf	(??_efgtoa+2)& (0+255),w,b
  4668  001C08  B0D8               	btfsc	status,0,c
  4669  001C0A  D002               	goto	u9890
  4670  001C0C  0E01               	movlw	1
  4671  001C0E  D001               	goto	u9900
  4672  001C10                     u9890:
  4673  001C10  0E00               	movlw	0
  4674  001C12                     u9900:
  4675  001C12  6F41               	movwf	_efgtoa$1598& (0+255),b
  4676  001C14  6B42               	clrf	(_efgtoa$1598+1)& (0+255),b
  4677                           
  4678                           ; BSR set to: 1
  4679  001C16  5141               	movf	_efgtoa$1598& (0+255),w,b
  4680  001C18  1142               	iorwf	(_efgtoa$1598+1)& (0+255),w,b
  4681  001C1A  B4D8               	btfsc	status,2,c
  4682  001C1C  D00D               	goto	l7250
  4683                           
  4684                           ; BSR set to: 1
  4685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4686  001C1E  0E80               	movlw	low _dbuf
  4687  001C20  256B               	addwf	efgtoa@n& (0+255),w,b
  4688  001C22  6F00               	movwf	strcpy@dest& (0+255),b
  4689  001C24  0E02               	movlw	high _dbuf
  4690  001C26  216C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4691  001C28  6F01               	movwf	(strcpy@dest+1)& (0+255),b
  4692  001C2A  0EE3               	movlw	low STR_20
  4693  001C2C  6F02               	movwf	strcpy@src& (0+255),b
  4694  001C2E  0E10               	movlw	high STR_20
  4695  001C30  6F03               	movwf	(strcpy@src+1)& (0+255),b
  4696  001C32  EC57  F032         	call	_strcpy	;wreg free
  4697                           
  4698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4699  001C36  D7B1               	goto	l7234
  4700  001C38                     l7250:
  4701                           
  4702                           ; BSR set to: 1
  4703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4704  001C38  0E80               	movlw	low _dbuf
  4705  001C3A  256B               	addwf	efgtoa@n& (0+255),w,b
  4706  001C3C  6F00               	movwf	strcpy@dest& (0+255),b
  4707  001C3E  0E02               	movlw	high _dbuf
  4708  001C40  216C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4709  001C42  6F01               	movwf	(strcpy@dest+1)& (0+255),b
  4710  001C44  0EEB               	movlw	low STR_21
  4711  001C46  6F02               	movwf	strcpy@src& (0+255),b
  4712  001C48  0E10               	movlw	high STR_21
  4713  001C4A  6F03               	movwf	(strcpy@src+1)& (0+255),b
  4714  001C4C  EC57  F032         	call	_strcpy	;wreg free
  4715  001C50  D7A4               	goto	l7234
  4716  001C52                     l7258:
  4717                           
  4718                           ; BSR set to: 1
  4719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4720  001C52  0E00               	movlw	0
  4721  001C54  6F6D               	movwf	efgtoa@u& (0+255),b
  4722  001C56  0E00               	movlw	0
  4723  001C58  6F6E               	movwf	(efgtoa@u+1)& (0+255),b
  4724  001C5A  0E80               	movlw	128
  4725  001C5C  6F6F               	movwf	(efgtoa@u+2)& (0+255),b
  4726  001C5E  0E3F               	movlw	63
  4727  001C60  6F70               	movwf	(efgtoa@u+3)& (0+255),b
  4728                           
  4729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4730  001C62  0E00               	movlw	0
  4731  001C64  6F6A               	movwf	(efgtoa@e+1)& (0+255),b
  4732  001C66  0E00               	movlw	0
  4733  001C68  6F69               	movwf	efgtoa@e& (0+255),b
  4734                           
  4735                           ; BSR set to: 1
  4736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4737  001C6A  C165  F100         	movff	efgtoa@g,___fleq@ff1
  4738  001C6E  C166  F101         	movff	efgtoa@g+1,___fleq@ff1+1
  4739  001C72  C167  F102         	movff	efgtoa@g+2,___fleq@ff1+2
  4740  001C76  C168  F103         	movff	efgtoa@g+3,___fleq@ff1+3
  4741  001C7A  0E00               	movlw	0
  4742  001C7C  6F04               	movwf	___fleq@ff2& (0+255),b
  4743  001C7E  0E00               	movlw	0
  4744  001C80  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
  4745  001C82  0E00               	movlw	0
  4746  001C84  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
  4747  001C86  0E00               	movlw	0
  4748  001C88  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
  4749  001C8A  ECBB  F02F         	call	___fleq	;wreg free
  4750  001C8E  0101               	movlb	1	; () banked
  4751  001C90  A0D8               	btfss	status,0,c
  4752  001C92  D01E               	goto	l7268
  4753  001C94  D078               	goto	u9940
  4754  001C96                     l7264:
  4755                           
  4756                           ; BSR set to: 1
  4757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4758  001C96  C16D  F100         	movff	efgtoa@u,___flmul@b
  4759  001C9A  C16E  F101         	movff	efgtoa@u+1,___flmul@b+1
  4760  001C9E  C16F  F102         	movff	efgtoa@u+2,___flmul@b+2
  4761  001CA2  C170  F103         	movff	efgtoa@u+3,___flmul@b+3
  4762  001CA6  0E00               	movlw	0
  4763  001CA8  6F04               	movwf	___flmul@a& (0+255),b
  4764  001CAA  0E00               	movlw	0
  4765  001CAC  6F05               	movwf	(___flmul@a+1)& (0+255),b
  4766  001CAE  0E20               	movlw	32
  4767  001CB0  6F06               	movwf	(___flmul@a+2)& (0+255),b
  4768  001CB2  0E41               	movlw	65
  4769  001CB4  6F07               	movwf	(___flmul@a+3)& (0+255),b
  4770  001CB6  ECFF  F017         	call	___flmul	;wreg free
  4771  001CBA  C100  F16D         	movff	?___flmul,efgtoa@u
  4772  001CBE  C101  F16E         	movff	?___flmul+1,efgtoa@u+1
  4773  001CC2  C102  F16F         	movff	?___flmul+2,efgtoa@u+2
  4774  001CC6  C103  F170         	movff	?___flmul+3,efgtoa@u+3
  4775                           
  4776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4777  001CCA  0101               	movlb	1	; () banked
  4778  001CCC  4B69               	infsnz	efgtoa@e& (0+255),f,b
  4779  001CCE  2B6A               	incf	(efgtoa@e+1)& (0+255),f,b
  4780  001CD0                     l7268:
  4781                           
  4782                           ; BSR set to: 1
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4784  001CD0  C165  F119         	movff	efgtoa@g,___flge@ff1
  4785  001CD4  C166  F11A         	movff	efgtoa@g+1,___flge@ff1+1
  4786  001CD8  C167  F11B         	movff	efgtoa@g+2,___flge@ff1+2
  4787  001CDC  C168  F11C         	movff	efgtoa@g+3,___flge@ff1+3
  4788  001CE0  0E00               	movlw	0
  4789  001CE2  6F04               	movwf	___flmul@a& (0+255),b
  4790  001CE4  0E00               	movlw	0
  4791  001CE6  6F05               	movwf	(___flmul@a+1)& (0+255),b
  4792  001CE8  0E20               	movlw	32
  4793  001CEA  6F06               	movwf	(___flmul@a+2)& (0+255),b
  4794  001CEC  0E41               	movlw	65
  4795  001CEE  6F07               	movwf	(___flmul@a+3)& (0+255),b
  4796  001CF0  C16D  F100         	movff	efgtoa@u,___flmul@b
  4797  001CF4  C16E  F101         	movff	efgtoa@u+1,___flmul@b+1
  4798  001CF8  C16F  F102         	movff	efgtoa@u+2,___flmul@b+2
  4799  001CFC  C170  F103         	movff	efgtoa@u+3,___flmul@b+3
  4800  001D00  ECFF  F017         	call	___flmul	;wreg free
  4801  001D04  C100  F11D         	movff	?___flmul,___flge@ff2
  4802  001D08  C101  F11E         	movff	?___flmul+1,___flge@ff2+1
  4803  001D0C  C102  F11F         	movff	?___flmul+2,___flge@ff2+2
  4804  001D10  C103  F120         	movff	?___flmul+3,___flge@ff2+3
  4805  001D14  EC46  F02A         	call	___flge	;wreg free
  4806  001D18  0101               	movlb	1	; () banked
  4807  001D1A  A0D8               	btfss	status,0,c
  4808  001D1C  D01F               	goto	l7274
  4809  001D1E  D7BB               	goto	l7264
  4810  001D20                     l7270:
  4811                           
  4812                           ; BSR set to: 1
  4813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4814  001D20  C16D  F100         	movff	efgtoa@u,___fldiv@b
  4815  001D24  C16E  F101         	movff	efgtoa@u+1,___fldiv@b+1
  4816  001D28  C16F  F102         	movff	efgtoa@u+2,___fldiv@b+2
  4817  001D2C  C170  F103         	movff	efgtoa@u+3,___fldiv@b+3
  4818  001D30  0E00               	movlw	0
  4819  001D32  6F04               	movwf	___fldiv@a& (0+255),b
  4820  001D34  0E00               	movlw	0
  4821  001D36  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  4822  001D38  0E20               	movlw	32
  4823  001D3A  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  4824  001D3C  0E41               	movlw	65
  4825  001D3E  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  4826  001D40  ECBA  F01F         	call	___fldiv	;wreg free
  4827  001D44  C100  F16D         	movff	?___fldiv,efgtoa@u
  4828  001D48  C101  F16E         	movff	?___fldiv+1,efgtoa@u+1
  4829  001D4C  C102  F16F         	movff	?___fldiv+2,efgtoa@u+2
  4830  001D50  C103  F170         	movff	?___fldiv+3,efgtoa@u+3
  4831                           
  4832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4833  001D54  0101               	movlb	1	; () banked
  4834  001D56  0769               	decf	efgtoa@e& (0+255),f,b
  4835  001D58  A0D8               	btfss	status,0,c
  4836  001D5A  076A               	decf	(efgtoa@e+1)& (0+255),f,b
  4837  001D5C                     l7274:
  4838                           
  4839                           ; BSR set to: 1
  4840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4841  001D5C  C165  F119         	movff	efgtoa@g,___flge@ff1
  4842  001D60  C166  F11A         	movff	efgtoa@g+1,___flge@ff1+1
  4843  001D64  C167  F11B         	movff	efgtoa@g+2,___flge@ff1+2
  4844  001D68  C168  F11C         	movff	efgtoa@g+3,___flge@ff1+3
  4845  001D6C  C16D  F11D         	movff	efgtoa@u,___flge@ff2
  4846  001D70  C16E  F11E         	movff	efgtoa@u+1,___flge@ff2+1
  4847  001D74  C16F  F11F         	movff	efgtoa@u+2,___flge@ff2+2
  4848  001D78  C170  F120         	movff	efgtoa@u+3,___flge@ff2+3
  4849  001D7C  EC46  F02A         	call	___flge	;wreg free
  4850  001D80  0101               	movlb	1	; () banked
  4851  001D82  A0D8               	btfss	status,0,c
  4852  001D84  D7CD               	goto	l7270
  4853  001D86                     u9940:
  4854                           
  4855                           ; BSR set to: 1
  4856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4857  001D86  C133  F106         	movff	efgtoa@c,tolower@c
  4858  001D8A  6B07               	clrf	(tolower@c+1)& (0+255),b
  4859  001D8C  ECD5  F032         	call	_tolower	;wreg free
  4860  001D90  0101               	movlb	1	; () banked
  4861  001D92  5106               	movf	?_tolower& (0+255),w,b
  4862  001D94  6F5A               	movwf	efgtoa@mode& (0+255),b
  4863                           
  4864                           ; BSR set to: 1
  4865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4866  001D96  C15A  F157         	movff	efgtoa@mode,efgtoa@nmode
  4867                           
  4868                           ; BSR set to: 1
  4869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4870  001D9A  0E67               	movlw	103
  4871  001D9C  195A               	xorwf	efgtoa@mode& (0+255),w,b
  4872  001D9E  A4D8               	btfss	status,2,c
  4873  001DA0  D019               	goto	l7290
  4874                           
  4875                           ; BSR set to: 1
  4876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4877  001DA2  51A9               	movf	_prec& (0+255),w,b
  4878  001DA4  11AA               	iorwf	(_prec+1)& (0+255),w,b
  4879  001DA6  A4D8               	btfss	status,2,c
  4880  001DA8  D004               	goto	l7286
  4881                           
  4882                           ; BSR set to: 1
  4883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4884  001DAA  0E00               	movlw	0
  4885  001DAC  6FAA               	movwf	(_prec+1)& (0+255),b
  4886  001DAE  0E01               	movlw	1
  4887  001DB0  6FA9               	movwf	_prec& (0+255),b
  4888  001DB2                     l7286:
  4889                           
  4890                           ; BSR set to: 1
  4891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4892  001DB2  BFAA               	btfsc	(_prec+1)& (0+255),7,b
  4893  001DB4  D005               	goto	u9970
  4894  001DB6  51AA               	movf	(_prec+1)& (0+255),w,b
  4895  001DB8  E108               	bnz	l715
  4896  001DBA  05A9               	decf	_prec& (0+255),w,b
  4897  001DBC  B0D8               	btfsc	status,0,c
  4898  001DBE  D005               	goto	l715
  4899  001DC0                     u9970:
  4900                           
  4901                           ; BSR set to: 1
  4902  001DC0  0E00               	movlw	0
  4903  001DC2  6F56               	movwf	(efgtoa@p+1)& (0+255),b
  4904  001DC4  0E06               	movlw	6
  4905  001DC6  6F55               	movwf	efgtoa@p& (0+255),b
  4906  001DC8  D008               	goto	l7296
  4907  001DCA                     l715:
  4908                           
  4909                           ; BSR set to: 1
  4910  001DCA  C1A9  F155         	movff	_prec,efgtoa@p
  4911  001DCE  C1AA  F156         	movff	_prec+1,efgtoa@p+1
  4912  001DD2  D003               	goto	l7296
  4913  001DD4                     l7290:
  4914                           
  4915                           ; BSR set to: 1
  4916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4917  001DD4  AFAA               	btfss	(_prec+1)& (0+255),7,b
  4918  001DD6  D7F9               	goto	l715
  4919  001DD8  D7F3               	goto	u9970
  4920  001DDA                     l7296:
  4921                           
  4922                           ; BSR set to: 1
  4923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4924  001DDA  0E67               	movlw	103
  4925  001DDC  195A               	xorwf	efgtoa@mode& (0+255),w,b
  4926  001DDE  A4D8               	btfss	status,2,c
  4927  001DE0  D022               	goto	l7306
  4928                           
  4929                           ; BSR set to: 1
  4930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4931  001DE2  AF6A               	btfss	(efgtoa@e+1)& (0+255),7,b
  4932  001DE4  D006               	goto	u10000
  4933  001DE6  0EFC               	movlw	252
  4934  001DE8  5D69               	subwf	efgtoa@e& (0+255),w,b
  4935  001DEA  0EFF               	movlw	255
  4936  001DEC  596A               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4937  001DEE  A0D8               	btfss	status,0,c
  4938  001DF0  D018               	goto	l7304
  4939  001DF2                     u10000:
  4940                           
  4941                           ; BSR set to: 1
  4942  001DF2  0EFF               	movlw	255
  4943  001DF4  6F34               	movwf	??_efgtoa& (0+255),b
  4944  001DF6  0EFF               	movlw	255
  4945  001DF8  6F35               	movwf	(??_efgtoa+1)& (0+255),b
  4946  001DFA  C155  F136         	movff	efgtoa@p,??_efgtoa+2
  4947  001DFE  C156  F137         	movff	efgtoa@p+1,??_efgtoa+3
  4948  001E02  5134               	movf	??_efgtoa& (0+255),w,b
  4949  001E04  2736               	addwf	(??_efgtoa+2)& (0+255),f,b
  4950  001E06  5135               	movf	(??_efgtoa+1)& (0+255),w,b
  4951  001E08  2337               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4952  001E0A  5169               	movf	efgtoa@e& (0+255),w,b
  4953  001E0C  5D36               	subwf	(??_efgtoa+2)& (0+255),w,b
  4954  001E0E  5137               	movf	(??_efgtoa+3)& (0+255),w,b
  4955  001E10  0A80               	xorlw	128
  4956  001E12  6F38               	movwf	(??_efgtoa+4)& (0+255),b
  4957  001E14  516A               	movf	(efgtoa@e+1)& (0+255),w,b
  4958  001E16  0A80               	xorlw	128
  4959  001E18  5938               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4960  001E1A  A0D8               	btfss	status,0,c
  4961  001E1C  D002               	goto	l7304
  4962                           
  4963                           ; BSR set to: 1
  4964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4965  001E1E  0E66               	movlw	102
  4966  001E20  D001               	goto	L2
  4967  001E22                     l7304:
  4968                           
  4969                           ; BSR set to: 1
  4970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4971  001E22  0E65               	movlw	101
  4972  001E24                     L2:
  4973  001E24  6F57               	movwf	efgtoa@nmode& (0+255),b
  4974  001E26                     l7306:
  4975                           
  4976                           ; BSR set to: 1
  4977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4978  001E26  C155  F14D         	movff	efgtoa@p,efgtoa@m
  4979  001E2A  C156  F14E         	movff	efgtoa@p+1,efgtoa@m+1
  4980                           
  4981                           ; BSR set to: 1
  4982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4983  001E2E  0E67               	movlw	103
  4984  001E30  195A               	xorwf	efgtoa@mode& (0+255),w,b
  4985  001E32  A4D8               	btfss	status,2,c
  4986  001E34  D005               	goto	u10040
  4987                           
  4988                           ; BSR set to: 1
  4989  001E36  0E66               	movlw	102
  4990  001E38  1957               	xorwf	efgtoa@nmode& (0+255),w,b
  4991  001E3A  B4D8               	btfsc	status,2,c
  4992                           
  4993                           ; BSR set to: 1
  4994  001E3C  AF6A               	btfss	(efgtoa@e+1)& (0+255),7,b
  4995  001E3E  D002               	goto	l7316
  4996  001E40                     u10040:
  4997                           
  4998                           ; BSR set to: 1
  4999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  5000  001E40  4B4D               	infsnz	efgtoa@m& (0+255),f,b
  5001  001E42  2B4E               	incf	(efgtoa@m+1)& (0+255),f,b
  5002  001E44                     l7316:
  5003                           
  5004                           ; BSR set to: 1
  5005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  5006  001E44  0E66               	movlw	102
  5007  001E46  1957               	xorwf	efgtoa@nmode& (0+255),w,b
  5008  001E48  A4D8               	btfss	status,2,c
  5009  001E4A  D016               	goto	l7326
  5010                           
  5011                           ; BSR set to: 1
  5012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  5013  001E4C  AF6A               	btfss	(efgtoa@e+1)& (0+255),7,b
  5014  001E4E  D00C               	goto	l7322
  5015                           
  5016                           ; BSR set to: 1
  5017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  5018  001E50  0E00               	movlw	0
  5019  001E52  6F6D               	movwf	efgtoa@u& (0+255),b
  5020  001E54  0E00               	movlw	0
  5021  001E56  6F6E               	movwf	(efgtoa@u+1)& (0+255),b
  5022  001E58  0E80               	movlw	128
  5023  001E5A  6F6F               	movwf	(efgtoa@u+2)& (0+255),b
  5024  001E5C  0E3F               	movlw	63
  5025  001E5E  6F70               	movwf	(efgtoa@u+3)& (0+255),b
  5026                           
  5027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  5028  001E60  0E00               	movlw	0
  5029  001E62  6F6A               	movwf	(efgtoa@e+1)& (0+255),b
  5030  001E64  0E00               	movlw	0
  5031  001E66  6F69               	movwf	efgtoa@e& (0+255),b
  5032  001E68                     l7322:
  5033                           
  5034                           ; BSR set to: 1
  5035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  5036  001E68  0E67               	movlw	103
  5037  001E6A  195A               	xorwf	efgtoa@mode& (0+255),w,b
  5038  001E6C  B4D8               	btfsc	status,2,c
  5039  001E6E  D004               	goto	l7326
  5040                           
  5041                           ; BSR set to: 1
  5042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  5043  001E70  5169               	movf	efgtoa@e& (0+255),w,b
  5044  001E72  274D               	addwf	efgtoa@m& (0+255),f,b
  5045  001E74  516A               	movf	(efgtoa@e+1)& (0+255),w,b
  5046  001E76  234E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5047  001E78                     l7326:
  5048                           
  5049                           ; BSR set to: 1
  5050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  5051  001E78  0E00               	movlw	0
  5052  001E7A  6F64               	movwf	(efgtoa@i+1)& (0+255),b
  5053  001E7C  0E00               	movlw	0
  5054  001E7E  6F63               	movwf	efgtoa@i& (0+255),b
  5055                           
  5056                           ; BSR set to: 1
  5057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  5058  001E80  C165  F15B         	movff	efgtoa@g,efgtoa@h
  5059  001E84  C166  F15C         	movff	efgtoa@g+1,efgtoa@h+1
  5060  001E88  C167  F15D         	movff	efgtoa@g+2,efgtoa@h+2
  5061  001E8C  C168  F15E         	movff	efgtoa@g+3,efgtoa@h+3
  5062                           
  5063                           ; BSR set to: 1
  5064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  5065  001E90  C16D  F139         	movff	efgtoa@u,efgtoa@ou
  5066  001E94  C16E  F13A         	movff	efgtoa@u+1,efgtoa@ou+1
  5067  001E98  C16F  F13B         	movff	efgtoa@u+2,efgtoa@ou+2
  5068  001E9C  C170  F13C         	movff	efgtoa@u+3,efgtoa@ou+3
  5069                           
  5070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5071  001EA0  D07C               	goto	l7340
  5072  001EA2                     l7332:
  5073                           
  5074                           ; BSR set to: 1
  5075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  5076  001EA2  C15B  F100         	movff	efgtoa@h,___fldiv@b
  5077  001EA6  C15C  F101         	movff	efgtoa@h+1,___fldiv@b+1
  5078  001EAA  C15D  F102         	movff	efgtoa@h+2,___fldiv@b+2
  5079  001EAE  C15E  F103         	movff	efgtoa@h+3,___fldiv@b+3
  5080  001EB2  C16D  F104         	movff	efgtoa@u,___fldiv@a
  5081  001EB6  C16E  F105         	movff	efgtoa@u+1,___fldiv@a+1
  5082  001EBA  C16F  F106         	movff	efgtoa@u+2,___fldiv@a+2
  5083  001EBE  C170  F107         	movff	efgtoa@u+3,___fldiv@a+3
  5084  001EC2  ECBA  F01F         	call	___fldiv	;wreg free
  5085  001EC6  C100  F119         	movff	?___fldiv,floorf@x
  5086  001ECA  C101  F11A         	movff	?___fldiv+1,floorf@x+1
  5087  001ECE  C102  F11B         	movff	?___fldiv+2,floorf@x+2
  5088  001ED2  C103  F11C         	movff	?___fldiv+3,floorf@x+3
  5089  001ED6  EC58  F023         	call	_floorf	;wreg free
  5090  001EDA  C119  F15F         	movff	?_floorf,efgtoa@l
  5091  001EDE  C11A  F160         	movff	?_floorf+1,efgtoa@l+1
  5092  001EE2  C11B  F161         	movff	?_floorf+2,efgtoa@l+2
  5093  001EE6  C11C  F162         	movff	?_floorf+3,efgtoa@l+3
  5094                           
  5095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  5096  001EEA  C15F  F100         	movff	efgtoa@l,___fltol@f1
  5097  001EEE  C160  F101         	movff	efgtoa@l+1,___fltol@f1+1
  5098  001EF2  C161  F102         	movff	efgtoa@l+2,___fltol@f1+2
  5099  001EF6  C162  F103         	movff	efgtoa@l+3,___fltol@f1+3
  5100  001EFA  ECE4  F02B         	call	___fltol	;wreg free
  5101  001EFE  C100  F151         	movff	?___fltol,efgtoa@d
  5102  001F02  C101  F152         	movff	?___fltol+1,efgtoa@d+1
  5103                           
  5104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  5105  001F06  C15B  F119         	movff	efgtoa@h,___flsub@b
  5106  001F0A  C15C  F11A         	movff	efgtoa@h+1,___flsub@b+1
  5107  001F0E  C15D  F11B         	movff	efgtoa@h+2,___flsub@b+2
  5108  001F12  C15E  F11C         	movff	efgtoa@h+3,___flsub@b+3
  5109  001F16  C16D  F104         	movff	efgtoa@u,___flmul@a
  5110  001F1A  C16E  F105         	movff	efgtoa@u+1,___flmul@a+1
  5111  001F1E  C16F  F106         	movff	efgtoa@u+2,___flmul@a+2
  5112  001F22  C170  F107         	movff	efgtoa@u+3,___flmul@a+3
  5113  001F26  C15F  F100         	movff	efgtoa@l,___flmul@b
  5114  001F2A  C160  F101         	movff	efgtoa@l+1,___flmul@b+1
  5115  001F2E  C161  F102         	movff	efgtoa@l+2,___flmul@b+2
  5116  001F32  C162  F103         	movff	efgtoa@l+3,___flmul@b+3
  5117  001F36  ECFF  F017         	call	___flmul	;wreg free
  5118  001F3A  C100  F11D         	movff	?___flmul,___flsub@a
  5119  001F3E  C101  F11E         	movff	?___flmul+1,___flsub@a+1
  5120  001F42  C102  F11F         	movff	?___flmul+2,___flsub@a+2
  5121  001F46  C103  F120         	movff	?___flmul+3,___flsub@a+3
  5122  001F4A  EC22  F033         	call	___flsub	;wreg free
  5123  001F4E  C119  F15B         	movff	?___flsub,efgtoa@h
  5124  001F52  C11A  F15C         	movff	?___flsub+1,efgtoa@h+1
  5125  001F56  C11B  F15D         	movff	?___flsub+2,efgtoa@h+2
  5126  001F5A  C11C  F15E         	movff	?___flsub+3,efgtoa@h+3
  5127                           
  5128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  5129  001F5E  C16D  F100         	movff	efgtoa@u,___fldiv@b
  5130  001F62  C16E  F101         	movff	efgtoa@u+1,___fldiv@b+1
  5131  001F66  C16F  F102         	movff	efgtoa@u+2,___fldiv@b+2
  5132  001F6A  C170  F103         	movff	efgtoa@u+3,___fldiv@b+3
  5133  001F6E  0E00               	movlw	0
  5134  001F70  0101               	movlb	1	; () banked
  5135  001F72  6F04               	movwf	___fldiv@a& (0+255),b
  5136  001F74  0E00               	movlw	0
  5137  001F76  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  5138  001F78  0E20               	movlw	32
  5139  001F7A  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  5140  001F7C  0E41               	movlw	65
  5141  001F7E  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  5142  001F80  ECBA  F01F         	call	___fldiv	;wreg free
  5143  001F84  C100  F16D         	movff	?___fldiv,efgtoa@u
  5144  001F88  C101  F16E         	movff	?___fldiv+1,efgtoa@u+1
  5145  001F8C  C102  F16F         	movff	?___fldiv+2,efgtoa@u+2
  5146  001F90  C103  F170         	movff	?___fldiv+3,efgtoa@u+3
  5147                           
  5148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  5149  001F94  0101               	movlb	1	; () banked
  5150  001F96  4B63               	infsnz	efgtoa@i& (0+255),f,b
  5151  001F98  2B64               	incf	(efgtoa@i+1)& (0+255),f,b
  5152  001F9A                     l7340:
  5153                           
  5154                           ; BSR set to: 1
  5155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5156  001F9A  514D               	movf	efgtoa@m& (0+255),w,b
  5157  001F9C  5D63               	subwf	efgtoa@i& (0+255),w,b
  5158  001F9E  5164               	movf	(efgtoa@i+1)& (0+255),w,b
  5159  001FA0  0A80               	xorlw	128
  5160  001FA2  6F34               	movwf	??_efgtoa& (0+255),b
  5161  001FA4  514E               	movf	(efgtoa@m+1)& (0+255),w,b
  5162  001FA6  0A80               	xorlw	128
  5163  001FA8  5934               	subwfb	??_efgtoa& (0+255),w,b
  5164  001FAA  A0D8               	btfss	status,0,c
  5165  001FAC  D77A               	goto	l7332
  5166                           
  5167                           ; BSR set to: 1
  5168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  5169  001FAE  C16D  F100         	movff	efgtoa@u,___flmul@b
  5170  001FB2  C16E  F101         	movff	efgtoa@u+1,___flmul@b+1
  5171  001FB6  C16F  F102         	movff	efgtoa@u+2,___flmul@b+2
  5172  001FBA  C170  F103         	movff	efgtoa@u+3,___flmul@b+3
  5173  001FBE  0E00               	movlw	0
  5174  001FC0  6F04               	movwf	___flmul@a& (0+255),b
  5175  001FC2  0E00               	movlw	0
  5176  001FC4  6F05               	movwf	(___flmul@a+1)& (0+255),b
  5177  001FC6  0EA0               	movlw	160
  5178  001FC8  6F06               	movwf	(___flmul@a+2)& (0+255),b
  5179  001FCA  0E40               	movlw	64
  5180  001FCC  6F07               	movwf	(___flmul@a+3)& (0+255),b
  5181  001FCE  ECFF  F017         	call	___flmul	;wreg free
  5182  001FD2  C100  F15F         	movff	?___flmul,efgtoa@l
  5183  001FD6  C101  F160         	movff	?___flmul+1,efgtoa@l+1
  5184  001FDA  C102  F161         	movff	?___flmul+2,efgtoa@l+2
  5185  001FDE  C103  F162         	movff	?___flmul+3,efgtoa@l+3
  5186                           
  5187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  5188  001FE2  C15B  F119         	movff	efgtoa@h,___flge@ff1
  5189  001FE6  C15C  F11A         	movff	efgtoa@h+1,___flge@ff1+1
  5190  001FEA  C15D  F11B         	movff	efgtoa@h+2,___flge@ff1+2
  5191  001FEE  C15E  F11C         	movff	efgtoa@h+3,___flge@ff1+3
  5192  001FF2  C15F  F11D         	movff	efgtoa@l,___flge@ff2
  5193  001FF6  C160  F11E         	movff	efgtoa@l+1,___flge@ff2+1
  5194  001FFA  C161  F11F         	movff	efgtoa@l+2,___flge@ff2+2
  5195  001FFE  C162  F120         	movff	efgtoa@l+3,___flge@ff2+3
  5196  002002  EC46  F02A         	call	___flge	;wreg free
  5197  002006  0101               	movlb	1	; () banked
  5198  002008  A0D8               	btfss	status,0,c
  5199  00200A  D016               	goto	u10110
  5200                           
  5201                           ; BSR set to: 1
  5202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  5203                           
  5204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  5205                           
  5206                           ; BSR set to: 1
  5207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  5208  00200C  C15B  F100         	movff	efgtoa@h,___fleq@ff1
  5209  002010  C15C  F101         	movff	efgtoa@h+1,___fleq@ff1+1
  5210  002014  C15D  F102         	movff	efgtoa@h+2,___fleq@ff1+2
  5211  002018  C15E  F103         	movff	efgtoa@h+3,___fleq@ff1+3
  5212  00201C  C15F  F104         	movff	efgtoa@l,___fleq@ff2
  5213  002020  C160  F105         	movff	efgtoa@l+1,___fleq@ff2+1
  5214  002024  C161  F106         	movff	efgtoa@l+2,___fleq@ff2+2
  5215  002028  C162  F107         	movff	efgtoa@l+3,___fleq@ff2+3
  5216  00202C  ECBB  F02F         	call	___fleq	;wreg free
  5217  002030  0101               	movlb	1	; () banked
  5218  002032  B0D8               	btfsc	status,0,c
  5219                           
  5220                           ; BSR set to: 1
  5221  002034  B151               	btfsc	efgtoa@d& (0+255),0,b
  5222  002036  D008               	goto	l7354
  5223  002038                     u10110:
  5224                           
  5225                           ; BSR set to: 1
  5226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  5227  002038  0E00               	movlw	0
  5228  00203A  6F5F               	movwf	efgtoa@l& (0+255),b
  5229  00203C  0E00               	movlw	0
  5230  00203E  6F60               	movwf	(efgtoa@l+1)& (0+255),b
  5231  002040  0E00               	movlw	0
  5232  002042  6F61               	movwf	(efgtoa@l+2)& (0+255),b
  5233  002044  0E00               	movlw	0
  5234  002046  6F62               	movwf	(efgtoa@l+3)& (0+255),b
  5235  002048                     l7354:
  5236                           
  5237                           ; BSR set to: 1
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  5239  002048  C165  F100         	movff	efgtoa@g,___fladd@b
  5240  00204C  C166  F101         	movff	efgtoa@g+1,___fladd@b+1
  5241  002050  C167  F102         	movff	efgtoa@g+2,___fladd@b+2
  5242  002054  C168  F103         	movff	efgtoa@g+3,___fladd@b+3
  5243  002058  C15F  F104         	movff	efgtoa@l,___fladd@a
  5244  00205C  C160  F105         	movff	efgtoa@l+1,___fladd@a+1
  5245  002060  C161  F106         	movff	efgtoa@l+2,___fladd@a+2
  5246  002064  C162  F107         	movff	efgtoa@l+3,___fladd@a+3
  5247  002068  EC52  F01B         	call	___fladd	;wreg free
  5248  00206C  C100  F15B         	movff	?___fladd,efgtoa@h
  5249  002070  C101  F15C         	movff	?___fladd+1,efgtoa@h+1
  5250  002074  C102  F15D         	movff	?___fladd+2,efgtoa@h+2
  5251  002078  C103  F15E         	movff	?___fladd+3,efgtoa@h+3
  5252                           
  5253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  5254  00207C  C139  F16D         	movff	efgtoa@ou,efgtoa@u
  5255  002080  C13A  F16E         	movff	efgtoa@ou+1,efgtoa@u+1
  5256  002084  C13B  F16F         	movff	efgtoa@ou+2,efgtoa@u+2
  5257  002088  C13C  F170         	movff	efgtoa@ou+3,efgtoa@u+3
  5258                           
  5259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  5260  00208C  0E65               	movlw	101
  5261  00208E  0101               	movlb	1	; () banked
  5262  002090  1957               	xorwf	efgtoa@nmode& (0+255),w,b
  5263  002092  B4D8               	btfsc	status,2,c
  5264  002094  D005               	goto	l7362
  5265                           
  5266                           ; BSR set to: 1
  5267  002096  C169  F14F         	movff	efgtoa@e,efgtoa@ne
  5268  00209A  C16A  F150         	movff	efgtoa@e+1,efgtoa@ne+1
  5269  00209E  D004               	goto	l741
  5270  0020A0                     l7362:
  5271                           
  5272                           ; BSR set to: 1
  5273  0020A0  0E00               	movlw	0
  5274  0020A2  6F50               	movwf	(efgtoa@ne+1)& (0+255),b
  5275  0020A4  0E00               	movlw	0
  5276  0020A6  6F4F               	movwf	efgtoa@ne& (0+255),b
  5277  0020A8                     l741:
  5278                           
  5279                           ; BSR set to: 1
  5280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  5281  0020A8  0E00               	movlw	0
  5282  0020AA  6F4C               	movwf	(efgtoa@pp+1)& (0+255),b
  5283  0020AC  0E00               	movlw	0
  5284  0020AE  6F4B               	movwf	efgtoa@pp& (0+255),b
  5285                           
  5286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  5287  0020B0  0E00               	movlw	0
  5288  0020B2  6F4A               	movwf	(efgtoa@t+1)& (0+255),b
  5289  0020B4  0E00               	movlw	0
  5290  0020B6  6F49               	movwf	efgtoa@t& (0+255),b
  5291                           
  5292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  5293  0020B8  0E00               	movlw	0
  5294  0020BA  6F64               	movwf	(efgtoa@i+1)& (0+255),b
  5295  0020BC  0E00               	movlw	0
  5296  0020BE  6F63               	movwf	efgtoa@i& (0+255),b
  5297                           
  5298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5299  0020C0  D0C7               	goto	l7412
  5300  0020C2                     l7364:
  5301                           
  5302                           ; BSR set to: 1
  5303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  5304  0020C2  C15B  F100         	movff	efgtoa@h,___fldiv@b
  5305  0020C6  C15C  F101         	movff	efgtoa@h+1,___fldiv@b+1
  5306  0020CA  C15D  F102         	movff	efgtoa@h+2,___fldiv@b+2
  5307  0020CE  C15E  F103         	movff	efgtoa@h+3,___fldiv@b+3
  5308  0020D2  C16D  F104         	movff	efgtoa@u,___fldiv@a
  5309  0020D6  C16E  F105         	movff	efgtoa@u+1,___fldiv@a+1
  5310  0020DA  C16F  F106         	movff	efgtoa@u+2,___fldiv@a+2
  5311  0020DE  C170  F107         	movff	efgtoa@u+3,___fldiv@a+3
  5312  0020E2  ECBA  F01F         	call	___fldiv	;wreg free
  5313  0020E6  C100  F119         	movff	?___fldiv,floorf@x
  5314  0020EA  C101  F11A         	movff	?___fldiv+1,floorf@x+1
  5315  0020EE  C102  F11B         	movff	?___fldiv+2,floorf@x+2
  5316  0020F2  C103  F11C         	movff	?___fldiv+3,floorf@x+3
  5317  0020F6  EC58  F023         	call	_floorf	;wreg free
  5318  0020FA  C119  F15F         	movff	?_floorf,efgtoa@l
  5319  0020FE  C11A  F160         	movff	?_floorf+1,efgtoa@l+1
  5320  002102  C11B  F161         	movff	?_floorf+2,efgtoa@l+2
  5321  002106  C11C  F162         	movff	?_floorf+3,efgtoa@l+3
  5322                           
  5323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  5324  00210A  C15F  F100         	movff	efgtoa@l,___fltol@f1
  5325  00210E  C160  F101         	movff	efgtoa@l+1,___fltol@f1+1
  5326  002112  C161  F102         	movff	efgtoa@l+2,___fltol@f1+2
  5327  002116  C162  F103         	movff	efgtoa@l+3,___fltol@f1+3
  5328  00211A  ECE4  F02B         	call	___fltol	;wreg free
  5329  00211E  C100  F151         	movff	?___fltol,efgtoa@d
  5330  002122  C101  F152         	movff	?___fltol+1,efgtoa@d+1
  5331                           
  5332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5333  002126  0101               	movlb	1	; () banked
  5334  002128  B9AB               	btfsc	_flags& (0+255),4,b
  5335  00212A  D00C               	goto	l7376
  5336                           
  5337                           ; BSR set to: 1
  5338  00212C  5151               	movf	efgtoa@d& (0+255),w,b
  5339  00212E  1152               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5340  002130  A4D8               	btfss	status,2,c
  5341  002132  D008               	goto	l7376
  5342                           
  5343                           ; BSR set to: 1
  5344  002134  0E67               	movlw	103
  5345  002136  195A               	xorwf	efgtoa@mode& (0+255),w,b
  5346  002138  B4D8               	btfsc	status,2,c
  5347                           
  5348                           ; BSR set to: 1
  5349  00213A  AF50               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5350  00213C  D003               	goto	l7376
  5351                           
  5352                           ; BSR set to: 1
  5353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  5354  00213E  4B49               	infsnz	efgtoa@t& (0+255),f,b
  5355  002140  2B4A               	incf	(efgtoa@t+1)& (0+255),f,b
  5356                           
  5357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  5358  002142  D039               	goto	l7404
  5359  002144                     l7376:
  5360                           
  5361                           ; BSR set to: 1
  5362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  5363  002144  514B               	movf	efgtoa@pp& (0+255),w,b
  5364  002146  114C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5365  002148  B4D8               	btfsc	status,2,c
  5366                           
  5367                           ; BSR set to: 1
  5368  00214A  AF50               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5369  00214C  D022               	goto	l7396
  5370                           
  5371                           ; BSR set to: 1
  5372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  5373  00214E  0E80               	movlw	low _dbuf
  5374  002150  256B               	addwf	efgtoa@n& (0+255),w,b
  5375  002152  6ED9               	movwf	fsr2l,c
  5376  002154  0E02               	movlw	high _dbuf
  5377  002156  216C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5378  002158  6EDA               	movwf	fsr2h,c
  5379  00215A  0E2E               	movlw	46
  5380  00215C  6EDF               	movwf	indf2,c
  5381                           
  5382                           ; BSR set to: 1
  5383  00215E  4B6B               	infsnz	efgtoa@n& (0+255),f,b
  5384  002160  2B6C               	incf	(efgtoa@n+1)& (0+255),f,b
  5385                           
  5386                           ; BSR set to: 1
  5387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  5388  002162  0758               	decf	efgtoa@w& (0+255),f,b
  5389  002164  A0D8               	btfss	status,0,c
  5390  002166  0759               	decf	(efgtoa@w+1)& (0+255),f,b
  5391                           
  5392                           ; BSR set to: 1
  5393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  5394  002168  0E00               	movlw	0
  5395  00216A  6F4C               	movwf	(efgtoa@pp+1)& (0+255),b
  5396  00216C  0E01               	movlw	1
  5397  00216E  6F4B               	movwf	efgtoa@pp& (0+255),b
  5398  002170  D010               	goto	l7396
  5399  002172                     l7388:
  5400                           
  5401                           ; BSR set to: 1
  5402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  5403  002172  0E80               	movlw	low _dbuf
  5404  002174  256B               	addwf	efgtoa@n& (0+255),w,b
  5405  002176  6ED9               	movwf	fsr2l,c
  5406  002178  0E02               	movlw	high _dbuf
  5407  00217A  216C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5408  00217C  6EDA               	movwf	fsr2h,c
  5409  00217E  0E30               	movlw	48
  5410  002180  6EDF               	movwf	indf2,c
  5411                           
  5412                           ; BSR set to: 1
  5413  002182  4B6B               	infsnz	efgtoa@n& (0+255),f,b
  5414  002184  2B6C               	incf	(efgtoa@n+1)& (0+255),f,b
  5415                           
  5416                           ; BSR set to: 1
  5417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  5418  002186  0758               	decf	efgtoa@w& (0+255),f,b
  5419  002188  A0D8               	btfss	status,0,c
  5420  00218A  0759               	decf	(efgtoa@w+1)& (0+255),f,b
  5421                           
  5422                           ; BSR set to: 1
  5423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  5424  00218C  0749               	decf	efgtoa@t& (0+255),f,b
  5425  00218E  A0D8               	btfss	status,0,c
  5426  002190  074A               	decf	(efgtoa@t+1)& (0+255),f,b
  5427  002192                     l7396:
  5428                           
  5429                           ; BSR set to: 1
  5430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  5431  002192  5149               	movf	efgtoa@t& (0+255),w,b
  5432  002194  114A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5433  002196  A4D8               	btfss	status,2,c
  5434  002198  D7EC               	goto	l7388
  5435                           
  5436                           ; BSR set to: 1
  5437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  5438  00219A  0E80               	movlw	low _dbuf
  5439  00219C  256B               	addwf	efgtoa@n& (0+255),w,b
  5440  00219E  6ED9               	movwf	fsr2l,c
  5441  0021A0  0E02               	movlw	high _dbuf
  5442  0021A2  216C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5443  0021A4  6EDA               	movwf	fsr2h,c
  5444  0021A6  5151               	movf	efgtoa@d& (0+255),w,b
  5445  0021A8  0F30               	addlw	48
  5446  0021AA  6EDF               	movwf	indf2,c
  5447                           
  5448                           ; BSR set to: 1
  5449  0021AC  4B6B               	infsnz	efgtoa@n& (0+255),f,b
  5450  0021AE  2B6C               	incf	(efgtoa@n+1)& (0+255),f,b
  5451                           
  5452                           ; BSR set to: 1
  5453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  5454  0021B0  0758               	decf	efgtoa@w& (0+255),f,b
  5455  0021B2  A0D8               	btfss	status,0,c
  5456  0021B4  0759               	decf	(efgtoa@w+1)& (0+255),f,b
  5457  0021B6                     l7404:
  5458                           
  5459                           ; BSR set to: 1
  5460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  5461  0021B6  C15B  F119         	movff	efgtoa@h,___flsub@b
  5462  0021BA  C15C  F11A         	movff	efgtoa@h+1,___flsub@b+1
  5463  0021BE  C15D  F11B         	movff	efgtoa@h+2,___flsub@b+2
  5464  0021C2  C15E  F11C         	movff	efgtoa@h+3,___flsub@b+3
  5465  0021C6  C16D  F104         	movff	efgtoa@u,___flmul@a
  5466  0021CA  C16E  F105         	movff	efgtoa@u+1,___flmul@a+1
  5467  0021CE  C16F  F106         	movff	efgtoa@u+2,___flmul@a+2
  5468  0021D2  C170  F107         	movff	efgtoa@u+3,___flmul@a+3
  5469  0021D6  C15F  F100         	movff	efgtoa@l,___flmul@b
  5470  0021DA  C160  F101         	movff	efgtoa@l+1,___flmul@b+1
  5471  0021DE  C161  F102         	movff	efgtoa@l+2,___flmul@b+2
  5472  0021E2  C162  F103         	movff	efgtoa@l+3,___flmul@b+3
  5473  0021E6  ECFF  F017         	call	___flmul	;wreg free
  5474  0021EA  C100  F11D         	movff	?___flmul,___flsub@a
  5475  0021EE  C101  F11E         	movff	?___flmul+1,___flsub@a+1
  5476  0021F2  C102  F11F         	movff	?___flmul+2,___flsub@a+2
  5477  0021F6  C103  F120         	movff	?___flmul+3,___flsub@a+3
  5478  0021FA  EC22  F033         	call	___flsub	;wreg free
  5479  0021FE  C119  F15B         	movff	?___flsub,efgtoa@h
  5480  002202  C11A  F15C         	movff	?___flsub+1,efgtoa@h+1
  5481  002206  C11B  F15D         	movff	?___flsub+2,efgtoa@h+2
  5482  00220A  C11C  F15E         	movff	?___flsub+3,efgtoa@h+3
  5483                           
  5484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  5485  00220E  C16D  F100         	movff	efgtoa@u,___fldiv@b
  5486  002212  C16E  F101         	movff	efgtoa@u+1,___fldiv@b+1
  5487  002216  C16F  F102         	movff	efgtoa@u+2,___fldiv@b+2
  5488  00221A  C170  F103         	movff	efgtoa@u+3,___fldiv@b+3
  5489  00221E  0E00               	movlw	0
  5490  002220  0101               	movlb	1	; () banked
  5491  002222  6F04               	movwf	___fldiv@a& (0+255),b
  5492  002224  0E00               	movlw	0
  5493  002226  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  5494  002228  0E20               	movlw	32
  5495  00222A  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  5496  00222C  0E41               	movlw	65
  5497  00222E  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  5498  002230  ECBA  F01F         	call	___fldiv	;wreg free
  5499  002234  C100  F16D         	movff	?___fldiv,efgtoa@u
  5500  002238  C101  F16E         	movff	?___fldiv+1,efgtoa@u+1
  5501  00223C  C102  F16F         	movff	?___fldiv+2,efgtoa@u+2
  5502  002240  C103  F170         	movff	?___fldiv+3,efgtoa@u+3
  5503                           
  5504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  5505  002244  0101               	movlb	1	; () banked
  5506  002246  074F               	decf	efgtoa@ne& (0+255),f,b
  5507  002248  A0D8               	btfss	status,0,c
  5508  00224A  0750               	decf	(efgtoa@ne+1)& (0+255),f,b
  5509                           
  5510                           ; BSR set to: 1
  5511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  5512  00224C  4B63               	infsnz	efgtoa@i& (0+255),f,b
  5513  00224E  2B64               	incf	(efgtoa@i+1)& (0+255),f,b
  5514  002250                     l7412:
  5515                           
  5516                           ; BSR set to: 1
  5517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  5518  002250  514D               	movf	efgtoa@m& (0+255),w,b
  5519  002252  5D63               	subwf	efgtoa@i& (0+255),w,b
  5520  002254  5164               	movf	(efgtoa@i+1)& (0+255),w,b
  5521  002256  0A80               	xorlw	128
  5522  002258  6F34               	movwf	??_efgtoa& (0+255),b
  5523  00225A  514E               	movf	(efgtoa@m+1)& (0+255),w,b
  5524  00225C  0A80               	xorlw	128
  5525  00225E  5934               	subwfb	??_efgtoa& (0+255),w,b
  5526  002260  B0D8               	btfsc	status,0,c
  5527  002262  D008               	goto	u10210
  5528                           
  5529                           ; BSR set to: 1
  5530  002264  BF6C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5531  002266  D72D               	goto	l7364
  5532  002268  516C               	movf	(efgtoa@n+1)& (0+255),w,b
  5533  00226A  E104               	bnz	u10210
  5534  00226C  0E4B               	movlw	75
  5535  00226E  5D6B               	subwf	efgtoa@n& (0+255),w,b
  5536  002270  A0D8               	btfss	status,0,c
  5537  002272  D727               	goto	l7364
  5538  002274                     u10210:
  5539                           
  5540                           ; BSR set to: 1
  5541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  5542  002274  514B               	movf	efgtoa@pp& (0+255),w,b
  5543  002276  114C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5544  002278  B4D8               	btfsc	status,2,c
  5545                           
  5546                           ; BSR set to: 1
  5547  00227A  A9AB               	btfss	_flags& (0+255),4,b
  5548  00227C  D00A               	goto	l7424
  5549                           
  5550                           ; BSR set to: 1
  5551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  5552  00227E  0E80               	movlw	low _dbuf
  5553  002280  256B               	addwf	efgtoa@n& (0+255),w,b
  5554  002282  6ED9               	movwf	fsr2l,c
  5555  002284  0E02               	movlw	high _dbuf
  5556  002286  216C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5557  002288  6EDA               	movwf	fsr2h,c
  5558  00228A  0E2E               	movlw	46
  5559  00228C  6EDF               	movwf	indf2,c
  5560                           
  5561                           ; BSR set to: 1
  5562  00228E  4B6B               	infsnz	efgtoa@n& (0+255),f,b
  5563  002290  2B6C               	incf	(efgtoa@n+1)& (0+255),f,b
  5564  002292                     l7424:
  5565                           
  5566                           ; BSR set to: 1
  5567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  5568  002292  0E80               	movlw	low _dbuf
  5569  002294  256B               	addwf	efgtoa@n& (0+255),w,b
  5570  002296  6ED9               	movwf	fsr2l,c
  5571  002298  0E02               	movlw	high _dbuf
  5572  00229A  216C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5573  00229C  6EDA               	movwf	fsr2h,c
  5574  00229E  0E00               	movlw	0
  5575  0022A0  6EDF               	movwf	indf2,c
  5576                           
  5577                           ; BSR set to: 1
  5578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  5579  0022A2  0E65               	movlw	101
  5580  0022A4  1957               	xorwf	efgtoa@nmode& (0+255),w,b
  5581  0022A6  A4D8               	btfss	status,2,c
  5582  0022A8  D47D               	goto	l7236
  5583                           
  5584                           ; BSR set to: 1
  5585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  5586  0022AA  0E00               	movlw	0
  5587  0022AC  6F64               	movwf	(efgtoa@i+1)& (0+255),b
  5588  0022AE  0E4F               	movlw	79
  5589  0022B0  6F63               	movwf	efgtoa@i& (0+255),b
  5590                           
  5591                           ; BSR set to: 1
  5592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  5593  0022B2  0E80               	movlw	low _dbuf
  5594  0022B4  2563               	addwf	efgtoa@i& (0+255),w,b
  5595  0022B6  6ED9               	movwf	fsr2l,c
  5596  0022B8  0E02               	movlw	high _dbuf
  5597  0022BA  2164               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5598  0022BC  6EDA               	movwf	fsr2h,c
  5599  0022BE  0E00               	movlw	0
  5600  0022C0  6EDF               	movwf	indf2,c
  5601                           
  5602                           ; BSR set to: 1
  5603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  5604  0022C2  0E00               	movlw	0
  5605  0022C4  6F54               	movwf	(efgtoa@sign+1)& (0+255),b
  5606  0022C6  0E00               	movlw	0
  5607  0022C8  6F53               	movwf	efgtoa@sign& (0+255),b
  5608                           
  5609                           ; BSR set to: 1
  5610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  5611  0022CA  AF6A               	btfss	(efgtoa@e+1)& (0+255),7,b
  5612  0022CC  D008               	goto	l7440
  5613                           
  5614                           ; BSR set to: 1
  5615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  5616  0022CE  0E00               	movlw	0
  5617  0022D0  6F54               	movwf	(efgtoa@sign+1)& (0+255),b
  5618  0022D2  0E01               	movlw	1
  5619  0022D4  6F53               	movwf	efgtoa@sign& (0+255),b
  5620                           
  5621                           ; BSR set to: 1
  5622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  5623  0022D6  6D69               	negf	efgtoa@e& (0+255),b
  5624  0022D8  1F6A               	comf	(efgtoa@e+1)& (0+255),f,b
  5625  0022DA  B0D8               	btfsc	status,0,c
  5626  0022DC  2B6A               	incf	(efgtoa@e+1)& (0+255),f,b
  5627  0022DE                     l7440:
  5628                           
  5629                           ; BSR set to: 1
  5630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  5631  0022DE  0E00               	movlw	0
  5632  0022E0  6F56               	movwf	(efgtoa@p+1)& (0+255),b
  5633  0022E2  0E02               	movlw	2
  5634  0022E4  6F55               	movwf	efgtoa@p& (0+255),b
  5635                           
  5636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5637  0022E6  D02C               	goto	l7452
  5638  0022E8                     l7442:
  5639                           
  5640                           ; BSR set to: 1
  5641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5642  0022E8  0763               	decf	efgtoa@i& (0+255),f,b
  5643  0022EA  A0D8               	btfss	status,0,c
  5644  0022EC  0764               	decf	(efgtoa@i+1)& (0+255),f,b
  5645                           
  5646                           ; BSR set to: 1
  5647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5648  0022EE  0E80               	movlw	low _dbuf
  5649  0022F0  2563               	addwf	efgtoa@i& (0+255),w,b
  5650  0022F2  6ED9               	movwf	fsr2l,c
  5651  0022F4  0E02               	movlw	high _dbuf
  5652  0022F6  2164               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5653  0022F8  6EDA               	movwf	fsr2h,c
  5654  0022FA  C169  F100         	movff	efgtoa@e,___awmod@dividend
  5655  0022FE  C16A  F101         	movff	efgtoa@e+1,___awmod@dividend+1
  5656  002302  0E00               	movlw	0
  5657  002304  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
  5658  002306  0E0A               	movlw	10
  5659  002308  6F02               	movwf	___awmod@divisor& (0+255),b
  5660  00230A  EC8A  F031         	call	___awmod	;wreg free
  5661  00230E  0101               	movlb	1	; () banked
  5662  002310  5100               	movf	?___awmod& (0+255),w,b
  5663  002312  0F30               	addlw	48
  5664  002314  6EDF               	movwf	indf2,c
  5665                           
  5666                           ; BSR set to: 1
  5667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5668  002316  C169  F100         	movff	efgtoa@e,___awdiv@dividend
  5669  00231A  C16A  F101         	movff	efgtoa@e+1,___awdiv@dividend+1
  5670  00231E  0E00               	movlw	0
  5671  002320  6F03               	movwf	(___awdiv@divisor+1)& (0+255),b
  5672  002322  0E0A               	movlw	10
  5673  002324  6F02               	movwf	___awdiv@divisor& (0+255),b
  5674  002326  EC46  F030         	call	___awdiv	;wreg free
  5675  00232A  C100  F169         	movff	?___awdiv,efgtoa@e
  5676  00232E  C101  F16A         	movff	?___awdiv+1,efgtoa@e+1
  5677                           
  5678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5679  002332  0101               	movlb	1	; () banked
  5680  002334  0755               	decf	efgtoa@p& (0+255),f,b
  5681  002336  A0D8               	btfss	status,0,c
  5682  002338  0756               	decf	(efgtoa@p+1)& (0+255),f,b
  5683                           
  5684                           ; BSR set to: 1
  5685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5686  00233A  0758               	decf	efgtoa@w& (0+255),f,b
  5687  00233C  A0D8               	btfss	status,0,c
  5688  00233E  0759               	decf	(efgtoa@w+1)& (0+255),f,b
  5689  002340                     l7452:
  5690                           
  5691                           ; BSR set to: 1
  5692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5693  002340  5169               	movf	efgtoa@e& (0+255),w,b
  5694  002342  116A               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5695  002344  A4D8               	btfss	status,2,c
  5696  002346  D7D0               	goto	l7442
  5697                           
  5698                           ; BSR set to: 1
  5699  002348  BF56               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5700  00234A  D005               	goto	u10270
  5701  00234C  5156               	movf	(efgtoa@p+1)& (0+255),w,b
  5702  00234E  E1CC               	bnz	l7442
  5703  002350  0555               	decf	efgtoa@p& (0+255),w,b
  5704  002352  B0D8               	btfsc	status,0,c
  5705  002354  D7C9               	goto	l7442
  5706  002356                     u10270:
  5707                           
  5708                           ; BSR set to: 1
  5709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5710  002356  0763               	decf	efgtoa@i& (0+255),f,b
  5711  002358  A0D8               	btfss	status,0,c
  5712  00235A  0764               	decf	(efgtoa@i+1)& (0+255),f,b
  5713                           
  5714                           ; BSR set to: 1
  5715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5716  00235C  5153               	movf	efgtoa@sign& (0+255),w,b
  5717  00235E  1154               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5718  002360  A4D8               	btfss	status,2,c
  5719  002362  D004               	goto	l7462
  5720                           
  5721                           ; BSR set to: 1
  5722  002364  0E00               	movlw	0
  5723  002366  6F44               	movwf	(_efgtoa$1602+1)& (0+255),b
  5724  002368  0E2B               	movlw	43
  5725  00236A  D003               	goto	L3
  5726  00236C                     l7462:
  5727                           
  5728                           ; BSR set to: 1
  5729  00236C  0E00               	movlw	0
  5730  00236E  6F44               	movwf	(_efgtoa$1602+1)& (0+255),b
  5731  002370  0E2D               	movlw	45
  5732  002372                     L3:
  5733  002372  6F43               	movwf	_efgtoa$1602& (0+255),b
  5734                           
  5735                           ; BSR set to: 1
  5736  002374  0E80               	movlw	low _dbuf
  5737  002376  2563               	addwf	efgtoa@i& (0+255),w,b
  5738  002378  6ED9               	movwf	fsr2l,c
  5739  00237A  0E02               	movlw	high _dbuf
  5740  00237C  2164               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5741  00237E  6EDA               	movwf	fsr2h,c
  5742  002380  C143  FFDF         	movff	_efgtoa$1602,indf2
  5743                           
  5744                           ; BSR set to: 1
  5745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5746  002384  0758               	decf	efgtoa@w& (0+255),f,b
  5747  002386  A0D8               	btfss	status,0,c
  5748  002388  0759               	decf	(efgtoa@w+1)& (0+255),f,b
  5749                           
  5750                           ; BSR set to: 1
  5751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5752  00238A  0763               	decf	efgtoa@i& (0+255),f,b
  5753  00238C  A0D8               	btfss	status,0,c
  5754  00238E  0764               	decf	(efgtoa@i+1)& (0+255),f,b
  5755                           
  5756                           ; BSR set to: 1
  5757  002390  0EBF               	movlw	191
  5758  002392  6F34               	movwf	??_efgtoa& (0+255),b
  5759  002394  0EFF               	movlw	255
  5760  002396  6F35               	movwf	(??_efgtoa+1)& (0+255),b
  5761  002398  5133               	movf	efgtoa@c& (0+255),w,b
  5762  00239A  6F36               	movwf	(??_efgtoa+2)& (0+255),b
  5763  00239C  6B37               	clrf	(??_efgtoa+3)& (0+255),b
  5764  00239E  5134               	movf	??_efgtoa& (0+255),w,b
  5765  0023A0  2736               	addwf	(??_efgtoa+2)& (0+255),f,b
  5766  0023A2  5135               	movf	(??_efgtoa+1)& (0+255),w,b
  5767  0023A4  2337               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5768  0023A6  5137               	movf	(??_efgtoa+3)& (0+255),w,b
  5769  0023A8  E106               	bnz	u10290
  5770  0023AA  0E1A               	movlw	26
  5771  0023AC  5D36               	subwf	(??_efgtoa+2)& (0+255),w,b
  5772  0023AE  B0D8               	btfsc	status,0,c
  5773  0023B0  D002               	goto	u10290
  5774  0023B2  0E01               	movlw	1
  5775  0023B4  D001               	goto	u10300
  5776  0023B6                     u10290:
  5777  0023B6  0E00               	movlw	0
  5778  0023B8                     u10300:
  5779  0023B8  6F47               	movwf	_efgtoa$1604& (0+255),b
  5780  0023BA  6B48               	clrf	(_efgtoa$1604+1)& (0+255),b
  5781                           
  5782                           ; BSR set to: 1
  5783  0023BC  5147               	movf	_efgtoa$1604& (0+255),w,b
  5784  0023BE  1148               	iorwf	(_efgtoa$1604+1)& (0+255),w,b
  5785  0023C0  A4D8               	btfss	status,2,c
  5786  0023C2  D004               	goto	l7478
  5787                           
  5788                           ; BSR set to: 1
  5789  0023C4  0E00               	movlw	0
  5790  0023C6  6F46               	movwf	(_efgtoa$1603+1)& (0+255),b
  5791  0023C8  0E65               	movlw	101
  5792  0023CA  D003               	goto	L4
  5793  0023CC                     l7478:
  5794                           
  5795                           ; BSR set to: 1
  5796  0023CC  0E00               	movlw	0
  5797  0023CE  6F46               	movwf	(_efgtoa$1603+1)& (0+255),b
  5798  0023D0  0E45               	movlw	69
  5799  0023D2                     L4:
  5800  0023D2  6F45               	movwf	_efgtoa$1603& (0+255),b
  5801                           
  5802                           ; BSR set to: 1
  5803  0023D4  0E80               	movlw	low _dbuf
  5804  0023D6  2563               	addwf	efgtoa@i& (0+255),w,b
  5805  0023D8  6ED9               	movwf	fsr2l,c
  5806  0023DA  0E02               	movlw	high _dbuf
  5807  0023DC  2164               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5808  0023DE  6EDA               	movwf	fsr2h,c
  5809  0023E0  C145  FFDF         	movff	_efgtoa$1603,indf2
  5810                           
  5811                           ; BSR set to: 1
  5812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5813  0023E4  0758               	decf	efgtoa@w& (0+255),f,b
  5814  0023E6  A0D8               	btfss	status,0,c
  5815  0023E8  0759               	decf	(efgtoa@w+1)& (0+255),f,b
  5816                           
  5817                           ; BSR set to: 1
  5818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5819  0023EA  0E80               	movlw	low _dbuf
  5820  0023EC  256B               	addwf	efgtoa@n& (0+255),w,b
  5821  0023EE  6F00               	movwf	strcpy@dest& (0+255),b
  5822  0023F0  0E02               	movlw	high _dbuf
  5823  0023F2  216C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5824  0023F4  6F01               	movwf	(strcpy@dest+1)& (0+255),b
  5825  0023F6  0E80               	movlw	low _dbuf
  5826  0023F8  2563               	addwf	efgtoa@i& (0+255),w,b
  5827  0023FA  6F02               	movwf	strcpy@src& (0+255),b
  5828  0023FC  0E02               	movlw	high _dbuf
  5829  0023FE  2164               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5830  002400  6F03               	movwf	(strcpy@src+1)& (0+255),b
  5831  002402  EC57  F032         	call	_strcpy	;wreg free
  5832  002406  EFD2  F00D         	goto	l7236
  5833  00240A                     __end_of_efgtoa:
  5834                           	opt callstack 0
  5835                           
  5836 ;; *************** function _tolower *****************
  5837 ;; Defined at:
  5838 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  c               2    6[BANK1 ] int 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  2    6[BANK1 ] int 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5852 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;Total ram usage:        8 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:   14
  5859 ;; This function calls:
  5860 ;;		_isupper
  5861 ;; This function is called by:
  5862 ;;		_efgtoa
  5863 ;;		_vfpfcnvrt
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text10
  5868  0065AA                     __ptext10:
  5869                           	opt callstack 0
  5870  0065AA                     _tolower:
  5871                           	opt callstack 13
  5872                           
  5873                           ;incstack = 0
  5874  0065AA  0EBF               	movlw	191
  5875  0065AC  0101               	movlb	1	; () banked
  5876  0065AE  6F08               	movwf	??_tolower& (0+255),b
  5877  0065B0  0EFF               	movlw	255
  5878  0065B2  6F09               	movwf	(??_tolower+1)& (0+255),b
  5879  0065B4  C106  F10A         	movff	tolower@c,??_tolower+2
  5880  0065B8  C107  F10B         	movff	tolower@c+1,??_tolower+3
  5881  0065BC  5108               	movf	??_tolower& (0+255),w,b
  5882  0065BE  270A               	addwf	(??_tolower+2)& (0+255),f,b
  5883  0065C0  5109               	movf	(??_tolower+1)& (0+255),w,b
  5884  0065C2  230B               	addwfc	(??_tolower+3)& (0+255),f,b
  5885  0065C4  510B               	movf	(??_tolower+3)& (0+255),w,b
  5886  0065C6  E106               	bnz	u8730
  5887  0065C8  0E1A               	movlw	26
  5888  0065CA  5D0A               	subwf	(??_tolower+2)& (0+255),w,b
  5889  0065CC  B0D8               	btfsc	status,0,c
  5890  0065CE  D002               	goto	u8730
  5891  0065D0  0E01               	movlw	1
  5892  0065D2  D001               	goto	u8740
  5893  0065D4                     u8730:
  5894  0065D4  0E00               	movlw	0
  5895  0065D6                     u8740:
  5896  0065D6  6F0C               	movwf	_tolower$2233& (0+255),b
  5897  0065D8  6B0D               	clrf	(_tolower$2233+1)& (0+255),b
  5898                           
  5899                           ; BSR set to: 1
  5900  0065DA  510C               	movf	_tolower$2233& (0+255),w,b
  5901  0065DC  110D               	iorwf	(_tolower$2233+1)& (0+255),w,b
  5902  0065DE  B4D8               	btfsc	status,2,c
  5903  0065E0  D006               	goto	l1644
  5904                           
  5905                           ; BSR set to: 1
  5906  0065E2  0E20               	movlw	32
  5907  0065E4  1106               	iorwf	tolower@c& (0+255),w,b
  5908  0065E6  6F06               	movwf	?_tolower& (0+255),b
  5909  0065E8  5107               	movf	(tolower@c+1)& (0+255),w,b
  5910  0065EA  6F07               	movwf	(?_tolower+1)& (0+255),b
  5911  0065EC  0012               	return	
  5912  0065EE                     l1644:
  5913                           
  5914                           ; BSR set to: 1
  5915  0065EE  C106  F106         	movff	tolower@c,?_tolower
  5916  0065F2  C107  F107         	movff	tolower@c+1,?_tolower+1
  5917                           
  5918                           ; BSR set to: 1
  5919  0065F6  0012               	return		;funcret
  5920  0065F8                     __end_of_tolower:
  5921                           	opt callstack 0
  5922                           
  5923 ;; *************** function _isupper *****************
  5924 ;; Defined at:
  5925 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  c               2    0[BANK1 ] int 
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;		None
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  2    0[BANK1 ] int 
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5939 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5942 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;Total ram usage:        6 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; Hardware stack levels required when called:   13
  5946 ;; This function calls:
  5947 ;;		Nothing
  5948 ;; This function is called by:
  5949 ;;		_efgtoa
  5950 ;;		_vfpfcnvrt
  5951 ;;		_tolower
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text11
  5956  0068E8                     __ptext11:
  5957                           	opt callstack 0
  5958  0068E8                     _isupper:
  5959                           	opt callstack 13
  5960                           
  5961                           ; BSR set to: 1
  5962                           ;incstack = 0
  5963  0068E8  0EBF               	movlw	191
  5964  0068EA  0101               	movlb	1	; () banked
  5965  0068EC  6F02               	movwf	??_isupper& (0+255),b
  5966  0068EE  0EFF               	movlw	255
  5967  0068F0  6F03               	movwf	(??_isupper+1)& (0+255),b
  5968  0068F2  C100  F104         	movff	isupper@c,??_isupper+2
  5969  0068F6  C101  F105         	movff	isupper@c+1,??_isupper+3
  5970  0068FA  5102               	movf	??_isupper& (0+255),w,b
  5971  0068FC  2704               	addwf	(??_isupper+2)& (0+255),f,b
  5972  0068FE  5103               	movf	(??_isupper+1)& (0+255),w,b
  5973  006900  2305               	addwfc	(??_isupper+3)& (0+255),f,b
  5974  006902  5105               	movf	(??_isupper+3)& (0+255),w,b
  5975  006904  E106               	bnz	u7460
  5976  006906  0E1A               	movlw	26
  5977  006908  5D04               	subwf	(??_isupper+2)& (0+255),w,b
  5978  00690A  B0D8               	btfsc	status,0,c
  5979  00690C  D002               	goto	u7460
  5980  00690E  0E01               	movlw	1
  5981  006910  D001               	goto	u7470
  5982  006912                     u7460:
  5983  006912  0E00               	movlw	0
  5984  006914                     u7470:
  5985  006914  6F00               	movwf	?_isupper& (0+255),b
  5986  006916  6B01               	clrf	(?_isupper+1)& (0+255),b
  5987                           
  5988                           ; BSR set to: 1
  5989  006918  0012               	return		;funcret
  5990  00691A                     __end_of_isupper:
  5991                           	opt callstack 0
  5992                           
  5993 ;; *************** function _strcpy *****************
  5994 ;; Defined at:
  5995 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  dest            2    0[BANK1 ] PTR unsigned char 
  5998 ;;		 -> dbuf(80), 
  5999 ;;  src             2    2[BANK1 ] PTR const unsigned char 
  6000 ;;		 -> STR_21(4), STR_20(4), STR_17(4), STR_16(4), 
  6001 ;;		 -> dbuf(80), 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;  d               2    8[BANK1 ] PTR unsigned char 
  6004 ;;		 -> dbuf(80), 
  6005 ;;  s               2    6[BANK1 ] PTR const unsigned char 
  6006 ;;		 -> STR_21(4), STR_20(4), STR_17(4), STR_16(4), 
  6007 ;;		 -> dbuf(80), 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  2    0[BANK1 ] PTR unsigned char 
  6010 ;; Registers used:
  6011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6017 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;Total ram usage:       10 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:   13
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_efgtoa
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text12
  6032  0064AE                     __ptext12:
  6033                           	opt callstack 0
  6034  0064AE                     _strcpy:
  6035                           	opt callstack 13
  6036                           
  6037                           ; BSR set to: 1
  6038                           ;incstack = 0
  6039  0064AE  C102  F106         	movff	strcpy@src,strcpy@s
  6040  0064B2  C103  F107         	movff	strcpy@src+1,strcpy@s+1
  6041  0064B6  C100  F108         	movff	strcpy@dest,strcpy@d
  6042  0064BA  C101  F109         	movff	strcpy@dest+1,strcpy@d+1
  6043  0064BE                     l6568:
  6044  0064BE  0101               	movlb	1	; () banked
  6045  0064C0  5106               	movf	strcpy@s& (0+255),w,b
  6046  0064C2  6F04               	movwf	??_strcpy& (0+255),b
  6047  0064C4  5107               	movf	(strcpy@s+1)& (0+255),w,b
  6048  0064C6  6F05               	movwf	(??_strcpy+1)& (0+255),b
  6049  0064C8  4B06               	infsnz	strcpy@s& (0+255),f,b
  6050  0064CA  2B07               	incf	(strcpy@s+1)& (0+255),f,b
  6051  0064CC  C104  FFF6         	movff	??_strcpy,tblptrl
  6052  0064D0  C105  FFF7         	movff	??_strcpy+1,tblptrh
  6053  0064D4  0E00               	movlw	low (__smallconst shr (0+16))
  6054  0064D6  6EF8               	movwf	tblptru,c
  6055  0064D8  C108  FFD9         	movff	strcpy@d,fsr2l
  6056  0064DC  C109  FFDA         	movff	strcpy@d+1,fsr2h
  6057  0064E0  4B08               	infsnz	strcpy@d& (0+255),f,b
  6058  0064E2  2B09               	incf	(strcpy@d+1)& (0+255),f,b
  6059  0064E4  0E0F               	movlw	(high __ramtop+-1)
  6060  0064E6  64F7               	cpfsgt	tblptrh,c
  6061  0064E8  D003               	bra	u8717
  6062  0064EA  0008               	tblrd		*
  6063  0064EC  50F5               	movf	tablat,w,c
  6064  0064EE  D005               	bra	u8710
  6065  0064F0                     u8717:
  6066  0064F0  CFF6 FFE1          	movff	tblptrl,fsr1l
  6067  0064F4  CFF7 FFE2          	movff	tblptrh,fsr1h
  6068  0064F8  50E7               	movf	indf1,w,c
  6069  0064FA                     u8710:
  6070  0064FA  6EDF               	movwf	indf2,c
  6071  0064FC  50DF               	movf	indf2,w,c
  6072  0064FE  B4D8               	btfsc	status,2,c
  6073  006500  0012               	return	
  6074  006502  D7DD               	goto	l6568
  6075  006504                     __end_of_strcpy:
  6076                           	opt callstack 0
  6077                           
  6078 ;; *************** function _pad *****************
  6079 ;; Defined at:
  6080 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  fp              2   18[BANK1 ] PTR struct _IO_FILE
  6083 ;;		 -> sprintf@f(6), NULL(0), 
  6084 ;;  buf             2   20[BANK1 ] PTR unsigned char 
  6085 ;;		 -> dbuf(80), 
  6086 ;;  p               2   22[BANK1 ] int 
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;  w               2   27[BANK1 ] int 
  6089 ;;  i               2   25[BANK1 ] int 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  2   18[BANK1 ] int 
  6092 ;; Registers used:
  6093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6099 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;Total ram usage:       11 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:   17
  6106 ;; This function calls:
  6107 ;;		_fputc
  6108 ;;		_fputs
  6109 ;;		_strlen
  6110 ;; This function is called by:
  6111 ;;		_efgtoa
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text13
  6116  005C78                     __ptext13:
  6117                           	opt callstack 0
  6118  005C78                     _pad:
  6119                           	opt callstack 9
  6120                           
  6121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6122                           
  6123                           ;incstack = 0
  6124  005C78  0101               	movlb	1	; () banked
  6125  005C7A  A1AB               	btfss	_flags& (0+255),0,b
  6126  005C7C  D00A               	goto	l6526
  6127                           
  6128                           ; BSR set to: 1
  6129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6130  005C7E  C114  F10B         	movff	pad@buf,fputs@s
  6131  005C82  C115  F10C         	movff	pad@buf+1,fputs@s+1
  6132  005C86  C112  F10D         	movff	pad@fp,fputs@fp
  6133  005C8A  C113  F10E         	movff	pad@fp+1,fputs@fp+1
  6134  005C8E  ECE6  F033         	call	_fputs	;wreg free
  6135  005C92                     l6526:
  6136                           
  6137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6138  005C92  0101               	movlb	1	; () banked
  6139  005C94  BF17               	btfsc	(pad@p+1)& (0+255),7,b
  6140  005C96  D005               	goto	l6530
  6141                           
  6142                           ; BSR set to: 1
  6143  005C98  C116  F11B         	movff	pad@p,pad@w
  6144  005C9C  C117  F11C         	movff	pad@p+1,pad@w+1
  6145  005CA0  D004               	goto	l674
  6146  005CA2                     l6530:
  6147                           
  6148                           ; BSR set to: 1
  6149  005CA2  0E00               	movlw	0
  6150  005CA4  6F1C               	movwf	(pad@w+1)& (0+255),b
  6151  005CA6  0E00               	movlw	0
  6152  005CA8  6F1B               	movwf	pad@w& (0+255),b
  6153  005CAA                     l674:
  6154                           
  6155                           ; BSR set to: 1
  6156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6157  005CAA  0E00               	movlw	0
  6158  005CAC  6F1A               	movwf	(pad@i+1)& (0+255),b
  6159  005CAE  0E00               	movlw	0
  6160  005CB0  6F19               	movwf	pad@i& (0+255),b
  6161                           
  6162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6163  005CB2  D00D               	goto	l6536
  6164  005CB4                     l6532:
  6165                           
  6166                           ; BSR set to: 1
  6167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6168  005CB4  0E00               	movlw	0
  6169  005CB6  6F03               	movwf	(fputc@c+1)& (0+255),b
  6170  005CB8  0E20               	movlw	32
  6171  005CBA  6F02               	movwf	fputc@c& (0+255),b
  6172  005CBC  C112  F104         	movff	pad@fp,fputc@fp
  6173  005CC0  C113  F105         	movff	pad@fp+1,fputc@fp+1
  6174  005CC4  EC9B  F02D         	call	_fputc	;wreg free
  6175                           
  6176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6177  005CC8  0101               	movlb	1	; () banked
  6178  005CCA  4B19               	infsnz	pad@i& (0+255),f,b
  6179  005CCC  2B1A               	incf	(pad@i+1)& (0+255),f,b
  6180  005CCE                     l6536:
  6181                           
  6182                           ; BSR set to: 1
  6183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6184  005CCE  511B               	movf	pad@w& (0+255),w,b
  6185  005CD0  5D19               	subwf	pad@i& (0+255),w,b
  6186  005CD2  511A               	movf	(pad@i+1)& (0+255),w,b
  6187  005CD4  0A80               	xorlw	128
  6188  005CD6  6F18               	movwf	??_pad& (0+255),b
  6189  005CD8  511C               	movf	(pad@w+1)& (0+255),w,b
  6190  005CDA  0A80               	xorlw	128
  6191  005CDC  5918               	subwfb	??_pad& (0+255),w,b
  6192  005CDE  A0D8               	btfss	status,0,c
  6193  005CE0  D7E9               	goto	l6532
  6194                           
  6195                           ; BSR set to: 1
  6196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6197  005CE2  B1AB               	btfsc	_flags& (0+255),0,b
  6198  005CE4  D00A               	goto	l6540
  6199                           
  6200                           ; BSR set to: 1
  6201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6202  005CE6  C114  F10B         	movff	pad@buf,fputs@s
  6203  005CEA  C115  F10C         	movff	pad@buf+1,fputs@s+1
  6204  005CEE  C112  F10D         	movff	pad@fp,fputs@fp
  6205  005CF2  C113  F10E         	movff	pad@fp+1,fputs@fp+1
  6206  005CF6  ECE6  F033         	call	_fputs	;wreg free
  6207  005CFA                     l6540:
  6208                           
  6209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6210  005CFA  C114  F100         	movff	pad@buf,strlen@s
  6211  005CFE  C115  F101         	movff	pad@buf+1,strlen@s+1
  6212  005D02  ECEE  F034         	call	_strlen	;wreg free
  6213  005D06  0101               	movlb	1	; () banked
  6214  005D08  511B               	movf	pad@w& (0+255),w,b
  6215  005D0A  2500               	addwf	?_strlen& (0+255),w,b
  6216  005D0C  6F12               	movwf	?_pad& (0+255),b
  6217  005D0E  511C               	movf	(pad@w+1)& (0+255),w,b
  6218  005D10  2101               	addwfc	(?_strlen+1)& (0+255),w,b
  6219  005D12  6F13               	movwf	(?_pad+1)& (0+255),b
  6220                           
  6221                           ; BSR set to: 1
  6222  005D14  0012               	return		;funcret
  6223  005D16                     __end_of_pad:
  6224                           	opt callstack 0
  6225                           
  6226 ;; *************** function _strlen *****************
  6227 ;; Defined at:
  6228 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  s               2    0[BANK1 ] PTR const unsigned char 
  6231 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(80), 
  6232 ;;		 -> dataLogRead@readOutT(5), readData(4), tempRead(2), adafruit@rh_code(4), 
  6233 ;;		 -> stringArry(64), 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  a               2    2[BANK1 ] PTR const unsigned char 
  6236 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(80), 
  6237 ;;		 -> dataLogRead@readOutT(5), readData(4), tempRead(2), adafruit@rh_code(4), 
  6238 ;;		 -> stringArry(64), 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  2    0[BANK1 ] unsigned int 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6248 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;Total ram usage:        4 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:   13
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_pad
  6259 ;;		_stoa
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text14
  6264  0069DC                     __ptext14:
  6265                           	opt callstack 0
  6266  0069DC                     _strlen:
  6267                           	opt callstack 13
  6268                           
  6269                           ; BSR set to: 1
  6270                           ;incstack = 0
  6271  0069DC  C100  F102         	movff	strlen@s,strlen@a
  6272  0069E0  C101  F103         	movff	strlen@s+1,strlen@a+1
  6273  0069E4  D003               	goto	l5908
  6274  0069E6                     l5906:
  6275  0069E6  0101               	movlb	1	; () banked
  6276  0069E8  4B00               	infsnz	strlen@s& (0+255),f,b
  6277  0069EA  2B01               	incf	(strlen@s+1)& (0+255),f,b
  6278  0069EC                     l5908:
  6279  0069EC  C100  FFD9         	movff	strlen@s,fsr2l
  6280  0069F0  C101  FFDA         	movff	strlen@s+1,fsr2h
  6281  0069F4  50DF               	movf	indf2,w,c
  6282  0069F6  A4D8               	btfss	status,2,c
  6283  0069F8  D7F6               	goto	l5906
  6284  0069FA  0101               	movlb	1	; () banked
  6285  0069FC  5102               	movf	strlen@a& (0+255),w,b
  6286  0069FE  5D00               	subwf	strlen@s& (0+255),w,b
  6287  006A00  6F00               	movwf	?_strlen& (0+255),b
  6288  006A02  5103               	movf	(strlen@a+1)& (0+255),w,b
  6289  006A04  5901               	subwfb	(strlen@s+1)& (0+255),w,b
  6290  006A06  6F01               	movwf	(?_strlen+1)& (0+255),b
  6291                           
  6292                           ; BSR set to: 1
  6293  006A08  0012               	return		;funcret
  6294  006A0A                     __end_of_strlen:
  6295                           	opt callstack 0
  6296                           
  6297 ;; *************** function _fputs *****************
  6298 ;; Defined at:
  6299 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  s               2   11[BANK1 ] PTR const unsigned char 
  6302 ;;		 -> dbuf(80), 
  6303 ;;  fp              2   13[BANK1 ] PTR struct _IO_FILE
  6304 ;;		 -> sprintf@f(6), NULL(0), 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  i               2   16[BANK1 ] int 
  6307 ;;  c               1   15[BANK1 ] unsigned char 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  2   11[BANK1 ] int 
  6310 ;; Registers used:
  6311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6317 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;Total ram usage:        7 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:   16
  6324 ;; This function calls:
  6325 ;;		_fputc
  6326 ;; This function is called by:
  6327 ;;		_pad
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text15
  6332  0067CC                     __ptext15:
  6333                           	opt callstack 0
  6334  0067CC                     _fputs:
  6335                           	opt callstack 9
  6336                           
  6337                           ; BSR set to: 1
  6338                           ;incstack = 0
  6339  0067CC  0E00               	movlw	0
  6340  0067CE  0101               	movlb	1	; () banked
  6341  0067D0  6F11               	movwf	(fputs@i+1)& (0+255),b
  6342  0067D2  0E00               	movlw	0
  6343  0067D4  6F10               	movwf	fputs@i& (0+255),b
  6344  0067D6  D00C               	goto	l5902
  6345  0067D8                     l5898:
  6346                           
  6347                           ; BSR set to: 1
  6348  0067D8  C10F  F102         	movff	fputs@c,fputc@c
  6349  0067DC  6B03               	clrf	(fputc@c+1)& (0+255),b
  6350  0067DE  C10D  F104         	movff	fputs@fp,fputc@fp
  6351  0067E2  C10E  F105         	movff	fputs@fp+1,fputc@fp+1
  6352  0067E6  EC9B  F02D         	call	_fputc	;wreg free
  6353  0067EA  0101               	movlb	1	; () banked
  6354  0067EC  4B10               	infsnz	fputs@i& (0+255),f,b
  6355  0067EE  2B11               	incf	(fputs@i+1)& (0+255),f,b
  6356  0067F0                     l5902:
  6357                           
  6358                           ; BSR set to: 1
  6359  0067F0  5110               	movf	fputs@i& (0+255),w,b
  6360  0067F2  250B               	addwf	fputs@s& (0+255),w,b
  6361  0067F4  6ED9               	movwf	fsr2l,c
  6362  0067F6  5111               	movf	(fputs@i+1)& (0+255),w,b
  6363  0067F8  210C               	addwfc	(fputs@s+1)& (0+255),w,b
  6364  0067FA  6EDA               	movwf	fsr2h,c
  6365  0067FC  50DF               	movf	indf2,w,c
  6366  0067FE  6F0F               	movwf	fputs@c& (0+255),b
  6367  006800  510F               	movf	fputs@c& (0+255),w,b
  6368  006802  B4D8               	btfsc	status,2,c
  6369  006804  0012               	return	
  6370  006806  D7E8               	goto	l5898
  6371  006808                     __end_of_fputs:
  6372                           	opt callstack 0
  6373                           
  6374 ;; *************** function _fputc *****************
  6375 ;; Defined at:
  6376 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  c               2    2[BANK1 ] int 
  6379 ;;  fp              2    4[BANK1 ] PTR struct _IO_FILE
  6380 ;;		 -> sprintf@f(6), NULL(0), 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  2    2[BANK1 ] int 
  6385 ;; Registers used:
  6386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6392 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6396 ;;Total ram usage:        9 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:   15
  6399 ;; This function calls:
  6400 ;;		_putch
  6401 ;; This function is called by:
  6402 ;;		_pad
  6403 ;;		_stoa
  6404 ;;		_vfpfcnvrt
  6405 ;;		_fputs
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text16
  6410  005B36                     __ptext16:
  6411                           	opt callstack 0
  6412  005B36                     _fputc:
  6413                           	opt callstack 11
  6414                           
  6415                           ; BSR set to: 1
  6416                           ;incstack = 0
  6417  005B36  0101               	movlb	1	; () banked
  6418  005B38  5104               	movf	fputc@fp& (0+255),w,b
  6419  005B3A  1105               	iorwf	(fputc@fp+1)& (0+255),w,b
  6420  005B3C  B4D8               	btfsc	status,2,c
  6421  005B3E  D004               	goto	u6410
  6422                           
  6423                           ; BSR set to: 1
  6424  005B40  5104               	movf	fputc@fp& (0+255),w,b
  6425  005B42  1105               	iorwf	(fputc@fp+1)& (0+255),w,b
  6426  005B44  A4D8               	btfss	status,2,c
  6427  005B46  D004               	goto	l5336
  6428  005B48                     u6410:
  6429                           
  6430                           ; BSR set to: 1
  6431  005B48  5102               	movf	fputc@c& (0+255),w,b
  6432  005B4A  EC6C  F036         	call	_putch
  6433  005B4E  0012               	return	
  6434  005B50                     l5336:
  6435                           
  6436                           ; BSR set to: 1
  6437  005B50  EE20 F004          	lfsr	2,4
  6438  005B54  5104               	movf	fputc@fp& (0+255),w,b
  6439  005B56  26D9               	addwf	fsr2l,f,c
  6440  005B58  5105               	movf	(fputc@fp+1)& (0+255),w,b
  6441  005B5A  22DA               	addwfc	fsr2h,f,c
  6442  005B5C  50DE               	movf	postinc2,w,c
  6443  005B5E  10DE               	iorwf	postinc2,w,c
  6444  005B60  B4D8               	btfsc	status,2,c
  6445  005B62  D016               	goto	u6430
  6446                           
  6447                           ; BSR set to: 1
  6448  005B64  EE20 F004          	lfsr	2,4
  6449  005B68  5104               	movf	fputc@fp& (0+255),w,b
  6450  005B6A  26D9               	addwf	fsr2l,f,c
  6451  005B6C  5105               	movf	(fputc@fp+1)& (0+255),w,b
  6452  005B6E  22DA               	addwfc	fsr2h,f,c
  6453  005B70  EE10 F002          	lfsr	1,2
  6454  005B74  5104               	movf	fputc@fp& (0+255),w,b
  6455  005B76  26E1               	addwf	fsr1l,f,c
  6456  005B78  5105               	movf	(fputc@fp+1)& (0+255),w,b
  6457  005B7A  22E2               	addwfc	fsr1h,f,c
  6458  005B7C  50DE               	movf	postinc2,w,c
  6459  005B7E  5CE6               	subwf	postinc1,w,c
  6460  005B80  50E6               	movf	postinc1,w,c
  6461  005B82  0A80               	xorlw	128
  6462  005B84  6F0A               	movwf	(??_fputc+4)& (0+255),b
  6463  005B86  50DE               	movf	postinc2,w,c
  6464  005B88  0A80               	xorlw	128
  6465  005B8A  590A               	subwfb	(??_fputc+4)& (0+255),w,b
  6466  005B8C  B0D8               	btfsc	status,0,c
  6467  005B8E  0012               	return	
  6468  005B90                     u6430:
  6469                           
  6470                           ; BSR set to: 1
  6471  005B90  EE20 F002          	lfsr	2,2
  6472  005B94  5104               	movf	fputc@fp& (0+255),w,b
  6473  005B96  26D9               	addwf	fsr2l,f,c
  6474  005B98  5105               	movf	(fputc@fp+1)& (0+255),w,b
  6475  005B9A  22DA               	addwfc	fsr2h,f,c
  6476  005B9C  CFDE F106          	movff	postinc2,??_fputc
  6477  005BA0  CFDD F107          	movff	postdec2,??_fputc+1
  6478  005BA4  C104  FFD9         	movff	fputc@fp,fsr2l
  6479  005BA8  C105  FFDA         	movff	fputc@fp+1,fsr2h
  6480  005BAC  CFDE F108          	movff	postinc2,??_fputc+2
  6481  005BB0  CFDD F109          	movff	postdec2,??_fputc+3
  6482  005BB4  5106               	movf	??_fputc& (0+255),w,b
  6483  005BB6  2508               	addwf	(??_fputc+2)& (0+255),w,b
  6484  005BB8  6ED9               	movwf	fsr2l,c
  6485  005BBA  5107               	movf	(??_fputc+1)& (0+255),w,b
  6486  005BBC  2109               	addwfc	(??_fputc+3)& (0+255),w,b
  6487  005BBE  6EDA               	movwf	fsr2h,c
  6488  005BC0  C102  FFDF         	movff	fputc@c,indf2
  6489  005BC4  EE20 F002          	lfsr	2,2
  6490  005BC8  5104               	movf	fputc@fp& (0+255),w,b
  6491  005BCA  26D9               	addwf	fsr2l,f,c
  6492  005BCC  5105               	movf	(fputc@fp+1)& (0+255),w,b
  6493  005BCE  22DA               	addwfc	fsr2h,f,c
  6494  005BD0  2ADE               	incf	postinc2,f,c
  6495  005BD2  0E00               	movlw	0
  6496  005BD4  22DD               	addwfc	postdec2,f,c
  6497  005BD6  0012               	return		;funcret
  6498  005BD8                     __end_of_fputc:
  6499                           	opt callstack 0
  6500                           
  6501 ;; *************** function _putch *****************
  6502 ;; Defined at:
  6503 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  txData          1    wreg     unsigned char 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  txData          1    1[BANK1 ] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      void 
  6510 ;; Registers used:
  6511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;Total ram usage:        1 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:   14
  6524 ;; This function calls:
  6525 ;;		_EUSART1_Write
  6526 ;; This function is called by:
  6527 ;;		_fputc
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text17
  6532  006CD8                     __ptext17:
  6533                           	opt callstack 0
  6534  006CD8                     _putch:
  6535                           	opt callstack 11
  6536                           
  6537                           ;incstack = 0
  6538                           ;putch@txData stored from wreg
  6539  006CD8  0101               	movlb	1	; () banked
  6540  006CDA  6F01               	movwf	putch@txData& (0+255),b
  6541                           
  6542                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  6543  006CDC  0101               	movlb	1	; () banked
  6544  006CDE  5101               	movf	putch@txData& (0+255),w,b
  6545  006CE0  EC04  F034         	call	_EUSART1_Write
  6546  006CE4  0012               	return		;funcret
  6547  006CE6                     __end_of_putch:
  6548                           	opt callstack 0
  6549                           
  6550 ;; *************** function _EUSART1_Write *****************
  6551 ;; Defined at:
  6552 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  txData          1    wreg     unsigned char 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  txData          1    0[BANK1 ] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      void 
  6559 ;; Registers used:
  6560 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;Total ram usage:        1 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:   13
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_putch
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           	psect	text18
  6581  006808                     __ptext18:
  6582                           	opt callstack 0
  6583  006808                     _EUSART1_Write:
  6584                           	opt callstack 11
  6585                           
  6586                           ;incstack = 0
  6587                           ;EUSART1_Write@txData stored from wreg
  6588  006808  0101               	movlb	1	; () banked
  6589  00680A  6F00               	movwf	EUSART1_Write@txData& (0+255),b
  6590  00680C                     
  6591                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  6592                           
  6593                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  6594  00680C  0101               	movlb	1	; () banked
  6595  00680E  51C8               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  6596  006810  B4D8               	btfsc	status,2,c
  6597  006812  D7FC               	goto	l5072
  6598                           
  6599                           ; BSR set to: 1
  6600                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  6601  006814  B89D               	btfsc	3997,4,c	;volatile
  6602  006816  D003               	goto	l161
  6603                           
  6604                           ; BSR set to: 1
  6605                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  6606  006818  C100  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6607                           
  6608                           ;mcc_generated_files/eusart1.c: 182:     }
  6609  00681C  D010               	goto	l5088
  6610  00681E                     l161:
  6611                           
  6612                           ; BSR set to: 1
  6613                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  6614  00681E  989D               	bcf	3997,4,c	;volatile
  6615                           
  6616                           ; BSR set to: 1
  6617                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  6618  006820  0E40               	movlw	low _eusart1TxBuffer
  6619  006822  25CA               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  6620  006824  6ED9               	movwf	fsr2l,c
  6621  006826  6ADA               	clrf	fsr2h,c
  6622  006828  0E02               	movlw	high _eusart1TxBuffer
  6623  00682A  22DA               	addwfc	fsr2h,f,c
  6624  00682C  C100  FFDF         	movff	EUSART1_Write@txData,indf2
  6625                           
  6626                           ; BSR set to: 1
  6627  006830  2BCA               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  6628                           
  6629                           ; BSR set to: 1
  6630                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  6631  006832  0E3F               	movlw	63
  6632  006834  65CA               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  6633  006836  D002               	goto	l5086
  6634                           
  6635                           ; BSR set to: 1
  6636                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  6637  006838  0E00               	movlw	0
  6638  00683A  6FCA               	movwf	_eusart1TxHead& (0+255),b	;volatile
  6639  00683C                     l5086:
  6640                           
  6641                           ; BSR set to: 1
  6642                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  6643  00683C  07C8               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6644  00683E                     l5088:
  6645                           
  6646                           ; BSR set to: 1
  6647                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  6648  00683E  889D               	bsf	3997,4,c	;volatile
  6649                           
  6650                           ; BSR set to: 1
  6651  006840  0012               	return		;funcret
  6652  006842                     __end_of_EUSART1_Write:
  6653                           	opt callstack 0
  6654                           
  6655 ;; *************** function _floorf *****************
  6656 ;; Defined at:
  6657 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  x               4   25[BANK1 ] float 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  u               4   41[BANK1 ] struct .
  6662 ;;  m               4   35[BANK1 ] unsigned long 
  6663 ;;  e               2   39[BANK1 ] int 
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  4   25[BANK1 ] float 
  6666 ;; Registers used:
  6667 ;;		wreg, status,2, status,0
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6673 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;Total ram usage:       20 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:   13
  6680 ;; This function calls:
  6681 ;;		Nothing
  6682 ;; This function is called by:
  6683 ;;		_efgtoa
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text19
  6688  0046B0                     __ptext19:
  6689                           	opt callstack 0
  6690  0046B0                     _floorf:
  6691                           	opt callstack 13
  6692                           
  6693                           ; BSR set to: 1
  6694                           ;incstack = 0
  6695  0046B0  C19D  F129         	movff	floorf@F524,floorf@u
  6696  0046B4  C19E  F12A         	movff	floorf@F524+1,floorf@u+1
  6697  0046B8  C19F  F12B         	movff	floorf@F524+2,floorf@u+2
  6698  0046BC  C1A0  F12C         	movff	floorf@F524+3,floorf@u+3
  6699  0046C0  C119  F129         	movff	floorf@x,floorf@u
  6700  0046C4  C11A  F12A         	movff	floorf@x+1,floorf@u+1
  6701  0046C8  C11B  F12B         	movff	floorf@x+2,floorf@u+2
  6702  0046CC  C11C  F12C         	movff	floorf@x+3,floorf@u+3
  6703  0046D0  0E81               	movlw	129
  6704  0046D2  0101               	movlb	1	; () banked
  6705  0046D4  6F1D               	movwf	??_floorf& (0+255),b
  6706  0046D6  0EFF               	movlw	255
  6707  0046D8  6F1E               	movwf	(??_floorf+1)& (0+255),b
  6708  0046DA  C129  F11F         	movff	floorf@u,??_floorf+2
  6709  0046DE  C12A  F120         	movff	floorf@u+1,??_floorf+3
  6710  0046E2  C12B  F121         	movff	floorf@u+2,??_floorf+4
  6711  0046E6  C12C  F122         	movff	floorf@u+3,??_floorf+5
  6712  0046EA  0E18               	movlw	24
  6713  0046EC  D005               	goto	u8760
  6714  0046EE                     u8765:
  6715  0046EE  90D8               	bcf	status,0,c
  6716  0046F0  3322               	rrcf	(??_floorf+5)& (0+255),f,b
  6717  0046F2  3321               	rrcf	(??_floorf+4)& (0+255),f,b
  6718  0046F4  3320               	rrcf	(??_floorf+3)& (0+255),f,b
  6719  0046F6  331F               	rrcf	(??_floorf+2)& (0+255),f,b
  6720  0046F8                     u8760:
  6721  0046F8  2EE8               	decfsz	wreg,f,c
  6722  0046FA  D7F9               	goto	u8765
  6723  0046FC  511F               	movf	(??_floorf+2)& (0+255),w,b
  6724  0046FE  251D               	addwf	??_floorf& (0+255),w,b
  6725  004700  6F27               	movwf	floorf@e& (0+255),b
  6726  004702  0E00               	movlw	0
  6727  004704  211E               	addwfc	(??_floorf+1)& (0+255),w,b
  6728  004706  6F28               	movwf	(floorf@e+1)& (0+255),b
  6729  004708  BF28               	btfsc	(floorf@e+1)& (0+255),7,b
  6730  00470A  D00F               	goto	l6586
  6731  00470C  5128               	movf	(floorf@e+1)& (0+255),w,b
  6732  00470E  E104               	bnz	u8770
  6733  004710  0E17               	movlw	23
  6734  004712  5D27               	subwf	floorf@e& (0+255),w,b
  6735  004714  A0D8               	btfss	status,0,c
  6736  004716  D009               	goto	l6586
  6737  004718                     u8770:
  6738                           
  6739                           ; BSR set to: 1
  6740  004718  C119  F119         	movff	floorf@x,?_floorf
  6741  00471C  C11A  F11A         	movff	floorf@x+1,?_floorf+1
  6742  004720  C11B  F11B         	movff	floorf@x+2,?_floorf+2
  6743  004724  C11C  F11C         	movff	floorf@x+3,?_floorf+3
  6744  004728  0012               	return	
  6745  00472A                     l6586:
  6746                           
  6747                           ; BSR set to: 1
  6748  00472A  BF28               	btfsc	(floorf@e+1)& (0+255),7,b
  6749  00472C  D05F               	goto	l6596
  6750                           
  6751                           ; BSR set to: 1
  6752  00472E  C127  F11D         	movff	floorf@e,??_floorf
  6753  004732  0EFF               	movlw	255
  6754  004734  6F1E               	movwf	(??_floorf+1)& (0+255),b
  6755  004736  0EFF               	movlw	255
  6756  004738  6F1F               	movwf	(??_floorf+2)& (0+255),b
  6757  00473A  0E7F               	movlw	127
  6758  00473C  6F20               	movwf	(??_floorf+3)& (0+255),b
  6759  00473E  0E00               	movlw	0
  6760  004740  6F21               	movwf	(??_floorf+4)& (0+255),b
  6761  004742                     u8795:
  6762  004742  671D               	tstfsz	??_floorf& (0+255),b
  6763  004744  D001               	goto	u8796
  6764  004746  D007               	goto	u8797
  6765  004748                     u8796:
  6766  004748  3521               	rlcf	(??_floorf+4)& (0+255),w,b
  6767  00474A  3321               	rrcf	(??_floorf+4)& (0+255),f,b
  6768  00474C  3320               	rrcf	(??_floorf+3)& (0+255),f,b
  6769  00474E  331F               	rrcf	(??_floorf+2)& (0+255),f,b
  6770  004750  331E               	rrcf	(??_floorf+1)& (0+255),f,b
  6771  004752  2F1D               	decfsz	??_floorf& (0+255),f,b
  6772  004754  D7F6               	goto	u8795
  6773  004756                     u8797:
  6774  004756  C11E  F123         	movff	??_floorf+1,floorf@m
  6775  00475A  C11F  F124         	movff	??_floorf+2,floorf@m+1
  6776  00475E  C120  F125         	movff	??_floorf+3,floorf@m+2
  6777  004762  C121  F126         	movff	??_floorf+4,floorf@m+3
  6778  004766  0101               	movlb	1	; () banked
  6779  004768  5123               	movf	floorf@m& (0+255),w,b
  6780  00476A  1529               	andwf	floorf@u& (0+255),w,b
  6781  00476C  6F1D               	movwf	??_floorf& (0+255),b
  6782  00476E  5124               	movf	(floorf@m+1)& (0+255),w,b
  6783  004770  152A               	andwf	(floorf@u+1)& (0+255),w,b
  6784  004772  6F1E               	movwf	(??_floorf+1)& (0+255),b
  6785  004774  5125               	movf	(floorf@m+2)& (0+255),w,b
  6786  004776  152B               	andwf	(floorf@u+2)& (0+255),w,b
  6787  004778  6F1F               	movwf	(??_floorf+2)& (0+255),b
  6788  00477A  5126               	movf	(floorf@m+3)& (0+255),w,b
  6789  00477C  152C               	andwf	(floorf@u+3)& (0+255),w,b
  6790  00477E  6F20               	movwf	(??_floorf+3)& (0+255),b
  6791  004780  511D               	movf	??_floorf& (0+255),w,b
  6792  004782  111E               	iorwf	(??_floorf+1)& (0+255),w,b
  6793  004784  111F               	iorwf	(??_floorf+2)& (0+255),w,b
  6794  004786  1120               	iorwf	(??_floorf+3)& (0+255),w,b
  6795  004788  B4D8               	btfsc	status,2,c
  6796  00478A  D7C6               	goto	u8770
  6797                           
  6798                           ; BSR set to: 1
  6799  00478C  C129  F11D         	movff	floorf@u,??_floorf
  6800  004790  C12A  F11E         	movff	floorf@u+1,??_floorf+1
  6801  004794  C12B  F11F         	movff	floorf@u+2,??_floorf+2
  6802  004798  C12C  F120         	movff	floorf@u+3,??_floorf+3
  6803  00479C  0E20               	movlw	32
  6804  00479E  D005               	goto	u8810
  6805  0047A0                     u8815:
  6806  0047A0  90D8               	bcf	status,0,c
  6807  0047A2  3320               	rrcf	(??_floorf+3)& (0+255),f,b
  6808  0047A4  331F               	rrcf	(??_floorf+2)& (0+255),f,b
  6809  0047A6  331E               	rrcf	(??_floorf+1)& (0+255),f,b
  6810  0047A8  331D               	rrcf	??_floorf& (0+255),f,b
  6811  0047AA                     u8810:
  6812  0047AA  2EE8               	decfsz	wreg,f,c
  6813  0047AC  D7F9               	goto	u8815
  6814  0047AE  511D               	movf	??_floorf& (0+255),w,b
  6815  0047B0  111E               	iorwf	(??_floorf+1)& (0+255),w,b
  6816  0047B2  111F               	iorwf	(??_floorf+2)& (0+255),w,b
  6817  0047B4  1120               	iorwf	(??_floorf+3)& (0+255),w,b
  6818  0047B6  B4D8               	btfsc	status,2,c
  6819  0047B8  D008               	goto	l1550
  6820                           
  6821                           ; BSR set to: 1
  6822  0047BA  5123               	movf	floorf@m& (0+255),w,b
  6823  0047BC  2729               	addwf	floorf@u& (0+255),f,b
  6824  0047BE  5124               	movf	(floorf@m+1)& (0+255),w,b
  6825  0047C0  232A               	addwfc	(floorf@u+1)& (0+255),f,b
  6826  0047C2  5125               	movf	(floorf@m+2)& (0+255),w,b
  6827  0047C4  232B               	addwfc	(floorf@u+2)& (0+255),f,b
  6828  0047C6  5126               	movf	(floorf@m+3)& (0+255),w,b
  6829  0047C8  232C               	addwfc	(floorf@u+3)& (0+255),f,b
  6830  0047CA                     l1550:
  6831                           
  6832                           ; BSR set to: 1
  6833  0047CA  1D23               	comf	floorf@m& (0+255),w,b
  6834  0047CC  6F1D               	movwf	??_floorf& (0+255),b
  6835  0047CE  1D24               	comf	(floorf@m+1)& (0+255),w,b
  6836  0047D0  6F1E               	movwf	(??_floorf+1)& (0+255),b
  6837  0047D2  1D25               	comf	(floorf@m+2)& (0+255),w,b
  6838  0047D4  6F1F               	movwf	(??_floorf+2)& (0+255),b
  6839  0047D6  1D26               	comf	(floorf@m+3)& (0+255),w,b
  6840  0047D8  6F20               	movwf	(??_floorf+3)& (0+255),b
  6841  0047DA  511D               	movf	??_floorf& (0+255),w,b
  6842  0047DC  1729               	andwf	floorf@u& (0+255),f,b
  6843  0047DE  511E               	movf	(??_floorf+1)& (0+255),w,b
  6844  0047E0  172A               	andwf	(floorf@u+1)& (0+255),f,b
  6845  0047E2  511F               	movf	(??_floorf+2)& (0+255),w,b
  6846  0047E4  172B               	andwf	(floorf@u+2)& (0+255),f,b
  6847  0047E6  5120               	movf	(??_floorf+3)& (0+255),w,b
  6848  0047E8  172C               	andwf	(floorf@u+3)& (0+255),f,b
  6849  0047EA  D036               	goto	l6604
  6850  0047EC                     l6596:
  6851                           
  6852                           ; BSR set to: 1
  6853  0047EC  C129  F11D         	movff	floorf@u,??_floorf
  6854  0047F0  C12A  F11E         	movff	floorf@u+1,??_floorf+1
  6855  0047F4  C12B  F11F         	movff	floorf@u+2,??_floorf+2
  6856  0047F8  C12C  F120         	movff	floorf@u+3,??_floorf+3
  6857  0047FC  0E20               	movlw	32
  6858  0047FE  D005               	goto	u8830
  6859  004800                     u8835:
  6860  004800  90D8               	bcf	status,0,c
  6861  004802  3320               	rrcf	(??_floorf+3)& (0+255),f,b
  6862  004804  331F               	rrcf	(??_floorf+2)& (0+255),f,b
  6863  004806  331E               	rrcf	(??_floorf+1)& (0+255),f,b
  6864  004808  331D               	rrcf	??_floorf& (0+255),f,b
  6865  00480A                     u8830:
  6866  00480A  2EE8               	decfsz	wreg,f,c
  6867  00480C  D7F9               	goto	u8835
  6868  00480E  511D               	movf	??_floorf& (0+255),w,b
  6869  004810  111E               	iorwf	(??_floorf+1)& (0+255),w,b
  6870  004812  111F               	iorwf	(??_floorf+2)& (0+255),w,b
  6871  004814  1120               	iorwf	(??_floorf+3)& (0+255),w,b
  6872  004816  A4D8               	btfss	status,2,c
  6873  004818  D008               	goto	l6600
  6874                           
  6875                           ; BSR set to: 1
  6876  00481A  0E00               	movlw	0
  6877  00481C  6F29               	movwf	floorf@u& (0+255),b
  6878  00481E  0E00               	movlw	0
  6879  004820  6F2A               	movwf	(floorf@u+1)& (0+255),b
  6880  004822  0E00               	movlw	0
  6881  004824  6F2B               	movwf	(floorf@u+2)& (0+255),b
  6882  004826  0E00               	movlw	0
  6883  004828  D016               	goto	L5
  6884  00482A                     l6600:
  6885                           
  6886                           ; BSR set to: 1
  6887  00482A  90D8               	bcf	status,0,c
  6888  00482C  3529               	rlcf	floorf@u& (0+255),w,b
  6889  00482E  6F1D               	movwf	??_floorf& (0+255),b
  6890  004830  352A               	rlcf	(floorf@u+1)& (0+255),w,b
  6891  004832  6F1E               	movwf	(??_floorf+1)& (0+255),b
  6892  004834  352B               	rlcf	(floorf@u+2)& (0+255),w,b
  6893  004836  6F1F               	movwf	(??_floorf+2)& (0+255),b
  6894  004838  352C               	rlcf	(floorf@u+3)& (0+255),w,b
  6895  00483A  6F20               	movwf	(??_floorf+3)& (0+255),b
  6896  00483C  511D               	movf	??_floorf& (0+255),w,b
  6897  00483E  111E               	iorwf	(??_floorf+1)& (0+255),w,b
  6898  004840  111F               	iorwf	(??_floorf+2)& (0+255),w,b
  6899  004842  1120               	iorwf	(??_floorf+3)& (0+255),w,b
  6900  004844  B4D8               	btfsc	status,2,c
  6901  004846  D008               	goto	l6604
  6902                           
  6903                           ; BSR set to: 1
  6904  004848  0E00               	movlw	0
  6905  00484A  6F29               	movwf	floorf@u& (0+255),b
  6906  00484C  0E00               	movlw	0
  6907  00484E  6F2A               	movwf	(floorf@u+1)& (0+255),b
  6908  004850  0E80               	movlw	128
  6909  004852  6F2B               	movwf	(floorf@u+2)& (0+255),b
  6910  004854  0EBF               	movlw	191
  6911  004856                     L5:
  6912  004856  6F2C               	movwf	(floorf@u+3)& (0+255),b
  6913  004858                     l6604:
  6914                           
  6915                           ; BSR set to: 1
  6916  004858  C129  F119         	movff	floorf@u,?_floorf
  6917  00485C  C12A  F11A         	movff	floorf@u+1,?_floorf+1
  6918  004860  C12B  F11B         	movff	floorf@u+2,?_floorf+2
  6919  004864  C12C  F11C         	movff	floorf@u+3,?_floorf+3
  6920                           
  6921                           ; BSR set to: 1
  6922  004868  0012               	return		;funcret
  6923  00486A                     __end_of_floorf:
  6924                           	opt callstack 0
  6925                           
  6926 ;; *************** function ___fpclassifyf *****************
  6927 ;; Defined at:
  6928 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  x               4    0[BANK1 ] float 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  u               4   10[BANK1 ] struct .
  6933 ;;  e               2    8[BANK1 ] int 
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  2    0[BANK1 ] int 
  6936 ;; Registers used:
  6937 ;;		wreg, status,2, status,0
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6943 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6947 ;;Total ram usage:       14 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:   13
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_efgtoa
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           	psect	text20
  6958  00562E                     __ptext20:
  6959                           	opt callstack 0
  6960  00562E                     ___fpclassifyf:
  6961                           	opt callstack 13
  6962                           
  6963                           ; BSR set to: 1
  6964                           ;incstack = 0
  6965  00562E  C1A1  F10A         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6966  005632  C1A2  F10B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6967  005636  C1A3  F10C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6968  00563A  C1A4  F10D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6969  00563E  C100  F10A         	movff	___fpclassifyf@x,___fpclassifyf@u
  6970  005642  C101  F10B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6971  005646  C102  F10C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6972  00564A  C103  F10D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6973  00564E  C10A  F104         	movff	___fpclassifyf@u,??___fpclassifyf
  6974  005652  C10B  F105         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6975  005656  C10C  F106         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6976  00565A  C10D  F107         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6977  00565E  0E18               	movlw	24
  6978  005660  D006               	goto	u8640
  6979  005662                     u8645:
  6980  005662  0101               	movlb	1	; () banked
  6981  005664  90D8               	bcf	status,0,c
  6982  005666  3307               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  6983  005668  3306               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  6984  00566A  3305               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  6985  00566C  3304               	rrcf	??___fpclassifyf& (0+255),f,b
  6986  00566E                     u8640:
  6987  00566E  2EE8               	decfsz	wreg,f,c
  6988  005670  D7F8               	goto	u8645
  6989  005672  5104               	movf	??___fpclassifyf& (0+255),w,b
  6990  005674  6F08               	movwf	___fpclassifyf@e& (0+255),b
  6991  005676  6B09               	clrf	(___fpclassifyf@e+1)& (0+255),b
  6992  005678  5108               	movf	___fpclassifyf@e& (0+255),w,b
  6993  00567A  1109               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  6994  00567C  A4D8               	btfss	status,2,c
  6995  00567E  D019               	goto	l6556
  6996                           
  6997                           ; BSR set to: 1
  6998  005680  90D8               	bcf	status,0,c
  6999  005682  350A               	rlcf	___fpclassifyf@u& (0+255),w,b
  7000  005684  6F04               	movwf	??___fpclassifyf& (0+255),b
  7001  005686  350B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  7002  005688  6F05               	movwf	(??___fpclassifyf+1)& (0+255),b
  7003  00568A  350C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  7004  00568C  6F06               	movwf	(??___fpclassifyf+2)& (0+255),b
  7005  00568E  350D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  7006  005690  6F07               	movwf	(??___fpclassifyf+3)& (0+255),b
  7007  005692  5104               	movf	??___fpclassifyf& (0+255),w,b
  7008  005694  1105               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  7009  005696  1106               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  7010  005698  1107               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  7011  00569A  A4D8               	btfss	status,2,c
  7012  00569C  D005               	goto	l6552
  7013                           
  7014                           ; BSR set to: 1
  7015  00569E  0E00               	movlw	0
  7016  0056A0  6F01               	movwf	(?___fpclassifyf+1)& (0+255),b
  7017  0056A2  0E02               	movlw	2
  7018  0056A4  6F00               	movwf	?___fpclassifyf& (0+255),b
  7019  0056A6  0012               	return	
  7020  0056A8                     l6552:
  7021                           
  7022                           ; BSR set to: 1
  7023  0056A8  0E00               	movlw	0
  7024  0056AA  6F01               	movwf	(?___fpclassifyf+1)& (0+255),b
  7025  0056AC  0E03               	movlw	3
  7026  0056AE  6F00               	movwf	?___fpclassifyf& (0+255),b
  7027  0056B0  0012               	return	
  7028  0056B2                     l6556:
  7029                           
  7030                           ; BSR set to: 1
  7031  0056B2  2908               	incf	___fpclassifyf@e& (0+255),w,b
  7032  0056B4  1109               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  7033  0056B6  A4D8               	btfss	status,2,c
  7034  0056B8  D01C               	goto	l6562
  7035                           
  7036                           ; BSR set to: 1
  7037  0056BA  C10A  F104         	movff	___fpclassifyf@u,??___fpclassifyf
  7038  0056BE  C10B  F105         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7039  0056C2  C10C  F106         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7040  0056C6  C10D  F107         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7041  0056CA  0E09               	movlw	9
  7042  0056CC                     u8685:
  7043  0056CC  90D8               	bcf	status,0,c
  7044  0056CE  3704               	rlcf	??___fpclassifyf& (0+255),f,b
  7045  0056D0  3705               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  7046  0056D2  3706               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  7047  0056D4  3707               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  7048  0056D6  2EE8               	decfsz	wreg,f,c
  7049  0056D8  D7F9               	goto	u8685
  7050  0056DA  5104               	movf	??___fpclassifyf& (0+255),w,b
  7051  0056DC  1105               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  7052  0056DE  1106               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  7053  0056E0  1107               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  7054  0056E2  A4D8               	btfss	status,2,c
  7055  0056E4  D002               	goto	u8690
  7056  0056E6  0E01               	movlw	1
  7057  0056E8  D001               	goto	u8700
  7058  0056EA                     u8690:
  7059  0056EA  0E00               	movlw	0
  7060  0056EC                     u8700:
  7061  0056EC  6F00               	movwf	?___fpclassifyf& (0+255),b
  7062  0056EE  6B01               	clrf	(?___fpclassifyf+1)& (0+255),b
  7063  0056F0  0012               	return	
  7064  0056F2                     l6562:
  7065                           
  7066                           ; BSR set to: 1
  7067  0056F2  0E00               	movlw	0
  7068  0056F4  6F01               	movwf	(?___fpclassifyf+1)& (0+255),b
  7069  0056F6  0E04               	movlw	4
  7070  0056F8  6F00               	movwf	?___fpclassifyf& (0+255),b
  7071                           
  7072                           ; BSR set to: 1
  7073  0056FA  0012               	return		;funcret
  7074  0056FC                     __end_of___fpclassifyf:
  7075                           	opt callstack 0
  7076                           
  7077 ;; *************** function ___fltol *****************
  7078 ;; Defined at:
  7079 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  f1              4    0[BANK1 ] int 
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;  exp1            1    9[BANK1 ] unsigned char 
  7084 ;;  sign1           1    8[BANK1 ] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  4    0[BANK1 ] long 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7094 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7096 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7097 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;Total ram usage:       10 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:   13
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_efgtoa
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text21
  7109  0057C8                     __ptext21:
  7110                           	opt callstack 0
  7111  0057C8                     ___fltol:
  7112                           	opt callstack 13
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;incstack = 0
  7116  0057C8  0101               	movlb	1	; () banked
  7117  0057CA  3502               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7118  0057CC  3503               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7119  0057CE  6F09               	movwf	___fltol@exp1& (0+255),b
  7120  0057D0  5109               	movf	___fltol@exp1& (0+255),w,b
  7121  0057D2  A4D8               	btfss	status,2,c
  7122  0057D4  D009               	goto	l7024
  7123  0057D6                     u9510:
  7124                           
  7125                           ; BSR set to: 1
  7126  0057D6  0E00               	movlw	0
  7127  0057D8  6F00               	movwf	?___fltol& (0+255),b
  7128  0057DA  0E00               	movlw	0
  7129  0057DC  6F01               	movwf	(?___fltol+1)& (0+255),b
  7130  0057DE  0E00               	movlw	0
  7131  0057E0  6F02               	movwf	(?___fltol+2)& (0+255),b
  7132  0057E2  0E00               	movlw	0
  7133  0057E4  6F03               	movwf	(?___fltol+3)& (0+255),b
  7134  0057E6  0012               	return	
  7135  0057E8                     l7024:
  7136                           
  7137                           ; BSR set to: 1
  7138  0057E8  C100  F104         	movff	___fltol@f1,??___fltol
  7139  0057EC  C101  F105         	movff	___fltol@f1+1,??___fltol+1
  7140  0057F0  C102  F106         	movff	___fltol@f1+2,??___fltol+2
  7141  0057F4  C103  F107         	movff	___fltol@f1+3,??___fltol+3
  7142  0057F8  0E20               	movlw	32
  7143  0057FA  D005               	goto	u9520
  7144  0057FC                     u9525:
  7145  0057FC  90D8               	bcf	status,0,c
  7146  0057FE  3307               	rrcf	(??___fltol+3)& (0+255),f,b
  7147  005800  3306               	rrcf	(??___fltol+2)& (0+255),f,b
  7148  005802  3305               	rrcf	(??___fltol+1)& (0+255),f,b
  7149  005804  3304               	rrcf	??___fltol& (0+255),f,b
  7150  005806                     u9520:
  7151  005806  2EE8               	decfsz	wreg,f,c
  7152  005808  D7F9               	goto	u9525
  7153  00580A  5104               	movf	??___fltol& (0+255),w,b
  7154  00580C  6F08               	movwf	___fltol@sign1& (0+255),b
  7155                           
  7156                           ; BSR set to: 1
  7157  00580E  8F02               	bsf	(___fltol@f1+2)& (0+255),7,b
  7158                           
  7159                           ; BSR set to: 1
  7160  005810  0EFF               	movlw	255
  7161  005812  1700               	andwf	___fltol@f1& (0+255),f,b
  7162  005814  0EFF               	movlw	255
  7163  005816  1701               	andwf	(___fltol@f1+1)& (0+255),f,b
  7164  005818  0EFF               	movlw	255
  7165  00581A  1702               	andwf	(___fltol@f1+2)& (0+255),f,b
  7166  00581C  0E00               	movlw	0
  7167  00581E  1703               	andwf	(___fltol@f1+3)& (0+255),f,b
  7168                           
  7169                           ; BSR set to: 1
  7170  005820  0E96               	movlw	150
  7171  005822  5F09               	subwf	___fltol@exp1& (0+255),f,b
  7172                           
  7173                           ; BSR set to: 1
  7174  005824  AF09               	btfss	___fltol@exp1& (0+255),7,b
  7175  005826  D00D               	goto	l7044
  7176                           
  7177                           ; BSR set to: 1
  7178  005828  5109               	movf	___fltol@exp1& (0+255),w,b
  7179  00582A  0A80               	xorlw	128
  7180  00582C  0F97               	addlw	151
  7181  00582E  A0D8               	btfss	status,0,c
  7182  005830  D7D2               	goto	u9510
  7183  005832                     l7040:
  7184                           
  7185                           ; BSR set to: 1
  7186  005832  90D8               	bcf	status,0,c
  7187  005834  3303               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7188  005836  3302               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7189  005838  3301               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7190  00583A  3300               	rrcf	___fltol@f1& (0+255),f,b
  7191                           
  7192                           ; BSR set to: 1
  7193  00583C  3F09               	incfsz	___fltol@exp1& (0+255),f,b
  7194  00583E  D7F9               	goto	l7040
  7195  005840  D00D               	goto	u9560
  7196  005842                     l7044:
  7197                           
  7198                           ; BSR set to: 1
  7199  005842  0E1F               	movlw	31
  7200  005844  6509               	cpfsgt	___fltol@exp1& (0+255),b
  7201  005846  D007               	goto	l7052
  7202  005848  D7C6               	goto	u9510
  7203  00584A                     l7050:
  7204                           
  7205                           ; BSR set to: 1
  7206  00584A  90D8               	bcf	status,0,c
  7207  00584C  3700               	rlcf	___fltol@f1& (0+255),f,b
  7208  00584E  3701               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7209  005850  3702               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7210  005852  3703               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7211  005854  0709               	decf	___fltol@exp1& (0+255),f,b
  7212  005856                     l7052:
  7213                           
  7214                           ; BSR set to: 1
  7215  005856  5109               	movf	___fltol@exp1& (0+255),w,b
  7216  005858  A4D8               	btfss	status,2,c
  7217  00585A  D7F7               	goto	l7050
  7218  00585C                     u9560:
  7219                           
  7220                           ; BSR set to: 1
  7221  00585C  5108               	movf	___fltol@sign1& (0+255),w,b
  7222  00585E  B4D8               	btfsc	status,2,c
  7223  005860  D008               	goto	l7058
  7224                           
  7225                           ; BSR set to: 1
  7226  005862  1F03               	comf	(___fltol@f1+3)& (0+255),f,b
  7227  005864  1F02               	comf	(___fltol@f1+2)& (0+255),f,b
  7228  005866  1F01               	comf	(___fltol@f1+1)& (0+255),f,b
  7229  005868  6D00               	negf	___fltol@f1& (0+255),b
  7230  00586A  0E00               	movlw	0
  7231  00586C  2301               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7232  00586E  2302               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7233  005870  2303               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7234  005872                     l7058:
  7235                           
  7236                           ; BSR set to: 1
  7237  005872  C100  F100         	movff	___fltol@f1,?___fltol
  7238  005876  C101  F101         	movff	___fltol@f1+1,?___fltol+1
  7239  00587A  C102  F102         	movff	___fltol@f1+2,?___fltol+2
  7240  00587E  C103  F103         	movff	___fltol@f1+3,?___fltol+3
  7241                           
  7242                           ; BSR set to: 1
  7243  005882  0012               	return		;funcret
  7244  005884                     __end_of___fltol:
  7245                           	opt callstack 0
  7246                           
  7247 ;; *************** function ___flsub *****************
  7248 ;; Defined at:
  7249 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  b               4   25[BANK1 ] long 
  7252 ;;  a               4   29[BANK1 ] long 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  4   25[BANK1 ] long 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7264 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7267 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;Total ram usage:        8 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:   14
  7271 ;; This function calls:
  7272 ;;		___fladd
  7273 ;; This function is called by:
  7274 ;;		_efgtoa
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text22
  7279  006644                     __ptext22:
  7280                           	opt callstack 0
  7281  006644                     ___flsub:
  7282                           	opt callstack 12
  7283                           
  7284                           ; BSR set to: 1
  7285                           ;incstack = 0
  7286  006644  0E00               	movlw	0
  7287  006646  0101               	movlb	1	; () banked
  7288  006648  1B1D               	xorwf	___flsub@a& (0+255),f,b
  7289  00664A  0E00               	movlw	0
  7290  00664C  1B1E               	xorwf	(___flsub@a+1)& (0+255),f,b
  7291  00664E  0E00               	movlw	0
  7292  006650  1B1F               	xorwf	(___flsub@a+2)& (0+255),f,b
  7293  006652  0E80               	movlw	128
  7294  006654  1B20               	xorwf	(___flsub@a+3)& (0+255),f,b
  7295                           
  7296                           ; BSR set to: 1
  7297  006656  C119  F100         	movff	___flsub@b,___fladd@b
  7298  00665A  C11A  F101         	movff	___flsub@b+1,___fladd@b+1
  7299  00665E  C11B  F102         	movff	___flsub@b+2,___fladd@b+2
  7300  006662  C11C  F103         	movff	___flsub@b+3,___fladd@b+3
  7301  006666  C11D  F104         	movff	___flsub@a,___fladd@a
  7302  00666A  C11E  F105         	movff	___flsub@a+1,___fladd@a+1
  7303  00666E  C11F  F106         	movff	___flsub@a+2,___fladd@a+2
  7304  006672  C120  F107         	movff	___flsub@a+3,___fladd@a+3
  7305  006676  EC52  F01B         	call	___fladd	;wreg free
  7306  00667A  C100  F119         	movff	?___fladd,?___flsub
  7307  00667E  C101  F11A         	movff	?___fladd+1,?___flsub+1
  7308  006682  C102  F11B         	movff	?___fladd+2,?___flsub+2
  7309  006686  C103  F11C         	movff	?___fladd+3,?___flsub+3
  7310  00668A  0012               	return		;funcret
  7311  00668C                     __end_of___flsub:
  7312                           	opt callstack 0
  7313                           
  7314 ;; *************** function ___fladd *****************
  7315 ;; Defined at:
  7316 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  b               4    0[BANK1 ] long 
  7319 ;;  a               4    4[BANK1 ] long 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  grs             1   15[BANK1 ] unsigned char 
  7322 ;;  bexp            1   14[BANK1 ] unsigned char 
  7323 ;;  aexp            1   13[BANK1 ] unsigned char 
  7324 ;;  signs           1   12[BANK1 ] unsigned char 
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  4    0[BANK1 ] unsigned char 
  7327 ;; Registers used:
  7328 ;;		wreg, status,2, status,0
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7334 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7337 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7338 ;;Total ram usage:       16 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; Hardware stack levels required when called:   13
  7341 ;; This function calls:
  7342 ;;		Nothing
  7343 ;; This function is called by:
  7344 ;;		_efgtoa
  7345 ;;		___flsub
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text23
  7350  0036A4                     __ptext23:
  7351                           	opt callstack 0
  7352  0036A4                     ___fladd:
  7353                           	opt callstack 12
  7354                           
  7355                           ;incstack = 0
  7356  0036A4  0101               	movlb	1	; () banked
  7357  0036A6  5103               	movf	(___fladd@b+3)& (0+255),w,b
  7358  0036A8  0B80               	andlw	128
  7359  0036AA  6F0C               	movwf	___fladd@signs& (0+255),b
  7360  0036AC  5103               	movf	(___fladd@b+3)& (0+255),w,b
  7361  0036AE  2503               	addwf	(___fladd@b+3)& (0+255),w,b
  7362  0036B0  6F0E               	movwf	___fladd@bexp& (0+255),b
  7363                           
  7364                           ; BSR set to: 1
  7365  0036B2  BF02               	btfsc	(___fladd@b+2)& (0+255),7,b
  7366                           
  7367                           ; BSR set to: 1
  7368  0036B4  810E               	bsf	___fladd@bexp& (0+255),0,b
  7369                           
  7370                           ; BSR set to: 1
  7371  0036B6  510E               	movf	___fladd@bexp& (0+255),w,b
  7372  0036B8  B4D8               	btfsc	status,2,c
  7373  0036BA  D00D               	goto	l5934
  7374                           
  7375                           ; BSR set to: 1
  7376  0036BC  290E               	incf	___fladd@bexp& (0+255),w,b
  7377  0036BE  A4D8               	btfss	status,2,c
  7378  0036C0  D008               	goto	l5930
  7379                           
  7380                           ; BSR set to: 1
  7381  0036C2  0E00               	movlw	0
  7382  0036C4  6F00               	movwf	___fladd@b& (0+255),b
  7383  0036C6  0E00               	movlw	0
  7384  0036C8  6F01               	movwf	(___fladd@b+1)& (0+255),b
  7385  0036CA  0E00               	movlw	0
  7386  0036CC  6F02               	movwf	(___fladd@b+2)& (0+255),b
  7387  0036CE  0E00               	movlw	0
  7388  0036D0  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7389  0036D2                     l5930:
  7390                           
  7391                           ; BSR set to: 1
  7392  0036D2  8F02               	bsf	(___fladd@b+2)& (0+255),7,b
  7393  0036D4  D006               	goto	L6
  7394  0036D6                     l5934:
  7395                           
  7396                           ; BSR set to: 1
  7397  0036D6  0E00               	movlw	0
  7398  0036D8  6F00               	movwf	___fladd@b& (0+255),b
  7399  0036DA  0E00               	movlw	0
  7400  0036DC  6F01               	movwf	(___fladd@b+1)& (0+255),b
  7401  0036DE  0E00               	movlw	0
  7402  0036E0  6F02               	movwf	(___fladd@b+2)& (0+255),b
  7403  0036E2                     L6:
  7404  0036E2  0E00               	movlw	0
  7405  0036E4  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7406                           
  7407                           ; BSR set to: 1
  7408  0036E6  5107               	movf	(___fladd@a+3)& (0+255),w,b
  7409  0036E8  0B80               	andlw	128
  7410  0036EA  6F0D               	movwf	___fladd@aexp& (0+255),b
  7411                           
  7412                           ; BSR set to: 1
  7413  0036EC  510C               	movf	___fladd@signs& (0+255),w,b
  7414  0036EE  190D               	xorwf	___fladd@aexp& (0+255),w,b
  7415  0036F0  A4D8               	btfss	status,2,c
  7416                           
  7417                           ; BSR set to: 1
  7418  0036F2  8D0C               	bsf	___fladd@signs& (0+255),6,b
  7419                           
  7420                           ; BSR set to: 1
  7421  0036F4  5107               	movf	(___fladd@a+3)& (0+255),w,b
  7422  0036F6  2507               	addwf	(___fladd@a+3)& (0+255),w,b
  7423  0036F8  6F0D               	movwf	___fladd@aexp& (0+255),b
  7424                           
  7425                           ; BSR set to: 1
  7426  0036FA  BF06               	btfsc	(___fladd@a+2)& (0+255),7,b
  7427                           
  7428                           ; BSR set to: 1
  7429  0036FC  810D               	bsf	___fladd@aexp& (0+255),0,b
  7430                           
  7431                           ; BSR set to: 1
  7432  0036FE  510D               	movf	___fladd@aexp& (0+255),w,b
  7433  003700  B4D8               	btfsc	status,2,c
  7434  003702  D00D               	goto	l5958
  7435                           
  7436                           ; BSR set to: 1
  7437  003704  290D               	incf	___fladd@aexp& (0+255),w,b
  7438  003706  A4D8               	btfss	status,2,c
  7439  003708  D008               	goto	l5954
  7440                           
  7441                           ; BSR set to: 1
  7442  00370A  0E00               	movlw	0
  7443  00370C  6F04               	movwf	___fladd@a& (0+255),b
  7444  00370E  0E00               	movlw	0
  7445  003710  6F05               	movwf	(___fladd@a+1)& (0+255),b
  7446  003712  0E00               	movlw	0
  7447  003714  6F06               	movwf	(___fladd@a+2)& (0+255),b
  7448  003716  0E00               	movlw	0
  7449  003718  6F07               	movwf	(___fladd@a+3)& (0+255),b
  7450  00371A                     l5954:
  7451                           
  7452                           ; BSR set to: 1
  7453  00371A  8F06               	bsf	(___fladd@a+2)& (0+255),7,b
  7454  00371C  D006               	goto	L7
  7455  00371E                     l5958:
  7456                           
  7457                           ; BSR set to: 1
  7458  00371E  0E00               	movlw	0
  7459  003720  6F04               	movwf	___fladd@a& (0+255),b
  7460  003722  0E00               	movlw	0
  7461  003724  6F05               	movwf	(___fladd@a+1)& (0+255),b
  7462  003726  0E00               	movlw	0
  7463  003728  6F06               	movwf	(___fladd@a+2)& (0+255),b
  7464  00372A                     L7:
  7465  00372A  0E00               	movlw	0
  7466  00372C  6F07               	movwf	(___fladd@a+3)& (0+255),b
  7467                           
  7468                           ; BSR set to: 1
  7469  00372E  510E               	movf	___fladd@bexp& (0+255),w,b
  7470  003730  5D0D               	subwf	___fladd@aexp& (0+255),w,b
  7471  003732  B0D8               	btfsc	status,0,c
  7472  003734  D022               	goto	l5996
  7473                           
  7474                           ; BSR set to: 1
  7475  003736  AD0C               	btfss	___fladd@signs& (0+255),6,b
  7476  003738  D002               	goto	l5966
  7477                           
  7478                           ; BSR set to: 1
  7479  00373A  0E80               	movlw	128
  7480  00373C  1B0C               	xorwf	___fladd@signs& (0+255),f,b
  7481  00373E                     l5966:
  7482                           
  7483                           ; BSR set to: 1
  7484  00373E  C10E  F10F         	movff	___fladd@bexp,___fladd@grs
  7485                           
  7486                           ; BSR set to: 1
  7487  003742  C10D  F10E         	movff	___fladd@aexp,___fladd@bexp
  7488                           
  7489                           ; BSR set to: 1
  7490  003746  C10F  F10D         	movff	___fladd@grs,___fladd@aexp
  7491                           
  7492                           ; BSR set to: 1
  7493  00374A  C100  F10F         	movff	___fladd@b,___fladd@grs
  7494                           
  7495                           ; BSR set to: 1
  7496  00374E  C104  F100         	movff	___fladd@a,___fladd@b
  7497                           
  7498                           ; BSR set to: 1
  7499  003752  C10F  F104         	movff	___fladd@grs,___fladd@a
  7500                           
  7501                           ; BSR set to: 1
  7502  003756  C101  F10F         	movff	___fladd@b+1,___fladd@grs
  7503                           
  7504                           ; BSR set to: 1
  7505  00375A  C105  F101         	movff	___fladd@a+1,___fladd@b+1
  7506                           
  7507                           ; BSR set to: 1
  7508  00375E  C10F  F105         	movff	___fladd@grs,___fladd@a+1
  7509                           
  7510                           ; BSR set to: 1
  7511  003762  C102  F10F         	movff	___fladd@b+2,___fladd@grs
  7512                           
  7513                           ; BSR set to: 1
  7514  003766  C106  F102         	movff	___fladd@a+2,___fladd@b+2
  7515                           
  7516                           ; BSR set to: 1
  7517  00376A  C10F  F106         	movff	___fladd@grs,___fladd@a+2
  7518                           
  7519                           ; BSR set to: 1
  7520  00376E  C103  F10F         	movff	___fladd@b+3,___fladd@grs
  7521                           
  7522                           ; BSR set to: 1
  7523  003772  C107  F103         	movff	___fladd@a+3,___fladd@b+3
  7524                           
  7525                           ; BSR set to: 1
  7526  003776  C10F  F107         	movff	___fladd@grs,___fladd@a+3
  7527  00377A                     l5996:
  7528                           
  7529                           ; BSR set to: 1
  7530  00377A  0E00               	movlw	0
  7531  00377C  6F0F               	movwf	___fladd@grs& (0+255),b
  7532                           
  7533                           ; BSR set to: 1
  7534  00377E  510E               	movf	___fladd@bexp& (0+255),w,b
  7535  003780  C10D  F108         	movff	___fladd@aexp,??___fladd
  7536  003784  6B09               	clrf	(??___fladd+1)& (0+255),b
  7537  003786  5F08               	subwf	??___fladd& (0+255),f,b
  7538  003788  0E00               	movlw	0
  7539  00378A  5B09               	subwfb	(??___fladd+1)& (0+255),f,b
  7540  00378C  BF09               	btfsc	(??___fladd+1)& (0+255),7,b
  7541  00378E  D02C               	goto	l1357
  7542  003790  5109               	movf	(??___fladd+1)& (0+255),w,b
  7543  003792  E104               	bnz	u7570
  7544  003794  0E1A               	movlw	26
  7545  003796  5D08               	subwf	??___fladd& (0+255),w,b
  7546  003798  A0D8               	btfss	status,0,c
  7547  00379A  D026               	goto	l1357
  7548  00379C                     u7570:
  7549                           
  7550                           ; BSR set to: 1
  7551  00379C  5100               	movf	___fladd@b& (0+255),w,b
  7552  00379E  1101               	iorwf	(___fladd@b+1)& (0+255),w,b
  7553  0037A0  1102               	iorwf	(___fladd@b+2)& (0+255),w,b
  7554  0037A2  1103               	iorwf	(___fladd@b+3)& (0+255),w,b
  7555  0037A4  B4D8               	btfsc	status,2,c
  7556  0037A6  D002               	goto	u7580
  7557  0037A8  0E01               	movlw	1
  7558  0037AA  D001               	goto	u7590
  7559  0037AC                     u7580:
  7560  0037AC  0E00               	movlw	0
  7561  0037AE                     u7590:
  7562  0037AE  6F0F               	movwf	___fladd@grs& (0+255),b
  7563                           
  7564                           ; BSR set to: 1
  7565  0037B0  0E00               	movlw	0
  7566  0037B2  6F00               	movwf	___fladd@b& (0+255),b
  7567  0037B4  0E00               	movlw	0
  7568  0037B6  6F01               	movwf	(___fladd@b+1)& (0+255),b
  7569  0037B8  0E00               	movlw	0
  7570  0037BA  6F02               	movwf	(___fladd@b+2)& (0+255),b
  7571  0037BC  0E00               	movlw	0
  7572  0037BE  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7573                           
  7574                           ; BSR set to: 1
  7575  0037C0  C10D  F10E         	movff	___fladd@aexp,___fladd@bexp
  7576  0037C4  D015               	goto	u7620
  7577  0037C6                     l1358:
  7578                           
  7579                           ; BSR set to: 1
  7580  0037C6  A10F               	btfss	___fladd@grs& (0+255),0,b
  7581  0037C8  D005               	goto	l6008
  7582                           
  7583                           ; BSR set to: 1
  7584  0037CA  90D8               	bcf	status,0,c
  7585  0037CC  310F               	rrcf	___fladd@grs& (0+255),w,b
  7586  0037CE  0901               	iorlw	1
  7587  0037D0  6F0F               	movwf	___fladd@grs& (0+255),b
  7588  0037D2  D002               	goto	l6010
  7589  0037D4                     l6008:
  7590                           
  7591                           ; BSR set to: 1
  7592  0037D4  90D8               	bcf	status,0,c
  7593  0037D6  330F               	rrcf	___fladd@grs& (0+255),f,b
  7594  0037D8                     l6010:
  7595                           
  7596                           ; BSR set to: 1
  7597  0037D8  B100               	btfsc	___fladd@b& (0+255),0,b
  7598                           
  7599                           ; BSR set to: 1
  7600  0037DA  8F0F               	bsf	___fladd@grs& (0+255),7,b
  7601                           
  7602                           ; BSR set to: 1
  7603  0037DC  3503               	rlcf	(___fladd@b+3)& (0+255),w,b
  7604  0037DE  3303               	rrcf	(___fladd@b+3)& (0+255),f,b
  7605  0037E0  3302               	rrcf	(___fladd@b+2)& (0+255),f,b
  7606  0037E2  3301               	rrcf	(___fladd@b+1)& (0+255),f,b
  7607  0037E4  3300               	rrcf	___fladd@b& (0+255),f,b
  7608                           
  7609                           ; BSR set to: 1
  7610  0037E6  2B0E               	incf	___fladd@bexp& (0+255),f,b
  7611  0037E8                     l1357:
  7612                           
  7613                           ; BSR set to: 1
  7614  0037E8  510D               	movf	___fladd@aexp& (0+255),w,b
  7615  0037EA  5D0E               	subwf	___fladd@bexp& (0+255),w,b
  7616  0037EC  A0D8               	btfss	status,0,c
  7617  0037EE  D7EB               	goto	l1358
  7618  0037F0                     u7620:
  7619                           
  7620                           ; BSR set to: 1
  7621  0037F0  BD0C               	btfsc	___fladd@signs& (0+255),6,b
  7622  0037F2  D028               	goto	l6042
  7623                           
  7624                           ; BSR set to: 1
  7625  0037F4  510E               	movf	___fladd@bexp& (0+255),w,b
  7626  0037F6  A4D8               	btfss	status,2,c
  7627  0037F8  D009               	goto	l6024
  7628                           
  7629                           ; BSR set to: 1
  7630  0037FA  0E00               	movlw	0
  7631  0037FC  6F00               	movwf	?___fladd& (0+255),b
  7632  0037FE  0E00               	movlw	0
  7633  003800  6F01               	movwf	(?___fladd+1)& (0+255),b
  7634  003802  0E00               	movlw	0
  7635  003804  6F02               	movwf	(?___fladd+2)& (0+255),b
  7636  003806  0E00               	movlw	0
  7637  003808  6F03               	movwf	(?___fladd+3)& (0+255),b
  7638  00380A  0012               	return	
  7639  00380C                     l6024:
  7640                           
  7641                           ; BSR set to: 1
  7642  00380C  5104               	movf	___fladd@a& (0+255),w,b
  7643  00380E  2700               	addwf	___fladd@b& (0+255),f,b
  7644  003810  5105               	movf	(___fladd@a+1)& (0+255),w,b
  7645  003812  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
  7646  003814  5106               	movf	(___fladd@a+2)& (0+255),w,b
  7647  003816  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
  7648  003818  5107               	movf	(___fladd@a+3)& (0+255),w,b
  7649  00381A  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
  7650                           
  7651                           ; BSR set to: 1
  7652  00381C  A103               	btfss	(___fladd@b+3)& (0+255),0,b
  7653  00381E  D071               	goto	u7750
  7654                           
  7655                           ; BSR set to: 1
  7656  003820  A10F               	btfss	___fladd@grs& (0+255),0,b
  7657  003822  D005               	goto	l6032
  7658                           
  7659                           ; BSR set to: 1
  7660  003824  90D8               	bcf	status,0,c
  7661  003826  310F               	rrcf	___fladd@grs& (0+255),w,b
  7662  003828  0901               	iorlw	1
  7663  00382A  6F0F               	movwf	___fladd@grs& (0+255),b
  7664  00382C  D002               	goto	l6034
  7665  00382E                     l6032:
  7666                           
  7667                           ; BSR set to: 1
  7668  00382E  90D8               	bcf	status,0,c
  7669  003830  330F               	rrcf	___fladd@grs& (0+255),f,b
  7670  003832                     l6034:
  7671                           
  7672                           ; BSR set to: 1
  7673  003832  B100               	btfsc	___fladd@b& (0+255),0,b
  7674                           
  7675                           ; BSR set to: 1
  7676  003834  8F0F               	bsf	___fladd@grs& (0+255),7,b
  7677                           
  7678                           ; BSR set to: 1
  7679  003836  3503               	rlcf	(___fladd@b+3)& (0+255),w,b
  7680  003838  3303               	rrcf	(___fladd@b+3)& (0+255),f,b
  7681  00383A  3302               	rrcf	(___fladd@b+2)& (0+255),f,b
  7682  00383C  3301               	rrcf	(___fladd@b+1)& (0+255),f,b
  7683  00383E  3300               	rrcf	___fladd@b& (0+255),f,b
  7684                           
  7685                           ; BSR set to: 1
  7686  003840  2B0E               	incf	___fladd@bexp& (0+255),f,b
  7687  003842  D05F               	goto	u7750
  7688  003844                     l6042:
  7689                           
  7690                           ; BSR set to: 1
  7691  003844  5104               	movf	___fladd@a& (0+255),w,b
  7692  003846  5D00               	subwf	___fladd@b& (0+255),w,b
  7693  003848  5105               	movf	(___fladd@a+1)& (0+255),w,b
  7694  00384A  5901               	subwfb	(___fladd@b+1)& (0+255),w,b
  7695  00384C  5106               	movf	(___fladd@a+2)& (0+255),w,b
  7696  00384E  5902               	subwfb	(___fladd@b+2)& (0+255),w,b
  7697  003850  5103               	movf	(___fladd@b+3)& (0+255),w,b
  7698  003852  0A80               	xorlw	128
  7699  003854  6F08               	movwf	??___fladd& (0+255),b
  7700  003856  5107               	movf	(___fladd@a+3)& (0+255),w,b
  7701  003858  0A80               	xorlw	128
  7702  00385A  5908               	subwfb	??___fladd& (0+255),w,b
  7703  00385C  B0D8               	btfsc	status,0,c
  7704  00385E  D025               	goto	l6052
  7705                           
  7706                           ; BSR set to: 1
  7707  003860  5100               	movf	___fladd@b& (0+255),w,b
  7708  003862  5D04               	subwf	___fladd@a& (0+255),w,b
  7709  003864  6F08               	movwf	??___fladd& (0+255),b
  7710  003866  5101               	movf	(___fladd@b+1)& (0+255),w,b
  7711  003868  5905               	subwfb	(___fladd@a+1)& (0+255),w,b
  7712  00386A  6F09               	movwf	(??___fladd+1)& (0+255),b
  7713  00386C  5102               	movf	(___fladd@b+2)& (0+255),w,b
  7714  00386E  5906               	subwfb	(___fladd@a+2)& (0+255),w,b
  7715  003870  6F0A               	movwf	(??___fladd+2)& (0+255),b
  7716  003872  5103               	movf	(___fladd@b+3)& (0+255),w,b
  7717  003874  5907               	subwfb	(___fladd@a+3)& (0+255),w,b
  7718  003876  6F0B               	movwf	(??___fladd+3)& (0+255),b
  7719  003878  0EFF               	movlw	255
  7720  00387A  2508               	addwf	??___fladd& (0+255),w,b
  7721  00387C  6F00               	movwf	___fladd@b& (0+255),b
  7722  00387E  0EFF               	movlw	255
  7723  003880  2109               	addwfc	(??___fladd+1)& (0+255),w,b
  7724  003882  6F01               	movwf	(___fladd@b+1)& (0+255),b
  7725  003884  0EFF               	movlw	255
  7726  003886  210A               	addwfc	(??___fladd+2)& (0+255),w,b
  7727  003888  6F02               	movwf	(___fladd@b+2)& (0+255),b
  7728  00388A  0EFF               	movlw	255
  7729  00388C  210B               	addwfc	(??___fladd+3)& (0+255),w,b
  7730  00388E  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7731  003890  0E80               	movlw	128
  7732  003892  1B0C               	xorwf	___fladd@signs& (0+255),f,b
  7733                           
  7734                           ; BSR set to: 1
  7735  003894  6D0F               	negf	___fladd@grs& (0+255),b
  7736                           
  7737                           ; BSR set to: 1
  7738  003896  510F               	movf	___fladd@grs& (0+255),w,b
  7739  003898  A4D8               	btfss	status,2,c
  7740  00389A  D00F               	goto	l1373
  7741                           
  7742                           ; BSR set to: 1
  7743  00389C  0E01               	movlw	1
  7744  00389E  2700               	addwf	___fladd@b& (0+255),f,b
  7745  0038A0  0E00               	movlw	0
  7746  0038A2  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
  7747  0038A4  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
  7748  0038A6  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
  7749  0038A8  D008               	goto	l1373
  7750  0038AA                     l6052:
  7751                           
  7752                           ; BSR set to: 1
  7753  0038AA  5104               	movf	___fladd@a& (0+255),w,b
  7754  0038AC  5F00               	subwf	___fladd@b& (0+255),f,b
  7755  0038AE  5105               	movf	(___fladd@a+1)& (0+255),w,b
  7756  0038B0  5B01               	subwfb	(___fladd@b+1)& (0+255),f,b
  7757  0038B2  5106               	movf	(___fladd@a+2)& (0+255),w,b
  7758  0038B4  5B02               	subwfb	(___fladd@b+2)& (0+255),f,b
  7759  0038B6  5107               	movf	(___fladd@a+3)& (0+255),w,b
  7760  0038B8  5B03               	subwfb	(___fladd@b+3)& (0+255),f,b
  7761  0038BA                     l1373:
  7762                           
  7763                           ; BSR set to: 1
  7764  0038BA  5100               	movf	___fladd@b& (0+255),w,b
  7765  0038BC  1101               	iorwf	(___fladd@b+1)& (0+255),w,b
  7766  0038BE  1102               	iorwf	(___fladd@b+2)& (0+255),w,b
  7767  0038C0  1103               	iorwf	(___fladd@b+3)& (0+255),w,b
  7768  0038C2  A4D8               	btfss	status,2,c
  7769  0038C4  D01C               	goto	l6076
  7770                           
  7771                           ; BSR set to: 1
  7772  0038C6  510F               	movf	___fladd@grs& (0+255),w,b
  7773  0038C8  A4D8               	btfss	status,2,c
  7774  0038CA  D019               	goto	l6076
  7775                           
  7776                           ; BSR set to: 1
  7777  0038CC  0E00               	movlw	0
  7778  0038CE  6F00               	movwf	?___fladd& (0+255),b
  7779  0038D0  0E00               	movlw	0
  7780  0038D2  6F01               	movwf	(?___fladd+1)& (0+255),b
  7781  0038D4  0E00               	movlw	0
  7782  0038D6  6F02               	movwf	(?___fladd+2)& (0+255),b
  7783  0038D8  0E00               	movlw	0
  7784  0038DA  6F03               	movwf	(?___fladd+3)& (0+255),b
  7785  0038DC  0012               	return	
  7786  0038DE                     l6060:
  7787                           
  7788                           ; BSR set to: 1
  7789  0038DE  90D8               	bcf	status,0,c
  7790  0038E0  3700               	rlcf	___fladd@b& (0+255),f,b
  7791  0038E2  3701               	rlcf	(___fladd@b+1)& (0+255),f,b
  7792  0038E4  3702               	rlcf	(___fladd@b+2)& (0+255),f,b
  7793  0038E6  3703               	rlcf	(___fladd@b+3)& (0+255),f,b
  7794                           
  7795                           ; BSR set to: 1
  7796  0038E8  BF0F               	btfsc	___fladd@grs& (0+255),7,b
  7797                           
  7798                           ; BSR set to: 1
  7799  0038EA  8100               	bsf	___fladd@b& (0+255),0,b
  7800                           
  7801                           ; BSR set to: 1
  7802  0038EC  A10F               	btfss	___fladd@grs& (0+255),0,b
  7803  0038EE  D002               	goto	l6070
  7804                           
  7805                           ; BSR set to: 1
  7806  0038F0  80D8               	bsf	status,0,c
  7807  0038F2  D001               	goto	L8
  7808  0038F4                     l6070:
  7809                           
  7810                           ; BSR set to: 1
  7811  0038F4  90D8               	bcf	status,0,c
  7812  0038F6                     L8:
  7813  0038F6  370F               	rlcf	___fladd@grs& (0+255),f,b
  7814                           
  7815                           ; BSR set to: 1
  7816  0038F8  510E               	movf	___fladd@bexp& (0+255),w,b
  7817  0038FA  A4D8               	btfss	status,2,c
  7818                           
  7819                           ; BSR set to: 1
  7820  0038FC  070E               	decf	___fladd@bexp& (0+255),f,b
  7821  0038FE                     l6076:
  7822                           
  7823                           ; BSR set to: 1
  7824  0038FE  AF02               	btfss	(___fladd@b+2)& (0+255),7,b
  7825  003900  D7EE               	goto	l6060
  7826  003902                     u7750:
  7827                           
  7828                           ; BSR set to: 1
  7829  003902  0E00               	movlw	0
  7830  003904  6F0D               	movwf	___fladd@aexp& (0+255),b
  7831                           
  7832                           ; BSR set to: 1
  7833  003906  AF0F               	btfss	___fladd@grs& (0+255),7,b
  7834  003908  D00B               	goto	l1382
  7835                           
  7836                           ; BSR set to: 1
  7837  00390A  C10F  F108         	movff	___fladd@grs,??___fladd
  7838  00390E  0E7F               	movlw	127
  7839  003910  1708               	andwf	??___fladd& (0+255),f,b
  7840  003912  B4D8               	btfsc	status,2,c
  7841  003914  D003               	goto	l1383
  7842  003916                     u7770:
  7843                           
  7844                           ; BSR set to: 1
  7845  003916  0E01               	movlw	1
  7846  003918  6F0D               	movwf	___fladd@aexp& (0+255),b
  7847  00391A  D002               	goto	l1382
  7848  00391C                     l1383:
  7849                           
  7850                           ; BSR set to: 1
  7851  00391C  B100               	btfsc	___fladd@b& (0+255),0,b
  7852  00391E  D7FB               	goto	u7770
  7853  003920                     l1382:
  7854                           
  7855                           ; BSR set to: 1
  7856  003920  510D               	movf	___fladd@aexp& (0+255),w,b
  7857  003922  B4D8               	btfsc	status,2,c
  7858  003924  D020               	goto	l6096
  7859                           
  7860                           ; BSR set to: 1
  7861  003926  0E01               	movlw	1
  7862  003928  2700               	addwf	___fladd@b& (0+255),f,b
  7863  00392A  0E00               	movlw	0
  7864  00392C  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
  7865  00392E  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
  7866  003930  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
  7867                           
  7868                           ; BSR set to: 1
  7869  003932  A103               	btfss	(___fladd@b+3)& (0+255),0,b
  7870  003934  D018               	goto	l6096
  7871                           
  7872                           ; BSR set to: 1
  7873  003936  C100  F108         	movff	___fladd@b,??___fladd
  7874  00393A  C101  F109         	movff	___fladd@b+1,??___fladd+1
  7875  00393E  C102  F10A         	movff	___fladd@b+2,??___fladd+2
  7876  003942  C103  F10B         	movff	___fladd@b+3,??___fladd+3
  7877  003946  350B               	rlcf	(??___fladd+3)& (0+255),w,b
  7878  003948  330B               	rrcf	(??___fladd+3)& (0+255),f,b
  7879  00394A  330A               	rrcf	(??___fladd+2)& (0+255),f,b
  7880  00394C  3309               	rrcf	(??___fladd+1)& (0+255),f,b
  7881  00394E  3308               	rrcf	??___fladd& (0+255),f,b
  7882  003950  C108  F100         	movff	??___fladd,___fladd@b
  7883  003954  C109  F101         	movff	??___fladd+1,___fladd@b+1
  7884  003958  C10A  F102         	movff	??___fladd+2,___fladd@b+2
  7885  00395C  C10B  F103         	movff	??___fladd+3,___fladd@b+3
  7886  003960  290E               	incf	___fladd@bexp& (0+255),w,b
  7887  003962  A4D8               	btfss	status,2,c
  7888                           
  7889                           ; BSR set to: 1
  7890  003964  2B0E               	incf	___fladd@bexp& (0+255),f,b
  7891  003966                     l6096:
  7892                           
  7893                           ; BSR set to: 1
  7894  003966  290E               	incf	___fladd@bexp& (0+255),w,b
  7895  003968  B4D8               	btfsc	status,2,c
  7896  00396A  D003               	goto	u7830
  7897                           
  7898                           ; BSR set to: 1
  7899  00396C  510E               	movf	___fladd@bexp& (0+255),w,b
  7900  00396E  A4D8               	btfss	status,2,c
  7901  003970  D00D               	goto	l6104
  7902  003972                     u7830:
  7903                           
  7904                           ; BSR set to: 1
  7905  003972  0E00               	movlw	0
  7906  003974  6F00               	movwf	___fladd@b& (0+255),b
  7907  003976  0E00               	movlw	0
  7908  003978  6F01               	movwf	(___fladd@b+1)& (0+255),b
  7909  00397A  0E00               	movlw	0
  7910  00397C  6F02               	movwf	(___fladd@b+2)& (0+255),b
  7911  00397E  0E00               	movlw	0
  7912  003980  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7913  003982  510E               	movf	___fladd@bexp& (0+255),w,b
  7914  003984  A4D8               	btfss	status,2,c
  7915  003986  D002               	goto	l6104
  7916                           
  7917                           ; BSR set to: 1
  7918  003988  0E00               	movlw	0
  7919  00398A  6F0C               	movwf	___fladd@signs& (0+255),b
  7920  00398C                     l6104:
  7921                           
  7922                           ; BSR set to: 1
  7923  00398C  A10E               	btfss	___fladd@bexp& (0+255),0,b
  7924  00398E  D002               	goto	l6108
  7925                           
  7926                           ; BSR set to: 1
  7927  003990  8F02               	bsf	(___fladd@b+2)& (0+255),7,b
  7928  003992  D001               	goto	l6110
  7929  003994                     l6108:
  7930                           
  7931                           ; BSR set to: 1
  7932  003994  9F02               	bcf	(___fladd@b+2)& (0+255),7,b
  7933  003996                     l6110:
  7934                           
  7935                           ; BSR set to: 1
  7936  003996  90D8               	bcf	status,0,c
  7937  003998  310E               	rrcf	___fladd@bexp& (0+255),w,b
  7938  00399A  6F03               	movwf	(___fladd@b+3)& (0+255),b
  7939                           
  7940                           ; BSR set to: 1
  7941  00399C  BF0C               	btfsc	___fladd@signs& (0+255),7,b
  7942                           
  7943                           ; BSR set to: 1
  7944  00399E  8F03               	bsf	(___fladd@b+3)& (0+255),7,b
  7945                           
  7946                           ; BSR set to: 1
  7947  0039A0  C100  F100         	movff	___fladd@b,?___fladd
  7948  0039A4  C101  F101         	movff	___fladd@b+1,?___fladd+1
  7949  0039A8  C102  F102         	movff	___fladd@b+2,?___fladd+2
  7950  0039AC  C103  F103         	movff	___fladd@b+3,?___fladd+3
  7951                           
  7952                           ; BSR set to: 1
  7953  0039B0  0012               	return		;funcret
  7954  0039B2                     __end_of___fladd:
  7955                           	opt callstack 0
  7956                           
  7957 ;; *************** function ___flneg *****************
  7958 ;; Defined at:
  7959 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  f1              4    0[BANK1 ] unsigned char 
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;		None
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  4    0[BANK1 ] unsigned char 
  7966 ;; Registers used:
  7967 ;;		wreg, status,2, status,0
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7973 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7976 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7977 ;;Total ram usage:        4 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; Hardware stack levels required when called:   13
  7980 ;; This function calls:
  7981 ;;		Nothing
  7982 ;; This function is called by:
  7983 ;;		_efgtoa
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text24
  7988  00694C                     __ptext24:
  7989                           	opt callstack 0
  7990  00694C                     ___flneg:
  7991                           	opt callstack 13
  7992                           
  7993                           ; BSR set to: 1
  7994                           ;incstack = 0
  7995  00694C  0101               	movlb	1	; () banked
  7996  00694E  5100               	movf	___flneg@f1& (0+255),w,b
  7997  006950  1101               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7998  006952  1102               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7999  006954  1103               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8000  006956  B4D8               	btfsc	status,2,c
  8001  006958  D008               	goto	l7014
  8002                           
  8003                           ; BSR set to: 1
  8004  00695A  0E00               	movlw	0
  8005  00695C  1B00               	xorwf	___flneg@f1& (0+255),f,b
  8006  00695E  0E00               	movlw	0
  8007  006960  1B01               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8008  006962  0E00               	movlw	0
  8009  006964  1B02               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8010  006966  0E80               	movlw	128
  8011  006968  1B03               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8012  00696A                     l7014:
  8013                           
  8014                           ; BSR set to: 1
  8015  00696A  C100  F100         	movff	___flneg@f1,?___flneg
  8016  00696E  C101  F101         	movff	___flneg@f1+1,?___flneg+1
  8017  006972  C102  F102         	movff	___flneg@f1+2,?___flneg+2
  8018  006976  C103  F103         	movff	___flneg@f1+3,?___flneg+3
  8019                           
  8020                           ; BSR set to: 1
  8021  00697A  0012               	return		;funcret
  8022  00697C                     __end_of___flneg:
  8023                           	opt callstack 0
  8024                           
  8025 ;; *************** function ___flmul *****************
  8026 ;; Defined at:
  8027 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  b               4    0[BANK1 ] unsigned char 
  8030 ;;  a               4    4[BANK1 ] unsigned char 
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;  prod            4   19[BANK1 ] struct .
  8033 ;;  grs             4   13[BANK1 ] unsigned long 
  8034 ;;  temp            2   23[BANK1 ] struct .
  8035 ;;  bexp            1   18[BANK1 ] unsigned char 
  8036 ;;  aexp            1   17[BANK1 ] unsigned char 
  8037 ;;  sign            1   12[BANK1 ] unsigned char 
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  4    0[BANK1 ] unsigned char 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0, prodl, prodh
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8047 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;Total ram usage:       25 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:   13
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_efgtoa
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text25
  8062  002FFE                     __ptext25:
  8063                           	opt callstack 0
  8064  002FFE                     ___flmul:
  8065                           	opt callstack 13
  8066                           
  8067                           ; BSR set to: 1
  8068                           ;incstack = 0
  8069  002FFE  0101               	movlb	1	; () banked
  8070  003000  5103               	movf	(___flmul@b+3)& (0+255),w,b
  8071  003002  0B80               	andlw	128
  8072  003004  6F0C               	movwf	___flmul@sign& (0+255),b
  8073  003006  5103               	movf	(___flmul@b+3)& (0+255),w,b
  8074  003008  2503               	addwf	(___flmul@b+3)& (0+255),w,b
  8075  00300A  6F12               	movwf	___flmul@bexp& (0+255),b
  8076                           
  8077                           ; BSR set to: 1
  8078  00300C  BF02               	btfsc	(___flmul@b+2)& (0+255),7,b
  8079                           
  8080                           ; BSR set to: 1
  8081  00300E  8112               	bsf	___flmul@bexp& (0+255),0,b
  8082                           
  8083                           ; BSR set to: 1
  8084  003010  5112               	movf	___flmul@bexp& (0+255),w,b
  8085  003012  B4D8               	btfsc	status,2,c
  8086  003014  D00D               	goto	l6770
  8087                           
  8088                           ; BSR set to: 1
  8089  003016  2912               	incf	___flmul@bexp& (0+255),w,b
  8090  003018  A4D8               	btfss	status,2,c
  8091  00301A  D008               	goto	l6768
  8092                           
  8093                           ; BSR set to: 1
  8094  00301C  0E00               	movlw	0
  8095  00301E  6F00               	movwf	___flmul@b& (0+255),b
  8096  003020  0E00               	movlw	0
  8097  003022  6F01               	movwf	(___flmul@b+1)& (0+255),b
  8098  003024  0E00               	movlw	0
  8099  003026  6F02               	movwf	(___flmul@b+2)& (0+255),b
  8100  003028  0E00               	movlw	0
  8101  00302A  6F03               	movwf	(___flmul@b+3)& (0+255),b
  8102  00302C                     l6768:
  8103                           
  8104                           ; BSR set to: 1
  8105  00302C  8F02               	bsf	(___flmul@b+2)& (0+255),7,b
  8106  00302E  D008               	goto	l6772
  8107  003030                     l6770:
  8108                           
  8109                           ; BSR set to: 1
  8110  003030  0E00               	movlw	0
  8111  003032  6F00               	movwf	___flmul@b& (0+255),b
  8112  003034  0E00               	movlw	0
  8113  003036  6F01               	movwf	(___flmul@b+1)& (0+255),b
  8114  003038  0E00               	movlw	0
  8115  00303A  6F02               	movwf	(___flmul@b+2)& (0+255),b
  8116  00303C  0E00               	movlw	0
  8117  00303E  6F03               	movwf	(___flmul@b+3)& (0+255),b
  8118  003040                     l6772:
  8119                           
  8120                           ; BSR set to: 1
  8121  003040  5107               	movf	(___flmul@a+3)& (0+255),w,b
  8122  003042  0B80               	andlw	128
  8123  003044  1B0C               	xorwf	___flmul@sign& (0+255),f,b
  8124                           
  8125                           ; BSR set to: 1
  8126  003046  5107               	movf	(___flmul@a+3)& (0+255),w,b
  8127  003048  2507               	addwf	(___flmul@a+3)& (0+255),w,b
  8128  00304A  6F11               	movwf	___flmul@aexp& (0+255),b
  8129                           
  8130                           ; BSR set to: 1
  8131  00304C  BF06               	btfsc	(___flmul@a+2)& (0+255),7,b
  8132                           
  8133                           ; BSR set to: 1
  8134  00304E  8111               	bsf	___flmul@aexp& (0+255),0,b
  8135                           
  8136                           ; BSR set to: 1
  8137  003050  5111               	movf	___flmul@aexp& (0+255),w,b
  8138  003052  B4D8               	btfsc	status,2,c
  8139  003054  D00D               	goto	l6788
  8140                           
  8141                           ; BSR set to: 1
  8142  003056  2911               	incf	___flmul@aexp& (0+255),w,b
  8143  003058  A4D8               	btfss	status,2,c
  8144  00305A  D008               	goto	l6786
  8145                           
  8146                           ; BSR set to: 1
  8147  00305C  0E00               	movlw	0
  8148  00305E  6F04               	movwf	___flmul@a& (0+255),b
  8149  003060  0E00               	movlw	0
  8150  003062  6F05               	movwf	(___flmul@a+1)& (0+255),b
  8151  003064  0E00               	movlw	0
  8152  003066  6F06               	movwf	(___flmul@a+2)& (0+255),b
  8153  003068  0E00               	movlw	0
  8154  00306A  6F07               	movwf	(___flmul@a+3)& (0+255),b
  8155  00306C                     l6786:
  8156                           
  8157                           ; BSR set to: 1
  8158  00306C  8F06               	bsf	(___flmul@a+2)& (0+255),7,b
  8159  00306E  D008               	goto	l1442
  8160  003070                     l6788:
  8161                           
  8162                           ; BSR set to: 1
  8163  003070  0E00               	movlw	0
  8164  003072  6F04               	movwf	___flmul@a& (0+255),b
  8165  003074  0E00               	movlw	0
  8166  003076  6F05               	movwf	(___flmul@a+1)& (0+255),b
  8167  003078  0E00               	movlw	0
  8168  00307A  6F06               	movwf	(___flmul@a+2)& (0+255),b
  8169  00307C  0E00               	movlw	0
  8170  00307E  6F07               	movwf	(___flmul@a+3)& (0+255),b
  8171  003080                     l1442:
  8172                           
  8173                           ; BSR set to: 1
  8174  003080  5111               	movf	___flmul@aexp& (0+255),w,b
  8175  003082  B4D8               	btfsc	status,2,c
  8176  003084  D003               	goto	u9180
  8177                           
  8178                           ; BSR set to: 1
  8179  003086  5112               	movf	___flmul@bexp& (0+255),w,b
  8180  003088  A4D8               	btfss	status,2,c
  8181  00308A  D009               	goto	l6796
  8182  00308C                     u9180:
  8183                           
  8184                           ; BSR set to: 1
  8185  00308C  0E00               	movlw	0
  8186  00308E  6F00               	movwf	?___flmul& (0+255),b
  8187  003090  0E00               	movlw	0
  8188  003092  6F01               	movwf	(?___flmul+1)& (0+255),b
  8189  003094  0E00               	movlw	0
  8190  003096  6F02               	movwf	(?___flmul+2)& (0+255),b
  8191  003098  0E00               	movlw	0
  8192  00309A  6F03               	movwf	(?___flmul+3)& (0+255),b
  8193  00309C  0012               	return	
  8194  00309E                     l6796:
  8195                           
  8196                           ; BSR set to: 1
  8197  00309E  5106               	movf	(___flmul@a+2)& (0+255),w,b
  8198  0030A0  0300               	mulwf	___flmul@b& (0+255),b
  8199  0030A2  CFF3 F117          	movff	prodl,___flmul@temp
  8200  0030A6  CFF4 F118          	movff	prodh,___flmul@temp+1
  8201                           
  8202                           ; BSR set to: 1
  8203  0030AA  5117               	movf	___flmul@temp& (0+255),w,b
  8204  0030AC  6F0D               	movwf	___flmul@grs& (0+255),b
  8205  0030AE  6B0E               	clrf	(___flmul@grs+1)& (0+255),b
  8206  0030B0  6B0F               	clrf	(___flmul@grs+2)& (0+255),b
  8207  0030B2  6B10               	clrf	(___flmul@grs+3)& (0+255),b
  8208                           
  8209                           ; BSR set to: 1
  8210  0030B4  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8211  0030B6  6F13               	movwf	___flmul@prod& (0+255),b
  8212  0030B8  6B14               	clrf	(___flmul@prod+1)& (0+255),b
  8213  0030BA  6B15               	clrf	(___flmul@prod+2)& (0+255),b
  8214  0030BC  6B16               	clrf	(___flmul@prod+3)& (0+255),b
  8215  0030BE  5105               	movf	(___flmul@a+1)& (0+255),w,b
  8216  0030C0  0301               	mulwf	(___flmul@b+1)& (0+255),b
  8217  0030C2  CFF3 F117          	movff	prodl,___flmul@temp
  8218  0030C6  CFF4 F118          	movff	prodh,___flmul@temp+1
  8219                           
  8220                           ; BSR set to: 1
  8221  0030CA  5117               	movf	___flmul@temp& (0+255),w,b
  8222  0030CC  270D               	addwf	___flmul@grs& (0+255),f,b
  8223  0030CE  0E00               	movlw	0
  8224  0030D0  230E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8225  0030D2  230F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8226  0030D4  2310               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8227                           
  8228                           ; BSR set to: 1
  8229  0030D6  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8230  0030D8  2713               	addwf	___flmul@prod& (0+255),f,b
  8231  0030DA  0E00               	movlw	0
  8232  0030DC  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8233  0030DE  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8234  0030E0  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8235  0030E2  5104               	movf	___flmul@a& (0+255),w,b
  8236  0030E4  0302               	mulwf	(___flmul@b+2)& (0+255),b
  8237  0030E6  CFF3 F117          	movff	prodl,___flmul@temp
  8238  0030EA  CFF4 F118          	movff	prodh,___flmul@temp+1
  8239                           
  8240                           ; BSR set to: 1
  8241  0030EE  5117               	movf	___flmul@temp& (0+255),w,b
  8242  0030F0  270D               	addwf	___flmul@grs& (0+255),f,b
  8243  0030F2  0E00               	movlw	0
  8244  0030F4  230E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8245  0030F6  230F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8246  0030F8  2310               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8247                           
  8248                           ; BSR set to: 1
  8249  0030FA  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8250  0030FC  2713               	addwf	___flmul@prod& (0+255),f,b
  8251  0030FE  0E00               	movlw	0
  8252  003100  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8253  003102  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8254  003104  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8255                           
  8256                           ; BSR set to: 1
  8257  003106  C10F  F110         	movff	___flmul@grs+2,___flmul@grs+3
  8258  00310A  C10E  F10F         	movff	___flmul@grs+1,___flmul@grs+2
  8259  00310E  C10D  F10E         	movff	___flmul@grs,___flmul@grs+1
  8260  003112  6B0D               	clrf	___flmul@grs& (0+255),b
  8261                           
  8262                           ; BSR set to: 1
  8263  003114  5104               	movf	___flmul@a& (0+255),w,b
  8264  003116  0301               	mulwf	(___flmul@b+1)& (0+255),b
  8265  003118  CFF3 F117          	movff	prodl,___flmul@temp
  8266  00311C  CFF4 F118          	movff	prodh,___flmul@temp+1
  8267                           
  8268                           ; BSR set to: 1
  8269  003120  5117               	movf	___flmul@temp& (0+255),w,b
  8270  003122  270D               	addwf	___flmul@grs& (0+255),f,b
  8271  003124  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8272  003126  230E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8273  003128  0E00               	movlw	0
  8274  00312A  230F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8275  00312C  0E00               	movlw	0
  8276  00312E  2310               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8277                           
  8278                           ; BSR set to: 1
  8279  003130  5105               	movf	(___flmul@a+1)& (0+255),w,b
  8280  003132  0300               	mulwf	___flmul@b& (0+255),b
  8281  003134  CFF3 F117          	movff	prodl,___flmul@temp
  8282  003138  CFF4 F118          	movff	prodh,___flmul@temp+1
  8283                           
  8284                           ; BSR set to: 1
  8285  00313C  5117               	movf	___flmul@temp& (0+255),w,b
  8286  00313E  270D               	addwf	___flmul@grs& (0+255),f,b
  8287  003140  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8288  003142  230E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8289  003144  0E00               	movlw	0
  8290  003146  230F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8291  003148  0E00               	movlw	0
  8292  00314A  2310               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8293                           
  8294                           ; BSR set to: 1
  8295  00314C  C10F  F110         	movff	___flmul@grs+2,___flmul@grs+3
  8296  003150  C10E  F10F         	movff	___flmul@grs+1,___flmul@grs+2
  8297  003154  C10D  F10E         	movff	___flmul@grs,___flmul@grs+1
  8298  003158  6B0D               	clrf	___flmul@grs& (0+255),b
  8299  00315A  5104               	movf	___flmul@a& (0+255),w,b
  8300  00315C  0300               	mulwf	___flmul@b& (0+255),b
  8301  00315E  CFF3 F117          	movff	prodl,___flmul@temp
  8302  003162  CFF4 F118          	movff	prodh,___flmul@temp+1
  8303                           
  8304                           ; BSR set to: 1
  8305  003166  5117               	movf	___flmul@temp& (0+255),w,b
  8306  003168  270D               	addwf	___flmul@grs& (0+255),f,b
  8307  00316A  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8308  00316C  230E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8309  00316E  0E00               	movlw	0
  8310  003170  230F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8311  003172  0E00               	movlw	0
  8312  003174  2310               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8313                           
  8314                           ; BSR set to: 1
  8315  003176  5106               	movf	(___flmul@a+2)& (0+255),w,b
  8316  003178  0301               	mulwf	(___flmul@b+1)& (0+255),b
  8317  00317A  CFF3 F117          	movff	prodl,___flmul@temp
  8318  00317E  CFF4 F118          	movff	prodh,___flmul@temp+1
  8319  003182  5117               	movf	___flmul@temp& (0+255),w,b
  8320  003184  2713               	addwf	___flmul@prod& (0+255),f,b
  8321  003186  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8322  003188  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8323  00318A  0E00               	movlw	0
  8324  00318C  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8325  00318E  0E00               	movlw	0
  8326  003190  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8327                           
  8328                           ; BSR set to: 1
  8329  003192  5105               	movf	(___flmul@a+1)& (0+255),w,b
  8330  003194  0302               	mulwf	(___flmul@b+2)& (0+255),b
  8331  003196  CFF3 F117          	movff	prodl,___flmul@temp
  8332  00319A  CFF4 F118          	movff	prodh,___flmul@temp+1
  8333                           
  8334                           ; BSR set to: 1
  8335  00319E  5117               	movf	___flmul@temp& (0+255),w,b
  8336  0031A0  2713               	addwf	___flmul@prod& (0+255),f,b
  8337  0031A2  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8338  0031A4  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8339  0031A6  0E00               	movlw	0
  8340  0031A8  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8341  0031AA  0E00               	movlw	0
  8342  0031AC  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8343  0031AE  5106               	movf	(___flmul@a+2)& (0+255),w,b
  8344  0031B0  0302               	mulwf	(___flmul@b+2)& (0+255),b
  8345  0031B2  CFF3 F117          	movff	prodl,___flmul@temp
  8346  0031B6  CFF4 F118          	movff	prodh,___flmul@temp+1
  8347                           
  8348                           ; BSR set to: 1
  8349  0031BA  5117               	movf	___flmul@temp& (0+255),w,b
  8350  0031BC  6F08               	movwf	??___flmul& (0+255),b
  8351  0031BE  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8352  0031C0  6F09               	movwf	(??___flmul+1)& (0+255),b
  8353  0031C2  6B0A               	clrf	(??___flmul+2)& (0+255),b
  8354  0031C4  6B0B               	clrf	(??___flmul+3)& (0+255),b
  8355  0031C6  C10A  F10B         	movff	??___flmul+2,??___flmul+3
  8356  0031CA  C109  F10A         	movff	??___flmul+1,??___flmul+2
  8357  0031CE  C108  F109         	movff	??___flmul,??___flmul+1
  8358  0031D2  6B08               	clrf	??___flmul& (0+255),b
  8359  0031D4  5108               	movf	??___flmul& (0+255),w,b
  8360  0031D6  2713               	addwf	___flmul@prod& (0+255),f,b
  8361  0031D8  5109               	movf	(??___flmul+1)& (0+255),w,b
  8362  0031DA  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8363  0031DC  510A               	movf	(??___flmul+2)& (0+255),w,b
  8364  0031DE  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8365  0031E0  510B               	movf	(??___flmul+3)& (0+255),w,b
  8366  0031E2  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8367                           
  8368                           ; BSR set to: 1
  8369  0031E4  C10D  F108         	movff	___flmul@grs,??___flmul
  8370  0031E8  C10E  F109         	movff	___flmul@grs+1,??___flmul+1
  8371  0031EC  C10F  F10A         	movff	___flmul@grs+2,??___flmul+2
  8372  0031F0  C110  F10B         	movff	___flmul@grs+3,??___flmul+3
  8373  0031F4  0E19               	movlw	25
  8374  0031F6  D005               	goto	u9190
  8375  0031F8                     u9195:
  8376  0031F8  90D8               	bcf	status,0,c
  8377  0031FA  330B               	rrcf	(??___flmul+3)& (0+255),f,b
  8378  0031FC  330A               	rrcf	(??___flmul+2)& (0+255),f,b
  8379  0031FE  3309               	rrcf	(??___flmul+1)& (0+255),f,b
  8380  003200  3308               	rrcf	??___flmul& (0+255),f,b
  8381  003202                     u9190:
  8382  003202  2EE8               	decfsz	wreg,f,c
  8383  003204  D7F9               	goto	u9195
  8384  003206  5108               	movf	??___flmul& (0+255),w,b
  8385  003208  2713               	addwf	___flmul@prod& (0+255),f,b
  8386  00320A  5109               	movf	(??___flmul+1)& (0+255),w,b
  8387  00320C  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8388  00320E  510A               	movf	(??___flmul+2)& (0+255),w,b
  8389  003210  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8390  003212  510B               	movf	(??___flmul+3)& (0+255),w,b
  8391  003214  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8392                           
  8393                           ; BSR set to: 1
  8394  003216  C10F  F110         	movff	___flmul@grs+2,___flmul@grs+3
  8395  00321A  C10E  F10F         	movff	___flmul@grs+1,___flmul@grs+2
  8396  00321E  C10D  F10E         	movff	___flmul@grs,___flmul@grs+1
  8397  003222  6B0D               	clrf	___flmul@grs& (0+255),b
  8398                           
  8399                           ; BSR set to: 1
  8400  003224  5111               	movf	___flmul@aexp& (0+255),w,b
  8401  003226  C112  F108         	movff	___flmul@bexp,??___flmul
  8402  00322A  6B09               	clrf	(??___flmul+1)& (0+255),b
  8403  00322C  2708               	addwf	??___flmul& (0+255),f,b
  8404  00322E  0E00               	movlw	0
  8405  003230  2309               	addwfc	(??___flmul+1)& (0+255),f,b
  8406  003232  0E82               	movlw	130
  8407  003234  2508               	addwf	??___flmul& (0+255),w,b
  8408  003236  6F17               	movwf	___flmul@temp& (0+255),b
  8409  003238  0EFF               	movlw	255
  8410  00323A  2109               	addwfc	(??___flmul+1)& (0+255),w,b
  8411  00323C  6F18               	movwf	(___flmul@temp+1)& (0+255),b
  8412  00323E  D00F               	goto	l6844
  8413  003240                     l6838:
  8414                           
  8415                           ; BSR set to: 1
  8416  003240  90D8               	bcf	status,0,c
  8417  003242  3713               	rlcf	___flmul@prod& (0+255),f,b
  8418  003244  3714               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8419  003246  3715               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8420  003248  3716               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8421                           
  8422                           ; BSR set to: 1
  8423  00324A  BF10               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8424                           
  8425                           ; BSR set to: 1
  8426  00324C  8113               	bsf	___flmul@prod& (0+255),0,b
  8427                           
  8428                           ; BSR set to: 1
  8429  00324E  90D8               	bcf	status,0,c
  8430  003250  370D               	rlcf	___flmul@grs& (0+255),f,b
  8431  003252  370E               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8432  003254  370F               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8433  003256  3710               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8434  003258  0717               	decf	___flmul@temp& (0+255),f,b
  8435  00325A  A0D8               	btfss	status,0,c
  8436  00325C  0718               	decf	(___flmul@temp+1)& (0+255),f,b
  8437  00325E                     l6844:
  8438                           
  8439                           ; BSR set to: 1
  8440  00325E  AF15               	btfss	(___flmul@prod+2)& (0+255),7,b
  8441  003260  D7EF               	goto	l6838
  8442                           
  8443                           ; BSR set to: 1
  8444  003262  0E00               	movlw	0
  8445  003264  6F11               	movwf	___flmul@aexp& (0+255),b
  8446                           
  8447                           ; BSR set to: 1
  8448  003266  AF10               	btfss	(___flmul@grs+3)& (0+255),7,b
  8449  003268  D017               	goto	l1451
  8450                           
  8451                           ; BSR set to: 1
  8452  00326A  0EFF               	movlw	255
  8453  00326C  150D               	andwf	___flmul@grs& (0+255),w,b
  8454  00326E  6F08               	movwf	??___flmul& (0+255),b
  8455  003270  0EFF               	movlw	255
  8456  003272  150E               	andwf	(___flmul@grs+1)& (0+255),w,b
  8457  003274  6F09               	movwf	(??___flmul+1)& (0+255),b
  8458  003276  0EFF               	movlw	255
  8459  003278  150F               	andwf	(___flmul@grs+2)& (0+255),w,b
  8460  00327A  6F0A               	movwf	(??___flmul+2)& (0+255),b
  8461  00327C  0E7F               	movlw	127
  8462  00327E  1510               	andwf	(___flmul@grs+3)& (0+255),w,b
  8463  003280  6F0B               	movwf	(??___flmul+3)& (0+255),b
  8464  003282  5108               	movf	??___flmul& (0+255),w,b
  8465  003284  1109               	iorwf	(??___flmul+1)& (0+255),w,b
  8466  003286  110A               	iorwf	(??___flmul+2)& (0+255),w,b
  8467  003288  110B               	iorwf	(??___flmul+3)& (0+255),w,b
  8468  00328A  B4D8               	btfsc	status,2,c
  8469  00328C  D003               	goto	l1452
  8470  00328E                     u9230:
  8471                           
  8472                           ; BSR set to: 1
  8473  00328E  0E01               	movlw	1
  8474  003290  6F11               	movwf	___flmul@aexp& (0+255),b
  8475  003292  D002               	goto	l1451
  8476  003294                     l1452:
  8477                           
  8478                           ; BSR set to: 1
  8479  003294  B113               	btfsc	___flmul@prod& (0+255),0,b
  8480  003296  D7FB               	goto	u9230
  8481  003298                     l1451:
  8482                           
  8483                           ; BSR set to: 1
  8484  003298  5111               	movf	___flmul@aexp& (0+255),w,b
  8485  00329A  B4D8               	btfsc	status,2,c
  8486  00329C  D01F               	goto	l6864
  8487                           
  8488                           ; BSR set to: 1
  8489  00329E  0E01               	movlw	1
  8490  0032A0  2713               	addwf	___flmul@prod& (0+255),f,b
  8491  0032A2  0E00               	movlw	0
  8492  0032A4  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8493  0032A6  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8494  0032A8  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8495                           
  8496                           ; BSR set to: 1
  8497  0032AA  A116               	btfss	(___flmul@prod+3)& (0+255),0,b
  8498  0032AC  D017               	goto	l6864
  8499                           
  8500                           ; BSR set to: 1
  8501  0032AE  C113  F108         	movff	___flmul@prod,??___flmul
  8502  0032B2  C114  F109         	movff	___flmul@prod+1,??___flmul+1
  8503  0032B6  C115  F10A         	movff	___flmul@prod+2,??___flmul+2
  8504  0032BA  C116  F10B         	movff	___flmul@prod+3,??___flmul+3
  8505  0032BE  350B               	rlcf	(??___flmul+3)& (0+255),w,b
  8506  0032C0  330B               	rrcf	(??___flmul+3)& (0+255),f,b
  8507  0032C2  330A               	rrcf	(??___flmul+2)& (0+255),f,b
  8508  0032C4  3309               	rrcf	(??___flmul+1)& (0+255),f,b
  8509  0032C6  3308               	rrcf	??___flmul& (0+255),f,b
  8510  0032C8  C108  F113         	movff	??___flmul,___flmul@prod
  8511  0032CC  C109  F114         	movff	??___flmul+1,___flmul@prod+1
  8512  0032D0  C10A  F115         	movff	??___flmul+2,___flmul@prod+2
  8513  0032D4  C10B  F116         	movff	??___flmul+3,___flmul@prod+3
  8514                           
  8515                           ; BSR set to: 1
  8516  0032D8  4B17               	infsnz	___flmul@temp& (0+255),f,b
  8517  0032DA  2B18               	incf	(___flmul@temp+1)& (0+255),f,b
  8518  0032DC                     l6864:
  8519                           
  8520                           ; BSR set to: 1
  8521  0032DC  BF18               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8522  0032DE  D00D               	goto	l6868
  8523  0032E0  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8524  0032E2  E103               	bnz	u9270
  8525  0032E4  2917               	incf	___flmul@temp& (0+255),w,b
  8526  0032E6  A0D8               	btfss	status,0,c
  8527  0032E8  D008               	goto	l6868
  8528  0032EA                     u9270:
  8529                           
  8530                           ; BSR set to: 1
  8531  0032EA  0E00               	movlw	0
  8532  0032EC  6F13               	movwf	___flmul@prod& (0+255),b
  8533  0032EE  0E00               	movlw	0
  8534  0032F0  6F14               	movwf	(___flmul@prod+1)& (0+255),b
  8535  0032F2  0E80               	movlw	128
  8536  0032F4  6F15               	movwf	(___flmul@prod+2)& (0+255),b
  8537  0032F6  0E7F               	movlw	127
  8538  0032F8  D020               	goto	L9
  8539  0032FA                     l6868:
  8540                           
  8541                           ; BSR set to: 1
  8542  0032FA  BF18               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8543  0032FC  D005               	goto	u9280
  8544  0032FE  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  8545  003300  E10E               	bnz	l1459
  8546  003302  0517               	decf	___flmul@temp& (0+255),w,b
  8547  003304  B0D8               	btfsc	status,0,c
  8548  003306  D00B               	goto	l1459
  8549  003308                     u9280:
  8550                           
  8551                           ; BSR set to: 1
  8552  003308  0E00               	movlw	0
  8553  00330A  6F13               	movwf	___flmul@prod& (0+255),b
  8554  00330C  0E00               	movlw	0
  8555  00330E  6F14               	movwf	(___flmul@prod+1)& (0+255),b
  8556  003310  0E00               	movlw	0
  8557  003312  6F15               	movwf	(___flmul@prod+2)& (0+255),b
  8558  003314  0E00               	movlw	0
  8559  003316  6F16               	movwf	(___flmul@prod+3)& (0+255),b
  8560  003318  0E00               	movlw	0
  8561  00331A  6F0C               	movwf	___flmul@sign& (0+255),b
  8562  00331C  D00F               	goto	l6880
  8563  00331E                     l1459:
  8564                           
  8565                           ; BSR set to: 1
  8566  00331E  C117  F112         	movff	___flmul@temp,___flmul@bexp
  8567                           
  8568                           ; BSR set to: 1
  8569  003322  0EFF               	movlw	255
  8570  003324  1713               	andwf	___flmul@prod& (0+255),f,b
  8571  003326  0EFF               	movlw	255
  8572  003328  1714               	andwf	(___flmul@prod+1)& (0+255),f,b
  8573  00332A  0E7F               	movlw	127
  8574  00332C  1715               	andwf	(___flmul@prod+2)& (0+255),f,b
  8575  00332E  0E00               	movlw	0
  8576  003330  1716               	andwf	(___flmul@prod+3)& (0+255),f,b
  8577                           
  8578                           ; BSR set to: 1
  8579  003332  B112               	btfsc	___flmul@bexp& (0+255),0,b
  8580                           
  8581                           ; BSR set to: 1
  8582  003334  8F15               	bsf	(___flmul@prod+2)& (0+255),7,b
  8583                           
  8584                           ; BSR set to: 1
  8585  003336  90D8               	bcf	status,0,c
  8586  003338  3112               	rrcf	___flmul@bexp& (0+255),w,b
  8587  00333A                     L9:
  8588  00333A  6F16               	movwf	(___flmul@prod+3)& (0+255),b
  8589  00333C                     l6880:
  8590                           
  8591                           ; BSR set to: 1
  8592  00333C  510C               	movf	___flmul@sign& (0+255),w,b
  8593  00333E  1316               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8594                           
  8595                           ; BSR set to: 1
  8596  003340  C113  F100         	movff	___flmul@prod,?___flmul
  8597  003344  C114  F101         	movff	___flmul@prod+1,?___flmul+1
  8598  003348  C115  F102         	movff	___flmul@prod+2,?___flmul+2
  8599  00334C  C116  F103         	movff	___flmul@prod+3,?___flmul+3
  8600                           
  8601                           ; BSR set to: 1
  8602  003350  0012               	return		;funcret
  8603  003352                     __end_of___flmul:
  8604                           	opt callstack 0
  8605                           
  8606 ;; *************** function ___flge *****************
  8607 ;; Defined at:
  8608 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  ff1             4   25[BANK1 ] unsigned char 
  8611 ;;  ff2             4   29[BANK1 ] unsigned char 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;		None
  8614 ;; Return value:  Size  Location     Type
  8615 ;;		None               void
  8616 ;; Registers used:
  8617 ;;		wreg, status,2, status,0
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8623 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8625 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8626 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8627 ;;Total ram usage:       12 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:   13
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_efgtoa
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           	psect	text26
  8638  00548C                     __ptext26:
  8639                           	opt callstack 0
  8640  00548C                     ___flge:
  8641                           	opt callstack 13
  8642                           
  8643                           ; BSR set to: 1
  8644                           ;incstack = 0
  8645  00548C  0E00               	movlw	0
  8646  00548E  0101               	movlb	1	; () banked
  8647  005490  1519               	andwf	___flge@ff1& (0+255),w,b
  8648  005492  6F21               	movwf	??___flge& (0+255),b
  8649  005494  0E00               	movlw	0
  8650  005496  151A               	andwf	(___flge@ff1+1)& (0+255),w,b
  8651  005498  6F22               	movwf	(??___flge+1)& (0+255),b
  8652  00549A  0E80               	movlw	128
  8653  00549C  151B               	andwf	(___flge@ff1+2)& (0+255),w,b
  8654  00549E  6F23               	movwf	(??___flge+2)& (0+255),b
  8655  0054A0  0E7F               	movlw	127
  8656  0054A2  151C               	andwf	(___flge@ff1+3)& (0+255),w,b
  8657  0054A4  6F24               	movwf	(??___flge+3)& (0+255),b
  8658  0054A6  5121               	movf	??___flge& (0+255),w,b
  8659  0054A8  1122               	iorwf	(??___flge+1)& (0+255),w,b
  8660  0054AA  1123               	iorwf	(??___flge+2)& (0+255),w,b
  8661  0054AC  1124               	iorwf	(??___flge+3)& (0+255),w,b
  8662  0054AE  A4D8               	btfss	status,2,c
  8663  0054B0  D008               	goto	l6992
  8664                           
  8665                           ; BSR set to: 1
  8666  0054B2  0E00               	movlw	0
  8667  0054B4  6F19               	movwf	___flge@ff1& (0+255),b
  8668  0054B6  0E00               	movlw	0
  8669  0054B8  6F1A               	movwf	(___flge@ff1+1)& (0+255),b
  8670  0054BA  0E00               	movlw	0
  8671  0054BC  6F1B               	movwf	(___flge@ff1+2)& (0+255),b
  8672  0054BE  0E00               	movlw	0
  8673  0054C0  6F1C               	movwf	(___flge@ff1+3)& (0+255),b
  8674  0054C2                     l6992:
  8675                           
  8676                           ; BSR set to: 1
  8677  0054C2  0E00               	movlw	0
  8678  0054C4  151D               	andwf	___flge@ff2& (0+255),w,b
  8679  0054C6  6F21               	movwf	??___flge& (0+255),b
  8680  0054C8  0E00               	movlw	0
  8681  0054CA  151E               	andwf	(___flge@ff2+1)& (0+255),w,b
  8682  0054CC  6F22               	movwf	(??___flge+1)& (0+255),b
  8683  0054CE  0E80               	movlw	128
  8684  0054D0  151F               	andwf	(___flge@ff2+2)& (0+255),w,b
  8685  0054D2  6F23               	movwf	(??___flge+2)& (0+255),b
  8686  0054D4  0E7F               	movlw	127
  8687  0054D6  1520               	andwf	(___flge@ff2+3)& (0+255),w,b
  8688  0054D8  6F24               	movwf	(??___flge+3)& (0+255),b
  8689  0054DA  5121               	movf	??___flge& (0+255),w,b
  8690  0054DC  1122               	iorwf	(??___flge+1)& (0+255),w,b
  8691  0054DE  1123               	iorwf	(??___flge+2)& (0+255),w,b
  8692  0054E0  1124               	iorwf	(??___flge+3)& (0+255),w,b
  8693  0054E2  A4D8               	btfss	status,2,c
  8694  0054E4  D008               	goto	l6996
  8695                           
  8696                           ; BSR set to: 1
  8697  0054E6  0E00               	movlw	0
  8698  0054E8  6F1D               	movwf	___flge@ff2& (0+255),b
  8699  0054EA  0E00               	movlw	0
  8700  0054EC  6F1E               	movwf	(___flge@ff2+1)& (0+255),b
  8701  0054EE  0E00               	movlw	0
  8702  0054F0  6F1F               	movwf	(___flge@ff2+2)& (0+255),b
  8703  0054F2  0E00               	movlw	0
  8704  0054F4  6F20               	movwf	(___flge@ff2+3)& (0+255),b
  8705  0054F6                     l6996:
  8706                           
  8707                           ; BSR set to: 1
  8708  0054F6  AF1C               	btfss	(___flge@ff1+3)& (0+255),7,b
  8709  0054F8  D009               	goto	l7000
  8710                           
  8711                           ; BSR set to: 1
  8712  0054FA  6D19               	negf	___flge@ff1& (0+255),b
  8713  0054FC  1F1A               	comf	(___flge@ff1+1)& (0+255),f,b
  8714  0054FE  B0D8               	btfsc	status,0,c
  8715  005500  2B1A               	incf	(___flge@ff1+1)& (0+255),f,b
  8716  005502  1F1B               	comf	(___flge@ff1+2)& (0+255),f,b
  8717  005504  B0D8               	btfsc	status,0,c
  8718  005506  2B1B               	incf	(___flge@ff1+2)& (0+255),f,b
  8719  005508  0E80               	movlw	128
  8720  00550A  571C               	subfwb	(___flge@ff1+3)& (0+255),f,b
  8721  00550C                     l7000:
  8722                           
  8723                           ; BSR set to: 1
  8724  00550C  AF20               	btfss	(___flge@ff2+3)& (0+255),7,b
  8725  00550E  D009               	goto	l1093
  8726                           
  8727                           ; BSR set to: 1
  8728  005510  6D1D               	negf	___flge@ff2& (0+255),b
  8729  005512  1F1E               	comf	(___flge@ff2+1)& (0+255),f,b
  8730  005514  B0D8               	btfsc	status,0,c
  8731  005516  2B1E               	incf	(___flge@ff2+1)& (0+255),f,b
  8732  005518  1F1F               	comf	(___flge@ff2+2)& (0+255),f,b
  8733  00551A  B0D8               	btfsc	status,0,c
  8734  00551C  2B1F               	incf	(___flge@ff2+2)& (0+255),f,b
  8735  00551E  0E80               	movlw	128
  8736  005520  5720               	subfwb	(___flge@ff2+3)& (0+255),f,b
  8737  005522                     l1093:
  8738                           
  8739                           ; BSR set to: 1
  8740  005522  0E00               	movlw	0
  8741  005524  1B19               	xorwf	___flge@ff1& (0+255),f,b
  8742  005526  0E00               	movlw	0
  8743  005528  1B1A               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8744  00552A  0E00               	movlw	0
  8745  00552C  1B1B               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8746  00552E  0E80               	movlw	128
  8747  005530  1B1C               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8748  005532  0E00               	movlw	0
  8749  005534  1B1D               	xorwf	___flge@ff2& (0+255),f,b
  8750  005536  0E00               	movlw	0
  8751  005538  1B1E               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8752  00553A  0E00               	movlw	0
  8753  00553C  1B1F               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8754  00553E  0E80               	movlw	128
  8755  005540  1B20               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8756  005542  511D               	movf	___flge@ff2& (0+255),w,b
  8757  005544  5D19               	subwf	___flge@ff1& (0+255),w,b
  8758  005546  511E               	movf	(___flge@ff2+1)& (0+255),w,b
  8759  005548  591A               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8760  00554A  511F               	movf	(___flge@ff2+2)& (0+255),w,b
  8761  00554C  591B               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8762  00554E  5120               	movf	(___flge@ff2+3)& (0+255),w,b
  8763  005550  591C               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8764  005552  B0D8               	btfsc	status,0,c
  8765  005554  D002               	goto	l7006
  8766                           
  8767                           ; BSR set to: 1
  8768  005556  90D8               	bcf	status,0,c
  8769  005558  0012               	return	
  8770  00555A                     l7006:
  8771                           
  8772                           ; BSR set to: 1
  8773  00555A  80D8               	bsf	status,0,c
  8774                           
  8775                           ; BSR set to: 1
  8776  00555C  0012               	return		;funcret
  8777  00555E                     __end_of___flge:
  8778                           	opt callstack 0
  8779                           
  8780 ;; *************** function ___fleq *****************
  8781 ;; Defined at:
  8782 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  ff1             4    0[BANK1 ] unsigned char 
  8785 ;;  ff2             4    4[BANK1 ] unsigned char 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;		None               void
  8790 ;; Registers used:
  8791 ;;		wreg, status,2, status,0
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8797 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8801 ;;Total ram usage:       12 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; Hardware stack levels required when called:   13
  8804 ;; This function calls:
  8805 ;;		Nothing
  8806 ;; This function is called by:
  8807 ;;		_efgtoa
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text27
  8812  005F76                     __ptext27:
  8813                           	opt callstack 0
  8814  005F76                     ___fleq:
  8815                           	opt callstack 13
  8816                           
  8817                           ; BSR set to: 1
  8818                           ;incstack = 0
  8819  005F76  0E00               	movlw	0
  8820  005F78  0101               	movlb	1	; () banked
  8821  005F7A  1500               	andwf	___fleq@ff1& (0+255),w,b
  8822  005F7C  6F08               	movwf	??___fleq& (0+255),b
  8823  005F7E  0E00               	movlw	0
  8824  005F80  1501               	andwf	(___fleq@ff1+1)& (0+255),w,b
  8825  005F82  6F09               	movwf	(??___fleq+1)& (0+255),b
  8826  005F84  0E80               	movlw	128
  8827  005F86  1502               	andwf	(___fleq@ff1+2)& (0+255),w,b
  8828  005F88  6F0A               	movwf	(??___fleq+2)& (0+255),b
  8829  005F8A  0E7F               	movlw	127
  8830  005F8C  1503               	andwf	(___fleq@ff1+3)& (0+255),w,b
  8831  005F8E  6F0B               	movwf	(??___fleq+3)& (0+255),b
  8832  005F90  5108               	movf	??___fleq& (0+255),w,b
  8833  005F92  1109               	iorwf	(??___fleq+1)& (0+255),w,b
  8834  005F94  110A               	iorwf	(??___fleq+2)& (0+255),w,b
  8835  005F96  110B               	iorwf	(??___fleq+3)& (0+255),w,b
  8836  005F98  A4D8               	btfss	status,2,c
  8837  005F9A  D008               	goto	l6976
  8838                           
  8839                           ; BSR set to: 1
  8840  005F9C  0E00               	movlw	0
  8841  005F9E  6F00               	movwf	___fleq@ff1& (0+255),b
  8842  005FA0  0E00               	movlw	0
  8843  005FA2  6F01               	movwf	(___fleq@ff1+1)& (0+255),b
  8844  005FA4  0E00               	movlw	0
  8845  005FA6  6F02               	movwf	(___fleq@ff1+2)& (0+255),b
  8846  005FA8  0E00               	movlw	0
  8847  005FAA  6F03               	movwf	(___fleq@ff1+3)& (0+255),b
  8848  005FAC                     l6976:
  8849                           
  8850                           ; BSR set to: 1
  8851  005FAC  0E00               	movlw	0
  8852  005FAE  1504               	andwf	___fleq@ff2& (0+255),w,b
  8853  005FB0  6F08               	movwf	??___fleq& (0+255),b
  8854  005FB2  0E00               	movlw	0
  8855  005FB4  1505               	andwf	(___fleq@ff2+1)& (0+255),w,b
  8856  005FB6  6F09               	movwf	(??___fleq+1)& (0+255),b
  8857  005FB8  0E80               	movlw	128
  8858  005FBA  1506               	andwf	(___fleq@ff2+2)& (0+255),w,b
  8859  005FBC  6F0A               	movwf	(??___fleq+2)& (0+255),b
  8860  005FBE  0E7F               	movlw	127
  8861  005FC0  1507               	andwf	(___fleq@ff2+3)& (0+255),w,b
  8862  005FC2  6F0B               	movwf	(??___fleq+3)& (0+255),b
  8863  005FC4  5108               	movf	??___fleq& (0+255),w,b
  8864  005FC6  1109               	iorwf	(??___fleq+1)& (0+255),w,b
  8865  005FC8  110A               	iorwf	(??___fleq+2)& (0+255),w,b
  8866  005FCA  110B               	iorwf	(??___fleq+3)& (0+255),w,b
  8867  005FCC  A4D8               	btfss	status,2,c
  8868  005FCE  D008               	goto	l6980
  8869                           
  8870                           ; BSR set to: 1
  8871  005FD0  0E00               	movlw	0
  8872  005FD2  6F04               	movwf	___fleq@ff2& (0+255),b
  8873  005FD4  0E00               	movlw	0
  8874  005FD6  6F05               	movwf	(___fleq@ff2+1)& (0+255),b
  8875  005FD8  0E00               	movlw	0
  8876  005FDA  6F06               	movwf	(___fleq@ff2+2)& (0+255),b
  8877  005FDC  0E00               	movlw	0
  8878  005FDE  6F07               	movwf	(___fleq@ff2+3)& (0+255),b
  8879  005FE0                     l6980:
  8880                           
  8881                           ; BSR set to: 1
  8882  005FE0  5104               	movf	___fleq@ff2& (0+255),w,b
  8883  005FE2  1900               	xorwf	___fleq@ff1& (0+255),w,b
  8884  005FE4  E10A               	bnz	u9440
  8885  005FE6  5105               	movf	(___fleq@ff2+1)& (0+255),w,b
  8886  005FE8  1901               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  8887  005FEA  E107               	bnz	u9440
  8888  005FEC  5106               	movf	(___fleq@ff2+2)& (0+255),w,b
  8889  005FEE  1902               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  8890  005FF0  E104               	bnz	u9440
  8891  005FF2  5107               	movf	(___fleq@ff2+3)& (0+255),w,b
  8892  005FF4  1903               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  8893  005FF6  B4D8               	btfsc	status,2,c
  8894  005FF8  D002               	goto	l6984
  8895  005FFA                     u9440:
  8896                           
  8897                           ; BSR set to: 1
  8898  005FFA  90D8               	bcf	status,0,c
  8899  005FFC  0012               	return	
  8900  005FFE                     l6984:
  8901                           
  8902                           ; BSR set to: 1
  8903  005FFE  80D8               	bsf	status,0,c
  8904                           
  8905                           ; BSR set to: 1
  8906  006000  0012               	return		;funcret
  8907  006002                     __end_of___fleq:
  8908                           	opt callstack 0
  8909                           
  8910 ;; *************** function ___fldiv *****************
  8911 ;; Defined at:
  8912 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  b               4    0[BANK1 ] unsigned char 
  8915 ;;  a               4    4[BANK1 ] unsigned char 
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;  grs             4   19[BANK1 ] unsigned long 
  8918 ;;  rem             4   12[BANK1 ] unsigned long 
  8919 ;;  new_exp         2   17[BANK1 ] short 
  8920 ;;  aexp            1   24[BANK1 ] unsigned char 
  8921 ;;  bexp            1   23[BANK1 ] unsigned char 
  8922 ;;  sign            1   16[BANK1 ] unsigned char 
  8923 ;; Return value:  Size  Location     Type
  8924 ;;                  4    0[BANK1 ] unsigned char 
  8925 ;; Registers used:
  8926 ;;		wreg, status,2, status,0
  8927 ;; Tracked objects:
  8928 ;;		On entry : 0/0
  8929 ;;		On exit  : 0/0
  8930 ;;		Unchanged: 0/0
  8931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8932 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8934 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8935 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8936 ;;Total ram usage:       25 bytes
  8937 ;; Hardware stack levels used:    1
  8938 ;; Hardware stack levels required when called:   13
  8939 ;; This function calls:
  8940 ;;		Nothing
  8941 ;; This function is called by:
  8942 ;;		_efgtoa
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	text28
  8947  003F74                     __ptext28:
  8948                           	opt callstack 0
  8949  003F74                     ___fldiv:
  8950                           	opt callstack 13
  8951                           
  8952                           ; BSR set to: 1
  8953                           ;incstack = 0
  8954  003F74  0101               	movlb	1	; () banked
  8955  003F76  5103               	movf	(___fldiv@b+3)& (0+255),w,b
  8956  003F78  0B80               	andlw	128
  8957  003F7A  6F10               	movwf	___fldiv@sign& (0+255),b
  8958  003F7C  5103               	movf	(___fldiv@b+3)& (0+255),w,b
  8959  003F7E  2503               	addwf	(___fldiv@b+3)& (0+255),w,b
  8960  003F80  6F17               	movwf	___fldiv@bexp& (0+255),b
  8961                           
  8962                           ; BSR set to: 1
  8963  003F82  BF02               	btfsc	(___fldiv@b+2)& (0+255),7,b
  8964                           
  8965                           ; BSR set to: 1
  8966  003F84  8117               	bsf	___fldiv@bexp& (0+255),0,b
  8967                           
  8968                           ; BSR set to: 1
  8969  003F86  5117               	movf	___fldiv@bexp& (0+255),w,b
  8970  003F88  B4D8               	btfsc	status,2,c
  8971  003F8A  D00D               	goto	l6634
  8972                           
  8973                           ; BSR set to: 1
  8974  003F8C  2917               	incf	___fldiv@bexp& (0+255),w,b
  8975  003F8E  A4D8               	btfss	status,2,c
  8976  003F90  D008               	goto	l6630
  8977                           
  8978                           ; BSR set to: 1
  8979  003F92  0E00               	movlw	0
  8980  003F94  6F00               	movwf	___fldiv@b& (0+255),b
  8981  003F96  0E00               	movlw	0
  8982  003F98  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  8983  003F9A  0E00               	movlw	0
  8984  003F9C  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  8985  003F9E  0E00               	movlw	0
  8986  003FA0  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  8987  003FA2                     l6630:
  8988                           
  8989                           ; BSR set to: 1
  8990  003FA2  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
  8991  003FA4  D006               	goto	L10
  8992  003FA6                     l6634:
  8993                           
  8994                           ; BSR set to: 1
  8995  003FA6  0E00               	movlw	0
  8996  003FA8  6F00               	movwf	___fldiv@b& (0+255),b
  8997  003FAA  0E00               	movlw	0
  8998  003FAC  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  8999  003FAE  0E00               	movlw	0
  9000  003FB0  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9001  003FB2                     L10:
  9002  003FB2  0E00               	movlw	0
  9003  003FB4  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9004                           
  9005                           ; BSR set to: 1
  9006  003FB6  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  9007  003FB8  0B80               	andlw	128
  9008  003FBA  1B10               	xorwf	___fldiv@sign& (0+255),f,b
  9009                           
  9010                           ; BSR set to: 1
  9011  003FBC  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  9012  003FBE  2507               	addwf	(___fldiv@a+3)& (0+255),w,b
  9013  003FC0  6F18               	movwf	___fldiv@aexp& (0+255),b
  9014                           
  9015                           ; BSR set to: 1
  9016  003FC2  BF06               	btfsc	(___fldiv@a+2)& (0+255),7,b
  9017                           
  9018                           ; BSR set to: 1
  9019  003FC4  8118               	bsf	___fldiv@aexp& (0+255),0,b
  9020                           
  9021                           ; BSR set to: 1
  9022  003FC6  5118               	movf	___fldiv@aexp& (0+255),w,b
  9023  003FC8  B4D8               	btfsc	status,2,c
  9024  003FCA  D00D               	goto	l6654
  9025                           
  9026                           ; BSR set to: 1
  9027  003FCC  2918               	incf	___fldiv@aexp& (0+255),w,b
  9028  003FCE  A4D8               	btfss	status,2,c
  9029  003FD0  D008               	goto	l6650
  9030                           
  9031                           ; BSR set to: 1
  9032  003FD2  0E00               	movlw	0
  9033  003FD4  6F04               	movwf	___fldiv@a& (0+255),b
  9034  003FD6  0E00               	movlw	0
  9035  003FD8  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  9036  003FDA  0E00               	movlw	0
  9037  003FDC  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  9038  003FDE  0E00               	movlw	0
  9039  003FE0  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  9040  003FE2                     l6650:
  9041                           
  9042                           ; BSR set to: 1
  9043  003FE2  8F06               	bsf	(___fldiv@a+2)& (0+255),7,b
  9044  003FE4  D006               	goto	L11
  9045  003FE6                     l6654:
  9046                           
  9047                           ; BSR set to: 1
  9048  003FE6  0E00               	movlw	0
  9049  003FE8  6F04               	movwf	___fldiv@a& (0+255),b
  9050  003FEA  0E00               	movlw	0
  9051  003FEC  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  9052  003FEE  0E00               	movlw	0
  9053  003FF0  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  9054  003FF2                     L11:
  9055  003FF2  0E00               	movlw	0
  9056  003FF4  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  9057                           
  9058                           ; BSR set to: 1
  9059  003FF6  5104               	movf	___fldiv@a& (0+255),w,b
  9060  003FF8  1105               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9061  003FFA  1106               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9062  003FFC  1107               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9063  003FFE  A4D8               	btfss	status,2,c
  9064  004000  D017               	goto	l6668
  9065                           
  9066                           ; BSR set to: 1
  9067  004002  0E00               	movlw	0
  9068  004004  6F00               	movwf	___fldiv@b& (0+255),b
  9069  004006  0E00               	movlw	0
  9070  004008  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  9071  00400A  0E00               	movlw	0
  9072  00400C  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9073  00400E  0E00               	movlw	0
  9074  004010  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9075                           
  9076                           ; BSR set to: 1
  9077  004012  0E80               	movlw	128
  9078  004014  1302               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9079  004016  0E7F               	movlw	127
  9080  004018  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9081  00401A                     l6662:
  9082                           
  9083                           ; BSR set to: 1
  9084  00401A  5110               	movf	___fldiv@sign& (0+255),w,b
  9085  00401C  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9086                           
  9087                           ; BSR set to: 1
  9088  00401E  C100  F100         	movff	___fldiv@b,?___fldiv
  9089  004022  C101  F101         	movff	___fldiv@b+1,?___fldiv+1
  9090  004026  C102  F102         	movff	___fldiv@b+2,?___fldiv+2
  9091  00402A  C103  F103         	movff	___fldiv@b+3,?___fldiv+3
  9092  00402E  0012               	return	
  9093  004030                     l6668:
  9094                           
  9095                           ; BSR set to: 1
  9096  004030  5117               	movf	___fldiv@bexp& (0+255),w,b
  9097  004032  A4D8               	btfss	status,2,c
  9098  004034  D009               	goto	l6676
  9099                           
  9100                           ; BSR set to: 1
  9101                           
  9102                           ; BSR set to: 1
  9103  004036  0E00               	movlw	0
  9104  004038  6F00               	movwf	?___fldiv& (0+255),b
  9105  00403A  0E00               	movlw	0
  9106  00403C  6F01               	movwf	(?___fldiv+1)& (0+255),b
  9107  00403E  0E00               	movlw	0
  9108  004040  6F02               	movwf	(?___fldiv+2)& (0+255),b
  9109  004042  0E00               	movlw	0
  9110  004044  6F03               	movwf	(?___fldiv+3)& (0+255),b
  9111  004046  0012               	return	
  9112  004048                     l6676:
  9113                           
  9114                           ; BSR set to: 1
  9115  004048  5118               	movf	___fldiv@aexp& (0+255),w,b
  9116  00404A  C117  F108         	movff	___fldiv@bexp,??___fldiv
  9117  00404E  6B09               	clrf	(??___fldiv+1)& (0+255),b
  9118  004050  5F08               	subwf	??___fldiv& (0+255),f,b
  9119  004052  0E00               	movlw	0
  9120  004054  5B09               	subwfb	(??___fldiv+1)& (0+255),f,b
  9121  004056  0E7F               	movlw	127
  9122  004058  2508               	addwf	??___fldiv& (0+255),w,b
  9123  00405A  6F11               	movwf	___fldiv@new_exp& (0+255),b
  9124  00405C  0E00               	movlw	0
  9125  00405E  2109               	addwfc	(??___fldiv+1)& (0+255),w,b
  9126  004060  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9127                           
  9128                           ; BSR set to: 1
  9129  004062  C100  F10C         	movff	___fldiv@b,___fldiv@rem
  9130  004066  C101  F10D         	movff	___fldiv@b+1,___fldiv@rem+1
  9131  00406A  C102  F10E         	movff	___fldiv@b+2,___fldiv@rem+2
  9132  00406E  C103  F10F         	movff	___fldiv@b+3,___fldiv@rem+3
  9133                           
  9134                           ; BSR set to: 1
  9135  004072  0E00               	movlw	0
  9136  004074  6F00               	movwf	___fldiv@b& (0+255),b
  9137  004076  0E00               	movlw	0
  9138  004078  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  9139  00407A  0E00               	movlw	0
  9140  00407C  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9141  00407E  0E00               	movlw	0
  9142  004080  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9143                           
  9144                           ; BSR set to: 1
  9145  004082  0E00               	movlw	0
  9146  004084  6F13               	movwf	___fldiv@grs& (0+255),b
  9147  004086  0E00               	movlw	0
  9148  004088  6F14               	movwf	(___fldiv@grs+1)& (0+255),b
  9149  00408A  0E00               	movlw	0
  9150  00408C  6F15               	movwf	(___fldiv@grs+2)& (0+255),b
  9151  00408E  0E00               	movlw	0
  9152  004090  6F16               	movwf	(___fldiv@grs+3)& (0+255),b
  9153                           
  9154                           ; BSR set to: 1
  9155  004092  0E00               	movlw	0
  9156  004094  6F18               	movwf	___fldiv@aexp& (0+255),b
  9157  004096  D028               	goto	l1412
  9158  004098                     l6686:
  9159                           
  9160                           ; BSR set to: 1
  9161  004098  5118               	movf	___fldiv@aexp& (0+255),w,b
  9162  00409A  B4D8               	btfsc	status,2,c
  9163  00409C  D011               	goto	l6694
  9164                           
  9165                           ; BSR set to: 1
  9166  00409E  90D8               	bcf	status,0,c
  9167  0040A0  370C               	rlcf	___fldiv@rem& (0+255),f,b
  9168  0040A2  370D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9169  0040A4  370E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9170  0040A6  370F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9171  0040A8  90D8               	bcf	status,0,c
  9172  0040AA  3700               	rlcf	___fldiv@b& (0+255),f,b
  9173  0040AC  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9174  0040AE  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9175  0040B0  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9176                           
  9177                           ; BSR set to: 1
  9178  0040B2  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  9179                           
  9180                           ; BSR set to: 1
  9181  0040B4  8100               	bsf	___fldiv@b& (0+255),0,b
  9182                           
  9183                           ; BSR set to: 1
  9184  0040B6  90D8               	bcf	status,0,c
  9185  0040B8  3713               	rlcf	___fldiv@grs& (0+255),f,b
  9186  0040BA  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9187  0040BC  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9188  0040BE  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9189  0040C0                     l6694:
  9190                           
  9191                           ; BSR set to: 1
  9192  0040C0  5104               	movf	___fldiv@a& (0+255),w,b
  9193  0040C2  5D0C               	subwf	___fldiv@rem& (0+255),w,b
  9194  0040C4  5105               	movf	(___fldiv@a+1)& (0+255),w,b
  9195  0040C6  590D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9196  0040C8  5106               	movf	(___fldiv@a+2)& (0+255),w,b
  9197  0040CA  590E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9198  0040CC  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  9199  0040CE  590F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9200  0040D0  A0D8               	btfss	status,0,c
  9201  0040D2  D009               	goto	l6700
  9202                           
  9203                           ; BSR set to: 1
  9204  0040D4  8D16               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9205                           
  9206                           ; BSR set to: 1
  9207  0040D6  5104               	movf	___fldiv@a& (0+255),w,b
  9208  0040D8  5F0C               	subwf	___fldiv@rem& (0+255),f,b
  9209  0040DA  5105               	movf	(___fldiv@a+1)& (0+255),w,b
  9210  0040DC  5B0D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9211  0040DE  5106               	movf	(___fldiv@a+2)& (0+255),w,b
  9212  0040E0  5B0E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9213  0040E2  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  9214  0040E4  5B0F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9215  0040E6                     l6700:
  9216                           
  9217                           ; BSR set to: 1
  9218  0040E6  2B18               	incf	___fldiv@aexp& (0+255),f,b
  9219  0040E8                     l1412:
  9220                           
  9221                           ; BSR set to: 1
  9222  0040E8  0E19               	movlw	25
  9223  0040EA  6518               	cpfsgt	___fldiv@aexp& (0+255),b
  9224  0040EC  D7D5               	goto	l6686
  9225                           
  9226                           ; BSR set to: 1
  9227  0040EE  510C               	movf	___fldiv@rem& (0+255),w,b
  9228  0040F0  110D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9229  0040F2  110E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9230  0040F4  110F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9231  0040F6  B4D8               	btfsc	status,2,c
  9232  0040F8  D011               	goto	l6712
  9233                           
  9234                           ; BSR set to: 1
  9235  0040FA  8113               	bsf	___fldiv@grs& (0+255),0,b
  9236  0040FC  D00F               	goto	l6712
  9237  0040FE                     l6706:
  9238                           
  9239                           ; BSR set to: 1
  9240  0040FE  90D8               	bcf	status,0,c
  9241  004100  3700               	rlcf	___fldiv@b& (0+255),f,b
  9242  004102  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9243  004104  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9244  004106  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9245                           
  9246                           ; BSR set to: 1
  9247  004108  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  9248                           
  9249                           ; BSR set to: 1
  9250  00410A  8100               	bsf	___fldiv@b& (0+255),0,b
  9251                           
  9252                           ; BSR set to: 1
  9253  00410C  90D8               	bcf	status,0,c
  9254  00410E  3713               	rlcf	___fldiv@grs& (0+255),f,b
  9255  004110  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9256  004112  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9257  004114  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9258  004116  0711               	decf	___fldiv@new_exp& (0+255),f,b
  9259  004118  A0D8               	btfss	status,0,c
  9260  00411A  0712               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9261  00411C                     l6712:
  9262                           
  9263                           ; BSR set to: 1
  9264  00411C  AF02               	btfss	(___fldiv@b+2)& (0+255),7,b
  9265  00411E  D7EF               	goto	l6706
  9266                           
  9267                           ; BSR set to: 1
  9268  004120  0E00               	movlw	0
  9269  004122  6F18               	movwf	___fldiv@aexp& (0+255),b
  9270                           
  9271                           ; BSR set to: 1
  9272  004124  AF16               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9273  004126  D017               	goto	l1423
  9274                           
  9275                           ; BSR set to: 1
  9276  004128  0EFF               	movlw	255
  9277  00412A  1513               	andwf	___fldiv@grs& (0+255),w,b
  9278  00412C  6F08               	movwf	??___fldiv& (0+255),b
  9279  00412E  0EFF               	movlw	255
  9280  004130  1514               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9281  004132  6F09               	movwf	(??___fldiv+1)& (0+255),b
  9282  004134  0EFF               	movlw	255
  9283  004136  1515               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9284  004138  6F0A               	movwf	(??___fldiv+2)& (0+255),b
  9285  00413A  0E7F               	movlw	127
  9286  00413C  1516               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9287  00413E  6F0B               	movwf	(??___fldiv+3)& (0+255),b
  9288  004140  5108               	movf	??___fldiv& (0+255),w,b
  9289  004142  1109               	iorwf	(??___fldiv+1)& (0+255),w,b
  9290  004144  110A               	iorwf	(??___fldiv+2)& (0+255),w,b
  9291  004146  110B               	iorwf	(??___fldiv+3)& (0+255),w,b
  9292  004148  B4D8               	btfsc	status,2,c
  9293  00414A  D003               	goto	l1424
  9294  00414C                     u9040:
  9295                           
  9296                           ; BSR set to: 1
  9297  00414C  0E01               	movlw	1
  9298  00414E  6F18               	movwf	___fldiv@aexp& (0+255),b
  9299  004150  D002               	goto	l1423
  9300  004152                     l1424:
  9301                           
  9302                           ; BSR set to: 1
  9303  004152  B100               	btfsc	___fldiv@b& (0+255),0,b
  9304  004154  D7FB               	goto	u9040
  9305  004156                     l1423:
  9306                           
  9307                           ; BSR set to: 1
  9308  004156  5118               	movf	___fldiv@aexp& (0+255),w,b
  9309  004158  B4D8               	btfsc	status,2,c
  9310  00415A  D01F               	goto	l6732
  9311                           
  9312                           ; BSR set to: 1
  9313  00415C  0E01               	movlw	1
  9314  00415E  2700               	addwf	___fldiv@b& (0+255),f,b
  9315  004160  0E00               	movlw	0
  9316  004162  2301               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9317  004164  2302               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9318  004166  2303               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9319                           
  9320                           ; BSR set to: 1
  9321  004168  A103               	btfss	(___fldiv@b+3)& (0+255),0,b
  9322  00416A  D017               	goto	l6732
  9323                           
  9324                           ; BSR set to: 1
  9325  00416C  C100  F108         	movff	___fldiv@b,??___fldiv
  9326  004170  C101  F109         	movff	___fldiv@b+1,??___fldiv+1
  9327  004174  C102  F10A         	movff	___fldiv@b+2,??___fldiv+2
  9328  004178  C103  F10B         	movff	___fldiv@b+3,??___fldiv+3
  9329  00417C  350B               	rlcf	(??___fldiv+3)& (0+255),w,b
  9330  00417E  330B               	rrcf	(??___fldiv+3)& (0+255),f,b
  9331  004180  330A               	rrcf	(??___fldiv+2)& (0+255),f,b
  9332  004182  3309               	rrcf	(??___fldiv+1)& (0+255),f,b
  9333  004184  3308               	rrcf	??___fldiv& (0+255),f,b
  9334  004186  C108  F100         	movff	??___fldiv,___fldiv@b
  9335  00418A  C109  F101         	movff	??___fldiv+1,___fldiv@b+1
  9336  00418E  C10A  F102         	movff	??___fldiv+2,___fldiv@b+2
  9337  004192  C10B  F103         	movff	??___fldiv+3,___fldiv@b+3
  9338                           
  9339                           ; BSR set to: 1
  9340  004196  4B11               	infsnz	___fldiv@new_exp& (0+255),f,b
  9341  004198  2B12               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9342  00419A                     l6732:
  9343                           
  9344                           ; BSR set to: 1
  9345  00419A  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9346  00419C  D010               	goto	l6736
  9347  00419E  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9348  0041A0  E103               	bnz	u9080
  9349  0041A2  2911               	incf	___fldiv@new_exp& (0+255),w,b
  9350  0041A4  A0D8               	btfss	status,0,c
  9351  0041A6  D00B               	goto	l6736
  9352  0041A8                     u9080:
  9353                           
  9354                           ; BSR set to: 1
  9355  0041A8  0E00               	movlw	0
  9356  0041AA  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9357  0041AC  6911               	setf	___fldiv@new_exp& (0+255),b
  9358  0041AE  0E00               	movlw	0
  9359  0041B0  6F00               	movwf	___fldiv@b& (0+255),b
  9360  0041B2  0E00               	movlw	0
  9361  0041B4  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  9362  0041B6  0E00               	movlw	0
  9363  0041B8  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9364  0041BA  0E00               	movlw	0
  9365  0041BC  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9366  0041BE                     l6736:
  9367                           
  9368                           ; BSR set to: 1
  9369  0041BE  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9370  0041C0  D005               	goto	u9090
  9371  0041C2  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9372  0041C4  E111               	bnz	l6740
  9373  0041C6  0511               	decf	___fldiv@new_exp& (0+255),w,b
  9374  0041C8  B0D8               	btfsc	status,0,c
  9375  0041CA  D00E               	goto	l6740
  9376  0041CC                     u9090:
  9377                           
  9378                           ; BSR set to: 1
  9379  0041CC  0E00               	movlw	0
  9380  0041CE  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9381  0041D0  0E00               	movlw	0
  9382  0041D2  6F11               	movwf	___fldiv@new_exp& (0+255),b
  9383  0041D4  0E00               	movlw	0
  9384  0041D6  6F00               	movwf	___fldiv@b& (0+255),b
  9385  0041D8  0E00               	movlw	0
  9386  0041DA  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  9387  0041DC  0E00               	movlw	0
  9388  0041DE  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  9389  0041E0  0E00               	movlw	0
  9390  0041E2  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9391  0041E4  0E00               	movlw	0
  9392  0041E6  6F10               	movwf	___fldiv@sign& (0+255),b
  9393  0041E8                     l6740:
  9394                           
  9395                           ; BSR set to: 1
  9396  0041E8  C111  F117         	movff	___fldiv@new_exp,___fldiv@bexp
  9397                           
  9398                           ; BSR set to: 1
  9399  0041EC  A117               	btfss	___fldiv@bexp& (0+255),0,b
  9400  0041EE  D002               	goto	l6746
  9401                           
  9402                           ; BSR set to: 1
  9403  0041F0  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
  9404  0041F2  D001               	goto	l6748
  9405  0041F4                     l6746:
  9406                           
  9407                           ; BSR set to: 1
  9408  0041F4  9F02               	bcf	(___fldiv@b+2)& (0+255),7,b
  9409  0041F6                     l6748:
  9410                           
  9411                           ; BSR set to: 1
  9412  0041F6  90D8               	bcf	status,0,c
  9413  0041F8  3117               	rrcf	___fldiv@bexp& (0+255),w,b
  9414  0041FA  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  9415  0041FC  D70E               	goto	l6662
  9416  0041FE                     __end_of___fldiv:
  9417                           	opt callstack 0
  9418                           
  9419 ;; *************** function ___awmod *****************
  9420 ;; Defined at:
  9421 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  dividend        2    0[BANK1 ] int 
  9424 ;;  divisor         2    2[BANK1 ] int 
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;  sign            1    5[BANK1 ] unsigned char 
  9427 ;;  counter         1    4[BANK1 ] unsigned char 
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  2    0[BANK1 ] int 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, status,0
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9437 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;Total ram usage:        6 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; Hardware stack levels required when called:   13
  9444 ;; This function calls:
  9445 ;;		Nothing
  9446 ;; This function is called by:
  9447 ;;		_efgtoa
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451                           	psect	text29
  9452  006314                     __ptext29:
  9453                           	opt callstack 0
  9454  006314                     ___awmod:
  9455                           	opt callstack 13
  9456                           
  9457                           ; BSR set to: 1
  9458                           ;incstack = 0
  9459  006314  0E00               	movlw	0
  9460  006316  0101               	movlb	1	; () banked
  9461  006318  6F05               	movwf	___awmod@sign& (0+255),b
  9462                           
  9463                           ; BSR set to: 1
  9464  00631A  AF01               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9465  00631C  D006               	goto	l6944
  9466                           
  9467                           ; BSR set to: 1
  9468  00631E  6D00               	negf	___awmod@dividend& (0+255),b
  9469  006320  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  9470  006322  B0D8               	btfsc	status,0,c
  9471  006324  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  9472                           
  9473                           ; BSR set to: 1
  9474  006326  0E01               	movlw	1
  9475  006328  6F05               	movwf	___awmod@sign& (0+255),b
  9476  00632A                     l6944:
  9477                           
  9478                           ; BSR set to: 1
  9479  00632A  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9480  00632C  D004               	goto	l6948
  9481                           
  9482                           ; BSR set to: 1
  9483  00632E  6D02               	negf	___awmod@divisor& (0+255),b
  9484  006330  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
  9485  006332  B0D8               	btfsc	status,0,c
  9486  006334  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
  9487  006336                     l6948:
  9488                           
  9489                           ; BSR set to: 1
  9490  006336  5102               	movf	___awmod@divisor& (0+255),w,b
  9491  006338  1103               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9492  00633A  B4D8               	btfsc	status,2,c
  9493  00633C  D018               	goto	l6964
  9494                           
  9495                           ; BSR set to: 1
  9496  00633E  0E01               	movlw	1
  9497  006340  6F04               	movwf	___awmod@counter& (0+255),b
  9498  006342  D004               	goto	l6954
  9499  006344                     l6952:
  9500                           
  9501                           ; BSR set to: 1
  9502  006344  90D8               	bcf	status,0,c
  9503  006346  3702               	rlcf	___awmod@divisor& (0+255),f,b
  9504  006348  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9505  00634A  2B04               	incf	___awmod@counter& (0+255),f,b
  9506  00634C                     l6954:
  9507                           
  9508                           ; BSR set to: 1
  9509  00634C  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9510  00634E  D7FA               	goto	l6952
  9511  006350                     u9390:
  9512                           
  9513                           ; BSR set to: 1
  9514  006350  5102               	movf	___awmod@divisor& (0+255),w,b
  9515  006352  5D00               	subwf	___awmod@dividend& (0+255),w,b
  9516  006354  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  9517  006356  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9518  006358  A0D8               	btfss	status,0,c
  9519  00635A  D004               	goto	l6960
  9520                           
  9521                           ; BSR set to: 1
  9522  00635C  5102               	movf	___awmod@divisor& (0+255),w,b
  9523  00635E  5F00               	subwf	___awmod@dividend& (0+255),f,b
  9524  006360  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  9525  006362  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9526  006364                     l6960:
  9527                           
  9528                           ; BSR set to: 1
  9529  006364  90D8               	bcf	status,0,c
  9530  006366  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9531  006368  3302               	rrcf	___awmod@divisor& (0+255),f,b
  9532                           
  9533                           ; BSR set to: 1
  9534  00636A  2F04               	decfsz	___awmod@counter& (0+255),f,b
  9535  00636C  D7F1               	goto	u9390
  9536  00636E                     l6964:
  9537                           
  9538                           ; BSR set to: 1
  9539  00636E  5105               	movf	___awmod@sign& (0+255),w,b
  9540  006370  B4D8               	btfsc	status,2,c
  9541  006372  D004               	goto	l6968
  9542                           
  9543                           ; BSR set to: 1
  9544  006374  6D00               	negf	___awmod@dividend& (0+255),b
  9545  006376  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  9546  006378  B0D8               	btfsc	status,0,c
  9547  00637A  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  9548  00637C                     l6968:
  9549                           
  9550                           ; BSR set to: 1
  9551  00637C  C100  F100         	movff	___awmod@dividend,?___awmod
  9552  006380  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
  9553                           
  9554                           ; BSR set to: 1
  9555  006384  0012               	return		;funcret
  9556  006386                     __end_of___awmod:
  9557                           	opt callstack 0
  9558                           
  9559 ;; *************** function ___awdiv *****************
  9560 ;; Defined at:
  9561 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  9562 ;; Parameters:    Size  Location     Type
  9563 ;;  dividend        2    0[BANK1 ] int 
  9564 ;;  divisor         2    2[BANK1 ] int 
  9565 ;; Auto vars:     Size  Location     Type
  9566 ;;  quotient        2    6[BANK1 ] int 
  9567 ;;  sign            1    5[BANK1 ] unsigned char 
  9568 ;;  counter         1    4[BANK1 ] unsigned char 
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  2    0[BANK1 ] int 
  9571 ;; Registers used:
  9572 ;;		wreg, status,2, status,0
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9578 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9579 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9581 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9582 ;;Total ram usage:        8 bytes
  9583 ;; Hardware stack levels used:    1
  9584 ;; Hardware stack levels required when called:   13
  9585 ;; This function calls:
  9586 ;;		Nothing
  9587 ;; This function is called by:
  9588 ;;		_efgtoa
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text30
  9593  00608C                     __ptext30:
  9594                           	opt callstack 0
  9595  00608C                     ___awdiv:
  9596                           	opt callstack 13
  9597                           
  9598                           ; BSR set to: 1
  9599                           ;incstack = 0
  9600  00608C  0E00               	movlw	0
  9601  00608E  0101               	movlb	1	; () banked
  9602  006090  6F05               	movwf	___awdiv@sign& (0+255),b
  9603                           
  9604                           ; BSR set to: 1
  9605  006092  AF03               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9606  006094  D006               	goto	l6900
  9607                           
  9608                           ; BSR set to: 1
  9609  006096  6D02               	negf	___awdiv@divisor& (0+255),b
  9610  006098  1F03               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9611  00609A  B0D8               	btfsc	status,0,c
  9612  00609C  2B03               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9613                           
  9614                           ; BSR set to: 1
  9615  00609E  0E01               	movlw	1
  9616  0060A0  6F05               	movwf	___awdiv@sign& (0+255),b
  9617  0060A2                     l6900:
  9618                           
  9619                           ; BSR set to: 1
  9620  0060A2  AF01               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9621  0060A4  D006               	goto	l6906
  9622                           
  9623                           ; BSR set to: 1
  9624  0060A6  6D00               	negf	___awdiv@dividend& (0+255),b
  9625  0060A8  1F01               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9626  0060AA  B0D8               	btfsc	status,0,c
  9627  0060AC  2B01               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9628                           
  9629                           ; BSR set to: 1
  9630  0060AE  0E01               	movlw	1
  9631  0060B0  1B05               	xorwf	___awdiv@sign& (0+255),f,b
  9632  0060B2                     l6906:
  9633                           
  9634                           ; BSR set to: 1
  9635  0060B2  0E00               	movlw	0
  9636  0060B4  6F07               	movwf	(___awdiv@quotient+1)& (0+255),b
  9637  0060B6  0E00               	movlw	0
  9638  0060B8  6F06               	movwf	___awdiv@quotient& (0+255),b
  9639                           
  9640                           ; BSR set to: 1
  9641  0060BA  5102               	movf	___awdiv@divisor& (0+255),w,b
  9642  0060BC  1103               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9643  0060BE  B4D8               	btfsc	status,2,c
  9644  0060C0  D01C               	goto	l6928
  9645                           
  9646                           ; BSR set to: 1
  9647  0060C2  0E01               	movlw	1
  9648  0060C4  6F04               	movwf	___awdiv@counter& (0+255),b
  9649  0060C6  D004               	goto	l6914
  9650  0060C8                     l6912:
  9651                           
  9652                           ; BSR set to: 1
  9653  0060C8  90D8               	bcf	status,0,c
  9654  0060CA  3702               	rlcf	___awdiv@divisor& (0+255),f,b
  9655  0060CC  3703               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9656  0060CE  2B04               	incf	___awdiv@counter& (0+255),f,b
  9657  0060D0                     l6914:
  9658                           
  9659                           ; BSR set to: 1
  9660  0060D0  AF03               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9661  0060D2  D7FA               	goto	l6912
  9662  0060D4                     u9330:
  9663                           
  9664                           ; BSR set to: 1
  9665  0060D4  90D8               	bcf	status,0,c
  9666  0060D6  3706               	rlcf	___awdiv@quotient& (0+255),f,b
  9667  0060D8  3707               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9668                           
  9669                           ; BSR set to: 1
  9670  0060DA  5102               	movf	___awdiv@divisor& (0+255),w,b
  9671  0060DC  5D00               	subwf	___awdiv@dividend& (0+255),w,b
  9672  0060DE  5103               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9673  0060E0  5901               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9674  0060E2  A0D8               	btfss	status,0,c
  9675  0060E4  D005               	goto	l6924
  9676                           
  9677                           ; BSR set to: 1
  9678  0060E6  5102               	movf	___awdiv@divisor& (0+255),w,b
  9679  0060E8  5F00               	subwf	___awdiv@dividend& (0+255),f,b
  9680  0060EA  5103               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9681  0060EC  5B01               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9682                           
  9683                           ; BSR set to: 1
  9684  0060EE  8106               	bsf	___awdiv@quotient& (0+255),0,b
  9685  0060F0                     l6924:
  9686                           
  9687                           ; BSR set to: 1
  9688  0060F0  90D8               	bcf	status,0,c
  9689  0060F2  3303               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9690  0060F4  3302               	rrcf	___awdiv@divisor& (0+255),f,b
  9691                           
  9692                           ; BSR set to: 1
  9693  0060F6  2F04               	decfsz	___awdiv@counter& (0+255),f,b
  9694  0060F8  D7ED               	goto	u9330
  9695  0060FA                     l6928:
  9696                           
  9697                           ; BSR set to: 1
  9698  0060FA  5105               	movf	___awdiv@sign& (0+255),w,b
  9699  0060FC  B4D8               	btfsc	status,2,c
  9700  0060FE  D004               	goto	l6932
  9701                           
  9702                           ; BSR set to: 1
  9703  006100  6D06               	negf	___awdiv@quotient& (0+255),b
  9704  006102  1F07               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9705  006104  B0D8               	btfsc	status,0,c
  9706  006106  2B07               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9707  006108                     l6932:
  9708                           
  9709                           ; BSR set to: 1
  9710  006108  C106  F100         	movff	___awdiv@quotient,?___awdiv
  9711  00610C  C107  F101         	movff	___awdiv@quotient+1,?___awdiv+1
  9712                           
  9713                           ; BSR set to: 1
  9714  006110  0012               	return		;funcret
  9715  006112                     __end_of___awdiv:
  9716                           	opt callstack 0
  9717                           
  9718 ;; *************** function _atoi *****************
  9719 ;; Defined at:
  9720 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;  s               2    7[BANK1 ] PTR const unsigned char 
  9723 ;;		 -> STR_15(21), STR_14(5), STR_13(21), STR_12(5), 
  9724 ;;		 -> STR_11(39), STR_10(10), STR_9(6), STR_8(6), 
  9725 ;;		 -> STR_7(31), STR_6(14), STR_3(15), 
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;  n               2   20[BANK1 ] int 
  9728 ;;  neg             2   13[BANK1 ] int 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  2    7[BANK1 ] int 
  9731 ;; Registers used:
  9732 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9738 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9741 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9742 ;;Total ram usage:       15 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:   14
  9745 ;; This function calls:
  9746 ;;		___wmul
  9747 ;;		_isdigit
  9748 ;;		_isspace
  9749 ;; This function is called by:
  9750 ;;		_vfpfcnvrt
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           	psect	text31
  9755  004D22                     __ptext31:
  9756                           	opt callstack 0
  9757  004D22                     _atoi:
  9758                           	opt callstack 13
  9759                           
  9760                           ; BSR set to: 1
  9761                           ;incstack = 0
  9762  004D22  0E00               	movlw	0
  9763  004D24  0101               	movlb	1	; () banked
  9764  004D26  6F15               	movwf	(atoi@n+1)& (0+255),b
  9765  004D28  0E00               	movlw	0
  9766  004D2A  6F14               	movwf	atoi@n& (0+255),b
  9767  004D2C  0E00               	movlw	0
  9768  004D2E  6F0E               	movwf	(atoi@neg+1)& (0+255),b
  9769  004D30  0E00               	movlw	0
  9770  004D32  6F0D               	movwf	atoi@neg& (0+255),b
  9771  004D34  D002               	goto	l7536
  9772  004D36                     l7534:
  9773                           
  9774                           ; BSR set to: 1
  9775  004D36  4B07               	infsnz	atoi@s& (0+255),f,b
  9776  004D38  2B08               	incf	(atoi@s+1)& (0+255),f,b
  9777  004D3A                     l7536:
  9778                           
  9779                           ; BSR set to: 1
  9780  004D3A  0E01               	movlw	1
  9781  004D3C  6F13               	movwf	_atoi$2106& (0+255),b
  9782                           
  9783                           ; BSR set to: 1
  9784  004D3E  C107  FFF6         	movff	atoi@s,tblptrl
  9785  004D42  C108  FFF7         	movff	atoi@s+1,tblptrh
  9786  004D46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9787  004D46  6AF8               	clrf	tblptru,c
  9788  004D48                     	endif
  9789  004D48                     	if	0	;tblptru may be non-zero
  9790  004D48                     	endif
  9791  004D48  0008               	tblrd		*
  9792  004D4A  50F5               	movf	tablat,w,c
  9793  004D4C  0A20               	xorlw	32
  9794  004D4E  B4D8               	btfsc	status,2,c
  9795  004D50  D019               	goto	l7544
  9796                           
  9797                           ; BSR set to: 1
  9798  004D52  0EF7               	movlw	247
  9799  004D54  6F09               	movwf	??_atoi& (0+255),b
  9800  004D56  0EFF               	movlw	255
  9801  004D58  6F0A               	movwf	(??_atoi+1)& (0+255),b
  9802  004D5A  C107  FFF6         	movff	atoi@s,tblptrl
  9803  004D5E  C108  FFF7         	movff	atoi@s+1,tblptrh
  9804  004D62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9805  004D62  6AF8               	clrf	tblptru,c
  9806  004D64                     	endif
  9807  004D64                     	if	0	;tblptru may be non-zero
  9808  004D64                     	endif
  9809  004D64  0008               	tblrd		*
  9810  004D66  50F5               	movf	tablat,w,c
  9811  004D68  6F0B               	movwf	(??_atoi+2)& (0+255),b
  9812  004D6A  6B0C               	clrf	(??_atoi+3)& (0+255),b
  9813  004D6C  5109               	movf	??_atoi& (0+255),w,b
  9814  004D6E  270B               	addwf	(??_atoi+2)& (0+255),f,b
  9815  004D70  510A               	movf	(??_atoi+1)& (0+255),w,b
  9816  004D72  230C               	addwfc	(??_atoi+3)& (0+255),f,b
  9817  004D74  510C               	movf	(??_atoi+3)& (0+255),w,b
  9818  004D76  E104               	bnz	u10420
  9819  004D78  0E05               	movlw	5
  9820  004D7A  5D0B               	subwf	(??_atoi+2)& (0+255),w,b
  9821  004D7C  A0D8               	btfss	status,0,c
  9822  004D7E  D002               	goto	l7544
  9823  004D80                     u10420:
  9824                           
  9825                           ; BSR set to: 1
  9826  004D80  0E00               	movlw	0
  9827  004D82  6F13               	movwf	_atoi$2106& (0+255),b
  9828  004D84                     l7544:
  9829                           
  9830                           ; BSR set to: 1
  9831  004D84  C113  F10F         	movff	_atoi$2106,_atoi$2105
  9832  004D88  6B10               	clrf	(_atoi$2105+1)& (0+255),b
  9833                           
  9834                           ; BSR set to: 1
  9835  004D8A  510F               	movf	_atoi$2105& (0+255),w,b
  9836  004D8C  1110               	iorwf	(_atoi$2105+1)& (0+255),w,b
  9837  004D8E  B4D8               	btfsc	status,2,c
  9838  004D90  D008               	goto	l7554
  9839  004D92  D7D1               	goto	l7534
  9840  004D94                     l7550:
  9841                           
  9842                           ; BSR set to: 1
  9843  004D94  0E00               	movlw	0
  9844  004D96  6F0E               	movwf	(atoi@neg+1)& (0+255),b
  9845  004D98  0E01               	movlw	1
  9846  004D9A  6F0D               	movwf	atoi@neg& (0+255),b
  9847  004D9C                     l7552:
  9848                           
  9849                           ; BSR set to: 1
  9850  004D9C  4B07               	infsnz	atoi@s& (0+255),f,b
  9851  004D9E  2B08               	incf	(atoi@s+1)& (0+255),f,b
  9852  004DA0  D031               	goto	l7560
  9853  004DA2                     l7554:
  9854                           
  9855                           ; BSR set to: 1
  9856  004DA2  C107  FFF6         	movff	atoi@s,tblptrl
  9857  004DA6  C108  FFF7         	movff	atoi@s+1,tblptrh
  9858  004DAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9859  004DAA  6AF8               	clrf	tblptru,c
  9860  004DAC                     	endif
  9861  004DAC                     	if	0	;tblptru may be non-zero
  9862  004DAC                     	endif
  9863  004DAC  0008               	tblrd		*
  9864  004DAE  50F5               	movf	tablat,w,c
  9865  004DB0  6F09               	movwf	??_atoi& (0+255),b
  9866  004DB2  6B0A               	clrf	(??_atoi+1)& (0+255),b
  9867                           
  9868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9869                           ; Switch size 1, requested type "simple"
  9870                           ; Number of cases is 1, Range of values is 0 to 0
  9871                           ; switch strategies available:
  9872                           ; Name         Instructions Cycles
  9873                           ; simple_byte            4     3 (average)
  9874                           ;	Chosen strategy is simple_byte
  9875  004DB4  510A               	movf	(??_atoi+1)& (0+255),w,b
  9876  004DB6  0A00               	xorlw	0	; case 0
  9877  004DB8  A4D8               	btfss	status,2,c
  9878  004DBA  D024               	goto	l7560
  9879                           
  9880                           ; BSR set to: 1
  9881                           ; Switch size 1, requested type "simple"
  9882                           ; Number of cases is 2, Range of values is 43 to 45
  9883                           ; switch strategies available:
  9884                           ; Name         Instructions Cycles
  9885                           ; simple_byte            7     4 (average)
  9886                           ;	Chosen strategy is simple_byte
  9887  004DBC  5109               	movf	??_atoi& (0+255),w,b
  9888  004DBE  0A2B               	xorlw	43	; case 43
  9889  004DC0  B4D8               	btfsc	status,2,c
  9890  004DC2  D7EC               	goto	l7552
  9891  004DC4  0A06               	xorlw	6	; case 45
  9892  004DC6  B4D8               	btfsc	status,2,c
  9893  004DC8  D7E5               	goto	l7550
  9894  004DCA  D01C               	goto	l7560
  9895  004DCC                     l7556:
  9896                           
  9897                           ; BSR set to: 1
  9898  004DCC  C114  F100         	movff	atoi@n,___wmul@multiplier
  9899  004DD0  C115  F101         	movff	atoi@n+1,___wmul@multiplier+1
  9900  004DD4  0E00               	movlw	0
  9901  004DD6  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9902  004DD8  0E0A               	movlw	10
  9903  004DDA  6F02               	movwf	___wmul@multiplicand& (0+255),b
  9904  004DDC  EC70  F035         	call	___wmul	;wreg free
  9905  004DE0  C107  FFF6         	movff	atoi@s,tblptrl
  9906  004DE4  C108  FFF7         	movff	atoi@s+1,tblptrh
  9907  004DE8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9908  004DE8  6AF8               	clrf	tblptru,c
  9909  004DEA                     	endif
  9910  004DEA                     	if	0	;tblptru may be non-zero
  9911  004DEA                     	endif
  9912  004DEA  0008               	tblrd		*
  9913  004DEC  50F5               	movf	tablat,w,c
  9914  004DEE  0101               	movlb	1	; () banked
  9915  004DF0  5F00               	subwf	?___wmul& (0+255),f,b
  9916  004DF2  0E00               	movlw	0
  9917  004DF4  5B01               	subwfb	(?___wmul+1)& (0+255),f,b
  9918  004DF6  0E30               	movlw	48
  9919  004DF8  2500               	addwf	?___wmul& (0+255),w,b
  9920  004DFA  6F14               	movwf	atoi@n& (0+255),b
  9921  004DFC  0E00               	movlw	0
  9922  004DFE  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  9923  004E00  6F15               	movwf	(atoi@n+1)& (0+255),b
  9924  004E02  D7CC               	goto	l7552
  9925  004E04                     l7560:
  9926                           
  9927                           ; BSR set to: 1
  9928  004E04  0ED0               	movlw	208
  9929  004E06  6F09               	movwf	??_atoi& (0+255),b
  9930  004E08  0EFF               	movlw	255
  9931  004E0A  6F0A               	movwf	(??_atoi+1)& (0+255),b
  9932  004E0C  C107  FFF6         	movff	atoi@s,tblptrl
  9933  004E10  C108  FFF7         	movff	atoi@s+1,tblptrh
  9934  004E14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9935  004E14  6AF8               	clrf	tblptru,c
  9936  004E16                     	endif
  9937  004E16                     	if	0	;tblptru may be non-zero
  9938  004E16                     	endif
  9939  004E16  0008               	tblrd		*
  9940  004E18  50F5               	movf	tablat,w,c
  9941  004E1A  6F0B               	movwf	(??_atoi+2)& (0+255),b
  9942  004E1C  6B0C               	clrf	(??_atoi+3)& (0+255),b
  9943  004E1E  5109               	movf	??_atoi& (0+255),w,b
  9944  004E20  270B               	addwf	(??_atoi+2)& (0+255),f,b
  9945  004E22  510A               	movf	(??_atoi+1)& (0+255),w,b
  9946  004E24  230C               	addwfc	(??_atoi+3)& (0+255),f,b
  9947  004E26  510C               	movf	(??_atoi+3)& (0+255),w,b
  9948  004E28  E106               	bnz	u10440
  9949  004E2A  0E0A               	movlw	10
  9950  004E2C  5D0B               	subwf	(??_atoi+2)& (0+255),w,b
  9951  004E2E  B0D8               	btfsc	status,0,c
  9952  004E30  D002               	goto	u10440
  9953  004E32  0E01               	movlw	1
  9954  004E34  D001               	goto	u10450
  9955  004E36                     u10440:
  9956  004E36  0E00               	movlw	0
  9957  004E38                     u10450:
  9958  004E38  6F11               	movwf	_atoi$2107& (0+255),b
  9959  004E3A  6B12               	clrf	(_atoi$2107+1)& (0+255),b
  9960                           
  9961                           ; BSR set to: 1
  9962  004E3C  5111               	movf	_atoi$2107& (0+255),w,b
  9963  004E3E  1112               	iorwf	(_atoi$2107+1)& (0+255),w,b
  9964  004E40  A4D8               	btfss	status,2,c
  9965  004E42  D7C4               	goto	l7556
  9966                           
  9967                           ; BSR set to: 1
  9968  004E44  510D               	movf	atoi@neg& (0+255),w,b
  9969  004E46  110E               	iorwf	(atoi@neg+1)& (0+255),w,b
  9970  004E48  A4D8               	btfss	status,2,c
  9971  004E4A  D00D               	goto	l1538
  9972                           
  9973                           ; BSR set to: 1
  9974  004E4C  C114  F109         	movff	atoi@n,??_atoi
  9975  004E50  C115  F10A         	movff	atoi@n+1,??_atoi+1
  9976  004E54  1F09               	comf	??_atoi& (0+255),f,b
  9977  004E56  1F0A               	comf	(??_atoi+1)& (0+255),f,b
  9978  004E58  4B09               	infsnz	??_atoi& (0+255),f,b
  9979  004E5A  2B0A               	incf	(??_atoi+1)& (0+255),f,b
  9980  004E5C  C109  F107         	movff	??_atoi,?_atoi
  9981  004E60  C10A  F108         	movff	??_atoi+1,?_atoi+1
  9982  004E64  0012               	return	
  9983  004E66                     l1538:
  9984                           
  9985                           ; BSR set to: 1
  9986  004E66  C114  F107         	movff	atoi@n,?_atoi
  9987  004E6A  C115  F108         	movff	atoi@n+1,?_atoi+1
  9988                           
  9989                           ; BSR set to: 1
  9990  004E6E  0012               	return		;funcret
  9991  004E70                     __end_of_atoi:
  9992                           	opt callstack 0
  9993                           
  9994 ;; *************** function _isspace *****************
  9995 ;; Defined at:
  9996 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  c               2    0[BANK1 ] int 
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  2    0[BANK1 ] int 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2, status,0
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10010 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;Total ram usage:        7 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:   13
 10017 ;; This function calls:
 10018 ;;		Nothing
 10019 ;; This function is called by:
 10020 ;;		_atoi
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text32
 10025  0066D2                     __ptext32:
 10026                           	opt callstack 0
 10027  0066D2                     _isspace:
 10028                           	opt callstack 13
 10029                           
 10030                           ; BSR set to: 1
 10031                           ;incstack = 0
 10032  0066D2  0E01               	movlw	1
 10033  0066D4  0101               	movlb	1	; () banked
 10034  0066D6  6F06               	movwf	_isspace$2136& (0+255),b
 10035                           
 10036                           ; BSR set to: 1
 10037  0066D8  0E20               	movlw	32
 10038  0066DA  1900               	xorwf	isspace@c& (0+255),w,b
 10039  0066DC  1101               	iorwf	(isspace@c+1)& (0+255),w,b
 10040  0066DE  B4D8               	btfsc	status,2,c
 10041  0066E0  D014               	goto	l7070
 10042                           
 10043                           ; BSR set to: 1
 10044  0066E2  0EF7               	movlw	247
 10045  0066E4  6F02               	movwf	??_isspace& (0+255),b
 10046  0066E6  0EFF               	movlw	255
 10047  0066E8  6F03               	movwf	(??_isspace+1)& (0+255),b
 10048  0066EA  C100  F104         	movff	isspace@c,??_isspace+2
 10049  0066EE  C101  F105         	movff	isspace@c+1,??_isspace+3
 10050  0066F2  5102               	movf	??_isspace& (0+255),w,b
 10051  0066F4  2704               	addwf	(??_isspace+2)& (0+255),f,b
 10052  0066F6  5103               	movf	(??_isspace+1)& (0+255),w,b
 10053  0066F8  2305               	addwfc	(??_isspace+3)& (0+255),f,b
 10054  0066FA  5105               	movf	(??_isspace+3)& (0+255),w,b
 10055  0066FC  E104               	bnz	u9590
 10056  0066FE  0E05               	movlw	5
 10057  006700  5D04               	subwf	(??_isspace+2)& (0+255),w,b
 10058  006702  A0D8               	btfss	status,0,c
 10059  006704  D002               	goto	l7070
 10060  006706                     u9590:
 10061                           
 10062                           ; BSR set to: 1
 10063  006706  0E00               	movlw	0
 10064  006708  6F06               	movwf	_isspace$2136& (0+255),b
 10065  00670A                     l7070:
 10066                           
 10067                           ; BSR set to: 1
 10068  00670A  C106  F100         	movff	_isspace$2136,?_isspace
 10069  00670E  6B01               	clrf	(?_isspace+1)& (0+255),b
 10070                           
 10071                           ; BSR set to: 1
 10072  006710  0012               	return		;funcret
 10073  006712                     __end_of_isspace:
 10074                           	opt callstack 0
 10075                           
 10076 ;; *************** function _isdigit *****************
 10077 ;; Defined at:
 10078 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;  c               2    0[BANK1 ] int 
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;		None
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  2    0[BANK1 ] int 
 10085 ;; Registers used:
 10086 ;;		wreg, status,2, status,0
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10092 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10094 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10095 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;Total ram usage:        6 bytes
 10097 ;; Hardware stack levels used:    1
 10098 ;; Hardware stack levels required when called:   13
 10099 ;; This function calls:
 10100 ;;		Nothing
 10101 ;; This function is called by:
 10102 ;;		_vfpfcnvrt
 10103 ;;		_atoi
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           	psect	text33
 10108  00691A                     __ptext33:
 10109                           	opt callstack 0
 10110  00691A                     _isdigit:
 10111                           	opt callstack 14
 10112                           
 10113                           ; BSR set to: 1
 10114                           ;incstack = 0
 10115  00691A  0ED0               	movlw	208
 10116  00691C  0101               	movlb	1	; () banked
 10117  00691E  6F02               	movwf	??_isdigit& (0+255),b
 10118  006920  0EFF               	movlw	255
 10119  006922  6F03               	movwf	(??_isdigit+1)& (0+255),b
 10120  006924  C100  F104         	movff	isdigit@c,??_isdigit+2
 10121  006928  C101  F105         	movff	isdigit@c+1,??_isdigit+3
 10122  00692C  5102               	movf	??_isdigit& (0+255),w,b
 10123  00692E  2704               	addwf	(??_isdigit+2)& (0+255),f,b
 10124  006930  5103               	movf	(??_isdigit+1)& (0+255),w,b
 10125  006932  2305               	addwfc	(??_isdigit+3)& (0+255),f,b
 10126  006934  5105               	movf	(??_isdigit+3)& (0+255),w,b
 10127  006936  E106               	bnz	u8860
 10128  006938  0E0A               	movlw	10
 10129  00693A  5D04               	subwf	(??_isdigit+2)& (0+255),w,b
 10130  00693C  B0D8               	btfsc	status,0,c
 10131  00693E  D002               	goto	u8860
 10132  006940  0E01               	movlw	1
 10133  006942  D001               	goto	u8870
 10134  006944                     u8860:
 10135  006944  0E00               	movlw	0
 10136  006946                     u8870:
 10137  006946  6F00               	movwf	?_isdigit& (0+255),b
 10138  006948  6B01               	clrf	(?_isdigit+1)& (0+255),b
 10139                           
 10140                           ; BSR set to: 1
 10141  00694A  0012               	return		;funcret
 10142  00694C                     __end_of_isdigit:
 10143                           	opt callstack 0
 10144                           
 10145 ;; *************** function ___wmul *****************
 10146 ;; Defined at:
 10147 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;  multiplier      2    0[BANK1 ] unsigned int 
 10150 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;  product         2    4[BANK1 ] unsigned int 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  2    0[BANK1 ] unsigned int 
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0, prodl, prodh
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10162 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10165 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;Total ram usage:        6 bytes
 10167 ;; Hardware stack levels used:    1
 10168 ;; Hardware stack levels required when called:   13
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_atoi
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text34
 10177  006AE0                     __ptext34:
 10178                           	opt callstack 0
 10179  006AE0                     ___wmul:
 10180                           	opt callstack 13
 10181                           
 10182                           ; BSR set to: 1
 10183                           ;incstack = 0
 10184  006AE0  0101               	movlb	1	; () banked
 10185  006AE2  5100               	movf	___wmul@multiplier& (0+255),w,b
 10186  006AE4  0302               	mulwf	___wmul@multiplicand& (0+255),b
 10187  006AE6  CFF3 F104          	movff	prodl,___wmul@product
 10188  006AEA  CFF4 F105          	movff	prodh,___wmul@product+1
 10189  006AEE  5100               	movf	___wmul@multiplier& (0+255),w,b
 10190  006AF0  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10191  006AF2  50F3               	movf	prodl,w,c
 10192  006AF4  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 10193  006AF6  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10194  006AF8  0302               	mulwf	___wmul@multiplicand& (0+255),b
 10195  006AFA  50F3               	movf	prodl,w,c
 10196  006AFC  2705               	addwf	(___wmul@product+1)& (0+255),f,b
 10197                           
 10198                           ; BSR set to: 1
 10199  006AFE  C104  F100         	movff	___wmul@product,?___wmul
 10200  006B02  C105  F101         	movff	___wmul@product+1,?___wmul+1
 10201                           
 10202                           ; BSR set to: 1
 10203  006B06  0012               	return		;funcret
 10204  006B08                     __end_of___wmul:
 10205                           	opt callstack 0
 10206                           
 10207 ;; *************** function _i2c_ReadSerial *****************
 10208 ;; Defined at:
 10209 ;;		line 312 in file "main.c"
 10210 ;; Parameters:    Size  Location     Type
 10211 ;;  addr            2    0[BANK1 ] int 
 10212 ;;  data            2    2[BANK1 ] PTR unsigned char 
 10213 ;;		 -> readData(4), logPos(2), logStatus(2), tempRead(2), 
 10214 ;;		 -> humiRead(2), 
 10215 ;;  length          2    4[BANK1 ] int 
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;  i               2   11[BANK1 ] int 
 10218 ;;  targetAddr      1   10[BANK1 ] unsigned char 
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  1    wreg      void 
 10221 ;; Registers used:
 10222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10228 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10229 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10230 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10231 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10232 ;;Total ram usage:       13 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:   13
 10235 ;; This function calls:
 10236 ;;		Nothing
 10237 ;; This function is called by:
 10238 ;;		_dataLogger_init
 10239 ;; This function uses a non-reentrant model
 10240 ;;
 10241                           
 10242                           	psect	text35
 10243  005A90                     __ptext35:
 10244                           	opt callstack 0
 10245  005A90                     _i2c_ReadSerial:
 10246                           	opt callstack 16
 10247                           
 10248                           ;main.c: 317:     while((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 10249                           
 10250                           ; BSR set to: 1
 10251                           ;incstack = 0
 10252  005A90  B4C7               	btfsc	4039,2,c	;volatile
 10253  005A92  D7FE               	goto	_i2c_ReadSerial
 10254  005A94  CFC5 F106          	movff	4037,??_i2c_ReadSerial	;volatile
 10255  005A98  0E1F               	movlw	31
 10256  005A9A  0101               	movlb	1	; () banked
 10257  005A9C  1706               	andwf	??_i2c_ReadSerial& (0+255),f,b
 10258  005A9E  A4D8               	btfss	status,2,c
 10259  005AA0  D7F7               	goto	_i2c_ReadSerial
 10260                           
 10261                           ; BSR set to: 1
 10262                           ;main.c: 319:     SSP1CON2bits.SEN = 1;
 10263  005AA2  80C5               	bsf	4037,0,c	;volatile
 10264  005AA4                     l420:
 10265  005AA4  B0C5               	btfsc	4037,0,c	;volatile
 10266  005AA6  D7FE               	goto	l420
 10267                           
 10268                           ;main.c: 325:     uint8_t targetAddr = (addr << 1) + 1;
 10269  005AA8  0101               	movlb	1	; () banked
 10270  005AAA  5100               	movf	i2c_ReadSerial@addr& (0+255),w,b
 10271  005AAC  0D02               	mullw	2
 10272  005AAE  28F3               	incf	prodl,w,c
 10273  005AB0  6F0A               	movwf	i2c_ReadSerial@targetAddr& (0+255),b
 10274                           
 10275                           ; BSR set to: 1
 10276                           ;main.c: 331:     SSP1BUF = targetAddr;
 10277  005AB2  C10A  FFC9         	movff	i2c_ReadSerial@targetAddr,4041	;volatile
 10278  005AB6                     l423:
 10279  005AB6  B4C7               	btfsc	4039,2,c	;volatile
 10280  005AB8  D7FE               	goto	l423
 10281                           
 10282                           ;main.c: 338:     if(SSP1CON2bits.ACKSTAT == 0) {
 10283  005ABA  BCC5               	btfsc	4037,6,c	;volatile
 10284  005ABC  0012               	return	
 10285                           
 10286                           ;main.c: 344:         for (int i = 0; i < length; i++) {
 10287  005ABE  0E00               	movlw	0
 10288  005AC0  0101               	movlb	1	; () banked
 10289  005AC2  6F0C               	movwf	(i2c_ReadSerial@i+1)& (0+255),b
 10290  005AC4  0E00               	movlw	0
 10291  005AC6  6F0B               	movwf	i2c_ReadSerial@i& (0+255),b
 10292  005AC8  D028               	goto	l8082
 10293  005ACA                     l428:
 10294                           
 10295                           ; BSR set to: 1
 10296                           ;main.c: 345:             SSP1CON2bits.RCEN = 1;
 10297  005ACA  86C5               	bsf	4037,3,c	;volatile
 10298  005ACC                     l429:
 10299  005ACC  B6C5               	btfsc	4037,3,c	;volatile
 10300  005ACE  D7FE               	goto	l429
 10301                           
 10302                           ;main.c: 351:             data[i] = SSP1BUF;
 10303  005AD0  0101               	movlb	1	; () banked
 10304  005AD2  510B               	movf	i2c_ReadSerial@i& (0+255),w,b
 10305  005AD4  2502               	addwf	i2c_ReadSerial@data& (0+255),w,b
 10306  005AD6  6ED9               	movwf	fsr2l,c
 10307  005AD8  510C               	movf	(i2c_ReadSerial@i+1)& (0+255),w,b
 10308  005ADA  2103               	addwfc	(i2c_ReadSerial@data+1)& (0+255),w,b
 10309  005ADC  6EDA               	movwf	fsr2h,c
 10310  005ADE  CFC9 FFDF          	movff	4041,indf2	;volatile
 10311                           
 10312                           ; BSR set to: 1
 10313                           ;main.c: 356:             if (i != (length - 1)) {
 10314  005AE2  0EFF               	movlw	255
 10315  005AE4  6F06               	movwf	??_i2c_ReadSerial& (0+255),b
 10316  005AE6  0EFF               	movlw	255
 10317  005AE8  6F07               	movwf	(??_i2c_ReadSerial+1)& (0+255),b
 10318  005AEA  C104  F108         	movff	i2c_ReadSerial@length,??_i2c_ReadSerial+2
 10319  005AEE  C105  F109         	movff	i2c_ReadSerial@length+1,??_i2c_ReadSerial+3
 10320  005AF2  5106               	movf	??_i2c_ReadSerial& (0+255),w,b
 10321  005AF4  2708               	addwf	(??_i2c_ReadSerial+2)& (0+255),f,b
 10322  005AF6  5107               	movf	(??_i2c_ReadSerial+1)& (0+255),w,b
 10323  005AF8  2309               	addwfc	(??_i2c_ReadSerial+3)& (0+255),f,b
 10324  005AFA  510B               	movf	i2c_ReadSerial@i& (0+255),w,b
 10325  005AFC  1908               	xorwf	(??_i2c_ReadSerial+2)& (0+255),w,b
 10326  005AFE  E104               	bnz	u11220
 10327  005B00  510C               	movf	(i2c_ReadSerial@i+1)& (0+255),w,b
 10328  005B02  1909               	xorwf	(??_i2c_ReadSerial+3)& (0+255),w,b
 10329  005B04  B4D8               	btfsc	status,2,c
 10330  005B06  D002               	goto	l432
 10331  005B08                     u11220:
 10332                           
 10333                           ; BSR set to: 1
 10334                           ;main.c: 357:                 SSP1CON2bits.ACKDT = 0;
 10335  005B08  9AC5               	bcf	4037,5,c	;volatile
 10336                           
 10337                           ;main.c: 361:             } else {
 10338  005B0A  D001               	goto	l433
 10339  005B0C                     l432:
 10340                           
 10341                           ; BSR set to: 1
 10342                           ;main.c: 362:                 SSP1CON2bits.ACKDT = 1;
 10343  005B0C  8AC5               	bsf	4037,5,c	;volatile
 10344  005B0E                     l433:
 10345                           
 10346                           ; BSR set to: 1
 10347                           ;main.c: 368:             SSP1CON2bits.ACKEN = 1;
 10348  005B0E  88C5               	bsf	4037,4,c	;volatile
 10349  005B10                     l434:
 10350  005B10  B8C5               	btfsc	4037,4,c	;volatile
 10351  005B12  D7FE               	goto	l434
 10352                           
 10353                           ;main.c: 373:         }
 10354  005B14  0101               	movlb	1	; () banked
 10355  005B16  4B0B               	infsnz	i2c_ReadSerial@i& (0+255),f,b
 10356  005B18  2B0C               	incf	(i2c_ReadSerial@i+1)& (0+255),f,b
 10357  005B1A                     l8082:
 10358                           
 10359                           ; BSR set to: 1
 10360  005B1A  5104               	movf	i2c_ReadSerial@length& (0+255),w,b
 10361  005B1C  5D0B               	subwf	i2c_ReadSerial@i& (0+255),w,b
 10362  005B1E  510C               	movf	(i2c_ReadSerial@i+1)& (0+255),w,b
 10363  005B20  0A80               	xorlw	128
 10364  005B22  6F06               	movwf	??_i2c_ReadSerial& (0+255),b
 10365  005B24  5105               	movf	(i2c_ReadSerial@length+1)& (0+255),w,b
 10366  005B26  0A80               	xorlw	128
 10367  005B28  5906               	subwfb	??_i2c_ReadSerial& (0+255),w,b
 10368  005B2A  A0D8               	btfss	status,0,c
 10369  005B2C  D7CE               	goto	l428
 10370                           
 10371                           ; BSR set to: 1
 10372                           ;main.c: 375:         SSP1CON2bits.PEN = 1;
 10373  005B2E  84C5               	bsf	4037,2,c	;volatile
 10374  005B30                     l438:
 10375  005B30  A4C5               	btfss	4037,2,c	;volatile
 10376  005B32  0012               	return	
 10377  005B34  D7FD               	goto	l438
 10378  005B36                     __end_of_i2c_ReadSerial:
 10379                           	opt callstack 0
 10380                           
 10381 ;; *************** function _adafruit_init *****************
 10382 ;; Defined at:
 10383 ;;		line 388 in file "main.c"
 10384 ;; Parameters:    Size  Location     Type
 10385 ;;		None
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;		None
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  1    wreg      void 
 10390 ;; Registers used:
 10391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10401 ;;Total ram usage:        0 bytes
 10402 ;; Hardware stack levels used:    1
 10403 ;; Hardware stack levels required when called:   14
 10404 ;; This function calls:
 10405 ;;		_i2c_WriteSerial
 10406 ;; This function is called by:
 10407 ;;		_main
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           	psect	text36
 10412  006712                     __ptext36:
 10413                           	opt callstack 0
 10414  006712                     _adafruit_init:
 10415                           	opt callstack 16
 10416                           
 10417                           ;main.c: 389:     i2c_WriteSerial(display_Addr, procent_sign, 11);
 10418                           
 10419                           ;incstack = 0
 10420  006712  0E00               	movlw	0
 10421  006714  0101               	movlb	1	; () banked
 10422  006716  6F01               	movwf	(i2c_WriteSerial@addr+1)& (0+255),b
 10423  006718  0E3C               	movlw	60
 10424  00671A  6F00               	movwf	i2c_WriteSerial@addr& (0+255),b
 10425  00671C  0E04               	movlw	low _procent_sign
 10426  00671E  6F02               	movwf	i2c_WriteSerial@data& (0+255),b
 10427  006720  0E10               	movlw	high _procent_sign
 10428  006722  6F03               	movwf	(i2c_WriteSerial@data+1)& (0+255),b
 10429  006724  0E00               	movlw	0
 10430  006726  6F05               	movwf	(i2c_WriteSerial@length+1)& (0+255),b
 10431  006728  0E0B               	movlw	11
 10432  00672A  6F04               	movwf	i2c_WriteSerial@length& (0+255),b
 10433  00672C  EC74  F02F         	call	_i2c_WriteSerial	;wreg free
 10434                           
 10435                           ;main.c: 390:     i2c_WriteSerial(display_Addr, degree_sign, 11);
 10436  006730  0E00               	movlw	0
 10437  006732  0101               	movlb	1	; () banked
 10438  006734  6F01               	movwf	(i2c_WriteSerial@addr+1)& (0+255),b
 10439  006736  0E3C               	movlw	60
 10440  006738  6F00               	movwf	i2c_WriteSerial@addr& (0+255),b
 10441  00673A  0E0F               	movlw	low _degree_sign
 10442  00673C  6F02               	movwf	i2c_WriteSerial@data& (0+255),b
 10443  00673E  0E10               	movlw	high _degree_sign
 10444  006740  6F03               	movwf	(i2c_WriteSerial@data+1)& (0+255),b
 10445  006742  0E00               	movlw	0
 10446  006744  6F05               	movwf	(i2c_WriteSerial@length+1)& (0+255),b
 10447  006746  0E0B               	movlw	11
 10448  006748  6F04               	movwf	i2c_WriteSerial@length& (0+255),b
 10449  00674A  EC74  F02F         	call	_i2c_WriteSerial	;wreg free
 10450  00674E  0012               	return		;funcret
 10451  006750                     __end_of_adafruit_init:
 10452                           	opt callstack 0
 10453                           
 10454 ;; *************** function _i2c_WriteSerial *****************
 10455 ;; Defined at:
 10456 ;;		line 256 in file "main.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;  addr            2    0[BANK1 ] int 
 10459 ;;  data            2    2[BANK1 ] PTR unsigned char 
 10460 ;;		 -> readPos(2), logData(4), nextPos(4), verifyPos(3), 
 10461 ;;		 -> adafruit@outT(5), tempText(7), adafruit_temp_command(1), costum_char(2), 
 10462 ;;		 -> adafruit@outH(5), humiText(7), displayLine(2), adafruit_humi_command(1), 
 10463 ;;		 -> clearDisplay(2), degree_sign(11), procent_sign(11), displayInit(4), 
 10464 ;;  length          2    4[BANK1 ] int 
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;  i               2    9[BANK1 ] int 
 10467 ;;  targetAddr      1    8[BANK1 ] unsigned char 
 10468 ;; Return value:  Size  Location     Type
 10469 ;;                  1    wreg      void 
 10470 ;; Registers used:
 10471 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10472 ;; Tracked objects:
 10473 ;;		On entry : 0/0
 10474 ;;		On exit  : 0/0
 10475 ;;		Unchanged: 0/0
 10476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10477 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10481 ;;Total ram usage:       11 bytes
 10482 ;; Hardware stack levels used:    1
 10483 ;; Hardware stack levels required when called:   13
 10484 ;; This function calls:
 10485 ;;		Nothing
 10486 ;; This function is called by:
 10487 ;;		_i2c_init
 10488 ;;		_adafruit_init
 10489 ;;		_dataLogger_init
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493                           	psect	text37
 10494  005EE8                     __ptext37:
 10495                           	opt callstack 0
 10496  005EE8                     _i2c_WriteSerial:
 10497                           	opt callstack 16
 10498                           
 10499                           ;main.c: 261:     while((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 10500                           
 10501                           ;incstack = 0
 10502  005EE8  B4C7               	btfsc	4039,2,c	;volatile
 10503  005EEA  D7FE               	goto	_i2c_WriteSerial
 10504  005EEC  CFC5 F106          	movff	4037,??_i2c_WriteSerial	;volatile
 10505  005EF0  0E1F               	movlw	31
 10506  005EF2  0101               	movlb	1	; () banked
 10507  005EF4  1706               	andwf	??_i2c_WriteSerial& (0+255),f,b
 10508  005EF6  A4D8               	btfss	status,2,c
 10509  005EF8  D7F7               	goto	_i2c_WriteSerial
 10510                           
 10511                           ; BSR set to: 1
 10512                           ;main.c: 263:     SSP1CON2bits.SEN = 1;
 10513  005EFA  80C5               	bsf	4037,0,c	;volatile
 10514  005EFC                     l397:
 10515  005EFC  B0C5               	btfsc	4037,0,c	;volatile
 10516  005EFE  D7FE               	goto	l397
 10517                           
 10518                           ;main.c: 269:     uint8_t targetAddr = (addr << 1);
 10519  005F00  0101               	movlb	1	; () banked
 10520  005F02  5100               	movf	i2c_WriteSerial@addr& (0+255),w,b
 10521  005F04  2500               	addwf	i2c_WriteSerial@addr& (0+255),w,b
 10522  005F06  6F08               	movwf	i2c_WriteSerial@targetAddr& (0+255),b
 10523                           
 10524                           ; BSR set to: 1
 10525                           ;main.c: 275:     SSP1BUF = targetAddr;
 10526  005F08  C108  FFC9         	movff	i2c_WriteSerial@targetAddr,4041	;volatile
 10527  005F0C                     l400:
 10528  005F0C  B4C7               	btfsc	4039,2,c	;volatile
 10529  005F0E  D7FE               	goto	l400
 10530                           
 10531                           ;main.c: 281:     for (int i = 0; i < length; i++) {
 10532  005F10  0E00               	movlw	0
 10533  005F12  0101               	movlb	1	; () banked
 10534  005F14  6F0A               	movwf	(i2c_WriteSerial@i+1)& (0+255),b
 10535  005F16  0E00               	movlw	0
 10536  005F18  6F09               	movwf	i2c_WriteSerial@i& (0+255),b
 10537  005F1A  D01F               	goto	l8062
 10538  005F1C                     l404:
 10539                           
 10540                           ; BSR set to: 1
 10541                           ;main.c: 283:         if(SSP1CON2bits.ACKSTAT == 0) {
 10542  005F1C  BCC5               	btfsc	4037,6,c	;volatile
 10543  005F1E  D01A               	goto	u11130
 10544                           
 10545                           ; BSR set to: 1
 10546                           ;main.c: 288:             SSP1BUF = (uint8_t) data[i];
 10547  005F20  5109               	movf	i2c_WriteSerial@i& (0+255),w,b
 10548  005F22  2502               	addwf	i2c_WriteSerial@data& (0+255),w,b
 10549  005F24  6F06               	movwf	??_i2c_WriteSerial& (0+255),b
 10550  005F26  510A               	movf	(i2c_WriteSerial@i+1)& (0+255),w,b
 10551  005F28  2103               	addwfc	(i2c_WriteSerial@data+1)& (0+255),w,b
 10552  005F2A  6F07               	movwf	(??_i2c_WriteSerial+1)& (0+255),b
 10553  005F2C  C106  FFF6         	movff	??_i2c_WriteSerial,tblptrl
 10554  005F30  C107  FFF7         	movff	??_i2c_WriteSerial+1,tblptrh
 10555  005F34  0E00               	movlw	low (__smallconst shr (0+16))
 10556  005F36  6EF8               	movwf	tblptru,c
 10557  005F38  0E0F               	movlw	(high __ramtop+-1)
 10558  005F3A  64F7               	cpfsgt	tblptrh,c
 10559  005F3C  D003               	bra	u11127
 10560  005F3E  0008               	tblrd		*
 10561  005F40  50F5               	movf	tablat,w,c
 10562  005F42  D005               	bra	u11120
 10563  005F44                     u11127:
 10564  005F44  CFF6 FFE1          	movff	tblptrl,fsr1l
 10565  005F48  CFF7 FFE2          	movff	tblptrh,fsr1h
 10566  005F4C  50E7               	movf	indf1,w,c
 10567  005F4E                     u11120:
 10568  005F4E  6EC9               	movwf	4041,c	;volatile
 10569  005F50                     l406:
 10570  005F50  B4C7               	btfsc	4039,2,c	;volatile
 10571  005F52  D7FE               	goto	l406
 10572  005F54                     u11130:
 10573                           
 10574                           ;main.c: 303:     }
 10575  005F54  0101               	movlb	1	; () banked
 10576  005F56  4B09               	infsnz	i2c_WriteSerial@i& (0+255),f,b
 10577  005F58  2B0A               	incf	(i2c_WriteSerial@i+1)& (0+255),f,b
 10578  005F5A                     l8062:
 10579                           
 10580                           ; BSR set to: 1
 10581  005F5A  5104               	movf	i2c_WriteSerial@length& (0+255),w,b
 10582  005F5C  5D09               	subwf	i2c_WriteSerial@i& (0+255),w,b
 10583  005F5E  510A               	movf	(i2c_WriteSerial@i+1)& (0+255),w,b
 10584  005F60  0A80               	xorlw	128
 10585  005F62  6F06               	movwf	??_i2c_WriteSerial& (0+255),b
 10586  005F64  5105               	movf	(i2c_WriteSerial@length+1)& (0+255),w,b
 10587  005F66  0A80               	xorlw	128
 10588  005F68  5906               	subwfb	??_i2c_WriteSerial& (0+255),w,b
 10589  005F6A  A0D8               	btfss	status,0,c
 10590  005F6C  D7D7               	goto	l404
 10591                           
 10592                           ; BSR set to: 1
 10593                           ;main.c: 305:     SSP1CON2bits.PEN = 1;
 10594  005F6E  84C5               	bsf	4037,2,c	;volatile
 10595  005F70                     l411:
 10596  005F70  A4C5               	btfss	4037,2,c	;volatile
 10597  005F72  0012               	return	
 10598  005F74  D7FD               	goto	l411
 10599  005F76                     __end_of_i2c_WriteSerial:
 10600                           	opt callstack 0
 10601                           
 10602 ;; *************** function _TMR4_StopTimer *****************
 10603 ;; Defined at:
 10604 ;;		line 93 in file "mcc_generated_files/tmr4.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;		None
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;		None
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  1    wreg      void 
 10611 ;; Registers used:
 10612 ;;		None
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10622 ;;Total ram usage:        0 bytes
 10623 ;; Hardware stack levels used:    1
 10624 ;; Hardware stack levels required when called:   13
 10625 ;; This function calls:
 10626 ;;		Nothing
 10627 ;; This function is called by:
 10628 ;;		_main
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632                           	psect	text38
 10633  006D48                     __ptext38:
 10634                           	opt callstack 0
 10635  006D48                     _TMR4_StopTimer:
 10636                           	opt callstack 17
 10637                           
 10638                           ;mcc_generated_files/tmr4.c: 96:     T4CONbits.TMR4ON = 0;
 10639                           
 10640                           ;incstack = 0
 10641  006D48  010F               	movlb	15	; () banked
 10642  006D4A  9551               	bcf	81,2,b	;volatile
 10643                           
 10644                           ; BSR set to: 15
 10645  006D4C  0012               	return		;funcret
 10646  006D4E                     __end_of_TMR4_StopTimer:
 10647                           	opt callstack 0
 10648                           
 10649 ;; *************** function _TMR4_StartTimer *****************
 10650 ;; Defined at:
 10651 ;;		line 87 in file "mcc_generated_files/tmr4.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;		None
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  1    wreg      void 
 10658 ;; Registers used:
 10659 ;;		None
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10669 ;;Total ram usage:        0 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; Hardware stack levels required when called:   13
 10672 ;; This function calls:
 10673 ;;		Nothing
 10674 ;; This function is called by:
 10675 ;;		_main
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           	psect	text39
 10680  006D4E                     __ptext39:
 10681                           	opt callstack 0
 10682  006D4E                     _TMR4_StartTimer:
 10683                           	opt callstack 17
 10684                           
 10685                           ;mcc_generated_files/tmr4.c: 90:     T4CONbits.TMR4ON = 1;
 10686                           
 10687                           ; BSR set to: 15
 10688                           ;incstack = 0
 10689  006D4E  010F               	movlb	15	; () banked
 10690  006D50  8551               	bsf	81,2,b	;volatile
 10691                           
 10692                           ; BSR set to: 15
 10693  006D52  0012               	return		;funcret
 10694  006D54                     __end_of_TMR4_StartTimer:
 10695                           	opt callstack 0
 10696                           
 10697 ;; *************** function _SYSTEM_Initialize *****************
 10698 ;; Defined at:
 10699 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10700 ;; Parameters:    Size  Location     Type
 10701 ;;		None
 10702 ;; Auto vars:     Size  Location     Type
 10703 ;;		None
 10704 ;; Return value:  Size  Location     Type
 10705 ;;                  1    wreg      void 
 10706 ;; Registers used:
 10707 ;;		wreg, status,2, status,0, cstack
 10708 ;; Tracked objects:
 10709 ;;		On entry : 0/0
 10710 ;;		On exit  : 0/0
 10711 ;;		Unchanged: 0/0
 10712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10717 ;;Total ram usage:        0 bytes
 10718 ;; Hardware stack levels used:    1
 10719 ;; Hardware stack levels required when called:   15
 10720 ;; This function calls:
 10721 ;;		_EUSART1_Initialize
 10722 ;;		_INTERRUPT_Initialize
 10723 ;;		_OSCILLATOR_Initialize
 10724 ;;		_PIN_MANAGER_Initialize
 10725 ;;		_TMR2_Initialize
 10726 ;;		_TMR4_Initialize
 10727 ;;		_TMR6_Initialize
 10728 ;; This function is called by:
 10729 ;;		_main
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           	psect	text40
 10734  006CA8                     __ptext40:
 10735                           	opt callstack 0
 10736  006CA8                     _SYSTEM_Initialize:
 10737                           	opt callstack 15
 10738                           
 10739                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 10740                           
 10741                           ; BSR set to: 15
 10742                           ;incstack = 0
 10743  006CA8  ECB2  F036         	call	_INTERRUPT_Initialize	;wreg free
 10744                           
 10745                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10746  006CAC  EC32  F035         	call	_PIN_MANAGER_Initialize	;wreg free
 10747                           
 10748                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10749  006CB0  EC63  F036         	call	_OSCILLATOR_Initialize	;wreg free
 10750                           
 10751                           ;mcc_generated_files/mcc.c: 56:     TMR4_Initialize();
 10752  006CB4  ECBD  F035         	call	_TMR4_Initialize	;wreg free
 10753                           
 10754                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
 10755  006CB8  ECAB  F035         	call	_TMR6_Initialize	;wreg free
 10756                           
 10757                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 10758  006CBC  EC14  F036         	call	_TMR2_Initialize	;wreg free
 10759                           
 10760                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
 10761  006CC0  EC0E  F031         	call	_EUSART1_Initialize	;wreg free
 10762  006CC4  0012               	return		;funcret
 10763  006CC6                     __end_of_SYSTEM_Initialize:
 10764                           	opt callstack 0
 10765                           
 10766 ;; *************** function _TMR6_Initialize *****************
 10767 ;; Defined at:
 10768 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;		None
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;		None
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		wreg, status,2, status,0, cstack
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10786 ;;Total ram usage:        0 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; Hardware stack levels required when called:   14
 10789 ;; This function calls:
 10790 ;;		_TMR6_SetInterruptHandler
 10791 ;; This function is called by:
 10792 ;;		_SYSTEM_Initialize
 10793 ;;		_main
 10794 ;; This function uses a non-reentrant model
 10795 ;;
 10796                           
 10797                           	psect	text41
 10798  006B56                     __ptext41:
 10799                           	opt callstack 0
 10800  006B56                     _TMR6_Initialize:
 10801                           	opt callstack 16
 10802                           
 10803                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0x3E;
 10804                           
 10805                           ;incstack = 0
 10806  006B56  0E3E               	movlw	62
 10807  006B58  010F               	movlb	15	; () banked
 10808  006B5A  6F4B               	movwf	75,b	;volatile
 10809                           
 10810                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
 10811  006B5C  0E00               	movlw	0
 10812  006B5E  6F4C               	movwf	76,b	;volatile
 10813                           
 10814                           ; BSR set to: 15
 10815                           ;mcc_generated_files/tmr6.c: 75:     PIR5bits.TMR6IF = 0;
 10816  006B60  947E               	bcf	3966,2,c	;volatile
 10817                           
 10818                           ; BSR set to: 15
 10819                           ;mcc_generated_files/tmr6.c: 78:     PIE5bits.TMR6IE = 1;
 10820  006B62  847D               	bsf	3965,2,c	;volatile
 10821                           
 10822                           ; BSR set to: 15
 10823                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 10824  006B64  0E68               	movlw	low _TMR6_DefaultInterruptHandler
 10825  006B66  0101               	movlb	1	; () banked
 10826  006B68  6F00               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 10827  006B6A  0E6D               	movlw	high _TMR6_DefaultInterruptHandler
 10828  006B6C  6F01               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10829  006B6E  EC73  F036         	call	_TMR6_SetInterruptHandler	;wreg free
 10830                           
 10831                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x7E;
 10832  006B72  0E7E               	movlw	126
 10833  006B74  010F               	movlb	15	; () banked
 10834  006B76  6F4A               	movwf	74,b	;volatile
 10835                           
 10836                           ; BSR set to: 15
 10837  006B78  0012               	return		;funcret
 10838  006B7A                     __end_of_TMR6_Initialize:
 10839                           	opt callstack 0
 10840                           
 10841 ;; *************** function _TMR6_SetInterruptHandler *****************
 10842 ;; Defined at:
 10843 ;;		line 147 in file "mcc_generated_files/tmr6.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10846 ;;		 -> TMR6_DefaultInterruptHandler(1), dataLogWrite(1), 
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;		None
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      void 
 10851 ;; Registers used:
 10852 ;;		wreg, status,2, status,0
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10858 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10862 ;;Total ram usage:        2 bytes
 10863 ;; Hardware stack levels used:    1
 10864 ;; Hardware stack levels required when called:   13
 10865 ;; This function calls:
 10866 ;;		Nothing
 10867 ;; This function is called by:
 10868 ;;		_main
 10869 ;;		_TMR6_Initialize
 10870 ;; This function uses a non-reentrant model
 10871 ;;
 10872                           
 10873                           	psect	text42
 10874  006CE6                     __ptext42:
 10875                           	opt callstack 0
 10876  006CE6                     _TMR6_SetInterruptHandler:
 10877                           	opt callstack 17
 10878                           
 10879                           ;mcc_generated_files/tmr6.c: 148:     TMR6_InterruptHandler = InterruptHandler;
 10880                           
 10881                           ; BSR set to: 15
 10882                           ;incstack = 0
 10883  006CE6  C100  F1AF         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 10884  006CEA  C101  F1B0         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 10885  006CEE  0012               	return		;funcret
 10886  006CF0                     __end_of_TMR6_SetInterruptHandler:
 10887                           	opt callstack 0
 10888                           
 10889 ;; *************** function _TMR4_Initialize *****************
 10890 ;; Defined at:
 10891 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 10892 ;; Parameters:    Size  Location     Type
 10893 ;;		None
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;		None
 10896 ;; Return value:  Size  Location     Type
 10897 ;;                  1    wreg      void 
 10898 ;; Registers used:
 10899 ;;		wreg, status,2, status,0, cstack
 10900 ;; Tracked objects:
 10901 ;;		On entry : 0/0
 10902 ;;		On exit  : 0/0
 10903 ;;		Unchanged: 0/0
 10904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10909 ;;Total ram usage:        0 bytes
 10910 ;; Hardware stack levels used:    1
 10911 ;; Hardware stack levels required when called:   14
 10912 ;; This function calls:
 10913 ;;		_TMR4_SetInterruptHandler
 10914 ;; This function is called by:
 10915 ;;		_SYSTEM_Initialize
 10916 ;;		_main
 10917 ;; This function uses a non-reentrant model
 10918 ;;
 10919                           
 10920                           	psect	text43
 10921  006B7A                     __ptext43:
 10922                           	opt callstack 0
 10923  006B7A                     _TMR4_Initialize:
 10924                           	opt callstack 16
 10925                           
 10926                           ;mcc_generated_files/tmr4.c: 69:     PR4 = 0x3E;
 10927                           
 10928                           ;incstack = 0
 10929  006B7A  0E3E               	movlw	62
 10930  006B7C  010F               	movlb	15	; () banked
 10931  006B7E  6F52               	movwf	82,b	;volatile
 10932                           
 10933                           ;mcc_generated_files/tmr4.c: 72:     TMR4 = 0x00;
 10934  006B80  0E00               	movlw	0
 10935  006B82  6F53               	movwf	83,b	;volatile
 10936                           
 10937                           ; BSR set to: 15
 10938                           ;mcc_generated_files/tmr4.c: 75:     PIR5bits.TMR4IF = 0;
 10939  006B84  907E               	bcf	3966,0,c	;volatile
 10940                           
 10941                           ; BSR set to: 15
 10942                           ;mcc_generated_files/tmr4.c: 78:     PIE5bits.TMR4IE = 1;
 10943  006B86  807D               	bsf	3965,0,c	;volatile
 10944                           
 10945                           ; BSR set to: 15
 10946                           ;mcc_generated_files/tmr4.c: 81:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 10947  006B88  0E6A               	movlw	low _TMR4_DefaultInterruptHandler
 10948  006B8A  0101               	movlb	1	; () banked
 10949  006B8C  6F00               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 10950  006B8E  0E6D               	movlw	high _TMR4_DefaultInterruptHandler
 10951  006B90  6F01               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10952  006B92  EC78  F036         	call	_TMR4_SetInterruptHandler	;wreg free
 10953                           
 10954                           ;mcc_generated_files/tmr4.c: 84:     T4CON = 0x7E;
 10955  006B96  0E7E               	movlw	126
 10956  006B98  010F               	movlb	15	; () banked
 10957  006B9A  6F51               	movwf	81,b	;volatile
 10958                           
 10959                           ; BSR set to: 15
 10960  006B9C  0012               	return		;funcret
 10961  006B9E                     __end_of_TMR4_Initialize:
 10962                           	opt callstack 0
 10963                           
 10964 ;; *************** function _TMR4_SetInterruptHandler *****************
 10965 ;; Defined at:
 10966 ;;		line 147 in file "mcc_generated_files/tmr4.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10969 ;;		 -> TMR4_DefaultInterruptHandler(1), dataLogRead(1), 
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;		None
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  1    wreg      void 
 10974 ;; Registers used:
 10975 ;;		wreg, status,2, status,0
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10981 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10984 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10985 ;;Total ram usage:        2 bytes
 10986 ;; Hardware stack levels used:    1
 10987 ;; Hardware stack levels required when called:   13
 10988 ;; This function calls:
 10989 ;;		Nothing
 10990 ;; This function is called by:
 10991 ;;		_main
 10992 ;;		_TMR4_Initialize
 10993 ;; This function uses a non-reentrant model
 10994 ;;
 10995                           
 10996                           	psect	text44
 10997  006CF0                     __ptext44:
 10998                           	opt callstack 0
 10999  006CF0                     _TMR4_SetInterruptHandler:
 11000                           	opt callstack 17
 11001                           
 11002                           ;mcc_generated_files/tmr4.c: 148:     TMR4_InterruptHandler = InterruptHandler;
 11003                           
 11004                           ; BSR set to: 15
 11005                           ;incstack = 0
 11006  006CF0  C100  F1B3         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 11007  006CF4  C101  F1B4         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 11008  006CF8  0012               	return		;funcret
 11009  006CFA                     __end_of_TMR4_SetInterruptHandler:
 11010                           	opt callstack 0
 11011                           
 11012 ;; *************** function _TMR2_Initialize *****************
 11013 ;; Defined at:
 11014 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;		None
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;		None
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      void 
 11021 ;; Registers used:
 11022 ;;		wreg, status,2, status,0, cstack
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11032 ;;Total ram usage:        0 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:   14
 11035 ;; This function calls:
 11036 ;;		_TMR2_SetInterruptHandler
 11037 ;; This function is called by:
 11038 ;;		_SYSTEM_Initialize
 11039 ;;		_main
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text45
 11044  006C28                     __ptext45:
 11045                           	opt callstack 0
 11046  006C28                     _TMR2_Initialize:
 11047                           	opt callstack 16
 11048                           
 11049                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x3E;
 11050                           
 11051                           ;incstack = 0
 11052  006C28  0E3E               	movlw	62
 11053  006C2A  6EBB               	movwf	4027,c	;volatile
 11054                           
 11055                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 11056  006C2C  0E00               	movlw	0
 11057  006C2E  6EBC               	movwf	4028,c	;volatile
 11058                           
 11059                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 11060  006C30  929E               	bcf	3998,1,c	;volatile
 11061                           
 11062                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 11063  006C32  829D               	bsf	3997,1,c	;volatile
 11064                           
 11065                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 11066  006C34  0E6C               	movlw	low _TMR2_DefaultInterruptHandler
 11067  006C36  0101               	movlb	1	; () banked
 11068  006C38  6F00               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 11069  006C3A  0E6D               	movlw	high _TMR2_DefaultInterruptHandler
 11070  006C3C  6F01               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 11071  006C3E  EC7D  F036         	call	_TMR2_SetInterruptHandler	;wreg free
 11072                           
 11073                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7E;
 11074  006C42  0E7E               	movlw	126
 11075  006C44  6EBA               	movwf	4026,c	;volatile
 11076  006C46  0012               	return		;funcret
 11077  006C48                     __end_of_TMR2_Initialize:
 11078                           	opt callstack 0
 11079                           
 11080 ;; *************** function _TMR2_SetInterruptHandler *****************
 11081 ;; Defined at:
 11082 ;;		line 147 in file "mcc_generated_files/tmr2.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11085 ;;		 -> TMR2_DefaultInterruptHandler(1), adafruit(1), 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;		None
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  1    wreg      void 
 11090 ;; Registers used:
 11091 ;;		wreg, status,2, status,0
 11092 ;; Tracked objects:
 11093 ;;		On entry : 0/0
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11097 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11100 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11101 ;;Total ram usage:        2 bytes
 11102 ;; Hardware stack levels used:    1
 11103 ;; Hardware stack levels required when called:   13
 11104 ;; This function calls:
 11105 ;;		Nothing
 11106 ;; This function is called by:
 11107 ;;		_main
 11108 ;;		_TMR2_Initialize
 11109 ;; This function uses a non-reentrant model
 11110 ;;
 11111                           
 11112                           	psect	text46
 11113  006CFA                     __ptext46:
 11114                           	opt callstack 0
 11115  006CFA                     _TMR2_SetInterruptHandler:
 11116                           	opt callstack 17
 11117                           
 11118                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
 11119                           
 11120                           ;incstack = 0
 11121  006CFA  C100  F1B7         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 11122  006CFE  C101  F1B8         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 11123  006D02  0012               	return		;funcret
 11124  006D04                     __end_of_TMR2_SetInterruptHandler:
 11125                           	opt callstack 0
 11126                           
 11127 ;; *************** function _PIN_MANAGER_Initialize *****************
 11128 ;; Defined at:
 11129 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;		None
 11132 ;; Auto vars:     Size  Location     Type
 11133 ;;		None
 11134 ;; Return value:  Size  Location     Type
 11135 ;;                  1    wreg      void 
 11136 ;; Registers used:
 11137 ;;		wreg, status,2
 11138 ;; Tracked objects:
 11139 ;;		On entry : 0/0
 11140 ;;		On exit  : 0/0
 11141 ;;		Unchanged: 0/0
 11142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11147 ;;Total ram usage:        0 bytes
 11148 ;; Hardware stack levels used:    1
 11149 ;; Hardware stack levels required when called:   13
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_SYSTEM_Initialize
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text47
 11158  006A64                     __ptext47:
 11159                           	opt callstack 0
 11160  006A64                     _PIN_MANAGER_Initialize:
 11161                           	opt callstack 16
 11162                           
 11163                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 11164                           
 11165                           ;incstack = 0
 11166  006A64  0E00               	movlw	0
 11167  006A66  6E89               	movwf	3977,c	;volatile
 11168                           
 11169                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 11170  006A68  0E00               	movlw	0
 11171  006A6A  6E8A               	movwf	3978,c	;volatile
 11172                           
 11173                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 11174  006A6C  0E00               	movlw	0
 11175  006A6E  6E8B               	movwf	3979,c	;volatile
 11176                           
 11177                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
 11178  006A70  6892               	setf	3986,c	;volatile
 11179                           
 11180                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
 11181  006A72  6893               	setf	3987,c	;volatile
 11182                           
 11183                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
 11184  006A74  0EBF               	movlw	191
 11185  006A76  6E94               	movwf	3988,c	;volatile
 11186                           
 11187                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
 11188  006A78  0E3C               	movlw	60
 11189  006A7A  010F               	movlb	15	; () banked
 11190  006A7C  6F3A               	movwf	58,b	;volatile
 11191                           
 11192                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
 11193  006A7E  0E3F               	movlw	63
 11194  006A80  6F39               	movwf	57,b	;volatile
 11195                           
 11196                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
 11197  006A82  0E2F               	movlw	47
 11198  006A84  6F38               	movwf	56,b	;volatile
 11199                           
 11200                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 11201  006A86  0E00               	movlw	0
 11202  006A88  6E61               	movwf	3937,c	;volatile
 11203                           
 11204                           ; BSR set to: 15
 11205                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
 11206  006A8A  8EF1               	bsf	4081,7,c	;volatile
 11207                           
 11208                           ; BSR set to: 15
 11209  006A8C  0012               	return		;funcret
 11210  006A8E                     __end_of_PIN_MANAGER_Initialize:
 11211                           	opt callstack 0
 11212                           
 11213 ;; *************** function _OSCILLATOR_Initialize *****************
 11214 ;; Defined at:
 11215 ;;		line 62 in file "mcc_generated_files/mcc.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;		None
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;		None
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  1    wreg      void 
 11222 ;; Registers used:
 11223 ;;		wreg, status,2
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11233 ;;Total ram usage:        0 bytes
 11234 ;; Hardware stack levels used:    1
 11235 ;; Hardware stack levels required when called:   13
 11236 ;; This function calls:
 11237 ;;		Nothing
 11238 ;; This function is called by:
 11239 ;;		_SYSTEM_Initialize
 11240 ;; This function uses a non-reentrant model
 11241 ;;
 11242                           
 11243                           	psect	text48
 11244  006CC6                     __ptext48:
 11245                           	opt callstack 0
 11246  006CC6                     _OSCILLATOR_Initialize:
 11247                           	opt callstack 16
 11248                           
 11249                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
 11250                           
 11251                           ; BSR set to: 15
 11252                           ;incstack = 0
 11253  006CC6  0E70               	movlw	112
 11254  006CC8  6ED3               	movwf	4051,c	;volatile
 11255                           
 11256                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
 11257  006CCA  0E04               	movlw	4
 11258  006CCC  6ED2               	movwf	4050,c	;volatile
 11259                           
 11260                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x40;
 11261  006CCE  0E40               	movlw	64
 11262  006CD0  6E9B               	movwf	3995,c	;volatile
 11263  006CD2                     l28:
 11264                           
 11265                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
 11266  006CD2  BED2               	btfsc	4050,7,c	;volatile
 11267  006CD4  0012               	return	
 11268  006CD6  D7FD               	goto	l28
 11269  006CD8                     __end_of_OSCILLATOR_Initialize:
 11270                           	opt callstack 0
 11271                           
 11272 ;; *************** function _INTERRUPT_Initialize *****************
 11273 ;; Defined at:
 11274 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;		None
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;		None
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  1    wreg      void 
 11281 ;; Registers used:
 11282 ;;		None
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/0
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11292 ;;Total ram usage:        0 bytes
 11293 ;; Hardware stack levels used:    1
 11294 ;; Hardware stack levels required when called:   13
 11295 ;; This function calls:
 11296 ;;		Nothing
 11297 ;; This function is called by:
 11298 ;;		_SYSTEM_Initialize
 11299 ;; This function uses a non-reentrant model
 11300 ;;
 11301                           
 11302                           	psect	text49
 11303  006D64                     __ptext49:
 11304                           	opt callstack 0
 11305  006D64                     _INTERRUPT_Initialize:
 11306                           	opt callstack 16
 11307                           
 11308                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 11309                           
 11310                           ;incstack = 0
 11311  006D64  9ED0               	bcf	4048,7,c	;volatile
 11312  006D66  0012               	return		;funcret
 11313  006D68                     __end_of_INTERRUPT_Initialize:
 11314                           	opt callstack 0
 11315                           
 11316 ;; *************** function _EUSART1_Initialize *****************
 11317 ;; Defined at:
 11318 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;		None
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;		None
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  1    wreg      void 
 11325 ;; Registers used:
 11326 ;;		wreg, status,2, status,0, cstack
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11336 ;;Total ram usage:        0 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:   14
 11339 ;; This function calls:
 11340 ;;		_EUSART1_SetErrorHandler
 11341 ;;		_EUSART1_SetFramingErrorHandler
 11342 ;;		_EUSART1_SetOverrunErrorHandler
 11343 ;;		_EUSART1_SetRxInterruptHandler
 11344 ;;		_EUSART1_SetTxInterruptHandler
 11345 ;; This function is called by:
 11346 ;;		_SYSTEM_Initialize
 11347 ;;		_main
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           	psect	text50
 11352  00621C                     __ptext50:
 11353                           	opt callstack 0
 11354  00621C                     _EUSART1_Initialize:
 11355                           	opt callstack 15
 11356                           
 11357                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
 11358                           
 11359                           ;incstack = 0
 11360  00621C  9A9D               	bcf	3997,5,c	;volatile
 11361                           
 11362                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 11363  00621E  0EB2               	movlw	low _EUSART1_Receive_ISR
 11364  006220  0101               	movlb	1	; () banked
 11365  006222  6F00               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
 11366  006224  0E5D               	movlw	high _EUSART1_Receive_ISR
 11367  006226  6F01               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 11368  006228  EC87  F036         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 11369                           
 11370                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
 11371  00622C  989D               	bcf	3997,4,c	;volatile
 11372                           
 11373                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 11374  00622E  0E38               	movlw	low _EUSART1_Transmit_ISR
 11375  006230  0101               	movlb	1	; () banked
 11376  006232  6F00               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
 11377  006234  0E6A               	movlw	high _EUSART1_Transmit_ISR
 11378  006236  6F01               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 11379  006238  EC82  F036         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 11380                           
 11381                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
 11382  00623C  0E08               	movlw	8
 11383  00623E  6EB8               	movwf	4024,c	;volatile
 11384                           
 11385                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
 11386  006240  0E90               	movlw	144
 11387  006242  6EAB               	movwf	4011,c	;volatile
 11388                           
 11389                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
 11390  006244  0E24               	movlw	36
 11391  006246  6EAC               	movwf	4012,c	;volatile
 11392                           
 11393                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
 11394  006248  0E8A               	movlw	138
 11395  00624A  6EAF               	movwf	4015,c	;volatile
 11396                           
 11397                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
 11398  00624C  0E00               	movlw	0
 11399  00624E  6EB0               	movwf	4016,c	;volatile
 11400                           
 11401                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 11402  006250  0E6E               	movlw	low _EUSART1_DefaultFramingErrorHandler
 11403  006252  0101               	movlb	1	; () banked
 11404  006254  6F00               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 11405  006256  0E6D               	movlw	high _EUSART1_DefaultFramingErrorHandler
 11406  006258  6F01               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 11407  00625A  EC91  F036         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 11408                           
 11409                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 11410  00625E  0E54               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 11411  006260  0101               	movlb	1	; () banked
 11412  006262  6F00               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 11413  006264  0E6D               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 11414  006266  6F01               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 11415  006268  EC8C  F036         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 11416                           
 11417                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 11418  00626C  0E5A               	movlw	low _EUSART1_DefaultErrorHandler
 11419  00626E  0101               	movlb	1	; () banked
 11420  006270  6F00               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 11421  006272  0E6D               	movlw	high _EUSART1_DefaultErrorHandler
 11422  006274  6F01               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 11423  006276  EC96  F036         	call	_EUSART1_SetErrorHandler	;wreg free
 11424                           
 11425                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 11426  00627A  0E00               	movlw	0
 11427  00627C  0101               	movlb	1	; () banked
 11428  00627E  6FC4               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 11429                           
 11430                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 11431  006280  0E00               	movlw	0
 11432  006282  6FCA               	movwf	_eusart1TxHead& (0+255),b	;volatile
 11433                           
 11434                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 11435  006284  0E00               	movlw	0
 11436  006286  6FC9               	movwf	_eusart1TxTail& (0+255),b	;volatile
 11437                           
 11438                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 11439  006288  0E40               	movlw	64
 11440  00628A  6FC8               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 11441                           
 11442                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 11443  00628C  0E00               	movlw	0
 11444  00628E  6FC7               	movwf	_eusart1RxHead& (0+255),b	;volatile
 11445                           
 11446                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 11447  006290  0E00               	movlw	0
 11448  006292  6FC6               	movwf	_eusart1RxTail& (0+255),b	;volatile
 11449                           
 11450                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 11451  006294  0E00               	movlw	0
 11452  006296  6FC5               	movwf	_eusart1RxCount& (0+255),b	;volatile
 11453                           
 11454                           ; BSR set to: 1
 11455                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
 11456  006298  8A9D               	bsf	3997,5,c	;volatile
 11457                           
 11458                           ; BSR set to: 1
 11459  00629A  0012               	return		;funcret
 11460  00629C                     __end_of_EUSART1_Initialize:
 11461                           	opt callstack 0
 11462                           
 11463 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 11464 ;; Defined at:
 11465 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 11468 ;;		 -> EUSART1_Transmit_ISR(1), 
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      void 
 11473 ;; Registers used:
 11474 ;;		wreg, status,2, status,0
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11480 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11483 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11484 ;;Total ram usage:        2 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:   13
 11487 ;; This function calls:
 11488 ;;		Nothing
 11489 ;; This function is called by:
 11490 ;;		_EUSART1_Initialize
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text51
 11495  006D04                     __ptext51:
 11496                           	opt callstack 0
 11497  006D04                     _EUSART1_SetTxInterruptHandler:
 11498                           	opt callstack 15
 11499                           
 11500                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 11501                           
 11502                           ; BSR set to: 1
 11503                           ;incstack = 0
 11504  006D04  C100  F1C1         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 11505  006D08  C101  F1C2         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 11506  006D0C  0012               	return		;funcret
 11507  006D0E                     __end_of_EUSART1_SetTxInterruptHandler:
 11508                           	opt callstack 0
 11509                           
 11510 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 11511 ;; Defined at:
 11512 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 11515 ;;		 -> EUSART1_Receive_ISR(1), 
 11516 ;; Auto vars:     Size  Location     Type
 11517 ;;		None
 11518 ;; Return value:  Size  Location     Type
 11519 ;;                  1    wreg      void 
 11520 ;; Registers used:
 11521 ;;		wreg, status,2, status,0
 11522 ;; Tracked objects:
 11523 ;;		On entry : 0/0
 11524 ;;		On exit  : 0/0
 11525 ;;		Unchanged: 0/0
 11526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11527 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;Total ram usage:        2 bytes
 11532 ;; Hardware stack levels used:    1
 11533 ;; Hardware stack levels required when called:   13
 11534 ;; This function calls:
 11535 ;;		Nothing
 11536 ;; This function is called by:
 11537 ;;		_EUSART1_Initialize
 11538 ;; This function uses a non-reentrant model
 11539 ;;
 11540                           
 11541                           	psect	text52
 11542  006D0E                     __ptext52:
 11543                           	opt callstack 0
 11544  006D0E                     _EUSART1_SetRxInterruptHandler:
 11545                           	opt callstack 15
 11546                           
 11547                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 11548                           
 11549                           ;incstack = 0
 11550  006D0E  C100  F1BF         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 11551  006D12  C101  F1C0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 11552  006D16  0012               	return		;funcret
 11553  006D18                     __end_of_EUSART1_SetRxInterruptHandler:
 11554                           	opt callstack 0
 11555                           
 11556 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 11557 ;; Defined at:
 11558 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 11561 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;		None
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  1    wreg      void 
 11566 ;; Registers used:
 11567 ;;		wreg, status,2, status,0
 11568 ;; Tracked objects:
 11569 ;;		On entry : 0/0
 11570 ;;		On exit  : 0/0
 11571 ;;		Unchanged: 0/0
 11572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11573 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11576 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11577 ;;Total ram usage:        2 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; Hardware stack levels required when called:   13
 11580 ;; This function calls:
 11581 ;;		Nothing
 11582 ;; This function is called by:
 11583 ;;		_EUSART1_Initialize
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           	psect	text53
 11588  006D18                     __ptext53:
 11589                           	opt callstack 0
 11590  006D18                     _EUSART1_SetOverrunErrorHandler:
 11591                           	opt callstack 15
 11592                           
 11593                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 11594                           
 11595                           ;incstack = 0
 11596  006D18  C100  F1BB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 11597  006D1C  C101  F1BC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 11598  006D20  0012               	return		;funcret
 11599  006D22                     __end_of_EUSART1_SetOverrunErrorHandler:
 11600                           	opt callstack 0
 11601                           
 11602 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 11603 ;; Defined at:
 11604 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 11605 ;; Parameters:    Size  Location     Type
 11606 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 11607 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 11608 ;; Auto vars:     Size  Location     Type
 11609 ;;		None
 11610 ;; Return value:  Size  Location     Type
 11611 ;;                  1    wreg      void 
 11612 ;; Registers used:
 11613 ;;		wreg, status,2, status,0
 11614 ;; Tracked objects:
 11615 ;;		On entry : 0/0
 11616 ;;		On exit  : 0/0
 11617 ;;		Unchanged: 0/0
 11618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11619 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11622 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11623 ;;Total ram usage:        2 bytes
 11624 ;; Hardware stack levels used:    1
 11625 ;; Hardware stack levels required when called:   13
 11626 ;; This function calls:
 11627 ;;		Nothing
 11628 ;; This function is called by:
 11629 ;;		_EUSART1_Initialize
 11630 ;; This function uses a non-reentrant model
 11631 ;;
 11632                           
 11633                           	psect	text54
 11634  006D22                     __ptext54:
 11635                           	opt callstack 0
 11636  006D22                     _EUSART1_SetFramingErrorHandler:
 11637                           	opt callstack 15
 11638                           
 11639                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 11640                           
 11641                           ;incstack = 0
 11642  006D22  C100  F1BD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 11643  006D26  C101  F1BE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 11644  006D2A  0012               	return		;funcret
 11645  006D2C                     __end_of_EUSART1_SetFramingErrorHandler:
 11646                           	opt callstack 0
 11647                           
 11648 ;; *************** function _EUSART1_SetErrorHandler *****************
 11649 ;; Defined at:
 11650 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 11653 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 11654 ;; Auto vars:     Size  Location     Type
 11655 ;;		None
 11656 ;; Return value:  Size  Location     Type
 11657 ;;                  1    wreg      void 
 11658 ;; Registers used:
 11659 ;;		wreg, status,2, status,0
 11660 ;; Tracked objects:
 11661 ;;		On entry : 0/0
 11662 ;;		On exit  : 0/0
 11663 ;;		Unchanged: 0/0
 11664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11665 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11668 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11669 ;;Total ram usage:        2 bytes
 11670 ;; Hardware stack levels used:    1
 11671 ;; Hardware stack levels required when called:   13
 11672 ;; This function calls:
 11673 ;;		Nothing
 11674 ;; This function is called by:
 11675 ;;		_EUSART1_Initialize
 11676 ;; This function uses a non-reentrant model
 11677 ;;
 11678                           
 11679                           	psect	text55
 11680  006D2C                     __ptext55:
 11681                           	opt callstack 0
 11682  006D2C                     _EUSART1_SetErrorHandler:
 11683                           	opt callstack 15
 11684                           
 11685                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 11686                           
 11687                           ;incstack = 0
 11688  006D2C  C100  F1B9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 11689  006D30  C101  F1BA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 11690  006D34  0012               	return		;funcret
 11691  006D36                     __end_of_EUSART1_SetErrorHandler:
 11692                           	opt callstack 0
 11693                           
 11694 ;; *************** function _EUSART1_Read *****************
 11695 ;; Defined at:
 11696 ;;		line 151 in file "mcc_generated_files/eusart1.c"
 11697 ;; Parameters:    Size  Location     Type
 11698 ;;		None
 11699 ;; Auto vars:     Size  Location     Type
 11700 ;;  readValue       1    0[BANK1 ] unsigned char 
 11701 ;; Return value:  Size  Location     Type
 11702 ;;                  1    wreg      unsigned char 
 11703 ;; Registers used:
 11704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11705 ;; Tracked objects:
 11706 ;;		On entry : 0/0
 11707 ;;		On exit  : 0/0
 11708 ;;		Unchanged: 0/0
 11709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11711 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11713 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11714 ;;Total ram usage:        1 bytes
 11715 ;; Hardware stack levels used:    1
 11716 ;; Hardware stack levels required when called:   13
 11717 ;; This function calls:
 11718 ;;		Nothing
 11719 ;; This function is called by:
 11720 ;;		_main
 11721 ;;		_getch
 11722 ;; This function uses a non-reentrant model
 11723 ;;
 11724                           
 11725                           	psect	text56
 11726  006750                     __ptext56:
 11727                           	opt callstack 0
 11728  006750                     _EUSART1_Read:
 11729                           	opt callstack 17
 11730                           
 11731                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 11732                           
 11733                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
 11734                           
 11735                           ;incstack = 0
 11736  006750  0101               	movlb	1	; () banked
 11737  006752  51C5               	movf	_eusart1RxCount& (0+255),w,b	;volatile
 11738  006754  B4D8               	btfsc	status,2,c
 11739  006756  D7FC               	goto	_EUSART1_Read
 11740                           
 11741                           ; BSR set to: 1
 11742                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
 11743  006758  0E00               	movlw	low _eusart1RxStatusBuffer
 11744  00675A  25C6               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 11745  00675C  6ED9               	movwf	fsr2l,c
 11746  00675E  6ADA               	clrf	fsr2h,c
 11747  006760  0E02               	movlw	high _eusart1RxStatusBuffer
 11748  006762  22DA               	addwfc	fsr2h,f,c
 11749  006764  50DF               	movf	indf2,w,c
 11750  006766  6FC4               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 11751                           
 11752                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
 11753  006768  0E00               	movlw	low _eusart1RxBuffer
 11754  00676A  25C6               	addwf	_eusart1RxTail& (0+255),w,b	;volatile
 11755  00676C  6ED9               	movwf	fsr2l,c
 11756  00676E  6ADA               	clrf	fsr2h,c
 11757  006770  0E03               	movlw	high _eusart1RxBuffer
 11758  006772  22DA               	addwfc	fsr2h,f,c
 11759  006774  50DF               	movf	indf2,w,c
 11760  006776  6F00               	movwf	EUSART1_Read@readValue& (0+255),b
 11761                           
 11762                           ; BSR set to: 1
 11763  006778  2BC6               	incf	_eusart1RxTail& (0+255),f,b	;volatile
 11764                           
 11765                           ; BSR set to: 1
 11766                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
 11767  00677A  0E3F               	movlw	63
 11768  00677C  65C6               	cpfsgt	_eusart1RxTail& (0+255),b	;volatile
 11769  00677E  D002               	goto	l8122
 11770                           
 11771                           ; BSR set to: 1
 11772                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
 11773  006780  0E00               	movlw	0
 11774  006782  6FC6               	movwf	_eusart1RxTail& (0+255),b	;volatile
 11775  006784                     l8122:
 11776                           
 11777                           ; BSR set to: 1
 11778                           ;mcc_generated_files/eusart1.c: 166:     PIE1bits.RC1IE = 0;
 11779  006784  9A9D               	bcf	3997,5,c	;volatile
 11780                           
 11781                           ; BSR set to: 1
 11782                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
 11783  006786  07C5               	decf	_eusart1RxCount& (0+255),f,b	;volatile
 11784                           
 11785                           ; BSR set to: 1
 11786                           ;mcc_generated_files/eusart1.c: 168:     PIE1bits.RC1IE = 1;
 11787  006788  8A9D               	bsf	3997,5,c	;volatile
 11788                           
 11789                           ; BSR set to: 1
 11790                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
 11791  00678A  5100               	movf	EUSART1_Read@readValue& (0+255),w,b
 11792                           
 11793                           ; BSR set to: 1
 11794  00678C  0012               	return		;funcret
 11795  00678E                     __end_of_EUSART1_Read:
 11796                           	opt callstack 0
 11797                           
 11798 ;; *************** function _INTERRUPT_InterruptManager *****************
 11799 ;; Defined at:
 11800 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 11801 ;; Parameters:    Size  Location     Type
 11802 ;;		None
 11803 ;; Auto vars:     Size  Location     Type
 11804 ;;		None
 11805 ;; Return value:  Size  Location     Type
 11806 ;;                  1    wreg      void 
 11807 ;; Registers used:
 11808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11809 ;; Tracked objects:
 11810 ;;		On entry : 0/0
 11811 ;;		On exit  : 0/0
 11812 ;;		Unchanged: 0/0
 11813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11816 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11817 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11818 ;;Total ram usage:       12 bytes
 11819 ;; Hardware stack levels used:    1
 11820 ;; Hardware stack levels required when called:   12
 11821 ;; This function calls:
 11822 ;;		Absolute function
 11823 ;;		_EUSART1_Receive_ISR
 11824 ;;		_EUSART1_Transmit_ISR
 11825 ;;		_TMR2_ISR
 11826 ;;		_TMR4_ISR
 11827 ;;		_TMR6_ISR
 11828 ;; This function is called by:
 11829 ;;		Interrupt level 2
 11830 ;; This function uses a non-reentrant model
 11831 ;;
 11832                           
 11833                           	psect	intcode
 11834  000008                     __pintcode:
 11835                           	opt callstack 0
 11836  000008                     _INTERRUPT_InterruptManager:
 11837                           	opt callstack 8
 11838                           
 11839                           ; BSR set to: 1
 11840                           ;incstack = 0
 11841  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11842  00000A  CFFA F0EB          	movff	pclath,??_INTERRUPT_InterruptManager
 11843  00000E  CFFB F0EC          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11844  000012  CFE1 F0ED          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 11845  000016  CFE2 F0EE          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 11846  00001A  CFD9 F0EF          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 11847  00001E  CFDA F0F0          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 11848  000022  CFF3 F0F1          	movff	prodl,??_INTERRUPT_InterruptManager+6
 11849  000026  CFF4 F0F2          	movff	prodh,??_INTERRUPT_InterruptManager+7
 11850  00002A  CFF6 F0F3          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 11851  00002E  CFF7 F0F4          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 11852  000032  CFF8 F0F5          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 11853  000036  CFF5 F0F6          	movff	tablat,??_INTERRUPT_InterruptManager+11
 11854                           
 11855                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 11856  00003A  ACF2               	btfss	4082,6,c	;volatile
 11857  00003C  D02D               	goto	i2u1166_49
 11858                           
 11859                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 11860  00003E  B29D               	btfsc	3997,1,c	;volatile
 11861  000040  A29E               	btfss	3998,1,c	;volatile
 11862  000042  D003               	goto	i2l242
 11863                           
 11864                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR2_ISR();
 11865  000044  ECCF  F035         	call	_TMR2_ISR	;wreg free
 11866                           
 11867                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 11868  000048  D027               	goto	i2u1166_49
 11869  00004A                     i2l242:
 11870  00004A  B47D               	btfsc	3965,2,c	;volatile
 11871  00004C  A47E               	btfss	3966,2,c	;volatile
 11872  00004E  D003               	goto	i2l244
 11873                           
 11874                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR6_ISR();
 11875  000050  ECE1  F035         	call	_TMR6_ISR	;wreg free
 11876                           
 11877                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 11878  000054  D021               	goto	i2u1166_49
 11879  000056                     i2l244:
 11880  000056  BA9D               	btfsc	3997,5,c	;volatile
 11881  000058  AA9E               	btfss	3998,5,c	;volatile
 11882  00005A  D009               	goto	i2l246
 11883                           
 11884                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 11885  00005C  D801               	call	i2u1161_48
 11886  00005E  D01C               	goto	i2u1166_49
 11887  000060                     i2u1161_48:
 11888  000060  0005               	push	
 11889  000062  6EFA               	movwf	pclath,c
 11890  000064  0101               	movlb	1	; () banked
 11891  000066  51BF               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 11892  000068  6EFD               	movwf	tosl,c
 11893  00006A  51C0               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 11894  00006C  D011               	goto	L12
 11895  00006E                     i2l246:
 11896  00006E  B07D               	btfsc	3965,0,c	;volatile
 11897  000070  A07E               	btfss	3966,0,c	;volatile
 11898  000072  D003               	goto	i2l248
 11899                           
 11900                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR4_ISR();
 11901  000074  ECF2  F035         	call	_TMR4_ISR	;wreg free
 11902                           
 11903                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 11904  000078  D00F               	goto	i2u1166_49
 11905  00007A                     i2l248:
 11906  00007A  B89D               	btfsc	3997,4,c	;volatile
 11907  00007C  A89E               	btfss	3998,4,c	;volatile
 11908  00007E  D00C               	goto	i2u1166_49
 11909                           
 11910                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             EUSART1_TxDefaultInterruptHandler();
 11911  000080  D801               	call	i2u1166_48
 11912  000082  D00A               	goto	i2u1166_49
 11913  000084                     i2u1166_48:
 11914  000084  0005               	push	
 11915  000086  6EFA               	movwf	pclath,c
 11916  000088  0101               	movlb	1	; () banked
 11917  00008A  51C1               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 11918  00008C  6EFD               	movwf	tosl,c
 11919  00008E  51C2               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 11920  000090                     L12:
 11921  000090  6EFE               	movwf	tosh,c
 11922  000092  6AFF               	clrf	tosu,c
 11923  000094  50FA               	movf	pclath,w,c
 11924  000096  0012               	return		;indir
 11925  000098                     i2u1166_49:
 11926                           
 11927                           ;mcc_generated_files/interrupt_manager.c: 82:         }
 11928  000098  C0F6  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 11929  00009C  C0F5  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 11930  0000A0  C0F4  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 11931  0000A4  C0F3  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 11932  0000A8  C0F2  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 11933  0000AC  C0F1  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 11934  0000B0  C0F0  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 11935  0000B4  C0EF  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 11936  0000B8  C0EE  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 11937  0000BC  C0ED  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 11938  0000C0  C0EC  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11939  0000C4  C0EB  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11940  0000C8  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11941  0000CA  0011               	retfie		f
 11942  0000CC                     __end_of_INTERRUPT_InterruptManager:
 11943                           	opt callstack 0
 11944                           
 11945 ;; *************** function _TMR6_ISR *****************
 11946 ;; Defined at:
 11947 ;;		line 119 in file "mcc_generated_files/tmr6.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;		None
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  1    wreg      void 
 11954 ;; Registers used:
 11955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11965 ;;Total ram usage:        0 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; Hardware stack levels required when called:    3
 11968 ;; This function calls:
 11969 ;;		_TMR6_CallBack
 11970 ;; This function is called by:
 11971 ;;		_INTERRUPT_InterruptManager
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           	psect	text58
 11976  006BC2                     __ptext58:
 11977                           	opt callstack 0
 11978  006BC2                     _TMR6_ISR:
 11979                           	opt callstack 16
 11980                           
 11981                           ;mcc_generated_files/tmr6.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr6.c: 124:     PIR5bits.TMR6IF = 0;
 11982                           
 11983                           ;incstack = 0
 11984  006BC2  947E               	bcf	3966,2,c	;volatile
 11985                           
 11986                           ;mcc_generated_files/tmr6.c: 127:     if (++CountCallBack >= 3839)
 11987  006BC4  0101               	movlb	1	; () banked
 11988  006BC6  4BAD               	infsnz	TMR6_ISR@CountCallBack& (0+255),f,b	;volatile
 11989  006BC8  2BAE               	incf	(TMR6_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 11990  006BCA  29AD               	incf	TMR6_ISR@CountCallBack& (0+255),w,b	;volatile
 11991  006BCC  0E0E               	movlw	14
 11992  006BCE  59AE               	subwfb	(TMR6_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 11993  006BD0  A0D8               	btfss	status,0,c
 11994  006BD2  0012               	return	
 11995                           
 11996                           ; BSR set to: 1
 11997                           ;mcc_generated_files/tmr6.c: 128:     {;mcc_generated_files/tmr6.c: 130:         TMR6_Ca
      +                          llBack();
 11998  006BD4  EC24  F036         	call	_TMR6_CallBack	;wreg free
 11999                           
 12000                           ;mcc_generated_files/tmr6.c: 133:         CountCallBack = 0;
 12001  006BD8  0E00               	movlw	0
 12002  006BDA  0101               	movlb	1	; () banked
 12003  006BDC  6FAE               	movwf	(TMR6_ISR@CountCallBack+1)& (0+255),b	;volatile
 12004  006BDE  0E00               	movlw	0
 12005  006BE0  6FAD               	movwf	TMR6_ISR@CountCallBack& (0+255),b	;volatile
 12006                           
 12007                           ; BSR set to: 1
 12008  006BE2  0012               	return		;funcret
 12009  006BE4                     __end_of_TMR6_ISR:
 12010                           	opt callstack 0
 12011                           
 12012 ;; *************** function _TMR6_CallBack *****************
 12013 ;; Defined at:
 12014 ;;		line 137 in file "mcc_generated_files/tmr6.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;		None
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;		None
 12019 ;; Return value:  Size  Location     Type
 12020 ;;                  1    wreg      void 
 12021 ;; Registers used:
 12022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 12023 ;; Tracked objects:
 12024 ;;		On entry : 0/0
 12025 ;;		On exit  : 0/0
 12026 ;;		Unchanged: 0/0
 12027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12032 ;;Total ram usage:        0 bytes
 12033 ;; Hardware stack levels used:    1
 12034 ;; Hardware stack levels required when called:    2
 12035 ;; This function calls:
 12036 ;;		Absolute function
 12037 ;;		_TMR6_DefaultInterruptHandler
 12038 ;;		_dataLogWrite
 12039 ;; This function is called by:
 12040 ;;		_TMR6_ISR
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           	psect	text59
 12045  006C48                     __ptext59:
 12046                           	opt callstack 0
 12047  006C48                     _TMR6_CallBack:
 12048                           	opt callstack 16
 12049                           
 12050                           ;mcc_generated_files/tmr6.c: 141:     if(TMR6_InterruptHandler)
 12051                           
 12052                           ; BSR set to: 1
 12053                           ;incstack = 0
 12054  006C48  0101               	movlb	1	; () banked
 12055  006C4A  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 12056  006C4C  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 12057  006C4E  B4D8               	btfsc	status,2,c
 12058  006C50  0012               	return	
 12059                           
 12060                           ; BSR set to: 1
 12061                           ;mcc_generated_files/tmr6.c: 142:     {;mcc_generated_files/tmr6.c: 143:         TMR6_In
      +                          terruptHandler();
 12062  006C52  D801               	call	i2u1131_48
 12063  006C54  0012               	return	
 12064  006C56                     i2u1131_48:
 12065  006C56  0005               	push	
 12066  006C58  6EFA               	movwf	pclath,c
 12067  006C5A  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 12068  006C5C  6EFD               	movwf	tosl,c
 12069  006C5E  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 12070  006C60  6EFE               	movwf	tosh,c
 12071  006C62  6AFF               	clrf	tosu,c
 12072  006C64  50FA               	movf	pclath,w,c
 12073  006C66  0012               	return		;indir
 12074  006C68                     __end_of_TMR6_CallBack:
 12075                           	opt callstack 0
 12076                           
 12077 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 12078 ;; Defined at:
 12079 ;;		line 151 in file "mcc_generated_files/tmr6.c"
 12080 ;; Parameters:    Size  Location     Type
 12081 ;;		None
 12082 ;; Auto vars:     Size  Location     Type
 12083 ;;		None
 12084 ;; Return value:  Size  Location     Type
 12085 ;;                  1    wreg      void 
 12086 ;; Registers used:
 12087 ;;		None
 12088 ;; Tracked objects:
 12089 ;;		On entry : 0/0
 12090 ;;		On exit  : 0/0
 12091 ;;		Unchanged: 0/0
 12092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12097 ;;Total ram usage:        0 bytes
 12098 ;; Hardware stack levels used:    1
 12099 ;; This function calls:
 12100 ;;		Nothing
 12101 ;; This function is called by:
 12102 ;;		_TMR6_Initialize
 12103 ;;		_TMR6_CallBack
 12104 ;; This function uses a non-reentrant model
 12105 ;;
 12106                           
 12107                           	psect	text60
 12108  006D68                     __ptext60:
 12109                           	opt callstack 0
 12110  006D68                     _TMR6_DefaultInterruptHandler:
 12111                           	opt callstack 17
 12112                           
 12113                           ;incstack = 0
 12114  006D68  0012               	return		;funcret
 12115  006D6A                     __end_of_TMR6_DefaultInterruptHandler:
 12116                           	opt callstack 0
 12117                           
 12118 ;; *************** function _dataLogWrite *****************
 12119 ;; Defined at:
 12120 ;;		line 517 in file "main.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;		None
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;		None
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  1    wreg      void 
 12127 ;; Registers used:
 12128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12138 ;;Total ram usage:        2 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:    1
 12141 ;; This function calls:
 12142 ;;		i2_i2c_WriteSerial
 12143 ;; This function is called by:
 12144 ;;		_main
 12145 ;;		_TMR6_CallBack
 12146 ;; This function uses a non-reentrant model
 12147 ;;
 12148                           
 12149                           	psect	text61
 12150  004A20                     __ptext61:
 12151                           	opt callstack 0
 12152  004A20                     _dataLogWrite:
 12153                           	opt callstack 16
 12154                           
 12155                           ;main.c: 519:     logData[0] = verifyPos[0];
 12156                           
 12157                           ;incstack = 0
 12158  004A20  0E30               	movlw	low _verifyPos
 12159  004A22  6EF6               	movwf	tblptrl,c
 12160  004A24                     	if	1	;There is more than 1 active tblptr byte
 12161  004A24  0E10               	movlw	high _verifyPos
 12162  004A26  6EF7               	movwf	tblptrh,c
 12163  004A28                     	endif
 12164  004A28                     	if	1	;There are 3 active tblptr bytes
 12165  004A28  0E00               	movlw	low (_verifyPos shr (0+16))
 12166  004A2A  6EF8               	movwf	tblptru,c
 12167  004A2C                     	endif
 12168  004A2C  0008               	tblrd		*
 12169  004A2E  CFF5 F1CF          	movff	tablat,_logData
 12170                           
 12171                           ;main.c: 520:     logData[1] = verifyPos[1];
 12172  004A32  0E31               	movlw	low (_verifyPos+1)
 12173  004A34  6EF6               	movwf	tblptrl,c
 12174  004A36  0E10               	movlw	high (_verifyPos+1)
 12175  004A38  6EF7               	movwf	tblptrh,c
 12176  004A3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12177  004A3A  6AF8               	clrf	tblptru,c
 12178  004A3C                     	endif
 12179  004A3C                     	if	0	;tblptru may be non-zero
 12180  004A3C                     	endif
 12181  004A3C  0008               	tblrd		*
 12182  004A3E  CFF5 F1D0          	movff	tablat,_logData+1
 12183                           
 12184                           ;main.c: 521:     logData[2] = logStatus[1];
 12185  004A42  C1D4  F1D1         	movff	_logStatus+1,_logData+2
 12186                           
 12187                           ;main.c: 523:     i2c_WriteSerial(eeprom_Addr, logData, 3);
 12188  004A46  0E00               	movlw	0
 12189  004A48  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 12190  004A4A  0E50               	movlw	80
 12191  004A4C  6E01               	movwf	i2i2c_WriteSerial@addr,c
 12192  004A4E  0ECF               	movlw	low _logData
 12193  004A50  6E03               	movwf	i2i2c_WriteSerial@data,c
 12194  004A52  0E01               	movlw	high _logData
 12195  004A54  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 12196  004A56  0E00               	movlw	0
 12197  004A58  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 12198  004A5A  0E03               	movlw	3
 12199  004A5C  6E05               	movwf	i2i2c_WriteSerial@length,c
 12200  004A5E  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 12201                           
 12202                           ;main.c: 524:     _delay((unsigned long)((10)*(64000000/4000.0)));
 12203  004A62  0ED0               	movlw	208
 12204  004A64  6E0C               	movwf	??_dataLogWrite& (0+255),c
 12205  004A66  0ECA               	movlw	202
 12206  004A68                     i2u1185_47:
 12207  004A68  2EE8               	decfsz	wreg,f,c
 12208  004A6A  D7FE               	bra	i2u1185_47
 12209  004A6C  2E0C               	decfsz	??_dataLogWrite& (0+255),f,c
 12210  004A6E  D7FC               	bra	i2u1185_47
 12211                           
 12212                           ;main.c: 528:     logData[0] = logPos[0];
 12213  004A70  C1D5  F1CF         	movff	_logPos,_logData
 12214                           
 12215                           ;main.c: 529:     logData[1] = logPos[1];
 12216  004A74  C1D6  F1D0         	movff	_logPos+1,_logData+1
 12217                           
 12218                           ;main.c: 530:     logData[2] = tempRead[0];
 12219  004A78  C0F7  F1D1         	movff	_tempRead,_logData+2
 12220                           
 12221                           ;main.c: 531:     logData[3] = tempRead[1];
 12222  004A7C  C0F8  F1D2         	movff	_tempRead+1,_logData+3
 12223                           
 12224                           ;main.c: 533:     i2c_WriteSerial(eeprom_Addr, logData, 4);
 12225  004A80  0E00               	movlw	0
 12226  004A82  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 12227  004A84  0E50               	movlw	80
 12228  004A86  6E01               	movwf	i2i2c_WriteSerial@addr,c
 12229  004A88  0ECF               	movlw	low _logData
 12230  004A8A  6E03               	movwf	i2i2c_WriteSerial@data,c
 12231  004A8C  0E01               	movlw	high _logData
 12232  004A8E  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 12233  004A90  0E00               	movlw	0
 12234  004A92  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 12235  004A94  0E04               	movlw	4
 12236  004A96  6E05               	movwf	i2i2c_WriteSerial@length,c
 12237  004A98  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 12238                           
 12239                           ;main.c: 534:     _delay((unsigned long)((10)*(64000000/4000.0)));
 12240  004A9C  0ED0               	movlw	208
 12241  004A9E  6E0C               	movwf	??_dataLogWrite& (0+255),c
 12242  004AA0  0ECA               	movlw	202
 12243  004AA2                     i2u1186_47:
 12244  004AA2  2EE8               	decfsz	wreg,f,c
 12245  004AA4  D7FE               	bra	i2u1186_47
 12246  004AA6  2E0C               	decfsz	??_dataLogWrite& (0+255),f,c
 12247  004AA8  D7FC               	bra	i2u1186_47
 12248                           
 12249                           ;main.c: 538:     logData[0] = verifyPos[0];
 12250  004AAA  0E30               	movlw	low _verifyPos
 12251  004AAC  6EF6               	movwf	tblptrl,c
 12252  004AAE                     	if	1	;There is more than 1 active tblptr byte
 12253  004AAE  0E10               	movlw	high _verifyPos
 12254  004AB0  6EF7               	movwf	tblptrh,c
 12255  004AB2                     	endif
 12256  004AB2                     	if	1	;There are 3 active tblptr bytes
 12257  004AB2  0E00               	movlw	low (_verifyPos shr (0+16))
 12258  004AB4  6EF8               	movwf	tblptru,c
 12259  004AB6                     	endif
 12260  004AB6  0008               	tblrd		*
 12261  004AB8  CFF5 F1CF          	movff	tablat,_logData
 12262                           
 12263                           ;main.c: 539:     logData[1] = verifyPos[1];
 12264  004ABC  0E31               	movlw	low (_verifyPos+1)
 12265  004ABE  6EF6               	movwf	tblptrl,c
 12266  004AC0  0E10               	movlw	high (_verifyPos+1)
 12267  004AC2  6EF7               	movwf	tblptrh,c
 12268  004AC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12269  004AC4  6AF8               	clrf	tblptru,c
 12270  004AC6                     	endif
 12271  004AC6                     	if	0	;tblptru may be non-zero
 12272  004AC6                     	endif
 12273  004AC6  0008               	tblrd		*
 12274  004AC8  CFF5 F1D0          	movff	tablat,_logData+1
 12275                           
 12276                           ;main.c: 541:     if(logStatus[0] == 0x01) { logStatus[0] = 0x02; }
 12277  004ACC  0101               	movlb	1	; () banked
 12278  004ACE  05D3               	decf	_logStatus& (0+255),w,b
 12279  004AD0  A4D8               	btfss	status,2,c
 12280  004AD2  D002               	goto	i2l7884
 12281                           
 12282                           ; BSR set to: 1
 12283  004AD4  0E02               	movlw	2
 12284  004AD6  D001               	goto	L13
 12285  004AD8                     i2l7884:
 12286                           
 12287                           ; BSR set to: 1
 12288  004AD8  0E01               	movlw	1
 12289  004ADA                     L13:
 12290  004ADA  6FD3               	movwf	_logStatus& (0+255),b
 12291                           
 12292                           ; BSR set to: 1
 12293                           ;main.c: 544:     logData[2] = logStatus[0];
 12294  004ADC  C1D3  F1D1         	movff	_logStatus,_logData+2
 12295                           
 12296                           ; BSR set to: 1
 12297                           ;main.c: 546:     i2c_WriteSerial(eeprom_Addr, logData, 3);
 12298  004AE0  0E00               	movlw	0
 12299  004AE2  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 12300  004AE4  0E50               	movlw	80
 12301  004AE6  6E01               	movwf	i2i2c_WriteSerial@addr,c
 12302  004AE8  0ECF               	movlw	low _logData
 12303  004AEA  6E03               	movwf	i2i2c_WriteSerial@data,c
 12304  004AEC  0E01               	movlw	high _logData
 12305  004AEE  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 12306  004AF0  0E00               	movlw	0
 12307  004AF2  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 12308  004AF4  0E03               	movlw	3
 12309  004AF6  6E05               	movwf	i2i2c_WriteSerial@length,c
 12310  004AF8  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 12311                           
 12312                           ;main.c: 547:     _delay((unsigned long)((10)*(64000000/4000.0)));
 12313  004AFC  0ED0               	movlw	208
 12314  004AFE  6E0C               	movwf	??_dataLogWrite& (0+255),c
 12315  004B00  0ECA               	movlw	202
 12316  004B02                     i2u1187_47:
 12317  004B02  2EE8               	decfsz	wreg,f,c
 12318  004B04  D7FE               	bra	i2u1187_47
 12319  004B06  2E0C               	decfsz	??_dataLogWrite& (0+255),f,c
 12320  004B08  D7FC               	bra	i2u1187_47
 12321                           
 12322                           ;main.c: 551:     logData[0] = nextPos[0];
 12323  004B0A  0E28               	movlw	low _nextPos
 12324  004B0C  6EF6               	movwf	tblptrl,c
 12325  004B0E                     	if	1	;There is more than 1 active tblptr byte
 12326  004B0E  0E10               	movlw	high _nextPos
 12327  004B10  6EF7               	movwf	tblptrh,c
 12328  004B12                     	endif
 12329  004B12                     	if	1	;There are 3 active tblptr bytes
 12330  004B12  0E00               	movlw	low (_nextPos shr (0+16))
 12331  004B14  6EF8               	movwf	tblptru,c
 12332  004B16                     	endif
 12333  004B16  0008               	tblrd		*
 12334  004B18  CFF5 F1CF          	movff	tablat,_logData
 12335                           
 12336                           ;main.c: 552:     logData[1] = nextPos[1];
 12337  004B1C  0E29               	movlw	low (_nextPos+1)
 12338  004B1E  6EF6               	movwf	tblptrl,c
 12339  004B20  0E10               	movlw	high (_nextPos+1)
 12340  004B22  6EF7               	movwf	tblptrh,c
 12341  004B24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12342  004B24  6AF8               	clrf	tblptru,c
 12343  004B26                     	endif
 12344  004B26                     	if	0	;tblptru may be non-zero
 12345  004B26                     	endif
 12346  004B26  0008               	tblrd		*
 12347  004B28  CFF5 F1D0          	movff	tablat,_logData+1
 12348                           
 12349                           ;main.c: 554:     if ((logPos[1] + 2) != 0xFF) { logPos[1] += 2; }
 12350  004B2C  0101               	movlb	1	; () banked
 12351  004B2E  51D6               	movf	(_logPos+1)& (0+255),w,b
 12352  004B30  6E0C               	movwf	??_dataLogWrite& (0+255),c
 12353  004B32  6A0D               	clrf	(??_dataLogWrite+1)& (0+255),c
 12354  004B34  0E02               	movlw	2
 12355  004B36  260C               	addwf	??_dataLogWrite,f,c
 12356  004B38  0E00               	movlw	0
 12357  004B3A  220D               	addwfc	??_dataLogWrite+1,f,c
 12358  004B3C  280C               	incf	??_dataLogWrite,w,c
 12359  004B3E  100D               	iorwf	??_dataLogWrite+1,w,c
 12360  004B40  B4D8               	btfsc	status,2,c
 12361  004B42  D003               	goto	i2l7900
 12362                           
 12363                           ; BSR set to: 1
 12364  004B44  0E02               	movlw	2
 12365  004B46  27D6               	addwf	(_logPos+1)& (0+255),f,b
 12366  004B48  D023               	goto	i2l7914
 12367  004B4A                     i2l7900:
 12368                           
 12369                           ; BSR set to: 1
 12370  004B4A  51D6               	movf	(_logPos+1)& (0+255),w,b
 12371  004B4C  6E0C               	movwf	??_dataLogWrite& (0+255),c
 12372  004B4E  6A0D               	clrf	(??_dataLogWrite+1)& (0+255),c
 12373  004B50  0E02               	movlw	2
 12374  004B52  260C               	addwf	??_dataLogWrite,f,c
 12375  004B54  0E00               	movlw	0
 12376  004B56  220D               	addwfc	??_dataLogWrite+1,f,c
 12377  004B58  280C               	incf	??_dataLogWrite,w,c
 12378  004B5A  100D               	iorwf	??_dataLogWrite+1,w,c
 12379  004B5C  A4D8               	btfss	status,2,c
 12380  004B5E  D006               	goto	i2l7908
 12381                           
 12382                           ; BSR set to: 1
 12383  004B60  29D5               	incf	_logPos& (0+255),w,b
 12384  004B62  B4D8               	btfsc	status,2,c
 12385  004B64  D003               	goto	i2l7908
 12386                           
 12387                           ; BSR set to: 1
 12388                           ;main.c: 556:         logPos[0] += 1;
 12389  004B66  2BD5               	incf	_logPos& (0+255),f,b
 12390                           
 12391                           ; BSR set to: 1
 12392                           ;main.c: 557:         logPos[1] = 0x00;
 12393  004B68  0E00               	movlw	0
 12394  004B6A  D011               	goto	L14
 12395  004B6C                     i2l7908:
 12396                           
 12397                           ; BSR set to: 1
 12398  004B6C  51D6               	movf	(_logPos+1)& (0+255),w,b
 12399  004B6E  6E0C               	movwf	??_dataLogWrite& (0+255),c
 12400  004B70  6A0D               	clrf	(??_dataLogWrite+1)& (0+255),c
 12401  004B72  0E02               	movlw	2
 12402  004B74  260C               	addwf	??_dataLogWrite,f,c
 12403  004B76  0E00               	movlw	0
 12404  004B78  220D               	addwfc	??_dataLogWrite+1,f,c
 12405  004B7A  280C               	incf	??_dataLogWrite,w,c
 12406  004B7C  100D               	iorwf	??_dataLogWrite+1,w,c
 12407  004B7E  A4D8               	btfss	status,2,c
 12408  004B80  D007               	goto	i2l7914
 12409                           
 12410                           ; BSR set to: 1
 12411  004B82  29D5               	incf	_logPos& (0+255),w,b
 12412  004B84  A4D8               	btfss	status,2,c
 12413  004B86  D004               	goto	i2l7914
 12414                           
 12415                           ; BSR set to: 1
 12416                           ;main.c: 559:         logPos[0] = 0x00;
 12417  004B88  0E00               	movlw	0
 12418  004B8A  6FD5               	movwf	_logPos& (0+255),b
 12419                           
 12420                           ;main.c: 560:         logPos[1] = 0x03;
 12421  004B8C  0E03               	movlw	3
 12422  004B8E                     L14:
 12423  004B8E  6FD6               	movwf	(_logPos+1)& (0+255),b
 12424  004B90                     i2l7914:
 12425                           
 12426                           ; BSR set to: 1
 12427                           ;main.c: 563:     logData[2] = logPos[0];
 12428  004B90  C1D5  F1D1         	movff	_logPos,_logData+2
 12429                           
 12430                           ; BSR set to: 1
 12431                           ;main.c: 564:     logData[3] = logPos[1];
 12432  004B94  C1D6  F1D2         	movff	_logPos+1,_logData+3
 12433                           
 12434                           ; BSR set to: 1
 12435                           ;main.c: 566:     i2c_WriteSerial(eeprom_Addr, logData, 4);
 12436  004B98  0E00               	movlw	0
 12437  004B9A  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 12438  004B9C  0E50               	movlw	80
 12439  004B9E  6E01               	movwf	i2i2c_WriteSerial@addr,c
 12440  004BA0  0ECF               	movlw	low _logData
 12441  004BA2  6E03               	movwf	i2i2c_WriteSerial@data,c
 12442  004BA4  0E01               	movlw	high _logData
 12443  004BA6  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 12444  004BA8  0E00               	movlw	0
 12445  004BAA  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 12446  004BAC  0E04               	movlw	4
 12447  004BAE  6E05               	movwf	i2i2c_WriteSerial@length,c
 12448  004BB0  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 12449                           
 12450                           ;main.c: 567:     _delay((unsigned long)((10)*(64000000/4000.0)));
 12451  004BB4  0ED0               	movlw	208
 12452  004BB6  6E0C               	movwf	??_dataLogWrite& (0+255),c
 12453  004BB8  0ECA               	movlw	202
 12454  004BBA                     i2u1188_47:
 12455  004BBA  2EE8               	decfsz	wreg,f,c
 12456  004BBC  D7FE               	bra	i2u1188_47
 12457  004BBE  2E0C               	decfsz	??_dataLogWrite& (0+255),f,c
 12458  004BC0  D7FC               	bra	i2u1188_47
 12459  004BC2  0012               	return		;funcret
 12460  004BC4                     __end_of_dataLogWrite:
 12461                           	opt callstack 0
 12462                           
 12463 ;; *************** function _TMR4_ISR *****************
 12464 ;; Defined at:
 12465 ;;		line 119 in file "mcc_generated_files/tmr4.c"
 12466 ;; Parameters:    Size  Location     Type
 12467 ;;		None
 12468 ;; Auto vars:     Size  Location     Type
 12469 ;;		None
 12470 ;; Return value:  Size  Location     Type
 12471 ;;                  1    wreg      void 
 12472 ;; Registers used:
 12473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12474 ;; Tracked objects:
 12475 ;;		On entry : 0/0
 12476 ;;		On exit  : 0/0
 12477 ;;		Unchanged: 0/0
 12478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12483 ;;Total ram usage:        0 bytes
 12484 ;; Hardware stack levels used:    1
 12485 ;; Hardware stack levels required when called:   11
 12486 ;; This function calls:
 12487 ;;		_TMR4_CallBack
 12488 ;; This function is called by:
 12489 ;;		_INTERRUPT_InterruptManager
 12490 ;; This function uses a non-reentrant model
 12491 ;;
 12492                           
 12493                           	psect	text62
 12494  006BE4                     __ptext62:
 12495                           	opt callstack 0
 12496  006BE4                     _TMR4_ISR:
 12497                           	opt callstack 8
 12498                           
 12499                           ;mcc_generated_files/tmr4.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 124:     PIR5bits.TMR4IF = 0;
 12500                           
 12501                           ;incstack = 0
 12502  006BE4  907E               	bcf	3966,0,c	;volatile
 12503                           
 12504                           ;mcc_generated_files/tmr4.c: 127:     if (++CountCallBack >= 12287)
 12505  006BE6  0101               	movlb	1	; () banked
 12506  006BE8  4BB1               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 12507  006BEA  2BB2               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 12508  006BEC  29B1               	incf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 12509  006BEE  0E2F               	movlw	47
 12510  006BF0  59B2               	subwfb	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 12511  006BF2  A0D8               	btfss	status,0,c
 12512  006BF4  0012               	return	
 12513                           
 12514                           ; BSR set to: 1
 12515                           ;mcc_generated_files/tmr4.c: 128:     {;mcc_generated_files/tmr4.c: 130:         TMR4_Ca
      +                          llBack();
 12516  006BF6  EC34  F036         	call	_TMR4_CallBack	;wreg free
 12517                           
 12518                           ;mcc_generated_files/tmr4.c: 133:         CountCallBack = 0;
 12519  006BFA  0E00               	movlw	0
 12520  006BFC  0101               	movlb	1	; () banked
 12521  006BFE  6FB2               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 12522  006C00  0E00               	movlw	0
 12523  006C02  6FB1               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 12524                           
 12525                           ; BSR set to: 1
 12526  006C04  0012               	return		;funcret
 12527  006C06                     __end_of_TMR4_ISR:
 12528                           	opt callstack 0
 12529                           
 12530 ;; *************** function _TMR4_CallBack *****************
 12531 ;; Defined at:
 12532 ;;		line 137 in file "mcc_generated_files/tmr4.c"
 12533 ;; Parameters:    Size  Location     Type
 12534 ;;		None
 12535 ;; Auto vars:     Size  Location     Type
 12536 ;;		None
 12537 ;; Return value:  Size  Location     Type
 12538 ;;                  1    wreg      void 
 12539 ;; Registers used:
 12540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12541 ;; Tracked objects:
 12542 ;;		On entry : 0/0
 12543 ;;		On exit  : 0/0
 12544 ;;		Unchanged: 0/0
 12545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;Total ram usage:        0 bytes
 12551 ;; Hardware stack levels used:    1
 12552 ;; Hardware stack levels required when called:   10
 12553 ;; This function calls:
 12554 ;;		Absolute function
 12555 ;;		_TMR4_DefaultInterruptHandler
 12556 ;;		_dataLogRead
 12557 ;; This function is called by:
 12558 ;;		_TMR4_ISR
 12559 ;; This function uses a non-reentrant model
 12560 ;;
 12561                           
 12562                           	psect	text63
 12563  006C68                     __ptext63:
 12564                           	opt callstack 0
 12565  006C68                     _TMR4_CallBack:
 12566                           	opt callstack 8
 12567                           
 12568                           ;mcc_generated_files/tmr4.c: 141:     if(TMR4_InterruptHandler)
 12569                           
 12570                           ; BSR set to: 1
 12571                           ;incstack = 0
 12572  006C68  0101               	movlb	1	; () banked
 12573  006C6A  51B3               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12574  006C6C  11B4               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12575  006C6E  B4D8               	btfsc	status,2,c
 12576  006C70  0012               	return	
 12577                           
 12578                           ; BSR set to: 1
 12579                           ;mcc_generated_files/tmr4.c: 142:     {;mcc_generated_files/tmr4.c: 143:         TMR4_In
      +                          terruptHandler();
 12580  006C72  D801               	call	i2u1129_48
 12581  006C74  0012               	return	
 12582  006C76                     i2u1129_48:
 12583  006C76  0005               	push	
 12584  006C78  6EFA               	movwf	pclath,c
 12585  006C7A  51B3               	movf	_TMR4_InterruptHandler& (0+255),w,b
 12586  006C7C  6EFD               	movwf	tosl,c
 12587  006C7E  51B4               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 12588  006C80  6EFE               	movwf	tosh,c
 12589  006C82  6AFF               	clrf	tosu,c
 12590  006C84  50FA               	movf	pclath,w,c
 12591  006C86  0012               	return		;indir
 12592  006C88                     __end_of_TMR4_CallBack:
 12593                           	opt callstack 0
 12594                           
 12595 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 12596 ;; Defined at:
 12597 ;;		line 151 in file "mcc_generated_files/tmr4.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;		None
 12600 ;; Auto vars:     Size  Location     Type
 12601 ;;		None
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  1    wreg      void 
 12604 ;; Registers used:
 12605 ;;		None
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12615 ;;Total ram usage:        0 bytes
 12616 ;; Hardware stack levels used:    1
 12617 ;; This function calls:
 12618 ;;		Nothing
 12619 ;; This function is called by:
 12620 ;;		_TMR4_Initialize
 12621 ;;		_TMR4_CallBack
 12622 ;; This function uses a non-reentrant model
 12623 ;;
 12624                           
 12625                           	psect	text64
 12626  006D6A                     __ptext64:
 12627                           	opt callstack 0
 12628  006D6A                     _TMR4_DefaultInterruptHandler:
 12629                           	opt callstack 17
 12630                           
 12631                           ;incstack = 0
 12632  006D6A  0012               	return		;funcret
 12633  006D6C                     __end_of_TMR4_DefaultInterruptHandler:
 12634                           	opt callstack 0
 12635                           
 12636 ;; *************** function _dataLogRead *****************
 12637 ;; Defined at:
 12638 ;;		line 571 in file "main.c"
 12639 ;; Parameters:    Size  Location     Type
 12640 ;;		None
 12641 ;; Auto vars:     Size  Location     Type
 12642 ;;  readOutT        5  115[BANK0 ] unsigned char [5]
 12643 ;;  readTemp        4  120[BANK0 ] float 
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  1    wreg      void 
 12646 ;; Registers used:
 12647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12648 ;; Tracked objects:
 12649 ;;		On entry : 0/0
 12650 ;;		On exit  : 0/0
 12651 ;;		Unchanged: 0/0
 12652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12654 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12655 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12656 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12657 ;;Total ram usage:       11 bytes
 12658 ;; Hardware stack levels used:    1
 12659 ;; Hardware stack levels required when called:    9
 12660 ;; This function calls:
 12661 ;;		___xxtofl
 12662 ;;		_sprintf
 12663 ;;		i2___fladd
 12664 ;;		i2___fldiv
 12665 ;;		i2___flmul
 12666 ;;		i2_i2c_ReadSerial
 12667 ;;		i2_i2c_WriteSerial
 12668 ;;		i2_printf
 12669 ;; This function is called by:
 12670 ;;		_main
 12671 ;;		_TMR4_CallBack
 12672 ;; This function uses a non-reentrant model
 12673 ;;
 12674                           
 12675                           	psect	text65
 12676  003CBE                     __ptext65:
 12677                           	opt callstack 0
 12678  003CBE                     _dataLogRead:
 12679                           	opt callstack 8
 12680                           
 12681                           ;main.c: 572:     i2c_WriteSerial(eeprom_Addr, readPos, 2);
 12682                           
 12683                           ;incstack = 0
 12684  003CBE  0E00               	movlw	0
 12685  003CC0  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 12686  003CC2  0E50               	movlw	80
 12687  003CC4  6E01               	movwf	i2i2c_WriteSerial@addr,c
 12688  003CC6  0EFB               	movlw	low _readPos
 12689  003CC8  6E03               	movwf	i2i2c_WriteSerial@data,c
 12690  003CCA  0E00               	movlw	high _readPos
 12691  003CCC  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 12692  003CCE  0E00               	movlw	0
 12693  003CD0  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 12694  003CD2  0E02               	movlw	2
 12695  003CD4  6E05               	movwf	i2i2c_WriteSerial@length,c
 12696  003CD6  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 12697                           
 12698                           ;main.c: 573:     _delay((unsigned long)((10)*(64000000/4000.0)));
 12699  003CDA  0ED0               	movlw	208
 12700  003CDC  0100               	movlb	0	; () banked
 12701  003CDE  6FD1               	movwf	??_dataLogRead& (0+255),b
 12702  003CE0  0EC9               	movlw	201
 12703  003CE2                     i2u1189_47:
 12704  003CE2  2EE8               	decfsz	wreg,f,c
 12705  003CE4  D7FE               	bra	i2u1189_47
 12706  003CE6  2FD1               	decfsz	??_dataLogRead& (0+255),f,b
 12707  003CE8  D7FC               	bra	i2u1189_47
 12708  003CEA  D000               	nop2	
 12709                           
 12710                           ;main.c: 575:     if ((readPos[1] + 2) != 0xFF) { readPos[1] += 4; }
 12711  003CEC  0100               	movlb	0	; () banked
 12712  003CEE  51FC               	movf	(_readPos+1)& (0+255),w,b
 12713  003CF0  6FD1               	movwf	??_dataLogRead& (0+255),b
 12714  003CF2  6BD2               	clrf	(??_dataLogRead+1)& (0+255),b
 12715  003CF4  0E02               	movlw	2
 12716  003CF6  27D1               	addwf	??_dataLogRead& (0+255),f,b
 12717  003CF8  0E00               	movlw	0
 12718  003CFA  23D2               	addwfc	(??_dataLogRead+1)& (0+255),f,b
 12719  003CFC  29D1               	incf	??_dataLogRead& (0+255),w,b
 12720  003CFE  11D2               	iorwf	(??_dataLogRead+1)& (0+255),w,b
 12721  003D00  B4D8               	btfsc	status,2,c
 12722  003D02  D003               	goto	i2l7930
 12723                           
 12724                           ; BSR set to: 0
 12725  003D04  0E04               	movlw	4
 12726  003D06  27FC               	addwf	(_readPos+1)& (0+255),f,b
 12727  003D08  D023               	goto	i2l7944
 12728  003D0A                     i2l7930:
 12729                           
 12730                           ; BSR set to: 0
 12731  003D0A  51FC               	movf	(_readPos+1)& (0+255),w,b
 12732  003D0C  6FD1               	movwf	??_dataLogRead& (0+255),b
 12733  003D0E  6BD2               	clrf	(??_dataLogRead+1)& (0+255),b
 12734  003D10  0E02               	movlw	2
 12735  003D12  27D1               	addwf	??_dataLogRead& (0+255),f,b
 12736  003D14  0E00               	movlw	0
 12737  003D16  23D2               	addwfc	(??_dataLogRead+1)& (0+255),f,b
 12738  003D18  29D1               	incf	??_dataLogRead& (0+255),w,b
 12739  003D1A  11D2               	iorwf	(??_dataLogRead+1)& (0+255),w,b
 12740  003D1C  A4D8               	btfss	status,2,c
 12741  003D1E  D006               	goto	i2l7938
 12742                           
 12743                           ; BSR set to: 0
 12744  003D20  29FB               	incf	_readPos& (0+255),w,b
 12745  003D22  B4D8               	btfsc	status,2,c
 12746  003D24  D003               	goto	i2l7938
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;main.c: 577:         readPos[0] += 1;
 12750  003D26  2BFB               	incf	_readPos& (0+255),f,b
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;main.c: 578:         readPos[1] = 0x00;
 12754  003D28  0E00               	movlw	0
 12755  003D2A  D011               	goto	L15
 12756  003D2C                     i2l7938:
 12757                           
 12758                           ; BSR set to: 0
 12759  003D2C  51FC               	movf	(_readPos+1)& (0+255),w,b
 12760  003D2E  6FD1               	movwf	??_dataLogRead& (0+255),b
 12761  003D30  6BD2               	clrf	(??_dataLogRead+1)& (0+255),b
 12762  003D32  0E02               	movlw	2
 12763  003D34  27D1               	addwf	??_dataLogRead& (0+255),f,b
 12764  003D36  0E00               	movlw	0
 12765  003D38  23D2               	addwfc	(??_dataLogRead+1)& (0+255),f,b
 12766  003D3A  29D1               	incf	??_dataLogRead& (0+255),w,b
 12767  003D3C  11D2               	iorwf	(??_dataLogRead+1)& (0+255),w,b
 12768  003D3E  A4D8               	btfss	status,2,c
 12769  003D40  D007               	goto	i2l7944
 12770                           
 12771                           ; BSR set to: 0
 12772  003D42  29FB               	incf	_readPos& (0+255),w,b
 12773  003D44  A4D8               	btfss	status,2,c
 12774  003D46  D004               	goto	i2l7944
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;main.c: 580:         readPos[0] = 0x00;
 12778  003D48  0E00               	movlw	0
 12779  003D4A  6FFB               	movwf	_readPos& (0+255),b
 12780                           
 12781                           ;main.c: 581:         readPos[1] = 0x03;
 12782  003D4C  0E03               	movlw	3
 12783  003D4E                     L15:
 12784  003D4E  6FFC               	movwf	(_readPos+1)& (0+255),b
 12785  003D50                     i2l7944:
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;main.c: 584:     i2c_ReadSerial(eeprom_Addr, readData, 4);
 12789  003D50  0E00               	movlw	0
 12790  003D52  6E02               	movwf	i2i2c_ReadSerial@addr+1,c
 12791  003D54  0E50               	movlw	80
 12792  003D56  6E01               	movwf	i2i2c_ReadSerial@addr,c
 12793  003D58  0ECB               	movlw	low _readData
 12794  003D5A  6E03               	movwf	i2i2c_ReadSerial@data,c
 12795  003D5C  0E01               	movlw	high _readData
 12796  003D5E  6E04               	movwf	i2i2c_ReadSerial@data+1,c
 12797  003D60  0E00               	movlw	0
 12798  003D62  6E06               	movwf	i2i2c_ReadSerial@length+1,c
 12799  003D64  0E04               	movlw	4
 12800  003D66  6E05               	movwf	i2i2c_ReadSerial@length,c
 12801  003D68  EC8B  F02E         	call	i2_i2c_ReadSerial	;wreg free
 12802                           
 12803                           ;main.c: 585:     _delay((unsigned long)((10)*(64000000/4000.0)));
 12804  003D6C  0ED0               	movlw	208
 12805  003D6E  0100               	movlb	0	; () banked
 12806  003D70  6FD1               	movwf	??_dataLogRead& (0+255),b
 12807  003D72  0EC9               	movlw	201
 12808  003D74                     i2u1190_47:
 12809  003D74  2EE8               	decfsz	wreg,f,c
 12810  003D76  D7FE               	bra	i2u1190_47
 12811  003D78  2FD1               	decfsz	??_dataLogRead& (0+255),f,b
 12812  003D7A  D7FC               	bra	i2u1190_47
 12813  003D7C  D000               	nop2	
 12814                           
 12815                           ;main.c: 587:     float readTemp;;main.c: 588:     char readOutT[5];;main.c: 590:     re
      +                          adTemp = ((175.72 * ((readData[0] << 8) + readData[1])) / 65536) - 46.85;
 12816  003D7E  0E00               	movlw	0
 12817  003D80  6E2C               	movwf	i2___fldiv@a,c
 12818  003D82  0E00               	movlw	0
 12819  003D84  6E2D               	movwf	i2___fldiv@a+1,c
 12820  003D86  0E80               	movlw	128
 12821  003D88  6E2E               	movwf	i2___fldiv@a+2,c
 12822  003D8A  0E47               	movlw	71
 12823  003D8C  6E2F               	movwf	i2___fldiv@a+3,c
 12824  003D8E  0E52               	movlw	82
 12825  003D90  6E13               	movwf	i2___flmul@a,c
 12826  003D92  0EB8               	movlw	184
 12827  003D94  6E14               	movwf	i2___flmul@a+1,c
 12828  003D96  0E2F               	movlw	47
 12829  003D98  6E15               	movwf	i2___flmul@a+2,c
 12830  003D9A  0E43               	movlw	67
 12831  003D9C  6E16               	movwf	i2___flmul@a+3,c
 12832  003D9E  0101               	movlb	1	; () banked
 12833  003DA0  51CC               	movf	(_readData+1)& (0+255),w,b
 12834  003DA2  C1CB  F0D1         	movff	_readData,??_dataLogRead
 12835  003DA6  0100               	movlb	0	; () banked
 12836  003DA8  6BD2               	clrf	(??_dataLogRead+1)& (0+255),b
 12837  003DAA  C0D1  F0D2         	movff	??_dataLogRead,??_dataLogRead+1
 12838  003DAE  6BD1               	clrf	??_dataLogRead& (0+255),b
 12839  003DB0  27D1               	addwf	??_dataLogRead& (0+255),f,b
 12840  003DB2  0E00               	movlw	0
 12841  003DB4  23D2               	addwfc	(??_dataLogRead+1)& (0+255),f,b
 12842  003DB6  C0D1  F001         	movff	??_dataLogRead,___xxtofl@val
 12843  003DBA  C0D2  F002         	movff	??_dataLogRead+1,___xxtofl@val+1
 12844  003DBE  0E00               	movlw	0
 12845  003DC0  BE02               	btfsc	___xxtofl@val+1,7,c
 12846  003DC2  0EFF               	movlw	-1
 12847  003DC4  6E03               	movwf	___xxtofl@val+2,c
 12848  003DC6  6E04               	movwf	___xxtofl@val+3,c
 12849  003DC8  0E01               	movlw	1
 12850  003DCA  ECDD  F027         	call	___xxtofl
 12851  003DCE  C001  F00F         	movff	?___xxtofl,i2___flmul@b
 12852  003DD2  C002  F010         	movff	?___xxtofl+1,i2___flmul@b+1
 12853  003DD6  C003  F011         	movff	?___xxtofl+2,i2___flmul@b+2
 12854  003DDA  C004  F012         	movff	?___xxtofl+3,i2___flmul@b+3
 12855  003DDE  ECA9  F019         	call	i2___flmul	;wreg free
 12856  003DE2  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 12857  003DE6  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 12858  003DEA  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 12859  003DEE  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 12860  003DF2  ECFF  F020         	call	i2___fldiv	;wreg free
 12861  003DF6  C028  F041         	movff	?i2___fldiv,i2___fladd@b
 12862  003DFA  C029  F042         	movff	?i2___fldiv+1,i2___fladd@b+1
 12863  003DFE  C02A  F043         	movff	?i2___fldiv+2,i2___fladd@b+2
 12864  003E02  C02B  F044         	movff	?i2___fldiv+3,i2___fladd@b+3
 12865  003E06  0E66               	movlw	102
 12866  003E08  6E45               	movwf	i2___fladd@a,c
 12867  003E0A  0E66               	movlw	102
 12868  003E0C  6E46               	movwf	i2___fladd@a+1,c
 12869  003E0E  0E3B               	movlw	59
 12870  003E10  6E47               	movwf	i2___fladd@a+2,c
 12871  003E12  0EC2               	movlw	194
 12872  003E14  6E48               	movwf	i2___fladd@a+3,c
 12873  003E16  ECD9  F01C         	call	i2___fladd	;wreg free
 12874  003E1A  C041  F0D8         	movff	?i2___fladd,dataLogRead@readTemp
 12875  003E1E  C042  F0D9         	movff	?i2___fladd+1,dataLogRead@readTemp+1
 12876  003E22  C043  F0DA         	movff	?i2___fladd+2,dataLogRead@readTemp+2
 12877  003E26  C044  F0DB         	movff	?i2___fladd+3,dataLogRead@readTemp+3
 12878                           
 12879                           ;main.c: 592:     sprintf(readOutT, "%.1f", readTemp);
 12880  003E2A  0ED3               	movlw	low dataLogRead@readOutT
 12881  003E2C  0100               	movlb	0	; () banked
 12882  003E2E  6FBF               	movwf	sprintf@s& (0+255),b
 12883  003E30  0E00               	movlw	high dataLogRead@readOutT
 12884  003E32  6FC0               	movwf	(sprintf@s+1)& (0+255),b
 12885  003E34  0ECF               	movlw	low (STR_8+1)
 12886  003E36  6FC1               	movwf	sprintf@fmt& (0+255),b
 12887  003E38  0E10               	movlw	high (STR_8+1)
 12888  003E3A  6FC2               	movwf	(sprintf@fmt+1)& (0+255),b
 12889  003E3C  C0D8  F0C3         	movff	dataLogRead@readTemp,?_sprintf+4
 12890  003E40  C0D9  F0C4         	movff	dataLogRead@readTemp+1,?_sprintf+5
 12891  003E44  C0DA  F0C5         	movff	dataLogRead@readTemp+2,?_sprintf+6
 12892  003E48  C0DB  F0C6         	movff	dataLogRead@readTemp+3,?_sprintf+7
 12893  003E4C  ECAC  F032         	call	_sprintf	;wreg free
 12894                           
 12895                           ;main.c: 593:     printf("1st Read data: %s \r\n", readOutT);
 12896  003E50  0E92               	movlw	low STR_13
 12897  003E52  0100               	movlb	0	; () banked
 12898  003E54  6FBF               	movwf	i2printf@fmt& (0+255),b
 12899  003E56  0E10               	movlw	high STR_13
 12900  003E58  6FC0               	movwf	(i2printf@fmt+1)& (0+255),b
 12901  003E5A  0ED3               	movlw	low dataLogRead@readOutT
 12902  003E5C  6FC1               	movwf	(?i2_printf+2)& (0+255),b
 12903  003E5E  0E00               	movlw	high dataLogRead@readOutT
 12904  003E60  6FC2               	movwf	(?i2_printf+3)& (0+255),b
 12905  003E62  EC84  F035         	call	i2_printf	;wreg free
 12906                           
 12907                           ;main.c: 594:     _delay((unsigned long)((10)*(64000000/4000.0)));
 12908  003E66  0ED0               	movlw	208
 12909  003E68  0100               	movlb	0	; () banked
 12910  003E6A  6FD1               	movwf	??_dataLogRead& (0+255),b
 12911  003E6C  0EC9               	movlw	201
 12912  003E6E                     i2u1191_47:
 12913  003E6E  2EE8               	decfsz	wreg,f,c
 12914  003E70  D7FE               	bra	i2u1191_47
 12915  003E72  2FD1               	decfsz	??_dataLogRead& (0+255),f,b
 12916  003E74  D7FC               	bra	i2u1191_47
 12917  003E76  D000               	nop2	
 12918                           
 12919                           ;main.c: 596:     readTemp = ((175.72 * ((readData[2] << 8) + readData[3])) / 65536) - 4
      +                          6.85;
 12920  003E78  0E00               	movlw	0
 12921  003E7A  6E2C               	movwf	i2___fldiv@a,c
 12922  003E7C  0E00               	movlw	0
 12923  003E7E  6E2D               	movwf	i2___fldiv@a+1,c
 12924  003E80  0E80               	movlw	128
 12925  003E82  6E2E               	movwf	i2___fldiv@a+2,c
 12926  003E84  0E47               	movlw	71
 12927  003E86  6E2F               	movwf	i2___fldiv@a+3,c
 12928  003E88  0E52               	movlw	82
 12929  003E8A  6E13               	movwf	i2___flmul@a,c
 12930  003E8C  0EB8               	movlw	184
 12931  003E8E  6E14               	movwf	i2___flmul@a+1,c
 12932  003E90  0E2F               	movlw	47
 12933  003E92  6E15               	movwf	i2___flmul@a+2,c
 12934  003E94  0E43               	movlw	67
 12935  003E96  6E16               	movwf	i2___flmul@a+3,c
 12936  003E98  0101               	movlb	1	; () banked
 12937  003E9A  51CE               	movf	(_readData+3)& (0+255),w,b
 12938  003E9C  C1CD  F0D1         	movff	_readData+2,??_dataLogRead
 12939  003EA0  0100               	movlb	0	; () banked
 12940  003EA2  6BD2               	clrf	(??_dataLogRead+1)& (0+255),b
 12941  003EA4  C0D1  F0D2         	movff	??_dataLogRead,??_dataLogRead+1
 12942  003EA8  6BD1               	clrf	??_dataLogRead& (0+255),b
 12943  003EAA  27D1               	addwf	??_dataLogRead& (0+255),f,b
 12944  003EAC  0E00               	movlw	0
 12945  003EAE  23D2               	addwfc	(??_dataLogRead+1)& (0+255),f,b
 12946  003EB0  C0D1  F001         	movff	??_dataLogRead,___xxtofl@val
 12947  003EB4  C0D2  F002         	movff	??_dataLogRead+1,___xxtofl@val+1
 12948  003EB8  0E00               	movlw	0
 12949  003EBA  BE02               	btfsc	___xxtofl@val+1,7,c
 12950  003EBC  0EFF               	movlw	-1
 12951  003EBE  6E03               	movwf	___xxtofl@val+2,c
 12952  003EC0  6E04               	movwf	___xxtofl@val+3,c
 12953  003EC2  0E01               	movlw	1
 12954  003EC4  ECDD  F027         	call	___xxtofl
 12955  003EC8  C001  F00F         	movff	?___xxtofl,i2___flmul@b
 12956  003ECC  C002  F010         	movff	?___xxtofl+1,i2___flmul@b+1
 12957  003ED0  C003  F011         	movff	?___xxtofl+2,i2___flmul@b+2
 12958  003ED4  C004  F012         	movff	?___xxtofl+3,i2___flmul@b+3
 12959  003ED8  ECA9  F019         	call	i2___flmul	;wreg free
 12960  003EDC  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 12961  003EE0  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 12962  003EE4  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 12963  003EE8  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 12964  003EEC  ECFF  F020         	call	i2___fldiv	;wreg free
 12965  003EF0  C028  F041         	movff	?i2___fldiv,i2___fladd@b
 12966  003EF4  C029  F042         	movff	?i2___fldiv+1,i2___fladd@b+1
 12967  003EF8  C02A  F043         	movff	?i2___fldiv+2,i2___fladd@b+2
 12968  003EFC  C02B  F044         	movff	?i2___fldiv+3,i2___fladd@b+3
 12969  003F00  0E66               	movlw	102
 12970  003F02  6E45               	movwf	i2___fladd@a,c
 12971  003F04  0E66               	movlw	102
 12972  003F06  6E46               	movwf	i2___fladd@a+1,c
 12973  003F08  0E3B               	movlw	59
 12974  003F0A  6E47               	movwf	i2___fladd@a+2,c
 12975  003F0C  0EC2               	movlw	194
 12976  003F0E  6E48               	movwf	i2___fladd@a+3,c
 12977  003F10  ECD9  F01C         	call	i2___fladd	;wreg free
 12978  003F14  C041  F0D8         	movff	?i2___fladd,dataLogRead@readTemp
 12979  003F18  C042  F0D9         	movff	?i2___fladd+1,dataLogRead@readTemp+1
 12980  003F1C  C043  F0DA         	movff	?i2___fladd+2,dataLogRead@readTemp+2
 12981  003F20  C044  F0DB         	movff	?i2___fladd+3,dataLogRead@readTemp+3
 12982                           
 12983                           ;main.c: 598:     sprintf(readOutT, "%.1f", readTemp);
 12984  003F24  0ED3               	movlw	low dataLogRead@readOutT
 12985  003F26  0100               	movlb	0	; () banked
 12986  003F28  6FBF               	movwf	sprintf@s& (0+255),b
 12987  003F2A  0E00               	movlw	high dataLogRead@readOutT
 12988  003F2C  6FC0               	movwf	(sprintf@s+1)& (0+255),b
 12989  003F2E  0ECF               	movlw	low (STR_8+1)
 12990  003F30  6FC1               	movwf	sprintf@fmt& (0+255),b
 12991  003F32  0E10               	movlw	high (STR_8+1)
 12992  003F34  6FC2               	movwf	(sprintf@fmt+1)& (0+255),b
 12993  003F36  C0D8  F0C3         	movff	dataLogRead@readTemp,?_sprintf+4
 12994  003F3A  C0D9  F0C4         	movff	dataLogRead@readTemp+1,?_sprintf+5
 12995  003F3E  C0DA  F0C5         	movff	dataLogRead@readTemp+2,?_sprintf+6
 12996  003F42  C0DB  F0C6         	movff	dataLogRead@readTemp+3,?_sprintf+7
 12997  003F46  ECAC  F032         	call	_sprintf	;wreg free
 12998                           
 12999                           ;main.c: 599:     printf("2nd Read data: %s \r\n", readOutT);
 13000  003F4A  0E7D               	movlw	low STR_15
 13001  003F4C  0100               	movlb	0	; () banked
 13002  003F4E  6FBF               	movwf	i2printf@fmt& (0+255),b
 13003  003F50  0E10               	movlw	high STR_15
 13004  003F52  6FC0               	movwf	(i2printf@fmt+1)& (0+255),b
 13005  003F54  0ED3               	movlw	low dataLogRead@readOutT
 13006  003F56  6FC1               	movwf	(?i2_printf+2)& (0+255),b
 13007  003F58  0E00               	movlw	high dataLogRead@readOutT
 13008  003F5A  6FC2               	movwf	(?i2_printf+3)& (0+255),b
 13009  003F5C  EC84  F035         	call	i2_printf	;wreg free
 13010                           
 13011                           ;main.c: 600:     _delay((unsigned long)((10)*(64000000/4000.0)));
 13012  003F60  0ED0               	movlw	208
 13013  003F62  0100               	movlb	0	; () banked
 13014  003F64  6FD1               	movwf	??_dataLogRead& (0+255),b
 13015  003F66  0EC9               	movlw	201
 13016  003F68                     i2u1192_47:
 13017  003F68  2EE8               	decfsz	wreg,f,c
 13018  003F6A  D7FE               	bra	i2u1192_47
 13019  003F6C  2FD1               	decfsz	??_dataLogRead& (0+255),f,b
 13020  003F6E  D7FC               	bra	i2u1192_47
 13021  003F70  D000               	nop2	
 13022  003F72  0012               	return		;funcret
 13023  003F74                     __end_of_dataLogRead:
 13024                           	opt callstack 0
 13025                           
 13026 ;; *************** function i2_printf *****************
 13027 ;; Defined at:
 13028 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;  fmt             2   95[BANK0 ] PTR const unsigned char 
 13031 ;;		 -> STR_15(21), STR_13(21), STR_11(39), STR_10(10), 
 13032 ;;		 -> STR_7(31), STR_6(14), STR_3(15), 
 13033 ;; Auto vars:     Size  Location     Type
 13034 ;;  printf          2  101[BANK0 ] PTR void [1]
 13035 ;;		 -> ?i2_printf(2), ?_printf(2), ?_sprintf(2), 
 13036 ;;  printf          2    0        int 
 13037 ;; Return value:  Size  Location     Type
 13038 ;;                  2   95[BANK0 ] int 
 13039 ;; Registers used:
 13040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13041 ;; Tracked objects:
 13042 ;;		On entry : 0/0
 13043 ;;		On exit  : 0/0
 13044 ;;		Unchanged: 0/0
 13045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13047 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13049 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13050 ;;Total ram usage:        8 bytes
 13051 ;; Hardware stack levels used:    1
 13052 ;; Hardware stack levels required when called:    8
 13053 ;; This function calls:
 13054 ;;		i2_vfprintf
 13055 ;; This function is called by:
 13056 ;;		_dataLogRead
 13057 ;; This function uses a non-reentrant model
 13058 ;;
 13059                           
 13060                           	psect	text66
 13061  006B08                     __ptext66:
 13062                           	opt callstack 0
 13063  006B08                     i2_printf:
 13064                           	opt callstack 8
 13065                           
 13066                           ;incstack = 0
 13067  006B08  0EC1               	movlw	low (?i2_printf+2)
 13068  006B0A  0100               	movlb	0	; () banked
 13069  006B0C  6FC5               	movwf	i2printf@ap& (0+255),b
 13070  006B0E  0E00               	movlw	high (?i2_printf+2)
 13071  006B10  6FC6               	movwf	(i2printf@ap+1)& (0+255),b
 13072                           
 13073                           ; BSR set to: 0
 13074  006B12  0E00               	movlw	0
 13075  006B14  6FB7               	movwf	i2vfprintf@fp& (0+255),b
 13076  006B16  0E00               	movlw	0
 13077  006B18  6FB8               	movwf	(i2vfprintf@fp+1)& (0+255),b
 13078  006B1A  C0BF  F0B9         	movff	i2printf@fmt,i2vfprintf@fmt
 13079  006B1E  C0C0  F0BA         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 13080  006B22  0EC5               	movlw	low i2printf@ap
 13081  006B24  6FBB               	movwf	i2vfprintf@ap& (0+255),b
 13082  006B26  0E00               	movlw	high i2printf@ap
 13083  006B28  6FBC               	movwf	(i2vfprintf@ap+1)& (0+255),b
 13084  006B2A  ECFB  F031         	call	i2_vfprintf	;wreg free
 13085  006B2E  0012               	return		;funcret
 13086  006B30                     __end_ofi2_printf:
 13087                           	opt callstack 0
 13088                           
 13089 ;; *************** function _TMR2_ISR *****************
 13090 ;; Defined at:
 13091 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 13092 ;; Parameters:    Size  Location     Type
 13093 ;;		None
 13094 ;; Auto vars:     Size  Location     Type
 13095 ;;		None
 13096 ;; Return value:  Size  Location     Type
 13097 ;;                  1    wreg      void 
 13098 ;; Registers used:
 13099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13100 ;; Tracked objects:
 13101 ;;		On entry : 0/0
 13102 ;;		On exit  : 0/0
 13103 ;;		Unchanged: 0/0
 13104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13109 ;;Total ram usage:        0 bytes
 13110 ;; Hardware stack levels used:    1
 13111 ;; Hardware stack levels required when called:   11
 13112 ;; This function calls:
 13113 ;;		_TMR2_CallBack
 13114 ;; This function is called by:
 13115 ;;		_INTERRUPT_InterruptManager
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text67
 13120  006B9E                     __ptext67:
 13121                           	opt callstack 0
 13122  006B9E                     _TMR2_ISR:
 13123                           	opt callstack 8
 13124                           
 13125                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
 13126                           
 13127                           ;incstack = 0
 13128  006B9E  929E               	bcf	3998,1,c	;volatile
 13129                           
 13130                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 1194)
 13131  006BA0  0101               	movlb	1	; () banked
 13132  006BA2  4BB5               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
 13133  006BA4  2BB6               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 13134  006BA6  0EAA               	movlw	170
 13135  006BA8  5DB5               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
 13136  006BAA  0E04               	movlw	4
 13137  006BAC  59B6               	subwfb	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 13138  006BAE  A0D8               	btfss	status,0,c
 13139  006BB0  0012               	return	
 13140                           
 13141                           ; BSR set to: 1
 13142                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
 13143  006BB2  EC44  F036         	call	_TMR2_CallBack	;wreg free
 13144                           
 13145                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
 13146  006BB6  0E00               	movlw	0
 13147  006BB8  0101               	movlb	1	; () banked
 13148  006BBA  6FB6               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
 13149  006BBC  0E00               	movlw	0
 13150  006BBE  6FB5               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
 13151                           
 13152                           ; BSR set to: 1
 13153  006BC0  0012               	return		;funcret
 13154  006BC2                     __end_of_TMR2_ISR:
 13155                           	opt callstack 0
 13156                           
 13157 ;; *************** function _TMR2_CallBack *****************
 13158 ;; Defined at:
 13159 ;;		line 137 in file "mcc_generated_files/tmr2.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;		None
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;		None
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  1    wreg      void 
 13166 ;; Registers used:
 13167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13177 ;;Total ram usage:        0 bytes
 13178 ;; Hardware stack levels used:    1
 13179 ;; Hardware stack levels required when called:   10
 13180 ;; This function calls:
 13181 ;;		Absolute function
 13182 ;;		_TMR2_DefaultInterruptHandler
 13183 ;;		_adafruit
 13184 ;; This function is called by:
 13185 ;;		_TMR2_ISR
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           	psect	text68
 13190  006C88                     __ptext68:
 13191                           	opt callstack 0
 13192  006C88                     _TMR2_CallBack:
 13193                           	opt callstack 8
 13194                           
 13195                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
 13196                           
 13197                           ; BSR set to: 1
 13198                           ;incstack = 0
 13199  006C88  0101               	movlb	1	; () banked
 13200  006C8A  51B7               	movf	_TMR2_InterruptHandler& (0+255),w,b
 13201  006C8C  11B8               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 13202  006C8E  B4D8               	btfsc	status,2,c
 13203  006C90  0012               	return	
 13204                           
 13205                           ; BSR set to: 1
 13206                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
 13207  006C92  D801               	call	i2u1127_48
 13208  006C94  0012               	return	
 13209  006C96                     i2u1127_48:
 13210  006C96  0005               	push	
 13211  006C98  6EFA               	movwf	pclath,c
 13212  006C9A  51B7               	movf	_TMR2_InterruptHandler& (0+255),w,b
 13213  006C9C  6EFD               	movwf	tosl,c
 13214  006C9E  51B8               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 13215  006CA0  6EFE               	movwf	tosh,c
 13216  006CA2  6AFF               	clrf	tosu,c
 13217  006CA4  50FA               	movf	pclath,w,c
 13218  006CA6  0012               	return		;indir
 13219  006CA8                     __end_of_TMR2_CallBack:
 13220                           	opt callstack 0
 13221                           
 13222 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 13223 ;; Defined at:
 13224 ;;		line 151 in file "mcc_generated_files/tmr2.c"
 13225 ;; Parameters:    Size  Location     Type
 13226 ;;		None
 13227 ;; Auto vars:     Size  Location     Type
 13228 ;;		None
 13229 ;; Return value:  Size  Location     Type
 13230 ;;                  1    wreg      void 
 13231 ;; Registers used:
 13232 ;;		None
 13233 ;; Tracked objects:
 13234 ;;		On entry : 0/0
 13235 ;;		On exit  : 0/0
 13236 ;;		Unchanged: 0/0
 13237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13242 ;;Total ram usage:        0 bytes
 13243 ;; Hardware stack levels used:    1
 13244 ;; This function calls:
 13245 ;;		Nothing
 13246 ;; This function is called by:
 13247 ;;		_TMR2_Initialize
 13248 ;;		_TMR2_CallBack
 13249 ;; This function uses a non-reentrant model
 13250 ;;
 13251                           
 13252                           	psect	text69
 13253  006D6C                     __ptext69:
 13254                           	opt callstack 0
 13255  006D6C                     _TMR2_DefaultInterruptHandler:
 13256                           	opt callstack 17
 13257                           
 13258                           ;incstack = 0
 13259  006D6C  0012               	return		;funcret
 13260  006D6E                     __end_of_TMR2_DefaultInterruptHandler:
 13261                           	opt callstack 0
 13262                           
 13263 ;; *************** function _adafruit *****************
 13264 ;; Defined at:
 13265 ;;		line 393 in file "main.c"
 13266 ;; Parameters:    Size  Location     Type
 13267 ;;		None
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;  outT            5  122[BANK0 ] unsigned char [5]
 13270 ;;  outH            5  117[BANK0 ] unsigned char [5]
 13271 ;;  rh_code         4  135[BANK0 ] float 
 13272 ;;  temp            4  131[BANK0 ] float 
 13273 ;;  rh              4  127[BANK0 ] float 
 13274 ;; Return value:  Size  Location     Type
 13275 ;;                  1    wreg      void 
 13276 ;; Registers used:
 13277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13278 ;; Tracked objects:
 13279 ;;		On entry : 0/0
 13280 ;;		On exit  : 0/0
 13281 ;;		Unchanged: 0/0
 13282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13284 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13285 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13286 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13287 ;;Total ram usage:       26 bytes
 13288 ;; Hardware stack levels used:    1
 13289 ;; Hardware stack levels required when called:    9
 13290 ;; This function calls:
 13291 ;;		___xxtofl
 13292 ;;		_sprintf
 13293 ;;		i2___fladd
 13294 ;;		i2___fldiv
 13295 ;;		i2___flmul
 13296 ;;		i2_i2c_ReadSerial
 13297 ;;		i2_i2c_WriteSerial
 13298 ;; This function is called by:
 13299 ;;		_main
 13300 ;;		_TMR2_CallBack
 13301 ;; This function uses a non-reentrant model
 13302 ;;
 13303                           
 13304                           	psect	text70
 13305  002C7E                     __ptext70:
 13306                           	opt callstack 0
 13307  002C7E                     _adafruit:
 13308                           	opt callstack 8
 13309                           
 13310                           ;main.c: 394:     i2c_WriteSerial(display_Addr, clearDisplay, 2);
 13311                           
 13312                           ;incstack = 0
 13313  002C7E  0E00               	movlw	0
 13314  002C80  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13315  002C82  0E3C               	movlw	60
 13316  002C84  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13317  002C86  0E33               	movlw	low _clearDisplay
 13318  002C88  6E03               	movwf	i2i2c_WriteSerial@data,c
 13319  002C8A  0E10               	movlw	high _clearDisplay
 13320  002C8C  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13321  002C8E  0E00               	movlw	0
 13322  002C90  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13323  002C92  0E02               	movlw	2
 13324  002C94  6E05               	movwf	i2i2c_WriteSerial@length,c
 13325  002C96  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13326                           
 13327                           ;main.c: 397:     i2c_WriteSerial(adafruit_Addr, adafruit_humi_command, 1);
 13328  002C9A  0E00               	movlw	0
 13329  002C9C  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13330  002C9E  0E40               	movlw	64
 13331  002CA0  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13332  002CA2  0E36               	movlw	low _adafruit_humi_command
 13333  002CA4  6E03               	movwf	i2i2c_WriteSerial@data,c
 13334  002CA6  0E10               	movlw	high _adafruit_humi_command
 13335  002CA8  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13336  002CAA  0E00               	movlw	0
 13337  002CAC  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13338  002CAE  0E01               	movlw	1
 13339  002CB0  6E05               	movwf	i2i2c_WriteSerial@length,c
 13340  002CB2  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13341                           
 13342                           ;main.c: 398:     i2c_ReadSerial(adafruit_Addr, humiRead, 2);
 13343  002CB6  0E00               	movlw	0
 13344  002CB8  6E02               	movwf	i2i2c_ReadSerial@addr+1,c
 13345  002CBA  0E40               	movlw	64
 13346  002CBC  6E01               	movwf	i2i2c_ReadSerial@addr,c
 13347  002CBE  0ED7               	movlw	low _humiRead
 13348  002CC0  6E03               	movwf	i2i2c_ReadSerial@data,c
 13349  002CC2  0E01               	movlw	high _humiRead
 13350  002CC4  6E04               	movwf	i2i2c_ReadSerial@data+1,c
 13351  002CC6  0E00               	movlw	0
 13352  002CC8  6E06               	movwf	i2i2c_ReadSerial@length+1,c
 13353  002CCA  0E02               	movlw	2
 13354  002CCC  6E05               	movwf	i2i2c_ReadSerial@length,c
 13355  002CCE  EC8B  F02E         	call	i2_i2c_ReadSerial	;wreg free
 13356                           
 13357                           ;main.c: 400:     float rh_code = ((humiRead[0] << 8) + humiRead[1]);
 13358  002CD2  0101               	movlb	1	; () banked
 13359  002CD4  51D8               	movf	(_humiRead+1)& (0+255),w,b
 13360  002CD6  C1D7  F0D1         	movff	_humiRead,??_adafruit
 13361  002CDA  0100               	movlb	0	; () banked
 13362  002CDC  6BD2               	clrf	(??_adafruit+1)& (0+255),b
 13363  002CDE  C0D1  F0D2         	movff	??_adafruit,??_adafruit+1
 13364  002CE2  6BD1               	clrf	??_adafruit& (0+255),b
 13365  002CE4  27D1               	addwf	??_adafruit& (0+255),f,b
 13366  002CE6  0E00               	movlw	0
 13367  002CE8  23D2               	addwfc	(??_adafruit+1)& (0+255),f,b
 13368  002CEA  C0D1  F001         	movff	??_adafruit,___xxtofl@val
 13369  002CEE  C0D2  F002         	movff	??_adafruit+1,___xxtofl@val+1
 13370  002CF2  0E00               	movlw	0
 13371  002CF4  BE02               	btfsc	___xxtofl@val+1,7,c
 13372  002CF6  0EFF               	movlw	-1
 13373  002CF8  6E03               	movwf	___xxtofl@val+2,c
 13374  002CFA  6E04               	movwf	___xxtofl@val+3,c
 13375  002CFC  0E01               	movlw	1
 13376  002CFE  ECDD  F027         	call	___xxtofl
 13377  002D02  C001  F0E7         	movff	?___xxtofl,adafruit@rh_code
 13378  002D06  C002  F0E8         	movff	?___xxtofl+1,adafruit@rh_code+1
 13379  002D0A  C003  F0E9         	movff	?___xxtofl+2,adafruit@rh_code+2
 13380  002D0E  C004  F0EA         	movff	?___xxtofl+3,adafruit@rh_code+3
 13381                           
 13382                           ;main.c: 401:     float rh = ((125 * rh_code) / 65536) - 6;
 13383  002D12  0E00               	movlw	0
 13384  002D14  6E2C               	movwf	i2___fldiv@a,c
 13385  002D16  0E00               	movlw	0
 13386  002D18  6E2D               	movwf	i2___fldiv@a+1,c
 13387  002D1A  0E80               	movlw	128
 13388  002D1C  6E2E               	movwf	i2___fldiv@a+2,c
 13389  002D1E  0E47               	movlw	71
 13390  002D20  6E2F               	movwf	i2___fldiv@a+3,c
 13391  002D22  0E00               	movlw	0
 13392  002D24  6E13               	movwf	i2___flmul@a,c
 13393  002D26  0E00               	movlw	0
 13394  002D28  6E14               	movwf	i2___flmul@a+1,c
 13395  002D2A  0EFA               	movlw	250
 13396  002D2C  6E15               	movwf	i2___flmul@a+2,c
 13397  002D2E  0E42               	movlw	66
 13398  002D30  6E16               	movwf	i2___flmul@a+3,c
 13399  002D32  C0E7  F00F         	movff	adafruit@rh_code,i2___flmul@b
 13400  002D36  C0E8  F010         	movff	adafruit@rh_code+1,i2___flmul@b+1
 13401  002D3A  C0E9  F011         	movff	adafruit@rh_code+2,i2___flmul@b+2
 13402  002D3E  C0EA  F012         	movff	adafruit@rh_code+3,i2___flmul@b+3
 13403  002D42  ECA9  F019         	call	i2___flmul	;wreg free
 13404  002D46  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 13405  002D4A  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 13406  002D4E  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 13407  002D52  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 13408  002D56  ECFF  F020         	call	i2___fldiv	;wreg free
 13409  002D5A  C028  F041         	movff	?i2___fldiv,i2___fladd@b
 13410  002D5E  C029  F042         	movff	?i2___fldiv+1,i2___fladd@b+1
 13411  002D62  C02A  F043         	movff	?i2___fldiv+2,i2___fladd@b+2
 13412  002D66  C02B  F044         	movff	?i2___fldiv+3,i2___fladd@b+3
 13413  002D6A  0E00               	movlw	0
 13414  002D6C  6E45               	movwf	i2___fladd@a,c
 13415  002D6E  0E00               	movlw	0
 13416  002D70  6E46               	movwf	i2___fladd@a+1,c
 13417  002D72  0EC0               	movlw	192
 13418  002D74  6E47               	movwf	i2___fladd@a+2,c
 13419  002D76  0EC0               	movlw	192
 13420  002D78  6E48               	movwf	i2___fladd@a+3,c
 13421  002D7A  ECD9  F01C         	call	i2___fladd	;wreg free
 13422  002D7E  C041  F0DF         	movff	?i2___fladd,adafruit@rh
 13423  002D82  C042  F0E0         	movff	?i2___fladd+1,adafruit@rh+1
 13424  002D86  C043  F0E1         	movff	?i2___fladd+2,adafruit@rh+2
 13425  002D8A  C044  F0E2         	movff	?i2___fladd+3,adafruit@rh+3
 13426                           
 13427                           ;main.c: 405:     displayLine[1] = 0x80;
 13428  002D8E  0E80               	movlw	128
 13429  002D90  0100               	movlb	0	; () banked
 13430  002D92  6FFA               	movwf	(_displayLine+1)& (0+255),b
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;main.c: 406:     i2c_WriteSerial(display_Addr, displayLine, 2);
 13434  002D94  0E00               	movlw	0
 13435  002D96  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13436  002D98  0E3C               	movlw	60
 13437  002D9A  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13438  002D9C  0EF9               	movlw	low _displayLine
 13439  002D9E  6E03               	movwf	i2i2c_WriteSerial@data,c
 13440  002DA0  0E00               	movlw	high _displayLine
 13441  002DA2  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13442  002DA4  0E00               	movlw	0
 13443  002DA6  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13444  002DA8  0E02               	movlw	2
 13445  002DAA  6E05               	movwf	i2i2c_WriteSerial@length,c
 13446  002DAC  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13447                           
 13448                           ;main.c: 407:     i2c_WriteSerial(display_Addr, humiText, 6);
 13449  002DB0  0E00               	movlw	0
 13450  002DB2  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13451  002DB4  0E3C               	movlw	60
 13452  002DB6  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13453  002DB8  0E1A               	movlw	low _humiText
 13454  002DBA  6E03               	movwf	i2i2c_WriteSerial@data,c
 13455  002DBC  0E10               	movlw	high _humiText
 13456  002DBE  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13457  002DC0  0E00               	movlw	0
 13458  002DC2  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13459  002DC4  0E06               	movlw	6
 13460  002DC6  6E05               	movwf	i2i2c_WriteSerial@length,c
 13461  002DC8  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13462                           
 13463                           ;main.c: 409:     displayLine[1] = 0x86;
 13464  002DCC  0E86               	movlw	134
 13465  002DCE  0100               	movlb	0	; () banked
 13466  002DD0  6FFA               	movwf	(_displayLine+1)& (0+255),b
 13467                           
 13468                           ; BSR set to: 0
 13469                           ;main.c: 410:     i2c_WriteSerial(display_Addr, displayLine, 2);
 13470  002DD2  0E00               	movlw	0
 13471  002DD4  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13472  002DD6  0E3C               	movlw	60
 13473  002DD8  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13474  002DDA  0EF9               	movlw	low _displayLine
 13475  002DDC  6E03               	movwf	i2i2c_WriteSerial@data,c
 13476  002DDE  0E00               	movlw	high _displayLine
 13477  002DE0  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13478  002DE2  0E00               	movlw	0
 13479  002DE4  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13480  002DE6  0E02               	movlw	2
 13481  002DE8  6E05               	movwf	i2i2c_WriteSerial@length,c
 13482  002DEA  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13483                           
 13484                           ;main.c: 412:     char outH[5];;main.c: 413:     sprintf(outH, "@%.1f", rh);
 13485  002DEE  0ED5               	movlw	low adafruit@outH
 13486  002DF0  0100               	movlb	0	; () banked
 13487  002DF2  6FBF               	movwf	sprintf@s& (0+255),b
 13488  002DF4  0E00               	movlw	high adafruit@outH
 13489  002DF6  6FC0               	movwf	(sprintf@s+1)& (0+255),b
 13490  002DF8  0ECE               	movlw	low STR_8
 13491  002DFA  6FC1               	movwf	sprintf@fmt& (0+255),b
 13492  002DFC  0E10               	movlw	high STR_8
 13493  002DFE  6FC2               	movwf	(sprintf@fmt+1)& (0+255),b
 13494  002E00  C0DF  F0C3         	movff	adafruit@rh,?_sprintf+4
 13495  002E04  C0E0  F0C4         	movff	adafruit@rh+1,?_sprintf+5
 13496  002E08  C0E1  F0C5         	movff	adafruit@rh+2,?_sprintf+6
 13497  002E0C  C0E2  F0C6         	movff	adafruit@rh+3,?_sprintf+7
 13498  002E10  ECAC  F032         	call	_sprintf	;wreg free
 13499                           
 13500                           ;main.c: 415:     i2c_WriteSerial(display_Addr, outH, sizeof(outH));
 13501  002E14  0E00               	movlw	0
 13502  002E16  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13503  002E18  0E3C               	movlw	60
 13504  002E1A  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13505  002E1C  0ED5               	movlw	low adafruit@outH
 13506  002E1E  6E03               	movwf	i2i2c_WriteSerial@data,c
 13507  002E20  0E00               	movlw	high adafruit@outH
 13508  002E22  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13509  002E24  0E00               	movlw	0
 13510  002E26  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13511  002E28  0E05               	movlw	5
 13512  002E2A  6E05               	movwf	i2i2c_WriteSerial@length,c
 13513  002E2C  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13514                           
 13515                           ;main.c: 417:     costum_char[1] = 0x01;
 13516  002E30  0E01               	movlw	1
 13517  002E32  0100               	movlb	0	; () banked
 13518  002E34  6FFE               	movwf	(_costum_char+1)& (0+255),b
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;main.c: 418:     i2c_WriteSerial(display_Addr, costum_char, 2);
 13522  002E36  0E00               	movlw	0
 13523  002E38  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13524  002E3A  0E3C               	movlw	60
 13525  002E3C  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13526  002E3E  0EFD               	movlw	low _costum_char
 13527  002E40  6E03               	movwf	i2i2c_WriteSerial@data,c
 13528  002E42  0E00               	movlw	high _costum_char
 13529  002E44  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13530  002E46  0E00               	movlw	0
 13531  002E48  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13532  002E4A  0E02               	movlw	2
 13533  002E4C  6E05               	movwf	i2i2c_WriteSerial@length,c
 13534  002E4E  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13535                           
 13536                           ;main.c: 422:     i2c_WriteSerial(adafruit_Addr, adafruit_temp_command, 1);
 13537  002E52  0E00               	movlw	0
 13538  002E54  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13539  002E56  0E40               	movlw	64
 13540  002E58  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13541  002E5A  0E35               	movlw	low _adafruit_temp_command
 13542  002E5C  6E03               	movwf	i2i2c_WriteSerial@data,c
 13543  002E5E  0E10               	movlw	high _adafruit_temp_command
 13544  002E60  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13545  002E62  0E00               	movlw	0
 13546  002E64  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13547  002E66  0E01               	movlw	1
 13548  002E68  6E05               	movwf	i2i2c_WriteSerial@length,c
 13549  002E6A  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13550                           
 13551                           ;main.c: 423:     i2c_ReadSerial(adafruit_Addr, tempRead, 2);
 13552  002E6E  0E00               	movlw	0
 13553  002E70  6E02               	movwf	i2i2c_ReadSerial@addr+1,c
 13554  002E72  0E40               	movlw	64
 13555  002E74  6E01               	movwf	i2i2c_ReadSerial@addr,c
 13556  002E76  0EF7               	movlw	low _tempRead
 13557  002E78  6E03               	movwf	i2i2c_ReadSerial@data,c
 13558  002E7A  0E00               	movlw	high _tempRead
 13559  002E7C  6E04               	movwf	i2i2c_ReadSerial@data+1,c
 13560  002E7E  0E00               	movlw	0
 13561  002E80  6E06               	movwf	i2i2c_ReadSerial@length+1,c
 13562  002E82  0E02               	movlw	2
 13563  002E84  6E05               	movwf	i2i2c_ReadSerial@length,c
 13564  002E86  EC8B  F02E         	call	i2_i2c_ReadSerial	;wreg free
 13565                           
 13566                           ;main.c: 425:     float temp = ((175.72 * ((tempRead[0] << 8) + tempRead[1])) / 65536) -
      +                           46.85;
 13567  002E8A  0E00               	movlw	0
 13568  002E8C  6E2C               	movwf	i2___fldiv@a,c
 13569  002E8E  0E00               	movlw	0
 13570  002E90  6E2D               	movwf	i2___fldiv@a+1,c
 13571  002E92  0E80               	movlw	128
 13572  002E94  6E2E               	movwf	i2___fldiv@a+2,c
 13573  002E96  0E47               	movlw	71
 13574  002E98  6E2F               	movwf	i2___fldiv@a+3,c
 13575  002E9A  0E52               	movlw	82
 13576  002E9C  6E13               	movwf	i2___flmul@a,c
 13577  002E9E  0EB8               	movlw	184
 13578  002EA0  6E14               	movwf	i2___flmul@a+1,c
 13579  002EA2  0E2F               	movlw	47
 13580  002EA4  6E15               	movwf	i2___flmul@a+2,c
 13581  002EA6  0E43               	movlw	67
 13582  002EA8  6E16               	movwf	i2___flmul@a+3,c
 13583  002EAA  C0F8  F0D1         	movff	_tempRead+1,??_adafruit
 13584  002EAE  0100               	movlb	0	; () banked
 13585  002EB0  6BD2               	clrf	(??_adafruit+1)& (0+255),b
 13586  002EB2  BFD1               	btfsc	??_adafruit& (0+255),7,b
 13587  002EB4  07D2               	decf	(??_adafruit+1)& (0+255),f,b
 13588  002EB6  51F7               	movf	_tempRead& (0+255),w,b
 13589  002EB8  6FD4               	movwf	(??_adafruit+3)& (0+255),b
 13590  002EBA  6BD3               	clrf	(??_adafruit+2)& (0+255),b
 13591  002EBC  51D1               	movf	??_adafruit& (0+255),w,b
 13592  002EBE  27D3               	addwf	(??_adafruit+2)& (0+255),f,b
 13593  002EC0  51D2               	movf	(??_adafruit+1)& (0+255),w,b
 13594  002EC2  23D4               	addwfc	(??_adafruit+3)& (0+255),f,b
 13595  002EC4  C0D3  F001         	movff	??_adafruit+2,___xxtofl@val
 13596  002EC8  C0D4  F002         	movff	??_adafruit+3,___xxtofl@val+1
 13597  002ECC  0E00               	movlw	0
 13598  002ECE  BE02               	btfsc	___xxtofl@val+1,7,c
 13599  002ED0  0EFF               	movlw	-1
 13600  002ED2  6E03               	movwf	___xxtofl@val+2,c
 13601  002ED4  6E04               	movwf	___xxtofl@val+3,c
 13602  002ED6  0E01               	movlw	1
 13603  002ED8  ECDD  F027         	call	___xxtofl
 13604  002EDC  C001  F00F         	movff	?___xxtofl,i2___flmul@b
 13605  002EE0  C002  F010         	movff	?___xxtofl+1,i2___flmul@b+1
 13606  002EE4  C003  F011         	movff	?___xxtofl+2,i2___flmul@b+2
 13607  002EE8  C004  F012         	movff	?___xxtofl+3,i2___flmul@b+3
 13608  002EEC  ECA9  F019         	call	i2___flmul	;wreg free
 13609  002EF0  C00F  F028         	movff	?i2___flmul,i2___fldiv@b
 13610  002EF4  C010  F029         	movff	?i2___flmul+1,i2___fldiv@b+1
 13611  002EF8  C011  F02A         	movff	?i2___flmul+2,i2___fldiv@b+2
 13612  002EFC  C012  F02B         	movff	?i2___flmul+3,i2___fldiv@b+3
 13613  002F00  ECFF  F020         	call	i2___fldiv	;wreg free
 13614  002F04  C028  F041         	movff	?i2___fldiv,i2___fladd@b
 13615  002F08  C029  F042         	movff	?i2___fldiv+1,i2___fladd@b+1
 13616  002F0C  C02A  F043         	movff	?i2___fldiv+2,i2___fladd@b+2
 13617  002F10  C02B  F044         	movff	?i2___fldiv+3,i2___fladd@b+3
 13618  002F14  0E66               	movlw	102
 13619  002F16  6E45               	movwf	i2___fladd@a,c
 13620  002F18  0E66               	movlw	102
 13621  002F1A  6E46               	movwf	i2___fladd@a+1,c
 13622  002F1C  0E3B               	movlw	59
 13623  002F1E  6E47               	movwf	i2___fladd@a+2,c
 13624  002F20  0EC2               	movlw	194
 13625  002F22  6E48               	movwf	i2___fladd@a+3,c
 13626  002F24  ECD9  F01C         	call	i2___fladd	;wreg free
 13627  002F28  C041  F0E3         	movff	?i2___fladd,adafruit@temp
 13628  002F2C  C042  F0E4         	movff	?i2___fladd+1,adafruit@temp+1
 13629  002F30  C043  F0E5         	movff	?i2___fladd+2,adafruit@temp+2
 13630  002F34  C044  F0E6         	movff	?i2___fladd+3,adafruit@temp+3
 13631                           
 13632                           ;main.c: 429:     displayLine[1] = 0xC0;
 13633  002F38  0EC0               	movlw	192
 13634  002F3A  0100               	movlb	0	; () banked
 13635  002F3C  6FFA               	movwf	(_displayLine+1)& (0+255),b
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;main.c: 430:     i2c_WriteSerial(display_Addr, displayLine, 2);
 13639  002F3E  0E00               	movlw	0
 13640  002F40  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13641  002F42  0E3C               	movlw	60
 13642  002F44  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13643  002F46  0EF9               	movlw	low _displayLine
 13644  002F48  6E03               	movwf	i2i2c_WriteSerial@data,c
 13645  002F4A  0E00               	movlw	high _displayLine
 13646  002F4C  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13647  002F4E  0E00               	movlw	0
 13648  002F50  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13649  002F52  0E02               	movlw	2
 13650  002F54  6E05               	movwf	i2i2c_WriteSerial@length,c
 13651  002F56  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13652                           
 13653                           ;main.c: 431:     i2c_WriteSerial(display_Addr, tempText, 6);
 13654  002F5A  0E00               	movlw	0
 13655  002F5C  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13656  002F5E  0E3C               	movlw	60
 13657  002F60  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13658  002F62  0E21               	movlw	low _tempText
 13659  002F64  6E03               	movwf	i2i2c_WriteSerial@data,c
 13660  002F66  0E10               	movlw	high _tempText
 13661  002F68  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13662  002F6A  0E00               	movlw	0
 13663  002F6C  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13664  002F6E  0E06               	movlw	6
 13665  002F70  6E05               	movwf	i2i2c_WriteSerial@length,c
 13666  002F72  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13667                           
 13668                           ;main.c: 433:     displayLine[1] = 0xC6;
 13669  002F76  0EC6               	movlw	198
 13670  002F78  0100               	movlb	0	; () banked
 13671  002F7A  6FFA               	movwf	(_displayLine+1)& (0+255),b
 13672                           
 13673                           ; BSR set to: 0
 13674                           ;main.c: 434:     i2c_WriteSerial(display_Addr, displayLine, 2);
 13675  002F7C  0E00               	movlw	0
 13676  002F7E  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13677  002F80  0E3C               	movlw	60
 13678  002F82  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13679  002F84  0EF9               	movlw	low _displayLine
 13680  002F86  6E03               	movwf	i2i2c_WriteSerial@data,c
 13681  002F88  0E00               	movlw	high _displayLine
 13682  002F8A  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13683  002F8C  0E00               	movlw	0
 13684  002F8E  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13685  002F90  0E02               	movlw	2
 13686  002F92  6E05               	movwf	i2i2c_WriteSerial@length,c
 13687  002F94  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13688                           
 13689                           ;main.c: 436:     char outT[5];;main.c: 437:     sprintf(outT, "@%.1f", temp);
 13690  002F98  0EDA               	movlw	low adafruit@outT
 13691  002F9A  0100               	movlb	0	; () banked
 13692  002F9C  6FBF               	movwf	sprintf@s& (0+255),b
 13693  002F9E  0E00               	movlw	high adafruit@outT
 13694  002FA0  6FC0               	movwf	(sprintf@s+1)& (0+255),b
 13695  002FA2  0ECE               	movlw	low STR_8
 13696  002FA4  6FC1               	movwf	sprintf@fmt& (0+255),b
 13697  002FA6  0E10               	movlw	high STR_8
 13698  002FA8  6FC2               	movwf	(sprintf@fmt+1)& (0+255),b
 13699  002FAA  C0E3  F0C3         	movff	adafruit@temp,?_sprintf+4
 13700  002FAE  C0E4  F0C4         	movff	adafruit@temp+1,?_sprintf+5
 13701  002FB2  C0E5  F0C5         	movff	adafruit@temp+2,?_sprintf+6
 13702  002FB6  C0E6  F0C6         	movff	adafruit@temp+3,?_sprintf+7
 13703  002FBA  ECAC  F032         	call	_sprintf	;wreg free
 13704                           
 13705                           ;main.c: 439:     i2c_WriteSerial(display_Addr, outT, sizeof(outT));
 13706  002FBE  0E00               	movlw	0
 13707  002FC0  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13708  002FC2  0E3C               	movlw	60
 13709  002FC4  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13710  002FC6  0EDA               	movlw	low adafruit@outT
 13711  002FC8  6E03               	movwf	i2i2c_WriteSerial@data,c
 13712  002FCA  0E00               	movlw	high adafruit@outT
 13713  002FCC  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13714  002FCE  0E00               	movlw	0
 13715  002FD0  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13716  002FD2  0E05               	movlw	5
 13717  002FD4  6E05               	movwf	i2i2c_WriteSerial@length,c
 13718  002FD6  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13719                           
 13720                           ;main.c: 441:     costum_char[1] = 0x00;
 13721  002FDA  0E00               	movlw	0
 13722  002FDC  0100               	movlb	0	; () banked
 13723  002FDE  6FFE               	movwf	(_costum_char+1)& (0+255),b
 13724                           
 13725                           ; BSR set to: 0
 13726                           ;main.c: 442:     i2c_WriteSerial(display_Addr, costum_char, 2);
 13727  002FE0  0E00               	movlw	0
 13728  002FE2  6E02               	movwf	i2i2c_WriteSerial@addr+1,c
 13729  002FE4  0E3C               	movlw	60
 13730  002FE6  6E01               	movwf	i2i2c_WriteSerial@addr,c
 13731  002FE8  0EFD               	movlw	low _costum_char
 13732  002FEA  6E03               	movwf	i2i2c_WriteSerial@data,c
 13733  002FEC  0E00               	movlw	high _costum_char
 13734  002FEE  6E04               	movwf	i2i2c_WriteSerial@data+1,c
 13735  002FF0  0E00               	movlw	0
 13736  002FF2  6E06               	movwf	i2i2c_WriteSerial@length+1,c
 13737  002FF4  0E02               	movlw	2
 13738  002FF6  6E05               	movwf	i2i2c_WriteSerial@length,c
 13739  002FF8  EC89  F030         	call	i2_i2c_WriteSerial	;wreg free
 13740  002FFC  0012               	return		;funcret
 13741  002FFE                     __end_of_adafruit:
 13742                           	opt callstack 0
 13743                           
 13744 ;; *************** function i2_i2c_WriteSerial *****************
 13745 ;; Defined at:
 13746 ;;		line 256 in file "main.c"
 13747 ;; Parameters:    Size  Location     Type
 13748 ;;  addr            2    0[COMRAM] int 
 13749 ;;  data            2    2[COMRAM] PTR unsigned char 
 13750 ;;		 -> readPos(2), logData(4), nextPos(4), verifyPos(3), 
 13751 ;;		 -> adafruit@outT(5), tempText(7), adafruit_temp_command(1), costum_char(2), 
 13752 ;;		 -> adafruit@outH(5), humiText(7), displayLine(2), adafruit_humi_command(1), 
 13753 ;;		 -> clearDisplay(2), degree_sign(11), procent_sign(11), displayInit(4), 
 13754 ;;  length          2    4[COMRAM] int 
 13755 ;; Auto vars:     Size  Location     Type
 13756 ;;  i2c_WriteSer    2    9[COMRAM] int 
 13757 ;;  i2c_WriteSer    1    8[COMRAM] unsigned char 
 13758 ;; Return value:  Size  Location     Type
 13759 ;;                  1    wreg      void 
 13760 ;; Registers used:
 13761 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 13762 ;; Tracked objects:
 13763 ;;		On entry : 0/0
 13764 ;;		On exit  : 0/0
 13765 ;;		Unchanged: 0/0
 13766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13767 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13768 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13770 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13771 ;;Total ram usage:       11 bytes
 13772 ;; Hardware stack levels used:    1
 13773 ;; This function calls:
 13774 ;;		Nothing
 13775 ;; This function is called by:
 13776 ;;		_adafruit
 13777 ;;		_dataLogWrite
 13778 ;;		_dataLogRead
 13779 ;; This function uses a non-reentrant model
 13780 ;;
 13781                           
 13782                           	psect	text71
 13783  006112                     __ptext71:
 13784                           	opt callstack 0
 13785  006112                     i2_i2c_WriteSerial:
 13786                           	opt callstack 16
 13787                           
 13788                           ;main.c: 261:     while((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 13789                           
 13790                           ;incstack = 0
 13791  006112  B4C7               	btfsc	4039,2,c	;volatile
 13792  006114  D7FE               	goto	i2_i2c_WriteSerial
 13793  006116  CFC5 F007          	movff	4037,??i2_i2c_WriteSerial	;volatile
 13794  00611A  0E1F               	movlw	31
 13795  00611C  1607               	andwf	??i2_i2c_WriteSerial,f,c
 13796  00611E  A4D8               	btfss	status,2,c
 13797  006120  D7F8               	goto	i2_i2c_WriteSerial
 13798                           
 13799                           ;main.c: 263:     SSP1CON2bits.SEN = 1;
 13800  006122  80C5               	bsf	4037,0,c	;volatile
 13801  006124                     i2l397:
 13802  006124  B0C5               	btfsc	4037,0,c	;volatile
 13803  006126  D7FE               	goto	i2l397
 13804                           
 13805                           ;main.c: 269:     uint8_t targetAddr = (addr << 1);
 13806  006128  5001               	movf	i2i2c_WriteSerial@addr,w,c
 13807  00612A  2401               	addwf	i2i2c_WriteSerial@addr,w,c
 13808  00612C  6E09               	movwf	i2i2c_WriteSerial@targetAddr,c
 13809                           
 13810                           ;main.c: 275:     SSP1BUF = targetAddr;
 13811  00612E  C009  FFC9         	movff	i2i2c_WriteSerial@targetAddr,4041	;volatile
 13812  006132                     i2l400:
 13813  006132  B4C7               	btfsc	4039,2,c	;volatile
 13814  006134  D7FE               	goto	i2l400
 13815                           
 13816                           ;main.c: 281:     for (int i = 0; i < length; i++) {
 13817  006136  0E00               	movlw	0
 13818  006138  6E0B               	movwf	i2i2c_WriteSerial@i+1,c
 13819  00613A  0E00               	movlw	0
 13820  00613C  6E0A               	movwf	i2i2c_WriteSerial@i,c
 13821  00613E  D01E               	goto	i2l7752
 13822  006140                     i2l404:
 13823                           
 13824                           ;main.c: 283:         if(SSP1CON2bits.ACKSTAT == 0) {
 13825  006140  BCC5               	btfsc	4037,6,c	;volatile
 13826  006142  D01A               	goto	i2u1080_40
 13827                           
 13828                           ;main.c: 288:             SSP1BUF = (uint8_t) data[i];
 13829  006144  500A               	movf	i2i2c_WriteSerial@i,w,c
 13830  006146  2403               	addwf	i2i2c_WriteSerial@data,w,c
 13831  006148  6E07               	movwf	??i2_i2c_WriteSerial& (0+255),c
 13832  00614A  500B               	movf	i2i2c_WriteSerial@i+1,w,c
 13833  00614C  2004               	addwfc	i2i2c_WriteSerial@data+1,w,c
 13834  00614E  6E08               	movwf	(??i2_i2c_WriteSerial+1)& (0+255),c
 13835  006150  C007  FFF6         	movff	??i2_i2c_WriteSerial,tblptrl
 13836  006154  C008  FFF7         	movff	??i2_i2c_WriteSerial+1,tblptrh
 13837  006158  0E00               	movlw	low (__smallconst shr (0+16))
 13838  00615A  6EF8               	movwf	tblptru,c
 13839  00615C  0E0F               	movlw	(high __ramtop+-1)
 13840  00615E  64F7               	cpfsgt	tblptrh,c
 13841  006160  D003               	bra	i2u1079_47
 13842  006162  0008               	tblrd		*
 13843  006164  50F5               	movf	tablat,w,c
 13844  006166  D005               	bra	i2u1079_40
 13845  006168                     i2u1079_47:
 13846  006168  CFF6 FFE1          	movff	tblptrl,fsr1l
 13847  00616C  CFF7 FFE2          	movff	tblptrh,fsr1h
 13848  006170  50E7               	movf	indf1,w,c
 13849  006172                     i2u1079_40:
 13850  006172  6EC9               	movwf	4041,c	;volatile
 13851  006174                     i2l406:
 13852  006174  B4C7               	btfsc	4039,2,c	;volatile
 13853  006176  D7FE               	goto	i2l406
 13854  006178                     i2u1080_40:
 13855                           
 13856                           ;main.c: 303:     }
 13857  006178  4A0A               	infsnz	i2i2c_WriteSerial@i,f,c
 13858  00617A  2A0B               	incf	i2i2c_WriteSerial@i+1,f,c
 13859  00617C                     i2l7752:
 13860  00617C  5005               	movf	i2i2c_WriteSerial@length,w,c
 13861  00617E  5C0A               	subwf	i2i2c_WriteSerial@i,w,c
 13862  006180  500B               	movf	i2i2c_WriteSerial@i+1,w,c
 13863  006182  0A80               	xorlw	128
 13864  006184  6E07               	movwf	??i2_i2c_WriteSerial& (0+255),c
 13865  006186  5006               	movf	i2i2c_WriteSerial@length+1,w,c
 13866  006188  0A80               	xorlw	128
 13867  00618A  5807               	subwfb	??i2_i2c_WriteSerial& (0+255),w,c
 13868  00618C  A0D8               	btfss	status,0,c
 13869  00618E  D7D8               	goto	i2l404
 13870                           
 13871                           ;main.c: 305:     SSP1CON2bits.PEN = 1;
 13872  006190  84C5               	bsf	4037,2,c	;volatile
 13873  006192                     i2l411:
 13874  006192  A4C5               	btfss	4037,2,c	;volatile
 13875  006194  0012               	return	
 13876  006196  D7FD               	goto	i2l411
 13877  006198                     __end_ofi2_i2c_WriteSerial:
 13878                           	opt callstack 0
 13879                           
 13880 ;; *************** function i2_i2c_ReadSerial *****************
 13881 ;; Defined at:
 13882 ;;		line 312 in file "main.c"
 13883 ;; Parameters:    Size  Location     Type
 13884 ;;  addr            2    0[COMRAM] int 
 13885 ;;  data            2    2[COMRAM] PTR unsigned char 
 13886 ;;		 -> readData(4), logPos(2), logStatus(2), tempRead(2), 
 13887 ;;		 -> humiRead(2), 
 13888 ;;  length          2    4[COMRAM] int 
 13889 ;; Auto vars:     Size  Location     Type
 13890 ;;  i2c_ReadSeri    2   11[COMRAM] int 
 13891 ;;  i2c_ReadSeri    1   10[COMRAM] unsigned char 
 13892 ;; Return value:  Size  Location     Type
 13893 ;;                  1    wreg      void 
 13894 ;; Registers used:
 13895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13896 ;; Tracked objects:
 13897 ;;		On entry : 0/0
 13898 ;;		On exit  : 0/0
 13899 ;;		Unchanged: 0/0
 13900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13901 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13902 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13903 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13904 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13905 ;;Total ram usage:       13 bytes
 13906 ;; Hardware stack levels used:    1
 13907 ;; This function calls:
 13908 ;;		Nothing
 13909 ;; This function is called by:
 13910 ;;		_adafruit
 13911 ;;		_dataLogRead
 13912 ;; This function uses a non-reentrant model
 13913 ;;
 13914                           
 13915                           	psect	text72
 13916  005D16                     __ptext72:
 13917                           	opt callstack 0
 13918  005D16                     i2_i2c_ReadSerial:
 13919                           	opt callstack 16
 13920                           
 13921                           ;main.c: 317:     while((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 13922                           
 13923                           ;incstack = 0
 13924  005D16  B4C7               	btfsc	4039,2,c	;volatile
 13925  005D18  D7FE               	goto	i2_i2c_ReadSerial
 13926  005D1A  CFC5 F007          	movff	4037,??i2_i2c_ReadSerial	;volatile
 13927  005D1E  0E1F               	movlw	31
 13928  005D20  1607               	andwf	??i2_i2c_ReadSerial,f,c
 13929  005D22  A4D8               	btfss	status,2,c
 13930  005D24  D7F8               	goto	i2_i2c_ReadSerial
 13931                           
 13932                           ;main.c: 319:     SSP1CON2bits.SEN = 1;
 13933  005D26  80C5               	bsf	4037,0,c	;volatile
 13934  005D28                     i2l420:
 13935  005D28  B0C5               	btfsc	4037,0,c	;volatile
 13936  005D2A  D7FE               	goto	i2l420
 13937                           
 13938                           ;main.c: 325:     uint8_t targetAddr = (addr << 1) + 1;
 13939  005D2C  5001               	movf	i2i2c_ReadSerial@addr,w,c
 13940  005D2E  0D02               	mullw	2
 13941  005D30  28F3               	incf	prodl,w,c
 13942  005D32  6E0B               	movwf	i2i2c_ReadSerial@targetAddr,c
 13943                           
 13944                           ;main.c: 331:     SSP1BUF = targetAddr;
 13945  005D34  C00B  FFC9         	movff	i2i2c_ReadSerial@targetAddr,4041	;volatile
 13946  005D38                     i2l423:
 13947  005D38  B4C7               	btfsc	4039,2,c	;volatile
 13948  005D3A  D7FE               	goto	i2l423
 13949                           
 13950                           ;main.c: 338:     if(SSP1CON2bits.ACKSTAT == 0) {
 13951  005D3C  BCC5               	btfsc	4037,6,c	;volatile
 13952  005D3E  0012               	return	
 13953                           
 13954                           ;main.c: 344:         for (int i = 0; i < length; i++) {
 13955  005D40  0E00               	movlw	0
 13956  005D42  6E0D               	movwf	i2i2c_ReadSerial@i+1,c
 13957  005D44  0E00               	movlw	0
 13958  005D46  6E0C               	movwf	i2i2c_ReadSerial@i,c
 13959  005D48  D026               	goto	i2l7772
 13960  005D4A                     i2l428:
 13961                           
 13962                           ;main.c: 345:             SSP1CON2bits.RCEN = 1;
 13963  005D4A  86C5               	bsf	4037,3,c	;volatile
 13964  005D4C                     i2l429:
 13965  005D4C  B6C5               	btfsc	4037,3,c	;volatile
 13966  005D4E  D7FE               	goto	i2l429
 13967                           
 13968                           ;main.c: 351:             data[i] = SSP1BUF;
 13969  005D50  500C               	movf	i2i2c_ReadSerial@i,w,c
 13970  005D52  2403               	addwf	i2i2c_ReadSerial@data,w,c
 13971  005D54  6ED9               	movwf	fsr2l,c
 13972  005D56  500D               	movf	i2i2c_ReadSerial@i+1,w,c
 13973  005D58  2004               	addwfc	i2i2c_ReadSerial@data+1,w,c
 13974  005D5A  6EDA               	movwf	fsr2h,c
 13975  005D5C  CFC9 FFDF          	movff	4041,indf2	;volatile
 13976                           
 13977                           ;main.c: 356:             if (i != (length - 1)) {
 13978  005D60  0EFF               	movlw	255
 13979  005D62  6E07               	movwf	??i2_i2c_ReadSerial& (0+255),c
 13980  005D64  0EFF               	movlw	255
 13981  005D66  6E08               	movwf	(??i2_i2c_ReadSerial+1)& (0+255),c
 13982  005D68  C005  F009         	movff	i2i2c_ReadSerial@length,??i2_i2c_ReadSerial+2
 13983  005D6C  C006  F00A         	movff	i2i2c_ReadSerial@length+1,??i2_i2c_ReadSerial+3
 13984  005D70  5007               	movf	??i2_i2c_ReadSerial,w,c
 13985  005D72  2609               	addwf	??i2_i2c_ReadSerial+2,f,c
 13986  005D74  5008               	movf	??i2_i2c_ReadSerial+1,w,c
 13987  005D76  220A               	addwfc	??i2_i2c_ReadSerial+3,f,c
 13988  005D78  500C               	movf	i2i2c_ReadSerial@i,w,c
 13989  005D7A  1809               	xorwf	??i2_i2c_ReadSerial+2,w,c
 13990  005D7C  E104               	bnz	i2u1089_40
 13991  005D7E  500D               	movf	i2i2c_ReadSerial@i+1,w,c
 13992  005D80  180A               	xorwf	??i2_i2c_ReadSerial+3,w,c
 13993  005D82  B4D8               	btfsc	status,2,c
 13994  005D84  D002               	goto	i2l432
 13995  005D86                     i2u1089_40:
 13996                           
 13997                           ;main.c: 357:                 SSP1CON2bits.ACKDT = 0;
 13998  005D86  9AC5               	bcf	4037,5,c	;volatile
 13999                           
 14000                           ;main.c: 361:             } else {
 14001  005D88  D001               	goto	i2l433
 14002  005D8A                     i2l432:
 14003                           
 14004                           ;main.c: 362:                 SSP1CON2bits.ACKDT = 1;
 14005  005D8A  8AC5               	bsf	4037,5,c	;volatile
 14006  005D8C                     i2l433:
 14007                           
 14008                           ;main.c: 368:             SSP1CON2bits.ACKEN = 1;
 14009  005D8C  88C5               	bsf	4037,4,c	;volatile
 14010  005D8E                     i2l434:
 14011  005D8E  B8C5               	btfsc	4037,4,c	;volatile
 14012  005D90  D7FE               	goto	i2l434
 14013                           
 14014                           ;main.c: 373:         }
 14015  005D92  4A0C               	infsnz	i2i2c_ReadSerial@i,f,c
 14016  005D94  2A0D               	incf	i2i2c_ReadSerial@i+1,f,c
 14017  005D96                     i2l7772:
 14018  005D96  5005               	movf	i2i2c_ReadSerial@length,w,c
 14019  005D98  5C0C               	subwf	i2i2c_ReadSerial@i,w,c
 14020  005D9A  500D               	movf	i2i2c_ReadSerial@i+1,w,c
 14021  005D9C  0A80               	xorlw	128
 14022  005D9E  6E07               	movwf	??i2_i2c_ReadSerial& (0+255),c
 14023  005DA0  5006               	movf	i2i2c_ReadSerial@length+1,w,c
 14024  005DA2  0A80               	xorlw	128
 14025  005DA4  5807               	subwfb	??i2_i2c_ReadSerial& (0+255),w,c
 14026  005DA6  A0D8               	btfss	status,0,c
 14027  005DA8  D7D0               	goto	i2l428
 14028                           
 14029                           ;main.c: 375:         SSP1CON2bits.PEN = 1;
 14030  005DAA  84C5               	bsf	4037,2,c	;volatile
 14031  005DAC                     i2l438:
 14032  005DAC  A4C5               	btfss	4037,2,c	;volatile
 14033  005DAE  0012               	return	
 14034  005DB0  D7FD               	goto	i2l438
 14035  005DB2                     __end_ofi2_i2c_ReadSerial:
 14036                           	opt callstack 0
 14037                           
 14038 ;; *************** function _sprintf *****************
 14039 ;; Defined at:
 14040 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
 14041 ;; Parameters:    Size  Location     Type
 14042 ;;  s               2   95[BANK0 ] PTR unsigned char 
 14043 ;;		 -> dataLogRead@readOutT(5), adafruit@outT(5), adafruit@outH(5), 
 14044 ;;  fmt             2   97[BANK0 ] PTR const unsigned char 
 14045 ;;		 -> STR_14(5), STR_12(5), STR_9(6), STR_8(6), 
 14046 ;; Auto vars:     Size  Location     Type
 14047 ;;  f               6  107[BANK0 ] struct _IO_FILE
 14048 ;;  ap              2  105[BANK0 ] PTR void [1]
 14049 ;;		 -> ?_printf(2), ?_sprintf(2), 
 14050 ;;  ret             2    0        int 
 14051 ;; Return value:  Size  Location     Type
 14052 ;;                  2   95[BANK0 ] int 
 14053 ;; Registers used:
 14054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14055 ;; Tracked objects:
 14056 ;;		On entry : 0/0
 14057 ;;		On exit  : 0/0
 14058 ;;		Unchanged: 0/0
 14059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14060 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14061 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14063 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14064 ;;Total ram usage:       18 bytes
 14065 ;; Hardware stack levels used:    1
 14066 ;; Hardware stack levels required when called:    8
 14067 ;; This function calls:
 14068 ;;		i2_vfprintf
 14069 ;; This function is called by:
 14070 ;;		_adafruit
 14071 ;;		_dataLogRead
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075                           	psect	text73
 14076  006558                     __ptext73:
 14077                           	opt callstack 0
 14078  006558                     _sprintf:
 14079                           	opt callstack 8
 14080                           
 14081                           ;incstack = 0
 14082  006558  0EC3               	movlw	low (?_sprintf+4)
 14083  00655A  0100               	movlb	0	; () banked
 14084  00655C  6FC9               	movwf	sprintf@ap& (0+255),b
 14085  00655E  0E00               	movlw	high (?_sprintf+4)
 14086  006560  6FCA               	movwf	(sprintf@ap+1)& (0+255),b
 14087  006562  C0BF  F0CB         	movff	sprintf@s,sprintf@f
 14088  006566  C0C0  F0CC         	movff	sprintf@s+1,sprintf@f+1
 14089                           
 14090                           ; BSR set to: 0
 14091  00656A  0E00               	movlw	0
 14092  00656C  6FCE               	movwf	(sprintf@f+3)& (0+255),b
 14093  00656E  0E00               	movlw	0
 14094  006570  6FCD               	movwf	(sprintf@f+2)& (0+255),b
 14095                           
 14096                           ; BSR set to: 0
 14097  006572  0E00               	movlw	0
 14098  006574  6FD0               	movwf	(sprintf@f+5)& (0+255),b
 14099  006576  0E00               	movlw	0
 14100  006578  6FCF               	movwf	(sprintf@f+4)& (0+255),b
 14101                           
 14102                           ; BSR set to: 0
 14103  00657A  0ECB               	movlw	low sprintf@f
 14104  00657C  6FB7               	movwf	i2vfprintf@fp& (0+255),b
 14105  00657E  0E00               	movlw	high sprintf@f
 14106  006580  6FB8               	movwf	(i2vfprintf@fp+1)& (0+255),b
 14107  006582  C0C1  F0B9         	movff	sprintf@fmt,i2vfprintf@fmt
 14108  006586  C0C2  F0BA         	movff	sprintf@fmt+1,i2vfprintf@fmt+1
 14109  00658A  0EC9               	movlw	low sprintf@ap
 14110  00658C  6FBB               	movwf	i2vfprintf@ap& (0+255),b
 14111  00658E  0E00               	movlw	high sprintf@ap
 14112  006590  6FBC               	movwf	(i2vfprintf@ap+1)& (0+255),b
 14113  006592  ECFB  F031         	call	i2_vfprintf	;wreg free
 14114  006596  0100               	movlb	0	; () banked
 14115  006598  51CD               	movf	(sprintf@f+2)& (0+255),w,b
 14116  00659A  25BF               	addwf	sprintf@s& (0+255),w,b
 14117  00659C  6ED9               	movwf	fsr2l,c
 14118  00659E  51CE               	movf	(sprintf@f+3)& (0+255),w,b
 14119  0065A0  21C0               	addwfc	(sprintf@s+1)& (0+255),w,b
 14120  0065A2  6EDA               	movwf	fsr2h,c
 14121  0065A4  0E00               	movlw	0
 14122  0065A6  6EDF               	movwf	indf2,c
 14123                           
 14124                           ; BSR set to: 0
 14125  0065A8  0012               	return		;funcret
 14126  0065AA                     __end_of_sprintf:
 14127                           	opt callstack 0
 14128                           
 14129 ;; *************** function i2_vfprintf *****************
 14130 ;; Defined at:
 14131 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14132 ;; Parameters:    Size  Location     Type
 14133 ;;  fp              2   87[BANK0 ] PTR struct _IO_FILE
 14134 ;;		 -> sprintf@f(6), NULL(0), 
 14135 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
 14136 ;;		 -> STR_15(21), STR_14(5), STR_13(21), STR_12(5), 
 14137 ;;		 -> STR_11(39), STR_10(10), STR_9(6), STR_8(6), 
 14138 ;;		 -> STR_7(31), STR_6(14), STR_3(15), 
 14139 ;;  ap              2   91[BANK0 ] PTR PTR void 
 14140 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 14141 ;; Auto vars:     Size  Location     Type
 14142 ;;  vfprintf        2   93[BANK0 ] PTR unsigned char 
 14143 ;;		 -> STR_15(21), STR_14(5), STR_13(21), STR_12(5), 
 14144 ;;		 -> STR_11(39), STR_10(10), STR_9(6), STR_8(6), 
 14145 ;;		 -> STR_7(31), STR_6(14), STR_3(15), 
 14146 ;; Return value:  Size  Location     Type
 14147 ;;                  2   87[BANK0 ] int 
 14148 ;; Registers used:
 14149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14150 ;; Tracked objects:
 14151 ;;		On entry : 0/0
 14152 ;;		On exit  : 0/0
 14153 ;;		Unchanged: 0/0
 14154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14155 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14158 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14159 ;;Total ram usage:        8 bytes
 14160 ;; Hardware stack levels used:    1
 14161 ;; Hardware stack levels required when called:    7
 14162 ;; This function calls:
 14163 ;;		i2_vfpfcnvrt
 14164 ;; This function is called by:
 14165 ;;		_sprintf
 14166 ;;		i2_printf
 14167 ;; This function uses a non-reentrant model
 14168 ;;
 14169                           
 14170                           	psect	text74
 14171  0063F6                     __ptext74:
 14172                           	opt callstack 0
 14173  0063F6                     i2_vfprintf:
 14174                           	opt callstack 8
 14175                           
 14176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;incstack = 0
 14180  0063F6  C0B9  F0BD         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 14181  0063FA  C0BA  F0BE         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 14182                           
 14183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 14184  0063FE  0E00               	movlw	0
 14185  006400  0101               	movlb	1	; () banked
 14186  006402  6FA6               	movwf	(_nout+1)& (0+255),b
 14187  006404  0E00               	movlw	0
 14188  006406  6FA5               	movwf	_nout& (0+255),b
 14189                           
 14190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 14191  006408  D017               	goto	i2l7580
 14192  00640A                     i2l7578:
 14193                           
 14194                           ; BSR set to: 1
 14195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 14196  00640A  C0B7  F09F         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 14197  00640E  C0B8  F0A0         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 14198  006412  0EBD               	movlw	low i2vfprintf@cfmt
 14199  006414  0100               	movlb	0	; () banked
 14200  006416  6FA1               	movwf	i2vfpfcnvrt@fmt& (0+255),b
 14201  006418  0E00               	movlw	high i2vfprintf@cfmt
 14202  00641A  6FA2               	movwf	(i2vfpfcnvrt@fmt+1)& (0+255),b
 14203  00641C  C0BB  F0A3         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 14204  006420  C0BC  F0A4         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 14205  006424  EC22  F014         	call	i2_vfpfcnvrt	;wreg free
 14206  006428  0100               	movlb	0	; () banked
 14207  00642A  519F               	movf	?i2_vfpfcnvrt& (0+255),w,b
 14208  00642C  0101               	movlb	1	; () banked
 14209  00642E  27A5               	addwf	_nout& (0+255),f,b
 14210  006430  0100               	movlb	0	; () banked
 14211  006432  51A0               	movf	(?i2_vfpfcnvrt+1)& (0+255),w,b
 14212  006434  0101               	movlb	1	; () banked
 14213  006436  23A6               	addwfc	(_nout+1)& (0+255),f,b
 14214  006438                     i2l7580:
 14215                           
 14216                           ; BSR set to: 1
 14217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 14218  006438  C0BD  FFF6         	movff	i2vfprintf@cfmt,tblptrl
 14219  00643C  C0BE  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
 14220  006440                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14221  006440  6AF8               	clrf	tblptru,c
 14222  006442                     	endif
 14223  006442                     	if	0	;tblptru may be non-zero
 14224  006442                     	endif
 14225  006442  0008               	tblrd		*
 14226  006444  50F5               	movf	tablat,w,c
 14227  006446  0900               	iorlw	0
 14228  006448  A4D8               	btfss	status,2,c
 14229  00644A  D7DF               	goto	i2l7578
 14230                           
 14231                           ; BSR set to: 1
 14232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 14233  00644C  C1A5  F0B7         	movff	_nout,?i2_vfprintf
 14234  006450  C1A6  F0B8         	movff	_nout+1,?i2_vfprintf+1
 14235                           
 14236                           ; BSR set to: 1
 14237  006454  0012               	return		;funcret
 14238  006456                     __end_ofi2_vfprintf:
 14239                           	opt callstack 0
 14240                           
 14241 ;; *************** function i2_vfpfcnvrt *****************
 14242 ;; Defined at:
 14243 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14244 ;; Parameters:    Size  Location     Type
 14245 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
 14246 ;;		 -> sprintf@f(6), NULL(0), 
 14247 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
 14248 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 14249 ;;  ap              2   67[BANK0 ] PTR PTR void 
 14250 ;;		 -> i2printf@ap(2), printf@ap(2), sprintf@ap(2), 
 14251 ;; Auto vars:     Size  Location     Type
 14252 ;;  vfpfcnvrt       8    0        unsigned long long 
 14253 ;;  vfpfcnvrt       8    0        long long 
 14254 ;;  vfpfcnvrt       4   79[BANK0 ] long long 
 14255 ;;  vfpfcnvrt       3   83[BANK0 ] unsigned char [3]
 14256 ;;  vfpfcnvrt       3    0        PTR void 
 14257 ;;  vfpfcnvrt       2   73[BANK0 ] PTR unsigned char 
 14258 ;;		 -> ?_printf(2), ?_sprintf(2), dataLogRead@readOutT(5), readData(4), 
 14259 ;;		 -> tempRead(2), adafruit@rh_code(4), stringArry(64), 
 14260 ;;  vfpfcnvrt       2    0        int 
 14261 ;;  vfpfcnvrt       2    0        int 
 14262 ;;  vfpfcnvrt       1   86[BANK0 ] unsigned char 
 14263 ;; Return value:  Size  Location     Type
 14264 ;;                  2   63[BANK0 ] int 
 14265 ;; Registers used:
 14266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14267 ;; Tracked objects:
 14268 ;;		On entry : 0/0
 14269 ;;		On exit  : 0/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14272 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14273 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14274 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14275 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14276 ;;Total ram usage:       24 bytes
 14277 ;; Hardware stack levels used:    1
 14278 ;; Hardware stack levels required when called:    6
 14279 ;; This function calls:
 14280 ;;		i2_atoi
 14281 ;;		i2_efgtoa
 14282 ;;		i2_fputc
 14283 ;;		i2_isdigit
 14284 ;;		i2_isupper
 14285 ;;		i2_stoa
 14286 ;;		i2_strncmp
 14287 ;;		i2_tolower
 14288 ;; This function is called by:
 14289 ;;		i2_vfprintf
 14290 ;; This function uses a non-reentrant model
 14291 ;;
 14292                           
 14293                           	psect	text75
 14294  002844                     __ptext75:
 14295                           	opt callstack 0
 14296  002844                     i2_vfpfcnvrt:
 14297                           	opt callstack 8
 14298                           
 14299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 14300                           
 14301                           ; BSR set to: 1
 14302                           ;incstack = 0
 14303  002844  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14304  002848  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14305  00284C  CFDE FFF6          	movff	postinc2,tblptrl
 14306  002850  CFDD FFF7          	movff	postdec2,tblptrh
 14307  002854                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14308  002854  6AF8               	clrf	tblptru,c
 14309  002856                     	endif
 14310  002856                     	if	0	;tblptru may be non-zero
 14311  002856                     	endif
 14312  002856  0008               	tblrd		*
 14313  002858  50F5               	movf	tablat,w,c
 14314  00285A  0A25               	xorlw	37
 14315  00285C  A4D8               	btfss	status,2,c
 14316  00285E  D1F4               	goto	i2l7164
 14317                           
 14318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 14319  002860  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14320  002864  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14321  002868  2ADE               	incf	postinc2,f,c
 14322  00286A  0E00               	movlw	0
 14323  00286C  22DD               	addwfc	postdec2,f,c
 14324                           
 14325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 14326  00286E  0E00               	movlw	0
 14327  002870  0101               	movlb	1	; () banked
 14328  002872  6FA8               	movwf	(_width+1)& (0+255),b
 14329  002874  0E00               	movlw	0
 14330  002876  6FA7               	movwf	_width& (0+255),b
 14331  002878  C1A7  F1AB         	movff	_width,_flags
 14332  00287C  C1A8  F1AC         	movff	_width+1,_flags+1
 14333                           
 14334                           ; BSR set to: 1
 14335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 14336  002880  69A9               	setf	_prec& (0+255),b
 14337  002882  69AA               	setf	(_prec+1)& (0+255),b
 14338                           
 14339                           ; BSR set to: 1
 14340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
 14341  002884  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14342  002888  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14343  00288C  CFDE FFF6          	movff	postinc2,tblptrl
 14344  002890  CFDD FFF7          	movff	postdec2,tblptrh
 14345  002894                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14346  002894  6AF8               	clrf	tblptru,c
 14347  002896                     	endif
 14348  002896                     	if	0	;tblptru may be non-zero
 14349  002896                     	endif
 14350  002896  0008               	tblrd		*
 14351  002898  50F5               	movf	tablat,w,c
 14352  00289A  0A2E               	xorlw	46
 14353  00289C  A4D8               	btfss	status,2,c
 14354  00289E  D070               	goto	i2u965_40
 14355                           
 14356                           ; BSR set to: 1
 14357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
 14358  0028A0  0E00               	movlw	0
 14359  0028A2  6FAA               	movwf	(_prec+1)& (0+255),b
 14360  0028A4  0E00               	movlw	0
 14361  0028A6  6FA9               	movwf	_prec& (0+255),b
 14362                           
 14363                           ; BSR set to: 1
 14364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
 14365  0028A8  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14366  0028AC  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14367  0028B0  2ADE               	incf	postinc2,f,c
 14368  0028B2  0E00               	movlw	0
 14369  0028B4  22DD               	addwfc	postdec2,f,c
 14370                           
 14371                           ; BSR set to: 1
 14372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
 14373  0028B6  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14374  0028BA  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14375  0028BE  CFDE FFF6          	movff	postinc2,tblptrl
 14376  0028C2  CFDD FFF7          	movff	postdec2,tblptrh
 14377  0028C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14378  0028C6  6AF8               	clrf	tblptru,c
 14379  0028C8                     	endif
 14380  0028C8                     	if	0	;tblptru may be non-zero
 14381  0028C8                     	endif
 14382  0028C8  0008               	tblrd		*
 14383  0028CA  50F5               	movf	tablat,w,c
 14384  0028CC  0A2A               	xorlw	42
 14385  0028CE  A4D8               	btfss	status,2,c
 14386  0028D0  D01C               	goto	i2l7092
 14387                           
 14388                           ; BSR set to: 1
 14389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
 14390  0028D2  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14391  0028D6  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14392  0028DA  2ADE               	incf	postinc2,f,c
 14393  0028DC  0E00               	movlw	0
 14394  0028DE  22DD               	addwfc	postdec2,f,c
 14395                           
 14396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 14397  0028E0  C0A3  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 14398  0028E4  C0A4  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 14399  0028E8  CFDF F0A5          	movff	indf2,??i2_vfpfcnvrt
 14400  0028EC  0E02               	movlw	2
 14401  0028EE  26DE               	addwf	postinc2,f,c
 14402  0028F0  CFDF F0A6          	movff	indf2,??i2_vfpfcnvrt+1
 14403  0028F4  0E00               	movlw	0
 14404  0028F6  22DD               	addwfc	postdec2,f,c
 14405  0028F8  C0A5  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 14406  0028FC  C0A6  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 14407  002900  CFDE F1A9          	movff	postinc2,_prec
 14408  002904  CFDD F1AA          	movff	postdec2,_prec+1
 14409                           
 14410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
 14411  002908  D03B               	goto	i2u965_40
 14412  00290A                     i2l7092:
 14413                           
 14414                           ; BSR set to: 1
 14415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
 14416  00290A  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14417  00290E  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14418  002912  CFDE F008          	movff	postinc2,i2atoi@s
 14419  002916  CFDD F009          	movff	postdec2,i2atoi@s+1
 14420  00291A  EC38  F027         	call	i2_atoi	;wreg free
 14421  00291E  C008  F1A9         	movff	?i2_atoi,_prec
 14422  002922  C009  F1AA         	movff	?i2_atoi+1,_prec+1
 14423                           
 14424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 14425  002926  D007               	goto	i2l7096
 14426  002928                     i2l7094:
 14427                           
 14428                           ; BSR set to: 0
 14429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
 14430  002928  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14431  00292C  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14432  002930  2ADE               	incf	postinc2,f,c
 14433  002932  0E00               	movlw	0
 14434  002934  22DD               	addwfc	postdec2,f,c
 14435  002936                     i2l7096:
 14436  002936  0ED0               	movlw	208
 14437  002938  0100               	movlb	0	; () banked
 14438  00293A  6FA5               	movwf	??i2_vfpfcnvrt& (0+255),b
 14439  00293C  0EFF               	movlw	255
 14440  00293E  6FA6               	movwf	(??i2_vfpfcnvrt+1)& (0+255),b
 14441  002940  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14442  002944  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14443  002948  CFDE FFF6          	movff	postinc2,tblptrl
 14444  00294C  CFDD FFF7          	movff	postdec2,tblptrh
 14445  002950                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14446  002950  6AF8               	clrf	tblptru,c
 14447  002952                     	endif
 14448  002952                     	if	0	;tblptru may be non-zero
 14449  002952                     	endif
 14450  002952  0008               	tblrd		*
 14451  002954  50F5               	movf	tablat,w,c
 14452  002956  6FA7               	movwf	(??i2_vfpfcnvrt+2)& (0+255),b
 14453  002958  6BA8               	clrf	(??i2_vfpfcnvrt+3)& (0+255),b
 14454  00295A  51A5               	movf	??i2_vfpfcnvrt& (0+255),w,b
 14455  00295C  27A7               	addwf	(??i2_vfpfcnvrt+2)& (0+255),f,b
 14456  00295E  51A6               	movf	(??i2_vfpfcnvrt+1)& (0+255),w,b
 14457  002960  23A8               	addwfc	(??i2_vfpfcnvrt+3)& (0+255),f,b
 14458  002962  51A8               	movf	(??i2_vfpfcnvrt+3)& (0+255),w,b
 14459  002964  E106               	bnz	i2u963_40
 14460  002966  0E0A               	movlw	10
 14461  002968  5DA7               	subwf	(??i2_vfpfcnvrt+2)& (0+255),w,b
 14462  00296A  B0D8               	btfsc	status,0,c
 14463  00296C  D002               	goto	i2u963_40
 14464  00296E  0E01               	movlw	1
 14465  002970  D001               	goto	i2u964_40
 14466  002972                     i2u963_40:
 14467  002972  0E00               	movlw	0
 14468  002974                     i2u964_40:
 14469  002974  6FAB               	movwf	i2_vfpfcnvrt$1629& (0+255),b
 14470  002976  6BAC               	clrf	(i2_vfpfcnvrt$1629+1)& (0+255),b
 14471                           
 14472                           ; BSR set to: 0
 14473  002978  51AB               	movf	i2_vfpfcnvrt$1629& (0+255),w,b
 14474  00297A  11AC               	iorwf	(i2_vfpfcnvrt$1629+1)& (0+255),w,b
 14475  00297C  A4D8               	btfss	status,2,c
 14476  00297E  D7D4               	goto	i2l7094
 14477  002980                     i2u965_40:
 14478                           
 14479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
 14480  002980  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14481  002984  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14482  002988  CFDE FFF6          	movff	postinc2,tblptrl
 14483  00298C  CFDD FFF7          	movff	postdec2,tblptrh
 14484  002990                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14485  002990  6AF8               	clrf	tblptru,c
 14486  002992                     	endif
 14487  002992                     	if	0	;tblptru may be non-zero
 14488  002992                     	endif
 14489  002992  0008               	tblrd		*
 14490  002994  50F5               	movf	tablat,w,c
 14491  002996  6E07               	movwf	i2tolower@c,c
 14492  002998  6A08               	clrf	i2tolower@c+1,c
 14493  00299A  ECFC  F032         	call	i2_tolower	;wreg free
 14494  00299E  5007               	movf	?i2_tolower,w,c
 14495  0029A0  0100               	movlb	0	; () banked
 14496  0029A2  6FB3               	movwf	i2vfpfcnvrt@ct& (0+255),b
 14497                           
 14498                           ; BSR set to: 0
 14499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
 14500  0029A4  51B3               	movf	i2vfpfcnvrt@ct& (0+255),w,b
 14501  0029A6  B4D8               	btfsc	status,2,c
 14502  0029A8  D037               	goto	i2l7112
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
 14506  0029AA  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14507  0029AE  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14508  0029B2  CFDE F0A5          	movff	postinc2,??i2_vfpfcnvrt
 14509  0029B6  CFDD F0A6          	movff	postdec2,??i2_vfpfcnvrt+1
 14510  0029BA  0E01               	movlw	1
 14511  0029BC  27A5               	addwf	??i2_vfpfcnvrt& (0+255),f,b
 14512  0029BE  0E00               	movlw	0
 14513  0029C0  23A6               	addwfc	(??i2_vfpfcnvrt+1)& (0+255),f,b
 14514  0029C2  C0A5  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 14515  0029C6  C0A6  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 14516  0029CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14517  0029CA  6AF8               	clrf	tblptru,c
 14518  0029CC                     	endif
 14519  0029CC                     	if	0	;tblptru may be non-zero
 14520  0029CC                     	endif
 14521  0029CC  0008               	tblrd		*
 14522  0029CE  50F5               	movf	tablat,w,c
 14523  0029D0  6E07               	movwf	i2tolower@c,c
 14524  0029D2  6A08               	clrf	i2tolower@c+1,c
 14525  0029D4  ECFC  F032         	call	i2_tolower	;wreg free
 14526  0029D8  5007               	movf	?i2_tolower,w,c
 14527  0029DA  0100               	movlb	0	; () banked
 14528  0029DC  6FB4               	movwf	(i2vfpfcnvrt@ct+1)& (0+255),b
 14529                           
 14530                           ; BSR set to: 0
 14531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
 14532  0029DE  51B4               	movf	(i2vfpfcnvrt@ct+1)& (0+255),w,b
 14533  0029E0  B4D8               	btfsc	status,2,c
 14534  0029E2  D01A               	goto	i2l7112
 14535                           
 14536                           ; BSR set to: 0
 14537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
 14538  0029E4  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14539  0029E8  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14540  0029EC  CFDE F0A5          	movff	postinc2,??i2_vfpfcnvrt
 14541  0029F0  CFDD F0A6          	movff	postdec2,??i2_vfpfcnvrt+1
 14542  0029F4  0E02               	movlw	2
 14543  0029F6  27A5               	addwf	??i2_vfpfcnvrt& (0+255),f,b
 14544  0029F8  0E00               	movlw	0
 14545  0029FA  23A6               	addwfc	(??i2_vfpfcnvrt+1)& (0+255),f,b
 14546  0029FC  C0A5  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 14547  002A00  C0A6  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 14548  002A04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14549  002A04  6AF8               	clrf	tblptru,c
 14550  002A06                     	endif
 14551  002A06                     	if	0	;tblptru may be non-zero
 14552  002A06                     	endif
 14553  002A06  0008               	tblrd		*
 14554  002A08  50F5               	movf	tablat,w,c
 14555  002A0A  6E07               	movwf	i2tolower@c,c
 14556  002A0C  6A08               	clrf	i2tolower@c+1,c
 14557  002A0E  ECFC  F032         	call	i2_tolower	;wreg free
 14558  002A12  5007               	movf	?i2_tolower,w,c
 14559  002A14  0100               	movlb	0	; () banked
 14560  002A16  6FB5               	movwf	(i2vfpfcnvrt@ct+2)& (0+255),b
 14561  002A18                     i2l7112:
 14562                           
 14563                           ; BSR set to: 0
 14564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 14565  002A18  0E66               	movlw	102
 14566  002A1A  19B3               	xorwf	i2vfpfcnvrt@ct& (0+255),w,b
 14567  002A1C  A4D8               	btfss	status,2,c
 14568  002A1E  D040               	goto	i2l7124
 14569                           
 14570                           ; BSR set to: 0
 14571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 14572  002A20  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14573  002A24  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14574  002A28  CFDE FFF6          	movff	postinc2,tblptrl
 14575  002A2C  CFDD FFF7          	movff	postdec2,tblptrh
 14576  002A30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14577  002A30  6AF8               	clrf	tblptru,c
 14578  002A32                     	endif
 14579  002A32                     	if	0	;tblptru may be non-zero
 14580  002A32                     	endif
 14581  002A32  0008               	tblrd		*
 14582  002A34  CFF5 F0B6          	movff	tablat,i2vfpfcnvrt@c
 14583                           
 14584                           ; BSR set to: 0
 14585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 14586  002A38  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14587  002A3C  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14588  002A40  2ADE               	incf	postinc2,f,c
 14589  002A42  0E00               	movlw	0
 14590  002A44  22DD               	addwfc	postdec2,f,c
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 14594  002A46  C0A3  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 14595  002A4A  C0A4  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 14596  002A4E  CFDF F0A5          	movff	indf2,??i2_vfpfcnvrt
 14597  002A52  0E04               	movlw	4
 14598  002A54  26DE               	addwf	postinc2,f,c
 14599  002A56  CFDF F0A6          	movff	indf2,??i2_vfpfcnvrt+1
 14600  002A5A  0E00               	movlw	0
 14601  002A5C  22DD               	addwfc	postdec2,f,c
 14602  002A5E  C0A5  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 14603  002A62  C0A6  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 14604  002A66  CFDE F0AF          	movff	postinc2,i2vfpfcnvrt@f
 14605  002A6A  CFDE F0B0          	movff	postinc2,i2vfpfcnvrt@f+1
 14606  002A6E  CFDE F0B1          	movff	postinc2,i2vfpfcnvrt@f+2
 14607  002A72  CFDE F0B2          	movff	postinc2,i2vfpfcnvrt@f+3
 14608  002A76                     i2l7120:
 14609                           
 14610                           ; BSR set to: 0
 14611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 14612  002A76  C09F  F060         	movff	i2vfpfcnvrt@fp,i2efgtoa@fp
 14613  002A7A  C0A0  F061         	movff	i2vfpfcnvrt@fp+1,i2efgtoa@fp+1
 14614  002A7E  C0AF  F062         	movff	i2vfpfcnvrt@f,i2efgtoa@f
 14615  002A82  C0B0  F063         	movff	i2vfpfcnvrt@f+1,i2efgtoa@f+1
 14616  002A86  C0B1  F064         	movff	i2vfpfcnvrt@f+2,i2efgtoa@f+2
 14617  002A8A  C0B2  F065         	movff	i2vfpfcnvrt@f+3,i2efgtoa@f+3
 14618  002A8E  C0B6  F066         	movff	i2vfpfcnvrt@c,i2efgtoa@c
 14619  002A92  EC7A  F008         	call	i2_efgtoa	;wreg free
 14620  002A96  C060  F09F         	movff	?i2_efgtoa,?i2_vfpfcnvrt
 14621  002A9A  C061  F0A0         	movff	?i2_efgtoa+1,?i2_vfpfcnvrt+1
 14622  002A9E  0012               	return	
 14623  002AA0                     i2l7124:
 14624                           
 14625                           ; BSR set to: 0
 14626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 14627  002AA0  0EB3               	movlw	low i2vfpfcnvrt@ct
 14628  002AA2  6E01               	movwf	i2strncmp@_l,c
 14629  002AA4  0E00               	movlw	high i2vfpfcnvrt@ct
 14630  002AA6  6E02               	movwf	i2strncmp@_l+1,c
 14631  002AA8  0EEF               	movlw	low STR_24
 14632  002AAA  6E03               	movwf	i2strncmp@_r,c
 14633  002AAC  0E10               	movlw	high STR_24
 14634  002AAE  6E04               	movwf	i2strncmp@_r+1,c
 14635  002AB0  0E00               	movlw	0
 14636  002AB2  6E06               	movwf	i2strncmp@n+1,c
 14637  002AB4  0E02               	movlw	2
 14638  002AB6  6E05               	movwf	i2strncmp@n,c
 14639  002AB8  ECF4  F02C         	call	i2_strncmp	;wreg free
 14640  002ABC  5001               	movf	?i2_strncmp,w,c
 14641  002ABE  1002               	iorwf	?i2_strncmp+1,w,c
 14642  002AC0  A4D8               	btfss	status,2,c
 14643  002AC2  D058               	goto	i2l7140
 14644                           
 14645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 14646  002AC4  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14647  002AC8  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14648  002ACC  CFDE F0A5          	movff	postinc2,??i2_vfpfcnvrt
 14649  002AD0  CFDD F0A6          	movff	postdec2,??i2_vfpfcnvrt+1
 14650  002AD4  0E01               	movlw	1
 14651  002AD6  0100               	movlb	0	; () banked
 14652  002AD8  27A5               	addwf	??i2_vfpfcnvrt& (0+255),f,b
 14653  002ADA  0E00               	movlw	0
 14654  002ADC  23A6               	addwfc	(??i2_vfpfcnvrt+1)& (0+255),f,b
 14655  002ADE  C0A5  FFF6         	movff	??i2_vfpfcnvrt,tblptrl
 14656  002AE2  C0A6  FFF7         	movff	??i2_vfpfcnvrt+1,tblptrh
 14657  002AE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14658  002AE6  6AF8               	clrf	tblptru,c
 14659  002AE8                     	endif
 14660  002AE8                     	if	0	;tblptru may be non-zero
 14661  002AE8                     	endif
 14662  002AE8  0008               	tblrd		*
 14663  002AEA  CFF5 F0B6          	movff	tablat,i2vfpfcnvrt@c
 14664  002AEE  0EBF               	movlw	191
 14665  002AF0  6FA5               	movwf	??i2_vfpfcnvrt& (0+255),b
 14666  002AF2  0EFF               	movlw	255
 14667  002AF4  6FA6               	movwf	(??i2_vfpfcnvrt+1)& (0+255),b
 14668  002AF6  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14669  002AFA  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14670  002AFE  CFDE FFF6          	movff	postinc2,tblptrl
 14671  002B02  CFDD FFF7          	movff	postdec2,tblptrh
 14672  002B06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14673  002B06  6AF8               	clrf	tblptru,c
 14674  002B08                     	endif
 14675  002B08                     	if	0	;tblptru may be non-zero
 14676  002B08                     	endif
 14677  002B08  0008               	tblrd		*
 14678  002B0A  50F5               	movf	tablat,w,c
 14679  002B0C  6FA7               	movwf	(??i2_vfpfcnvrt+2)& (0+255),b
 14680  002B0E  6BA8               	clrf	(??i2_vfpfcnvrt+3)& (0+255),b
 14681  002B10  51A5               	movf	??i2_vfpfcnvrt& (0+255),w,b
 14682  002B12  27A7               	addwf	(??i2_vfpfcnvrt+2)& (0+255),f,b
 14683  002B14  51A6               	movf	(??i2_vfpfcnvrt+1)& (0+255),w,b
 14684  002B16  23A8               	addwfc	(??i2_vfpfcnvrt+3)& (0+255),f,b
 14685  002B18  51A8               	movf	(??i2_vfpfcnvrt+3)& (0+255),w,b
 14686  002B1A  E106               	bnz	i2u970_40
 14687  002B1C  0E1A               	movlw	26
 14688  002B1E  5DA7               	subwf	(??i2_vfpfcnvrt+2)& (0+255),w,b
 14689  002B20  B0D8               	btfsc	status,0,c
 14690  002B22  D002               	goto	i2u970_40
 14691  002B24  0E01               	movlw	1
 14692  002B26  D001               	goto	i2u971_40
 14693  002B28                     i2u970_40:
 14694  002B28  0E00               	movlw	0
 14695  002B2A                     i2u971_40:
 14696  002B2A  6FAD               	movwf	i2_vfpfcnvrt$1633& (0+255),b
 14697  002B2C  6BAE               	clrf	(i2_vfpfcnvrt$1633+1)& (0+255),b
 14698                           
 14699                           ; BSR set to: 0
 14700  002B2E  51AD               	movf	i2_vfpfcnvrt$1633& (0+255),w,b
 14701  002B30  11AE               	iorwf	(i2_vfpfcnvrt$1633+1)& (0+255),w,b
 14702                           
 14703                           ; BSR set to: 0
 14704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 14705                           
 14706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 14707                           
 14708                           ; BSR set to: 0
 14709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 14710  002B32  C0A3  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 14711  002B36  C0A4  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 14712  002B3A  CFDF F0A5          	movff	indf2,??i2_vfpfcnvrt
 14713  002B3E  0E04               	movlw	4
 14714  002B40  26DE               	addwf	postinc2,f,c
 14715  002B42  CFDF F0A6          	movff	indf2,??i2_vfpfcnvrt+1
 14716  002B46  0E00               	movlw	0
 14717  002B48  22DD               	addwfc	postdec2,f,c
 14718  002B4A  C0A5  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 14719  002B4E  C0A6  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 14720  002B52  CFDE F0AF          	movff	postinc2,i2vfpfcnvrt@f
 14721  002B56  CFDE F0B0          	movff	postinc2,i2vfpfcnvrt@f+1
 14722  002B5A  CFDE F0B1          	movff	postinc2,i2vfpfcnvrt@f+2
 14723  002B5E  CFDE F0B2          	movff	postinc2,i2vfpfcnvrt@f+3
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 14727                           
 14728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
 14729  002B62  0E02               	movlw	2
 14730  002B64  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14731  002B68  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14732  002B6C  26DE               	addwf	postinc2,f,c
 14733  002B6E  0E00               	movlw	0
 14734  002B70  22DD               	addwfc	postdec2,f,c
 14735  002B72  D781               	goto	i2l7120
 14736  002B74                     i2l7140:
 14737                           
 14738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 14739  002B74  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14740  002B78  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14741  002B7C  CFDE FFF6          	movff	postinc2,tblptrl
 14742  002B80  CFDD FFF7          	movff	postdec2,tblptrh
 14743  002B84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14744  002B84  6AF8               	clrf	tblptru,c
 14745  002B86                     	endif
 14746  002B86                     	if	0	;tblptru may be non-zero
 14747  002B86                     	endif
 14748  002B86  0008               	tblrd		*
 14749  002B88  50F5               	movf	tablat,w,c
 14750  002B8A  0A73               	xorlw	115
 14751  002B8C  A4D8               	btfss	status,2,c
 14752  002B8E  D02A               	goto	i2l7148
 14753                           
 14754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 14755  002B90  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14756  002B94  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14757  002B98  2ADE               	incf	postinc2,f,c
 14758  002B9A  0E00               	movlw	0
 14759  002B9C  22DD               	addwfc	postdec2,f,c
 14760                           
 14761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 14762  002B9E  C0A3  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 14763  002BA2  C0A4  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 14764  002BA6  CFDF F0A5          	movff	indf2,??i2_vfpfcnvrt
 14765  002BAA  0E02               	movlw	2
 14766  002BAC  26DE               	addwf	postinc2,f,c
 14767  002BAE  CFDF F0A6          	movff	indf2,??i2_vfpfcnvrt+1
 14768  002BB2  0E00               	movlw	0
 14769  002BB4  22DD               	addwfc	postdec2,f,c
 14770  002BB6  C0A5  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 14771  002BBA  C0A6  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 14772  002BBE  CFDE F0A9          	movff	postinc2,i2vfpfcnvrt@cp
 14773  002BC2  CFDD F0AA          	movff	postdec2,i2vfpfcnvrt@cp+1
 14774                           
 14775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 14776  002BC6  C09F  F00C         	movff	i2vfpfcnvrt@fp,i2stoa@fp
 14777  002BCA  C0A0  F00D         	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
 14778  002BCE  C0A9  F00E         	movff	i2vfpfcnvrt@cp,i2stoa@s
 14779  002BD2  C0AA  F00F         	movff	i2vfpfcnvrt@cp+1,i2stoa@s+1
 14780  002BD6  ECB0  F029         	call	i2_stoa	;wreg free
 14781  002BDA  C00C  F09F         	movff	?i2_stoa,?i2_vfpfcnvrt
 14782  002BDE  C00D  F0A0         	movff	?i2_stoa+1,?i2_vfpfcnvrt+1
 14783  002BE2  0012               	return	
 14784  002BE4                     i2l7148:
 14785                           
 14786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 14787  002BE4  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14788  002BE8  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14789  002BEC  CFDE FFF6          	movff	postinc2,tblptrl
 14790  002BF0  CFDD FFF7          	movff	postdec2,tblptrh
 14791  002BF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14792  002BF4  6AF8               	clrf	tblptru,c
 14793  002BF6                     	endif
 14794  002BF6                     	if	0	;tblptru may be non-zero
 14795  002BF6                     	endif
 14796  002BF6  0008               	tblrd		*
 14797  002BF8  50F5               	movf	tablat,w,c
 14798  002BFA  0A25               	xorlw	37
 14799  002BFC  A4D8               	btfss	status,2,c
 14800  002BFE  D017               	goto	i2l7158
 14801                           
 14802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 14803  002C00  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14804  002C04  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14805  002C08  2ADE               	incf	postinc2,f,c
 14806  002C0A  0E00               	movlw	0
 14807  002C0C  22DD               	addwfc	postdec2,f,c
 14808                           
 14809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 14810  002C0E  0E00               	movlw	0
 14811  002C10  6E04               	movwf	i2fputc@c+1,c
 14812  002C12  0E25               	movlw	37
 14813  002C14  6E03               	movwf	i2fputc@c,c
 14814  002C16  C09F  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 14815  002C1A  C0A0  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 14816  002C1E  ECEC  F02D         	call	i2_fputc	;wreg free
 14817  002C22                     i2l7154:
 14818                           
 14819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 14820  002C22  0E00               	movlw	0
 14821  002C24  0100               	movlb	0	; () banked
 14822  002C26  6FA0               	movwf	(?i2_vfpfcnvrt+1)& (0+255),b
 14823  002C28  0E01               	movlw	1
 14824  002C2A  6F9F               	movwf	?i2_vfpfcnvrt& (0+255),b
 14825  002C2C  0012               	return	
 14826  002C2E                     i2l7158:
 14827                           
 14828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 14829  002C2E  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14830  002C32  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14831  002C36  2ADE               	incf	postinc2,f,c
 14832  002C38  0E00               	movlw	0
 14833  002C3A  22DD               	addwfc	postdec2,f,c
 14834                           
 14835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 14836  002C3C  0E00               	movlw	0
 14837  002C3E  0100               	movlb	0	; () banked
 14838  002C40  6FA0               	movwf	(?i2_vfpfcnvrt+1)& (0+255),b
 14839  002C42  0E00               	movlw	0
 14840  002C44  6F9F               	movwf	?i2_vfpfcnvrt& (0+255),b
 14841  002C46  0012               	return	
 14842  002C48                     i2l7164:
 14843                           
 14844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 14845  002C48  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14846  002C4C  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14847  002C50  CFDE FFF6          	movff	postinc2,tblptrl
 14848  002C54  CFDD FFF7          	movff	postdec2,tblptrh
 14849  002C58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14850  002C58  6AF8               	clrf	tblptru,c
 14851  002C5A                     	endif
 14852  002C5A                     	if	0	;tblptru may be non-zero
 14853  002C5A                     	endif
 14854  002C5A  0008               	tblrd		*
 14855  002C5C  50F5               	movf	tablat,w,c
 14856  002C5E  6E03               	movwf	i2fputc@c,c
 14857  002C60  6A04               	clrf	i2fputc@c+1,c
 14858  002C62  C09F  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 14859  002C66  C0A0  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 14860  002C6A  ECEC  F02D         	call	i2_fputc	;wreg free
 14861                           
 14862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 14863  002C6E  C0A1  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 14864  002C72  C0A2  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 14865  002C76  2ADE               	incf	postinc2,f,c
 14866  002C78  0E00               	movlw	0
 14867  002C7A  22DD               	addwfc	postdec2,f,c
 14868  002C7C  D7D2               	goto	i2l7154
 14869  002C7E                     __end_ofi2_vfpfcnvrt:
 14870                           	opt callstack 0
 14871                           
 14872 ;; *************** function i2_strncmp *****************
 14873 ;; Defined at:
 14874 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
 14875 ;; Parameters:    Size  Location     Type
 14876 ;;  _l              2    0[COMRAM] PTR const unsigned char 
 14877 ;;		 -> i2vfpfcnvrt@ct(3), vfpfcnvrt@ct(3), stringArry(64), 
 14878 ;;  _r              2    2[COMRAM] PTR const unsigned char 
 14879 ;;		 -> STR_26(3), STR_5(5), STR_2(6), 
 14880 ;;  n               2    4[COMRAM] unsigned int 
 14881 ;; Auto vars:     Size  Location     Type
 14882 ;;  strncmp         2    9[COMRAM] PTR const unsigned char 
 14883 ;;		 -> STR_26(3), STR_5(5), STR_2(6), 
 14884 ;;  strncmp         2    7[COMRAM] PTR const unsigned char 
 14885 ;;		 -> i2vfpfcnvrt@ct(3), vfpfcnvrt@ct(3), stringArry(64), 
 14886 ;; Return value:  Size  Location     Type
 14887 ;;                  2    0[COMRAM] int 
 14888 ;; Registers used:
 14889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14890 ;; Tracked objects:
 14891 ;;		On entry : 0/0
 14892 ;;		On exit  : 0/0
 14893 ;;		Unchanged: 0/0
 14894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14895 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14896 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14898 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14899 ;;Total ram usage:       11 bytes
 14900 ;; Hardware stack levels used:    1
 14901 ;; This function calls:
 14902 ;;		Nothing
 14903 ;; This function is called by:
 14904 ;;		i2_vfpfcnvrt
 14905 ;; This function uses a non-reentrant model
 14906 ;;
 14907                           
 14908                           	psect	text76
 14909  0059E8                     __ptext76:
 14910                           	opt callstack 0
 14911  0059E8                     i2_strncmp:
 14912                           	opt callstack 13
 14913                           
 14914                           ;incstack = 0
 14915  0059E8  C001  F008         	movff	i2strncmp@_l,i2strncmp@l
 14916  0059EC  C002  F009         	movff	i2strncmp@_l+1,i2strncmp@l+1
 14917  0059F0  C003  F00A         	movff	i2strncmp@_r,i2strncmp@r
 14918  0059F4  C004  F00B         	movff	i2strncmp@_r+1,i2strncmp@r+1
 14919  0059F8  0605               	decf	i2strncmp@n,f,c
 14920  0059FA  A0D8               	btfss	status,0,c
 14921  0059FC  0606               	decf	i2strncmp@n+1,f,c
 14922  0059FE  2805               	incf	i2strncmp@n,w,c
 14923  005A00  E10F               	bnz	i2l6510
 14924  005A02  2806               	incf	i2strncmp@n+1,w,c
 14925  005A04  A4D8               	btfss	status,2,c
 14926  005A06  D00C               	goto	i2l6510
 14927  005A08  0E00               	movlw	0
 14928  005A0A  6E02               	movwf	?i2_strncmp+1,c
 14929  005A0C  0E00               	movlw	0
 14930  005A0E  6E01               	movwf	?i2_strncmp,c
 14931  005A10  0012               	return	
 14932  005A12                     i2l6508:
 14933  005A12  4A08               	infsnz	i2strncmp@l,f,c
 14934  005A14  2A09               	incf	i2strncmp@l+1,f,c
 14935  005A16  4A0A               	infsnz	i2strncmp@r,f,c
 14936  005A18  2A0B               	incf	i2strncmp@r+1,f,c
 14937  005A1A  0605               	decf	i2strncmp@n,f,c
 14938  005A1C  A0D8               	btfss	status,0,c
 14939  005A1E  0606               	decf	i2strncmp@n+1,f,c
 14940  005A20                     i2l6510:
 14941  005A20  C008  FFD9         	movff	i2strncmp@l,fsr2l
 14942  005A24  C009  FFDA         	movff	i2strncmp@l+1,fsr2h
 14943  005A28  50DF               	movf	indf2,w,c
 14944  005A2A  B4D8               	btfsc	status,2,c
 14945  005A2C  D01E               	goto	i2u859_40
 14946  005A2E  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 14947  005A32  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 14948  005A36                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14949  005A36  6AF8               	clrf	tblptru,c
 14950  005A38                     	endif
 14951  005A38                     	if	0	;tblptru may be non-zero
 14952  005A38                     	endif
 14953  005A38  0008               	tblrd		*
 14954  005A3A  50F5               	movf	tablat,w,c
 14955  005A3C  0900               	iorlw	0
 14956  005A3E  B4D8               	btfsc	status,2,c
 14957  005A40  D014               	goto	i2u859_40
 14958  005A42  5005               	movf	i2strncmp@n,w,c
 14959  005A44  1006               	iorwf	i2strncmp@n+1,w,c
 14960  005A46  B4D8               	btfsc	status,2,c
 14961  005A48  D010               	goto	i2u859_40
 14962  005A4A  C008  FFD9         	movff	i2strncmp@l,fsr2l
 14963  005A4E  C009  FFDA         	movff	i2strncmp@l+1,fsr2h
 14964  005A52  50DF               	movf	indf2,w,c
 14965  005A54  6E07               	movwf	??i2_strncmp& (0+255),c
 14966  005A56  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 14967  005A5A  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 14968  005A5E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14969  005A5E  6AF8               	clrf	tblptru,c
 14970  005A60                     	endif
 14971  005A60                     	if	0	;tblptru may be non-zero
 14972  005A60                     	endif
 14973  005A60  0008               	tblrd		*
 14974  005A62  50F5               	movf	tablat,w,c
 14975  005A64  1807               	xorwf	??i2_strncmp,w,c
 14976  005A66  B4D8               	btfsc	status,2,c
 14977  005A68  D7D4               	goto	i2l6508
 14978  005A6A                     i2u859_40:
 14979  005A6A  C008  FFD9         	movff	i2strncmp@l,fsr2l
 14980  005A6E  C009  FFDA         	movff	i2strncmp@l+1,fsr2h
 14981  005A72  50DF               	movf	indf2,w,c
 14982  005A74  6E07               	movwf	??i2_strncmp& (0+255),c
 14983  005A76  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 14984  005A7A  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 14985  005A7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14986  005A7E  6AF8               	clrf	tblptru,c
 14987  005A80                     	endif
 14988  005A80                     	if	0	;tblptru may be non-zero
 14989  005A80                     	endif
 14990  005A80  0008               	tblrd		*
 14991  005A82  50F5               	movf	tablat,w,c
 14992  005A84  5C07               	subwf	??i2_strncmp,w,c
 14993  005A86  6E01               	movwf	?i2_strncmp,c
 14994  005A88  6A02               	clrf	?i2_strncmp+1,c
 14995  005A8A  A0D8               	btfss	status,0,c
 14996  005A8C  0602               	decf	?i2_strncmp+1,f,c
 14997  005A8E  0012               	return		;funcret
 14998  005A90                     __end_ofi2_strncmp:
 14999                           	opt callstack 0
 15000                           
 15001 ;; *************** function i2_stoa *****************
 15002 ;; Defined at:
 15003 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 15004 ;; Parameters:    Size  Location     Type
 15005 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 15006 ;;		 -> sprintf@f(6), NULL(0), 
 15007 ;;  s               2   13[COMRAM] PTR unsigned char 
 15008 ;;		 -> ?_printf(2), ?_sprintf(2), dataLogRead@readOutT(5), readData(4), 
 15009 ;;		 -> tempRead(2), adafruit@rh_code(4), stringArry(64), 
 15010 ;; Auto vars:     Size  Location     Type
 15011 ;;  stoa            7   16[COMRAM] unsigned char [7]
 15012 ;;  stoa            2   31[COMRAM] int 
 15013 ;;  stoa            2   29[COMRAM] int 
 15014 ;;  stoa            2   27[COMRAM] PTR unsigned char 
 15015 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 15016 ;;		 -> dataLogRead@readOutT(5), readData(4), tempRead(2), adafruit@rh_code(4), 
 15017 ;;		 -> stringArry(64), 
 15018 ;;  stoa            2   25[COMRAM] int 
 15019 ;;  stoa            2   23[COMRAM] int 
 15020 ;; Return value:  Size  Location     Type
 15021 ;;                  2   11[COMRAM] int 
 15022 ;; Registers used:
 15023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15024 ;; Tracked objects:
 15025 ;;		On entry : 0/0
 15026 ;;		On exit  : 0/0
 15027 ;;		Unchanged: 0/0
 15028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15030 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15032 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15033 ;;Total ram usage:       22 bytes
 15034 ;; Hardware stack levels used:    1
 15035 ;; Hardware stack levels required when called:    3
 15036 ;; This function calls:
 15037 ;;		i2_fputc
 15038 ;;		i2_strlen
 15039 ;; This function is called by:
 15040 ;;		i2_vfpfcnvrt
 15041 ;; This function uses a non-reentrant model
 15042 ;;
 15043                           
 15044                           	psect	text77
 15045  005360                     __ptext77:
 15046                           	opt callstack 0
 15047  005360                     i2_stoa:
 15048                           	opt callstack 10
 15049                           
 15050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15051                           
 15052                           ;incstack = 0
 15053  005360  EE21  F0D9         	lfsr	2,stoa@F1153
 15054  005364  EE10  F011         	lfsr	1,i2stoa@nuls
 15055  005368  0E06               	movlw	6
 15056  00536A                     i2u839_41:
 15057  00536A  CFDB FFE3          	movff	plusw2,plusw1
 15058  00536E  06E8               	decf	wreg,f,c
 15059  005370  E2FC               	bc	i2u839_41
 15060                           
 15061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 15062  005372  C00E  F01C         	movff	i2stoa@s,i2stoa@cp
 15063  005376  C00F  F01D         	movff	i2stoa@s+1,i2stoa@cp+1
 15064                           
 15065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 15066  00537A  501C               	movf	i2stoa@cp,w,c
 15067  00537C  101D               	iorwf	i2stoa@cp+1,w,c
 15068  00537E  A4D8               	btfss	status,2,c
 15069  005380  D004               	goto	i2l6426
 15070                           
 15071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 15072  005382  0E11               	movlw	low i2stoa@nuls
 15073  005384  6E1C               	movwf	i2stoa@cp,c
 15074  005386  0E00               	movlw	high i2stoa@nuls
 15075  005388  6E1D               	movwf	i2stoa@cp+1,c
 15076  00538A                     i2l6426:
 15077                           
 15078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 15079  00538A  C01C  F001         	movff	i2stoa@cp,i2strlen@s
 15080  00538E  C01D  F002         	movff	i2stoa@cp+1,i2strlen@s+1
 15081  005392  EC47  F035         	call	i2_strlen	;wreg free
 15082  005396  C001  F020         	movff	?i2_strlen,i2stoa@l
 15083  00539A  C002  F021         	movff	?i2_strlen+1,i2stoa@l+1
 15084                           
 15085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 15086  00539E  C1A9  F01E         	movff	_prec,i2stoa@p
 15087  0053A2  C1AA  F01F         	movff	_prec+1,i2stoa@p+1
 15088                           
 15089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 15090  0053A6  BE1F               	btfsc	i2stoa@p+1,7,c
 15091  0053A8  D00E               	goto	i2l779
 15092  0053AA  5020               	movf	i2stoa@l,w,c
 15093  0053AC  5C1E               	subwf	i2stoa@p,w,c
 15094  0053AE  501F               	movf	i2stoa@p+1,w,c
 15095  0053B0  0A80               	xorlw	128
 15096  0053B2  6E10               	movwf	??i2_stoa& (0+255),c
 15097  0053B4  5021               	movf	i2stoa@l+1,w,c
 15098  0053B6  0A80               	xorlw	128
 15099  0053B8  5810               	subwfb	??i2_stoa& (0+255),w,c
 15100  0053BA  B0D8               	btfsc	status,0,c
 15101  0053BC  D004               	goto	i2l779
 15102  0053BE  C01E  F020         	movff	i2stoa@p,i2stoa@l
 15103  0053C2  C01F  F021         	movff	i2stoa@p+1,i2stoa@l+1
 15104  0053C6                     i2l779:
 15105                           
 15106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 15107  0053C6  C020  F01E         	movff	i2stoa@l,i2stoa@p
 15108  0053CA  C021  F01F         	movff	i2stoa@l+1,i2stoa@p+1
 15109                           
 15110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 15111  0053CE  C1A7  F01A         	movff	_width,i2stoa@w
 15112  0053D2  C1A8  F01B         	movff	_width+1,i2stoa@w+1
 15113                           
 15114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 15115  0053D6  0101               	movlb	1	; () banked
 15116  0053D8  A1AB               	btfss	_flags& (0+255),0,b
 15117  0053DA  D00D               	goto	i2l6440
 15118  0053DC  D016               	goto	i2u844_40
 15119  0053DE                     i2l6436:
 15120                           
 15121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 15122  0053DE  0E00               	movlw	0
 15123  0053E0  6E04               	movwf	i2fputc@c+1,c
 15124  0053E2  0E20               	movlw	32
 15125  0053E4  6E03               	movwf	i2fputc@c,c
 15126  0053E6  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 15127  0053EA  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 15128  0053EE  ECEC  F02D         	call	i2_fputc	;wreg free
 15129                           
 15130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 15131  0053F2  4A20               	infsnz	i2stoa@l,f,c
 15132  0053F4  2A21               	incf	i2stoa@l+1,f,c
 15133  0053F6                     i2l6440:
 15134                           
 15135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 15136  0053F6  501A               	movf	i2stoa@w,w,c
 15137  0053F8  5C20               	subwf	i2stoa@l,w,c
 15138  0053FA  5021               	movf	i2stoa@l+1,w,c
 15139  0053FC  0A80               	xorlw	128
 15140  0053FE  6E10               	movwf	??i2_stoa& (0+255),c
 15141  005400  501B               	movf	i2stoa@w+1,w,c
 15142  005402  0A80               	xorlw	128
 15143  005404  5810               	subwfb	??i2_stoa& (0+255),w,c
 15144  005406  A0D8               	btfss	status,0,c
 15145  005408  D7EA               	goto	i2l6436
 15146  00540A                     i2u844_40:
 15147                           
 15148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 15149  00540A  0E00               	movlw	0
 15150  00540C  6E19               	movwf	i2stoa@i+1,c
 15151  00540E  0E00               	movlw	0
 15152  005410  6E18               	movwf	i2stoa@i,c
 15153                           
 15154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 15155  005412  D013               	goto	i2l6450
 15156  005414                     i2l6444:
 15157                           
 15158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 15159  005414  C01C  FFD9         	movff	i2stoa@cp,fsr2l
 15160  005418  C01D  FFDA         	movff	i2stoa@cp+1,fsr2h
 15161  00541C  50DF               	movf	indf2,w,c
 15162  00541E  6E10               	movwf	??i2_stoa& (0+255),c
 15163  005420  5010               	movf	??i2_stoa,w,c
 15164  005422  6E03               	movwf	i2fputc@c,c
 15165  005424  6A04               	clrf	i2fputc@c+1,c
 15166  005426  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 15167  00542A  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 15168  00542E  ECEC  F02D         	call	i2_fputc	;wreg free
 15169                           
 15170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 15171  005432  4A1C               	infsnz	i2stoa@cp,f,c
 15172  005434  2A1D               	incf	i2stoa@cp+1,f,c
 15173                           
 15174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 15175  005436  4A18               	infsnz	i2stoa@i,f,c
 15176  005438  2A19               	incf	i2stoa@i+1,f,c
 15177  00543A                     i2l6450:
 15178                           
 15179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 15180  00543A  501E               	movf	i2stoa@p,w,c
 15181  00543C  5C18               	subwf	i2stoa@i,w,c
 15182  00543E  5019               	movf	i2stoa@i+1,w,c
 15183  005440  0A80               	xorlw	128
 15184  005442  6E10               	movwf	??i2_stoa& (0+255),c
 15185  005444  501F               	movf	i2stoa@p+1,w,c
 15186  005446  0A80               	xorlw	128
 15187  005448  5810               	subwfb	??i2_stoa& (0+255),w,c
 15188  00544A  A0D8               	btfss	status,0,c
 15189  00544C  D7E3               	goto	i2l6444
 15190                           
 15191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 15192  00544E  0101               	movlb	1	; () banked
 15193  005450  B1AB               	btfsc	_flags& (0+255),0,b
 15194  005452  D00D               	goto	i2l6458
 15195  005454  D016               	goto	i2u847_40
 15196  005456                     i2l6454:
 15197                           
 15198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 15199  005456  0E00               	movlw	0
 15200  005458  6E04               	movwf	i2fputc@c+1,c
 15201  00545A  0E20               	movlw	32
 15202  00545C  6E03               	movwf	i2fputc@c,c
 15203  00545E  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 15204  005462  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 15205  005466  ECEC  F02D         	call	i2_fputc	;wreg free
 15206                           
 15207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 15208  00546A  4A20               	infsnz	i2stoa@l,f,c
 15209  00546C  2A21               	incf	i2stoa@l+1,f,c
 15210  00546E                     i2l6458:
 15211                           
 15212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 15213  00546E  501A               	movf	i2stoa@w,w,c
 15214  005470  5C20               	subwf	i2stoa@l,w,c
 15215  005472  5021               	movf	i2stoa@l+1,w,c
 15216  005474  0A80               	xorlw	128
 15217  005476  6E10               	movwf	??i2_stoa& (0+255),c
 15218  005478  501B               	movf	i2stoa@w+1,w,c
 15219  00547A  0A80               	xorlw	128
 15220  00547C  5810               	subwfb	??i2_stoa& (0+255),w,c
 15221  00547E  A0D8               	btfss	status,0,c
 15222  005480  D7EA               	goto	i2l6454
 15223  005482                     i2u847_40:
 15224                           
 15225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 15226                           
 15227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
 15228  005482  C020  F00C         	movff	i2stoa@l,?i2_stoa
 15229  005486  C021  F00D         	movff	i2stoa@l+1,?i2_stoa+1
 15230  00548A  0012               	return		;funcret
 15231  00548C                     __end_ofi2_stoa:
 15232                           	opt callstack 0
 15233                           
 15234 ;; *************** function i2_efgtoa *****************
 15235 ;; Defined at:
 15236 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 15237 ;; Parameters:    Size  Location     Type
 15238 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 15239 ;;		 -> sprintf@f(6), NULL(0), 
 15240 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
 15241 ;;  c               1    6[BANK0 ] unsigned char 
 15242 ;; Auto vars:     Size  Location     Type
 15243 ;;  efgtoa          4   59[BANK0 ] unsigned char 
 15244 ;;  efgtoa          4   51[BANK0 ] unsigned char 
 15245 ;;  efgtoa          4   45[BANK0 ] unsigned char 
 15246 ;;  efgtoa          4   41[BANK0 ] unsigned char 
 15247 ;;  efgtoa          4    7[BANK0 ] unsigned char 
 15248 ;;  efgtoa          2   57[BANK0 ] int 
 15249 ;;  efgtoa          2   55[BANK0 ] int 
 15250 ;;  efgtoa          2   49[BANK0 ] int 
 15251 ;;  efgtoa          2   38[BANK0 ] int 
 15252 ;;  efgtoa          2   35[BANK0 ] int 
 15253 ;;  efgtoa          2   33[BANK0 ] int 
 15254 ;;  efgtoa          2   31[BANK0 ] int 
 15255 ;;  efgtoa          2   29[BANK0 ] int 
 15256 ;;  efgtoa          2   27[BANK0 ] int 
 15257 ;;  efgtoa          2   25[BANK0 ] int 
 15258 ;;  efgtoa          2   23[BANK0 ] int 
 15259 ;;  efgtoa          1   40[BANK0 ] unsigned char 
 15260 ;;  efgtoa          1   37[BANK0 ] unsigned char 
 15261 ;; Return value:  Size  Location     Type
 15262 ;;                  2    0[BANK0 ] int 
 15263 ;; Registers used:
 15264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15265 ;; Tracked objects:
 15266 ;;		On entry : 0/0
 15267 ;;		On exit  : 0/0
 15268 ;;		Unchanged: 0/0
 15269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15270 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15271 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15272 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15273 ;;      Totals:         5      63       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15274 ;;Total ram usage:       68 bytes
 15275 ;; Hardware stack levels used:    1
 15276 ;; Hardware stack levels required when called:    5
 15277 ;; This function calls:
 15278 ;;		i2___awdiv
 15279 ;;		i2___awmod
 15280 ;;		i2___fladd
 15281 ;;		i2___fldiv
 15282 ;;		i2___fleq
 15283 ;;		i2___flge
 15284 ;;		i2___flmul
 15285 ;;		i2___flneg
 15286 ;;		i2___flsub
 15287 ;;		i2___fltol
 15288 ;;		i2___fpclassifyf
 15289 ;;		i2_floorf
 15290 ;;		i2_isupper
 15291 ;;		i2_pad
 15292 ;;		i2_strcpy
 15293 ;;		i2_tolower
 15294 ;; This function is called by:
 15295 ;;		i2_vfpfcnvrt
 15296 ;; This function uses a non-reentrant model
 15297 ;;
 15298                           
 15299                           	psect	text78
 15300  0010F4                     __ptext78:
 15301                           	opt callstack 0
 15302  0010F4                     i2_efgtoa:
 15303                           	opt callstack 8
 15304                           
 15305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
 15306                           
 15307                           ;incstack = 0
 15308  0010F4  0E00               	movlw	0
 15309  0010F6  0100               	movlb	0	; () banked
 15310  0010F8  6F82               	movwf	(i2efgtoa@sign+1)& (0+255),b
 15311  0010FA  0E00               	movlw	0
 15312  0010FC  6F81               	movwf	i2efgtoa@sign& (0+255),b
 15313                           
 15314                           ; BSR set to: 0
 15315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
 15316  0010FE  C062  F093         	movff	i2efgtoa@f,i2efgtoa@g
 15317  001102  C063  F094         	movff	i2efgtoa@f+1,i2efgtoa@g+1
 15318  001106  C064  F095         	movff	i2efgtoa@f+2,i2efgtoa@g+2
 15319  00110A  C065  F096         	movff	i2efgtoa@f+3,i2efgtoa@g+3
 15320                           
 15321                           ; BSR set to: 0
 15322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
 15323  00110E  AF96               	btfss	(i2efgtoa@g+3)& (0+255),7,b
 15324  001110  D016               	goto	i2l6130
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
 15328  001112  0E00               	movlw	0
 15329  001114  6F82               	movwf	(i2efgtoa@sign+1)& (0+255),b
 15330  001116  0E01               	movlw	1
 15331  001118  6F81               	movwf	i2efgtoa@sign& (0+255),b
 15332                           
 15333                           ; BSR set to: 0
 15334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
 15335  00111A  C093  F001         	movff	i2efgtoa@g,i2___flneg@f1
 15336  00111E  C094  F002         	movff	i2efgtoa@g+1,i2___flneg@f1+1
 15337  001122  C095  F003         	movff	i2efgtoa@g+2,i2___flneg@f1+2
 15338  001126  C096  F004         	movff	i2efgtoa@g+3,i2___flneg@f1+3
 15339  00112A  EC05  F035         	call	i2___flneg	;wreg free
 15340  00112E  C001  F093         	movff	?i2___flneg,i2efgtoa@g
 15341  001132  C002  F094         	movff	?i2___flneg+1,i2efgtoa@g+1
 15342  001136  C003  F095         	movff	?i2___flneg+2,i2efgtoa@g+2
 15343  00113A  C004  F096         	movff	?i2___flneg+3,i2efgtoa@g+3
 15344  00113E                     i2l6130:
 15345                           
 15346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
 15347  00113E  0E00               	movlw	0
 15348  001140  0100               	movlb	0	; () banked
 15349  001142  6F9A               	movwf	(i2efgtoa@n+1)& (0+255),b
 15350  001144  0E00               	movlw	0
 15351  001146  6F99               	movwf	i2efgtoa@n& (0+255),b
 15352                           
 15353                           ; BSR set to: 0
 15354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
 15355  001148  C1A7  F086         	movff	_width,i2efgtoa@w
 15356  00114C  C1A8  F087         	movff	_width+1,i2efgtoa@w+1
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
 15360  001150  5181               	movf	i2efgtoa@sign& (0+255),w,b
 15361  001152  1182               	iorwf	(i2efgtoa@sign+1)& (0+255),w,b
 15362  001154  A4D8               	btfss	status,2,c
 15363  001156  D003               	goto	i2u789_40
 15364                           
 15365                           ; BSR set to: 0
 15366  001158  0101               	movlb	1	; () banked
 15367  00115A  A5AB               	btfss	_flags& (0+255),2,b
 15368  00115C  D014               	goto	i2l6150
 15369  00115E                     i2u789_40:
 15370                           
 15371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
 15372  00115E  0100               	movlb	0	; () banked
 15373  001160  5181               	movf	i2efgtoa@sign& (0+255),w,b
 15374  001162  1182               	iorwf	(i2efgtoa@sign+1)& (0+255),w,b
 15375  001164  A4D8               	btfss	status,2,c
 15376  001166  D004               	goto	i2l6142
 15377                           
 15378                           ; BSR set to: 0
 15379  001168  0E00               	movlw	0
 15380  00116A  6F6C               	movwf	(i2_efgtoa$1592+1)& (0+255),b
 15381  00116C  0E2B               	movlw	43
 15382  00116E  D003               	goto	L16
 15383  001170                     i2l6142:
 15384                           
 15385                           ; BSR set to: 0
 15386  001170  0E00               	movlw	0
 15387  001172  6F6C               	movwf	(i2_efgtoa$1592+1)& (0+255),b
 15388  001174  0E2D               	movlw	45
 15389  001176                     L16:
 15390  001176  6F6B               	movwf	i2_efgtoa$1592& (0+255),b
 15391                           
 15392                           ; BSR set to: 0
 15393  001178  C06B  F280         	movff	i2_efgtoa$1592,_dbuf
 15394                           
 15395                           ; BSR set to: 0
 15396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
 15397  00117C  4B99               	infsnz	i2efgtoa@n& (0+255),f,b
 15398  00117E  2B9A               	incf	(i2efgtoa@n+1)& (0+255),f,b
 15399                           
 15400                           ; BSR set to: 0
 15401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
 15402  001180  0786               	decf	i2efgtoa@w& (0+255),f,b
 15403  001182  A0D8               	btfss	status,0,c
 15404  001184  0787               	decf	(i2efgtoa@w+1)& (0+255),f,b
 15405  001186                     i2l6150:
 15406                           
 15407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15408  001186  C093  F001         	movff	i2efgtoa@g,i2___fpclassifyf@x
 15409  00118A  C094  F002         	movff	i2efgtoa@g+1,i2___fpclassifyf@x+1
 15410  00118E  C095  F003         	movff	i2efgtoa@g+2,i2___fpclassifyf@x+2
 15411  001192  C096  F004         	movff	i2efgtoa@g+3,i2___fpclassifyf@x+3
 15412  001196  EC7E  F02B         	call	i2___fpclassifyf	;wreg free
 15413  00119A  0401               	decf	?i2___fpclassifyf,w,c
 15414  00119C  1002               	iorwf	?i2___fpclassifyf+1,w,c
 15415  00119E  A4D8               	btfss	status,2,c
 15416  0011A0  D04C               	goto	i2l6168
 15417  0011A2  0EBF               	movlw	191
 15418  0011A4  6E59               	movwf	??i2_efgtoa& (0+255),c
 15419  0011A6  0EFF               	movlw	255
 15420  0011A8  6E5A               	movwf	(??i2_efgtoa+1)& (0+255),c
 15421  0011AA  0100               	movlb	0	; () banked
 15422  0011AC  5166               	movf	i2efgtoa@c& (0+255),w,b
 15423  0011AE  6E5B               	movwf	(??i2_efgtoa+2)& (0+255),c
 15424  0011B0  6A5C               	clrf	(??i2_efgtoa+3)& (0+255),c
 15425  0011B2  5059               	movf	??i2_efgtoa,w,c
 15426  0011B4  265B               	addwf	??i2_efgtoa+2,f,c
 15427  0011B6  505A               	movf	??i2_efgtoa+1,w,c
 15428  0011B8  225C               	addwfc	??i2_efgtoa+3,f,c
 15429  0011BA  505C               	movf	??i2_efgtoa+3,w,c
 15430  0011BC  E106               	bnz	i2u792_40
 15431  0011BE  0E1A               	movlw	26
 15432  0011C0  5C5B               	subwf	??i2_efgtoa+2,w,c
 15433  0011C2  B0D8               	btfsc	status,0,c
 15434  0011C4  D002               	goto	i2u792_40
 15435  0011C6  0E01               	movlw	1
 15436  0011C8  D001               	goto	i2u793_40
 15437  0011CA                     i2u792_40:
 15438  0011CA  0E00               	movlw	0
 15439  0011CC                     i2u793_40:
 15440  0011CC  6F6D               	movwf	i2_efgtoa$1593& (0+255),b
 15441  0011CE  6B6E               	clrf	(i2_efgtoa$1593+1)& (0+255),b
 15442                           
 15443                           ; BSR set to: 0
 15444  0011D0  516D               	movf	i2_efgtoa$1593& (0+255),w,b
 15445  0011D2  116E               	iorwf	(i2_efgtoa$1593+1)& (0+255),w,b
 15446  0011D4  B4D8               	btfsc	status,2,c
 15447  0011D6  D00D               	goto	i2l6160
 15448                           
 15449                           ; BSR set to: 0
 15450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
 15451  0011D8  0E80               	movlw	low _dbuf
 15452  0011DA  2599               	addwf	i2efgtoa@n& (0+255),w,b
 15453  0011DC  6E01               	movwf	i2strcpy@dest,c
 15454  0011DE  0E02               	movlw	high _dbuf
 15455  0011E0  219A               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 15456  0011E2  6E02               	movwf	i2strcpy@dest+1,c
 15457  0011E4  0EDF               	movlw	low STR_16
 15458  0011E6  6E03               	movwf	i2strcpy@src,c
 15459  0011E8  0E10               	movlw	high STR_16
 15460  0011EA  6E04               	movwf	i2strcpy@src+1,c
 15461  0011EC  EC82  F032         	call	i2_strcpy	;wreg free
 15462                           
 15463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
 15464  0011F0  D00C               	goto	i2l6162
 15465  0011F2                     i2l6160:
 15466                           
 15467                           ; BSR set to: 0
 15468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
 15469  0011F2  0E80               	movlw	low _dbuf
 15470  0011F4  2599               	addwf	i2efgtoa@n& (0+255),w,b
 15471  0011F6  6E01               	movwf	i2strcpy@dest,c
 15472  0011F8  0E02               	movlw	high _dbuf
 15473  0011FA  219A               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 15474  0011FC  6E02               	movwf	i2strcpy@dest+1,c
 15475  0011FE  0EE7               	movlw	low STR_17
 15476  001200  6E03               	movwf	i2strcpy@src,c
 15477  001202  0E10               	movlw	high STR_17
 15478  001204  6E04               	movwf	i2strcpy@src+1,c
 15479  001206  EC82  F032         	call	i2_strcpy	;wreg free
 15480  00120A                     i2l6162:
 15481                           
 15482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 15483  00120A  0100               	movlb	0	; () banked
 15484  00120C  0EFD               	movlw	253
 15485  00120E  2786               	addwf	i2efgtoa@w& (0+255),f,b
 15486  001210  0EFF               	movlw	255
 15487  001212  2387               	addwfc	(i2efgtoa@w+1)& (0+255),f,b
 15488  001214                     i2l6164:
 15489                           
 15490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
 15491  001214  C060  F013         	movff	i2efgtoa@fp,i2pad@fp
 15492  001218  C061  F014         	movff	i2efgtoa@fp+1,i2pad@fp+1
 15493  00121C  0E80               	movlw	low _dbuf
 15494  00121E  6E15               	movwf	i2pad@buf,c
 15495  001220  0E02               	movlw	high _dbuf
 15496  001222  6E16               	movwf	i2pad@buf+1,c
 15497  001224  C086  F017         	movff	i2efgtoa@w,i2pad@p
 15498  001228  C087  F018         	movff	i2efgtoa@w+1,i2pad@p+1
 15499  00122C  EC27  F02F         	call	i2_pad	;wreg free
 15500  001230  C013  F060         	movff	?i2_pad,?i2_efgtoa
 15501  001234  C014  F061         	movff	?i2_pad+1,?i2_efgtoa+1
 15502  001238  0012               	return	
 15503  00123A                     i2l6168:
 15504                           
 15505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15506  00123A  C093  F001         	movff	i2efgtoa@g,i2___fpclassifyf@x
 15507  00123E  C094  F002         	movff	i2efgtoa@g+1,i2___fpclassifyf@x+1
 15508  001242  C095  F003         	movff	i2efgtoa@g+2,i2___fpclassifyf@x+2
 15509  001246  C096  F004         	movff	i2efgtoa@g+3,i2___fpclassifyf@x+3
 15510  00124A  EC7E  F02B         	call	i2___fpclassifyf	;wreg free
 15511  00124E  5001               	movf	?i2___fpclassifyf,w,c
 15512  001250  1002               	iorwf	?i2___fpclassifyf+1,w,c
 15513  001252  A4D8               	btfss	status,2,c
 15514  001254  D035               	goto	i2l6186
 15515  001256  0EBF               	movlw	191
 15516  001258  6E59               	movwf	??i2_efgtoa& (0+255),c
 15517  00125A  0EFF               	movlw	255
 15518  00125C  6E5A               	movwf	(??i2_efgtoa+1)& (0+255),c
 15519  00125E  0100               	movlb	0	; () banked
 15520  001260  5166               	movf	i2efgtoa@c& (0+255),w,b
 15521  001262  6E5B               	movwf	(??i2_efgtoa+2)& (0+255),c
 15522  001264  6A5C               	clrf	(??i2_efgtoa+3)& (0+255),c
 15523  001266  5059               	movf	??i2_efgtoa,w,c
 15524  001268  265B               	addwf	??i2_efgtoa+2,f,c
 15525  00126A  505A               	movf	??i2_efgtoa+1,w,c
 15526  00126C  225C               	addwfc	??i2_efgtoa+3,f,c
 15527  00126E  505C               	movf	??i2_efgtoa+3,w,c
 15528  001270  E106               	bnz	i2u796_40
 15529  001272  0E1A               	movlw	26
 15530  001274  5C5B               	subwf	??i2_efgtoa+2,w,c
 15531  001276  B0D8               	btfsc	status,0,c
 15532  001278  D002               	goto	i2u796_40
 15533  00127A  0E01               	movlw	1
 15534  00127C  D001               	goto	i2u797_40
 15535  00127E                     i2u796_40:
 15536  00127E  0E00               	movlw	0
 15537  001280                     i2u797_40:
 15538  001280  6F6F               	movwf	i2_efgtoa$1598& (0+255),b
 15539  001282  6B70               	clrf	(i2_efgtoa$1598+1)& (0+255),b
 15540                           
 15541                           ; BSR set to: 0
 15542  001284  516F               	movf	i2_efgtoa$1598& (0+255),w,b
 15543  001286  1170               	iorwf	(i2_efgtoa$1598+1)& (0+255),w,b
 15544  001288  B4D8               	btfsc	status,2,c
 15545  00128A  D00D               	goto	i2l6178
 15546                           
 15547                           ; BSR set to: 0
 15548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
 15549  00128C  0E80               	movlw	low _dbuf
 15550  00128E  2599               	addwf	i2efgtoa@n& (0+255),w,b
 15551  001290  6E01               	movwf	i2strcpy@dest,c
 15552  001292  0E02               	movlw	high _dbuf
 15553  001294  219A               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 15554  001296  6E02               	movwf	i2strcpy@dest+1,c
 15555  001298  0EE3               	movlw	low STR_20
 15556  00129A  6E03               	movwf	i2strcpy@src,c
 15557  00129C  0E10               	movlw	high STR_20
 15558  00129E  6E04               	movwf	i2strcpy@src+1,c
 15559  0012A0  EC82  F032         	call	i2_strcpy	;wreg free
 15560                           
 15561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
 15562  0012A4  D7B2               	goto	i2l6162
 15563  0012A6                     i2l6178:
 15564                           
 15565                           ; BSR set to: 0
 15566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
 15567  0012A6  0E80               	movlw	low _dbuf
 15568  0012A8  2599               	addwf	i2efgtoa@n& (0+255),w,b
 15569  0012AA  6E01               	movwf	i2strcpy@dest,c
 15570  0012AC  0E02               	movlw	high _dbuf
 15571  0012AE  219A               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 15572  0012B0  6E02               	movwf	i2strcpy@dest+1,c
 15573  0012B2  0EEB               	movlw	low STR_21
 15574  0012B4  6E03               	movwf	i2strcpy@src,c
 15575  0012B6  0E10               	movlw	high STR_21
 15576  0012B8  6E04               	movwf	i2strcpy@src+1,c
 15577  0012BA  EC82  F032         	call	i2_strcpy	;wreg free
 15578  0012BE  D7A5               	goto	i2l6162
 15579  0012C0                     i2l6186:
 15580                           
 15581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
 15582  0012C0  0E00               	movlw	0
 15583  0012C2  0100               	movlb	0	; () banked
 15584  0012C4  6F9B               	movwf	i2efgtoa@u& (0+255),b
 15585  0012C6  0E00               	movlw	0
 15586  0012C8  6F9C               	movwf	(i2efgtoa@u+1)& (0+255),b
 15587  0012CA  0E80               	movlw	128
 15588  0012CC  6F9D               	movwf	(i2efgtoa@u+2)& (0+255),b
 15589  0012CE  0E3F               	movlw	63
 15590  0012D0  6F9E               	movwf	(i2efgtoa@u+3)& (0+255),b
 15591                           
 15592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
 15593  0012D2  0E00               	movlw	0
 15594  0012D4  6F98               	movwf	(i2efgtoa@e+1)& (0+255),b
 15595  0012D6  0E00               	movlw	0
 15596  0012D8  6F97               	movwf	i2efgtoa@e& (0+255),b
 15597                           
 15598                           ; BSR set to: 0
 15599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
 15600  0012DA  C093  F001         	movff	i2efgtoa@g,i2___fleq@ff1
 15601  0012DE  C094  F002         	movff	i2efgtoa@g+1,i2___fleq@ff1+1
 15602  0012E2  C095  F003         	movff	i2efgtoa@g+2,i2___fleq@ff1+2
 15603  0012E6  C096  F004         	movff	i2efgtoa@g+3,i2___fleq@ff1+3
 15604  0012EA  0E00               	movlw	0
 15605  0012EC  6E05               	movwf	i2___fleq@ff2,c
 15606  0012EE  0E00               	movlw	0
 15607  0012F0  6E06               	movwf	i2___fleq@ff2+1,c
 15608  0012F2  0E00               	movlw	0
 15609  0012F4  6E07               	movwf	i2___fleq@ff2+2,c
 15610  0012F6  0E00               	movlw	0
 15611  0012F8  6E08               	movwf	i2___fleq@ff2+3,c
 15612  0012FA  EC01  F030         	call	i2___fleq	;wreg free
 15613  0012FE  A0D8               	btfss	status,0,c
 15614  001300  D01E               	goto	i2l6196
 15615  001302  D076               	goto	i2u801_40
 15616  001304                     i2l6192:
 15617                           
 15618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
 15619  001304  C09B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 15620  001308  C09C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 15621  00130C  C09D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 15622  001310  C09E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 15623  001314  0E00               	movlw	0
 15624  001316  6E13               	movwf	i2___flmul@a,c
 15625  001318  0E00               	movlw	0
 15626  00131A  6E14               	movwf	i2___flmul@a+1,c
 15627  00131C  0E20               	movlw	32
 15628  00131E  6E15               	movwf	i2___flmul@a+2,c
 15629  001320  0E41               	movlw	65
 15630  001322  6E16               	movwf	i2___flmul@a+3,c
 15631  001324  ECA9  F019         	call	i2___flmul	;wreg free
 15632  001328  C00F  F09B         	movff	?i2___flmul,i2efgtoa@u
 15633  00132C  C010  F09C         	movff	?i2___flmul+1,i2efgtoa@u+1
 15634  001330  C011  F09D         	movff	?i2___flmul+2,i2efgtoa@u+2
 15635  001334  C012  F09E         	movff	?i2___flmul+3,i2efgtoa@u+3
 15636                           
 15637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
 15638  001338  0100               	movlb	0	; () banked
 15639  00133A  4B97               	infsnz	i2efgtoa@e& (0+255),f,b
 15640  00133C  2B98               	incf	(i2efgtoa@e+1)& (0+255),f,b
 15641  00133E                     i2l6196:
 15642                           
 15643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
 15644  00133E  C093  F028         	movff	i2efgtoa@g,i2___flge@ff1
 15645  001342  C094  F029         	movff	i2efgtoa@g+1,i2___flge@ff1+1
 15646  001346  C095  F02A         	movff	i2efgtoa@g+2,i2___flge@ff1+2
 15647  00134A  C096  F02B         	movff	i2efgtoa@g+3,i2___flge@ff1+3
 15648  00134E  0E00               	movlw	0
 15649  001350  6E13               	movwf	i2___flmul@a,c
 15650  001352  0E00               	movlw	0
 15651  001354  6E14               	movwf	i2___flmul@a+1,c
 15652  001356  0E20               	movlw	32
 15653  001358  6E15               	movwf	i2___flmul@a+2,c
 15654  00135A  0E41               	movlw	65
 15655  00135C  6E16               	movwf	i2___flmul@a+3,c
 15656  00135E  C09B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 15657  001362  C09C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 15658  001366  C09D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 15659  00136A  C09E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 15660  00136E  ECA9  F019         	call	i2___flmul	;wreg free
 15661  001372  C00F  F02C         	movff	?i2___flmul,i2___flge@ff2
 15662  001376  C010  F02D         	movff	?i2___flmul+1,i2___flge@ff2+1
 15663  00137A  C011  F02E         	movff	?i2___flmul+2,i2___flge@ff2+2
 15664  00137E  C012  F02F         	movff	?i2___flmul+3,i2___flge@ff2+3
 15665  001382  ECAF  F02A         	call	i2___flge	;wreg free
 15666  001386  A0D8               	btfss	status,0,c
 15667  001388  D01F               	goto	i2l6202
 15668  00138A  D7BC               	goto	i2l6192
 15669  00138C                     i2l6198:
 15670                           
 15671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
 15672  00138C  C09B  F028         	movff	i2efgtoa@u,i2___fldiv@b
 15673  001390  C09C  F029         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 15674  001394  C09D  F02A         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 15675  001398  C09E  F02B         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 15676  00139C  0E00               	movlw	0
 15677  00139E  6E2C               	movwf	i2___fldiv@a,c
 15678  0013A0  0E00               	movlw	0
 15679  0013A2  6E2D               	movwf	i2___fldiv@a+1,c
 15680  0013A4  0E20               	movlw	32
 15681  0013A6  6E2E               	movwf	i2___fldiv@a+2,c
 15682  0013A8  0E41               	movlw	65
 15683  0013AA  6E2F               	movwf	i2___fldiv@a+3,c
 15684  0013AC  ECFF  F020         	call	i2___fldiv	;wreg free
 15685  0013B0  C028  F09B         	movff	?i2___fldiv,i2efgtoa@u
 15686  0013B4  C029  F09C         	movff	?i2___fldiv+1,i2efgtoa@u+1
 15687  0013B8  C02A  F09D         	movff	?i2___fldiv+2,i2efgtoa@u+2
 15688  0013BC  C02B  F09E         	movff	?i2___fldiv+3,i2efgtoa@u+3
 15689                           
 15690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
 15691  0013C0  0100               	movlb	0	; () banked
 15692  0013C2  0797               	decf	i2efgtoa@e& (0+255),f,b
 15693  0013C4  A0D8               	btfss	status,0,c
 15694  0013C6  0798               	decf	(i2efgtoa@e+1)& (0+255),f,b
 15695  0013C8                     i2l6202:
 15696                           
 15697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
 15698  0013C8  C093  F028         	movff	i2efgtoa@g,i2___flge@ff1
 15699  0013CC  C094  F029         	movff	i2efgtoa@g+1,i2___flge@ff1+1
 15700  0013D0  C095  F02A         	movff	i2efgtoa@g+2,i2___flge@ff1+2
 15701  0013D4  C096  F02B         	movff	i2efgtoa@g+3,i2___flge@ff1+3
 15702  0013D8  C09B  F02C         	movff	i2efgtoa@u,i2___flge@ff2
 15703  0013DC  C09C  F02D         	movff	i2efgtoa@u+1,i2___flge@ff2+1
 15704  0013E0  C09D  F02E         	movff	i2efgtoa@u+2,i2___flge@ff2+2
 15705  0013E4  C09E  F02F         	movff	i2efgtoa@u+3,i2___flge@ff2+3
 15706  0013E8  ECAF  F02A         	call	i2___flge	;wreg free
 15707  0013EC  A0D8               	btfss	status,0,c
 15708  0013EE  D7CE               	goto	i2l6198
 15709  0013F0                     i2u801_40:
 15710                           
 15711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
 15712  0013F0  C066  F007         	movff	i2efgtoa@c,i2tolower@c
 15713  0013F4  6A08               	clrf	i2tolower@c+1,c
 15714  0013F6  ECFC  F032         	call	i2_tolower	;wreg free
 15715  0013FA  5007               	movf	?i2_tolower,w,c
 15716  0013FC  0100               	movlb	0	; () banked
 15717  0013FE  6F88               	movwf	i2efgtoa@mode& (0+255),b
 15718                           
 15719                           ; BSR set to: 0
 15720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
 15721  001400  C088  F085         	movff	i2efgtoa@mode,i2efgtoa@nmode
 15722                           
 15723                           ; BSR set to: 0
 15724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
 15725  001404  0E67               	movlw	103
 15726  001406  1988               	xorwf	i2efgtoa@mode& (0+255),w,b
 15727  001408  A4D8               	btfss	status,2,c
 15728  00140A  D01B               	goto	i2l6218
 15729                           
 15730                           ; BSR set to: 0
 15731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
 15732  00140C  0101               	movlb	1	; () banked
 15733  00140E  51A9               	movf	_prec& (0+255),w,b
 15734  001410  11AA               	iorwf	(_prec+1)& (0+255),w,b
 15735  001412  A4D8               	btfss	status,2,c
 15736  001414  D004               	goto	i2l6214
 15737                           
 15738                           ; BSR set to: 1
 15739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
 15740  001416  0E00               	movlw	0
 15741  001418  6FAA               	movwf	(_prec+1)& (0+255),b
 15742  00141A  0E01               	movlw	1
 15743  00141C  6FA9               	movwf	_prec& (0+255),b
 15744  00141E                     i2l6214:
 15745                           
 15746                           ; BSR set to: 1
 15747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
 15748  00141E  BFAA               	btfsc	(_prec+1)& (0+255),7,b
 15749  001420  D005               	goto	i2u804_40
 15750  001422  51AA               	movf	(_prec+1)& (0+255),w,b
 15751  001424  E109               	bnz	i2l715
 15752  001426  05A9               	decf	_prec& (0+255),w,b
 15753  001428  B0D8               	btfsc	status,0,c
 15754  00142A  D006               	goto	i2l715
 15755  00142C                     i2u804_40:
 15756                           
 15757                           ; BSR set to: 1
 15758  00142C  0E00               	movlw	0
 15759  00142E  0100               	movlb	0	; () banked
 15760  001430  6F84               	movwf	(i2efgtoa@p+1)& (0+255),b
 15761  001432  0E06               	movlw	6
 15762  001434  6F83               	movwf	i2efgtoa@p& (0+255),b
 15763  001436  D009               	goto	i2l6224
 15764  001438                     i2l715:
 15765                           
 15766                           ; BSR set to: 1
 15767  001438  C1A9  F083         	movff	_prec,i2efgtoa@p
 15768  00143C  C1AA  F084         	movff	_prec+1,i2efgtoa@p+1
 15769  001440  D004               	goto	i2l6224
 15770  001442                     i2l6218:
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
 15774  001442  0101               	movlb	1	; () banked
 15775  001444  AFAA               	btfss	(_prec+1)& (0+255),7,b
 15776  001446  D7F8               	goto	i2l715
 15777  001448  D7F1               	goto	i2u804_40
 15778  00144A                     i2l6224:
 15779                           
 15780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
 15781  00144A  0E67               	movlw	103
 15782  00144C  0100               	movlb	0	; () banked
 15783  00144E  1988               	xorwf	i2efgtoa@mode& (0+255),w,b
 15784  001450  A4D8               	btfss	status,2,c
 15785  001452  D022               	goto	i2l6234
 15786                           
 15787                           ; BSR set to: 0
 15788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
 15789  001454  AF98               	btfss	(i2efgtoa@e+1)& (0+255),7,b
 15790  001456  D006               	goto	i2u807_40
 15791  001458  0EFC               	movlw	252
 15792  00145A  5D97               	subwf	i2efgtoa@e& (0+255),w,b
 15793  00145C  0EFF               	movlw	255
 15794  00145E  5998               	subwfb	(i2efgtoa@e+1)& (0+255),w,b
 15795  001460  A0D8               	btfss	status,0,c
 15796  001462  D018               	goto	i2l6232
 15797  001464                     i2u807_40:
 15798                           
 15799                           ; BSR set to: 0
 15800  001464  0EFF               	movlw	255
 15801  001466  6E59               	movwf	??i2_efgtoa& (0+255),c
 15802  001468  0EFF               	movlw	255
 15803  00146A  6E5A               	movwf	(??i2_efgtoa+1)& (0+255),c
 15804  00146C  C083  F05B         	movff	i2efgtoa@p,??i2_efgtoa+2
 15805  001470  C084  F05C         	movff	i2efgtoa@p+1,??i2_efgtoa+3
 15806  001474  5059               	movf	??i2_efgtoa,w,c
 15807  001476  265B               	addwf	??i2_efgtoa+2,f,c
 15808  001478  505A               	movf	??i2_efgtoa+1,w,c
 15809  00147A  225C               	addwfc	??i2_efgtoa+3,f,c
 15810  00147C  5197               	movf	i2efgtoa@e& (0+255),w,b
 15811  00147E  5C5B               	subwf	??i2_efgtoa+2,w,c
 15812  001480  505C               	movf	??i2_efgtoa+3,w,c
 15813  001482  0A80               	xorlw	128
 15814  001484  6E5D               	movwf	(??i2_efgtoa+4)& (0+255),c
 15815  001486  5198               	movf	(i2efgtoa@e+1)& (0+255),w,b
 15816  001488  0A80               	xorlw	128
 15817  00148A  585D               	subwfb	(??i2_efgtoa+4)& (0+255),w,c
 15818  00148C  A0D8               	btfss	status,0,c
 15819  00148E  D002               	goto	i2l6232
 15820                           
 15821                           ; BSR set to: 0
 15822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
 15823  001490  0E66               	movlw	102
 15824  001492  D001               	goto	L17
 15825  001494                     i2l6232:
 15826                           
 15827                           ; BSR set to: 0
 15828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
 15829  001494  0E65               	movlw	101
 15830  001496                     L17:
 15831  001496  6F85               	movwf	i2efgtoa@nmode& (0+255),b
 15832  001498                     i2l6234:
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
 15836  001498  C083  F07B         	movff	i2efgtoa@p,i2efgtoa@m
 15837  00149C  C084  F07C         	movff	i2efgtoa@p+1,i2efgtoa@m+1
 15838                           
 15839                           ; BSR set to: 0
 15840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
 15841  0014A0  0E67               	movlw	103
 15842  0014A2  1988               	xorwf	i2efgtoa@mode& (0+255),w,b
 15843  0014A4  A4D8               	btfss	status,2,c
 15844  0014A6  D005               	goto	i2u811_40
 15845                           
 15846                           ; BSR set to: 0
 15847  0014A8  0E66               	movlw	102
 15848  0014AA  1985               	xorwf	i2efgtoa@nmode& (0+255),w,b
 15849  0014AC  B4D8               	btfsc	status,2,c
 15850                           
 15851                           ; BSR set to: 0
 15852  0014AE  AF98               	btfss	(i2efgtoa@e+1)& (0+255),7,b
 15853  0014B0  D002               	goto	i2l6244
 15854  0014B2                     i2u811_40:
 15855                           
 15856                           ; BSR set to: 0
 15857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
 15858  0014B2  4B7B               	infsnz	i2efgtoa@m& (0+255),f,b
 15859  0014B4  2B7C               	incf	(i2efgtoa@m+1)& (0+255),f,b
 15860  0014B6                     i2l6244:
 15861                           
 15862                           ; BSR set to: 0
 15863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
 15864  0014B6  0E66               	movlw	102
 15865  0014B8  1985               	xorwf	i2efgtoa@nmode& (0+255),w,b
 15866  0014BA  A4D8               	btfss	status,2,c
 15867  0014BC  D016               	goto	i2l6254
 15868                           
 15869                           ; BSR set to: 0
 15870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
 15871  0014BE  AF98               	btfss	(i2efgtoa@e+1)& (0+255),7,b
 15872  0014C0  D00C               	goto	i2l6250
 15873                           
 15874                           ; BSR set to: 0
 15875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
 15876  0014C2  0E00               	movlw	0
 15877  0014C4  6F9B               	movwf	i2efgtoa@u& (0+255),b
 15878  0014C6  0E00               	movlw	0
 15879  0014C8  6F9C               	movwf	(i2efgtoa@u+1)& (0+255),b
 15880  0014CA  0E80               	movlw	128
 15881  0014CC  6F9D               	movwf	(i2efgtoa@u+2)& (0+255),b
 15882  0014CE  0E3F               	movlw	63
 15883  0014D0  6F9E               	movwf	(i2efgtoa@u+3)& (0+255),b
 15884                           
 15885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
 15886  0014D2  0E00               	movlw	0
 15887  0014D4  6F98               	movwf	(i2efgtoa@e+1)& (0+255),b
 15888  0014D6  0E00               	movlw	0
 15889  0014D8  6F97               	movwf	i2efgtoa@e& (0+255),b
 15890  0014DA                     i2l6250:
 15891                           
 15892                           ; BSR set to: 0
 15893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
 15894  0014DA  0E67               	movlw	103
 15895  0014DC  1988               	xorwf	i2efgtoa@mode& (0+255),w,b
 15896  0014DE  B4D8               	btfsc	status,2,c
 15897  0014E0  D004               	goto	i2l6254
 15898                           
 15899                           ; BSR set to: 0
 15900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
 15901  0014E2  5197               	movf	i2efgtoa@e& (0+255),w,b
 15902  0014E4  277B               	addwf	i2efgtoa@m& (0+255),f,b
 15903  0014E6  5198               	movf	(i2efgtoa@e+1)& (0+255),w,b
 15904  0014E8  237C               	addwfc	(i2efgtoa@m+1)& (0+255),f,b
 15905  0014EA                     i2l6254:
 15906                           
 15907                           ; BSR set to: 0
 15908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
 15909  0014EA  0E00               	movlw	0
 15910  0014EC  6F92               	movwf	(i2efgtoa@i+1)& (0+255),b
 15911  0014EE  0E00               	movlw	0
 15912  0014F0  6F91               	movwf	i2efgtoa@i& (0+255),b
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
 15916  0014F2  C093  F089         	movff	i2efgtoa@g,i2efgtoa@h
 15917  0014F6  C094  F08A         	movff	i2efgtoa@g+1,i2efgtoa@h+1
 15918  0014FA  C095  F08B         	movff	i2efgtoa@g+2,i2efgtoa@h+2
 15919  0014FE  C096  F08C         	movff	i2efgtoa@g+3,i2efgtoa@h+3
 15920                           
 15921                           ; BSR set to: 0
 15922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
 15923  001502  C09B  F067         	movff	i2efgtoa@u,i2efgtoa@ou
 15924  001506  C09C  F068         	movff	i2efgtoa@u+1,i2efgtoa@ou+1
 15925  00150A  C09D  F069         	movff	i2efgtoa@u+2,i2efgtoa@ou+2
 15926  00150E  C09E  F06A         	movff	i2efgtoa@u+3,i2efgtoa@ou+3
 15927                           
 15928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 15929  001512  D07B               	goto	i2l6268
 15930  001514                     i2l6260:
 15931                           
 15932                           ; BSR set to: 0
 15933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
 15934  001514  C089  F028         	movff	i2efgtoa@h,i2___fldiv@b
 15935  001518  C08A  F029         	movff	i2efgtoa@h+1,i2___fldiv@b+1
 15936  00151C  C08B  F02A         	movff	i2efgtoa@h+2,i2___fldiv@b+2
 15937  001520  C08C  F02B         	movff	i2efgtoa@h+3,i2___fldiv@b+3
 15938  001524  C09B  F02C         	movff	i2efgtoa@u,i2___fldiv@a
 15939  001528  C09C  F02D         	movff	i2efgtoa@u+1,i2___fldiv@a+1
 15940  00152C  C09D  F02E         	movff	i2efgtoa@u+2,i2___fldiv@a+2
 15941  001530  C09E  F02F         	movff	i2efgtoa@u+3,i2___fldiv@a+3
 15942  001534  ECFF  F020         	call	i2___fldiv	;wreg free
 15943  001538  C028  F041         	movff	?i2___fldiv,i2floorf@x
 15944  00153C  C029  F042         	movff	?i2___fldiv+1,i2floorf@x+1
 15945  001540  C02A  F043         	movff	?i2___fldiv+2,i2floorf@x+2
 15946  001544  C02B  F044         	movff	?i2___fldiv+3,i2floorf@x+3
 15947  001548  EC35  F024         	call	i2_floorf	;wreg free
 15948  00154C  C041  F08D         	movff	?i2_floorf,i2efgtoa@l
 15949  001550  C042  F08E         	movff	?i2_floorf+1,i2efgtoa@l+1
 15950  001554  C043  F08F         	movff	?i2_floorf+2,i2efgtoa@l+2
 15951  001558  C044  F090         	movff	?i2_floorf+3,i2efgtoa@l+3
 15952                           
 15953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 15954  00155C  C08D  F001         	movff	i2efgtoa@l,i2___fltol@f1
 15955  001560  C08E  F002         	movff	i2efgtoa@l+1,i2___fltol@f1+1
 15956  001564  C08F  F003         	movff	i2efgtoa@l+2,i2___fltol@f1+2
 15957  001568  C090  F004         	movff	i2efgtoa@l+3,i2___fltol@f1+3
 15958  00156C  EC42  F02C         	call	i2___fltol	;wreg free
 15959  001570  C001  F07F         	movff	?i2___fltol,i2efgtoa@d
 15960  001574  C002  F080         	movff	?i2___fltol+1,i2efgtoa@d+1
 15961                           
 15962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 15963  001578  C089  F051         	movff	i2efgtoa@h,i2___flsub@b
 15964  00157C  C08A  F052         	movff	i2efgtoa@h+1,i2___flsub@b+1
 15965  001580  C08B  F053         	movff	i2efgtoa@h+2,i2___flsub@b+2
 15966  001584  C08C  F054         	movff	i2efgtoa@h+3,i2___flsub@b+3
 15967  001588  C09B  F013         	movff	i2efgtoa@u,i2___flmul@a
 15968  00158C  C09C  F014         	movff	i2efgtoa@u+1,i2___flmul@a+1
 15969  001590  C09D  F015         	movff	i2efgtoa@u+2,i2___flmul@a+2
 15970  001594  C09E  F016         	movff	i2efgtoa@u+3,i2___flmul@a+3
 15971  001598  C08D  F00F         	movff	i2efgtoa@l,i2___flmul@b
 15972  00159C  C08E  F010         	movff	i2efgtoa@l+1,i2___flmul@b+1
 15973  0015A0  C08F  F011         	movff	i2efgtoa@l+2,i2___flmul@b+2
 15974  0015A4  C090  F012         	movff	i2efgtoa@l+3,i2___flmul@b+3
 15975  0015A8  ECA9  F019         	call	i2___flmul	;wreg free
 15976  0015AC  C00F  F055         	movff	?i2___flmul,i2___flsub@a
 15977  0015B0  C010  F056         	movff	?i2___flmul+1,i2___flsub@a+1
 15978  0015B4  C011  F057         	movff	?i2___flmul+2,i2___flsub@a+2
 15979  0015B8  C012  F058         	movff	?i2___flmul+3,i2___flsub@a+3
 15980  0015BC  EC46  F033         	call	i2___flsub	;wreg free
 15981  0015C0  C051  F089         	movff	?i2___flsub,i2efgtoa@h
 15982  0015C4  C052  F08A         	movff	?i2___flsub+1,i2efgtoa@h+1
 15983  0015C8  C053  F08B         	movff	?i2___flsub+2,i2efgtoa@h+2
 15984  0015CC  C054  F08C         	movff	?i2___flsub+3,i2efgtoa@h+3
 15985                           
 15986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 15987  0015D0  C09B  F028         	movff	i2efgtoa@u,i2___fldiv@b
 15988  0015D4  C09C  F029         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 15989  0015D8  C09D  F02A         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 15990  0015DC  C09E  F02B         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 15991  0015E0  0E00               	movlw	0
 15992  0015E2  6E2C               	movwf	i2___fldiv@a,c
 15993  0015E4  0E00               	movlw	0
 15994  0015E6  6E2D               	movwf	i2___fldiv@a+1,c
 15995  0015E8  0E20               	movlw	32
 15996  0015EA  6E2E               	movwf	i2___fldiv@a+2,c
 15997  0015EC  0E41               	movlw	65
 15998  0015EE  6E2F               	movwf	i2___fldiv@a+3,c
 15999  0015F0  ECFF  F020         	call	i2___fldiv	;wreg free
 16000  0015F4  C028  F09B         	movff	?i2___fldiv,i2efgtoa@u
 16001  0015F8  C029  F09C         	movff	?i2___fldiv+1,i2efgtoa@u+1
 16002  0015FC  C02A  F09D         	movff	?i2___fldiv+2,i2efgtoa@u+2
 16003  001600  C02B  F09E         	movff	?i2___fldiv+3,i2efgtoa@u+3
 16004                           
 16005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 16006  001604  0100               	movlb	0	; () banked
 16007  001606  4B91               	infsnz	i2efgtoa@i& (0+255),f,b
 16008  001608  2B92               	incf	(i2efgtoa@i+1)& (0+255),f,b
 16009  00160A                     i2l6268:
 16010                           
 16011                           ; BSR set to: 0
 16012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 16013  00160A  517B               	movf	i2efgtoa@m& (0+255),w,b
 16014  00160C  5D91               	subwf	i2efgtoa@i& (0+255),w,b
 16015  00160E  5192               	movf	(i2efgtoa@i+1)& (0+255),w,b
 16016  001610  0A80               	xorlw	128
 16017  001612  6E59               	movwf	??i2_efgtoa& (0+255),c
 16018  001614  517C               	movf	(i2efgtoa@m+1)& (0+255),w,b
 16019  001616  0A80               	xorlw	128
 16020  001618  5859               	subwfb	??i2_efgtoa& (0+255),w,c
 16021  00161A  A0D8               	btfss	status,0,c
 16022  00161C  D77B               	goto	i2l6260
 16023                           
 16024                           ; BSR set to: 0
 16025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 16026  00161E  C09B  F00F         	movff	i2efgtoa@u,i2___flmul@b
 16027  001622  C09C  F010         	movff	i2efgtoa@u+1,i2___flmul@b+1
 16028  001626  C09D  F011         	movff	i2efgtoa@u+2,i2___flmul@b+2
 16029  00162A  C09E  F012         	movff	i2efgtoa@u+3,i2___flmul@b+3
 16030  00162E  0E00               	movlw	0
 16031  001630  6E13               	movwf	i2___flmul@a,c
 16032  001632  0E00               	movlw	0
 16033  001634  6E14               	movwf	i2___flmul@a+1,c
 16034  001636  0EA0               	movlw	160
 16035  001638  6E15               	movwf	i2___flmul@a+2,c
 16036  00163A  0E40               	movlw	64
 16037  00163C  6E16               	movwf	i2___flmul@a+3,c
 16038  00163E  ECA9  F019         	call	i2___flmul	;wreg free
 16039  001642  C00F  F08D         	movff	?i2___flmul,i2efgtoa@l
 16040  001646  C010  F08E         	movff	?i2___flmul+1,i2efgtoa@l+1
 16041  00164A  C011  F08F         	movff	?i2___flmul+2,i2efgtoa@l+2
 16042  00164E  C012  F090         	movff	?i2___flmul+3,i2efgtoa@l+3
 16043                           
 16044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 16045  001652  C089  F028         	movff	i2efgtoa@h,i2___flge@ff1
 16046  001656  C08A  F029         	movff	i2efgtoa@h+1,i2___flge@ff1+1
 16047  00165A  C08B  F02A         	movff	i2efgtoa@h+2,i2___flge@ff1+2
 16048  00165E  C08C  F02B         	movff	i2efgtoa@h+3,i2___flge@ff1+3
 16049  001662  C08D  F02C         	movff	i2efgtoa@l,i2___flge@ff2
 16050  001666  C08E  F02D         	movff	i2efgtoa@l+1,i2___flge@ff2+1
 16051  00166A  C08F  F02E         	movff	i2efgtoa@l+2,i2___flge@ff2+2
 16052  00166E  C090  F02F         	movff	i2efgtoa@l+3,i2___flge@ff2+3
 16053  001672  ECAF  F02A         	call	i2___flge	;wreg free
 16054  001676  B0D8               	btfsc	status,0,c
 16055  001678  D003               	goto	i2l6276
 16056                           
 16057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 16058  00167A  0E00               	movlw	0
 16059  00167C  0100               	movlb	0	; () banked
 16060  00167E  D018               	goto	L18
 16061  001680                     i2l6276:
 16062                           
 16063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 16064  001680  C089  F001         	movff	i2efgtoa@h,i2___fleq@ff1
 16065  001684  C08A  F002         	movff	i2efgtoa@h+1,i2___fleq@ff1+1
 16066  001688  C08B  F003         	movff	i2efgtoa@h+2,i2___fleq@ff1+2
 16067  00168C  C08C  F004         	movff	i2efgtoa@h+3,i2___fleq@ff1+3
 16068  001690  C08D  F005         	movff	i2efgtoa@l,i2___fleq@ff2
 16069  001694  C08E  F006         	movff	i2efgtoa@l+1,i2___fleq@ff2+1
 16070  001698  C08F  F007         	movff	i2efgtoa@l+2,i2___fleq@ff2+2
 16071  00169C  C090  F008         	movff	i2efgtoa@l+3,i2___fleq@ff2+3
 16072  0016A0  EC01  F030         	call	i2___fleq	;wreg free
 16073  0016A4  A0D8               	btfss	status,0,c
 16074  0016A6  D00B               	goto	i2l6282
 16075  0016A8  0100               	movlb	0	; () banked
 16076  0016AA  B17F               	btfsc	i2efgtoa@d& (0+255),0,b
 16077  0016AC  D008               	goto	i2l6282
 16078                           
 16079                           ; BSR set to: 0
 16080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 16081  0016AE  0E00               	movlw	0
 16082  0016B0                     L18:
 16083  0016B0  6F8D               	movwf	i2efgtoa@l& (0+255),b
 16084  0016B2  0E00               	movlw	0
 16085  0016B4  6F8E               	movwf	(i2efgtoa@l+1)& (0+255),b
 16086  0016B6  0E00               	movlw	0
 16087  0016B8  6F8F               	movwf	(i2efgtoa@l+2)& (0+255),b
 16088  0016BA  0E00               	movlw	0
 16089  0016BC  6F90               	movwf	(i2efgtoa@l+3)& (0+255),b
 16090  0016BE                     i2l6282:
 16091                           
 16092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 16093  0016BE  C093  F041         	movff	i2efgtoa@g,i2___fladd@b
 16094  0016C2  C094  F042         	movff	i2efgtoa@g+1,i2___fladd@b+1
 16095  0016C6  C095  F043         	movff	i2efgtoa@g+2,i2___fladd@b+2
 16096  0016CA  C096  F044         	movff	i2efgtoa@g+3,i2___fladd@b+3
 16097  0016CE  C08D  F045         	movff	i2efgtoa@l,i2___fladd@a
 16098  0016D2  C08E  F046         	movff	i2efgtoa@l+1,i2___fladd@a+1
 16099  0016D6  C08F  F047         	movff	i2efgtoa@l+2,i2___fladd@a+2
 16100  0016DA  C090  F048         	movff	i2efgtoa@l+3,i2___fladd@a+3
 16101  0016DE  ECD9  F01C         	call	i2___fladd	;wreg free
 16102  0016E2  C041  F089         	movff	?i2___fladd,i2efgtoa@h
 16103  0016E6  C042  F08A         	movff	?i2___fladd+1,i2efgtoa@h+1
 16104  0016EA  C043  F08B         	movff	?i2___fladd+2,i2efgtoa@h+2
 16105  0016EE  C044  F08C         	movff	?i2___fladd+3,i2efgtoa@h+3
 16106                           
 16107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 16108  0016F2  C067  F09B         	movff	i2efgtoa@ou,i2efgtoa@u
 16109  0016F6  C068  F09C         	movff	i2efgtoa@ou+1,i2efgtoa@u+1
 16110  0016FA  C069  F09D         	movff	i2efgtoa@ou+2,i2efgtoa@u+2
 16111  0016FE  C06A  F09E         	movff	i2efgtoa@ou+3,i2efgtoa@u+3
 16112                           
 16113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 16114  001702  0E65               	movlw	101
 16115  001704  0100               	movlb	0	; () banked
 16116  001706  1985               	xorwf	i2efgtoa@nmode& (0+255),w,b
 16117  001708  B4D8               	btfsc	status,2,c
 16118  00170A  D005               	goto	i2l6290
 16119                           
 16120                           ; BSR set to: 0
 16121  00170C  C097  F07D         	movff	i2efgtoa@e,i2efgtoa@ne
 16122  001710  C098  F07E         	movff	i2efgtoa@e+1,i2efgtoa@ne+1
 16123  001714  D004               	goto	i2l741
 16124  001716                     i2l6290:
 16125                           
 16126                           ; BSR set to: 0
 16127  001716  0E00               	movlw	0
 16128  001718  6F7E               	movwf	(i2efgtoa@ne+1)& (0+255),b
 16129  00171A  0E00               	movlw	0
 16130  00171C  6F7D               	movwf	i2efgtoa@ne& (0+255),b
 16131  00171E                     i2l741:
 16132                           
 16133                           ; BSR set to: 0
 16134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 16135  00171E  0E00               	movlw	0
 16136  001720  6F7A               	movwf	(i2efgtoa@pp+1)& (0+255),b
 16137  001722  0E00               	movlw	0
 16138  001724  6F79               	movwf	i2efgtoa@pp& (0+255),b
 16139                           
 16140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 16141  001726  0E00               	movlw	0
 16142  001728  6F78               	movwf	(i2efgtoa@t+1)& (0+255),b
 16143  00172A  0E00               	movlw	0
 16144  00172C  6F77               	movwf	i2efgtoa@t& (0+255),b
 16145                           
 16146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 16147  00172E  0E00               	movlw	0
 16148  001730  6F92               	movwf	(i2efgtoa@i+1)& (0+255),b
 16149  001732  0E00               	movlw	0
 16150  001734  6F91               	movwf	i2efgtoa@i& (0+255),b
 16151                           
 16152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 16153  001736  D0C8               	goto	i2l6340
 16154  001738                     i2l6292:
 16155                           
 16156                           ; BSR set to: 0
 16157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 16158  001738  C089  F028         	movff	i2efgtoa@h,i2___fldiv@b
 16159  00173C  C08A  F029         	movff	i2efgtoa@h+1,i2___fldiv@b+1
 16160  001740  C08B  F02A         	movff	i2efgtoa@h+2,i2___fldiv@b+2
 16161  001744  C08C  F02B         	movff	i2efgtoa@h+3,i2___fldiv@b+3
 16162  001748  C09B  F02C         	movff	i2efgtoa@u,i2___fldiv@a
 16163  00174C  C09C  F02D         	movff	i2efgtoa@u+1,i2___fldiv@a+1
 16164  001750  C09D  F02E         	movff	i2efgtoa@u+2,i2___fldiv@a+2
 16165  001754  C09E  F02F         	movff	i2efgtoa@u+3,i2___fldiv@a+3
 16166  001758  ECFF  F020         	call	i2___fldiv	;wreg free
 16167  00175C  C028  F041         	movff	?i2___fldiv,i2floorf@x
 16168  001760  C029  F042         	movff	?i2___fldiv+1,i2floorf@x+1
 16169  001764  C02A  F043         	movff	?i2___fldiv+2,i2floorf@x+2
 16170  001768  C02B  F044         	movff	?i2___fldiv+3,i2floorf@x+3
 16171  00176C  EC35  F024         	call	i2_floorf	;wreg free
 16172  001770  C041  F08D         	movff	?i2_floorf,i2efgtoa@l
 16173  001774  C042  F08E         	movff	?i2_floorf+1,i2efgtoa@l+1
 16174  001778  C043  F08F         	movff	?i2_floorf+2,i2efgtoa@l+2
 16175  00177C  C044  F090         	movff	?i2_floorf+3,i2efgtoa@l+3
 16176                           
 16177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 16178  001780  C08D  F001         	movff	i2efgtoa@l,i2___fltol@f1
 16179  001784  C08E  F002         	movff	i2efgtoa@l+1,i2___fltol@f1+1
 16180  001788  C08F  F003         	movff	i2efgtoa@l+2,i2___fltol@f1+2
 16181  00178C  C090  F004         	movff	i2efgtoa@l+3,i2___fltol@f1+3
 16182  001790  EC42  F02C         	call	i2___fltol	;wreg free
 16183  001794  C001  F07F         	movff	?i2___fltol,i2efgtoa@d
 16184  001798  C002  F080         	movff	?i2___fltol+1,i2efgtoa@d+1
 16185                           
 16186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16187  00179C  0101               	movlb	1	; () banked
 16188  00179E  B9AB               	btfsc	_flags& (0+255),4,b
 16189  0017A0  D00D               	goto	i2l6304
 16190                           
 16191                           ; BSR set to: 1
 16192  0017A2  0100               	movlb	0	; () banked
 16193  0017A4  517F               	movf	i2efgtoa@d& (0+255),w,b
 16194  0017A6  1180               	iorwf	(i2efgtoa@d+1)& (0+255),w,b
 16195  0017A8  A4D8               	btfss	status,2,c
 16196  0017AA  D008               	goto	i2l6304
 16197                           
 16198                           ; BSR set to: 0
 16199  0017AC  0E67               	movlw	103
 16200  0017AE  1988               	xorwf	i2efgtoa@mode& (0+255),w,b
 16201  0017B0  B4D8               	btfsc	status,2,c
 16202                           
 16203                           ; BSR set to: 0
 16204  0017B2  AF7E               	btfss	(i2efgtoa@ne+1)& (0+255),7,b
 16205  0017B4  D003               	goto	i2l6304
 16206                           
 16207                           ; BSR set to: 0
 16208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 16209  0017B6  4B77               	infsnz	i2efgtoa@t& (0+255),f,b
 16210  0017B8  2B78               	incf	(i2efgtoa@t+1)& (0+255),f,b
 16211                           
 16212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 16213  0017BA  D03A               	goto	i2l6332
 16214  0017BC                     i2l6304:
 16215                           
 16216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 16217  0017BC  0100               	movlb	0	; () banked
 16218  0017BE  5179               	movf	i2efgtoa@pp& (0+255),w,b
 16219  0017C0  117A               	iorwf	(i2efgtoa@pp+1)& (0+255),w,b
 16220  0017C2  B4D8               	btfsc	status,2,c
 16221                           
 16222                           ; BSR set to: 0
 16223  0017C4  AF7E               	btfss	(i2efgtoa@ne+1)& (0+255),7,b
 16224  0017C6  D022               	goto	i2l6324
 16225                           
 16226                           ; BSR set to: 0
 16227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 16228  0017C8  0E80               	movlw	low _dbuf
 16229  0017CA  2599               	addwf	i2efgtoa@n& (0+255),w,b
 16230  0017CC  6ED9               	movwf	fsr2l,c
 16231  0017CE  0E02               	movlw	high _dbuf
 16232  0017D0  219A               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16233  0017D2  6EDA               	movwf	fsr2h,c
 16234  0017D4  0E2E               	movlw	46
 16235  0017D6  6EDF               	movwf	indf2,c
 16236                           
 16237                           ; BSR set to: 0
 16238  0017D8  4B99               	infsnz	i2efgtoa@n& (0+255),f,b
 16239  0017DA  2B9A               	incf	(i2efgtoa@n+1)& (0+255),f,b
 16240                           
 16241                           ; BSR set to: 0
 16242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 16243  0017DC  0786               	decf	i2efgtoa@w& (0+255),f,b
 16244  0017DE  A0D8               	btfss	status,0,c
 16245  0017E0  0787               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16246                           
 16247                           ; BSR set to: 0
 16248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 16249  0017E2  0E00               	movlw	0
 16250  0017E4  6F7A               	movwf	(i2efgtoa@pp+1)& (0+255),b
 16251  0017E6  0E01               	movlw	1
 16252  0017E8  6F79               	movwf	i2efgtoa@pp& (0+255),b
 16253  0017EA  D010               	goto	i2l6324
 16254  0017EC                     i2l6316:
 16255                           
 16256                           ; BSR set to: 0
 16257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 16258  0017EC  0E80               	movlw	low _dbuf
 16259  0017EE  2599               	addwf	i2efgtoa@n& (0+255),w,b
 16260  0017F0  6ED9               	movwf	fsr2l,c
 16261  0017F2  0E02               	movlw	high _dbuf
 16262  0017F4  219A               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16263  0017F6  6EDA               	movwf	fsr2h,c
 16264  0017F8  0E30               	movlw	48
 16265  0017FA  6EDF               	movwf	indf2,c
 16266                           
 16267                           ; BSR set to: 0
 16268  0017FC  4B99               	infsnz	i2efgtoa@n& (0+255),f,b
 16269  0017FE  2B9A               	incf	(i2efgtoa@n+1)& (0+255),f,b
 16270                           
 16271                           ; BSR set to: 0
 16272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 16273  001800  0786               	decf	i2efgtoa@w& (0+255),f,b
 16274  001802  A0D8               	btfss	status,0,c
 16275  001804  0787               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 16279  001806  0777               	decf	i2efgtoa@t& (0+255),f,b
 16280  001808  A0D8               	btfss	status,0,c
 16281  00180A  0778               	decf	(i2efgtoa@t+1)& (0+255),f,b
 16282  00180C                     i2l6324:
 16283                           
 16284                           ; BSR set to: 0
 16285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 16286  00180C  5177               	movf	i2efgtoa@t& (0+255),w,b
 16287  00180E  1178               	iorwf	(i2efgtoa@t+1)& (0+255),w,b
 16288  001810  A4D8               	btfss	status,2,c
 16289  001812  D7EC               	goto	i2l6316
 16290                           
 16291                           ; BSR set to: 0
 16292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 16293  001814  0E80               	movlw	low _dbuf
 16294  001816  2599               	addwf	i2efgtoa@n& (0+255),w,b
 16295  001818  6ED9               	movwf	fsr2l,c
 16296  00181A  0E02               	movlw	high _dbuf
 16297  00181C  219A               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16298  00181E  6EDA               	movwf	fsr2h,c
 16299  001820  517F               	movf	i2efgtoa@d& (0+255),w,b
 16300  001822  0F30               	addlw	48
 16301  001824  6EDF               	movwf	indf2,c
 16302                           
 16303                           ; BSR set to: 0
 16304  001826  4B99               	infsnz	i2efgtoa@n& (0+255),f,b
 16305  001828  2B9A               	incf	(i2efgtoa@n+1)& (0+255),f,b
 16306                           
 16307                           ; BSR set to: 0
 16308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 16309  00182A  0786               	decf	i2efgtoa@w& (0+255),f,b
 16310  00182C  A0D8               	btfss	status,0,c
 16311  00182E  0787               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16312  001830                     i2l6332:
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 16316  001830  C089  F051         	movff	i2efgtoa@h,i2___flsub@b
 16317  001834  C08A  F052         	movff	i2efgtoa@h+1,i2___flsub@b+1
 16318  001838  C08B  F053         	movff	i2efgtoa@h+2,i2___flsub@b+2
 16319  00183C  C08C  F054         	movff	i2efgtoa@h+3,i2___flsub@b+3
 16320  001840  C09B  F013         	movff	i2efgtoa@u,i2___flmul@a
 16321  001844  C09C  F014         	movff	i2efgtoa@u+1,i2___flmul@a+1
 16322  001848  C09D  F015         	movff	i2efgtoa@u+2,i2___flmul@a+2
 16323  00184C  C09E  F016         	movff	i2efgtoa@u+3,i2___flmul@a+3
 16324  001850  C08D  F00F         	movff	i2efgtoa@l,i2___flmul@b
 16325  001854  C08E  F010         	movff	i2efgtoa@l+1,i2___flmul@b+1
 16326  001858  C08F  F011         	movff	i2efgtoa@l+2,i2___flmul@b+2
 16327  00185C  C090  F012         	movff	i2efgtoa@l+3,i2___flmul@b+3
 16328  001860  ECA9  F019         	call	i2___flmul	;wreg free
 16329  001864  C00F  F055         	movff	?i2___flmul,i2___flsub@a
 16330  001868  C010  F056         	movff	?i2___flmul+1,i2___flsub@a+1
 16331  00186C  C011  F057         	movff	?i2___flmul+2,i2___flsub@a+2
 16332  001870  C012  F058         	movff	?i2___flmul+3,i2___flsub@a+3
 16333  001874  EC46  F033         	call	i2___flsub	;wreg free
 16334  001878  C051  F089         	movff	?i2___flsub,i2efgtoa@h
 16335  00187C  C052  F08A         	movff	?i2___flsub+1,i2efgtoa@h+1
 16336  001880  C053  F08B         	movff	?i2___flsub+2,i2efgtoa@h+2
 16337  001884  C054  F08C         	movff	?i2___flsub+3,i2efgtoa@h+3
 16338                           
 16339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 16340  001888  C09B  F028         	movff	i2efgtoa@u,i2___fldiv@b
 16341  00188C  C09C  F029         	movff	i2efgtoa@u+1,i2___fldiv@b+1
 16342  001890  C09D  F02A         	movff	i2efgtoa@u+2,i2___fldiv@b+2
 16343  001894  C09E  F02B         	movff	i2efgtoa@u+3,i2___fldiv@b+3
 16344  001898  0E00               	movlw	0
 16345  00189A  6E2C               	movwf	i2___fldiv@a,c
 16346  00189C  0E00               	movlw	0
 16347  00189E  6E2D               	movwf	i2___fldiv@a+1,c
 16348  0018A0  0E20               	movlw	32
 16349  0018A2  6E2E               	movwf	i2___fldiv@a+2,c
 16350  0018A4  0E41               	movlw	65
 16351  0018A6  6E2F               	movwf	i2___fldiv@a+3,c
 16352  0018A8  ECFF  F020         	call	i2___fldiv	;wreg free
 16353  0018AC  C028  F09B         	movff	?i2___fldiv,i2efgtoa@u
 16354  0018B0  C029  F09C         	movff	?i2___fldiv+1,i2efgtoa@u+1
 16355  0018B4  C02A  F09D         	movff	?i2___fldiv+2,i2efgtoa@u+2
 16356  0018B8  C02B  F09E         	movff	?i2___fldiv+3,i2efgtoa@u+3
 16357                           
 16358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 16359  0018BC  0100               	movlb	0	; () banked
 16360  0018BE  077D               	decf	i2efgtoa@ne& (0+255),f,b
 16361  0018C0  A0D8               	btfss	status,0,c
 16362  0018C2  077E               	decf	(i2efgtoa@ne+1)& (0+255),f,b
 16363                           
 16364                           ; BSR set to: 0
 16365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 16366  0018C4  4B91               	infsnz	i2efgtoa@i& (0+255),f,b
 16367  0018C6  2B92               	incf	(i2efgtoa@i+1)& (0+255),f,b
 16368  0018C8                     i2l6340:
 16369                           
 16370                           ; BSR set to: 0
 16371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 16372  0018C8  517B               	movf	i2efgtoa@m& (0+255),w,b
 16373  0018CA  5D91               	subwf	i2efgtoa@i& (0+255),w,b
 16374  0018CC  5192               	movf	(i2efgtoa@i+1)& (0+255),w,b
 16375  0018CE  0A80               	xorlw	128
 16376  0018D0  6E59               	movwf	??i2_efgtoa& (0+255),c
 16377  0018D2  517C               	movf	(i2efgtoa@m+1)& (0+255),w,b
 16378  0018D4  0A80               	xorlw	128
 16379  0018D6  5859               	subwfb	??i2_efgtoa& (0+255),w,c
 16380  0018D8  B0D8               	btfsc	status,0,c
 16381  0018DA  D008               	goto	i2u828_40
 16382                           
 16383                           ; BSR set to: 0
 16384  0018DC  BF9A               	btfsc	(i2efgtoa@n+1)& (0+255),7,b
 16385  0018DE  D72C               	goto	i2l6292
 16386  0018E0  519A               	movf	(i2efgtoa@n+1)& (0+255),w,b
 16387  0018E2  E104               	bnz	i2u828_40
 16388  0018E4  0E4B               	movlw	75
 16389  0018E6  5D99               	subwf	i2efgtoa@n& (0+255),w,b
 16390  0018E8  A0D8               	btfss	status,0,c
 16391  0018EA  D726               	goto	i2l6292
 16392  0018EC                     i2u828_40:
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 16396  0018EC  5179               	movf	i2efgtoa@pp& (0+255),w,b
 16397  0018EE  117A               	iorwf	(i2efgtoa@pp+1)& (0+255),w,b
 16398  0018F0  A4D8               	btfss	status,2,c
 16399  0018F2  D00E               	goto	i2l6352
 16400                           
 16401                           ; BSR set to: 0
 16402  0018F4  0101               	movlb	1	; () banked
 16403  0018F6  A9AB               	btfss	_flags& (0+255),4,b
 16404  0018F8  D00B               	goto	i2l6352
 16405                           
 16406                           ; BSR set to: 1
 16407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 16408  0018FA  0E80               	movlw	low _dbuf
 16409  0018FC  0100               	movlb	0	; () banked
 16410  0018FE  2599               	addwf	i2efgtoa@n& (0+255),w,b
 16411  001900  6ED9               	movwf	fsr2l,c
 16412  001902  0E02               	movlw	high _dbuf
 16413  001904  219A               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16414  001906  6EDA               	movwf	fsr2h,c
 16415  001908  0E2E               	movlw	46
 16416  00190A  6EDF               	movwf	indf2,c
 16417                           
 16418                           ; BSR set to: 0
 16419  00190C  4B99               	infsnz	i2efgtoa@n& (0+255),f,b
 16420  00190E  2B9A               	incf	(i2efgtoa@n+1)& (0+255),f,b
 16421  001910                     i2l6352:
 16422                           
 16423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 16424  001910  0E80               	movlw	low _dbuf
 16425  001912  0100               	movlb	0	; () banked
 16426  001914  2599               	addwf	i2efgtoa@n& (0+255),w,b
 16427  001916  6ED9               	movwf	fsr2l,c
 16428  001918  0E02               	movlw	high _dbuf
 16429  00191A  219A               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16430  00191C  6EDA               	movwf	fsr2h,c
 16431  00191E  0E00               	movlw	0
 16432  001920  6EDF               	movwf	indf2,c
 16433                           
 16434                           ; BSR set to: 0
 16435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 16436  001922  0E65               	movlw	101
 16437  001924  1985               	xorwf	i2efgtoa@nmode& (0+255),w,b
 16438  001926  A4D8               	btfss	status,2,c
 16439  001928  D475               	goto	i2l6164
 16440                           
 16441                           ; BSR set to: 0
 16442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 16443  00192A  0E00               	movlw	0
 16444  00192C  6F92               	movwf	(i2efgtoa@i+1)& (0+255),b
 16445  00192E  0E4F               	movlw	79
 16446  001930  6F91               	movwf	i2efgtoa@i& (0+255),b
 16447                           
 16448                           ; BSR set to: 0
 16449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 16450  001932  0E80               	movlw	low _dbuf
 16451  001934  2591               	addwf	i2efgtoa@i& (0+255),w,b
 16452  001936  6ED9               	movwf	fsr2l,c
 16453  001938  0E02               	movlw	high _dbuf
 16454  00193A  2192               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 16455  00193C  6EDA               	movwf	fsr2h,c
 16456  00193E  0E00               	movlw	0
 16457  001940  6EDF               	movwf	indf2,c
 16458                           
 16459                           ; BSR set to: 0
 16460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 16461  001942  0E00               	movlw	0
 16462  001944  6F82               	movwf	(i2efgtoa@sign+1)& (0+255),b
 16463  001946  0E00               	movlw	0
 16464  001948  6F81               	movwf	i2efgtoa@sign& (0+255),b
 16465                           
 16466                           ; BSR set to: 0
 16467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 16468  00194A  AF98               	btfss	(i2efgtoa@e+1)& (0+255),7,b
 16469  00194C  D008               	goto	i2l6368
 16470                           
 16471                           ; BSR set to: 0
 16472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 16473  00194E  0E00               	movlw	0
 16474  001950  6F82               	movwf	(i2efgtoa@sign+1)& (0+255),b
 16475  001952  0E01               	movlw	1
 16476  001954  6F81               	movwf	i2efgtoa@sign& (0+255),b
 16477                           
 16478                           ; BSR set to: 0
 16479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 16480  001956  6D97               	negf	i2efgtoa@e& (0+255),b
 16481  001958  1F98               	comf	(i2efgtoa@e+1)& (0+255),f,b
 16482  00195A  B0D8               	btfsc	status,0,c
 16483  00195C  2B98               	incf	(i2efgtoa@e+1)& (0+255),f,b
 16484  00195E                     i2l6368:
 16485                           
 16486                           ; BSR set to: 0
 16487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 16488  00195E  0E00               	movlw	0
 16489  001960  6F84               	movwf	(i2efgtoa@p+1)& (0+255),b
 16490  001962  0E02               	movlw	2
 16491  001964  6F83               	movwf	i2efgtoa@p& (0+255),b
 16492                           
 16493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 16494  001966  D02B               	goto	i2l6380
 16495  001968                     i2l6370:
 16496                           
 16497                           ; BSR set to: 0
 16498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 16499  001968  0791               	decf	i2efgtoa@i& (0+255),f,b
 16500  00196A  A0D8               	btfss	status,0,c
 16501  00196C  0792               	decf	(i2efgtoa@i+1)& (0+255),f,b
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 16505  00196E  0E80               	movlw	low _dbuf
 16506  001970  2591               	addwf	i2efgtoa@i& (0+255),w,b
 16507  001972  6ED9               	movwf	fsr2l,c
 16508  001974  0E02               	movlw	high _dbuf
 16509  001976  2192               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 16510  001978  6EDA               	movwf	fsr2h,c
 16511  00197A  C097  F001         	movff	i2efgtoa@e,i2___awmod@dividend
 16512  00197E  C098  F002         	movff	i2efgtoa@e+1,i2___awmod@dividend+1
 16513  001982  0E00               	movlw	0
 16514  001984  6E04               	movwf	i2___awmod@divisor+1,c
 16515  001986  0E0A               	movlw	10
 16516  001988  6E03               	movwf	i2___awmod@divisor,c
 16517  00198A  ECC3  F031         	call	i2___awmod	;wreg free
 16518  00198E  5001               	movf	?i2___awmod,w,c
 16519  001990  0F30               	addlw	48
 16520  001992  6EDF               	movwf	indf2,c
 16521                           
 16522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 16523  001994  C097  F001         	movff	i2efgtoa@e,i2___awdiv@dividend
 16524  001998  C098  F002         	movff	i2efgtoa@e+1,i2___awdiv@dividend+1
 16525  00199C  0E00               	movlw	0
 16526  00199E  6E04               	movwf	i2___awdiv@divisor+1,c
 16527  0019A0  0E0A               	movlw	10
 16528  0019A2  6E03               	movwf	i2___awdiv@divisor,c
 16529  0019A4  ECCC  F030         	call	i2___awdiv	;wreg free
 16530  0019A8  C001  F097         	movff	?i2___awdiv,i2efgtoa@e
 16531  0019AC  C002  F098         	movff	?i2___awdiv+1,i2efgtoa@e+1
 16532                           
 16533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 16534  0019B0  0100               	movlb	0	; () banked
 16535  0019B2  0783               	decf	i2efgtoa@p& (0+255),f,b
 16536  0019B4  A0D8               	btfss	status,0,c
 16537  0019B6  0784               	decf	(i2efgtoa@p+1)& (0+255),f,b
 16538                           
 16539                           ; BSR set to: 0
 16540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 16541  0019B8  0786               	decf	i2efgtoa@w& (0+255),f,b
 16542  0019BA  A0D8               	btfss	status,0,c
 16543  0019BC  0787               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16544  0019BE                     i2l6380:
 16545                           
 16546                           ; BSR set to: 0
 16547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 16548  0019BE  5197               	movf	i2efgtoa@e& (0+255),w,b
 16549  0019C0  1198               	iorwf	(i2efgtoa@e+1)& (0+255),w,b
 16550  0019C2  A4D8               	btfss	status,2,c
 16551  0019C4  D7D1               	goto	i2l6370
 16552                           
 16553                           ; BSR set to: 0
 16554  0019C6  BF84               	btfsc	(i2efgtoa@p+1)& (0+255),7,b
 16555  0019C8  D005               	goto	i2u834_40
 16556  0019CA  5184               	movf	(i2efgtoa@p+1)& (0+255),w,b
 16557  0019CC  E1CD               	bnz	i2l6370
 16558  0019CE  0583               	decf	i2efgtoa@p& (0+255),w,b
 16559  0019D0  B0D8               	btfsc	status,0,c
 16560  0019D2  D7CA               	goto	i2l6370
 16561  0019D4                     i2u834_40:
 16562                           
 16563                           ; BSR set to: 0
 16564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 16565  0019D4  0791               	decf	i2efgtoa@i& (0+255),f,b
 16566  0019D6  A0D8               	btfss	status,0,c
 16567  0019D8  0792               	decf	(i2efgtoa@i+1)& (0+255),f,b
 16568                           
 16569                           ; BSR set to: 0
 16570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 16571  0019DA  5181               	movf	i2efgtoa@sign& (0+255),w,b
 16572  0019DC  1182               	iorwf	(i2efgtoa@sign+1)& (0+255),w,b
 16573  0019DE  A4D8               	btfss	status,2,c
 16574  0019E0  D004               	goto	i2l6390
 16575                           
 16576                           ; BSR set to: 0
 16577  0019E2  0E00               	movlw	0
 16578  0019E4  6F72               	movwf	(i2_efgtoa$1602+1)& (0+255),b
 16579  0019E6  0E2B               	movlw	43
 16580  0019E8  D003               	goto	L19
 16581  0019EA                     i2l6390:
 16582                           
 16583                           ; BSR set to: 0
 16584  0019EA  0E00               	movlw	0
 16585  0019EC  6F72               	movwf	(i2_efgtoa$1602+1)& (0+255),b
 16586  0019EE  0E2D               	movlw	45
 16587  0019F0                     L19:
 16588  0019F0  6F71               	movwf	i2_efgtoa$1602& (0+255),b
 16589                           
 16590                           ; BSR set to: 0
 16591  0019F2  0E80               	movlw	low _dbuf
 16592  0019F4  2591               	addwf	i2efgtoa@i& (0+255),w,b
 16593  0019F6  6ED9               	movwf	fsr2l,c
 16594  0019F8  0E02               	movlw	high _dbuf
 16595  0019FA  2192               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 16596  0019FC  6EDA               	movwf	fsr2h,c
 16597  0019FE  C071  FFDF         	movff	i2_efgtoa$1602,indf2
 16598                           
 16599                           ; BSR set to: 0
 16600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 16601  001A02  0786               	decf	i2efgtoa@w& (0+255),f,b
 16602  001A04  A0D8               	btfss	status,0,c
 16603  001A06  0787               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16607  001A08  0791               	decf	i2efgtoa@i& (0+255),f,b
 16608  001A0A  A0D8               	btfss	status,0,c
 16609  001A0C  0792               	decf	(i2efgtoa@i+1)& (0+255),f,b
 16610                           
 16611                           ; BSR set to: 0
 16612  001A0E  0EBF               	movlw	191
 16613  001A10  6E59               	movwf	??i2_efgtoa& (0+255),c
 16614  001A12  0EFF               	movlw	255
 16615  001A14  6E5A               	movwf	(??i2_efgtoa+1)& (0+255),c
 16616  001A16  5166               	movf	i2efgtoa@c& (0+255),w,b
 16617  001A18  6E5B               	movwf	(??i2_efgtoa+2)& (0+255),c
 16618  001A1A  6A5C               	clrf	(??i2_efgtoa+3)& (0+255),c
 16619  001A1C  5059               	movf	??i2_efgtoa,w,c
 16620  001A1E  265B               	addwf	??i2_efgtoa+2,f,c
 16621  001A20  505A               	movf	??i2_efgtoa+1,w,c
 16622  001A22  225C               	addwfc	??i2_efgtoa+3,f,c
 16623  001A24  505C               	movf	??i2_efgtoa+3,w,c
 16624  001A26  E106               	bnz	i2u836_40
 16625  001A28  0E1A               	movlw	26
 16626  001A2A  5C5B               	subwf	??i2_efgtoa+2,w,c
 16627  001A2C  B0D8               	btfsc	status,0,c
 16628  001A2E  D002               	goto	i2u836_40
 16629  001A30  0E01               	movlw	1
 16630  001A32  D001               	goto	i2u837_40
 16631  001A34                     i2u836_40:
 16632  001A34  0E00               	movlw	0
 16633  001A36                     i2u837_40:
 16634  001A36  6F75               	movwf	i2_efgtoa$1604& (0+255),b
 16635  001A38  6B76               	clrf	(i2_efgtoa$1604+1)& (0+255),b
 16636                           
 16637                           ; BSR set to: 0
 16638  001A3A  5175               	movf	i2_efgtoa$1604& (0+255),w,b
 16639  001A3C  1176               	iorwf	(i2_efgtoa$1604+1)& (0+255),w,b
 16640  001A3E  A4D8               	btfss	status,2,c
 16641  001A40  D004               	goto	i2l6406
 16642                           
 16643                           ; BSR set to: 0
 16644  001A42  0E00               	movlw	0
 16645  001A44  6F74               	movwf	(i2_efgtoa$1603+1)& (0+255),b
 16646  001A46  0E65               	movlw	101
 16647  001A48  D003               	goto	L20
 16648  001A4A                     i2l6406:
 16649                           
 16650                           ; BSR set to: 0
 16651  001A4A  0E00               	movlw	0
 16652  001A4C  6F74               	movwf	(i2_efgtoa$1603+1)& (0+255),b
 16653  001A4E  0E45               	movlw	69
 16654  001A50                     L20:
 16655  001A50  6F73               	movwf	i2_efgtoa$1603& (0+255),b
 16656                           
 16657                           ; BSR set to: 0
 16658  001A52  0E80               	movlw	low _dbuf
 16659  001A54  2591               	addwf	i2efgtoa@i& (0+255),w,b
 16660  001A56  6ED9               	movwf	fsr2l,c
 16661  001A58  0E02               	movlw	high _dbuf
 16662  001A5A  2192               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 16663  001A5C  6EDA               	movwf	fsr2h,c
 16664  001A5E  C073  FFDF         	movff	i2_efgtoa$1603,indf2
 16665                           
 16666                           ; BSR set to: 0
 16667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 16668  001A62  0786               	decf	i2efgtoa@w& (0+255),f,b
 16669  001A64  A0D8               	btfss	status,0,c
 16670  001A66  0787               	decf	(i2efgtoa@w+1)& (0+255),f,b
 16671                           
 16672                           ; BSR set to: 0
 16673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 16674  001A68  0E80               	movlw	low _dbuf
 16675  001A6A  2599               	addwf	i2efgtoa@n& (0+255),w,b
 16676  001A6C  6E01               	movwf	i2strcpy@dest,c
 16677  001A6E  0E02               	movlw	high _dbuf
 16678  001A70  219A               	addwfc	(i2efgtoa@n+1)& (0+255),w,b
 16679  001A72  6E02               	movwf	i2strcpy@dest+1,c
 16680  001A74  0E80               	movlw	low _dbuf
 16681  001A76  2591               	addwf	i2efgtoa@i& (0+255),w,b
 16682  001A78  6E03               	movwf	i2strcpy@src,c
 16683  001A7A  0E02               	movlw	high _dbuf
 16684  001A7C  2192               	addwfc	(i2efgtoa@i+1)& (0+255),w,b
 16685  001A7E  6E04               	movwf	i2strcpy@src+1,c
 16686  001A80  EC82  F032         	call	i2_strcpy	;wreg free
 16687  001A84  EF0A  F009         	goto	i2l6164
 16688  001A88                     __end_ofi2_efgtoa:
 16689                           	opt callstack 0
 16690                           
 16691 ;; *************** function i2_tolower *****************
 16692 ;; Defined at:
 16693 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 16694 ;; Parameters:    Size  Location     Type
 16695 ;;  c               2    6[COMRAM] int 
 16696 ;; Auto vars:     Size  Location     Type
 16697 ;;		None
 16698 ;; Return value:  Size  Location     Type
 16699 ;;                  2    6[COMRAM] int 
 16700 ;; Registers used:
 16701 ;;		wreg, status,2, status,0
 16702 ;; Tracked objects:
 16703 ;;		On entry : 0/0
 16704 ;;		On exit  : 0/0
 16705 ;;		Unchanged: 0/0
 16706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16710 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16711 ;;Total ram usage:        8 bytes
 16712 ;; Hardware stack levels used:    1
 16713 ;; Hardware stack levels required when called:    1
 16714 ;; This function calls:
 16715 ;;		i2_isupper
 16716 ;; This function is called by:
 16717 ;;		i2_efgtoa
 16718 ;;		i2_vfpfcnvrt
 16719 ;; This function uses a non-reentrant model
 16720 ;;
 16721                           
 16722                           	psect	text79
 16723  0065F8                     __ptext79:
 16724                           	opt callstack 0
 16725  0065F8                     i2_tolower:
 16726                           	opt callstack 12
 16727                           
 16728                           ;incstack = 0
 16729  0065F8  0EBF               	movlw	191
 16730  0065FA  6E09               	movwf	??i2_tolower& (0+255),c
 16731  0065FC  0EFF               	movlw	255
 16732  0065FE  6E0A               	movwf	(??i2_tolower+1)& (0+255),c
 16733  006600  C007  F00B         	movff	i2tolower@c,??i2_tolower+2
 16734  006604  C008  F00C         	movff	i2tolower@c+1,??i2_tolower+3
 16735  006608  5009               	movf	??i2_tolower,w,c
 16736  00660A  260B               	addwf	??i2_tolower+2,f,c
 16737  00660C  500A               	movf	??i2_tolower+1,w,c
 16738  00660E  220C               	addwfc	??i2_tolower+3,f,c
 16739  006610  500C               	movf	??i2_tolower+3,w,c
 16740  006612  E106               	bnz	i2u741_40
 16741  006614  0E1A               	movlw	26
 16742  006616  5C0B               	subwf	??i2_tolower+2,w,c
 16743  006618  B0D8               	btfsc	status,0,c
 16744  00661A  D002               	goto	i2u741_40
 16745  00661C  0E01               	movlw	1
 16746  00661E  D001               	goto	i2u742_40
 16747  006620                     i2u741_40:
 16748  006620  0E00               	movlw	0
 16749  006622                     i2u742_40:
 16750  006622  6E0D               	movwf	i2_tolower$2233,c
 16751  006624  6A0E               	clrf	i2_tolower$2233+1,c
 16752  006626  500D               	movf	i2_tolower$2233,w,c
 16753  006628  100E               	iorwf	i2_tolower$2233+1,w,c
 16754  00662A  B4D8               	btfsc	status,2,c
 16755  00662C  D006               	goto	i2l1644
 16756  00662E  0E20               	movlw	32
 16757  006630  1007               	iorwf	i2tolower@c,w,c
 16758  006632  6E07               	movwf	?i2_tolower,c
 16759  006634  5008               	movf	i2tolower@c+1,w,c
 16760  006636  6E08               	movwf	?i2_tolower+1,c
 16761  006638  0012               	return	
 16762  00663A                     i2l1644:
 16763  00663A  C007  F007         	movff	i2tolower@c,?i2_tolower
 16764  00663E  C008  F008         	movff	i2tolower@c+1,?i2_tolower+1
 16765  006642  0012               	return		;funcret
 16766  006644                     __end_ofi2_tolower:
 16767                           	opt callstack 0
 16768                           
 16769 ;; *************** function i2_isupper *****************
 16770 ;; Defined at:
 16771 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 16772 ;; Parameters:    Size  Location     Type
 16773 ;;  c               2    0[COMRAM] int 
 16774 ;; Auto vars:     Size  Location     Type
 16775 ;;		None
 16776 ;; Return value:  Size  Location     Type
 16777 ;;                  2    0[COMRAM] int 
 16778 ;; Registers used:
 16779 ;;		wreg, status,2, status,0
 16780 ;; Tracked objects:
 16781 ;;		On entry : 0/0
 16782 ;;		On exit  : 0/0
 16783 ;;		Unchanged: 0/0
 16784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16787 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16788 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16789 ;;Total ram usage:        6 bytes
 16790 ;; Hardware stack levels used:    1
 16791 ;; This function calls:
 16792 ;;		Nothing
 16793 ;; This function is called by:
 16794 ;;		i2_efgtoa
 16795 ;;		i2_vfpfcnvrt
 16796 ;;		i2_tolower
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           	psect	text80
 16801  00697C                     __ptext80:
 16802                           	opt callstack 0
 16803  00697C                     i2_isupper:
 16804                           	opt callstack 12
 16805                           
 16806                           ;incstack = 0
 16807  00697C  0EBF               	movlw	191
 16808  00697E  6E03               	movwf	??i2_isupper& (0+255),c
 16809  006980  0EFF               	movlw	255
 16810  006982  6E04               	movwf	(??i2_isupper+1)& (0+255),c
 16811  006984  C001  F005         	movff	i2isupper@c,??i2_isupper+2
 16812  006988  C002  F006         	movff	i2isupper@c+1,??i2_isupper+3
 16813  00698C  5003               	movf	??i2_isupper,w,c
 16814  00698E  2605               	addwf	??i2_isupper+2,f,c
 16815  006990  5004               	movf	??i2_isupper+1,w,c
 16816  006992  2206               	addwfc	??i2_isupper+3,f,c
 16817  006994  5006               	movf	??i2_isupper+3,w,c
 16818  006996  E106               	bnz	i2u636_40
 16819  006998  0E1A               	movlw	26
 16820  00699A  5C05               	subwf	??i2_isupper+2,w,c
 16821  00699C  B0D8               	btfsc	status,0,c
 16822  00699E  D002               	goto	i2u636_40
 16823  0069A0  0E01               	movlw	1
 16824  0069A2  D001               	goto	i2u637_40
 16825  0069A4                     i2u636_40:
 16826  0069A4  0E00               	movlw	0
 16827  0069A6                     i2u637_40:
 16828  0069A6  6E01               	movwf	?i2_isupper,c
 16829  0069A8  6A02               	clrf	?i2_isupper+1,c
 16830  0069AA  0012               	return		;funcret
 16831  0069AC                     __end_ofi2_isupper:
 16832                           	opt callstack 0
 16833                           
 16834 ;; *************** function i2_strcpy *****************
 16835 ;; Defined at:
 16836 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 16837 ;; Parameters:    Size  Location     Type
 16838 ;;  dest            2    0[COMRAM] PTR unsigned char 
 16839 ;;		 -> dbuf(80), 
 16840 ;;  src             2    2[COMRAM] PTR const unsigned char 
 16841 ;;		 -> STR_21(4), STR_20(4), STR_17(4), STR_16(4), 
 16842 ;;		 -> dbuf(80), 
 16843 ;; Auto vars:     Size  Location     Type
 16844 ;;  strcpy          2    8[COMRAM] PTR unsigned char 
 16845 ;;		 -> dbuf(80), 
 16846 ;;  strcpy          2    6[COMRAM] PTR const unsigned char 
 16847 ;;		 -> STR_21(4), STR_20(4), STR_17(4), STR_16(4), 
 16848 ;;		 -> dbuf(80), 
 16849 ;; Return value:  Size  Location     Type
 16850 ;;                  2    0[COMRAM] PTR unsigned char 
 16851 ;; Registers used:
 16852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16853 ;; Tracked objects:
 16854 ;;		On entry : 0/0
 16855 ;;		On exit  : 0/0
 16856 ;;		Unchanged: 0/0
 16857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16859 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16861 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16862 ;;Total ram usage:       10 bytes
 16863 ;; Hardware stack levels used:    1
 16864 ;; This function calls:
 16865 ;;		Nothing
 16866 ;; This function is called by:
 16867 ;;		i2_efgtoa
 16868 ;; This function uses a non-reentrant model
 16869 ;;
 16870                           
 16871                           	psect	text81
 16872  006504                     __ptext81:
 16873                           	opt callstack 0
 16874  006504                     i2_strcpy:
 16875                           	opt callstack 12
 16876                           
 16877                           ;incstack = 0
 16878  006504  C003  F007         	movff	i2strcpy@src,i2strcpy@s
 16879  006508  C004  F008         	movff	i2strcpy@src+1,i2strcpy@s+1
 16880  00650C  C001  F009         	movff	i2strcpy@dest,i2strcpy@d
 16881  006510  C002  F00A         	movff	i2strcpy@dest+1,i2strcpy@d+1
 16882  006514                     i2l5884:
 16883  006514  5007               	movf	i2strcpy@s,w,c
 16884  006516  6E05               	movwf	??i2_strcpy& (0+255),c
 16885  006518  5008               	movf	i2strcpy@s+1,w,c
 16886  00651A  6E06               	movwf	(??i2_strcpy+1)& (0+255),c
 16887  00651C  4A07               	infsnz	i2strcpy@s,f,c
 16888  00651E  2A08               	incf	i2strcpy@s+1,f,c
 16889  006520  C005  FFF6         	movff	??i2_strcpy,tblptrl
 16890  006524  C006  FFF7         	movff	??i2_strcpy+1,tblptrh
 16891  006528  0E00               	movlw	low (__smallconst shr (0+16))
 16892  00652A  6EF8               	movwf	tblptru,c
 16893  00652C  C009  FFD9         	movff	i2strcpy@d,fsr2l
 16894  006530  C00A  FFDA         	movff	i2strcpy@d+1,fsr2h
 16895  006534  4A09               	infsnz	i2strcpy@d,f,c
 16896  006536  2A0A               	incf	i2strcpy@d+1,f,c
 16897  006538  0E0F               	movlw	(high __ramtop+-1)
 16898  00653A  64F7               	cpfsgt	tblptrh,c
 16899  00653C  D003               	bra	i2u739_47
 16900  00653E  0008               	tblrd		*
 16901  006540  50F5               	movf	tablat,w,c
 16902  006542  D005               	bra	i2u739_40
 16903  006544                     i2u739_47:
 16904  006544  CFF6 FFE1          	movff	tblptrl,fsr1l
 16905  006548  CFF7 FFE2          	movff	tblptrh,fsr1h
 16906  00654C  50E7               	movf	indf1,w,c
 16907  00654E                     i2u739_40:
 16908  00654E  6EDF               	movwf	indf2,c
 16909  006550  50DF               	movf	indf2,w,c
 16910  006552  B4D8               	btfsc	status,2,c
 16911  006554  0012               	return	
 16912  006556  D7DE               	goto	i2l5884
 16913  006558                     __end_ofi2_strcpy:
 16914                           	opt callstack 0
 16915                           
 16916 ;; *************** function i2_pad *****************
 16917 ;; Defined at:
 16918 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 16919 ;; Parameters:    Size  Location     Type
 16920 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 16921 ;;		 -> sprintf@f(6), NULL(0), 
 16922 ;;  buf             2   20[COMRAM] PTR unsigned char 
 16923 ;;		 -> dbuf(80), 
 16924 ;;  p               2   22[COMRAM] int 
 16925 ;; Auto vars:     Size  Location     Type
 16926 ;;  pad             2   27[COMRAM] int 
 16927 ;;  pad             2   25[COMRAM] int 
 16928 ;; Return value:  Size  Location     Type
 16929 ;;                  2   18[COMRAM] int 
 16930 ;; Registers used:
 16931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16932 ;; Tracked objects:
 16933 ;;		On entry : 0/0
 16934 ;;		On exit  : 0/0
 16935 ;;		Unchanged: 0/0
 16936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16937 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16938 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16940 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16941 ;;Total ram usage:       11 bytes
 16942 ;; Hardware stack levels used:    1
 16943 ;; Hardware stack levels required when called:    4
 16944 ;; This function calls:
 16945 ;;		i2_fputc
 16946 ;;		i2_fputs
 16947 ;;		i2_strlen
 16948 ;; This function is called by:
 16949 ;;		i2_efgtoa
 16950 ;; This function uses a non-reentrant model
 16951 ;;
 16952                           
 16953                           	psect	text82
 16954  005E4E                     __ptext82:
 16955                           	opt callstack 0
 16956  005E4E                     i2_pad:
 16957                           	opt callstack 8
 16958                           
 16959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 16960                           
 16961                           ;incstack = 0
 16962  005E4E  0101               	movlb	1	; () banked
 16963  005E50  A1AB               	btfss	_flags& (0+255),0,b
 16964  005E52  D00A               	goto	i2l5348
 16965                           
 16966                           ; BSR set to: 1
 16967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 16968  005E54  C015  F00C         	movff	i2pad@buf,i2fputs@s
 16969  005E58  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 16970  005E5C  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 16971  005E60  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 16972  005E64  EC21  F034         	call	i2_fputs	;wreg free
 16973  005E68                     i2l5348:
 16974                           
 16975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 16976  005E68  BE18               	btfsc	i2pad@p+1,7,c
 16977  005E6A  D005               	goto	i2l5352
 16978  005E6C  C017  F01C         	movff	i2pad@p,i2pad@w
 16979  005E70  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
 16980  005E74  D004               	goto	i2l674
 16981  005E76                     i2l5352:
 16982  005E76  0E00               	movlw	0
 16983  005E78  6E1D               	movwf	i2pad@w+1,c
 16984  005E7A  0E00               	movlw	0
 16985  005E7C  6E1C               	movwf	i2pad@w,c
 16986  005E7E                     i2l674:
 16987                           
 16988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 16989  005E7E  0E00               	movlw	0
 16990  005E80  6E1B               	movwf	i2pad@i+1,c
 16991  005E82  0E00               	movlw	0
 16992  005E84  6E1A               	movwf	i2pad@i,c
 16993                           
 16994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 16995  005E86  D00C               	goto	i2l5358
 16996  005E88                     i2l5354:
 16997                           
 16998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 16999  005E88  0E00               	movlw	0
 17000  005E8A  6E04               	movwf	i2fputc@c+1,c
 17001  005E8C  0E20               	movlw	32
 17002  005E8E  6E03               	movwf	i2fputc@c,c
 17003  005E90  C013  F005         	movff	i2pad@fp,i2fputc@fp
 17004  005E94  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
 17005  005E98  ECEC  F02D         	call	i2_fputc	;wreg free
 17006                           
 17007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 17008  005E9C  4A1A               	infsnz	i2pad@i,f,c
 17009  005E9E  2A1B               	incf	i2pad@i+1,f,c
 17010  005EA0                     i2l5358:
 17011                           
 17012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 17013  005EA0  501C               	movf	i2pad@w,w,c
 17014  005EA2  5C1A               	subwf	i2pad@i,w,c
 17015  005EA4  501B               	movf	i2pad@i+1,w,c
 17016  005EA6  0A80               	xorlw	128
 17017  005EA8  6E19               	movwf	??i2_pad& (0+255),c
 17018  005EAA  501D               	movf	i2pad@w+1,w,c
 17019  005EAC  0A80               	xorlw	128
 17020  005EAE  5819               	subwfb	??i2_pad& (0+255),w,c
 17021  005EB0  A0D8               	btfss	status,0,c
 17022  005EB2  D7EA               	goto	i2l5354
 17023                           
 17024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 17025  005EB4  0101               	movlb	1	; () banked
 17026  005EB6  B1AB               	btfsc	_flags& (0+255),0,b
 17027  005EB8  D00A               	goto	i2l5362
 17028                           
 17029                           ; BSR set to: 1
 17030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 17031  005EBA  C015  F00C         	movff	i2pad@buf,i2fputs@s
 17032  005EBE  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 17033  005EC2  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 17034  005EC6  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 17035  005ECA  EC21  F034         	call	i2_fputs	;wreg free
 17036  005ECE                     i2l5362:
 17037                           
 17038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 17039  005ECE  C015  F001         	movff	i2pad@buf,i2strlen@s
 17040  005ED2  C016  F002         	movff	i2pad@buf+1,i2strlen@s+1
 17041  005ED6  EC47  F035         	call	i2_strlen	;wreg free
 17042  005EDA  501C               	movf	i2pad@w,w,c
 17043  005EDC  2401               	addwf	?i2_strlen,w,c
 17044  005EDE  6E13               	movwf	?i2_pad,c
 17045  005EE0  501D               	movf	i2pad@w+1,w,c
 17046  005EE2  2002               	addwfc	?i2_strlen+1,w,c
 17047  005EE4  6E14               	movwf	?i2_pad+1,c
 17048  005EE6  0012               	return		;funcret
 17049  005EE8                     __end_ofi2_pad:
 17050                           	opt callstack 0
 17051                           
 17052 ;; *************** function i2_strlen *****************
 17053 ;; Defined at:
 17054 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 17055 ;; Parameters:    Size  Location     Type
 17056 ;;  s               2    0[COMRAM] PTR const unsigned char 
 17057 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 17058 ;;		 -> dbuf(80), dataLogRead@readOutT(5), readData(4), tempRead(2), 
 17059 ;;		 -> adafruit@rh_code(4), stringArry(64), 
 17060 ;; Auto vars:     Size  Location     Type
 17061 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
 17062 ;;		 -> i2stoa@nuls(7), ?_printf(2), ?_sprintf(2), stoa@nuls(7), 
 17063 ;;		 -> dbuf(80), dataLogRead@readOutT(5), readData(4), tempRead(2), 
 17064 ;;		 -> adafruit@rh_code(4), stringArry(64), 
 17065 ;; Return value:  Size  Location     Type
 17066 ;;                  2    0[COMRAM] unsigned int 
 17067 ;; Registers used:
 17068 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17069 ;; Tracked objects:
 17070 ;;		On entry : 0/0
 17071 ;;		On exit  : 0/0
 17072 ;;		Unchanged: 0/0
 17073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17077 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17078 ;;Total ram usage:        4 bytes
 17079 ;; Hardware stack levels used:    1
 17080 ;; This function calls:
 17081 ;;		Nothing
 17082 ;; This function is called by:
 17083 ;;		i2_pad
 17084 ;;		i2_stoa
 17085 ;; This function uses a non-reentrant model
 17086 ;;
 17087                           
 17088                           	psect	text83
 17089  006A8E                     __ptext83:
 17090                           	opt callstack 0
 17091  006A8E                     i2_strlen:
 17092                           	opt callstack 12
 17093                           
 17094                           ;incstack = 0
 17095  006A8E  C001  F003         	movff	i2strlen@s,i2strlen@a
 17096  006A92  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 17097  006A96  D002               	goto	i2l5324
 17098  006A98                     i2l5322:
 17099  006A98  4A01               	infsnz	i2strlen@s,f,c
 17100  006A9A  2A02               	incf	i2strlen@s+1,f,c
 17101  006A9C                     i2l5324:
 17102  006A9C  C001  FFD9         	movff	i2strlen@s,fsr2l
 17103  006AA0  C002  FFDA         	movff	i2strlen@s+1,fsr2h
 17104  006AA4  50DF               	movf	indf2,w,c
 17105  006AA6  A4D8               	btfss	status,2,c
 17106  006AA8  D7F7               	goto	i2l5322
 17107  006AAA  5003               	movf	i2strlen@a,w,c
 17108  006AAC  5C01               	subwf	i2strlen@s,w,c
 17109  006AAE  6E01               	movwf	?i2_strlen,c
 17110  006AB0  5004               	movf	i2strlen@a+1,w,c
 17111  006AB2  5802               	subwfb	i2strlen@s+1,w,c
 17112  006AB4  6E02               	movwf	?i2_strlen+1,c
 17113  006AB6  0012               	return		;funcret
 17114  006AB8                     __end_ofi2_strlen:
 17115                           	opt callstack 0
 17116                           
 17117 ;; *************** function i2_fputs *****************
 17118 ;; Defined at:
 17119 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 17120 ;; Parameters:    Size  Location     Type
 17121 ;;  s               2   11[COMRAM] PTR const unsigned char 
 17122 ;;		 -> dbuf(80), 
 17123 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 17124 ;;		 -> sprintf@f(6), NULL(0), 
 17125 ;; Auto vars:     Size  Location     Type
 17126 ;;  fputs           2   16[COMRAM] int 
 17127 ;;  fputs           1   15[COMRAM] unsigned char 
 17128 ;; Return value:  Size  Location     Type
 17129 ;;                  2   11[COMRAM] int 
 17130 ;; Registers used:
 17131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17132 ;; Tracked objects:
 17133 ;;		On entry : 0/0
 17134 ;;		On exit  : 0/0
 17135 ;;		Unchanged: 0/0
 17136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17138 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17140 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17141 ;;Total ram usage:        7 bytes
 17142 ;; Hardware stack levels used:    1
 17143 ;; Hardware stack levels required when called:    3
 17144 ;; This function calls:
 17145 ;;		i2_fputc
 17146 ;; This function is called by:
 17147 ;;		i2_pad
 17148 ;; This function uses a non-reentrant model
 17149 ;;
 17150                           
 17151                           	psect	text84
 17152  006842                     __ptext84:
 17153                           	opt callstack 0
 17154  006842                     i2_fputs:
 17155                           	opt callstack 8
 17156                           
 17157                           ;incstack = 0
 17158  006842  0E00               	movlw	0
 17159  006844  6E12               	movwf	i2fputs@i+1,c
 17160  006846  0E00               	movlw	0
 17161  006848  6E11               	movwf	i2fputs@i,c
 17162  00684A  D00B               	goto	i2l5318
 17163  00684C                     i2l5314:
 17164  00684C  C010  F003         	movff	i2fputs@c,i2fputc@c
 17165  006850  6A04               	clrf	i2fputc@c+1,c
 17166  006852  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
 17167  006856  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
 17168  00685A  ECEC  F02D         	call	i2_fputc	;wreg free
 17169  00685E  4A11               	infsnz	i2fputs@i,f,c
 17170  006860  2A12               	incf	i2fputs@i+1,f,c
 17171  006862                     i2l5318:
 17172  006862  5011               	movf	i2fputs@i,w,c
 17173  006864  240C               	addwf	i2fputs@s,w,c
 17174  006866  6ED9               	movwf	fsr2l,c
 17175  006868  5012               	movf	i2fputs@i+1,w,c
 17176  00686A  200D               	addwfc	i2fputs@s+1,w,c
 17177  00686C  6EDA               	movwf	fsr2h,c
 17178  00686E  50DF               	movf	indf2,w,c
 17179  006870  6E10               	movwf	i2fputs@c,c
 17180  006872  5010               	movf	i2fputs@c,w,c
 17181  006874  B4D8               	btfsc	status,2,c
 17182  006876  0012               	return	
 17183  006878  D7E9               	goto	i2l5314
 17184  00687A                     __end_ofi2_fputs:
 17185                           	opt callstack 0
 17186                           
 17187 ;; *************** function i2_fputc *****************
 17188 ;; Defined at:
 17189 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 17190 ;; Parameters:    Size  Location     Type
 17191 ;;  c               2    2[COMRAM] int 
 17192 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 17193 ;;		 -> sprintf@f(6), NULL(0), 
 17194 ;; Auto vars:     Size  Location     Type
 17195 ;;		None
 17196 ;; Return value:  Size  Location     Type
 17197 ;;                  2    2[COMRAM] int 
 17198 ;; Registers used:
 17199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17200 ;; Tracked objects:
 17201 ;;		On entry : 0/0
 17202 ;;		On exit  : 0/0
 17203 ;;		Unchanged: 0/0
 17204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17207 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17208 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17209 ;;Total ram usage:        9 bytes
 17210 ;; Hardware stack levels used:    1
 17211 ;; Hardware stack levels required when called:    2
 17212 ;; This function calls:
 17213 ;;		i2_putch
 17214 ;; This function is called by:
 17215 ;;		i2_pad
 17216 ;;		i2_stoa
 17217 ;;		i2_vfpfcnvrt
 17218 ;;		i2_fputs
 17219 ;; This function uses a non-reentrant model
 17220 ;;
 17221                           
 17222                           	psect	text85
 17223  005BD8                     __ptext85:
 17224                           	opt callstack 0
 17225  005BD8                     i2_fputc:
 17226                           	opt callstack 10
 17227                           
 17228                           ;incstack = 0
 17229  005BD8  5005               	movf	i2fputc@fp,w,c
 17230  005BDA  1006               	iorwf	i2fputc@fp+1,w,c
 17231  005BDC  B4D8               	btfsc	status,2,c
 17232  005BDE  D004               	goto	i2u594_40
 17233  005BE0  5005               	movf	i2fputc@fp,w,c
 17234  005BE2  1006               	iorwf	i2fputc@fp+1,w,c
 17235  005BE4  A4D8               	btfss	status,2,c
 17236  005BE6  D004               	goto	i2l5096
 17237  005BE8                     i2u594_40:
 17238  005BE8  5003               	movf	i2fputc@c,w,c
 17239  005BEA  EC9B  F036         	call	i2_putch
 17240  005BEE  0012               	return	
 17241  005BF0                     i2l5096:
 17242  005BF0  EE20 F004          	lfsr	2,4
 17243  005BF4  5005               	movf	i2fputc@fp,w,c
 17244  005BF6  26D9               	addwf	fsr2l,f,c
 17245  005BF8  5006               	movf	i2fputc@fp+1,w,c
 17246  005BFA  22DA               	addwfc	fsr2h,f,c
 17247  005BFC  50DE               	movf	postinc2,w,c
 17248  005BFE  10DE               	iorwf	postinc2,w,c
 17249  005C00  B4D8               	btfsc	status,2,c
 17250  005C02  D016               	goto	i2u596_40
 17251  005C04  EE20 F004          	lfsr	2,4
 17252  005C08  5005               	movf	i2fputc@fp,w,c
 17253  005C0A  26D9               	addwf	fsr2l,f,c
 17254  005C0C  5006               	movf	i2fputc@fp+1,w,c
 17255  005C0E  22DA               	addwfc	fsr2h,f,c
 17256  005C10  EE10 F002          	lfsr	1,2
 17257  005C14  5005               	movf	i2fputc@fp,w,c
 17258  005C16  26E1               	addwf	fsr1l,f,c
 17259  005C18  5006               	movf	i2fputc@fp+1,w,c
 17260  005C1A  22E2               	addwfc	fsr1h,f,c
 17261  005C1C  50DE               	movf	postinc2,w,c
 17262  005C1E  5CE6               	subwf	postinc1,w,c
 17263  005C20  50E6               	movf	postinc1,w,c
 17264  005C22  0A80               	xorlw	128
 17265  005C24  6E0B               	movwf	(??i2_fputc+4)& (0+255),c
 17266  005C26  50DE               	movf	postinc2,w,c
 17267  005C28  0A80               	xorlw	128
 17268  005C2A  580B               	subwfb	(??i2_fputc+4)& (0+255),w,c
 17269  005C2C  B0D8               	btfsc	status,0,c
 17270  005C2E  0012               	return	
 17271  005C30                     i2u596_40:
 17272  005C30  EE20 F002          	lfsr	2,2
 17273  005C34  5005               	movf	i2fputc@fp,w,c
 17274  005C36  26D9               	addwf	fsr2l,f,c
 17275  005C38  5006               	movf	i2fputc@fp+1,w,c
 17276  005C3A  22DA               	addwfc	fsr2h,f,c
 17277  005C3C  CFDE F007          	movff	postinc2,??i2_fputc
 17278  005C40  CFDD F008          	movff	postdec2,??i2_fputc+1
 17279  005C44  C005  FFD9         	movff	i2fputc@fp,fsr2l
 17280  005C48  C006  FFDA         	movff	i2fputc@fp+1,fsr2h
 17281  005C4C  CFDE F009          	movff	postinc2,??i2_fputc+2
 17282  005C50  CFDD F00A          	movff	postdec2,??i2_fputc+3
 17283  005C54  5007               	movf	??i2_fputc,w,c
 17284  005C56  2409               	addwf	??i2_fputc+2,w,c
 17285  005C58  6ED9               	movwf	fsr2l,c
 17286  005C5A  5008               	movf	??i2_fputc+1,w,c
 17287  005C5C  200A               	addwfc	??i2_fputc+3,w,c
 17288  005C5E  6EDA               	movwf	fsr2h,c
 17289  005C60  C003  FFDF         	movff	i2fputc@c,indf2
 17290  005C64  EE20 F002          	lfsr	2,2
 17291  005C68  5005               	movf	i2fputc@fp,w,c
 17292  005C6A  26D9               	addwf	fsr2l,f,c
 17293  005C6C  5006               	movf	i2fputc@fp+1,w,c
 17294  005C6E  22DA               	addwfc	fsr2h,f,c
 17295  005C70  2ADE               	incf	postinc2,f,c
 17296  005C72  0E00               	movlw	0
 17297  005C74  22DD               	addwfc	postdec2,f,c
 17298  005C76  0012               	return		;funcret
 17299  005C78                     __end_ofi2_fputc:
 17300                           	opt callstack 0
 17301                           
 17302 ;; *************** function i2_putch *****************
 17303 ;; Defined at:
 17304 ;;		line 201 in file "mcc_generated_files/eusart1.c"
 17305 ;; Parameters:    Size  Location     Type
 17306 ;;  txData          1    wreg     unsigned char 
 17307 ;; Auto vars:     Size  Location     Type
 17308 ;;  txData          1    1[COMRAM] unsigned char 
 17309 ;; Return value:  Size  Location     Type
 17310 ;;                  1    wreg      void 
 17311 ;; Registers used:
 17312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17313 ;; Tracked objects:
 17314 ;;		On entry : 0/0
 17315 ;;		On exit  : 0/0
 17316 ;;		Unchanged: 0/0
 17317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17322 ;;Total ram usage:        1 bytes
 17323 ;; Hardware stack levels used:    1
 17324 ;; Hardware stack levels required when called:    1
 17325 ;; This function calls:
 17326 ;;		i2_EUSART1_Write
 17327 ;; This function is called by:
 17328 ;;		i2_fputc
 17329 ;; This function uses a non-reentrant model
 17330 ;;
 17331                           
 17332                           	psect	text86
 17333  006D36                     __ptext86:
 17334                           	opt callstack 0
 17335  006D36                     i2_putch:
 17336                           	opt callstack 10
 17337                           
 17338                           ;incstack = 0
 17339                           ;i2putch@txData stored from wreg
 17340  006D36  6E02               	movwf	i2putch@txData,c
 17341                           
 17342                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
 17343  006D38  5002               	movf	i2putch@txData,w,c
 17344  006D3A  EC3D  F034         	call	i2_EUSART1_Write
 17345  006D3E  0012               	return		;funcret
 17346  006D40                     __end_ofi2_putch:
 17347                           	opt callstack 0
 17348                           
 17349 ;; *************** function i2_EUSART1_Write *****************
 17350 ;; Defined at:
 17351 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 17352 ;; Parameters:    Size  Location     Type
 17353 ;;  txData          1    wreg     unsigned char 
 17354 ;; Auto vars:     Size  Location     Type
 17355 ;;  txData          1    0[COMRAM] unsigned char 
 17356 ;; Return value:  Size  Location     Type
 17357 ;;                  1    wreg      void 
 17358 ;; Registers used:
 17359 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17360 ;; Tracked objects:
 17361 ;;		On entry : 0/0
 17362 ;;		On exit  : 0/0
 17363 ;;		Unchanged: 0/0
 17364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17369 ;;Total ram usage:        1 bytes
 17370 ;; Hardware stack levels used:    1
 17371 ;; This function calls:
 17372 ;;		Nothing
 17373 ;; This function is called by:
 17374 ;;		i2_putch
 17375 ;; This function uses a non-reentrant model
 17376 ;;
 17377                           
 17378                           	psect	text87
 17379  00687A                     __ptext87:
 17380                           	opt callstack 0
 17381  00687A                     i2_EUSART1_Write:
 17382                           	opt callstack 10
 17383                           
 17384                           ;incstack = 0
 17385                           ;i2EUSART1_Write@txData stored from wreg
 17386  00687A  6E01               	movwf	i2EUSART1_Write@txData,c
 17387  00687C                     
 17388                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 17389                           
 17390                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 17391  00687C  0101               	movlb	1	; () banked
 17392  00687E  51C8               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 17393  006880  B4D8               	btfsc	status,2,c
 17394  006882  D7FC               	goto	i2l5052
 17395                           
 17396                           ; BSR set to: 1
 17397                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
 17398  006884  B89D               	btfsc	3997,4,c	;volatile
 17399  006886  D003               	goto	i2l161
 17400                           
 17401                           ; BSR set to: 1
 17402                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
 17403  006888  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 17404                           
 17405                           ;mcc_generated_files/eusart1.c: 182:     }
 17406  00688C  D010               	goto	i2l5068
 17407  00688E                     i2l161:
 17408                           
 17409                           ; BSR set to: 1
 17410                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
 17411  00688E  989D               	bcf	3997,4,c	;volatile
 17412                           
 17413                           ; BSR set to: 1
 17414                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 17415  006890  0E40               	movlw	low _eusart1TxBuffer
 17416  006892  25CA               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 17417  006894  6ED9               	movwf	fsr2l,c
 17418  006896  6ADA               	clrf	fsr2h,c
 17419  006898  0E02               	movlw	high _eusart1TxBuffer
 17420  00689A  22DA               	addwfc	fsr2h,f,c
 17421  00689C  C001  FFDF         	movff	i2EUSART1_Write@txData,indf2
 17422                           
 17423                           ; BSR set to: 1
 17424  0068A0  2BCA               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 17425                           
 17426                           ; BSR set to: 1
 17427                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 17428  0068A2  0E3F               	movlw	63
 17429  0068A4  65CA               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 17430  0068A6  D002               	goto	i2l5066
 17431                           
 17432                           ; BSR set to: 1
 17433                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 17434  0068A8  0E00               	movlw	0
 17435  0068AA  6FCA               	movwf	_eusart1TxHead& (0+255),b	;volatile
 17436  0068AC                     i2l5066:
 17437                           
 17438                           ; BSR set to: 1
 17439                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 17440  0068AC  07C8               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 17441  0068AE                     i2l5068:
 17442                           
 17443                           ; BSR set to: 1
 17444                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
 17445  0068AE  889D               	bsf	3997,4,c	;volatile
 17446                           
 17447                           ; BSR set to: 1
 17448  0068B0  0012               	return		;funcret
 17449  0068B2                     __end_ofi2_EUSART1_Write:
 17450                           	opt callstack 0
 17451                           
 17452 ;; *************** function i2_floorf *****************
 17453 ;; Defined at:
 17454 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 17455 ;; Parameters:    Size  Location     Type
 17456 ;;  x               4   64[COMRAM] float 
 17457 ;; Auto vars:     Size  Location     Type
 17458 ;;  floorf          4   80[COMRAM] struct .
 17459 ;;  floorf          4   74[COMRAM] unsigned long 
 17460 ;;  floorf          2   78[COMRAM] int 
 17461 ;; Return value:  Size  Location     Type
 17462 ;;                  4   64[COMRAM] float 
 17463 ;; Registers used:
 17464 ;;		wreg, status,2, status,0
 17465 ;; Tracked objects:
 17466 ;;		On entry : 0/0
 17467 ;;		On exit  : 0/0
 17468 ;;		Unchanged: 0/0
 17469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17471 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17472 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17473 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17474 ;;Total ram usage:       20 bytes
 17475 ;; Hardware stack levels used:    1
 17476 ;; This function calls:
 17477 ;;		Nothing
 17478 ;; This function is called by:
 17479 ;;		i2_efgtoa
 17480 ;; This function uses a non-reentrant model
 17481 ;;
 17482                           
 17483                           	psect	text88
 17484  00486A                     __ptext88:
 17485                           	opt callstack 0
 17486  00486A                     i2_floorf:
 17487                           	opt callstack 12
 17488                           
 17489                           ; BSR set to: 1
 17490                           ;incstack = 0
 17491  00486A  C19D  F051         	movff	floorf@F524,i2floorf@u
 17492  00486E  C19E  F052         	movff	floorf@F524+1,i2floorf@u+1
 17493  004872  C19F  F053         	movff	floorf@F524+2,i2floorf@u+2
 17494  004876  C1A0  F054         	movff	floorf@F524+3,i2floorf@u+3
 17495  00487A  C041  F051         	movff	i2floorf@x,i2floorf@u
 17496  00487E  C042  F052         	movff	i2floorf@x+1,i2floorf@u+1
 17497  004882  C043  F053         	movff	i2floorf@x+2,i2floorf@u+2
 17498  004886  C044  F054         	movff	i2floorf@x+3,i2floorf@u+3
 17499  00488A  0E81               	movlw	129
 17500  00488C  6E45               	movwf	??i2_floorf& (0+255),c
 17501  00488E  0EFF               	movlw	255
 17502  004890  6E46               	movwf	(??i2_floorf+1)& (0+255),c
 17503  004892  C051  F047         	movff	i2floorf@u,??i2_floorf+2
 17504  004896  C052  F048         	movff	i2floorf@u+1,??i2_floorf+3
 17505  00489A  C053  F049         	movff	i2floorf@u+2,??i2_floorf+4
 17506  00489E  C054  F04A         	movff	i2floorf@u+3,??i2_floorf+5
 17507  0048A2  0E18               	movlw	24
 17508  0048A4  D005               	goto	i2u725_40
 17509  0048A6                     i2u725_45:
 17510  0048A6  90D8               	bcf	status,0,c
 17511  0048A8  324A               	rrcf	??i2_floorf+5,f,c
 17512  0048AA  3249               	rrcf	??i2_floorf+4,f,c
 17513  0048AC  3248               	rrcf	??i2_floorf+3,f,c
 17514  0048AE  3247               	rrcf	??i2_floorf+2,f,c
 17515  0048B0                     i2u725_40:
 17516  0048B0  2EE8               	decfsz	wreg,f,c
 17517  0048B2  D7F9               	goto	i2u725_45
 17518  0048B4  5047               	movf	??i2_floorf+2,w,c
 17519  0048B6  2445               	addwf	??i2_floorf,w,c
 17520  0048B8  6E4F               	movwf	i2floorf@e,c
 17521  0048BA  0E00               	movlw	0
 17522  0048BC  2046               	addwfc	??i2_floorf+1,w,c
 17523  0048BE  6E50               	movwf	i2floorf@e+1,c
 17524  0048C0  BE50               	btfsc	i2floorf@e+1,7,c
 17525  0048C2  D00F               	goto	i2l5844
 17526  0048C4  5050               	movf	i2floorf@e+1,w,c
 17527  0048C6  E104               	bnz	i2u726_40
 17528  0048C8  0E17               	movlw	23
 17529  0048CA  5C4F               	subwf	i2floorf@e,w,c
 17530  0048CC  A0D8               	btfss	status,0,c
 17531  0048CE  D009               	goto	i2l5844
 17532  0048D0                     i2u726_40:
 17533  0048D0  C041  F041         	movff	i2floorf@x,?i2_floorf
 17534  0048D4  C042  F042         	movff	i2floorf@x+1,?i2_floorf+1
 17535  0048D8  C043  F043         	movff	i2floorf@x+2,?i2_floorf+2
 17536  0048DC  C044  F044         	movff	i2floorf@x+3,?i2_floorf+3
 17537  0048E0  0012               	return	
 17538  0048E2                     i2l5844:
 17539  0048E2  BE50               	btfsc	i2floorf@e+1,7,c
 17540  0048E4  D05E               	goto	i2l5854
 17541  0048E6  C04F  F045         	movff	i2floorf@e,??i2_floorf
 17542  0048EA  0EFF               	movlw	255
 17543  0048EC  6E46               	movwf	(??i2_floorf+1)& (0+255),c
 17544  0048EE  0EFF               	movlw	255
 17545  0048F0  6E47               	movwf	(??i2_floorf+2)& (0+255),c
 17546  0048F2  0E7F               	movlw	127
 17547  0048F4  6E48               	movwf	(??i2_floorf+3)& (0+255),c
 17548  0048F6  0E00               	movlw	0
 17549  0048F8  6E49               	movwf	(??i2_floorf+4)& (0+255),c
 17550  0048FA                     i2u728_45:
 17551  0048FA  6645               	tstfsz	??i2_floorf,c
 17552  0048FC  D001               	goto	i2u728_46
 17553  0048FE  D007               	goto	i2u728_47
 17554  004900                     i2u728_46:
 17555  004900  3449               	rlcf	??i2_floorf+4,w,c
 17556  004902  3249               	rrcf	??i2_floorf+4,f,c
 17557  004904  3248               	rrcf	??i2_floorf+3,f,c
 17558  004906  3247               	rrcf	??i2_floorf+2,f,c
 17559  004908  3246               	rrcf	??i2_floorf+1,f,c
 17560  00490A  2E45               	decfsz	??i2_floorf,f,c
 17561  00490C  D7F6               	goto	i2u728_45
 17562  00490E                     i2u728_47:
 17563  00490E  C046  F04B         	movff	??i2_floorf+1,i2floorf@m
 17564  004912  C047  F04C         	movff	??i2_floorf+2,i2floorf@m+1
 17565  004916  C048  F04D         	movff	??i2_floorf+3,i2floorf@m+2
 17566  00491A  C049  F04E         	movff	??i2_floorf+4,i2floorf@m+3
 17567  00491E  504B               	movf	i2floorf@m,w,c
 17568  004920  1451               	andwf	i2floorf@u,w,c
 17569  004922  6E45               	movwf	??i2_floorf& (0+255),c
 17570  004924  504C               	movf	i2floorf@m+1,w,c
 17571  004926  1452               	andwf	i2floorf@u+1,w,c
 17572  004928  6E46               	movwf	(??i2_floorf+1)& (0+255),c
 17573  00492A  504D               	movf	i2floorf@m+2,w,c
 17574  00492C  1453               	andwf	i2floorf@u+2,w,c
 17575  00492E  6E47               	movwf	(??i2_floorf+2)& (0+255),c
 17576  004930  504E               	movf	i2floorf@m+3,w,c
 17577  004932  1454               	andwf	i2floorf@u+3,w,c
 17578  004934  6E48               	movwf	(??i2_floorf+3)& (0+255),c
 17579  004936  5045               	movf	??i2_floorf,w,c
 17580  004938  1046               	iorwf	??i2_floorf+1,w,c
 17581  00493A  1047               	iorwf	??i2_floorf+2,w,c
 17582  00493C  1048               	iorwf	??i2_floorf+3,w,c
 17583  00493E  B4D8               	btfsc	status,2,c
 17584  004940  D7C7               	goto	i2u726_40
 17585  004942  C051  F045         	movff	i2floorf@u,??i2_floorf
 17586  004946  C052  F046         	movff	i2floorf@u+1,??i2_floorf+1
 17587  00494A  C053  F047         	movff	i2floorf@u+2,??i2_floorf+2
 17588  00494E  C054  F048         	movff	i2floorf@u+3,??i2_floorf+3
 17589  004952  0E20               	movlw	32
 17590  004954  D005               	goto	i2u730_40
 17591  004956                     i2u730_45:
 17592  004956  90D8               	bcf	status,0,c
 17593  004958  3248               	rrcf	??i2_floorf+3,f,c
 17594  00495A  3247               	rrcf	??i2_floorf+2,f,c
 17595  00495C  3246               	rrcf	??i2_floorf+1,f,c
 17596  00495E  3245               	rrcf	??i2_floorf,f,c
 17597  004960                     i2u730_40:
 17598  004960  2EE8               	decfsz	wreg,f,c
 17599  004962  D7F9               	goto	i2u730_45
 17600  004964  5045               	movf	??i2_floorf,w,c
 17601  004966  1046               	iorwf	??i2_floorf+1,w,c
 17602  004968  1047               	iorwf	??i2_floorf+2,w,c
 17603  00496A  1048               	iorwf	??i2_floorf+3,w,c
 17604  00496C  B4D8               	btfsc	status,2,c
 17605  00496E  D008               	goto	i2l1550
 17606  004970  504B               	movf	i2floorf@m,w,c
 17607  004972  2651               	addwf	i2floorf@u,f,c
 17608  004974  504C               	movf	i2floorf@m+1,w,c
 17609  004976  2252               	addwfc	i2floorf@u+1,f,c
 17610  004978  504D               	movf	i2floorf@m+2,w,c
 17611  00497A  2253               	addwfc	i2floorf@u+2,f,c
 17612  00497C  504E               	movf	i2floorf@m+3,w,c
 17613  00497E  2254               	addwfc	i2floorf@u+3,f,c
 17614  004980                     i2l1550:
 17615  004980  1C4B               	comf	i2floorf@m,w,c
 17616  004982  6E45               	movwf	??i2_floorf& (0+255),c
 17617  004984  1C4C               	comf	i2floorf@m+1,w,c
 17618  004986  6E46               	movwf	(??i2_floorf+1)& (0+255),c
 17619  004988  1C4D               	comf	i2floorf@m+2,w,c
 17620  00498A  6E47               	movwf	(??i2_floorf+2)& (0+255),c
 17621  00498C  1C4E               	comf	i2floorf@m+3,w,c
 17622  00498E  6E48               	movwf	(??i2_floorf+3)& (0+255),c
 17623  004990  5045               	movf	??i2_floorf,w,c
 17624  004992  1651               	andwf	i2floorf@u,f,c
 17625  004994  5046               	movf	??i2_floorf+1,w,c
 17626  004996  1652               	andwf	i2floorf@u+1,f,c
 17627  004998  5047               	movf	??i2_floorf+2,w,c
 17628  00499A  1653               	andwf	i2floorf@u+2,f,c
 17629  00499C  5048               	movf	??i2_floorf+3,w,c
 17630  00499E  1654               	andwf	i2floorf@u+3,f,c
 17631  0049A0  D036               	goto	i2l5862
 17632  0049A2                     i2l5854:
 17633  0049A2  C051  F045         	movff	i2floorf@u,??i2_floorf
 17634  0049A6  C052  F046         	movff	i2floorf@u+1,??i2_floorf+1
 17635  0049AA  C053  F047         	movff	i2floorf@u+2,??i2_floorf+2
 17636  0049AE  C054  F048         	movff	i2floorf@u+3,??i2_floorf+3
 17637  0049B2  0E20               	movlw	32
 17638  0049B4  D005               	goto	i2u732_40
 17639  0049B6                     i2u732_45:
 17640  0049B6  90D8               	bcf	status,0,c
 17641  0049B8  3248               	rrcf	??i2_floorf+3,f,c
 17642  0049BA  3247               	rrcf	??i2_floorf+2,f,c
 17643  0049BC  3246               	rrcf	??i2_floorf+1,f,c
 17644  0049BE  3245               	rrcf	??i2_floorf,f,c
 17645  0049C0                     i2u732_40:
 17646  0049C0  2EE8               	decfsz	wreg,f,c
 17647  0049C2  D7F9               	goto	i2u732_45
 17648  0049C4  5045               	movf	??i2_floorf,w,c
 17649  0049C6  1046               	iorwf	??i2_floorf+1,w,c
 17650  0049C8  1047               	iorwf	??i2_floorf+2,w,c
 17651  0049CA  1048               	iorwf	??i2_floorf+3,w,c
 17652  0049CC  A4D8               	btfss	status,2,c
 17653  0049CE  D008               	goto	i2l5858
 17654  0049D0  0E00               	movlw	0
 17655  0049D2  6E51               	movwf	i2floorf@u,c
 17656  0049D4  0E00               	movlw	0
 17657  0049D6  6E52               	movwf	i2floorf@u+1,c
 17658  0049D8  0E00               	movlw	0
 17659  0049DA  6E53               	movwf	i2floorf@u+2,c
 17660  0049DC  0E00               	movlw	0
 17661  0049DE  D016               	goto	L21
 17662  0049E0                     i2l5858:
 17663  0049E0  90D8               	bcf	status,0,c
 17664  0049E2  3451               	rlcf	i2floorf@u,w,c
 17665  0049E4  6E45               	movwf	??i2_floorf& (0+255),c
 17666  0049E6  3452               	rlcf	i2floorf@u+1,w,c
 17667  0049E8  6E46               	movwf	(??i2_floorf+1)& (0+255),c
 17668  0049EA  3453               	rlcf	i2floorf@u+2,w,c
 17669  0049EC  6E47               	movwf	(??i2_floorf+2)& (0+255),c
 17670  0049EE  3454               	rlcf	i2floorf@u+3,w,c
 17671  0049F0  6E48               	movwf	(??i2_floorf+3)& (0+255),c
 17672  0049F2  5045               	movf	??i2_floorf,w,c
 17673  0049F4  1046               	iorwf	??i2_floorf+1,w,c
 17674  0049F6  1047               	iorwf	??i2_floorf+2,w,c
 17675  0049F8  1048               	iorwf	??i2_floorf+3,w,c
 17676  0049FA  B4D8               	btfsc	status,2,c
 17677  0049FC  D008               	goto	i2l5862
 17678  0049FE  0E00               	movlw	0
 17679  004A00  6E51               	movwf	i2floorf@u,c
 17680  004A02  0E00               	movlw	0
 17681  004A04  6E52               	movwf	i2floorf@u+1,c
 17682  004A06  0E80               	movlw	128
 17683  004A08  6E53               	movwf	i2floorf@u+2,c
 17684  004A0A  0EBF               	movlw	191
 17685  004A0C                     L21:
 17686  004A0C  6E54               	movwf	i2floorf@u+3,c
 17687  004A0E                     i2l5862:
 17688  004A0E  C051  F041         	movff	i2floorf@u,?i2_floorf
 17689  004A12  C052  F042         	movff	i2floorf@u+1,?i2_floorf+1
 17690  004A16  C053  F043         	movff	i2floorf@u+2,?i2_floorf+2
 17691  004A1A  C054  F044         	movff	i2floorf@u+3,?i2_floorf+3
 17692  004A1E  0012               	return		;funcret
 17693  004A20                     __end_ofi2_floorf:
 17694                           	opt callstack 0
 17695                           
 17696 ;; *************** function i2___fpclassifyf *****************
 17697 ;; Defined at:
 17698 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 17699 ;; Parameters:    Size  Location     Type
 17700 ;;  x               4    0[COMRAM] float 
 17701 ;; Auto vars:     Size  Location     Type
 17702 ;;  __fpclassify    4   10[COMRAM] struct .
 17703 ;;  __fpclassify    2    8[COMRAM] int 
 17704 ;; Return value:  Size  Location     Type
 17705 ;;                  2    0[COMRAM] int 
 17706 ;; Registers used:
 17707 ;;		wreg, status,2, status,0
 17708 ;; Tracked objects:
 17709 ;;		On entry : 0/0
 17710 ;;		On exit  : 0/0
 17711 ;;		Unchanged: 0/0
 17712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17714 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17715 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17716 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17717 ;;Total ram usage:       14 bytes
 17718 ;; Hardware stack levels used:    1
 17719 ;; This function calls:
 17720 ;;		Nothing
 17721 ;; This function is called by:
 17722 ;;		i2_efgtoa
 17723 ;; This function uses a non-reentrant model
 17724 ;;
 17725                           
 17726                           	psect	text89
 17727  0056FC                     __ptext89:
 17728                           	opt callstack 0
 17729  0056FC                     i2___fpclassifyf:
 17730                           	opt callstack 12
 17731                           
 17732                           ;incstack = 0
 17733  0056FC  C1A1  F00B         	movff	___fpclassifyf@F463,i2___fpclassifyf@u
 17734  005700  C1A2  F00C         	movff	___fpclassifyf@F463+1,i2___fpclassifyf@u+1
 17735  005704  C1A3  F00D         	movff	___fpclassifyf@F463+2,i2___fpclassifyf@u+2
 17736  005708  C1A4  F00E         	movff	___fpclassifyf@F463+3,i2___fpclassifyf@u+3
 17737  00570C  C001  F00B         	movff	i2___fpclassifyf@x,i2___fpclassifyf@u
 17738  005710  C002  F00C         	movff	i2___fpclassifyf@x+1,i2___fpclassifyf@u+1
 17739  005714  C003  F00D         	movff	i2___fpclassifyf@x+2,i2___fpclassifyf@u+2
 17740  005718  C004  F00E         	movff	i2___fpclassifyf@x+3,i2___fpclassifyf@u+3
 17741  00571C  C00B  F005         	movff	i2___fpclassifyf@u,??i2___fpclassifyf
 17742  005720  C00C  F006         	movff	i2___fpclassifyf@u+1,??i2___fpclassifyf+1
 17743  005724  C00D  F007         	movff	i2___fpclassifyf@u+2,??i2___fpclassifyf+2
 17744  005728  C00E  F008         	movff	i2___fpclassifyf@u+3,??i2___fpclassifyf+3
 17745  00572C  0E18               	movlw	24
 17746  00572E  D005               	goto	i2u718_40
 17747  005730                     i2u718_45:
 17748  005730  90D8               	bcf	status,0,c
 17749  005732  3208               	rrcf	??i2___fpclassifyf+3,f,c
 17750  005734  3207               	rrcf	??i2___fpclassifyf+2,f,c
 17751  005736  3206               	rrcf	??i2___fpclassifyf+1,f,c
 17752  005738  3205               	rrcf	??i2___fpclassifyf,f,c
 17753  00573A                     i2u718_40:
 17754  00573A  2EE8               	decfsz	wreg,f,c
 17755  00573C  D7F9               	goto	i2u718_45
 17756  00573E  5005               	movf	??i2___fpclassifyf,w,c
 17757  005740  6E09               	movwf	i2___fpclassifyf@e,c
 17758  005742  6A0A               	clrf	i2___fpclassifyf@e+1,c
 17759  005744  5009               	movf	i2___fpclassifyf@e,w,c
 17760  005746  100A               	iorwf	i2___fpclassifyf@e+1,w,c
 17761  005748  A4D8               	btfss	status,2,c
 17762  00574A  D019               	goto	i2l5828
 17763  00574C  90D8               	bcf	status,0,c
 17764  00574E  340B               	rlcf	i2___fpclassifyf@u,w,c
 17765  005750  6E05               	movwf	??i2___fpclassifyf& (0+255),c
 17766  005752  340C               	rlcf	i2___fpclassifyf@u+1,w,c
 17767  005754  6E06               	movwf	(??i2___fpclassifyf+1)& (0+255),c
 17768  005756  340D               	rlcf	i2___fpclassifyf@u+2,w,c
 17769  005758  6E07               	movwf	(??i2___fpclassifyf+2)& (0+255),c
 17770  00575A  340E               	rlcf	i2___fpclassifyf@u+3,w,c
 17771  00575C  6E08               	movwf	(??i2___fpclassifyf+3)& (0+255),c
 17772  00575E  5005               	movf	??i2___fpclassifyf,w,c
 17773  005760  1006               	iorwf	??i2___fpclassifyf+1,w,c
 17774  005762  1007               	iorwf	??i2___fpclassifyf+2,w,c
 17775  005764  1008               	iorwf	??i2___fpclassifyf+3,w,c
 17776  005766  A4D8               	btfss	status,2,c
 17777  005768  D005               	goto	i2l5824
 17778  00576A  0E00               	movlw	0
 17779  00576C  6E02               	movwf	?i2___fpclassifyf+1,c
 17780  00576E  0E02               	movlw	2
 17781  005770  6E01               	movwf	?i2___fpclassifyf,c
 17782  005772  0012               	return	
 17783  005774                     i2l5824:
 17784  005774  0E00               	movlw	0
 17785  005776  6E02               	movwf	?i2___fpclassifyf+1,c
 17786  005778  0E03               	movlw	3
 17787  00577A  6E01               	movwf	?i2___fpclassifyf,c
 17788  00577C  0012               	return	
 17789  00577E                     i2l5828:
 17790  00577E  2809               	incf	i2___fpclassifyf@e,w,c
 17791  005780  100A               	iorwf	i2___fpclassifyf@e+1,w,c
 17792  005782  A4D8               	btfss	status,2,c
 17793  005784  D01C               	goto	i2l5834
 17794  005786  C00B  F005         	movff	i2___fpclassifyf@u,??i2___fpclassifyf
 17795  00578A  C00C  F006         	movff	i2___fpclassifyf@u+1,??i2___fpclassifyf+1
 17796  00578E  C00D  F007         	movff	i2___fpclassifyf@u+2,??i2___fpclassifyf+2
 17797  005792  C00E  F008         	movff	i2___fpclassifyf@u+3,??i2___fpclassifyf+3
 17798  005796  0E09               	movlw	9
 17799  005798                     i2u722_45:
 17800  005798  90D8               	bcf	status,0,c
 17801  00579A  3605               	rlcf	??i2___fpclassifyf,f,c
 17802  00579C  3606               	rlcf	??i2___fpclassifyf+1,f,c
 17803  00579E  3607               	rlcf	??i2___fpclassifyf+2,f,c
 17804  0057A0  3608               	rlcf	??i2___fpclassifyf+3,f,c
 17805  0057A2  2EE8               	decfsz	wreg,f,c
 17806  0057A4  D7F9               	goto	i2u722_45
 17807  0057A6  5005               	movf	??i2___fpclassifyf,w,c
 17808  0057A8  1006               	iorwf	??i2___fpclassifyf+1,w,c
 17809  0057AA  1007               	iorwf	??i2___fpclassifyf+2,w,c
 17810  0057AC  1008               	iorwf	??i2___fpclassifyf+3,w,c
 17811  0057AE  A4D8               	btfss	status,2,c
 17812  0057B0  D002               	goto	i2u723_40
 17813  0057B2  0E01               	movlw	1
 17814  0057B4  D001               	goto	i2u724_40
 17815  0057B6                     i2u723_40:
 17816  0057B6  0E00               	movlw	0
 17817  0057B8                     i2u724_40:
 17818  0057B8  6E01               	movwf	?i2___fpclassifyf,c
 17819  0057BA  6A02               	clrf	?i2___fpclassifyf+1,c
 17820  0057BC  0012               	return	
 17821  0057BE                     i2l5834:
 17822  0057BE  0E00               	movlw	0
 17823  0057C0  6E02               	movwf	?i2___fpclassifyf+1,c
 17824  0057C2  0E04               	movlw	4
 17825  0057C4  6E01               	movwf	?i2___fpclassifyf,c
 17826  0057C6  0012               	return		;funcret
 17827  0057C8                     __end_ofi2___fpclassifyf:
 17828                           	opt callstack 0
 17829                           
 17830 ;; *************** function i2___fltol *****************
 17831 ;; Defined at:
 17832 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 17833 ;; Parameters:    Size  Location     Type
 17834 ;;  f1              4    0[COMRAM] int 
 17835 ;; Auto vars:     Size  Location     Type
 17836 ;;  __fltol         1    9[COMRAM] unsigned char 
 17837 ;;  __fltol         1    8[COMRAM] unsigned char 
 17838 ;; Return value:  Size  Location     Type
 17839 ;;                  4    0[COMRAM] long 
 17840 ;; Registers used:
 17841 ;;		wreg, status,2, status,0
 17842 ;; Tracked objects:
 17843 ;;		On entry : 0/0
 17844 ;;		On exit  : 0/0
 17845 ;;		Unchanged: 0/0
 17846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17849 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17850 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17851 ;;Total ram usage:       10 bytes
 17852 ;; Hardware stack levels used:    1
 17853 ;; This function calls:
 17854 ;;		Nothing
 17855 ;; This function is called by:
 17856 ;;		i2_efgtoa
 17857 ;; This function uses a non-reentrant model
 17858 ;;
 17859                           
 17860                           	psect	text90
 17861  005884                     __ptext90:
 17862                           	opt callstack 0
 17863  005884                     i2___fltol:
 17864                           	opt callstack 12
 17865                           
 17866                           ;incstack = 0
 17867  005884  3403               	rlcf	i2___fltol@f1+2,w,c
 17868  005886  3404               	rlcf	i2___fltol@f1+3,w,c
 17869  005888  6E0A               	movwf	i2___fltol@exp1,c
 17870  00588A  500A               	movf	i2___fltol@exp1,w,c
 17871  00588C  A4D8               	btfss	status,2,c
 17872  00588E  D009               	goto	i2l5504
 17873  005890                     i2u669_40:
 17874  005890  0E00               	movlw	0
 17875  005892  6E01               	movwf	?i2___fltol,c
 17876  005894  0E00               	movlw	0
 17877  005896  6E02               	movwf	?i2___fltol+1,c
 17878  005898  0E00               	movlw	0
 17879  00589A  6E03               	movwf	?i2___fltol+2,c
 17880  00589C  0E00               	movlw	0
 17881  00589E  6E04               	movwf	?i2___fltol+3,c
 17882  0058A0  0012               	return	
 17883  0058A2                     i2l5504:
 17884  0058A2  C001  F005         	movff	i2___fltol@f1,??i2___fltol
 17885  0058A6  C002  F006         	movff	i2___fltol@f1+1,??i2___fltol+1
 17886  0058AA  C003  F007         	movff	i2___fltol@f1+2,??i2___fltol+2
 17887  0058AE  C004  F008         	movff	i2___fltol@f1+3,??i2___fltol+3
 17888  0058B2  0E20               	movlw	32
 17889  0058B4  D005               	goto	i2u670_40
 17890  0058B6                     i2u670_45:
 17891  0058B6  90D8               	bcf	status,0,c
 17892  0058B8  3208               	rrcf	??i2___fltol+3,f,c
 17893  0058BA  3207               	rrcf	??i2___fltol+2,f,c
 17894  0058BC  3206               	rrcf	??i2___fltol+1,f,c
 17895  0058BE  3205               	rrcf	??i2___fltol,f,c
 17896  0058C0                     i2u670_40:
 17897  0058C0  2EE8               	decfsz	wreg,f,c
 17898  0058C2  D7F9               	goto	i2u670_45
 17899  0058C4  5005               	movf	??i2___fltol,w,c
 17900  0058C6  6E09               	movwf	i2___fltol@sign1,c
 17901  0058C8  8E03               	bsf	i2___fltol@f1+2,7,c
 17902  0058CA  0EFF               	movlw	255
 17903  0058CC  1601               	andwf	i2___fltol@f1,f,c
 17904  0058CE  0EFF               	movlw	255
 17905  0058D0  1602               	andwf	i2___fltol@f1+1,f,c
 17906  0058D2  0EFF               	movlw	255
 17907  0058D4  1603               	andwf	i2___fltol@f1+2,f,c
 17908  0058D6  0E00               	movlw	0
 17909  0058D8  1604               	andwf	i2___fltol@f1+3,f,c
 17910  0058DA  0E96               	movlw	150
 17911  0058DC  5E0A               	subwf	i2___fltol@exp1,f,c
 17912  0058DE  AE0A               	btfss	i2___fltol@exp1,7,c
 17913  0058E0  D00D               	goto	i2l5524
 17914  0058E2  500A               	movf	i2___fltol@exp1,w,c
 17915  0058E4  0A80               	xorlw	128
 17916  0058E6  0F97               	addlw	151
 17917  0058E8  A0D8               	btfss	status,0,c
 17918  0058EA  D7D2               	goto	i2u669_40
 17919  0058EC                     i2l5520:
 17920  0058EC  90D8               	bcf	status,0,c
 17921  0058EE  3204               	rrcf	i2___fltol@f1+3,f,c
 17922  0058F0  3203               	rrcf	i2___fltol@f1+2,f,c
 17923  0058F2  3202               	rrcf	i2___fltol@f1+1,f,c
 17924  0058F4  3201               	rrcf	i2___fltol@f1,f,c
 17925  0058F6  3E0A               	incfsz	i2___fltol@exp1,f,c
 17926  0058F8  D7F9               	goto	i2l5520
 17927  0058FA  D00D               	goto	i2u674_40
 17928  0058FC                     i2l5524:
 17929  0058FC  0E1F               	movlw	31
 17930  0058FE  640A               	cpfsgt	i2___fltol@exp1,c
 17931  005900  D007               	goto	i2l5532
 17932  005902  D7C6               	goto	i2u669_40
 17933  005904                     i2l5530:
 17934  005904  90D8               	bcf	status,0,c
 17935  005906  3601               	rlcf	i2___fltol@f1,f,c
 17936  005908  3602               	rlcf	i2___fltol@f1+1,f,c
 17937  00590A  3603               	rlcf	i2___fltol@f1+2,f,c
 17938  00590C  3604               	rlcf	i2___fltol@f1+3,f,c
 17939  00590E  060A               	decf	i2___fltol@exp1,f,c
 17940  005910                     i2l5532:
 17941  005910  500A               	movf	i2___fltol@exp1,w,c
 17942  005912  A4D8               	btfss	status,2,c
 17943  005914  D7F7               	goto	i2l5530
 17944  005916                     i2u674_40:
 17945  005916  5009               	movf	i2___fltol@sign1,w,c
 17946  005918  B4D8               	btfsc	status,2,c
 17947  00591A  D008               	goto	i2l5538
 17948  00591C  1E04               	comf	i2___fltol@f1+3,f,c
 17949  00591E  1E03               	comf	i2___fltol@f1+2,f,c
 17950  005920  1E02               	comf	i2___fltol@f1+1,f,c
 17951  005922  6C01               	negf	i2___fltol@f1,c
 17952  005924  0E00               	movlw	0
 17953  005926  2202               	addwfc	i2___fltol@f1+1,f,c
 17954  005928  2203               	addwfc	i2___fltol@f1+2,f,c
 17955  00592A  2204               	addwfc	i2___fltol@f1+3,f,c
 17956  00592C                     i2l5538:
 17957  00592C  C001  F001         	movff	i2___fltol@f1,?i2___fltol
 17958  005930  C002  F002         	movff	i2___fltol@f1+1,?i2___fltol+1
 17959  005934  C003  F003         	movff	i2___fltol@f1+2,?i2___fltol+2
 17960  005938  C004  F004         	movff	i2___fltol@f1+3,?i2___fltol+3
 17961  00593C  0012               	return		;funcret
 17962  00593E                     __end_ofi2___fltol:
 17963                           	opt callstack 0
 17964                           
 17965 ;; *************** function i2___flsub *****************
 17966 ;; Defined at:
 17967 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17968 ;; Parameters:    Size  Location     Type
 17969 ;;  b               4   80[COMRAM] long 
 17970 ;;  a               4   84[COMRAM] long 
 17971 ;; Auto vars:     Size  Location     Type
 17972 ;;		None
 17973 ;; Return value:  Size  Location     Type
 17974 ;;                  4   80[COMRAM] long 
 17975 ;; Registers used:
 17976 ;;		wreg, status,2, status,0, cstack
 17977 ;; Tracked objects:
 17978 ;;		On entry : 0/0
 17979 ;;		On exit  : 0/0
 17980 ;;		Unchanged: 0/0
 17981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17982 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17985 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17986 ;;Total ram usage:        8 bytes
 17987 ;; Hardware stack levels used:    1
 17988 ;; Hardware stack levels required when called:    1
 17989 ;; This function calls:
 17990 ;;		i2___fladd
 17991 ;; This function is called by:
 17992 ;;		i2_efgtoa
 17993 ;; This function uses a non-reentrant model
 17994 ;;
 17995                           
 17996                           	psect	text91
 17997  00668C                     __ptext91:
 17998                           	opt callstack 0
 17999  00668C                     i2___flsub:
 18000                           	opt callstack 11
 18001                           
 18002                           ;incstack = 0
 18003  00668C  0E00               	movlw	0
 18004  00668E  1A55               	xorwf	i2___flsub@a,f,c
 18005  006690  0E00               	movlw	0
 18006  006692  1A56               	xorwf	i2___flsub@a+1,f,c
 18007  006694  0E00               	movlw	0
 18008  006696  1A57               	xorwf	i2___flsub@a+2,f,c
 18009  006698  0E80               	movlw	128
 18010  00669A  1A58               	xorwf	i2___flsub@a+3,f,c
 18011  00669C  C051  F041         	movff	i2___flsub@b,i2___fladd@b
 18012  0066A0  C052  F042         	movff	i2___flsub@b+1,i2___fladd@b+1
 18013  0066A4  C053  F043         	movff	i2___flsub@b+2,i2___fladd@b+2
 18014  0066A8  C054  F044         	movff	i2___flsub@b+3,i2___fladd@b+3
 18015  0066AC  C055  F045         	movff	i2___flsub@a,i2___fladd@a
 18016  0066B0  C056  F046         	movff	i2___flsub@a+1,i2___fladd@a+1
 18017  0066B4  C057  F047         	movff	i2___flsub@a+2,i2___fladd@a+2
 18018  0066B8  C058  F048         	movff	i2___flsub@a+3,i2___fladd@a+3
 18019  0066BC  ECD9  F01C         	call	i2___fladd	;wreg free
 18020  0066C0  C041  F051         	movff	?i2___fladd,?i2___flsub
 18021  0066C4  C042  F052         	movff	?i2___fladd+1,?i2___flsub+1
 18022  0066C8  C043  F053         	movff	?i2___fladd+2,?i2___flsub+2
 18023  0066CC  C044  F054         	movff	?i2___fladd+3,?i2___flsub+3
 18024  0066D0  0012               	return		;funcret
 18025  0066D2                     __end_ofi2___flsub:
 18026                           	opt callstack 0
 18027                           
 18028 ;; *************** function i2___fladd *****************
 18029 ;; Defined at:
 18030 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 18031 ;; Parameters:    Size  Location     Type
 18032 ;;  b               4   64[COMRAM] long 
 18033 ;;  a               4   68[COMRAM] long 
 18034 ;; Auto vars:     Size  Location     Type
 18035 ;;  __fladd         1   79[COMRAM] unsigned char 
 18036 ;;  __fladd         1   78[COMRAM] unsigned char 
 18037 ;;  __fladd         1   77[COMRAM] unsigned char 
 18038 ;;  __fladd         1   76[COMRAM] unsigned char 
 18039 ;; Return value:  Size  Location     Type
 18040 ;;                  4   64[COMRAM] unsigned char 
 18041 ;; Registers used:
 18042 ;;		wreg, status,2, status,0
 18043 ;; Tracked objects:
 18044 ;;		On entry : 0/0
 18045 ;;		On exit  : 0/0
 18046 ;;		Unchanged: 0/0
 18047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18048 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18049 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18050 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18051 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18052 ;;Total ram usage:       16 bytes
 18053 ;; Hardware stack levels used:    1
 18054 ;; This function calls:
 18055 ;;		Nothing
 18056 ;; This function is called by:
 18057 ;;		_adafruit
 18058 ;;		_dataLogRead
 18059 ;;		i2_efgtoa
 18060 ;;		i2___flsub
 18061 ;; This function uses a non-reentrant model
 18062 ;;
 18063                           
 18064                           	psect	text92
 18065  0039B2                     __ptext92:
 18066                           	opt callstack 0
 18067  0039B2                     i2___fladd:
 18068                           	opt callstack 11
 18069                           
 18070                           ;incstack = 0
 18071  0039B2  5044               	movf	i2___fladd@b+3,w,c
 18072  0039B4  0B80               	andlw	128
 18073  0039B6  6E4D               	movwf	i2___fladd@signs,c
 18074  0039B8  5044               	movf	i2___fladd@b+3,w,c
 18075  0039BA  2444               	addwf	i2___fladd@b+3,w,c
 18076  0039BC  6E4F               	movwf	i2___fladd@bexp,c
 18077  0039BE  BE43               	btfsc	i2___fladd@b+2,7,c
 18078  0039C0  804F               	bsf	i2___fladd@bexp,0,c
 18079  0039C2  504F               	movf	i2___fladd@bexp,w,c
 18080  0039C4  B4D8               	btfsc	status,2,c
 18081  0039C6  D00D               	goto	i2l5122
 18082  0039C8  284F               	incf	i2___fladd@bexp,w,c
 18083  0039CA  A4D8               	btfss	status,2,c
 18084  0039CC  D008               	goto	i2l5118
 18085  0039CE  0E00               	movlw	0
 18086  0039D0  6E41               	movwf	i2___fladd@b,c
 18087  0039D2  0E00               	movlw	0
 18088  0039D4  6E42               	movwf	i2___fladd@b+1,c
 18089  0039D6  0E00               	movlw	0
 18090  0039D8  6E43               	movwf	i2___fladd@b+2,c
 18091  0039DA  0E00               	movlw	0
 18092  0039DC  6E44               	movwf	i2___fladd@b+3,c
 18093  0039DE                     i2l5118:
 18094  0039DE  8E43               	bsf	i2___fladd@b+2,7,c
 18095  0039E0  D006               	goto	L22
 18096  0039E2                     i2l5122:
 18097  0039E2  0E00               	movlw	0
 18098  0039E4  6E41               	movwf	i2___fladd@b,c
 18099  0039E6  0E00               	movlw	0
 18100  0039E8  6E42               	movwf	i2___fladd@b+1,c
 18101  0039EA  0E00               	movlw	0
 18102  0039EC  6E43               	movwf	i2___fladd@b+2,c
 18103  0039EE                     L22:
 18104  0039EE  0E00               	movlw	0
 18105  0039F0  6E44               	movwf	i2___fladd@b+3,c
 18106  0039F2  5048               	movf	i2___fladd@a+3,w,c
 18107  0039F4  0B80               	andlw	128
 18108  0039F6  6E4E               	movwf	i2___fladd@aexp,c
 18109  0039F8  504D               	movf	i2___fladd@signs,w,c
 18110  0039FA  184E               	xorwf	i2___fladd@aexp,w,c
 18111  0039FC  A4D8               	btfss	status,2,c
 18112  0039FE  8C4D               	bsf	i2___fladd@signs,6,c
 18113  003A00  5048               	movf	i2___fladd@a+3,w,c
 18114  003A02  2448               	addwf	i2___fladd@a+3,w,c
 18115  003A04  6E4E               	movwf	i2___fladd@aexp,c
 18116  003A06  BE47               	btfsc	i2___fladd@a+2,7,c
 18117  003A08  804E               	bsf	i2___fladd@aexp,0,c
 18118  003A0A  504E               	movf	i2___fladd@aexp,w,c
 18119  003A0C  B4D8               	btfsc	status,2,c
 18120  003A0E  D00D               	goto	i2l5146
 18121  003A10  284E               	incf	i2___fladd@aexp,w,c
 18122  003A12  A4D8               	btfss	status,2,c
 18123  003A14  D008               	goto	i2l5142
 18124  003A16  0E00               	movlw	0
 18125  003A18  6E45               	movwf	i2___fladd@a,c
 18126  003A1A  0E00               	movlw	0
 18127  003A1C  6E46               	movwf	i2___fladd@a+1,c
 18128  003A1E  0E00               	movlw	0
 18129  003A20  6E47               	movwf	i2___fladd@a+2,c
 18130  003A22  0E00               	movlw	0
 18131  003A24  6E48               	movwf	i2___fladd@a+3,c
 18132  003A26                     i2l5142:
 18133  003A26  8E47               	bsf	i2___fladd@a+2,7,c
 18134  003A28  D006               	goto	L23
 18135  003A2A                     i2l5146:
 18136  003A2A  0E00               	movlw	0
 18137  003A2C  6E45               	movwf	i2___fladd@a,c
 18138  003A2E  0E00               	movlw	0
 18139  003A30  6E46               	movwf	i2___fladd@a+1,c
 18140  003A32  0E00               	movlw	0
 18141  003A34  6E47               	movwf	i2___fladd@a+2,c
 18142  003A36                     L23:
 18143  003A36  0E00               	movlw	0
 18144  003A38  6E48               	movwf	i2___fladd@a+3,c
 18145  003A3A  504F               	movf	i2___fladd@bexp,w,c
 18146  003A3C  5C4E               	subwf	i2___fladd@aexp,w,c
 18147  003A3E  B0D8               	btfsc	status,0,c
 18148  003A40  D022               	goto	i2l5184
 18149  003A42  AC4D               	btfss	i2___fladd@signs,6,c
 18150  003A44  D002               	goto	i2l5154
 18151  003A46  0E80               	movlw	128
 18152  003A48  1A4D               	xorwf	i2___fladd@signs,f,c
 18153  003A4A                     i2l5154:
 18154  003A4A  C04F  F050         	movff	i2___fladd@bexp,i2___fladd@grs
 18155  003A4E  C04E  F04F         	movff	i2___fladd@aexp,i2___fladd@bexp
 18156  003A52  C050  F04E         	movff	i2___fladd@grs,i2___fladd@aexp
 18157  003A56  C041  F050         	movff	i2___fladd@b,i2___fladd@grs
 18158  003A5A  C045  F041         	movff	i2___fladd@a,i2___fladd@b
 18159  003A5E  C050  F045         	movff	i2___fladd@grs,i2___fladd@a
 18160  003A62  C042  F050         	movff	i2___fladd@b+1,i2___fladd@grs
 18161  003A66  C046  F042         	movff	i2___fladd@a+1,i2___fladd@b+1
 18162  003A6A  C050  F046         	movff	i2___fladd@grs,i2___fladd@a+1
 18163  003A6E  C043  F050         	movff	i2___fladd@b+2,i2___fladd@grs
 18164  003A72  C047  F043         	movff	i2___fladd@a+2,i2___fladd@b+2
 18165  003A76  C050  F047         	movff	i2___fladd@grs,i2___fladd@a+2
 18166  003A7A  C044  F050         	movff	i2___fladd@b+3,i2___fladd@grs
 18167  003A7E  C048  F044         	movff	i2___fladd@a+3,i2___fladd@b+3
 18168  003A82  C050  F048         	movff	i2___fladd@grs,i2___fladd@a+3
 18169  003A86                     i2l5184:
 18170  003A86  0E00               	movlw	0
 18171  003A88  6E50               	movwf	i2___fladd@grs,c
 18172  003A8A  504F               	movf	i2___fladd@bexp,w,c
 18173  003A8C  C04E  F049         	movff	i2___fladd@aexp,??i2___fladd
 18174  003A90  6A4A               	clrf	(??i2___fladd+1)& (0+255),c
 18175  003A92  5E49               	subwf	??i2___fladd,f,c
 18176  003A94  0E00               	movlw	0
 18177  003A96  5A4A               	subwfb	??i2___fladd+1,f,c
 18178  003A98  BE4A               	btfsc	??i2___fladd+1,7,c
 18179  003A9A  D02C               	goto	i2l1357
 18180  003A9C  504A               	movf	??i2___fladd+1,w,c
 18181  003A9E  E104               	bnz	i2u606_40
 18182  003AA0  0E1A               	movlw	26
 18183  003AA2  5C49               	subwf	??i2___fladd,w,c
 18184  003AA4  A0D8               	btfss	status,0,c
 18185  003AA6  D026               	goto	i2l1357
 18186  003AA8                     i2u606_40:
 18187  003AA8  5041               	movf	i2___fladd@b,w,c
 18188  003AAA  1042               	iorwf	i2___fladd@b+1,w,c
 18189  003AAC  1043               	iorwf	i2___fladd@b+2,w,c
 18190  003AAE  1044               	iorwf	i2___fladd@b+3,w,c
 18191  003AB0  B4D8               	btfsc	status,2,c
 18192  003AB2  D002               	goto	i2u607_40
 18193  003AB4  0E01               	movlw	1
 18194  003AB6  D001               	goto	i2u608_40
 18195  003AB8                     i2u607_40:
 18196  003AB8  0E00               	movlw	0
 18197  003ABA                     i2u608_40:
 18198  003ABA  6E50               	movwf	i2___fladd@grs,c
 18199  003ABC  0E00               	movlw	0
 18200  003ABE  6E41               	movwf	i2___fladd@b,c
 18201  003AC0  0E00               	movlw	0
 18202  003AC2  6E42               	movwf	i2___fladd@b+1,c
 18203  003AC4  0E00               	movlw	0
 18204  003AC6  6E43               	movwf	i2___fladd@b+2,c
 18205  003AC8  0E00               	movlw	0
 18206  003ACA  6E44               	movwf	i2___fladd@b+3,c
 18207  003ACC  C04E  F04F         	movff	i2___fladd@aexp,i2___fladd@bexp
 18208  003AD0  D015               	goto	i2u611_40
 18209  003AD2                     i2l1358:
 18210  003AD2  A050               	btfss	i2___fladd@grs,0,c
 18211  003AD4  D005               	goto	i2l5196
 18212  003AD6  90D8               	bcf	status,0,c
 18213  003AD8  3050               	rrcf	i2___fladd@grs,w,c
 18214  003ADA  0901               	iorlw	1
 18215  003ADC  6E50               	movwf	i2___fladd@grs,c
 18216  003ADE  D002               	goto	i2l5198
 18217  003AE0                     i2l5196:
 18218  003AE0  90D8               	bcf	status,0,c
 18219  003AE2  3250               	rrcf	i2___fladd@grs,f,c
 18220  003AE4                     i2l5198:
 18221  003AE4  B041               	btfsc	i2___fladd@b,0,c
 18222  003AE6  8E50               	bsf	i2___fladd@grs,7,c
 18223  003AE8  3444               	rlcf	i2___fladd@b+3,w,c
 18224  003AEA  3244               	rrcf	i2___fladd@b+3,f,c
 18225  003AEC  3243               	rrcf	i2___fladd@b+2,f,c
 18226  003AEE  3242               	rrcf	i2___fladd@b+1,f,c
 18227  003AF0  3241               	rrcf	i2___fladd@b,f,c
 18228  003AF2  2A4F               	incf	i2___fladd@bexp,f,c
 18229  003AF4                     i2l1357:
 18230  003AF4  504E               	movf	i2___fladd@aexp,w,c
 18231  003AF6  5C4F               	subwf	i2___fladd@bexp,w,c
 18232  003AF8  A0D8               	btfss	status,0,c
 18233  003AFA  D7EB               	goto	i2l1358
 18234  003AFC                     i2u611_40:
 18235  003AFC  BC4D               	btfsc	i2___fladd@signs,6,c
 18236  003AFE  D028               	goto	i2l5230
 18237  003B00  504F               	movf	i2___fladd@bexp,w,c
 18238  003B02  A4D8               	btfss	status,2,c
 18239  003B04  D009               	goto	i2l5212
 18240  003B06  0E00               	movlw	0
 18241  003B08  6E41               	movwf	?i2___fladd,c
 18242  003B0A  0E00               	movlw	0
 18243  003B0C  6E42               	movwf	?i2___fladd+1,c
 18244  003B0E  0E00               	movlw	0
 18245  003B10  6E43               	movwf	?i2___fladd+2,c
 18246  003B12  0E00               	movlw	0
 18247  003B14  6E44               	movwf	?i2___fladd+3,c
 18248  003B16  0012               	return	
 18249  003B18                     i2l5212:
 18250  003B18  5045               	movf	i2___fladd@a,w,c
 18251  003B1A  2641               	addwf	i2___fladd@b,f,c
 18252  003B1C  5046               	movf	i2___fladd@a+1,w,c
 18253  003B1E  2242               	addwfc	i2___fladd@b+1,f,c
 18254  003B20  5047               	movf	i2___fladd@a+2,w,c
 18255  003B22  2243               	addwfc	i2___fladd@b+2,f,c
 18256  003B24  5048               	movf	i2___fladd@a+3,w,c
 18257  003B26  2244               	addwfc	i2___fladd@b+3,f,c
 18258  003B28  A044               	btfss	i2___fladd@b+3,0,c
 18259  003B2A  D071               	goto	i2u624_40
 18260  003B2C  A050               	btfss	i2___fladd@grs,0,c
 18261  003B2E  D005               	goto	i2l5220
 18262  003B30  90D8               	bcf	status,0,c
 18263  003B32  3050               	rrcf	i2___fladd@grs,w,c
 18264  003B34  0901               	iorlw	1
 18265  003B36  6E50               	movwf	i2___fladd@grs,c
 18266  003B38  D002               	goto	i2l5222
 18267  003B3A                     i2l5220:
 18268  003B3A  90D8               	bcf	status,0,c
 18269  003B3C  3250               	rrcf	i2___fladd@grs,f,c
 18270  003B3E                     i2l5222:
 18271  003B3E  B041               	btfsc	i2___fladd@b,0,c
 18272  003B40  8E50               	bsf	i2___fladd@grs,7,c
 18273  003B42  3444               	rlcf	i2___fladd@b+3,w,c
 18274  003B44  3244               	rrcf	i2___fladd@b+3,f,c
 18275  003B46  3243               	rrcf	i2___fladd@b+2,f,c
 18276  003B48  3242               	rrcf	i2___fladd@b+1,f,c
 18277  003B4A  3241               	rrcf	i2___fladd@b,f,c
 18278  003B4C  2A4F               	incf	i2___fladd@bexp,f,c
 18279  003B4E  D05F               	goto	i2u624_40
 18280  003B50                     i2l5230:
 18281  003B50  5045               	movf	i2___fladd@a,w,c
 18282  003B52  5C41               	subwf	i2___fladd@b,w,c
 18283  003B54  5046               	movf	i2___fladd@a+1,w,c
 18284  003B56  5842               	subwfb	i2___fladd@b+1,w,c
 18285  003B58  5047               	movf	i2___fladd@a+2,w,c
 18286  003B5A  5843               	subwfb	i2___fladd@b+2,w,c
 18287  003B5C  5044               	movf	i2___fladd@b+3,w,c
 18288  003B5E  0A80               	xorlw	128
 18289  003B60  6E49               	movwf	??i2___fladd& (0+255),c
 18290  003B62  5048               	movf	i2___fladd@a+3,w,c
 18291  003B64  0A80               	xorlw	128
 18292  003B66  5849               	subwfb	??i2___fladd& (0+255),w,c
 18293  003B68  B0D8               	btfsc	status,0,c
 18294  003B6A  D025               	goto	i2l5240
 18295  003B6C  5041               	movf	i2___fladd@b,w,c
 18296  003B6E  5C45               	subwf	i2___fladd@a,w,c
 18297  003B70  6E49               	movwf	??i2___fladd& (0+255),c
 18298  003B72  5042               	movf	i2___fladd@b+1,w,c
 18299  003B74  5846               	subwfb	i2___fladd@a+1,w,c
 18300  003B76  6E4A               	movwf	(??i2___fladd+1)& (0+255),c
 18301  003B78  5043               	movf	i2___fladd@b+2,w,c
 18302  003B7A  5847               	subwfb	i2___fladd@a+2,w,c
 18303  003B7C  6E4B               	movwf	(??i2___fladd+2)& (0+255),c
 18304  003B7E  5044               	movf	i2___fladd@b+3,w,c
 18305  003B80  5848               	subwfb	i2___fladd@a+3,w,c
 18306  003B82  6E4C               	movwf	(??i2___fladd+3)& (0+255),c
 18307  003B84  0EFF               	movlw	255
 18308  003B86  2449               	addwf	??i2___fladd,w,c
 18309  003B88  6E41               	movwf	i2___fladd@b,c
 18310  003B8A  0EFF               	movlw	255
 18311  003B8C  204A               	addwfc	??i2___fladd+1,w,c
 18312  003B8E  6E42               	movwf	i2___fladd@b+1,c
 18313  003B90  0EFF               	movlw	255
 18314  003B92  204B               	addwfc	??i2___fladd+2,w,c
 18315  003B94  6E43               	movwf	i2___fladd@b+2,c
 18316  003B96  0EFF               	movlw	255
 18317  003B98  204C               	addwfc	??i2___fladd+3,w,c
 18318  003B9A  6E44               	movwf	i2___fladd@b+3,c
 18319  003B9C  0E80               	movlw	128
 18320  003B9E  1A4D               	xorwf	i2___fladd@signs,f,c
 18321  003BA0  6C50               	negf	i2___fladd@grs,c
 18322  003BA2  5050               	movf	i2___fladd@grs,w,c
 18323  003BA4  A4D8               	btfss	status,2,c
 18324  003BA6  D00F               	goto	i2l1373
 18325  003BA8  0E01               	movlw	1
 18326  003BAA  2641               	addwf	i2___fladd@b,f,c
 18327  003BAC  0E00               	movlw	0
 18328  003BAE  2242               	addwfc	i2___fladd@b+1,f,c
 18329  003BB0  2243               	addwfc	i2___fladd@b+2,f,c
 18330  003BB2  2244               	addwfc	i2___fladd@b+3,f,c
 18331  003BB4  D008               	goto	i2l1373
 18332  003BB6                     i2l5240:
 18333  003BB6  5045               	movf	i2___fladd@a,w,c
 18334  003BB8  5E41               	subwf	i2___fladd@b,f,c
 18335  003BBA  5046               	movf	i2___fladd@a+1,w,c
 18336  003BBC  5A42               	subwfb	i2___fladd@b+1,f,c
 18337  003BBE  5047               	movf	i2___fladd@a+2,w,c
 18338  003BC0  5A43               	subwfb	i2___fladd@b+2,f,c
 18339  003BC2  5048               	movf	i2___fladd@a+3,w,c
 18340  003BC4  5A44               	subwfb	i2___fladd@b+3,f,c
 18341  003BC6                     i2l1373:
 18342  003BC6  5041               	movf	i2___fladd@b,w,c
 18343  003BC8  1042               	iorwf	i2___fladd@b+1,w,c
 18344  003BCA  1043               	iorwf	i2___fladd@b+2,w,c
 18345  003BCC  1044               	iorwf	i2___fladd@b+3,w,c
 18346  003BCE  A4D8               	btfss	status,2,c
 18347  003BD0  D01C               	goto	i2l5264
 18348  003BD2  5050               	movf	i2___fladd@grs,w,c
 18349  003BD4  A4D8               	btfss	status,2,c
 18350  003BD6  D019               	goto	i2l5264
 18351  003BD8  0E00               	movlw	0
 18352  003BDA  6E41               	movwf	?i2___fladd,c
 18353  003BDC  0E00               	movlw	0
 18354  003BDE  6E42               	movwf	?i2___fladd+1,c
 18355  003BE0  0E00               	movlw	0
 18356  003BE2  6E43               	movwf	?i2___fladd+2,c
 18357  003BE4  0E00               	movlw	0
 18358  003BE6  6E44               	movwf	?i2___fladd+3,c
 18359  003BE8  0012               	return	
 18360  003BEA                     i2l5248:
 18361  003BEA  90D8               	bcf	status,0,c
 18362  003BEC  3641               	rlcf	i2___fladd@b,f,c
 18363  003BEE  3642               	rlcf	i2___fladd@b+1,f,c
 18364  003BF0  3643               	rlcf	i2___fladd@b+2,f,c
 18365  003BF2  3644               	rlcf	i2___fladd@b+3,f,c
 18366  003BF4  BE50               	btfsc	i2___fladd@grs,7,c
 18367  003BF6  8041               	bsf	i2___fladd@b,0,c
 18368  003BF8  A050               	btfss	i2___fladd@grs,0,c
 18369  003BFA  D002               	goto	i2l5258
 18370  003BFC  80D8               	bsf	status,0,c
 18371  003BFE  D001               	goto	L24
 18372  003C00                     i2l5258:
 18373  003C00  90D8               	bcf	status,0,c
 18374  003C02                     L24:
 18375  003C02  3650               	rlcf	i2___fladd@grs,f,c
 18376  003C04  504F               	movf	i2___fladd@bexp,w,c
 18377  003C06  A4D8               	btfss	status,2,c
 18378  003C08  064F               	decf	i2___fladd@bexp,f,c
 18379  003C0A                     i2l5264:
 18380  003C0A  AE43               	btfss	i2___fladd@b+2,7,c
 18381  003C0C  D7EE               	goto	i2l5248
 18382  003C0E                     i2u624_40:
 18383  003C0E  0E00               	movlw	0
 18384  003C10  6E4E               	movwf	i2___fladd@aexp,c
 18385  003C12  AE50               	btfss	i2___fladd@grs,7,c
 18386  003C14  D00B               	goto	i2l1382
 18387  003C16  C050  F049         	movff	i2___fladd@grs,??i2___fladd
 18388  003C1A  0E7F               	movlw	127
 18389  003C1C  1649               	andwf	??i2___fladd,f,c
 18390  003C1E  B4D8               	btfsc	status,2,c
 18391  003C20  D003               	goto	i2l1383
 18392  003C22                     i2u626_40:
 18393  003C22  0E01               	movlw	1
 18394  003C24  6E4E               	movwf	i2___fladd@aexp,c
 18395  003C26  D002               	goto	i2l1382
 18396  003C28                     i2l1383:
 18397  003C28  B041               	btfsc	i2___fladd@b,0,c
 18398  003C2A  D7FB               	goto	i2u626_40
 18399  003C2C                     i2l1382:
 18400  003C2C  504E               	movf	i2___fladd@aexp,w,c
 18401  003C2E  B4D8               	btfsc	status,2,c
 18402  003C30  D020               	goto	i2l5284
 18403  003C32  0E01               	movlw	1
 18404  003C34  2641               	addwf	i2___fladd@b,f,c
 18405  003C36  0E00               	movlw	0
 18406  003C38  2242               	addwfc	i2___fladd@b+1,f,c
 18407  003C3A  2243               	addwfc	i2___fladd@b+2,f,c
 18408  003C3C  2244               	addwfc	i2___fladd@b+3,f,c
 18409  003C3E  A044               	btfss	i2___fladd@b+3,0,c
 18410  003C40  D018               	goto	i2l5284
 18411  003C42  C041  F049         	movff	i2___fladd@b,??i2___fladd
 18412  003C46  C042  F04A         	movff	i2___fladd@b+1,??i2___fladd+1
 18413  003C4A  C043  F04B         	movff	i2___fladd@b+2,??i2___fladd+2
 18414  003C4E  C044  F04C         	movff	i2___fladd@b+3,??i2___fladd+3
 18415  003C52  344C               	rlcf	??i2___fladd+3,w,c
 18416  003C54  324C               	rrcf	??i2___fladd+3,f,c
 18417  003C56  324B               	rrcf	??i2___fladd+2,f,c
 18418  003C58  324A               	rrcf	??i2___fladd+1,f,c
 18419  003C5A  3249               	rrcf	??i2___fladd,f,c
 18420  003C5C  C049  F041         	movff	??i2___fladd,i2___fladd@b
 18421  003C60  C04A  F042         	movff	??i2___fladd+1,i2___fladd@b+1
 18422  003C64  C04B  F043         	movff	??i2___fladd+2,i2___fladd@b+2
 18423  003C68  C04C  F044         	movff	??i2___fladd+3,i2___fladd@b+3
 18424  003C6C  284F               	incf	i2___fladd@bexp,w,c
 18425  003C6E  A4D8               	btfss	status,2,c
 18426  003C70  2A4F               	incf	i2___fladd@bexp,f,c
 18427  003C72                     i2l5284:
 18428  003C72  284F               	incf	i2___fladd@bexp,w,c
 18429  003C74  B4D8               	btfsc	status,2,c
 18430  003C76  D003               	goto	i2u632_40
 18431  003C78  504F               	movf	i2___fladd@bexp,w,c
 18432  003C7A  A4D8               	btfss	status,2,c
 18433  003C7C  D00D               	goto	i2l5292
 18434  003C7E                     i2u632_40:
 18435  003C7E  0E00               	movlw	0
 18436  003C80  6E41               	movwf	i2___fladd@b,c
 18437  003C82  0E00               	movlw	0
 18438  003C84  6E42               	movwf	i2___fladd@b+1,c
 18439  003C86  0E00               	movlw	0
 18440  003C88  6E43               	movwf	i2___fladd@b+2,c
 18441  003C8A  0E00               	movlw	0
 18442  003C8C  6E44               	movwf	i2___fladd@b+3,c
 18443  003C8E  504F               	movf	i2___fladd@bexp,w,c
 18444  003C90  A4D8               	btfss	status,2,c
 18445  003C92  D002               	goto	i2l5292
 18446  003C94  0E00               	movlw	0
 18447  003C96  6E4D               	movwf	i2___fladd@signs,c
 18448  003C98                     i2l5292:
 18449  003C98  A04F               	btfss	i2___fladd@bexp,0,c
 18450  003C9A  D002               	goto	i2l5296
 18451  003C9C  8E43               	bsf	i2___fladd@b+2,7,c
 18452  003C9E  D001               	goto	i2l5298
 18453  003CA0                     i2l5296:
 18454  003CA0  9E43               	bcf	i2___fladd@b+2,7,c
 18455  003CA2                     i2l5298:
 18456  003CA2  90D8               	bcf	status,0,c
 18457  003CA4  304F               	rrcf	i2___fladd@bexp,w,c
 18458  003CA6  6E44               	movwf	i2___fladd@b+3,c
 18459  003CA8  BE4D               	btfsc	i2___fladd@signs,7,c
 18460  003CAA  8E44               	bsf	i2___fladd@b+3,7,c
 18461  003CAC  C041  F041         	movff	i2___fladd@b,?i2___fladd
 18462  003CB0  C042  F042         	movff	i2___fladd@b+1,?i2___fladd+1
 18463  003CB4  C043  F043         	movff	i2___fladd@b+2,?i2___fladd+2
 18464  003CB8  C044  F044         	movff	i2___fladd@b+3,?i2___fladd+3
 18465  003CBC  0012               	return		;funcret
 18466  003CBE                     __end_ofi2___fladd:
 18467                           	opt callstack 0
 18468                           
 18469 ;; *************** function i2___flneg *****************
 18470 ;; Defined at:
 18471 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 18472 ;; Parameters:    Size  Location     Type
 18473 ;;  f1              4    0[COMRAM] unsigned char 
 18474 ;; Auto vars:     Size  Location     Type
 18475 ;;		None
 18476 ;; Return value:  Size  Location     Type
 18477 ;;                  4    0[COMRAM] unsigned char 
 18478 ;; Registers used:
 18479 ;;		wreg, status,2, status,0
 18480 ;; Tracked objects:
 18481 ;;		On entry : 0/0
 18482 ;;		On exit  : 0/0
 18483 ;;		Unchanged: 0/0
 18484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18489 ;;Total ram usage:        4 bytes
 18490 ;; Hardware stack levels used:    1
 18491 ;; This function calls:
 18492 ;;		Nothing
 18493 ;; This function is called by:
 18494 ;;		i2_efgtoa
 18495 ;; This function uses a non-reentrant model
 18496 ;;
 18497                           
 18498                           	psect	text93
 18499  006A0A                     __ptext93:
 18500                           	opt callstack 0
 18501  006A0A                     i2___flneg:
 18502                           	opt callstack 12
 18503                           
 18504                           ;incstack = 0
 18505  006A0A  5001               	movf	i2___flneg@f1,w,c
 18506  006A0C  1002               	iorwf	i2___flneg@f1+1,w,c
 18507  006A0E  1003               	iorwf	i2___flneg@f1+2,w,c
 18508  006A10  1004               	iorwf	i2___flneg@f1+3,w,c
 18509  006A12  B4D8               	btfsc	status,2,c
 18510  006A14  D008               	goto	i2l5494
 18511  006A16  0E00               	movlw	0
 18512  006A18  1A01               	xorwf	i2___flneg@f1,f,c
 18513  006A1A  0E00               	movlw	0
 18514  006A1C  1A02               	xorwf	i2___flneg@f1+1,f,c
 18515  006A1E  0E00               	movlw	0
 18516  006A20  1A03               	xorwf	i2___flneg@f1+2,f,c
 18517  006A22  0E80               	movlw	128
 18518  006A24  1A04               	xorwf	i2___flneg@f1+3,f,c
 18519  006A26                     i2l5494:
 18520  006A26  C001  F001         	movff	i2___flneg@f1,?i2___flneg
 18521  006A2A  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
 18522  006A2E  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
 18523  006A32  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
 18524  006A36  0012               	return		;funcret
 18525  006A38                     __end_ofi2___flneg:
 18526                           	opt callstack 0
 18527                           
 18528 ;; *************** function i2___flmul *****************
 18529 ;; Defined at:
 18530 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 18531 ;; Parameters:    Size  Location     Type
 18532 ;;  b               4   14[COMRAM] unsigned char 
 18533 ;;  a               4   18[COMRAM] unsigned char 
 18534 ;; Auto vars:     Size  Location     Type
 18535 ;;  __flmul         4   33[COMRAM] struct .
 18536 ;;  __flmul         4   27[COMRAM] unsigned long 
 18537 ;;  __flmul         2   37[COMRAM] struct .
 18538 ;;  __flmul         1   32[COMRAM] unsigned char 
 18539 ;;  __flmul         1   31[COMRAM] unsigned char 
 18540 ;;  __flmul         1   26[COMRAM] unsigned char 
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  4   14[COMRAM] unsigned char 
 18543 ;; Registers used:
 18544 ;;		wreg, status,2, status,0, prodl, prodh
 18545 ;; Tracked objects:
 18546 ;;		On entry : 0/0
 18547 ;;		On exit  : 0/0
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18550 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18551 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18552 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18553 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18554 ;;Total ram usage:       25 bytes
 18555 ;; Hardware stack levels used:    1
 18556 ;; This function calls:
 18557 ;;		Nothing
 18558 ;; This function is called by:
 18559 ;;		_adafruit
 18560 ;;		_dataLogRead
 18561 ;;		i2_efgtoa
 18562 ;; This function uses a non-reentrant model
 18563 ;;
 18564                           
 18565                           	psect	text94
 18566  003352                     __ptext94:
 18567                           	opt callstack 0
 18568  003352                     i2___flmul:
 18569                           	opt callstack 12
 18570                           
 18571                           ;incstack = 0
 18572  003352  5012               	movf	i2___flmul@b+3,w,c
 18573  003354  0B80               	andlw	128
 18574  003356  6E1B               	movwf	i2___flmul@sign,c
 18575  003358  5012               	movf	i2___flmul@b+3,w,c
 18576  00335A  2412               	addwf	i2___flmul@b+3,w,c
 18577  00335C  6E21               	movwf	i2___flmul@bexp,c
 18578  00335E  BE11               	btfsc	i2___flmul@b+2,7,c
 18579  003360  8021               	bsf	i2___flmul@bexp,0,c
 18580  003362  5021               	movf	i2___flmul@bexp,w,c
 18581  003364  B4D8               	btfsc	status,2,c
 18582  003366  D00D               	goto	i2l5700
 18583  003368  2821               	incf	i2___flmul@bexp,w,c
 18584  00336A  A4D8               	btfss	status,2,c
 18585  00336C  D008               	goto	i2l5698
 18586  00336E  0E00               	movlw	0
 18587  003370  6E0F               	movwf	i2___flmul@b,c
 18588  003372  0E00               	movlw	0
 18589  003374  6E10               	movwf	i2___flmul@b+1,c
 18590  003376  0E00               	movlw	0
 18591  003378  6E11               	movwf	i2___flmul@b+2,c
 18592  00337A  0E00               	movlw	0
 18593  00337C  6E12               	movwf	i2___flmul@b+3,c
 18594  00337E                     i2l5698:
 18595  00337E  8E11               	bsf	i2___flmul@b+2,7,c
 18596  003380  D008               	goto	i2l5702
 18597  003382                     i2l5700:
 18598  003382  0E00               	movlw	0
 18599  003384  6E0F               	movwf	i2___flmul@b,c
 18600  003386  0E00               	movlw	0
 18601  003388  6E10               	movwf	i2___flmul@b+1,c
 18602  00338A  0E00               	movlw	0
 18603  00338C  6E11               	movwf	i2___flmul@b+2,c
 18604  00338E  0E00               	movlw	0
 18605  003390  6E12               	movwf	i2___flmul@b+3,c
 18606  003392                     i2l5702:
 18607  003392  5016               	movf	i2___flmul@a+3,w,c
 18608  003394  0B80               	andlw	128
 18609  003396  1A1B               	xorwf	i2___flmul@sign,f,c
 18610  003398  5016               	movf	i2___flmul@a+3,w,c
 18611  00339A  2416               	addwf	i2___flmul@a+3,w,c
 18612  00339C  6E20               	movwf	i2___flmul@aexp,c
 18613  00339E  BE15               	btfsc	i2___flmul@a+2,7,c
 18614  0033A0  8020               	bsf	i2___flmul@aexp,0,c
 18615  0033A2  5020               	movf	i2___flmul@aexp,w,c
 18616  0033A4  B4D8               	btfsc	status,2,c
 18617  0033A6  D00D               	goto	i2l5718
 18618  0033A8  2820               	incf	i2___flmul@aexp,w,c
 18619  0033AA  A4D8               	btfss	status,2,c
 18620  0033AC  D008               	goto	i2l5716
 18621  0033AE  0E00               	movlw	0
 18622  0033B0  6E13               	movwf	i2___flmul@a,c
 18623  0033B2  0E00               	movlw	0
 18624  0033B4  6E14               	movwf	i2___flmul@a+1,c
 18625  0033B6  0E00               	movlw	0
 18626  0033B8  6E15               	movwf	i2___flmul@a+2,c
 18627  0033BA  0E00               	movlw	0
 18628  0033BC  6E16               	movwf	i2___flmul@a+3,c
 18629  0033BE                     i2l5716:
 18630  0033BE  8E15               	bsf	i2___flmul@a+2,7,c
 18631  0033C0  D008               	goto	i2l1442
 18632  0033C2                     i2l5718:
 18633  0033C2  0E00               	movlw	0
 18634  0033C4  6E13               	movwf	i2___flmul@a,c
 18635  0033C6  0E00               	movlw	0
 18636  0033C8  6E14               	movwf	i2___flmul@a+1,c
 18637  0033CA  0E00               	movlw	0
 18638  0033CC  6E15               	movwf	i2___flmul@a+2,c
 18639  0033CE  0E00               	movlw	0
 18640  0033D0  6E16               	movwf	i2___flmul@a+3,c
 18641  0033D2                     i2l1442:
 18642  0033D2  5020               	movf	i2___flmul@aexp,w,c
 18643  0033D4  B4D8               	btfsc	status,2,c
 18644  0033D6  D003               	goto	i2u706_40
 18645  0033D8  5021               	movf	i2___flmul@bexp,w,c
 18646  0033DA  A4D8               	btfss	status,2,c
 18647  0033DC  D009               	goto	i2l5726
 18648  0033DE                     i2u706_40:
 18649  0033DE  0E00               	movlw	0
 18650  0033E0  6E0F               	movwf	?i2___flmul,c
 18651  0033E2  0E00               	movlw	0
 18652  0033E4  6E10               	movwf	?i2___flmul+1,c
 18653  0033E6  0E00               	movlw	0
 18654  0033E8  6E11               	movwf	?i2___flmul+2,c
 18655  0033EA  0E00               	movlw	0
 18656  0033EC  6E12               	movwf	?i2___flmul+3,c
 18657  0033EE  0012               	return	
 18658  0033F0                     i2l5726:
 18659  0033F0  5015               	movf	i2___flmul@a+2,w,c
 18660  0033F2  020F               	mulwf	i2___flmul@b,c
 18661  0033F4  CFF3 F026          	movff	prodl,i2___flmul@temp
 18662  0033F8  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18663  0033FC  5026               	movf	i2___flmul@temp,w,c
 18664  0033FE  6E1C               	movwf	i2___flmul@grs,c
 18665  003400  6A1D               	clrf	i2___flmul@grs+1,c
 18666  003402  6A1E               	clrf	i2___flmul@grs+2,c
 18667  003404  6A1F               	clrf	i2___flmul@grs+3,c
 18668  003406  5027               	movf	i2___flmul@temp+1,w,c
 18669  003408  6E22               	movwf	i2___flmul@prod,c
 18670  00340A  6A23               	clrf	i2___flmul@prod+1,c
 18671  00340C  6A24               	clrf	i2___flmul@prod+2,c
 18672  00340E  6A25               	clrf	i2___flmul@prod+3,c
 18673  003410  5014               	movf	i2___flmul@a+1,w,c
 18674  003412  0210               	mulwf	i2___flmul@b+1,c
 18675  003414  CFF3 F026          	movff	prodl,i2___flmul@temp
 18676  003418  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18677  00341C  5026               	movf	i2___flmul@temp,w,c
 18678  00341E  261C               	addwf	i2___flmul@grs,f,c
 18679  003420  0E00               	movlw	0
 18680  003422  221D               	addwfc	i2___flmul@grs+1,f,c
 18681  003424  221E               	addwfc	i2___flmul@grs+2,f,c
 18682  003426  221F               	addwfc	i2___flmul@grs+3,f,c
 18683  003428  5027               	movf	i2___flmul@temp+1,w,c
 18684  00342A  2622               	addwf	i2___flmul@prod,f,c
 18685  00342C  0E00               	movlw	0
 18686  00342E  2223               	addwfc	i2___flmul@prod+1,f,c
 18687  003430  2224               	addwfc	i2___flmul@prod+2,f,c
 18688  003432  2225               	addwfc	i2___flmul@prod+3,f,c
 18689  003434  5013               	movf	i2___flmul@a,w,c
 18690  003436  0211               	mulwf	i2___flmul@b+2,c
 18691  003438  CFF3 F026          	movff	prodl,i2___flmul@temp
 18692  00343C  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18693  003440  5026               	movf	i2___flmul@temp,w,c
 18694  003442  261C               	addwf	i2___flmul@grs,f,c
 18695  003444  0E00               	movlw	0
 18696  003446  221D               	addwfc	i2___flmul@grs+1,f,c
 18697  003448  221E               	addwfc	i2___flmul@grs+2,f,c
 18698  00344A  221F               	addwfc	i2___flmul@grs+3,f,c
 18699  00344C  5027               	movf	i2___flmul@temp+1,w,c
 18700  00344E  2622               	addwf	i2___flmul@prod,f,c
 18701  003450  0E00               	movlw	0
 18702  003452  2223               	addwfc	i2___flmul@prod+1,f,c
 18703  003454  2224               	addwfc	i2___flmul@prod+2,f,c
 18704  003456  2225               	addwfc	i2___flmul@prod+3,f,c
 18705  003458  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 18706  00345C  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 18707  003460  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 18708  003464  6A1C               	clrf	i2___flmul@grs,c
 18709  003466  5013               	movf	i2___flmul@a,w,c
 18710  003468  0210               	mulwf	i2___flmul@b+1,c
 18711  00346A  CFF3 F026          	movff	prodl,i2___flmul@temp
 18712  00346E  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18713  003472  5026               	movf	i2___flmul@temp,w,c
 18714  003474  261C               	addwf	i2___flmul@grs,f,c
 18715  003476  5027               	movf	i2___flmul@temp+1,w,c
 18716  003478  221D               	addwfc	i2___flmul@grs+1,f,c
 18717  00347A  0E00               	movlw	0
 18718  00347C  221E               	addwfc	i2___flmul@grs+2,f,c
 18719  00347E  0E00               	movlw	0
 18720  003480  221F               	addwfc	i2___flmul@grs+3,f,c
 18721  003482  5014               	movf	i2___flmul@a+1,w,c
 18722  003484  020F               	mulwf	i2___flmul@b,c
 18723  003486  CFF3 F026          	movff	prodl,i2___flmul@temp
 18724  00348A  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18725  00348E  5026               	movf	i2___flmul@temp,w,c
 18726  003490  261C               	addwf	i2___flmul@grs,f,c
 18727  003492  5027               	movf	i2___flmul@temp+1,w,c
 18728  003494  221D               	addwfc	i2___flmul@grs+1,f,c
 18729  003496  0E00               	movlw	0
 18730  003498  221E               	addwfc	i2___flmul@grs+2,f,c
 18731  00349A  0E00               	movlw	0
 18732  00349C  221F               	addwfc	i2___flmul@grs+3,f,c
 18733  00349E  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 18734  0034A2  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 18735  0034A6  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 18736  0034AA  6A1C               	clrf	i2___flmul@grs,c
 18737  0034AC  5013               	movf	i2___flmul@a,w,c
 18738  0034AE  020F               	mulwf	i2___flmul@b,c
 18739  0034B0  CFF3 F026          	movff	prodl,i2___flmul@temp
 18740  0034B4  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18741  0034B8  5026               	movf	i2___flmul@temp,w,c
 18742  0034BA  261C               	addwf	i2___flmul@grs,f,c
 18743  0034BC  5027               	movf	i2___flmul@temp+1,w,c
 18744  0034BE  221D               	addwfc	i2___flmul@grs+1,f,c
 18745  0034C0  0E00               	movlw	0
 18746  0034C2  221E               	addwfc	i2___flmul@grs+2,f,c
 18747  0034C4  0E00               	movlw	0
 18748  0034C6  221F               	addwfc	i2___flmul@grs+3,f,c
 18749  0034C8  5015               	movf	i2___flmul@a+2,w,c
 18750  0034CA  0210               	mulwf	i2___flmul@b+1,c
 18751  0034CC  CFF3 F026          	movff	prodl,i2___flmul@temp
 18752  0034D0  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18753  0034D4  5026               	movf	i2___flmul@temp,w,c
 18754  0034D6  2622               	addwf	i2___flmul@prod,f,c
 18755  0034D8  5027               	movf	i2___flmul@temp+1,w,c
 18756  0034DA  2223               	addwfc	i2___flmul@prod+1,f,c
 18757  0034DC  0E00               	movlw	0
 18758  0034DE  2224               	addwfc	i2___flmul@prod+2,f,c
 18759  0034E0  0E00               	movlw	0
 18760  0034E2  2225               	addwfc	i2___flmul@prod+3,f,c
 18761  0034E4  5014               	movf	i2___flmul@a+1,w,c
 18762  0034E6  0211               	mulwf	i2___flmul@b+2,c
 18763  0034E8  CFF3 F026          	movff	prodl,i2___flmul@temp
 18764  0034EC  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18765  0034F0  5026               	movf	i2___flmul@temp,w,c
 18766  0034F2  2622               	addwf	i2___flmul@prod,f,c
 18767  0034F4  5027               	movf	i2___flmul@temp+1,w,c
 18768  0034F6  2223               	addwfc	i2___flmul@prod+1,f,c
 18769  0034F8  0E00               	movlw	0
 18770  0034FA  2224               	addwfc	i2___flmul@prod+2,f,c
 18771  0034FC  0E00               	movlw	0
 18772  0034FE  2225               	addwfc	i2___flmul@prod+3,f,c
 18773  003500  5015               	movf	i2___flmul@a+2,w,c
 18774  003502  0211               	mulwf	i2___flmul@b+2,c
 18775  003504  CFF3 F026          	movff	prodl,i2___flmul@temp
 18776  003508  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 18777  00350C  5026               	movf	i2___flmul@temp,w,c
 18778  00350E  6E17               	movwf	??i2___flmul& (0+255),c
 18779  003510  5027               	movf	i2___flmul@temp+1,w,c
 18780  003512  6E18               	movwf	(??i2___flmul+1)& (0+255),c
 18781  003514  6A19               	clrf	(??i2___flmul+2)& (0+255),c
 18782  003516  6A1A               	clrf	(??i2___flmul+3)& (0+255),c
 18783  003518  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 18784  00351C  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 18785  003520  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 18786  003524  6A17               	clrf	??i2___flmul,c
 18787  003526  5017               	movf	??i2___flmul,w,c
 18788  003528  2622               	addwf	i2___flmul@prod,f,c
 18789  00352A  5018               	movf	??i2___flmul+1,w,c
 18790  00352C  2223               	addwfc	i2___flmul@prod+1,f,c
 18791  00352E  5019               	movf	??i2___flmul+2,w,c
 18792  003530  2224               	addwfc	i2___flmul@prod+2,f,c
 18793  003532  501A               	movf	??i2___flmul+3,w,c
 18794  003534  2225               	addwfc	i2___flmul@prod+3,f,c
 18795  003536  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 18796  00353A  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 18797  00353E  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 18798  003542  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 18799  003546  0E19               	movlw	25
 18800  003548  D005               	goto	i2u707_40
 18801  00354A                     i2u707_45:
 18802  00354A  90D8               	bcf	status,0,c
 18803  00354C  321A               	rrcf	??i2___flmul+3,f,c
 18804  00354E  3219               	rrcf	??i2___flmul+2,f,c
 18805  003550  3218               	rrcf	??i2___flmul+1,f,c
 18806  003552  3217               	rrcf	??i2___flmul,f,c
 18807  003554                     i2u707_40:
 18808  003554  2EE8               	decfsz	wreg,f,c
 18809  003556  D7F9               	goto	i2u707_45
 18810  003558  5017               	movf	??i2___flmul,w,c
 18811  00355A  2622               	addwf	i2___flmul@prod,f,c
 18812  00355C  5018               	movf	??i2___flmul+1,w,c
 18813  00355E  2223               	addwfc	i2___flmul@prod+1,f,c
 18814  003560  5019               	movf	??i2___flmul+2,w,c
 18815  003562  2224               	addwfc	i2___flmul@prod+2,f,c
 18816  003564  501A               	movf	??i2___flmul+3,w,c
 18817  003566  2225               	addwfc	i2___flmul@prod+3,f,c
 18818  003568  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 18819  00356C  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 18820  003570  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 18821  003574  6A1C               	clrf	i2___flmul@grs,c
 18822  003576  5020               	movf	i2___flmul@aexp,w,c
 18823  003578  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 18824  00357C  6A18               	clrf	(??i2___flmul+1)& (0+255),c
 18825  00357E  2617               	addwf	??i2___flmul,f,c
 18826  003580  0E00               	movlw	0
 18827  003582  2218               	addwfc	??i2___flmul+1,f,c
 18828  003584  0E82               	movlw	130
 18829  003586  2417               	addwf	??i2___flmul,w,c
 18830  003588  6E26               	movwf	i2___flmul@temp,c
 18831  00358A  0EFF               	movlw	255
 18832  00358C  2018               	addwfc	??i2___flmul+1,w,c
 18833  00358E  6E27               	movwf	i2___flmul@temp+1,c
 18834  003590  D00F               	goto	i2l5774
 18835  003592                     i2l5768:
 18836  003592  90D8               	bcf	status,0,c
 18837  003594  3622               	rlcf	i2___flmul@prod,f,c
 18838  003596  3623               	rlcf	i2___flmul@prod+1,f,c
 18839  003598  3624               	rlcf	i2___flmul@prod+2,f,c
 18840  00359A  3625               	rlcf	i2___flmul@prod+3,f,c
 18841  00359C  BE1F               	btfsc	i2___flmul@grs+3,7,c
 18842  00359E  8022               	bsf	i2___flmul@prod,0,c
 18843  0035A0  90D8               	bcf	status,0,c
 18844  0035A2  361C               	rlcf	i2___flmul@grs,f,c
 18845  0035A4  361D               	rlcf	i2___flmul@grs+1,f,c
 18846  0035A6  361E               	rlcf	i2___flmul@grs+2,f,c
 18847  0035A8  361F               	rlcf	i2___flmul@grs+3,f,c
 18848  0035AA  0626               	decf	i2___flmul@temp,f,c
 18849  0035AC  A0D8               	btfss	status,0,c
 18850  0035AE  0627               	decf	i2___flmul@temp+1,f,c
 18851  0035B0                     i2l5774:
 18852  0035B0  AE24               	btfss	i2___flmul@prod+2,7,c
 18853  0035B2  D7EF               	goto	i2l5768
 18854  0035B4  0E00               	movlw	0
 18855  0035B6  6E20               	movwf	i2___flmul@aexp,c
 18856  0035B8  AE1F               	btfss	i2___flmul@grs+3,7,c
 18857  0035BA  D017               	goto	i2l1451
 18858  0035BC  0EFF               	movlw	255
 18859  0035BE  141C               	andwf	i2___flmul@grs,w,c
 18860  0035C0  6E17               	movwf	??i2___flmul& (0+255),c
 18861  0035C2  0EFF               	movlw	255
 18862  0035C4  141D               	andwf	i2___flmul@grs+1,w,c
 18863  0035C6  6E18               	movwf	(??i2___flmul+1)& (0+255),c
 18864  0035C8  0EFF               	movlw	255
 18865  0035CA  141E               	andwf	i2___flmul@grs+2,w,c
 18866  0035CC  6E19               	movwf	(??i2___flmul+2)& (0+255),c
 18867  0035CE  0E7F               	movlw	127
 18868  0035D0  141F               	andwf	i2___flmul@grs+3,w,c
 18869  0035D2  6E1A               	movwf	(??i2___flmul+3)& (0+255),c
 18870  0035D4  5017               	movf	??i2___flmul,w,c
 18871  0035D6  1018               	iorwf	??i2___flmul+1,w,c
 18872  0035D8  1019               	iorwf	??i2___flmul+2,w,c
 18873  0035DA  101A               	iorwf	??i2___flmul+3,w,c
 18874  0035DC  B4D8               	btfsc	status,2,c
 18875  0035DE  D003               	goto	i2l1452
 18876  0035E0                     i2u711_40:
 18877  0035E0  0E01               	movlw	1
 18878  0035E2  6E20               	movwf	i2___flmul@aexp,c
 18879  0035E4  D002               	goto	i2l1451
 18880  0035E6                     i2l1452:
 18881  0035E6  B022               	btfsc	i2___flmul@prod,0,c
 18882  0035E8  D7FB               	goto	i2u711_40
 18883  0035EA                     i2l1451:
 18884  0035EA  5020               	movf	i2___flmul@aexp,w,c
 18885  0035EC  B4D8               	btfsc	status,2,c
 18886  0035EE  D01F               	goto	i2l5794
 18887  0035F0  0E01               	movlw	1
 18888  0035F2  2622               	addwf	i2___flmul@prod,f,c
 18889  0035F4  0E00               	movlw	0
 18890  0035F6  2223               	addwfc	i2___flmul@prod+1,f,c
 18891  0035F8  2224               	addwfc	i2___flmul@prod+2,f,c
 18892  0035FA  2225               	addwfc	i2___flmul@prod+3,f,c
 18893  0035FC  A025               	btfss	i2___flmul@prod+3,0,c
 18894  0035FE  D017               	goto	i2l5794
 18895  003600  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 18896  003604  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 18897  003608  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 18898  00360C  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 18899  003610  341A               	rlcf	??i2___flmul+3,w,c
 18900  003612  321A               	rrcf	??i2___flmul+3,f,c
 18901  003614  3219               	rrcf	??i2___flmul+2,f,c
 18902  003616  3218               	rrcf	??i2___flmul+1,f,c
 18903  003618  3217               	rrcf	??i2___flmul,f,c
 18904  00361A  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 18905  00361E  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 18906  003622  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 18907  003626  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 18908  00362A  4A26               	infsnz	i2___flmul@temp,f,c
 18909  00362C  2A27               	incf	i2___flmul@temp+1,f,c
 18910  00362E                     i2l5794:
 18911  00362E  BE27               	btfsc	i2___flmul@temp+1,7,c
 18912  003630  D00D               	goto	i2l5798
 18913  003632  5027               	movf	i2___flmul@temp+1,w,c
 18914  003634  E103               	bnz	i2u715_40
 18915  003636  2826               	incf	i2___flmul@temp,w,c
 18916  003638  A0D8               	btfss	status,0,c
 18917  00363A  D008               	goto	i2l5798
 18918  00363C                     i2u715_40:
 18919  00363C  0E00               	movlw	0
 18920  00363E  6E22               	movwf	i2___flmul@prod,c
 18921  003640  0E00               	movlw	0
 18922  003642  6E23               	movwf	i2___flmul@prod+1,c
 18923  003644  0E80               	movlw	128
 18924  003646  6E24               	movwf	i2___flmul@prod+2,c
 18925  003648  0E7F               	movlw	127
 18926  00364A  D020               	goto	L25
 18927  00364C                     i2l5798:
 18928  00364C  BE27               	btfsc	i2___flmul@temp+1,7,c
 18929  00364E  D005               	goto	i2u716_40
 18930  003650  5027               	movf	i2___flmul@temp+1,w,c
 18931  003652  E10E               	bnz	i2l1459
 18932  003654  0426               	decf	i2___flmul@temp,w,c
 18933  003656  B0D8               	btfsc	status,0,c
 18934  003658  D00B               	goto	i2l1459
 18935  00365A                     i2u716_40:
 18936  00365A  0E00               	movlw	0
 18937  00365C  6E22               	movwf	i2___flmul@prod,c
 18938  00365E  0E00               	movlw	0
 18939  003660  6E23               	movwf	i2___flmul@prod+1,c
 18940  003662  0E00               	movlw	0
 18941  003664  6E24               	movwf	i2___flmul@prod+2,c
 18942  003666  0E00               	movlw	0
 18943  003668  6E25               	movwf	i2___flmul@prod+3,c
 18944  00366A  0E00               	movlw	0
 18945  00366C  6E1B               	movwf	i2___flmul@sign,c
 18946  00366E  D00F               	goto	i2l5810
 18947  003670                     i2l1459:
 18948  003670  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 18949  003674  0EFF               	movlw	255
 18950  003676  1622               	andwf	i2___flmul@prod,f,c
 18951  003678  0EFF               	movlw	255
 18952  00367A  1623               	andwf	i2___flmul@prod+1,f,c
 18953  00367C  0E7F               	movlw	127
 18954  00367E  1624               	andwf	i2___flmul@prod+2,f,c
 18955  003680  0E00               	movlw	0
 18956  003682  1625               	andwf	i2___flmul@prod+3,f,c
 18957  003684  B021               	btfsc	i2___flmul@bexp,0,c
 18958  003686  8E24               	bsf	i2___flmul@prod+2,7,c
 18959  003688  90D8               	bcf	status,0,c
 18960  00368A  3021               	rrcf	i2___flmul@bexp,w,c
 18961  00368C                     L25:
 18962  00368C  6E25               	movwf	i2___flmul@prod+3,c
 18963  00368E                     i2l5810:
 18964  00368E  501B               	movf	i2___flmul@sign,w,c
 18965  003690  1225               	iorwf	i2___flmul@prod+3,f,c
 18966  003692  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 18967  003696  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 18968  00369A  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 18969  00369E  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 18970  0036A2  0012               	return		;funcret
 18971  0036A4                     __end_ofi2___flmul:
 18972                           	opt callstack 0
 18973                           
 18974 ;; *************** function i2___flge *****************
 18975 ;; Defined at:
 18976 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 18977 ;; Parameters:    Size  Location     Type
 18978 ;;  ff1             4   39[COMRAM] unsigned char 
 18979 ;;  ff2             4   43[COMRAM] unsigned char 
 18980 ;; Auto vars:     Size  Location     Type
 18981 ;;		None
 18982 ;; Return value:  Size  Location     Type
 18983 ;;		None               void
 18984 ;; Registers used:
 18985 ;;		wreg, status,2, status,0
 18986 ;; Tracked objects:
 18987 ;;		On entry : 0/0
 18988 ;;		On exit  : 0/0
 18989 ;;		Unchanged: 0/0
 18990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18994 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18995 ;;Total ram usage:       12 bytes
 18996 ;; Hardware stack levels used:    1
 18997 ;; This function calls:
 18998 ;;		Nothing
 18999 ;; This function is called by:
 19000 ;;		i2_efgtoa
 19001 ;; This function uses a non-reentrant model
 19002 ;;
 19003                           
 19004                           	psect	text95
 19005  00555E                     __ptext95:
 19006                           	opt callstack 0
 19007  00555E                     i2___flge:
 19008                           	opt callstack 12
 19009                           
 19010                           ;incstack = 0
 19011  00555E  0E00               	movlw	0
 19012  005560  1428               	andwf	i2___flge@ff1,w,c
 19013  005562  6E30               	movwf	??i2___flge& (0+255),c
 19014  005564  0E00               	movlw	0
 19015  005566  1429               	andwf	i2___flge@ff1+1,w,c
 19016  005568  6E31               	movwf	(??i2___flge+1)& (0+255),c
 19017  00556A  0E80               	movlw	128
 19018  00556C  142A               	andwf	i2___flge@ff1+2,w,c
 19019  00556E  6E32               	movwf	(??i2___flge+2)& (0+255),c
 19020  005570  0E7F               	movlw	127
 19021  005572  142B               	andwf	i2___flge@ff1+3,w,c
 19022  005574  6E33               	movwf	(??i2___flge+3)& (0+255),c
 19023  005576  5030               	movf	??i2___flge,w,c
 19024  005578  1031               	iorwf	??i2___flge+1,w,c
 19025  00557A  1032               	iorwf	??i2___flge+2,w,c
 19026  00557C  1033               	iorwf	??i2___flge+3,w,c
 19027  00557E  A4D8               	btfss	status,2,c
 19028  005580  D008               	goto	i2l5472
 19029  005582  0E00               	movlw	0
 19030  005584  6E28               	movwf	i2___flge@ff1,c
 19031  005586  0E00               	movlw	0
 19032  005588  6E29               	movwf	i2___flge@ff1+1,c
 19033  00558A  0E00               	movlw	0
 19034  00558C  6E2A               	movwf	i2___flge@ff1+2,c
 19035  00558E  0E00               	movlw	0
 19036  005590  6E2B               	movwf	i2___flge@ff1+3,c
 19037  005592                     i2l5472:
 19038  005592  0E00               	movlw	0
 19039  005594  142C               	andwf	i2___flge@ff2,w,c
 19040  005596  6E30               	movwf	??i2___flge& (0+255),c
 19041  005598  0E00               	movlw	0
 19042  00559A  142D               	andwf	i2___flge@ff2+1,w,c
 19043  00559C  6E31               	movwf	(??i2___flge+1)& (0+255),c
 19044  00559E  0E80               	movlw	128
 19045  0055A0  142E               	andwf	i2___flge@ff2+2,w,c
 19046  0055A2  6E32               	movwf	(??i2___flge+2)& (0+255),c
 19047  0055A4  0E7F               	movlw	127
 19048  0055A6  142F               	andwf	i2___flge@ff2+3,w,c
 19049  0055A8  6E33               	movwf	(??i2___flge+3)& (0+255),c
 19050  0055AA  5030               	movf	??i2___flge,w,c
 19051  0055AC  1031               	iorwf	??i2___flge+1,w,c
 19052  0055AE  1032               	iorwf	??i2___flge+2,w,c
 19053  0055B0  1033               	iorwf	??i2___flge+3,w,c
 19054  0055B2  A4D8               	btfss	status,2,c
 19055  0055B4  D008               	goto	i2l5476
 19056  0055B6  0E00               	movlw	0
 19057  0055B8  6E2C               	movwf	i2___flge@ff2,c
 19058  0055BA  0E00               	movlw	0
 19059  0055BC  6E2D               	movwf	i2___flge@ff2+1,c
 19060  0055BE  0E00               	movlw	0
 19061  0055C0  6E2E               	movwf	i2___flge@ff2+2,c
 19062  0055C2  0E00               	movlw	0
 19063  0055C4  6E2F               	movwf	i2___flge@ff2+3,c
 19064  0055C6                     i2l5476:
 19065  0055C6  AE2B               	btfss	i2___flge@ff1+3,7,c
 19066  0055C8  D009               	goto	i2l5480
 19067  0055CA  6C28               	negf	i2___flge@ff1,c
 19068  0055CC  1E29               	comf	i2___flge@ff1+1,f,c
 19069  0055CE  B0D8               	btfsc	status,0,c
 19070  0055D0  2A29               	incf	i2___flge@ff1+1,f,c
 19071  0055D2  1E2A               	comf	i2___flge@ff1+2,f,c
 19072  0055D4  B0D8               	btfsc	status,0,c
 19073  0055D6  2A2A               	incf	i2___flge@ff1+2,f,c
 19074  0055D8  0E80               	movlw	128
 19075  0055DA  562B               	subfwb	i2___flge@ff1+3,f,c
 19076  0055DC                     i2l5480:
 19077  0055DC  AE2F               	btfss	i2___flge@ff2+3,7,c
 19078  0055DE  D009               	goto	i2l1093
 19079  0055E0  6C2C               	negf	i2___flge@ff2,c
 19080  0055E2  1E2D               	comf	i2___flge@ff2+1,f,c
 19081  0055E4  B0D8               	btfsc	status,0,c
 19082  0055E6  2A2D               	incf	i2___flge@ff2+1,f,c
 19083  0055E8  1E2E               	comf	i2___flge@ff2+2,f,c
 19084  0055EA  B0D8               	btfsc	status,0,c
 19085  0055EC  2A2E               	incf	i2___flge@ff2+2,f,c
 19086  0055EE  0E80               	movlw	128
 19087  0055F0  562F               	subfwb	i2___flge@ff2+3,f,c
 19088  0055F2                     i2l1093:
 19089  0055F2  0E00               	movlw	0
 19090  0055F4  1A28               	xorwf	i2___flge@ff1,f,c
 19091  0055F6  0E00               	movlw	0
 19092  0055F8  1A29               	xorwf	i2___flge@ff1+1,f,c
 19093  0055FA  0E00               	movlw	0
 19094  0055FC  1A2A               	xorwf	i2___flge@ff1+2,f,c
 19095  0055FE  0E80               	movlw	128
 19096  005600  1A2B               	xorwf	i2___flge@ff1+3,f,c
 19097  005602  0E00               	movlw	0
 19098  005604  1A2C               	xorwf	i2___flge@ff2,f,c
 19099  005606  0E00               	movlw	0
 19100  005608  1A2D               	xorwf	i2___flge@ff2+1,f,c
 19101  00560A  0E00               	movlw	0
 19102  00560C  1A2E               	xorwf	i2___flge@ff2+2,f,c
 19103  00560E  0E80               	movlw	128
 19104  005610  1A2F               	xorwf	i2___flge@ff2+3,f,c
 19105  005612  502C               	movf	i2___flge@ff2,w,c
 19106  005614  5C28               	subwf	i2___flge@ff1,w,c
 19107  005616  502D               	movf	i2___flge@ff2+1,w,c
 19108  005618  5829               	subwfb	i2___flge@ff1+1,w,c
 19109  00561A  502E               	movf	i2___flge@ff2+2,w,c
 19110  00561C  582A               	subwfb	i2___flge@ff1+2,w,c
 19111  00561E  502F               	movf	i2___flge@ff2+3,w,c
 19112  005620  582B               	subwfb	i2___flge@ff1+3,w,c
 19113  005622  B0D8               	btfsc	status,0,c
 19114  005624  D002               	goto	i2l5486
 19115  005626  90D8               	bcf	status,0,c
 19116  005628  0012               	return	
 19117  00562A                     i2l5486:
 19118  00562A  80D8               	bsf	status,0,c
 19119  00562C  0012               	return		;funcret
 19120  00562E                     __end_ofi2___flge:
 19121                           	opt callstack 0
 19122                           
 19123 ;; *************** function i2___fleq *****************
 19124 ;; Defined at:
 19125 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 19126 ;; Parameters:    Size  Location     Type
 19127 ;;  ff1             4    0[COMRAM] unsigned char 
 19128 ;;  ff2             4    4[COMRAM] unsigned char 
 19129 ;; Auto vars:     Size  Location     Type
 19130 ;;		None
 19131 ;; Return value:  Size  Location     Type
 19132 ;;		None               void
 19133 ;; Registers used:
 19134 ;;		wreg, status,2, status,0
 19135 ;; Tracked objects:
 19136 ;;		On entry : 0/0
 19137 ;;		On exit  : 0/0
 19138 ;;		Unchanged: 0/0
 19139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19140 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19143 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19144 ;;Total ram usage:       12 bytes
 19145 ;; Hardware stack levels used:    1
 19146 ;; This function calls:
 19147 ;;		Nothing
 19148 ;; This function is called by:
 19149 ;;		i2_efgtoa
 19150 ;; This function uses a non-reentrant model
 19151 ;;
 19152                           
 19153                           	psect	text96
 19154  006002                     __ptext96:
 19155                           	opt callstack 0
 19156  006002                     i2___fleq:
 19157                           	opt callstack 12
 19158                           
 19159                           ;incstack = 0
 19160  006002  0E00               	movlw	0
 19161  006004  1401               	andwf	i2___fleq@ff1,w,c
 19162  006006  6E09               	movwf	??i2___fleq& (0+255),c
 19163  006008  0E00               	movlw	0
 19164  00600A  1402               	andwf	i2___fleq@ff1+1,w,c
 19165  00600C  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 19166  00600E  0E80               	movlw	128
 19167  006010  1403               	andwf	i2___fleq@ff1+2,w,c
 19168  006012  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 19169  006014  0E7F               	movlw	127
 19170  006016  1404               	andwf	i2___fleq@ff1+3,w,c
 19171  006018  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 19172  00601A  5009               	movf	??i2___fleq,w,c
 19173  00601C  100A               	iorwf	??i2___fleq+1,w,c
 19174  00601E  100B               	iorwf	??i2___fleq+2,w,c
 19175  006020  100C               	iorwf	??i2___fleq+3,w,c
 19176  006022  A4D8               	btfss	status,2,c
 19177  006024  D008               	goto	i2l5456
 19178  006026  0E00               	movlw	0
 19179  006028  6E01               	movwf	i2___fleq@ff1,c
 19180  00602A  0E00               	movlw	0
 19181  00602C  6E02               	movwf	i2___fleq@ff1+1,c
 19182  00602E  0E00               	movlw	0
 19183  006030  6E03               	movwf	i2___fleq@ff1+2,c
 19184  006032  0E00               	movlw	0
 19185  006034  6E04               	movwf	i2___fleq@ff1+3,c
 19186  006036                     i2l5456:
 19187  006036  0E00               	movlw	0
 19188  006038  1405               	andwf	i2___fleq@ff2,w,c
 19189  00603A  6E09               	movwf	??i2___fleq& (0+255),c
 19190  00603C  0E00               	movlw	0
 19191  00603E  1406               	andwf	i2___fleq@ff2+1,w,c
 19192  006040  6E0A               	movwf	(??i2___fleq+1)& (0+255),c
 19193  006042  0E80               	movlw	128
 19194  006044  1407               	andwf	i2___fleq@ff2+2,w,c
 19195  006046  6E0B               	movwf	(??i2___fleq+2)& (0+255),c
 19196  006048  0E7F               	movlw	127
 19197  00604A  1408               	andwf	i2___fleq@ff2+3,w,c
 19198  00604C  6E0C               	movwf	(??i2___fleq+3)& (0+255),c
 19199  00604E  5009               	movf	??i2___fleq,w,c
 19200  006050  100A               	iorwf	??i2___fleq+1,w,c
 19201  006052  100B               	iorwf	??i2___fleq+2,w,c
 19202  006054  100C               	iorwf	??i2___fleq+3,w,c
 19203  006056  A4D8               	btfss	status,2,c
 19204  006058  D008               	goto	i2l5460
 19205  00605A  0E00               	movlw	0
 19206  00605C  6E05               	movwf	i2___fleq@ff2,c
 19207  00605E  0E00               	movlw	0
 19208  006060  6E06               	movwf	i2___fleq@ff2+1,c
 19209  006062  0E00               	movlw	0
 19210  006064  6E07               	movwf	i2___fleq@ff2+2,c
 19211  006066  0E00               	movlw	0
 19212  006068  6E08               	movwf	i2___fleq@ff2+3,c
 19213  00606A                     i2l5460:
 19214  00606A  5005               	movf	i2___fleq@ff2,w,c
 19215  00606C  1801               	xorwf	i2___fleq@ff1,w,c
 19216  00606E  E10A               	bnz	i2u662_40
 19217  006070  5006               	movf	i2___fleq@ff2+1,w,c
 19218  006072  1802               	xorwf	i2___fleq@ff1+1,w,c
 19219  006074  E107               	bnz	i2u662_40
 19220  006076  5007               	movf	i2___fleq@ff2+2,w,c
 19221  006078  1803               	xorwf	i2___fleq@ff1+2,w,c
 19222  00607A  E104               	bnz	i2u662_40
 19223  00607C  5008               	movf	i2___fleq@ff2+3,w,c
 19224  00607E  1804               	xorwf	i2___fleq@ff1+3,w,c
 19225  006080  B4D8               	btfsc	status,2,c
 19226  006082  D002               	goto	i2l5464
 19227  006084                     i2u662_40:
 19228  006084  90D8               	bcf	status,0,c
 19229  006086  0012               	return	
 19230  006088                     i2l5464:
 19231  006088  80D8               	bsf	status,0,c
 19232  00608A  0012               	return		;funcret
 19233  00608C                     __end_ofi2___fleq:
 19234                           	opt callstack 0
 19235                           
 19236 ;; *************** function i2___fldiv *****************
 19237 ;; Defined at:
 19238 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 19239 ;; Parameters:    Size  Location     Type
 19240 ;;  b               4   39[COMRAM] unsigned char 
 19241 ;;  a               4   43[COMRAM] unsigned char 
 19242 ;; Auto vars:     Size  Location     Type
 19243 ;;  __fldiv         4   58[COMRAM] unsigned long 
 19244 ;;  __fldiv         4   51[COMRAM] unsigned long 
 19245 ;;  __fldiv         2   56[COMRAM] short 
 19246 ;;  __fldiv         1   63[COMRAM] unsigned char 
 19247 ;;  __fldiv         1   62[COMRAM] unsigned char 
 19248 ;;  __fldiv         1   55[COMRAM] unsigned char 
 19249 ;; Return value:  Size  Location     Type
 19250 ;;                  4   39[COMRAM] unsigned char 
 19251 ;; Registers used:
 19252 ;;		wreg, status,2, status,0
 19253 ;; Tracked objects:
 19254 ;;		On entry : 0/0
 19255 ;;		On exit  : 0/0
 19256 ;;		Unchanged: 0/0
 19257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19258 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19259 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19260 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19261 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19262 ;;Total ram usage:       25 bytes
 19263 ;; Hardware stack levels used:    1
 19264 ;; This function calls:
 19265 ;;		Nothing
 19266 ;; This function is called by:
 19267 ;;		_adafruit
 19268 ;;		_dataLogRead
 19269 ;;		i2_efgtoa
 19270 ;; This function uses a non-reentrant model
 19271 ;;
 19272                           
 19273                           	psect	text97
 19274  0041FE                     __ptext97:
 19275                           	opt callstack 0
 19276  0041FE                     i2___fldiv:
 19277                           	opt callstack 12
 19278                           
 19279                           ;incstack = 0
 19280  0041FE  502B               	movf	i2___fldiv@b+3,w,c
 19281  004200  0B80               	andlw	128
 19282  004202  6E38               	movwf	i2___fldiv@sign,c
 19283  004204  502B               	movf	i2___fldiv@b+3,w,c
 19284  004206  242B               	addwf	i2___fldiv@b+3,w,c
 19285  004208  6E3F               	movwf	i2___fldiv@bexp,c
 19286  00420A  BE2A               	btfsc	i2___fldiv@b+2,7,c
 19287  00420C  803F               	bsf	i2___fldiv@bexp,0,c
 19288  00420E  503F               	movf	i2___fldiv@bexp,w,c
 19289  004210  B4D8               	btfsc	status,2,c
 19290  004212  D00D               	goto	i2l5564
 19291  004214  283F               	incf	i2___fldiv@bexp,w,c
 19292  004216  A4D8               	btfss	status,2,c
 19293  004218  D008               	goto	i2l5560
 19294  00421A  0E00               	movlw	0
 19295  00421C  6E28               	movwf	i2___fldiv@b,c
 19296  00421E  0E00               	movlw	0
 19297  004220  6E29               	movwf	i2___fldiv@b+1,c
 19298  004222  0E00               	movlw	0
 19299  004224  6E2A               	movwf	i2___fldiv@b+2,c
 19300  004226  0E00               	movlw	0
 19301  004228  6E2B               	movwf	i2___fldiv@b+3,c
 19302  00422A                     i2l5560:
 19303  00422A  8E2A               	bsf	i2___fldiv@b+2,7,c
 19304  00422C  D006               	goto	L26
 19305  00422E                     i2l5564:
 19306  00422E  0E00               	movlw	0
 19307  004230  6E28               	movwf	i2___fldiv@b,c
 19308  004232  0E00               	movlw	0
 19309  004234  6E29               	movwf	i2___fldiv@b+1,c
 19310  004236  0E00               	movlw	0
 19311  004238  6E2A               	movwf	i2___fldiv@b+2,c
 19312  00423A                     L26:
 19313  00423A  0E00               	movlw	0
 19314  00423C  6E2B               	movwf	i2___fldiv@b+3,c
 19315  00423E  502F               	movf	i2___fldiv@a+3,w,c
 19316  004240  0B80               	andlw	128
 19317  004242  1A38               	xorwf	i2___fldiv@sign,f,c
 19318  004244  502F               	movf	i2___fldiv@a+3,w,c
 19319  004246  242F               	addwf	i2___fldiv@a+3,w,c
 19320  004248  6E40               	movwf	i2___fldiv@aexp,c
 19321  00424A  BE2E               	btfsc	i2___fldiv@a+2,7,c
 19322  00424C  8040               	bsf	i2___fldiv@aexp,0,c
 19323  00424E  5040               	movf	i2___fldiv@aexp,w,c
 19324  004250  B4D8               	btfsc	status,2,c
 19325  004252  D00D               	goto	i2l5584
 19326  004254  2840               	incf	i2___fldiv@aexp,w,c
 19327  004256  A4D8               	btfss	status,2,c
 19328  004258  D008               	goto	i2l5580
 19329  00425A  0E00               	movlw	0
 19330  00425C  6E2C               	movwf	i2___fldiv@a,c
 19331  00425E  0E00               	movlw	0
 19332  004260  6E2D               	movwf	i2___fldiv@a+1,c
 19333  004262  0E00               	movlw	0
 19334  004264  6E2E               	movwf	i2___fldiv@a+2,c
 19335  004266  0E00               	movlw	0
 19336  004268  6E2F               	movwf	i2___fldiv@a+3,c
 19337  00426A                     i2l5580:
 19338  00426A  8E2E               	bsf	i2___fldiv@a+2,7,c
 19339  00426C  D006               	goto	L27
 19340  00426E                     i2l5584:
 19341  00426E  0E00               	movlw	0
 19342  004270  6E2C               	movwf	i2___fldiv@a,c
 19343  004272  0E00               	movlw	0
 19344  004274  6E2D               	movwf	i2___fldiv@a+1,c
 19345  004276  0E00               	movlw	0
 19346  004278  6E2E               	movwf	i2___fldiv@a+2,c
 19347  00427A                     L27:
 19348  00427A  0E00               	movlw	0
 19349  00427C  6E2F               	movwf	i2___fldiv@a+3,c
 19350  00427E  502C               	movf	i2___fldiv@a,w,c
 19351  004280  102D               	iorwf	i2___fldiv@a+1,w,c
 19352  004282  102E               	iorwf	i2___fldiv@a+2,w,c
 19353  004284  102F               	iorwf	i2___fldiv@a+3,w,c
 19354  004286  A4D8               	btfss	status,2,c
 19355  004288  D017               	goto	i2l5598
 19356  00428A  0E00               	movlw	0
 19357  00428C  6E28               	movwf	i2___fldiv@b,c
 19358  00428E  0E00               	movlw	0
 19359  004290  6E29               	movwf	i2___fldiv@b+1,c
 19360  004292  0E00               	movlw	0
 19361  004294  6E2A               	movwf	i2___fldiv@b+2,c
 19362  004296  0E00               	movlw	0
 19363  004298  6E2B               	movwf	i2___fldiv@b+3,c
 19364  00429A  0E80               	movlw	128
 19365  00429C  122A               	iorwf	i2___fldiv@b+2,f,c
 19366  00429E  0E7F               	movlw	127
 19367  0042A0  122B               	iorwf	i2___fldiv@b+3,f,c
 19368  0042A2                     i2l5592:
 19369  0042A2  5038               	movf	i2___fldiv@sign,w,c
 19370  0042A4  122B               	iorwf	i2___fldiv@b+3,f,c
 19371  0042A6  C028  F028         	movff	i2___fldiv@b,?i2___fldiv
 19372  0042AA  C029  F029         	movff	i2___fldiv@b+1,?i2___fldiv+1
 19373  0042AE  C02A  F02A         	movff	i2___fldiv@b+2,?i2___fldiv+2
 19374  0042B2  C02B  F02B         	movff	i2___fldiv@b+3,?i2___fldiv+3
 19375  0042B6  0012               	return	
 19376  0042B8                     i2l5598:
 19377  0042B8  503F               	movf	i2___fldiv@bexp,w,c
 19378  0042BA  A4D8               	btfss	status,2,c
 19379  0042BC  D009               	goto	i2l5606
 19380  0042BE  0E00               	movlw	0
 19381  0042C0  6E28               	movwf	?i2___fldiv,c
 19382  0042C2  0E00               	movlw	0
 19383  0042C4  6E29               	movwf	?i2___fldiv+1,c
 19384  0042C6  0E00               	movlw	0
 19385  0042C8  6E2A               	movwf	?i2___fldiv+2,c
 19386  0042CA  0E00               	movlw	0
 19387  0042CC  6E2B               	movwf	?i2___fldiv+3,c
 19388  0042CE  0012               	return	
 19389  0042D0                     i2l5606:
 19390  0042D0  5040               	movf	i2___fldiv@aexp,w,c
 19391  0042D2  C03F  F030         	movff	i2___fldiv@bexp,??i2___fldiv
 19392  0042D6  6A31               	clrf	(??i2___fldiv+1)& (0+255),c
 19393  0042D8  5E30               	subwf	??i2___fldiv,f,c
 19394  0042DA  0E00               	movlw	0
 19395  0042DC  5A31               	subwfb	??i2___fldiv+1,f,c
 19396  0042DE  0E7F               	movlw	127
 19397  0042E0  2430               	addwf	??i2___fldiv,w,c
 19398  0042E2  6E39               	movwf	i2___fldiv@new_exp,c
 19399  0042E4  0E00               	movlw	0
 19400  0042E6  2031               	addwfc	??i2___fldiv+1,w,c
 19401  0042E8  6E3A               	movwf	i2___fldiv@new_exp+1,c
 19402  0042EA  C028  F034         	movff	i2___fldiv@b,i2___fldiv@rem
 19403  0042EE  C029  F035         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 19404  0042F2  C02A  F036         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 19405  0042F6  C02B  F037         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 19406  0042FA  0E00               	movlw	0
 19407  0042FC  6E28               	movwf	i2___fldiv@b,c
 19408  0042FE  0E00               	movlw	0
 19409  004300  6E29               	movwf	i2___fldiv@b+1,c
 19410  004302  0E00               	movlw	0
 19411  004304  6E2A               	movwf	i2___fldiv@b+2,c
 19412  004306  0E00               	movlw	0
 19413  004308  6E2B               	movwf	i2___fldiv@b+3,c
 19414  00430A  0E00               	movlw	0
 19415  00430C  6E3B               	movwf	i2___fldiv@grs,c
 19416  00430E  0E00               	movlw	0
 19417  004310  6E3C               	movwf	i2___fldiv@grs+1,c
 19418  004312  0E00               	movlw	0
 19419  004314  6E3D               	movwf	i2___fldiv@grs+2,c
 19420  004316  0E00               	movlw	0
 19421  004318  6E3E               	movwf	i2___fldiv@grs+3,c
 19422  00431A  0E00               	movlw	0
 19423  00431C  6E40               	movwf	i2___fldiv@aexp,c
 19424  00431E  D028               	goto	i2l1412
 19425  004320                     i2l5616:
 19426  004320  5040               	movf	i2___fldiv@aexp,w,c
 19427  004322  B4D8               	btfsc	status,2,c
 19428  004324  D011               	goto	i2l5624
 19429  004326  90D8               	bcf	status,0,c
 19430  004328  3634               	rlcf	i2___fldiv@rem,f,c
 19431  00432A  3635               	rlcf	i2___fldiv@rem+1,f,c
 19432  00432C  3636               	rlcf	i2___fldiv@rem+2,f,c
 19433  00432E  3637               	rlcf	i2___fldiv@rem+3,f,c
 19434  004330  90D8               	bcf	status,0,c
 19435  004332  3628               	rlcf	i2___fldiv@b,f,c
 19436  004334  3629               	rlcf	i2___fldiv@b+1,f,c
 19437  004336  362A               	rlcf	i2___fldiv@b+2,f,c
 19438  004338  362B               	rlcf	i2___fldiv@b+3,f,c
 19439  00433A  BE3E               	btfsc	i2___fldiv@grs+3,7,c
 19440  00433C  8028               	bsf	i2___fldiv@b,0,c
 19441  00433E  90D8               	bcf	status,0,c
 19442  004340  363B               	rlcf	i2___fldiv@grs,f,c
 19443  004342  363C               	rlcf	i2___fldiv@grs+1,f,c
 19444  004344  363D               	rlcf	i2___fldiv@grs+2,f,c
 19445  004346  363E               	rlcf	i2___fldiv@grs+3,f,c
 19446  004348                     i2l5624:
 19447  004348  502C               	movf	i2___fldiv@a,w,c
 19448  00434A  5C34               	subwf	i2___fldiv@rem,w,c
 19449  00434C  502D               	movf	i2___fldiv@a+1,w,c
 19450  00434E  5835               	subwfb	i2___fldiv@rem+1,w,c
 19451  004350  502E               	movf	i2___fldiv@a+2,w,c
 19452  004352  5836               	subwfb	i2___fldiv@rem+2,w,c
 19453  004354  502F               	movf	i2___fldiv@a+3,w,c
 19454  004356  5837               	subwfb	i2___fldiv@rem+3,w,c
 19455  004358  A0D8               	btfss	status,0,c
 19456  00435A  D009               	goto	i2l5630
 19457  00435C  8C3E               	bsf	i2___fldiv@grs+3,6,c
 19458  00435E  502C               	movf	i2___fldiv@a,w,c
 19459  004360  5E34               	subwf	i2___fldiv@rem,f,c
 19460  004362  502D               	movf	i2___fldiv@a+1,w,c
 19461  004364  5A35               	subwfb	i2___fldiv@rem+1,f,c
 19462  004366  502E               	movf	i2___fldiv@a+2,w,c
 19463  004368  5A36               	subwfb	i2___fldiv@rem+2,f,c
 19464  00436A  502F               	movf	i2___fldiv@a+3,w,c
 19465  00436C  5A37               	subwfb	i2___fldiv@rem+3,f,c
 19466  00436E                     i2l5630:
 19467  00436E  2A40               	incf	i2___fldiv@aexp,f,c
 19468  004370                     i2l1412:
 19469  004370  0E19               	movlw	25
 19470  004372  6440               	cpfsgt	i2___fldiv@aexp,c
 19471  004374  D7D5               	goto	i2l5616
 19472  004376  5034               	movf	i2___fldiv@rem,w,c
 19473  004378  1035               	iorwf	i2___fldiv@rem+1,w,c
 19474  00437A  1036               	iorwf	i2___fldiv@rem+2,w,c
 19475  00437C  1037               	iorwf	i2___fldiv@rem+3,w,c
 19476  00437E  B4D8               	btfsc	status,2,c
 19477  004380  D011               	goto	i2l5642
 19478  004382  803B               	bsf	i2___fldiv@grs,0,c
 19479  004384  D00F               	goto	i2l5642
 19480  004386                     i2l5636:
 19481  004386  90D8               	bcf	status,0,c
 19482  004388  3628               	rlcf	i2___fldiv@b,f,c
 19483  00438A  3629               	rlcf	i2___fldiv@b+1,f,c
 19484  00438C  362A               	rlcf	i2___fldiv@b+2,f,c
 19485  00438E  362B               	rlcf	i2___fldiv@b+3,f,c
 19486  004390  BE3E               	btfsc	i2___fldiv@grs+3,7,c
 19487  004392  8028               	bsf	i2___fldiv@b,0,c
 19488  004394  90D8               	bcf	status,0,c
 19489  004396  363B               	rlcf	i2___fldiv@grs,f,c
 19490  004398  363C               	rlcf	i2___fldiv@grs+1,f,c
 19491  00439A  363D               	rlcf	i2___fldiv@grs+2,f,c
 19492  00439C  363E               	rlcf	i2___fldiv@grs+3,f,c
 19493  00439E  0639               	decf	i2___fldiv@new_exp,f,c
 19494  0043A0  A0D8               	btfss	status,0,c
 19495  0043A2  063A               	decf	i2___fldiv@new_exp+1,f,c
 19496  0043A4                     i2l5642:
 19497  0043A4  AE2A               	btfss	i2___fldiv@b+2,7,c
 19498  0043A6  D7EF               	goto	i2l5636
 19499  0043A8  0E00               	movlw	0
 19500  0043AA  6E40               	movwf	i2___fldiv@aexp,c
 19501  0043AC  AE3E               	btfss	i2___fldiv@grs+3,7,c
 19502  0043AE  D017               	goto	i2l1423
 19503  0043B0  0EFF               	movlw	255
 19504  0043B2  143B               	andwf	i2___fldiv@grs,w,c
 19505  0043B4  6E30               	movwf	??i2___fldiv& (0+255),c
 19506  0043B6  0EFF               	movlw	255
 19507  0043B8  143C               	andwf	i2___fldiv@grs+1,w,c
 19508  0043BA  6E31               	movwf	(??i2___fldiv+1)& (0+255),c
 19509  0043BC  0EFF               	movlw	255
 19510  0043BE  143D               	andwf	i2___fldiv@grs+2,w,c
 19511  0043C0  6E32               	movwf	(??i2___fldiv+2)& (0+255),c
 19512  0043C2  0E7F               	movlw	127
 19513  0043C4  143E               	andwf	i2___fldiv@grs+3,w,c
 19514  0043C6  6E33               	movwf	(??i2___fldiv+3)& (0+255),c
 19515  0043C8  5030               	movf	??i2___fldiv,w,c
 19516  0043CA  1031               	iorwf	??i2___fldiv+1,w,c
 19517  0043CC  1032               	iorwf	??i2___fldiv+2,w,c
 19518  0043CE  1033               	iorwf	??i2___fldiv+3,w,c
 19519  0043D0  B4D8               	btfsc	status,2,c
 19520  0043D2  D003               	goto	i2l1424
 19521  0043D4                     i2u692_40:
 19522  0043D4  0E01               	movlw	1
 19523  0043D6  6E40               	movwf	i2___fldiv@aexp,c
 19524  0043D8  D002               	goto	i2l1423
 19525  0043DA                     i2l1424:
 19526  0043DA  B028               	btfsc	i2___fldiv@b,0,c
 19527  0043DC  D7FB               	goto	i2u692_40
 19528  0043DE                     i2l1423:
 19529  0043DE  5040               	movf	i2___fldiv@aexp,w,c
 19530  0043E0  B4D8               	btfsc	status,2,c
 19531  0043E2  D01F               	goto	i2l5662
 19532  0043E4  0E01               	movlw	1
 19533  0043E6  2628               	addwf	i2___fldiv@b,f,c
 19534  0043E8  0E00               	movlw	0
 19535  0043EA  2229               	addwfc	i2___fldiv@b+1,f,c
 19536  0043EC  222A               	addwfc	i2___fldiv@b+2,f,c
 19537  0043EE  222B               	addwfc	i2___fldiv@b+3,f,c
 19538  0043F0  A02B               	btfss	i2___fldiv@b+3,0,c
 19539  0043F2  D017               	goto	i2l5662
 19540  0043F4  C028  F030         	movff	i2___fldiv@b,??i2___fldiv
 19541  0043F8  C029  F031         	movff	i2___fldiv@b+1,??i2___fldiv+1
 19542  0043FC  C02A  F032         	movff	i2___fldiv@b+2,??i2___fldiv+2
 19543  004400  C02B  F033         	movff	i2___fldiv@b+3,??i2___fldiv+3
 19544  004404  3433               	rlcf	??i2___fldiv+3,w,c
 19545  004406  3233               	rrcf	??i2___fldiv+3,f,c
 19546  004408  3232               	rrcf	??i2___fldiv+2,f,c
 19547  00440A  3231               	rrcf	??i2___fldiv+1,f,c
 19548  00440C  3230               	rrcf	??i2___fldiv,f,c
 19549  00440E  C030  F028         	movff	??i2___fldiv,i2___fldiv@b
 19550  004412  C031  F029         	movff	??i2___fldiv+1,i2___fldiv@b+1
 19551  004416  C032  F02A         	movff	??i2___fldiv+2,i2___fldiv@b+2
 19552  00441A  C033  F02B         	movff	??i2___fldiv+3,i2___fldiv@b+3
 19553  00441E  4A39               	infsnz	i2___fldiv@new_exp,f,c
 19554  004420  2A3A               	incf	i2___fldiv@new_exp+1,f,c
 19555  004422                     i2l5662:
 19556  004422  BE3A               	btfsc	i2___fldiv@new_exp+1,7,c
 19557  004424  D010               	goto	i2l5666
 19558  004426  503A               	movf	i2___fldiv@new_exp+1,w,c
 19559  004428  E103               	bnz	i2u696_40
 19560  00442A  2839               	incf	i2___fldiv@new_exp,w,c
 19561  00442C  A0D8               	btfss	status,0,c
 19562  00442E  D00B               	goto	i2l5666
 19563  004430                     i2u696_40:
 19564  004430  0E00               	movlw	0
 19565  004432  6E3A               	movwf	i2___fldiv@new_exp+1,c
 19566  004434  6839               	setf	i2___fldiv@new_exp,c
 19567  004436  0E00               	movlw	0
 19568  004438  6E28               	movwf	i2___fldiv@b,c
 19569  00443A  0E00               	movlw	0
 19570  00443C  6E29               	movwf	i2___fldiv@b+1,c
 19571  00443E  0E00               	movlw	0
 19572  004440  6E2A               	movwf	i2___fldiv@b+2,c
 19573  004442  0E00               	movlw	0
 19574  004444  6E2B               	movwf	i2___fldiv@b+3,c
 19575  004446                     i2l5666:
 19576  004446  BE3A               	btfsc	i2___fldiv@new_exp+1,7,c
 19577  004448  D005               	goto	i2u697_40
 19578  00444A  503A               	movf	i2___fldiv@new_exp+1,w,c
 19579  00444C  E111               	bnz	i2l5670
 19580  00444E  0439               	decf	i2___fldiv@new_exp,w,c
 19581  004450  B0D8               	btfsc	status,0,c
 19582  004452  D00E               	goto	i2l5670
 19583  004454                     i2u697_40:
 19584  004454  0E00               	movlw	0
 19585  004456  6E3A               	movwf	i2___fldiv@new_exp+1,c
 19586  004458  0E00               	movlw	0
 19587  00445A  6E39               	movwf	i2___fldiv@new_exp,c
 19588  00445C  0E00               	movlw	0
 19589  00445E  6E28               	movwf	i2___fldiv@b,c
 19590  004460  0E00               	movlw	0
 19591  004462  6E29               	movwf	i2___fldiv@b+1,c
 19592  004464  0E00               	movlw	0
 19593  004466  6E2A               	movwf	i2___fldiv@b+2,c
 19594  004468  0E00               	movlw	0
 19595  00446A  6E2B               	movwf	i2___fldiv@b+3,c
 19596  00446C  0E00               	movlw	0
 19597  00446E  6E38               	movwf	i2___fldiv@sign,c
 19598  004470                     i2l5670:
 19599  004470  C039  F03F         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 19600  004474  A03F               	btfss	i2___fldiv@bexp,0,c
 19601  004476  D002               	goto	i2l5676
 19602  004478  8E2A               	bsf	i2___fldiv@b+2,7,c
 19603  00447A  D001               	goto	i2l5678
 19604  00447C                     i2l5676:
 19605  00447C  9E2A               	bcf	i2___fldiv@b+2,7,c
 19606  00447E                     i2l5678:
 19607  00447E  90D8               	bcf	status,0,c
 19608  004480  303F               	rrcf	i2___fldiv@bexp,w,c
 19609  004482  6E2B               	movwf	i2___fldiv@b+3,c
 19610  004484  D70E               	goto	i2l5592
 19611  004486                     __end_ofi2___fldiv:
 19612                           	opt callstack 0
 19613                           
 19614 ;; *************** function i2___awmod *****************
 19615 ;; Defined at:
 19616 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 19617 ;; Parameters:    Size  Location     Type
 19618 ;;  dividend        2    0[COMRAM] int 
 19619 ;;  divisor         2    2[COMRAM] int 
 19620 ;; Auto vars:     Size  Location     Type
 19621 ;;  __awmod         1    5[COMRAM] unsigned char 
 19622 ;;  __awmod         1    4[COMRAM] unsigned char 
 19623 ;; Return value:  Size  Location     Type
 19624 ;;                  2    0[COMRAM] int 
 19625 ;; Registers used:
 19626 ;;		wreg, status,2, status,0
 19627 ;; Tracked objects:
 19628 ;;		On entry : 0/0
 19629 ;;		On exit  : 0/0
 19630 ;;		Unchanged: 0/0
 19631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19635 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19636 ;;Total ram usage:        6 bytes
 19637 ;; Hardware stack levels used:    1
 19638 ;; This function calls:
 19639 ;;		Nothing
 19640 ;; This function is called by:
 19641 ;;		i2_efgtoa
 19642 ;; This function uses a non-reentrant model
 19643 ;;
 19644                           
 19645                           	psect	text98
 19646  006386                     __ptext98:
 19647                           	opt callstack 0
 19648  006386                     i2___awmod:
 19649                           	opt callstack 12
 19650                           
 19651                           ;incstack = 0
 19652  006386  0E00               	movlw	0
 19653  006388  6E06               	movwf	i2___awmod@sign,c
 19654  00638A  AE02               	btfss	i2___awmod@dividend+1,7,c
 19655  00638C  D006               	goto	i2l5424
 19656  00638E  6C01               	negf	i2___awmod@dividend,c
 19657  006390  1E02               	comf	i2___awmod@dividend+1,f,c
 19658  006392  B0D8               	btfsc	status,0,c
 19659  006394  2A02               	incf	i2___awmod@dividend+1,f,c
 19660  006396  0E01               	movlw	1
 19661  006398  6E06               	movwf	i2___awmod@sign,c
 19662  00639A                     i2l5424:
 19663  00639A  AE04               	btfss	i2___awmod@divisor+1,7,c
 19664  00639C  D004               	goto	i2l5428
 19665  00639E  6C03               	negf	i2___awmod@divisor,c
 19666  0063A0  1E04               	comf	i2___awmod@divisor+1,f,c
 19667  0063A2  B0D8               	btfsc	status,0,c
 19668  0063A4  2A04               	incf	i2___awmod@divisor+1,f,c
 19669  0063A6                     i2l5428:
 19670  0063A6  5003               	movf	i2___awmod@divisor,w,c
 19671  0063A8  1004               	iorwf	i2___awmod@divisor+1,w,c
 19672  0063AA  B4D8               	btfsc	status,2,c
 19673  0063AC  D018               	goto	i2l5444
 19674  0063AE  0E01               	movlw	1
 19675  0063B0  6E05               	movwf	i2___awmod@counter,c
 19676  0063B2  D004               	goto	i2l5434
 19677  0063B4                     i2l5432:
 19678  0063B4  90D8               	bcf	status,0,c
 19679  0063B6  3603               	rlcf	i2___awmod@divisor,f,c
 19680  0063B8  3604               	rlcf	i2___awmod@divisor+1,f,c
 19681  0063BA  2A05               	incf	i2___awmod@counter,f,c
 19682  0063BC                     i2l5434:
 19683  0063BC  AE04               	btfss	i2___awmod@divisor+1,7,c
 19684  0063BE  D7FA               	goto	i2l5432
 19685  0063C0                     i2u657_40:
 19686  0063C0  5003               	movf	i2___awmod@divisor,w,c
 19687  0063C2  5C01               	subwf	i2___awmod@dividend,w,c
 19688  0063C4  5004               	movf	i2___awmod@divisor+1,w,c
 19689  0063C6  5802               	subwfb	i2___awmod@dividend+1,w,c
 19690  0063C8  A0D8               	btfss	status,0,c
 19691  0063CA  D004               	goto	i2l5440
 19692  0063CC  5003               	movf	i2___awmod@divisor,w,c
 19693  0063CE  5E01               	subwf	i2___awmod@dividend,f,c
 19694  0063D0  5004               	movf	i2___awmod@divisor+1,w,c
 19695  0063D2  5A02               	subwfb	i2___awmod@dividend+1,f,c
 19696  0063D4                     i2l5440:
 19697  0063D4  90D8               	bcf	status,0,c
 19698  0063D6  3204               	rrcf	i2___awmod@divisor+1,f,c
 19699  0063D8  3203               	rrcf	i2___awmod@divisor,f,c
 19700  0063DA  2E05               	decfsz	i2___awmod@counter,f,c
 19701  0063DC  D7F1               	goto	i2u657_40
 19702  0063DE                     i2l5444:
 19703  0063DE  5006               	movf	i2___awmod@sign,w,c
 19704  0063E0  B4D8               	btfsc	status,2,c
 19705  0063E2  D004               	goto	i2l5448
 19706  0063E4  6C01               	negf	i2___awmod@dividend,c
 19707  0063E6  1E02               	comf	i2___awmod@dividend+1,f,c
 19708  0063E8  B0D8               	btfsc	status,0,c
 19709  0063EA  2A02               	incf	i2___awmod@dividend+1,f,c
 19710  0063EC                     i2l5448:
 19711  0063EC  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 19712  0063F0  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 19713  0063F4  0012               	return		;funcret
 19714  0063F6                     __end_ofi2___awmod:
 19715                           	opt callstack 0
 19716                           
 19717 ;; *************** function i2___awdiv *****************
 19718 ;; Defined at:
 19719 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 19720 ;; Parameters:    Size  Location     Type
 19721 ;;  dividend        2    0[COMRAM] int 
 19722 ;;  divisor         2    2[COMRAM] int 
 19723 ;; Auto vars:     Size  Location     Type
 19724 ;;  __awdiv         2    6[COMRAM] int 
 19725 ;;  __awdiv         1    5[COMRAM] unsigned char 
 19726 ;;  __awdiv         1    4[COMRAM] unsigned char 
 19727 ;; Return value:  Size  Location     Type
 19728 ;;                  2    0[COMRAM] int 
 19729 ;; Registers used:
 19730 ;;		wreg, status,2, status,0
 19731 ;; Tracked objects:
 19732 ;;		On entry : 0/0
 19733 ;;		On exit  : 0/0
 19734 ;;		Unchanged: 0/0
 19735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19737 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19739 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19740 ;;Total ram usage:        8 bytes
 19741 ;; Hardware stack levels used:    1
 19742 ;; This function calls:
 19743 ;;		Nothing
 19744 ;; This function is called by:
 19745 ;;		i2_efgtoa
 19746 ;; This function uses a non-reentrant model
 19747 ;;
 19748                           
 19749                           	psect	text99
 19750  006198                     __ptext99:
 19751                           	opt callstack 0
 19752  006198                     i2___awdiv:
 19753                           	opt callstack 12
 19754                           
 19755                           ;incstack = 0
 19756  006198  0E00               	movlw	0
 19757  00619A  6E06               	movwf	i2___awdiv@sign,c
 19758  00619C  AE04               	btfss	i2___awdiv@divisor+1,7,c
 19759  00619E  D006               	goto	i2l5380
 19760  0061A0  6C03               	negf	i2___awdiv@divisor,c
 19761  0061A2  1E04               	comf	i2___awdiv@divisor+1,f,c
 19762  0061A4  B0D8               	btfsc	status,0,c
 19763  0061A6  2A04               	incf	i2___awdiv@divisor+1,f,c
 19764  0061A8  0E01               	movlw	1
 19765  0061AA  6E06               	movwf	i2___awdiv@sign,c
 19766  0061AC                     i2l5380:
 19767  0061AC  AE02               	btfss	i2___awdiv@dividend+1,7,c
 19768  0061AE  D006               	goto	i2l5386
 19769  0061B0  6C01               	negf	i2___awdiv@dividend,c
 19770  0061B2  1E02               	comf	i2___awdiv@dividend+1,f,c
 19771  0061B4  B0D8               	btfsc	status,0,c
 19772  0061B6  2A02               	incf	i2___awdiv@dividend+1,f,c
 19773  0061B8  0E01               	movlw	1
 19774  0061BA  1A06               	xorwf	i2___awdiv@sign,f,c
 19775  0061BC                     i2l5386:
 19776  0061BC  0E00               	movlw	0
 19777  0061BE  6E08               	movwf	i2___awdiv@quotient+1,c
 19778  0061C0  0E00               	movlw	0
 19779  0061C2  6E07               	movwf	i2___awdiv@quotient,c
 19780  0061C4  5003               	movf	i2___awdiv@divisor,w,c
 19781  0061C6  1004               	iorwf	i2___awdiv@divisor+1,w,c
 19782  0061C8  B4D8               	btfsc	status,2,c
 19783  0061CA  D01C               	goto	i2l5408
 19784  0061CC  0E01               	movlw	1
 19785  0061CE  6E05               	movwf	i2___awdiv@counter,c
 19786  0061D0  D004               	goto	i2l5394
 19787  0061D2                     i2l5392:
 19788  0061D2  90D8               	bcf	status,0,c
 19789  0061D4  3603               	rlcf	i2___awdiv@divisor,f,c
 19790  0061D6  3604               	rlcf	i2___awdiv@divisor+1,f,c
 19791  0061D8  2A05               	incf	i2___awdiv@counter,f,c
 19792  0061DA                     i2l5394:
 19793  0061DA  AE04               	btfss	i2___awdiv@divisor+1,7,c
 19794  0061DC  D7FA               	goto	i2l5392
 19795  0061DE                     i2u651_40:
 19796  0061DE  90D8               	bcf	status,0,c
 19797  0061E0  3607               	rlcf	i2___awdiv@quotient,f,c
 19798  0061E2  3608               	rlcf	i2___awdiv@quotient+1,f,c
 19799  0061E4  5003               	movf	i2___awdiv@divisor,w,c
 19800  0061E6  5C01               	subwf	i2___awdiv@dividend,w,c
 19801  0061E8  5004               	movf	i2___awdiv@divisor+1,w,c
 19802  0061EA  5802               	subwfb	i2___awdiv@dividend+1,w,c
 19803  0061EC  A0D8               	btfss	status,0,c
 19804  0061EE  D005               	goto	i2l5404
 19805  0061F0  5003               	movf	i2___awdiv@divisor,w,c
 19806  0061F2  5E01               	subwf	i2___awdiv@dividend,f,c
 19807  0061F4  5004               	movf	i2___awdiv@divisor+1,w,c
 19808  0061F6  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 19809  0061F8  8007               	bsf	i2___awdiv@quotient,0,c
 19810  0061FA                     i2l5404:
 19811  0061FA  90D8               	bcf	status,0,c
 19812  0061FC  3204               	rrcf	i2___awdiv@divisor+1,f,c
 19813  0061FE  3203               	rrcf	i2___awdiv@divisor,f,c
 19814  006200  2E05               	decfsz	i2___awdiv@counter,f,c
 19815  006202  D7ED               	goto	i2u651_40
 19816  006204                     i2l5408:
 19817  006204  5006               	movf	i2___awdiv@sign,w,c
 19818  006206  B4D8               	btfsc	status,2,c
 19819  006208  D004               	goto	i2l5412
 19820  00620A  6C07               	negf	i2___awdiv@quotient,c
 19821  00620C  1E08               	comf	i2___awdiv@quotient+1,f,c
 19822  00620E  B0D8               	btfsc	status,0,c
 19823  006210  2A08               	incf	i2___awdiv@quotient+1,f,c
 19824  006212                     i2l5412:
 19825  006212  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 19826  006216  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 19827  00621A  0012               	return		;funcret
 19828  00621C                     __end_ofi2___awdiv:
 19829                           	opt callstack 0
 19830                           
 19831 ;; *************** function i2_atoi *****************
 19832 ;; Defined at:
 19833 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 19834 ;; Parameters:    Size  Location     Type
 19835 ;;  s               2    7[COMRAM] PTR const unsigned char 
 19836 ;;		 -> STR_15(21), STR_14(5), STR_13(21), STR_12(5), 
 19837 ;;		 -> STR_11(39), STR_10(10), STR_9(6), STR_8(6), 
 19838 ;;		 -> STR_7(31), STR_6(14), STR_3(15), 
 19839 ;; Auto vars:     Size  Location     Type
 19840 ;;  atoi            2   20[COMRAM] int 
 19841 ;;  atoi            2   13[COMRAM] int 
 19842 ;; Return value:  Size  Location     Type
 19843 ;;                  2    7[COMRAM] int 
 19844 ;; Registers used:
 19845 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19846 ;; Tracked objects:
 19847 ;;		On entry : 0/0
 19848 ;;		On exit  : 0/0
 19849 ;;		Unchanged: 0/0
 19850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19852 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19853 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19854 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19855 ;;Total ram usage:       15 bytes
 19856 ;; Hardware stack levels used:    1
 19857 ;; Hardware stack levels required when called:    1
 19858 ;; This function calls:
 19859 ;;		i2___wmul
 19860 ;;		i2_isdigit
 19861 ;;		i2_isspace
 19862 ;; This function is called by:
 19863 ;;		i2_vfpfcnvrt
 19864 ;; This function uses a non-reentrant model
 19865 ;;
 19866                           
 19867                           	psect	text100
 19868  004E70                     __ptext100:
 19869                           	opt callstack 0
 19870  004E70                     i2_atoi:
 19871                           	opt callstack 12
 19872                           
 19873                           ;incstack = 0
 19874  004E70  0E00               	movlw	0
 19875  004E72  6E16               	movwf	i2atoi@n+1,c
 19876  004E74  0E00               	movlw	0
 19877  004E76  6E15               	movwf	i2atoi@n,c
 19878  004E78  0E00               	movlw	0
 19879  004E7A  6E0F               	movwf	i2atoi@neg+1,c
 19880  004E7C  0E00               	movlw	0
 19881  004E7E  6E0E               	movwf	i2atoi@neg,c
 19882  004E80  D002               	goto	i2l6464
 19883  004E82                     i2l6462:
 19884  004E82  4A08               	infsnz	i2atoi@s,f,c
 19885  004E84  2A09               	incf	i2atoi@s+1,f,c
 19886  004E86                     i2l6464:
 19887  004E86  0E01               	movlw	1
 19888  004E88  6E14               	movwf	i2_atoi$2106,c
 19889  004E8A  C008  FFF6         	movff	i2atoi@s,tblptrl
 19890  004E8E  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 19891  004E92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19892  004E92  6AF8               	clrf	tblptru,c
 19893  004E94                     	endif
 19894  004E94                     	if	0	;tblptru may be non-zero
 19895  004E94                     	endif
 19896  004E94  0008               	tblrd		*
 19897  004E96  50F5               	movf	tablat,w,c
 19898  004E98  0A20               	xorlw	32
 19899  004E9A  B4D8               	btfsc	status,2,c
 19900  004E9C  D019               	goto	i2l6472
 19901  004E9E  0EF7               	movlw	247
 19902  004EA0  6E0A               	movwf	??i2_atoi& (0+255),c
 19903  004EA2  0EFF               	movlw	255
 19904  004EA4  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
 19905  004EA6  C008  FFF6         	movff	i2atoi@s,tblptrl
 19906  004EAA  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 19907  004EAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19908  004EAE  6AF8               	clrf	tblptru,c
 19909  004EB0                     	endif
 19910  004EB0                     	if	0	;tblptru may be non-zero
 19911  004EB0                     	endif
 19912  004EB0  0008               	tblrd		*
 19913  004EB2  50F5               	movf	tablat,w,c
 19914  004EB4  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
 19915  004EB6  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
 19916  004EB8  500A               	movf	??i2_atoi,w,c
 19917  004EBA  260C               	addwf	??i2_atoi+2,f,c
 19918  004EBC  500B               	movf	??i2_atoi+1,w,c
 19919  004EBE  220D               	addwfc	??i2_atoi+3,f,c
 19920  004EC0  500D               	movf	??i2_atoi+3,w,c
 19921  004EC2  E104               	bnz	i2u849_40
 19922  004EC4  0E05               	movlw	5
 19923  004EC6  5C0C               	subwf	??i2_atoi+2,w,c
 19924  004EC8  A0D8               	btfss	status,0,c
 19925  004ECA  D002               	goto	i2l6472
 19926  004ECC                     i2u849_40:
 19927  004ECC  0E00               	movlw	0
 19928  004ECE  6E14               	movwf	i2_atoi$2106,c
 19929  004ED0                     i2l6472:
 19930  004ED0  C014  F010         	movff	i2_atoi$2106,i2_atoi$2105
 19931  004ED4  6A11               	clrf	i2_atoi$2105+1,c
 19932  004ED6  5010               	movf	i2_atoi$2105,w,c
 19933  004ED8  1011               	iorwf	i2_atoi$2105+1,w,c
 19934  004EDA  B4D8               	btfsc	status,2,c
 19935  004EDC  D008               	goto	i2l6482
 19936  004EDE  D7D1               	goto	i2l6462
 19937  004EE0                     i2l6478:
 19938  004EE0  0E00               	movlw	0
 19939  004EE2  6E0F               	movwf	i2atoi@neg+1,c
 19940  004EE4  0E01               	movlw	1
 19941  004EE6  6E0E               	movwf	i2atoi@neg,c
 19942  004EE8                     i2l6480:
 19943  004EE8  4A08               	infsnz	i2atoi@s,f,c
 19944  004EEA  2A09               	incf	i2atoi@s+1,f,c
 19945  004EEC  D030               	goto	i2l6488
 19946  004EEE                     i2l6482:
 19947  004EEE  C008  FFF6         	movff	i2atoi@s,tblptrl
 19948  004EF2  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 19949  004EF6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19950  004EF6  6AF8               	clrf	tblptru,c
 19951  004EF8                     	endif
 19952  004EF8                     	if	0	;tblptru may be non-zero
 19953  004EF8                     	endif
 19954  004EF8  0008               	tblrd		*
 19955  004EFA  50F5               	movf	tablat,w,c
 19956  004EFC  6E0A               	movwf	??i2_atoi& (0+255),c
 19957  004EFE  6A0B               	clrf	(??i2_atoi+1)& (0+255),c
 19958                           
 19959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19960                           ; Switch size 1, requested type "simple"
 19961                           ; Number of cases is 1, Range of values is 0 to 0
 19962                           ; switch strategies available:
 19963                           ; Name         Instructions Cycles
 19964                           ; simple_byte            4     3 (average)
 19965                           ;	Chosen strategy is simple_byte
 19966  004F00  500B               	movf	??i2_atoi+1,w,c
 19967  004F02  0A00               	xorlw	0	; case 0
 19968  004F04  A4D8               	btfss	status,2,c
 19969  004F06  D023               	goto	i2l6488
 19970                           
 19971                           ; Switch size 1, requested type "simple"
 19972                           ; Number of cases is 2, Range of values is 43 to 45
 19973                           ; switch strategies available:
 19974                           ; Name         Instructions Cycles
 19975                           ; simple_byte            7     4 (average)
 19976                           ;	Chosen strategy is simple_byte
 19977  004F08  500A               	movf	??i2_atoi,w,c
 19978  004F0A  0A2B               	xorlw	43	; case 43
 19979  004F0C  B4D8               	btfsc	status,2,c
 19980  004F0E  D7EC               	goto	i2l6480
 19981  004F10  0A06               	xorlw	6	; case 45
 19982  004F12  B4D8               	btfsc	status,2,c
 19983  004F14  D7E5               	goto	i2l6478
 19984  004F16  D01B               	goto	i2l6488
 19985  004F18                     i2l6484:
 19986  004F18  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
 19987  004F1C  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
 19988  004F20  0E00               	movlw	0
 19989  004F22  6E04               	movwf	i2___wmul@multiplicand+1,c
 19990  004F24  0E0A               	movlw	10
 19991  004F26  6E03               	movwf	i2___wmul@multiplicand,c
 19992  004F28  EC98  F035         	call	i2___wmul	;wreg free
 19993  004F2C  C008  FFF6         	movff	i2atoi@s,tblptrl
 19994  004F30  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 19995  004F34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19996  004F34  6AF8               	clrf	tblptru,c
 19997  004F36                     	endif
 19998  004F36                     	if	0	;tblptru may be non-zero
 19999  004F36                     	endif
 20000  004F36  0008               	tblrd		*
 20001  004F38  50F5               	movf	tablat,w,c
 20002  004F3A  5E01               	subwf	?i2___wmul,f,c
 20003  004F3C  0E00               	movlw	0
 20004  004F3E  5A02               	subwfb	?i2___wmul+1,f,c
 20005  004F40  0E30               	movlw	48
 20006  004F42  2401               	addwf	?i2___wmul,w,c
 20007  004F44  6E15               	movwf	i2atoi@n,c
 20008  004F46  0E00               	movlw	0
 20009  004F48  2002               	addwfc	?i2___wmul+1,w,c
 20010  004F4A  6E16               	movwf	i2atoi@n+1,c
 20011  004F4C  D7CD               	goto	i2l6480
 20012  004F4E                     i2l6488:
 20013  004F4E  0ED0               	movlw	208
 20014  004F50  6E0A               	movwf	??i2_atoi& (0+255),c
 20015  004F52  0EFF               	movlw	255
 20016  004F54  6E0B               	movwf	(??i2_atoi+1)& (0+255),c
 20017  004F56  C008  FFF6         	movff	i2atoi@s,tblptrl
 20018  004F5A  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 20019  004F5E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20020  004F5E  6AF8               	clrf	tblptru,c
 20021  004F60                     	endif
 20022  004F60                     	if	0	;tblptru may be non-zero
 20023  004F60                     	endif
 20024  004F60  0008               	tblrd		*
 20025  004F62  50F5               	movf	tablat,w,c
 20026  004F64  6E0C               	movwf	(??i2_atoi+2)& (0+255),c
 20027  004F66  6A0D               	clrf	(??i2_atoi+3)& (0+255),c
 20028  004F68  500A               	movf	??i2_atoi,w,c
 20029  004F6A  260C               	addwf	??i2_atoi+2,f,c
 20030  004F6C  500B               	movf	??i2_atoi+1,w,c
 20031  004F6E  220D               	addwfc	??i2_atoi+3,f,c
 20032  004F70  500D               	movf	??i2_atoi+3,w,c
 20033  004F72  E106               	bnz	i2u851_40
 20034  004F74  0E0A               	movlw	10
 20035  004F76  5C0C               	subwf	??i2_atoi+2,w,c
 20036  004F78  B0D8               	btfsc	status,0,c
 20037  004F7A  D002               	goto	i2u851_40
 20038  004F7C  0E01               	movlw	1
 20039  004F7E  D001               	goto	i2u852_40
 20040  004F80                     i2u851_40:
 20041  004F80  0E00               	movlw	0
 20042  004F82                     i2u852_40:
 20043  004F82  6E12               	movwf	i2_atoi$2107,c
 20044  004F84  6A13               	clrf	i2_atoi$2107+1,c
 20045  004F86  5012               	movf	i2_atoi$2107,w,c
 20046  004F88  1013               	iorwf	i2_atoi$2107+1,w,c
 20047  004F8A  A4D8               	btfss	status,2,c
 20048  004F8C  D7C5               	goto	i2l6484
 20049  004F8E  500E               	movf	i2atoi@neg,w,c
 20050  004F90  100F               	iorwf	i2atoi@neg+1,w,c
 20051  004F92  A4D8               	btfss	status,2,c
 20052  004F94  D00D               	goto	i2l1538
 20053  004F96  C015  F00A         	movff	i2atoi@n,??i2_atoi
 20054  004F9A  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
 20055  004F9E  1E0A               	comf	??i2_atoi,f,c
 20056  004FA0  1E0B               	comf	??i2_atoi+1,f,c
 20057  004FA2  4A0A               	infsnz	??i2_atoi,f,c
 20058  004FA4  2A0B               	incf	??i2_atoi+1,f,c
 20059  004FA6  C00A  F008         	movff	??i2_atoi,?i2_atoi
 20060  004FAA  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
 20061  004FAE  0012               	return	
 20062  004FB0                     i2l1538:
 20063  004FB0  C015  F008         	movff	i2atoi@n,?i2_atoi
 20064  004FB4  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
 20065  004FB8  0012               	return		;funcret
 20066  004FBA                     __end_ofi2_atoi:
 20067                           	opt callstack 0
 20068                           
 20069 ;; *************** function i2_isspace *****************
 20070 ;; Defined at:
 20071 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 20072 ;; Parameters:    Size  Location     Type
 20073 ;;  c               2    0[COMRAM] int 
 20074 ;; Auto vars:     Size  Location     Type
 20075 ;;		None
 20076 ;; Return value:  Size  Location     Type
 20077 ;;                  2    0[COMRAM] int 
 20078 ;; Registers used:
 20079 ;;		wreg, status,2, status,0
 20080 ;; Tracked objects:
 20081 ;;		On entry : 0/0
 20082 ;;		On exit  : 0/0
 20083 ;;		Unchanged: 0/0
 20084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20088 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20089 ;;Total ram usage:        7 bytes
 20090 ;; Hardware stack levels used:    1
 20091 ;; This function calls:
 20092 ;;		Nothing
 20093 ;; This function is called by:
 20094 ;;		i2_atoi
 20095 ;; This function uses a non-reentrant model
 20096 ;;
 20097                           
 20098                           	psect	text101
 20099  00678E                     __ptext101:
 20100                           	opt callstack 0
 20101  00678E                     i2_isspace:
 20102                           	opt callstack 12
 20103                           
 20104                           ;incstack = 0
 20105  00678E  0E01               	movlw	1
 20106  006790  6E07               	movwf	i2_isspace$2136,c
 20107  006792  0E20               	movlw	32
 20108  006794  1801               	xorwf	i2isspace@c,w,c
 20109  006796  1002               	iorwf	i2isspace@c+1,w,c
 20110  006798  B4D8               	btfsc	status,2,c
 20111  00679A  D014               	goto	i2l5878
 20112  00679C  0EF7               	movlw	247
 20113  00679E  6E03               	movwf	??i2_isspace& (0+255),c
 20114  0067A0  0EFF               	movlw	255
 20115  0067A2  6E04               	movwf	(??i2_isspace+1)& (0+255),c
 20116  0067A4  C001  F005         	movff	i2isspace@c,??i2_isspace+2
 20117  0067A8  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
 20118  0067AC  5003               	movf	??i2_isspace,w,c
 20119  0067AE  2605               	addwf	??i2_isspace+2,f,c
 20120  0067B0  5004               	movf	??i2_isspace+1,w,c
 20121  0067B2  2206               	addwfc	??i2_isspace+3,f,c
 20122  0067B4  5006               	movf	??i2_isspace+3,w,c
 20123  0067B6  E104               	bnz	i2u738_40
 20124  0067B8  0E05               	movlw	5
 20125  0067BA  5C05               	subwf	??i2_isspace+2,w,c
 20126  0067BC  A0D8               	btfss	status,0,c
 20127  0067BE  D002               	goto	i2l5878
 20128  0067C0                     i2u738_40:
 20129  0067C0  0E00               	movlw	0
 20130  0067C2  6E07               	movwf	i2_isspace$2136,c
 20131  0067C4                     i2l5878:
 20132  0067C4  C007  F001         	movff	i2_isspace$2136,?i2_isspace
 20133  0067C8  6A02               	clrf	?i2_isspace+1,c
 20134  0067CA  0012               	return		;funcret
 20135  0067CC                     __end_ofi2_isspace:
 20136                           	opt callstack 0
 20137                           
 20138 ;; *************** function i2_isdigit *****************
 20139 ;; Defined at:
 20140 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;  c               2    0[COMRAM] int 
 20143 ;; Auto vars:     Size  Location     Type
 20144 ;;		None
 20145 ;; Return value:  Size  Location     Type
 20146 ;;                  2    0[COMRAM] int 
 20147 ;; Registers used:
 20148 ;;		wreg, status,2, status,0
 20149 ;; Tracked objects:
 20150 ;;		On entry : 0/0
 20151 ;;		On exit  : 0/0
 20152 ;;		Unchanged: 0/0
 20153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20154 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20156 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20157 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20158 ;;Total ram usage:        6 bytes
 20159 ;; Hardware stack levels used:    1
 20160 ;; This function calls:
 20161 ;;		Nothing
 20162 ;; This function is called by:
 20163 ;;		i2_vfpfcnvrt
 20164 ;;		i2_atoi
 20165 ;; This function uses a non-reentrant model
 20166 ;;
 20167                           
 20168                           	psect	text102
 20169  0069AC                     __ptext102:
 20170                           	opt callstack 0
 20171  0069AC                     i2_isdigit:
 20172                           	opt callstack 13
 20173                           
 20174                           ;incstack = 0
 20175  0069AC  0ED0               	movlw	208
 20176  0069AE  6E03               	movwf	??i2_isdigit& (0+255),c
 20177  0069B0  0EFF               	movlw	255
 20178  0069B2  6E04               	movwf	(??i2_isdigit+1)& (0+255),c
 20179  0069B4  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
 20180  0069B8  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
 20181  0069BC  5003               	movf	??i2_isdigit,w,c
 20182  0069BE  2605               	addwf	??i2_isdigit+2,f,c
 20183  0069C0  5004               	movf	??i2_isdigit+1,w,c
 20184  0069C2  2206               	addwfc	??i2_isdigit+3,f,c
 20185  0069C4  5006               	movf	??i2_isdigit+3,w,c
 20186  0069C6  E106               	bnz	i2u735_40
 20187  0069C8  0E0A               	movlw	10
 20188  0069CA  5C05               	subwf	??i2_isdigit+2,w,c
 20189  0069CC  B0D8               	btfsc	status,0,c
 20190  0069CE  D002               	goto	i2u735_40
 20191  0069D0  0E01               	movlw	1
 20192  0069D2  D001               	goto	i2u736_40
 20193  0069D4                     i2u735_40:
 20194  0069D4  0E00               	movlw	0
 20195  0069D6                     i2u736_40:
 20196  0069D6  6E01               	movwf	?i2_isdigit,c
 20197  0069D8  6A02               	clrf	?i2_isdigit+1,c
 20198  0069DA  0012               	return		;funcret
 20199  0069DC                     __end_ofi2_isdigit:
 20200                           	opt callstack 0
 20201                           
 20202 ;; *************** function i2___wmul *****************
 20203 ;; Defined at:
 20204 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 20205 ;; Parameters:    Size  Location     Type
 20206 ;;  multiplier      2    0[COMRAM] unsigned int 
 20207 ;;  multiplicand    2    2[COMRAM] unsigned int 
 20208 ;; Auto vars:     Size  Location     Type
 20209 ;;  __wmul          2    4[COMRAM] unsigned int 
 20210 ;; Return value:  Size  Location     Type
 20211 ;;                  2    0[COMRAM] unsigned int 
 20212 ;; Registers used:
 20213 ;;		wreg, status,2, status,0, prodl, prodh
 20214 ;; Tracked objects:
 20215 ;;		On entry : 0/0
 20216 ;;		On exit  : 0/0
 20217 ;;		Unchanged: 0/0
 20218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20222 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20223 ;;Total ram usage:        6 bytes
 20224 ;; Hardware stack levels used:    1
 20225 ;; This function calls:
 20226 ;;		Nothing
 20227 ;; This function is called by:
 20228 ;;		i2_atoi
 20229 ;; This function uses a non-reentrant model
 20230 ;;
 20231                           
 20232                           	psect	text103
 20233  006B30                     __ptext103:
 20234                           	opt callstack 0
 20235  006B30                     i2___wmul:
 20236                           	opt callstack 12
 20237                           
 20238                           ;incstack = 0
 20239  006B30  5001               	movf	i2___wmul@multiplier,w,c
 20240  006B32  0203               	mulwf	i2___wmul@multiplicand,c
 20241  006B34  CFF3 F005          	movff	prodl,i2___wmul@product
 20242  006B38  CFF4 F006          	movff	prodh,i2___wmul@product+1
 20243  006B3C  5001               	movf	i2___wmul@multiplier,w,c
 20244  006B3E  0204               	mulwf	i2___wmul@multiplicand+1,c
 20245  006B40  50F3               	movf	prodl,w,c
 20246  006B42  2606               	addwf	i2___wmul@product+1,f,c
 20247  006B44  5002               	movf	i2___wmul@multiplier+1,w,c
 20248  006B46  0203               	mulwf	i2___wmul@multiplicand,c
 20249  006B48  50F3               	movf	prodl,w,c
 20250  006B4A  2606               	addwf	i2___wmul@product+1,f,c
 20251  006B4C  C005  F001         	movff	i2___wmul@product,?i2___wmul
 20252  006B50  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 20253  006B54  0012               	return		;funcret
 20254  006B56                     __end_ofi2___wmul:
 20255                           	opt callstack 0
 20256                           
 20257 ;; *************** function ___xxtofl *****************
 20258 ;; Defined at:
 20259 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 20260 ;; Parameters:    Size  Location     Type
 20261 ;;  sign            1    wreg     unsigned char 
 20262 ;;  val             4    0[COMRAM] long 
 20263 ;; Auto vars:     Size  Location     Type
 20264 ;;  sign            1    8[COMRAM] unsigned char 
 20265 ;;  arg             4   10[COMRAM] unsigned long 
 20266 ;;  exp             1    9[COMRAM] unsigned char 
 20267 ;; Return value:  Size  Location     Type
 20268 ;;                  4    0[COMRAM] unsigned char 
 20269 ;; Registers used:
 20270 ;;		wreg, status,2, status,0
 20271 ;; Tracked objects:
 20272 ;;		On entry : 0/0
 20273 ;;		On exit  : 0/0
 20274 ;;		Unchanged: 0/0
 20275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20277 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20279 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20280 ;;Total ram usage:       14 bytes
 20281 ;; Hardware stack levels used:    1
 20282 ;; This function calls:
 20283 ;;		Nothing
 20284 ;; This function is called by:
 20285 ;;		_adafruit
 20286 ;;		_dataLogRead
 20287 ;; This function uses a non-reentrant model
 20288 ;;
 20289                           
 20290                           	psect	text104
 20291  004FBA                     __ptext104:
 20292                           	opt callstack 0
 20293  004FBA                     ___xxtofl:
 20294                           	opt callstack 16
 20295                           
 20296                           ;incstack = 0
 20297                           ;___xxtofl@sign stored from wreg
 20298  004FBA  6E09               	movwf	___xxtofl@sign,c
 20299  004FBC  5009               	movf	___xxtofl@sign,w,c
 20300  004FBE  A4D8               	btfss	status,2,c
 20301  004FC0  AE04               	btfss	___xxtofl@val+3,7,c
 20302  004FC2  D01A               	goto	i2l1483
 20303  004FC4  C001  F005         	movff	___xxtofl@val,??___xxtofl
 20304  004FC8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 20305  004FCC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 20306  004FD0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 20307  004FD4  1E05               	comf	??___xxtofl,f,c
 20308  004FD6  1E06               	comf	??___xxtofl+1,f,c
 20309  004FD8  1E07               	comf	??___xxtofl+2,f,c
 20310  004FDA  1E08               	comf	??___xxtofl+3,f,c
 20311  004FDC  2A05               	incf	??___xxtofl,f,c
 20312  004FDE  0E00               	movlw	0
 20313  004FE0  2206               	addwfc	??___xxtofl+1,f,c
 20314  004FE2  2207               	addwfc	??___xxtofl+2,f,c
 20315  004FE4  2208               	addwfc	??___xxtofl+3,f,c
 20316  004FE6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 20317  004FEA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 20318  004FEE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 20319  004FF2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 20320  004FF6  D008               	goto	i2l7698
 20321  004FF8                     i2l1483:
 20322  004FF8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 20323  004FFC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 20324  005000  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 20325  005004  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 20326  005008                     i2l7698:
 20327  005008  5001               	movf	___xxtofl@val,w,c
 20328  00500A  1002               	iorwf	___xxtofl@val+1,w,c
 20329  00500C  1003               	iorwf	___xxtofl@val+2,w,c
 20330  00500E  1004               	iorwf	___xxtofl@val+3,w,c
 20331  005010  A4D8               	btfss	status,2,c
 20332  005012  D009               	goto	i2l7704
 20333  005014  0E00               	movlw	0
 20334  005016  6E01               	movwf	?___xxtofl,c
 20335  005018  0E00               	movlw	0
 20336  00501A  6E02               	movwf	?___xxtofl+1,c
 20337  00501C  0E00               	movlw	0
 20338  00501E  6E03               	movwf	?___xxtofl+2,c
 20339  005020  0E00               	movlw	0
 20340  005022  6E04               	movwf	?___xxtofl+3,c
 20341  005024  0012               	return	
 20342  005026                     i2l7704:
 20343  005026  0E96               	movlw	150
 20344  005028  6E0A               	movwf	___xxtofl@exp,c
 20345  00502A  D006               	goto	i2l7708
 20346  00502C                     i2l7706:
 20347  00502C  2A0A               	incf	___xxtofl@exp,f,c
 20348  00502E  90D8               	bcf	status,0,c
 20349  005030  320E               	rrcf	___xxtofl@arg+3,f,c
 20350  005032  320D               	rrcf	___xxtofl@arg+2,f,c
 20351  005034  320C               	rrcf	___xxtofl@arg+1,f,c
 20352  005036  320B               	rrcf	___xxtofl@arg,f,c
 20353  005038                     i2l7708:
 20354  005038  0E00               	movlw	0
 20355  00503A  140B               	andwf	___xxtofl@arg,w,c
 20356  00503C  6E05               	movwf	??___xxtofl& (0+255),c
 20357  00503E  0E00               	movlw	0
 20358  005040  140C               	andwf	___xxtofl@arg+1,w,c
 20359  005042  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 20360  005044  0E00               	movlw	0
 20361  005046  140D               	andwf	___xxtofl@arg+2,w,c
 20362  005048  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 20363  00504A  0EFE               	movlw	254
 20364  00504C  140E               	andwf	___xxtofl@arg+3,w,c
 20365  00504E  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 20366  005050  5005               	movf	??___xxtofl,w,c
 20367  005052  1006               	iorwf	??___xxtofl+1,w,c
 20368  005054  1007               	iorwf	??___xxtofl+2,w,c
 20369  005056  1008               	iorwf	??___xxtofl+3,w,c
 20370  005058  B4D8               	btfsc	status,2,c
 20371  00505A  D00D               	goto	i2l1490
 20372  00505C  D7E7               	goto	i2l7706
 20373  00505E                     i2l7710:
 20374  00505E  2A0A               	incf	___xxtofl@exp,f,c
 20375  005060  0E01               	movlw	1
 20376  005062  260B               	addwf	___xxtofl@arg,f,c
 20377  005064  0E00               	movlw	0
 20378  005066  220C               	addwfc	___xxtofl@arg+1,f,c
 20379  005068  220D               	addwfc	___xxtofl@arg+2,f,c
 20380  00506A  220E               	addwfc	___xxtofl@arg+3,f,c
 20381  00506C  90D8               	bcf	status,0,c
 20382  00506E  320E               	rrcf	___xxtofl@arg+3,f,c
 20383  005070  320D               	rrcf	___xxtofl@arg+2,f,c
 20384  005072  320C               	rrcf	___xxtofl@arg+1,f,c
 20385  005074  320B               	rrcf	___xxtofl@arg,f,c
 20386  005076                     i2l1490:
 20387  005076  0E00               	movlw	0
 20388  005078  140B               	andwf	___xxtofl@arg,w,c
 20389  00507A  6E05               	movwf	??___xxtofl& (0+255),c
 20390  00507C  0E00               	movlw	0
 20391  00507E  140C               	andwf	___xxtofl@arg+1,w,c
 20392  005080  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 20393  005082  0E00               	movlw	0
 20394  005084  140D               	andwf	___xxtofl@arg+2,w,c
 20395  005086  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 20396  005088  0EFF               	movlw	255
 20397  00508A  140E               	andwf	___xxtofl@arg+3,w,c
 20398  00508C  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 20399  00508E  5005               	movf	??___xxtofl,w,c
 20400  005090  1006               	iorwf	??___xxtofl+1,w,c
 20401  005092  1007               	iorwf	??___xxtofl+2,w,c
 20402  005094  1008               	iorwf	??___xxtofl+3,w,c
 20403  005096  B4D8               	btfsc	status,2,c
 20404  005098  D007               	goto	i2l7718
 20405  00509A  D7E1               	goto	i2l7710
 20406  00509C                     i2l7716:
 20407  00509C  060A               	decf	___xxtofl@exp,f,c
 20408  00509E  90D8               	bcf	status,0,c
 20409  0050A0  360B               	rlcf	___xxtofl@arg,f,c
 20410  0050A2  360C               	rlcf	___xxtofl@arg+1,f,c
 20411  0050A4  360D               	rlcf	___xxtofl@arg+2,f,c
 20412  0050A6  360E               	rlcf	___xxtofl@arg+3,f,c
 20413  0050A8                     i2l7718:
 20414  0050A8  BE0D               	btfsc	___xxtofl@arg+2,7,c
 20415  0050AA  D003               	goto	i2u1070_40
 20416  0050AC  0E02               	movlw	2
 20417  0050AE  600A               	cpfslt	___xxtofl@exp,c
 20418  0050B0  D7F5               	goto	i2l7716
 20419  0050B2                     i2u1070_40:
 20420  0050B2  A00A               	btfss	___xxtofl@exp,0,c
 20421  0050B4  9E0D               	bcf	___xxtofl@arg+2,7,c
 20422  0050B6  90D8               	bcf	status,0,c
 20423  0050B8  320A               	rrcf	___xxtofl@exp,f,c
 20424  0050BA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 20425  0050BE  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 20426  0050C0  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 20427  0050C2  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 20428  0050C4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 20429  0050C8  6A07               	clrf	??___xxtofl+2,c
 20430  0050CA  6A06               	clrf	??___xxtofl+1,c
 20431  0050CC  6A05               	clrf	??___xxtofl,c
 20432  0050CE  5005               	movf	??___xxtofl,w,c
 20433  0050D0  120B               	iorwf	___xxtofl@arg,f,c
 20434  0050D2  5006               	movf	??___xxtofl+1,w,c
 20435  0050D4  120C               	iorwf	___xxtofl@arg+1,f,c
 20436  0050D6  5007               	movf	??___xxtofl+2,w,c
 20437  0050D8  120D               	iorwf	___xxtofl@arg+2,f,c
 20438  0050DA  5008               	movf	??___xxtofl+3,w,c
 20439  0050DC  120E               	iorwf	___xxtofl@arg+3,f,c
 20440  0050DE  5009               	movf	___xxtofl@sign,w,c
 20441  0050E0  A4D8               	btfss	status,2,c
 20442  0050E2  AE04               	btfss	___xxtofl@val+3,7,c
 20443  0050E4  D001               	goto	i2l7734
 20444  0050E6  8E0E               	bsf	___xxtofl@arg+3,7,c
 20445  0050E8                     i2l7734:
 20446  0050E8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 20447  0050EC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 20448  0050F0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 20449  0050F4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 20450  0050F8  0012               	return		;funcret
 20451  0050FA                     __end_of___xxtofl:
 20452                           	opt callstack 0
 20453                           
 20454 ;; *************** function _EUSART1_Transmit_ISR *****************
 20455 ;; Defined at:
 20456 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;		None
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;		None
 20461 ;; Return value:  Size  Location     Type
 20462 ;;                  1    wreg      void 
 20463 ;; Registers used:
 20464 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20465 ;; Tracked objects:
 20466 ;;		On entry : 0/0
 20467 ;;		On exit  : 0/0
 20468 ;;		Unchanged: 0/0
 20469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20474 ;;Total ram usage:        0 bytes
 20475 ;; Hardware stack levels used:    1
 20476 ;; This function calls:
 20477 ;;		Nothing
 20478 ;; This function is called by:
 20479 ;;		_EUSART1_Initialize
 20480 ;;		_INTERRUPT_InterruptManager
 20481 ;; This function uses a non-reentrant model
 20482 ;;
 20483                           
 20484                           	psect	text105
 20485  006A38                     __ptext105:
 20486                           	opt callstack 0
 20487  006A38                     _EUSART1_Transmit_ISR:
 20488                           	opt callstack 19
 20489                           
 20490                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 20491                           
 20492                           ;incstack = 0
 20493  006A38  0E40               	movlw	64
 20494  006A3A  0101               	movlb	1	; () banked
 20495  006A3C  61C8               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 20496  006A3E  D010               	goto	i2l173
 20497                           
 20498                           ; BSR set to: 1
 20499                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
 20500  006A40  0E40               	movlw	low _eusart1TxBuffer
 20501  006A42  25C9               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 20502  006A44  6ED9               	movwf	fsr2l,c
 20503  006A46  6ADA               	clrf	fsr2h,c
 20504  006A48  0E02               	movlw	high _eusart1TxBuffer
 20505  006A4A  22DA               	addwfc	fsr2h,f,c
 20506  006A4C  50DF               	movf	indf2,w,c
 20507  006A4E  6EAD               	movwf	4013,c	;volatile
 20508                           
 20509                           ; BSR set to: 1
 20510  006A50  2BC9               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 20511                           
 20512                           ; BSR set to: 1
 20513                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 20514  006A52  0E3F               	movlw	63
 20515  006A54  65C9               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 20516  006A56  D002               	goto	i2l8142
 20517                           
 20518                           ; BSR set to: 1
 20519                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 20520  006A58  0E00               	movlw	0
 20521  006A5A  6FC9               	movwf	_eusart1TxTail& (0+255),b	;volatile
 20522  006A5C                     i2l8142:
 20523                           
 20524                           ; BSR set to: 1
 20525                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 20526  006A5C  2BC8               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 20527                           
 20528                           ;mcc_generated_files/eusart1.c: 218:     }
 20529  006A5E  0012               	return	
 20530  006A60                     i2l173:
 20531                           
 20532                           ; BSR set to: 1
 20533                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
 20534  006A60  989D               	bcf	3997,4,c	;volatile
 20535                           
 20536                           ; BSR set to: 1
 20537  006A62  0012               	return		;funcret
 20538  006A64                     __end_of_EUSART1_Transmit_ISR:
 20539                           	opt callstack 0
 20540                           
 20541 ;; *************** function _EUSART1_Receive_ISR *****************
 20542 ;; Defined at:
 20543 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 20544 ;; Parameters:    Size  Location     Type
 20545 ;;		None
 20546 ;; Auto vars:     Size  Location     Type
 20547 ;;		None
 20548 ;; Return value:  Size  Location     Type
 20549 ;;                  1    wreg      void 
 20550 ;; Registers used:
 20551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 20552 ;; Tracked objects:
 20553 ;;		On entry : 0/0
 20554 ;;		On exit  : 0/0
 20555 ;;		Unchanged: 0/0
 20556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20561 ;;Total ram usage:        0 bytes
 20562 ;; Hardware stack levels used:    1
 20563 ;; Hardware stack levels required when called:    2
 20564 ;; This function calls:
 20565 ;;		Absolute function
 20566 ;;		_EUSART1_DefaultErrorHandler
 20567 ;;		_EUSART1_DefaultFramingErrorHandler
 20568 ;;		_EUSART1_DefaultOverrunErrorHandler
 20569 ;;		_EUSART1_RxDataHandler
 20570 ;; This function is called by:
 20571 ;;		_EUSART1_Initialize
 20572 ;;		_INTERRUPT_InterruptManager
 20573 ;; This function uses a non-reentrant model
 20574 ;;
 20575                           
 20576                           	psect	text106
 20577  005DB2                     __ptext106:
 20578                           	opt callstack 0
 20579  005DB2                     _EUSART1_Receive_ISR:
 20580                           	opt callstack 17
 20581                           
 20582                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 20583                           
 20584                           ; BSR set to: 1
 20585                           ;incstack = 0
 20586  005DB2  0E00               	movlw	low _eusart1RxStatusBuffer
 20587  005DB4  0101               	movlb	1	; () banked
 20588  005DB6  25C7               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 20589  005DB8  6ED9               	movwf	fsr2l,c
 20590  005DBA  6ADA               	clrf	fsr2h,c
 20591  005DBC  0E02               	movlw	high _eusart1RxStatusBuffer
 20592  005DBE  22DA               	addwfc	fsr2h,f,c
 20593  005DC0  0E00               	movlw	0
 20594  005DC2  6EDF               	movwf	indf2,c
 20595                           
 20596                           ; BSR set to: 1
 20597                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
 20598  005DC4  A4AB               	btfss	4011,2,c	;volatile
 20599  005DC6  D014               	goto	i2u1137_49
 20600                           
 20601                           ; BSR set to: 1
 20602                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 20603  005DC8  0E00               	movlw	low _eusart1RxStatusBuffer
 20604  005DCA  25C7               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 20605  005DCC  6ED9               	movwf	fsr2l,c
 20606  005DCE  6ADA               	clrf	fsr2h,c
 20607  005DD0  0E02               	movlw	high _eusart1RxStatusBuffer
 20608  005DD2  22DA               	addwfc	fsr2h,f,c
 20609  005DD4  0102               	movlb	2	; () banked
 20610  005DD6  82DF               	bsf	indf2,1,c
 20611                           
 20612                           ; BSR set to: 2
 20613                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 20614  005DD8  D801               	call	i2u1137_48
 20615  005DDA  D00A               	goto	i2u1137_49
 20616  005DDC                     i2u1137_48:
 20617  005DDC  0005               	push	
 20618  005DDE  6EFA               	movwf	pclath,c
 20619  005DE0  0101               	movlb	1	; () banked
 20620  005DE2  51BD               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 20621  005DE4  6EFD               	movwf	tosl,c
 20622  005DE6  51BE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 20623  005DE8  6EFE               	movwf	tosh,c
 20624  005DEA  6AFF               	clrf	tosu,c
 20625  005DEC  50FA               	movf	pclath,w,c
 20626  005DEE  0012               	return		;indir
 20627  005DF0                     i2u1137_49:
 20628                           
 20629                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
 20630  005DF0  A2AB               	btfss	4011,1,c	;volatile
 20631  005DF2  D015               	goto	i2u1139_49
 20632                           
 20633                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 20634  005DF4  0E00               	movlw	low _eusart1RxStatusBuffer
 20635  005DF6  0101               	movlb	1	; () banked
 20636  005DF8  25C7               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 20637  005DFA  6ED9               	movwf	fsr2l,c
 20638  005DFC  6ADA               	clrf	fsr2h,c
 20639  005DFE  0E02               	movlw	high _eusart1RxStatusBuffer
 20640  005E00  22DA               	addwfc	fsr2h,f,c
 20641  005E02  0102               	movlb	2	; () banked
 20642  005E04  84DF               	bsf	indf2,2,c
 20643                           
 20644                           ; BSR set to: 2
 20645                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 20646  005E06  D801               	call	i2u1139_48
 20647  005E08  D00A               	goto	i2u1139_49
 20648  005E0A                     i2u1139_48:
 20649  005E0A  0005               	push	
 20650  005E0C  6EFA               	movwf	pclath,c
 20651  005E0E  0101               	movlb	1	; () banked
 20652  005E10  51BB               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 20653  005E12  6EFD               	movwf	tosl,c
 20654  005E14  51BC               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 20655  005E16  6EFE               	movwf	tosh,c
 20656  005E18  6AFF               	clrf	tosu,c
 20657  005E1A  50FA               	movf	pclath,w,c
 20658  005E1C  0012               	return		;indir
 20659  005E1E                     i2u1139_49:
 20660                           
 20661                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 20662  005E1E  0E00               	movlw	low _eusart1RxStatusBuffer
 20663  005E20  0101               	movlb	1	; () banked
 20664  005E22  25C7               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 20665  005E24  6ED9               	movwf	fsr2l,c
 20666  005E26  6ADA               	clrf	fsr2h,c
 20667  005E28  0E02               	movlw	high _eusart1RxStatusBuffer
 20668  005E2A  22DA               	addwfc	fsr2h,f,c
 20669  005E2C  50DF               	movf	indf2,w,c
 20670  005E2E  B4D8               	btfsc	status,2,c
 20671  005E30  D00B               	goto	i2l8162
 20672                           
 20673                           ; BSR set to: 1
 20674                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 20675  005E32  D801               	call	i2u1141_48
 20676  005E34  0012               	return	
 20677  005E36                     i2u1141_48:
 20678  005E36  0005               	push	
 20679  005E38  6EFA               	movwf	pclath,c
 20680  005E3A  51B9               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 20681  005E3C  6EFD               	movwf	tosl,c
 20682  005E3E  51BA               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 20683  005E40  6EFE               	movwf	tosh,c
 20684  005E42  6AFF               	clrf	tosu,c
 20685  005E44  50FA               	movf	pclath,w,c
 20686  005E46  0012               	return		;indir
 20687  005E48                     i2l8162:
 20688                           
 20689                           ; BSR set to: 1
 20690                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 20691  005E48  EC03  F036         	call	_EUSART1_RxDataHandler	;wreg free
 20692  005E4C  0012               	return		;funcret
 20693  005E4E                     __end_of_EUSART1_Receive_ISR:
 20694                           	opt callstack 0
 20695                           
 20696 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 20697 ;; Defined at:
 20698 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 20699 ;; Parameters:    Size  Location     Type
 20700 ;;		None
 20701 ;; Auto vars:     Size  Location     Type
 20702 ;;		None
 20703 ;; Return value:  Size  Location     Type
 20704 ;;                  1    wreg      void 
 20705 ;; Registers used:
 20706 ;;		None
 20707 ;; Tracked objects:
 20708 ;;		On entry : 0/0
 20709 ;;		On exit  : 0/0
 20710 ;;		Unchanged: 0/0
 20711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20716 ;;Total ram usage:        0 bytes
 20717 ;; Hardware stack levels used:    1
 20718 ;; This function calls:
 20719 ;;		Nothing
 20720 ;; This function is called by:
 20721 ;;		_EUSART1_Initialize
 20722 ;;		_EUSART1_Receive_ISR
 20723 ;; This function uses a non-reentrant model
 20724 ;;
 20725                           
 20726                           	psect	text107
 20727  006D54                     __ptext107:
 20728                           	opt callstack 0
 20729  006D54                     _EUSART1_DefaultOverrunErrorHandler:
 20730                           	opt callstack 18
 20731                           
 20732                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
 20733                           
 20734                           ;incstack = 0
 20735  006D54  98AB               	bcf	4011,4,c	;volatile
 20736                           
 20737                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
 20738  006D56  88AB               	bsf	4011,4,c	;volatile
 20739  006D58  0012               	return		;funcret
 20740  006D5A                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 20741                           	opt callstack 0
 20742                           
 20743 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 20744 ;; Defined at:
 20745 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 20746 ;; Parameters:    Size  Location     Type
 20747 ;;		None
 20748 ;; Auto vars:     Size  Location     Type
 20749 ;;		None
 20750 ;; Return value:  Size  Location     Type
 20751 ;;                  1    wreg      void 
 20752 ;; Registers used:
 20753 ;;		None
 20754 ;; Tracked objects:
 20755 ;;		On entry : 0/0
 20756 ;;		On exit  : 0/0
 20757 ;;		Unchanged: 0/0
 20758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20763 ;;Total ram usage:        0 bytes
 20764 ;; Hardware stack levels used:    1
 20765 ;; This function calls:
 20766 ;;		Nothing
 20767 ;; This function is called by:
 20768 ;;		_EUSART1_Initialize
 20769 ;;		_EUSART1_Receive_ISR
 20770 ;; This function uses a non-reentrant model
 20771 ;;
 20772                           
 20773                           	psect	text108
 20774  006D6E                     __ptext108:
 20775                           	opt callstack 0
 20776  006D6E                     _EUSART1_DefaultFramingErrorHandler:
 20777                           	opt callstack 18
 20778                           
 20779                           ;incstack = 0
 20780  006D6E  0012               	return		;funcret
 20781  006D70                     __end_of_EUSART1_DefaultFramingErrorHandler:
 20782                           	opt callstack 0
 20783                           
 20784 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 20785 ;; Defined at:
 20786 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 20787 ;; Parameters:    Size  Location     Type
 20788 ;;		None
 20789 ;; Auto vars:     Size  Location     Type
 20790 ;;		None
 20791 ;; Return value:  Size  Location     Type
 20792 ;;                  1    wreg      void 
 20793 ;; Registers used:
 20794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20795 ;; Tracked objects:
 20796 ;;		On entry : 0/0
 20797 ;;		On exit  : 0/0
 20798 ;;		Unchanged: 0/0
 20799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20804 ;;Total ram usage:        0 bytes
 20805 ;; Hardware stack levels used:    1
 20806 ;; Hardware stack levels required when called:    1
 20807 ;; This function calls:
 20808 ;;		_EUSART1_RxDataHandler
 20809 ;; This function is called by:
 20810 ;;		_EUSART1_Initialize
 20811 ;;		_EUSART1_Receive_ISR
 20812 ;; This function uses a non-reentrant model
 20813 ;;
 20814                           
 20815                           	psect	text109
 20816  006D5A                     __ptext109:
 20817                           	opt callstack 0
 20818  006D5A                     _EUSART1_DefaultErrorHandler:
 20819                           	opt callstack 17
 20820                           
 20821                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 20822                           
 20823                           ;incstack = 0
 20824  006D5A  EC03  F036         	call	_EUSART1_RxDataHandler	;wreg free
 20825  006D5E  0012               	return		;funcret
 20826  006D60                     __end_of_EUSART1_DefaultErrorHandler:
 20827                           	opt callstack 0
 20828                           
 20829 ;; *************** function _EUSART1_RxDataHandler *****************
 20830 ;; Defined at:
 20831 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 20832 ;; Parameters:    Size  Location     Type
 20833 ;;		None
 20834 ;; Auto vars:     Size  Location     Type
 20835 ;;		None
 20836 ;; Return value:  Size  Location     Type
 20837 ;;                  1    wreg      void 
 20838 ;; Registers used:
 20839 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20840 ;; Tracked objects:
 20841 ;;		On entry : 0/0
 20842 ;;		On exit  : 0/0
 20843 ;;		Unchanged: 0/0
 20844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20849 ;;Total ram usage:        0 bytes
 20850 ;; Hardware stack levels used:    1
 20851 ;; This function calls:
 20852 ;;		Nothing
 20853 ;; This function is called by:
 20854 ;;		_EUSART1_Receive_ISR
 20855 ;;		_EUSART1_DefaultErrorHandler
 20856 ;; This function uses a non-reentrant model
 20857 ;;
 20858                           
 20859                           	psect	text110
 20860  006C06                     __ptext110:
 20861                           	opt callstack 0
 20862  006C06                     _EUSART1_RxDataHandler:
 20863                           	opt callstack 18
 20864                           
 20865                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 20866                           
 20867                           ;incstack = 0
 20868  006C06  0E00               	movlw	low _eusart1RxBuffer
 20869  006C08  0101               	movlb	1	; () banked
 20870  006C0A  25C7               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 20871  006C0C  6ED9               	movwf	fsr2l,c
 20872  006C0E  6ADA               	clrf	fsr2h,c
 20873  006C10  0E03               	movlw	high _eusart1RxBuffer
 20874  006C12  22DA               	addwfc	fsr2h,f,c
 20875  006C14  CFAE FFDF          	movff	4014,indf2	;volatile
 20876                           
 20877                           ; BSR set to: 1
 20878  006C18  2BC7               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 20879                           
 20880                           ; BSR set to: 1
 20881                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 20882  006C1A  0E3F               	movlw	63
 20883  006C1C  65C7               	cpfsgt	_eusart1RxHead& (0+255),b	;volatile
 20884  006C1E  D002               	goto	i2l7798
 20885                           
 20886                           ; BSR set to: 1
 20887                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 20888  006C20  0E00               	movlw	0
 20889  006C22  6FC7               	movwf	_eusart1RxHead& (0+255),b	;volatile
 20890  006C24                     i2l7798:
 20891                           
 20892                           ; BSR set to: 1
 20893                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 20894  006C24  2BC5               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 20895                           
 20896                           ; BSR set to: 1
 20897  006C26  0012               	return		;funcret
 20898  006C28                     __end_of_EUSART1_RxDataHandler:
 20899                           	opt callstack 0
 20900                           
 20901                           	psect	text111
 20902  000000                     __ptext111:
 20903                           	opt callstack 0
 20904                           
 20905                           	psect	rparam
 20906  0000                     
 20907                           	psect	temp
 20908  00005E                     btemp:
 20909                           	opt callstack 0
 20910  00005E                     	ds	1
 20911  0000                     int$flags	set	btemp
 20912  0000                     wtemp8	set	btemp+1
 20913  0000                     ttemp5	set	btemp+1
 20914  0000                     ttemp6	set	btemp+4
 20915  0000                     ttemp7	set	btemp+8
 20916                           tosu	equ	0xFFF
 20917                           tosh	equ	0xFFE
 20918                           tosl	equ	0xFFD
 20919                           stkptr	equ	0xFFC
 20920                           pclatu	equ	0xFFB
 20921                           pclath	equ	0xFFA
 20922                           pcl	equ	0xFF9
 20923                           tblptru	equ	0xFF8
 20924                           tblptrh	equ	0xFF7
 20925                           tblptrl	equ	0xFF6
 20926                           tablat	equ	0xFF5
 20927                           prodh	equ	0xFF4
 20928                           prodl	equ	0xFF3
 20929                           indf0	equ	0xFEF
 20930                           postinc0	equ	0xFEE
 20931                           postdec0	equ	0xFED
 20932                           preinc0	equ	0xFEC
 20933                           plusw0	equ	0xFEB
 20934                           fsr0h	equ	0xFEA
 20935                           fsr0l	equ	0xFE9
 20936                           wreg	equ	0xFE8
 20937                           indf1	equ	0xFE7
 20938                           postinc1	equ	0xFE6
 20939                           postdec1	equ	0xFE5
 20940                           preinc1	equ	0xFE4
 20941                           plusw1	equ	0xFE3
 20942                           fsr1h	equ	0xFE2
 20943                           fsr1l	equ	0xFE1
 20944                           bsr	equ	0xFE0
 20945                           indf2	equ	0xFDF
 20946                           postinc2	equ	0xFDE
 20947                           postdec2	equ	0xFDD
 20948                           preinc2	equ	0xFDC
 20949                           plusw2	equ	0xFDB
 20950                           fsr2h	equ	0xFDA
 20951                           fsr2l	equ	0xFD9
 20952                           status	equ	0xFD8


Data Sizes:
    Strings     187
    Constant    54
    Data        11
    BSS         400
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    151     159
    BANK1           256    157     224
    BANK2           256      0     208
    BANK3           256      0     128
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[3]), STR_5(CODE[5]), STR_2(CODE[6]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[3]), STR_5(CODE[5]), STR_2(CODE[6]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 64
		 -> vfpfcnvrt@ct(BANK1[3]), stringArry(BANK3[64]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 64
		 -> vfpfcnvrt@ct(BANK1[3]), stringArry(BANK3[64]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK0[2]), stoa@nuls(BANK1[7]), dbuf(BANK2[80]), 
		 -> dataLogRead@readOutT(BANK0[5]), readData(BANK1[4]), tempRead(BANK0[2]), adafruit@rh_code(BANK0[4]), 
		 -> stringArry(BANK3[64]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK0[2]), stoa@nuls(BANK1[7]), dbuf(BANK2[80]), 
		 -> dataLogRead@readOutT(BANK0[5]), readData(BANK1[4]), tempRead(BANK0[2]), adafruit@rh_code(BANK0[4]), 
		 -> stringArry(BANK3[64]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_15(CODE[21]), STR_13(CODE[21]), STR_11(CODE[39]), STR_10(CODE[10]), 
		 -> STR_7(CODE[31]), STR_6(CODE[14]), STR_3(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_14(CODE[5]), STR_12(CODE[5]), STR_9(CODE[6]), STR_8(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> dataLogRead@readOutT(BANK0[5]), adafruit@outT(BANK0[5]), adafruit@outH(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> dataLogRead@readOutT(BANK0[5]), adafruit@outT(BANK0[5]), adafruit@outH(BANK0[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S2156_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> dataLogRead@readOutT(BANK0[5]), adafruit@outT(BANK0[5]), adafruit@outH(BANK0[5]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> dataLogRead@readOutT(BANK0[5]), adafruit@outT(BANK0[5]), adafruit@outH(BANK0[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 64
		 -> stringArry(BANK3[64]), 

    memset@s	PTR unsigned char  size(2) Largest target is 64
		 -> stringArry(BANK3[64]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_15(CODE[21]), STR_14(CODE[5]), STR_13(CODE[21]), STR_12(CODE[5]), 
		 -> STR_11(CODE[39]), STR_10(CODE[10]), STR_9(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[31]), STR_6(CODE[14]), STR_3(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_15(CODE[21]), STR_14(CODE[5]), STR_13(CODE[21]), STR_12(CODE[5]), 
		 -> STR_11(CODE[39]), STR_10(CODE[10]), STR_9(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[31]), STR_6(CODE[14]), STR_3(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 39
		 -> STR_15(CODE[21]), STR_14(CODE[5]), STR_13(CODE[21]), STR_12(CODE[5]), 
		 -> STR_11(CODE[39]), STR_10(CODE[10]), STR_9(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[31]), STR_6(CODE[14]), STR_3(CODE[15]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK0[2]), dataLogRead@readOutT(BANK0[5]), readData(BANK1[4]), 
		 -> tempRead(BANK0[2]), adafruit@rh_code(BANK0[4]), stringArry(BANK3[64]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK0[2]), dataLogRead@readOutT(BANK0[5]), readData(BANK1[4]), 
		 -> tempRead(BANK0[2]), adafruit@rh_code(BANK0[4]), stringArry(BANK3[64]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK0[2]), stoa@nuls(BANK1[7]), dataLogRead@readOutT(BANK0[5]), 
		 -> readData(BANK1[4]), tempRead(BANK0[2]), adafruit@rh_code(BANK0[4]), stringArry(BANK3[64]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), dataLogWrite(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), dataLogWrite(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), dataLogRead(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), Absolute function(), dataLogRead(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), adafruit(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), adafruit(), 

    i2c_ReadSerial@data	PTR unsigned char  size(2) Largest target is 4
		 -> readData(BANK1[4]), logPos(BANK1[2]), logStatus(BANK1[2]), tempRead(BANK0[2]), 
		 -> humiRead(BANK1[2]), 

    i2c_WriteSerial@data	PTR unsigned char  size(2) Largest target is 11
		 -> readPos(BANK0[2]), logData(BANK1[4]), nextPos(CODE[4]), verifyPos(CODE[3]), 
		 -> adafruit@outT(BANK0[5]), tempText(CODE[7]), adafruit_temp_command(CODE[1]), costum_char(BANK0[2]), 
		 -> adafruit@outH(BANK0[5]), humiText(CODE[7]), displayLine(BANK0[2]), adafruit_humi_command(CODE[1]), 
		 -> clearDisplay(CODE[2]), degree_sign(CODE[11]), procent_sign(CODE[11]), displayInit(CODE[4]), 

    sp__memset	PTR void  size(2) Largest target is 64
		 -> stringArry(BANK3[64]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR6_CallBack->_dataLogWrite
    _dataLogWrite->i2_i2c_WriteSerial
    i2_vfpfcnvrt->i2_efgtoa
    i2_stoa->i2_fputc
    i2_efgtoa->i2___flsub
    i2_tolower->i2_isupper
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_floorf->i2___fldiv
    i2___flsub->i2___fladd
    i2___fladd->i2___fldiv
    i2___flmul->___xxtofl
    i2___flge->i2___flmul
    i2___fldiv->i2___flmul
    i2_atoi->i2_isspace

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_CallBack->_dataLogRead
    _dataLogRead->_sprintf
    i2_printf->i2_vfprintf
    _TMR2_CallBack->_adafruit
    _adafruit->_sprintf
    _sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_efgtoa

Critical Paths under _main in BANK1

    _main->_dataLogger_init
    _i2c_init->_i2c_WriteSerial
    _dataLogger_init->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _adafruit_init->_i2c_WriteSerial
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   88754
                                            154 BANK1      3     3      0
                 _EUSART1_Initialize
                       _EUSART1_Read
                  _SYSTEM_Initialize
                    _TMR2_Initialize
           _TMR2_SetInterruptHandler
                    _TMR4_Initialize
           _TMR4_SetInterruptHandler
                    _TMR4_StartTimer
                     _TMR4_StopTimer
                    _TMR6_Initialize
           _TMR6_SetInterruptHandler
                      _adafruit_init
                    _dataLogger_init
                           _i2c_init
                             _memset
                             _printf
                            _strncmp
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6     947
                                              0 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0    4910
                                             11 BANK1      1     1      0
                    _i2c_WriteSerial
 ---------------------------------------------------------------------------------
 (1) _dataLogger_init                                      1     1      0   40446
                                            153 BANK1      1     1      0
                     _i2c_ReadSerial
                    _i2c_WriteSerial
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   34018
                                            145 BANK1      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   33466
                                            137 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           47    41      6   32905
                                            113 BANK1     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (1) _strncmp                                             11     5      6     909
                                              0 BANK1     11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2207
                                             11 BANK1     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   24261
                                             45 BANK1     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 BANK1      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4285
                                             18 BANK1     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1757
                                             11 BANK1      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1356
                                              2 BANK1      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      66
                                              1 BANK1      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      44
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 BANK1     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3289
                                             25 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2814
                                              0 BANK1     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2752
                                              0 BANK1     25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             25 BANK1     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2407
                                              0 BANK1     25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                              7 BANK1     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 BANK1      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _i2c_ReadSerial                                      13     7      6    1541
                                              0 BANK1     13     7      6
 ---------------------------------------------------------------------------------
 (1) _adafruit_init                                        0     0      0    4887
                    _i2c_WriteSerial
 ---------------------------------------------------------------------------------
 (2) _i2c_WriteSerial                                     11     5      6    4887
                                              0 BANK1     11     5      6
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1012
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   83984
                                            139 BANK0     12    12      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
                           _TMR4_ISR
                           _TMR6_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            0     0      0    1539
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0    1539
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
                       _dataLogWrite *
 ---------------------------------------------------------------------------------
 (14) _dataLogWrite                                        2     2      0    1539
                                             11 COMRAM     2     2      0
                  i2_i2c_WriteSerial
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            0     0      0   51855
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0   51855
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                        _dataLogRead *
 ---------------------------------------------------------------------------------
 (14) _dataLogRead                                        11    11      0   51855
                                            113 BANK0     11    11      0
                           ___xxtofl
                            _sprintf
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                   i2_i2c_ReadSerial
                  i2_i2c_WriteSerial
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                            8     4      4   21298
                                             95 BANK0      8     4      4
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0   30590
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR2_CallBack                                       0     0      0   30590
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                           _adafruit *
 ---------------------------------------------------------------------------------
 (14) _adafruit                                           26    26      0   30590
                                            113 BANK0     26    26      0
                           ___xxtofl
                            _sprintf
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                   i2_i2c_ReadSerial
                  i2_i2c_WriteSerial
 ---------------------------------------------------------------------------------
 (15) i2_i2c_WriteSerial                                  11     5      6    1539
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (15) i2_i2c_ReadSerial                                   13     7      6     413
                                              0 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (15) _sprintf                                            18    10      8   22016
                                             95 BANK0     18    10      8
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (16) i2_vfprintf                                          8     2      6   21184
                                             87 BANK0      8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (17) i2_vfpfcnvrt                                        47    41      6   20881
                                             63 BANK0     24    18      6
                             i2_atoi
                           i2_efgtoa
                            i2_fputc
                          i2_isdigit
                          i2_isupper
                             i2_stoa
                          i2_strncmp
                          i2_tolower
 ---------------------------------------------------------------------------------
 (18) i2_strncmp                                          11     5      6     303
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (18) i2_stoa                                             22    18      4    1305
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_efgtoa                                           68    61      7   16122
                                             88 COMRAM     5     5      0
                                              0 BANK0     63    56      7
                          i2___awdiv
                          i2___awmod
                          i2___fladd
                          i2___fldiv
                           i2___fleq
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                    i2___fpclassifyf
                           i2_floorf
                          i2_isupper
                              i2_pad
                           i2_strcpy
                          i2_tolower
 ---------------------------------------------------------------------------------
 (18) i2_tolower                                           8     6      2     368
                                              6 COMRAM     8     6      2
                          i2_isupper
 ---------------------------------------------------------------------------------
 (19) i2_isupper                                           6     4      2     152
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2_strcpy                                           10     6      4     356
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (19) i2_pad                                              11     5      6    2135
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (19) i2_strlen                                            4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (20) i2_fputs                                             7     3      4     857
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (19) i2_fputc                                             9     5      4     656
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (20) i2_putch                                             1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (21) i2_EUSART1_Write                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (19) i2_floorf                                           20    16      4     390
                                             64 COMRAM    20    16      4
                          i2___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___fpclassifyf                                    14    10      4     187
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (19) i2___fltol                                          10     6      4     281
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (19) i2___flsub                                           8     0      8    2445
                                             80 COMRAM     8     0      8
                          i2___fladd
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (20) i2___fladd                                          16     8      8    2296
                                             64 COMRAM    16     8      8
                           ___xxtofl (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___flneg                                           4     0      4      71
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (19) i2___flmul                                          25    17      8    1934
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___flge                                           12     4      8     338
                                             39 COMRAM    12     4      8
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___fleq                                           12     4      8     194
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (19) i2___fldiv                                          25    17      8    1589
                                             39 COMRAM    25    17      8
                           ___xxtofl (ARG)
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (19) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (18) i2_atoi                                             15    13      2     726
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (19) i2_isspace                                           7     5      2      94
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (18) i2_isdigit                                           6     4      2      74
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (19) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) ___xxtofl                                           14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
   _TMR2_Initialize
     _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR4_Initialize
     _TMR4_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR4_StartTimer
   _TMR4_StopTimer
   _TMR6_Initialize
     _TMR6_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _adafruit_init
     _i2c_WriteSerial
   _dataLogger_init
     _i2c_ReadSerial
     _i2c_WriteSerial
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
           _strncmp
           _tolower
             _isupper
   _i2c_init
     _i2c_WriteSerial
   _memset
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen
         _strncmp
         _tolower
           _isupper
   _strncmp

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _adafruit *
         ___xxtofl
         _sprintf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_efgtoa
                 i2___awdiv
                 i2___awmod
                 i2___fladd
                   ___xxtofl (ARG)
                   i2___fldiv (ARG)
                     ___xxtofl (ARG)
                     i2___flmul (ARG)
                       ___xxtofl (ARG)
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___fldiv
                   ___xxtofl (ARG)
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___fleq
                 i2___flge
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___flmul
                   ___xxtofl (ARG)
                 i2___flneg
                 i2___flsub
                   i2___fladd
                     ___xxtofl (ARG)
                     i2___fldiv (ARG)
                       ___xxtofl (ARG)
                       i2___flmul (ARG)
                         ___xxtofl (ARG)
                     i2___flmul (ARG)
                       ___xxtofl (ARG)
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___fltol
                 i2___fpclassifyf
                 i2_floorf
                   i2___fldiv (ARG)
                     ___xxtofl (ARG)
                     i2___flmul (ARG)
                       ___xxtofl (ARG)
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
                 i2_strcpy
                 i2_tolower
                   i2_isupper
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_isdigit
               i2_isupper
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
                 i2_strlen
               i2_strncmp
               i2_tolower
                 i2_isupper
         i2___fladd
           ___xxtofl (ARG)
           i2___fldiv (ARG)
             ___xxtofl (ARG)
             i2___flmul (ARG)
               ___xxtofl (ARG)
           i2___flmul (ARG)
             ___xxtofl (ARG)
         i2___fldiv
           ___xxtofl (ARG)
           i2___flmul (ARG)
             ___xxtofl (ARG)
         i2___flmul
           ___xxtofl (ARG)
         i2_i2c_ReadSerial
         i2_i2c_WriteSerial
   _TMR4_ISR *
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _dataLogRead *
         ___xxtofl
         _sprintf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_efgtoa
                 i2___awdiv
                 i2___awmod
                 i2___fladd
                   ___xxtofl (ARG)
                   i2___fldiv (ARG)
                     ___xxtofl (ARG)
                     i2___flmul (ARG)
                       ___xxtofl (ARG)
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___fldiv
                   ___xxtofl (ARG)
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___fleq
                 i2___flge
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___flmul
                   ___xxtofl (ARG)
                 i2___flneg
                 i2___flsub
                   i2___fladd
                     ___xxtofl (ARG)
                     i2___fldiv (ARG)
                       ___xxtofl (ARG)
                       i2___flmul (ARG)
                         ___xxtofl (ARG)
                     i2___flmul (ARG)
                       ___xxtofl (ARG)
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___fltol
                 i2___fpclassifyf
                 i2_floorf
                   i2___fldiv (ARG)
                     ___xxtofl (ARG)
                     i2___flmul (ARG)
                       ___xxtofl (ARG)
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
                 i2_strcpy
                 i2_tolower
                   i2_isupper
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_isdigit
               i2_isupper
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
                 i2_strlen
               i2_strncmp
               i2_tolower
                 i2_isupper
         i2___fladd
           ___xxtofl (ARG)
           i2___fldiv (ARG)
             ___xxtofl (ARG)
             i2___flmul (ARG)
               ___xxtofl (ARG)
           i2___flmul (ARG)
             ___xxtofl (ARG)
         i2___fldiv
           ___xxtofl (ARG)
           i2___flmul (ARG)
             ___xxtofl (ARG)
         i2___flmul
           ___xxtofl (ARG)
         i2_i2c_ReadSerial
         i2_i2c_WriteSerial
         i2_printf
           i2_vfprintf
             i2_vfpfcnvrt
               i2_atoi
                 i2___wmul
                 i2_isdigit
                 i2_isspace
               i2_efgtoa
                 i2___awdiv
                 i2___awmod
                 i2___fladd
                   ___xxtofl (ARG)
                   i2___fldiv (ARG)
                     ___xxtofl (ARG)
                     i2___flmul (ARG)
                       ___xxtofl (ARG)
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___fldiv
                   ___xxtofl (ARG)
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___fleq
                 i2___flge
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___flmul
                   ___xxtofl (ARG)
                 i2___flneg
                 i2___flsub
                   i2___fladd
                     ___xxtofl (ARG)
                     i2___fldiv (ARG)
                       ___xxtofl (ARG)
                       i2___flmul (ARG)
                         ___xxtofl (ARG)
                     i2___flmul (ARG)
                       ___xxtofl (ARG)
                   i2___flmul (ARG)
                     ___xxtofl (ARG)
                 i2___fltol
                 i2___fpclassifyf
                 i2_floorf
                   i2___fldiv (ARG)
                     ___xxtofl (ARG)
                     i2___flmul (ARG)
                       ___xxtofl (ARG)
                 i2_isupper
                 i2_pad
                   i2_fputc
                     i2_putch
                       i2_EUSART1_Write
                   i2_fputs
                     i2_fputc
                       i2_putch
                         i2_EUSART1_Write
                   i2_strlen
                 i2_strcpy
                 i2_tolower
                   i2_isupper
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
               i2_isdigit
               i2_isupper
               i2_stoa
                 i2_fputc
                   i2_putch
                     i2_EUSART1_Write
                 i2_strlen
               i2_strncmp
               i2_tolower
                 i2_isupper
   _TMR6_ISR *
     _TMR6_CallBack
       Absolute function(Fake) *
       _TMR6_DefaultInterruptHandler *
       _dataLogWrite *
         i2_i2c_WriteSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D0       9       81.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     9D      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     97      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     32C      12        0.0%
DATA                 0      0     32C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Oct 22 10:23:45 2019

                          __end_of_dataLogWrite 4BC4                __end_of_TMR2_SetInterruptHandler 6D04  
                      _eusart1TxBufferRemaining 01C8                                    ___fldiv@aexp 0118  
                                  ___fldiv@bexp 0117                                    ___fldiv@sign 0110  
                                            l28 6CD2                                    ___awdiv@sign 0105  
                           ___wmul@multiplicand 0102                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l400 5F0C                                             l161 681E  
                                           l411 5F70                                             l404 5F1C  
                                           l420 5AA4                                             l406 5F50  
                                           l423 5AB6                                             l432 5B0C  
                                           l433 5B0E                                             l434 5B10  
                                           l428 5ACA                                             l429 5ACC  
                                           l438 5B30                                             l715 1DCA  
                                           l397 5EFC                                             l741 20A8  
                                           l674 5CAA                                             l779 5298  
                                  __CFG_CPB$OFF 000000                                             _PR2 000FBB  
                                           _PR4 000F52                                    __CFG_CPD$OFF 000000  
                                           _PR6 000F4B                                     i2___fladd@a 0045  
                                   i2___fladd@b 0041                                             _pad 5C78  
                                   i2___fldiv@a 002C                                     i2___fldiv@b 0028  
                                  ___awmod@sign 0105                                 _TMR2_Initialize 6C28  
                                           tosl 000FFD                                             wreg 000FE8  
                                   i2___flmul@a 0013                                     i2___flmul@b 000F  
                                    _TXSTA1bits 000FAC                             __end_ofi2_vfpfcnvrt 2C7E  
                                   i2___flsub@a 0055                                     i2___flsub@b 0051  
                                  ___flmul@aexp 0111                                    ___flmul@bexp 0112  
                                  ___flmul@sign 010C                                    ___flmul@temp 0117  
                                  ___flmul@prod 0113                         __end_of_dataLogger_init 46B0  
                       __end_of_i2c_WriteSerial 5F76                                    ___fltol@exp1 0109  
                                          l1412 40E8                                            l1093 5522  
                                          l1423 4156                                            l1424 4152  
                                          l1442 3080                                            l1451 3298  
                                          l1452 3294                                            l1373 38BA  
                                          l1357 37E8                                            l1382 3920  
                                          l1358 37C6                                            l1550 47CA  
                                          l1383 391C                                            l1538 4E66  
                                          l1459 331E                                            l1644 65EE  
                                          l6010 37D8                                            l6110 3996  
                                          l7000 550C                                            l6104 398C  
                                          l6032 382E                                            l6024 380C  
                                          l6008 37D4                                            l5072 680C  
                                          l6034 3832                                            l6042 3844  
                                          l6108 3994                                            l6060 38DE  
                                          l6052 38AA                                            l7006 555A  
                                          l7014 696A                                            l6070 38F4  
                                          l5086 683C                                            ?_pad 0112  
                                          l7040 5832                                            l7024 57E8  
                                          l5088 683E                                            l5336 5B50  
                                          l7050 584A                                            l7202 1AD2  
                                          l6076 38FE                                            l7052 5856  
                                          l7044 5842                                            l7070 670A  
                                          l7214 1B00                                            l7222 1B16  
                                          l6096 3966                                            l6600 482A  
                                          l7304 1E22                                            l7232 1B82  
                                          l7240 1BCC                                            l8122 6784  
                                          l7058 5872                                            l6530 5CA2  
                                          l7322 1E68                                            l7306 1E26  
                                          l7250 1C38                                            l7234 1B9A  
                                          l6700 40E6                                            l6604 4858  
                                          l6540 5CFA                                            l6532 5CB4  
                                          l7404 21B6                                            l7412 2250  
                                          l7332 1EA2                                            l7340 1F9A  
                                          l7316 1E44                                            l7236 1BA4  
                                          l7180 5978                                            l8062 5F5A  
                                          l6630 3FA2                                            l5902 67F0  
                                          l6526 5C92                                            l7326 1E78  
                                          l7270 1D20                                            l6712 411C  
                                          l6552 56A8                                            l6536 5CCE  
                                          l7440 22DE                                            l7424 2292  
                                          l7264 1C96                                            l7512 52C8  
                                          l8232 4602                                            l8082 5B1A  
                                          l6706 40FE                                            l6650 3FE2  
                                          l6634 3FA6                                            l5930 36D2  
                                          l6562 56F2                                            l5906 69E6  
                                          l7442 22E8                                            l7362 20A0  
                                          l7354 2048                                            l7290 1DD4  
                                          l7274 1D5C                                            l7258 1C52  
                                          l7530 5342                                            l7522 530E  
                                          l7178 596A                                            l6900 60A2  
                                          l6740 41E8                                            l6732 419A  
                                          l6556 56B2                                            l5908 69EC  
                                          l7452 2340                                            l7364 20C2  
                                          l7268 1CD0                                            l7516 52E6  
                                          l7508 52AE                                            l7612 24D0  
                                          l7550 4D94                                            l7534 4D36  
                                          l6662 401A                                            l6654 3FE6  
                                          l5934 36D6                                            l7462 236C  
                                          l7286 1DB2                                            l7526 5328  
                                          l7614 24EE                                            l8270 51A4  
                                          l7560 4E04                                            l7552 4D9C  
                                          l7544 4D84                                            l7536 4D3A  
                                          l6912 60C8                                            l6736 41BE  
                                          l6568 64BE                                            l7376 2144  
                                          l7296 1DDA                                            l7640 263C  
                                          l7632 25DE                                            l7616 24FC  
                                          l8264 5140                                            l8360 4CD4  
                                          l8352 4C88                                            l8336 4C2E  
                                          l7554 4DA2                                            l6914 60D0  
                                          l6906 60B2                                            l6746 41F4  
                                          l6770 3030                                            l5954 371A  
                                          l6586 472A                                            l8362 4CF4  
                                          l7556 4DCC                                            l6932 6108  
                                          l6924 60F0                                            l6748 41F6  
                                          l6676 4048                                            l6668 4030  
                                          l6844 325E                                            l6772 3040  
                                          l6596 47EC                                            l7388 2172  
                                          l7396 2192                                            l7660 273A  
                                          l7644 2666                                            l8284 5224  
                                          l8276 51DC                                            l6694 40C0  
                                          l6686 4098                                            l6838 3240  
                                          l5966 373E                                            l5958 371E  
                                          l7478 23CC                                            l8278 520E  
                                          l8366 4CFE                                            l8358 4CC0  
                                          l6928 60FA                                            l6960 6364  
                                          l6952 6344                                            l6944 632A  
                                          l6880 333C                                            l6864 32DC  
                                          l6768 302C                                            l6954 634C  
                                          l6786 306C                                            l5898 67D8  
                                          l7498 525A                                            l7674 27E8  
                                          l6964 636E                                            l6948 6336  
                                          l6980 5FE0                                            l6868 32FA  
                                          l6796 309E                                            l6788 3070  
                                          l5996 377A                                            l7668 27AA  
                                          l7684 280C                                            l7678 27F4  
                                          l6968 637C                                            l6984 5FFE  
                                          l6976 5FAC                                            l6992 54C2  
                                          l7970 6490                                            l6996 54F6  
                                          l7968 646A                                            STR_1 10D4  
                                          STR_2 10D4                                            STR_3 10A7  
                                          STR_4 10DA                                            STR_5 10DA  
                                          STR_6 10B6                                            STR_7 105E  
                                          STR_8 10CE                                            STR_9 10CE  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u6410 5B48  
                                          u6430 5B90                                            u9040 414C  
                                          u7620 37F0                                            u7460 6912  
                                          u9230 328E                                            u7470 6914  
                                          u9080 41A8                                            u9330 60D4  
                                          u9090 41CC                                            u7570 379C  
                                          u9180 308C                                            u7580 37AC  
                                          u8700 56EC                                            u9270 32EA  
                                          u9190 3202                                            u7830 3972  
                                          u7750 3902                                            u7590 37AE  
                                          u9510 57D6                                            u8710 64FA  
                                          u9440 5FFA                                            u9280 3308  
                                          u9520 5806                                            u8640 566E  
                                          u7770 3916                                            u8810 47AA  
                                          u8730 65D4                                            u9195 31F8  
                                          u8740 65D6                                            u9525 57FC  
                                          u8645 5662                                            u8717 64F0  
                                          u9390 6350                                            u8830 480A  
                                          u8815 47A0                                            u9560 585C  
                                          u8760 46F8                                            u8690 56EA  
                                          u8770 4718                                            u8835 4800  
                                          u8860 6944                                            u9900 1C12  
                                          u9820 1AF0                                            u8685 56CC  
                                          u8765 46EE                                            u8870 6946  
                                          u9590 6706                                            u9850 1B5A  
                                          u8795 4742                                            u8796 4748  
                                          u9940 1D86                                            u9860 1B5C  
                                          u8797 4756                                            u9790 59C2  
                                          u9970 1DC0                                            u9890 1C10  
                                          _TMR2 000FBC                                            _TMR4 000F53  
                                          _TMR6 000F4C                                            _WPUB 000F61  
                                 _EUSART1_Write 6808                                    i2___flge@ff1 0028  
                                  i2___flge@ff2 002C                                    i2___fleq@ff1 0001  
                                  i2___fleq@ff2 0005                                            _dbuf 0280  
                                          _atoi 4D22                                            _main 4BC4  
                                 ?_EUSART1_Read 0001                                            _prec 01A9  
                                          _nout 01A5                                            pad@i 0119  
                                          pad@p 0116                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 011B                                            fsr2l 000FD9  
                                          _stoa 522E                                            btemp 005E  
                                  i2___flneg@f1 0001                                   __CFG_BORV$190 000000  
                                 ___fpclassifyf 562E                                     i2_atoi$2105 0010  
                                   i2_atoi$2106 0014                                     i2_atoi$2107 0012  
                                          prodh 000FF4                               i2i2c_ReadSerial@i 000C  
                                          prodl 000FF3                                            start 00CC  
                                 __CFG_IESO$OFF 000000                                    i2___fltol@f1 0001  
                               ___fldiv@new_exp 0111                                 __end_ofi2_fputc 5C78  
                               __end_ofi2_fputs 687A                                 __end_ofi2_putch 6D40  
                                  _tolower$2233 010C                      ??_TMR4_SetInterruptHandler 0102  
                                    i2efgtoa@fp 0060                                      i2efgtoa@ne 007D  
                                    i2efgtoa@pp 0079                                      i2efgtoa@ou 0067  
                                  ___param_bank 000000                              i2c_ReadSerial@addr 0100  
                          __end_of_clearDisplay 1035                              i2c_ReadSerial@data 0102  
                      __size_ofi2_EUSART1_Write 0038                                           ??_pad 0118  
                                    i2_vfprintf 63F6                        __size_ofi2___fpclassifyf 00CC  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 6CD8  
                         _eusart1RxStatusBuffer 0200                                   ___fltol@sign1 0108  
                                         ?_atoi 0107                                 __end_of___fladd 39B2  
                                         ?_main 0001                                 __end_of___fldiv 41FE  
                               __end_of___awdiv 6112                                 __end_of___flneg 697C  
                                         STR_10 10C4                                           STR_11 1037  
                                         STR_12 10CF                                           STR_20 10E3  
                                         STR_21 10EB                                           STR_13 1092  
                                         STR_14 10CF                                           STR_15 107D  
                                         STR_24 10EF                                           STR_16 10DF  
                                         STR_17 10E7                                           STR_26 10EF  
                               __end_of___awmod 6386                                 __end_of___flmul 3352  
                               __end_of___flsub 668C                                 __end_of___fltol 5884  
                                         ?_stoa 010B                                           u10000 1DF2  
                                         u10110 2038                                           u10040 1E40  
                                         u10210 2274                                           u10300 23B8  
                                         u11120 5F4E                                           u10400 5356  
                                         u10321 5238                                           u11130 5F54  
                                         u11220 5B08                                           u10420 4D80  
                                         u10270 2356                                           u11127 5F44  
                                         u10440 4E36                                           u10600 26F0  
                                         u10520 2538                                           u10450 4E38  
                                         u10290 23B6                                           u10370 52DC  
                                         u10530 253A                                           u10540 2546  
                               ___awdiv@divisor 0102                                           u10590 26EE  
                                         _T2CON 000FBA                                           u11807 45C8  
                                         u11680 4C46                                           u11817 45F8  
                                         u11737 4BF4                                           u11827 4644  
                                         u11747 44AC                                           u11837 4674  
                                         u11757 44DC                                           u11847 46A4  
                                         u11767 44EE                                           _T4CON 000F51  
                                         u11777 451E                                           u11787 454E  
                                         u11797 4598                                           _T6CON 000F4A  
                                __CFG_DEBUG$OFF 000000                                           i2l400 6132  
                                         i2l161 688E                                           i2l242 004A  
                                         i2l411 6192                                           i2l420 5D28  
                                         i2l404 6140                                           i2l244 0056  
                                         i2l173 6A60                                           i2l406 6174  
                                         i2l246 006E                                           i2l423 5D38  
                                         i2l432 5D8A                                           i2l248 007A  
                                         i2l433 5D8C                                           i2l434 5D8E  
                                         i2l428 5D4A                                           i2l429 5D4C  
                                         i2l438 5DAC                                           i2l715 1438  
                                         i2l741 171E                                           i2l397 6124  
                                         i2l674 5E7E                                           i2l779 53C6  
                               ___awdiv@counter 0104                            __size_of_dataLogRead 02B6  
                                  vfpfcnvrt@fmt 0173                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         i2_pad 5E4E                                   __CFG_WRT0$OFF 000000  
                               _TMR4_Initialize 6B7A                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                                 i2___fladd@grs 0050                            _EUSART1_Transmit_ISR 6A38  
             __size_of_TMR6_SetInterruptHandler 000A                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                     ?_TMR6_SetInterruptHandler 0100                                __end_of_TMR2_ISR 6BC2  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                              __end_of_TMR4_ISR 6C06                                   __CFG_WRTD$OFF 000000  
                              __end_of_TMR6_ISR 6BE4                                  __CFG_EBTRB$OFF 000000  
                                    i2isdigit@c 0001                                           _flags 01AB  
                                         _index 01C3                                           _fputc 5B36  
                                         _fputs 67CC                                 __end_of_isdigit 694C  
                                 i2___fldiv@grs 003B                              __CFG_MCLRE$EXTMCLR 000000  
                                 i2___fldiv@rem 0034                                           atoi@n 0114  
                                         pad@fp 0112                                           atoi@s 0107  
                                         _width 01A7                                           _putch 6CD8  
                               __end_of_nextPos 102C                                 __end_of_isspace 6712  
                                ?_EUSART1_Write 0001                                 __end_of_isupper 691A  
                                         pclath 000FFA                                __end_ofi2___flge 562E  
                              __end_ofi2___fleq 608C                                           tablat 000FF5  
                              __end_ofi2___wmul 6B56                                  ??_EUSART1_Read 0100  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 0117                                           stoa@l 011F  
                                         stoa@p 011D                                           stoa@s 010D  
                                         stoa@w 0119                                           ttemp5 005F  
                                         ttemp6 0062                                           ttemp7 0066  
                                         status 000FD8                                __end_ofi2_efgtoa 1A88  
                                    i2isspace@c 0001                                           wtemp8 005F  
                               __end_of_sprintf 65AA                                  ?___fpclassifyf 0100  
                               __end_of_tolower 65F8                                   i2___flmul@grs 001C  
                                __CFG_HFOFST$ON 000000                                 __end_of_strncmp 59E8  
                              __end_ofi2_floorf 4A20      __end_of_EUSART1_DefaultFramingErrorHandler 6D70  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 6D6E  
                            __size_ofi2___fladd 030C                              __size_ofi2___fldiv 0288  
                            __size_ofi2___awdiv 0084                              __size_ofi2___flneg 002E  
                            __size_ofi2___awmod 0070                              __size_ofi2___flmul 0352  
                                __CFG_PBADEN$ON 000000                              __size_ofi2___flsub 0046  
                            __size_ofi2___fltol 00BA                                      i2isupper@c 0001  
                              __end_ofi2_printf 6B30                  ??_TMR6_DefaultInterruptHandler 0001  
                              __end_ofi2_strcpy 6558                                __end_ofi2_strlen 6AB8  
                               __initialization 629C                                    __end_of_atoi 4E70  
                    __end_of_EUSART1_Initialize 629C                                    __end_of_main 4D22  
                                  __end_of_stoa 5360                                      i2printf@ap 00C5  
                              __end_of_i2c_init 68E8                         __end_of_TMR2_Initialize 6C48  
                            __size_ofi2_isdigit 0030                     ?_INTERRUPT_InterruptManager 0001  
                                    i2stoa@nuls 0011                                     i2_vfpfcnvrt 2844  
                            __size_ofi2_isspace 003E                                   i2vfpfcnvrt@ap 00A3  
                                 i2vfpfcnvrt@cp 00A9                                   i2vfpfcnvrt@ct 00B3  
                                 i2vfpfcnvrt@fp 009F                              __size_ofi2_isupper 0030  
                                        ??_atoi 0109                        _TMR2_SetInterruptHandler 6CFA  
                                        ??_main 019A                                          ??_stoa 010F  
                                 __activetblptr 000003                                      i2tolower@c 0007  
                            __size_ofi2_tolower 004C                           i2c_WriteSerial@length 0104  
                            __size_ofi2_strncmp 00A8                                          ?i2_pad 0013  
                         ?_EUSART1_Transmit_ISR 0001                                 _TMR6_Initialize 6B56  
                                    i2strncmp@l 0008                                      i2strncmp@n 0005  
                                    i2strncmp@r 000A                               ?i2_i2c_ReadSerial 0001  
                              ?_dataLogger_init 0001                                          ?_fputc 0102  
                                        ?_fputs 010B                                ?_i2c_WriteSerial 0100  
                              ___awdiv@dividend 0100                              ??i2_i2c_ReadSerial 0007  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        i2l1412 4370                                          i2l1093 55F2  
                                        i2l1423 43DE                                          i2l1424 43DA  
                                        i2l1442 33D2                                          i2l1451 35EA  
                                        i2l1452 35E6                                          i2l1373 3BC6  
                                        i2l1357 3AF4                                          i2l1382 3C2C  
                                        i2l1358 3AD2                                          i2l1550 4980  
                                        i2l1383 3C28                                          i2l1490 5076  
                                        i2l1538 4FB0                                          i2l1483 4FF8  
                                        i2l1459 3670                                          i2l1644 663A  
                                __CFG_WDTEN$OFF 000000                                          i2l5122 39E2  
                                        i2l5220 3B3A                                          i2l5212 3B18  
                                        i2l5052 687C                                          i2l5222 3B3E  
                                        i2l5230 3B50                                          i2l5142 3A26  
                                        i2l5118 39DE                                          i2l5240 3BB6  
                                        i2l5154 3A4A                                          i2l5146 3A2A  
                                        i2l5066 68AC                                          i2l5314 684C  
                                        i2l5322 6A98                                          i2l6202 13C8  
                                        i2l6130 113E                                          i2l5412 6212  
                                        i2l5404 61FA                                          i2l5068 68AE  
                                        i2l5324 6A9C                                          i2l5318 6862  
                                        i2l6214 141E                                          i2l6142 1170  
                                        i2l6150 1186                                          i2l5408 6204  
                                        i2l5440 63D4                                          i2l5432 63B4  
                                        i2l5424 639A                                          i2l5248 3BEA  
                                        i2l5264 3C0A                                          i2l5184 3A86  
                                        i2l5520 58EC                                          i2l5504 58A2  
                                        i2l5096 5BF0                                          i2l5352 5E76  
                                        i2l6304 17BC                                          i2l6232 1494  
                                        i2l6224 144A                                          i2l6160 11F2  
                                        i2l7120 2A76                                          i2l7112 2A18  
                                        i2l5434 63BC                                          i2l5258 3C00  
                                        i2l5530 5904                                          i2l5362 5ECE  
                                        i2l5354 5E88                                          i2l6250 14DA  
                                        i2l6234 1498                                          i2l6218 1442  
                                        i2l6162 120A                          __size_of_adafruit_init 003E  
                                        i2l5380 61AC                                          i2l5444 63DE  
                                        i2l5428 63A6                                          i2l5460 606A  
                                        i2l5700 3382                                          i2l5292 3C98  
                                        i2l5284 3C72                                          i2l5196 3AE0  
                                        i2l5532 5910                                          i2l5524 58FC  
                                        i2l5348 5E68                                          i2l6316 17EC  
                                        i2l6324 180C                                          i2l6332 1830  
                                        i2l6340 18C8                                          i2l6260 1514  
                                        i2l6244 14B6                                          i2l6164 1214  
                                        i2l7140 2B74                                          i2l7124 2AA0  
                                        i2l5630 436E                                          i2l5606 42D0  
                                        i2l5702 3392                                          i2l5198 3AE4  
                                        i2l5358 5EA0                                          i2l6406 1A4A  
                                        i2l6254 14EA                                          i2l6510 5A20  
                                        i2l5392 61D2                                          i2l5448 63EC  
                                        i2l5624 4348                                          i2l5616 4320  
                                        i2l5560 422A                                          i2l5464 6088  
                                        i2l5456 6036                                          i2l5480 55DC  
                                        i2l5472 5592                                          i2l5296 3CA0  
                                        i2l6352 1910                                          i2l6192 1304  
                                        i2l6168 123A                                          i2l6440 53F6  
                                        i2l5394 61DA                                          i2l5386 61BC  
                                        i2l5642 43A4                                          i2l5810 368E  
                                        i2l5298 3CA2                                          i2l5538 592C  
                                        i2l6370 1968                                          i2l6290 1716  
                                        i2l6282 16BE                                          i2l6178 12A6  
                                        i2l6186 12C0                                          i2l6450 543A  
                                        i2l6426 538A                                          i2l7154 2C22  
                                        i2l5636 4386                                          i2l5580 426A  
                                        i2l5564 422E                                          i2l5476 55C6  
                                        i2l5716 33BE                                          i2l6380 19BE  
                                        i2l6292 1738                                          i2l6276 1680  
                                        i2l6268 160A                                          i2l6196 133E  
                                        i2l6444 5414                                          i2l6436 53DE  
                                        i2l6508 5A12                                          i2l7148 2BE4  
                                        i2l7092 290A                                          i2l7164 2C48  
                                        i2l8142 6A5C                                          i2l6462 4E82  
                                        i2l5670 4470                                          i2l5662 4422  
                                        i2l5486 562A                                          i2l5726 33F0  
                                        i2l5718 33C2                                          i2l5494 6A26  
                                        i2l6390 19EA                                          i2l6198 138C  
                                        i2l6454 5456                                          i2l7158 2C2E  
                                        i2l7094 2928                                          i2l6480 4EE8  
                                        i2l6472 4ED0                                          i2l6464 4E86  
                                        i2l5592 42A2                                          i2l5584 426E  
                                        i2l5824 5774                                          i2l6368 195E  
                                        i2l7096 2936                                          i2l8162 5E48  
                                        i2l6482 4EEE                                          i2l5666 4446  
                                        i2l5834 57BE                                          i2l6458 546E  
                                        i2l6484 4F18                                          i2l5676 447C  
                                        i2l5828 577E                                          i2l5844 48E2  
                                        i2l7710 505E                                          i2l6478 4EE0  
                                        i2l5678 447E                                          i2l5598 42B8  
                                        i2l5774 35B0                                          i2l5862 4A0E  
                                        i2l5854 49A2                                          i2l7704 5026  
                                        i2l6488 4F4E                                          i2l5768 3592  
                                 i2putch@txData 0002                                          i2l7706 502C  
                                        i2l5794 362E                                          i2l5698 337E  
                                        i2l5858 49E0                                          i2l7716 509C  
                                        i2l7708 5038                                          i2l5884 6514  
                                        i2l7580 6438                                          i2l7900 4B4A  
                                        i2l7734 50E8                                          i2l7718 50A8  
                                        i2l5878 67C4                                          i2l5798 364C  
                                        i2l7752 617C                                          i2l7578 640A  
                                        i2l7930 3D0A                                          i2l7914 4B90  
                                        i2l7772 5D96                                          i2l7908 4B6C  
                                        i2l7944 3D50                                          i2l7698 5008  
                                        i2l7938 3D2C                                          i2l7884 4AD8  
                                        i2l7798 6C24                                __end_of_adafruit 2FFE  
                                     ??i2_fputc 0007                                          _RCREG1 000FAE  
                                     ??i2_fputs 0010                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                       ??i2_putch 0002  
                         __size_of_dataLogWrite 01A4                                          _TXREG1 000FAD  
                              __end_of___xxtofl 50FA                                          _TXSTA1 000FAC  
                               _TMR4_StartTimer 6D4E                                          i2_atoi 4E70  
                                        i2pad@i 001A                                          i2pad@p 0017  
                                        i2pad@w 001C                                          i2_stoa 5360  
                                i2___fladd@aexp 004E                                  i2___fladd@bexp 004F  
                                __CFG_XINST$OFF 000000                              i2i2c_WriteSerial@i 000A  
                     i2c_WriteSerial@targetAddr 0108                                    vfprintf@cfmt 018F  
                                        ___flge 548C                                          ___fleq 5F76  
                              ??_i2c_ReadSerial 0106                                   i2vfprintf@fmt 00B9  
                                     ??___fladd 0108                                          ___wmul 6AE0  
                                     ??___fldiv 0108                                       ??___awdiv 0104  
                                     ??___flneg 0104                                  __CFG_STVREN$ON 000000  
                                     ??___awmod 0104                                       ??___flmul 0108  
                                     ??___flsub 0121                                       ??___fltol 0104  
                                        _efgtoa 1A88                                     ?i2_vfprintf 00B7  
                      ?_EUSART1_SetErrorHandler 0100                                          _floorf 46B0  
                                        _logPos 01D5                                          _memset 50FA  
                       __end_of_TMR4_Initialize 6B9E                                          clear_0 62E2  
                                        clear_1 62EE                                          clear_2 62FA  
                              ___awdiv@quotient 0106                                  i2___fldiv@aexp 0040  
                                i2___fldiv@bexp 003F                                 ___awmod@divisor 0102  
                              __end_of_humiText 1021                                  i2___fldiv@sign 0038  
                               ___awmod@counter 0104                                          _printf 6AB8  
                                        pad@buf 0114                ??_EUSART1_SetOverrunErrorHandler 0102  
               ?_EUSART1_SetOverrunErrorHandler 0100                                          _strcpy 64AE  
                                        _strlen 69DC                                  i2___awdiv@sign 0006  
                             ??i2_EUSART1_Write 0001            __end_of_TMR4_DefaultInterruptHandler 6D6C  
         __size_of_TMR4_DefaultInterruptHandler 0002                    _TMR4_DefaultInterruptHandler 6D6A  
                                        fputc@c 0102                                          fputs@c 010F  
                                        fputs@i 0110                                          fputs@s 010B  
                             __end_ofi2___fladd 3CBE                                       ??_isdigit 0102  
                              __end_of_tempText 1028                               __end_ofi2___fldiv 4486  
                             __end_ofi2___awdiv 621C                               __end_ofi2___flneg 6A38  
                             __end_ofi2___awmod 63F6                               __end_ofi2___flmul 36A4  
                             __end_ofi2___flsub 66D2                               __end_ofi2___fltol 593E  
                               ___fpclassifyf@e 0108                                 ___fpclassifyf@u 010A  
                               ___fpclassifyf@x 0100                                    __mediumconst 0000  
                                     ??_isspace 0102                               ??i2___fpclassifyf 0005  
                                        tblptrh 000FF7                                       ??_isupper 0102  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                        stoa@cp 011B                                          stoa@fp 010B  
                                  _dataLogWrite 4A20                                __end_of_vfprintf 64AE  
                                i2___awmod@sign 0006                                 ??_EUSART1_Write 0100  
      TMR6_SetInterruptHandler@InterruptHandler 0100        TMR4_SetInterruptHandler@InterruptHandler 0100  
      TMR2_SetInterruptHandler@InterruptHandler 0100                                       ??_sprintf 005E  
                                     ??_tolower 0108                                 _eusart1RxBuffer 0300  
                                i2___flmul@aexp 0020                                  i2___flmul@bexp 0021  
                                     ??_strncmp 0106                                  i2___flmul@sign 001B  
                                i2___flmul@temp 0026                                  i2___flmul@prod 0022  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 0240  
                                    ___flge@ff1 0119                                      ___flge@ff2 011D  
                               ??___fpclassifyf 0104                                    ___xxtofl@arg 000B  
                             __end_ofi2_isdigit 69DC                                    ___xxtofl@exp 000A  
                             _SYSTEM_Initialize 6CA8                                    ___xxtofl@val 0001  
                                    ___fleq@ff1 0100                                      ___fleq@ff2 0104  
                          __end_of_display_Addr 1004                                      __accesstop 0060  
                       __end_of__initialization 630A                                  i2___fltol@exp1 000A  
                             __end_ofi2_isspace 67CC                                 adafruit@rh_code 00E7  
                                    ___flneg@f1 0100                               __end_ofi2_isupper 69AC  
                         __end_of_TMR2_CallBack 6CA8                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                      ___fltol@f1 0100  
                             __end_ofi2_tolower 6644                               __end_ofi2_strncmp 5A90  
                 __end_of_adafruit_humi_command 1037                  __size_of_EUSART1_RxDataHandler 0022  
                                 __end_ofi2_pad 5EE8                   __end_of_EUSART1_RxDataHandler 6C28  
                                 i2_efgtoa$1602 0071                                   i2_efgtoa$1603 0073  
                                 i2_efgtoa$1604 0075                                   i2_efgtoa$1592 006B  
                                 i2_efgtoa$1593 006D                                   i2_efgtoa$1598 006F  
                                __pcstackCOMRAM 0001                                    i2efgtoa@mode 0088  
                         __end_of_TMR4_CallBack 6C88                                    i2efgtoa@sign 0081  
                                  __pidataBANK0 6D60                                    __pidataBANK1 6D40  
                           ??_SYSTEM_Initialize 0102                                   _adafruit_Addr 1002  
                                     ?_TMR2_ISR 0001                                  i2_tolower$2233 000D  
                                     ?_TMR4_ISR 0001                                       ?_TMR6_ISR 0001  
                                 __end_of_fputc 5BD8                                   __end_of_fputs 6808  
                                 _adafruit_init 6712                                   __end_of_putch 6CE6  
                                   i2printf@fmt 00BF                                ?_TMR2_Initialize 0001  
                       __end_of_TMR6_Initialize 6B7A                                       ?i2___flge 0028  
                                     ?i2___fleq 0001                            __end_of_EUSART1_Read 678E  
                          i2c_ReadSerial@length 0104                           __end_of_TMR6_CallBack 6C68  
                                     ?i2___wmul 0001                          ??_EUSART1_Transmit_ISR 0001  
                                     ?i2_efgtoa 0060                           TMR6_ISR@CountCallBack 01AD  
                                       ??i2_pad 0019                                       ?i2_floorf 0041  
                   __end_of_EUSART1_Receive_ISR 5E4E                   ?_TMR4_DefaultInterruptHandler 0001  
                                i2vfpfcnvrt@fmt 00A1                                       ?i2_printf 00BF  
                                     ?i2_strcpy 0001                                       ?i2_strlen 0001  
                                  _clearDisplay 1033                           i2EUSART1_Write@txData 0001  
                       __end_of_TMR4_StartTimer 6D54                                         ??_fputc 0106  
                     __end_of_SYSTEM_Initialize 6CC6                                         ??_fputs 010F  
                                       ??_putch 0101                                   _eusart1RxHead 01C7  
                                 _eusart1TxHead 01CA                                   _eusart1RxTail 01C6  
                                    __pbssBANK0 00F7                                      __pbssBANK1 019D  
                                    __pbssBANK2 0200                                      __pbssBANK3 0300  
                                 _eusart1TxTail 01C9               _EUSART1_TxDefaultInterruptHandler 01C1  
               ??_EUSART1_SetRxInterruptHandler 0102                             __size_ofi2_vfprintf 0060  
                               __CFG_PLLCFG$OFF 000000                                       ?_i2c_init 0001  
                                       ?i2_atoi 0008                           _TMR4_InterruptHandler 01B3  
                                   i2strcpy@src 0003                                         ?i2_stoa 000C  
                                   i2strncmp@_l 0001                                     i2strncmp@_r 0003  
               __end_of_EUSART1_SetErrorHandler 6D36                              __CFG_CCP2MX$PORTC1 000000  
                                       ?___flge 0119                                         ?___fleq 0100  
                                       ?___wmul 0100                __end_of_TMR6_SetInterruptHandler 6CF0  
                                    ??_TMR2_ISR 005E                                      ??_TMR4_ISR 005E  
                            __CFG_CCP3MX$PORTB5 000000                                      ??_TMR6_ISR 000E  
                                ?_adafruit_init 0001                                         ?_efgtoa 012D  
                                       ?_floorf 0119                                         ?_memset 0100  
                              ?_TMR4_Initialize 0001                                         ?_printf 0191  
                                    adafruit@rh 00DF                                      ??i2___flge 0030  
                                    ??i2___fleq 0009                         i2i2c_WriteSerial@length 0005  
                                       ?_strcpy 0100                                         ?_strlen 0100  
        __end_of_EUSART1_SetFramingErrorHandler 6D2C         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 6D22                                       ?_adafruit 0001  
                                    ??i2___wmul 0005                                      ??i2_efgtoa 0059  
                                     ?___xxtofl 0001                                      ??i2_floorf 0045  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 043A                                      ??i2_printf 005E  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP1ADD 000FC8                                         _SSP1BUF 000FC9  
                                    ??i2_strcpy 0005                                      ??i2_strlen 0003  
                                       i2_fputc 5BD8                                         i2_fputs 6842  
                                    ??_i2c_init 010B                      i2i2c_ReadSerial@targetAddr 000B  
                               i2c_ReadSerial@i 010B                                         i2atoi@n 0015  
                                       i2pad@fp 0013                                         i2atoi@s 0008  
                                       i2_putch 6D36                                 __size_ofi2_atoi 014A  
                               i2___fladd@signs 004D                                         i2stoa@i 0018  
                                       i2stoa@l 0020                                         i2stoa@p 001E  
                                       i2stoa@s 000E                                         i2stoa@w 001A  
                               __CFG_PWRTEN$OFF 000000                                 __size_ofi2_stoa 012C  
                                       __Hparam 0000                                         __Lparam 0000  
                    ??_TMR2_SetInterruptHandler 0102                         __size_of_TMR4_StopTimer 0006  
                               __size_of___flge 00D2                                 __size_of___fleq 008C  
                                       ___fladd 36A4                                         ___fldiv 3F74  
                                       ___awdiv 608C                                         ___flneg 694C  
                                  adafruit@outH 00D5                                    adafruit@temp 00E3  
                                       ___awmod 6314                                    adafruit@outT 00DA  
                                       ___flmul 2FFE                                         ___flsub 6644  
                                       ___fltol 57C8                                 __size_of___wmul 0028  
                                     ?_vfprintf 0189                                  i2vfprintf@cfmt 00BD  
                                  __psmallconst 1000                                 __size_of_efgtoa 0982  
                                 ??_dataLogRead 00D1                                    ?i2_vfpfcnvrt 009F  
                               __size_of_floorf 01BA                                         __pcinit 629C  
                               __size_of_memset 0134                                ?_TMR6_Initialize 0001  
                                       __ramtop 1000                                         __ptext0 4BC4  
                                       __ptext1 50FA                                         __ptext2 68B2  
                                       __ptext3 4486                                         __ptext4 6AB8  
                                       __ptext5 6456                                         __ptext6 240A  
                                       __ptext7 593E                                         __ptext8 522E  
                                       __ptext9 1A88                                 __size_of_printf 0028  
                                    ??_adafruit 00D1                                 __size_of_strcpy 0056  
                               __size_of_strlen 002E                                         _logData 01CF  
                         _OSCILLATOR_Initialize 6CC6                                       _T2CONbits 000FBA  
                                       _readPos 00FB                                    __size_of_pad 009E  
                                       _isdigit 691A                                      ??___xxtofl 0005  
                 __end_of_adafruit_temp_command 1036                                ___awmod@dividend 0100  
                                     _T4CONbits 000F51                                         _nextPos 1028  
                            _EUSART1_Initialize 621C                        ??_PIN_MANAGER_Initialize 0100  
             __size_of_TMR4_SetInterruptHandler 000A                                         _isspace 66D2  
                     ?_TMR4_SetInterruptHandler 0100                                         _isupper 68E8  
                                       efgtoa@c 0133                                         efgtoa@d 0151  
                                       efgtoa@e 0169                                         efgtoa@f 012F  
                                       efgtoa@g 0165                                         efgtoa@h 015B  
                                       efgtoa@i 0163                                         efgtoa@l 015F  
                                       efgtoa@m 014D                                         efgtoa@n 016B  
                                       efgtoa@p 0155                                         efgtoa@t 0149  
                                       efgtoa@u 016D                                         efgtoa@w 0158  
                                     _T6CONbits 000F4A                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 010D                      __size_of_SYSTEM_Initialize 001E  
                                       _sprintf 6558                                         _tolower 65AA  
                                       main@tmp 019C                                ?_TMR4_StartTimer 0001  
                                       _strncmp 593E                            end_of_initialization 630A  
                                       floorf@e 0127                                         floorf@m 0123  
                                       floorf@u 0129                                         floorf@x 0119  
                ??_TMR4_DefaultInterruptHandler 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0104                                         memset@c 0102  
                                       memset@k 0108                                         memset@n 0104  
                                       memset@s 010A                     _EUSART1_OverrunErrorHandler 01BB  
                                       fputs@fp 010D                             i2___wmul@multiplier 0001  
                                     i2u1131_48 6C56                                       i2u1141_48 5E36  
                                     i2u1070_40 50B2                                       i2u1080_40 6178  
                                     i2u1127_48 6C96                                       i2u1137_48 5DDC  
                                     i2u1129_48 6C76                                       i2u1161_48 0060  
                                     i2u1137_49 5DF0                                       i2u1139_48 5E0A  
                                     i2u1139_49 5E1E                                       i2u1190_47 3D74  
                                     i2u1079_40 6172                                       i2u1166_48 0084  
                                     i2u1166_49 0098                                       i2u1079_47 6168  
                                     i2u1191_47 3E6E                                       i2u1192_47 3F68  
                                     i2u1089_40 5D86                                       i2u1185_47 4A68  
                                     i2u1186_47 4AA2                                       i2u1187_47 4B02  
                                     i2u1188_47 4BBA                                       i2u1189_47 3CE2  
         __end_of_EUSART1_SetRxInterruptHandler 6D18          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 6D0E                       __size_ofi2_i2c_ReadSerial 009C  
                               i2_EUSART1_Write 687A                               __end_of_vfpfcnvrt 2844  
                                    efgtoa@mode 015A                                 ??_adafruit_init 010B  
                                    efgtoa@sign 0153                            i2i2c_ReadSerial@addr 0001  
                             __end_of_verifyPos 1033                            i2i2c_ReadSerial@data 0003  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 003E  
                               i2___fpclassifyf 56FC                                    ??i2_vfprintf 005E  
                                    ??_vfprintf 018F                            ??_EUSART1_Initialize 0102  
                                       strcpy@d 0108                                         strlen@a 0102  
                                       strcpy@s 0106                                         strlen@s 0100  
                                  _display_Addr 1003                        _TMR6_SetInterruptHandler 6CE6  
                                   ___fladd@grs 010F                                   ___xxtofl@sign 0009  
                           __end_of_dataLogRead 3F74                                       _TRISCbits 000F94  
                                   ___fldiv@grs 0113                                     ___fldiv@rem 010C  
                               i2___fltol@sign1 0009                __size_of_EUSART1_SetErrorHandler 000A  
                                     i2___fladd 39B2                                       i2___fldiv 41FE  
                                     i2___awdiv 6198                                       i2___flneg 6A0A  
                           EUSART1_Write@txData 0100                                       i2___awmod 6386  
                                     i2___flmul 3352                                       i2___flsub 668C  
                                     i2___fltol 5884                                     ___flmul@grs 010D  
                            __end_ofi2_vfprintf 6456                                    _EUSART1_Read 6750  
                      __size_of_dataLogger_init 022A                              i2___awdiv@dividend 0001  
                                     i2_isdigit 69AC                        __size_of_i2c_WriteSerial 008E  
                                __end_ofi2_atoi 4FBA            __size_of_EUSART1_DefaultErrorHandler 0006  
                                     i2_isspace 678E                                  __end_ofi2_stoa 548C  
                                     i2_isupper 697C                                       i2efgtoa@c 0066  
                                     i2efgtoa@d 007F                                       i2efgtoa@e 0097  
                                     i2efgtoa@f 0062                                       i2efgtoa@g 0093  
                                    _stringArry 0340                                       i2efgtoa@h 0089  
                                     i2efgtoa@i 0091                                       i2efgtoa@l 008D  
                                     i2efgtoa@m 007B                                       i2efgtoa@n 0099  
                                     i2efgtoa@p 0083                                       i2efgtoa@t 0077  
                                     i2efgtoa@u 009B                                       i2efgtoa@w 0086  
                                     i2atoi@neg 000E                             __end_of_degree_sign 101A  
                                     i2_tolower 65F8                    __end_of_INTERRUPT_Initialize 6D68  
          __end_of_TMR2_DefaultInterruptHandler 6D6E           __size_of_TMR2_DefaultInterruptHandler 0002  
                  _TMR2_DefaultInterruptHandler 6D6C                                   i2efgtoa@nmode 0085  
                                     i2_strncmp 59E8                                  __end_of___flge 555E  
                                __end_of___fleq 6002                                       i2floorf@e 004F  
                                   vfpfcnvrt@ap 0175                                       i2floorf@m 004B  
                                   vfpfcnvrt@cp 017B                                     vfpfcnvrt@ct 0186  
                                     i2floorf@u 0051                                     vfpfcnvrt@fp 0171  
                                     i2floorf@x 0041                                  __end_of___wmul 6B08  
                                __end_of_efgtoa 240A                               __size_of_TMR2_ISR 0024  
                             __size_of_TMR4_ISR 0022                                       i2fputc@fp 0005  
                             __size_of_TMR6_ISR 0022                                  __end_of_floorf 486A  
                        ?_OSCILLATOR_Initialize 0001                                       i2fputs@fp 000E  
                                    floorf@F524 019D                                  __end_of_memset 522E  
                              i2___wmul@product 0005                                  __end_of_printf 6AE0  
                                __end_of_strcpy 6504                                  __end_of_strlen 6A0A  
                             __size_ofi2___flge 00D0                             start_initialization 629C  
                             __size_ofi2___fleq 008A                              i2___awdiv@quotient 0007  
                             __size_ofi2___wmul 0026                 __size_of_PIN_MANAGER_Initialize 002A  
                             __size_ofi2_efgtoa 0994                                     __end_of_pad 5D16  
                             __size_ofi2_floorf 01B6                                      ?i2___fladd 0041  
 EUSART1_SetRxInterruptHandler@interruptHandler 0100   EUSART1_SetTxInterruptHandler@interruptHandler 0100  
                                    ?i2___fldiv 0028                                      ?i2___awdiv 0001  
                                    ?i2___flneg 0001                                      ?i2___awmod 0001  
                                    ?i2___flmul 000F                                      ?i2___flsub 0051  
                                    ?i2___fltol 0001                                    i2vfpfcnvrt@c 00B6  
                                  i2vfpfcnvrt@f 00AF                                     putch@txData 0101  
                             __size_ofi2_printf 0028                           __end_of_EUSART1_Write 6842  
                             __size_ofi2_strcpy 0054                               __size_ofi2_strlen 002A  
                                     i2strcpy@d 0009                                       i2strlen@a 0003  
                                     i2strcpy@s 0007                                       i2strlen@s 0001  
                       __end_ofi2_EUSART1_Write 68B2                           i2i2c_WriteSerial@addr 0001  
                         __end_of___fpclassifyf 56FC                           i2i2c_WriteSerial@data 0003  
                                      ??i2_atoi 000A                               __size_of_i2c_init 0036  
                                      ??i2_stoa 0010                         __end_ofi2___fpclassifyf 57C8  
                                    ?i2_isdigit 0001                               i2_i2c_WriteSerial 6112  
                                    ?i2_isspace 0001                                      ?i2_isupper 0001  
                           __end_of_eeprom_Addr 1002                                     vfprintf@fmt 018B  
                                  i2vfprintf@ap 00BB                                    i2vfprintf@fp 00B7  
                                _TMR4_StopTimer 6D48                                        ??___flge 0121  
                                      ??___fleq 0108                              ?i2_i2c_WriteSerial 0001  
                         _adafruit_humi_command 1036                                        ??___wmul 0104  
                                    ?i2_tolower 0007                           _EUSART1_RxDataHandler 6C06  
                                      ??_efgtoa 0134                                      ?i2_strncmp 0001  
                ?_EUSART1_SetRxInterruptHandler 0100                                     __pdataBANK0 00FB  
                                   __pdataBANK1 01D9                                        ??_floorf 011D  
                                      ??_memset 0106                   ?_TMR2_DefaultInterruptHandler 0001  
                                   _dataLogRead 3CBE                                      memset@dest 0100  
                                      ??_printf 0195                                        ??_strcpy 0104  
                                      ??_strlen 0102                             ??i2_i2c_WriteSerial 0007  
                                _eusart1RxCount 01C5                                       ___fladd@a 0104  
                                     ___fladd@b 0100                            __size_ofi2_vfpfcnvrt 043A  
                           __end_of_displayInit 1030                                       ___fldiv@a 0104  
                                     ___fldiv@b 0100                          __size_of_TMR2_CallBack 0020  
                         TMR4_ISR@CountCallBack 01B1                         __size_of_i2c_ReadSerial 00A6  
                                     ___flmul@a 0104                                       ___flmul@b 0100  
                                     ___flsub@a 011D                                       ___flsub@b 0119  
             _EUSART1_RxDefaultInterruptHandler 01BF                               __size_of_adafruit 0380  
                 __size_of_EUSART1_Transmit_ISR 002C                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                        __size_of_TMR2_Initialize 0020  
                             __size_of___xxtofl 0140                          __size_of_TMR4_CallBack 0020  
               ??_EUSART1_SetTxInterruptHandler 0102                                        ?i2_fputc 0003  
                                      ?i2_fputs 000C                                    i2strcpy@dest 0001  
              ??_EUSART1_SetFramingErrorHandler 0102                 ?_EUSART1_SetFramingErrorHandler 0100  
                  __size_of_EUSART1_Receive_ISR 009C                        i2c_ReadSerial@targetAddr 010A  
                                      ?i2_putch 0001                                     _degree_sign 100F  
                     __end_ofi2_i2c_WriteSerial 6198                                       _atoi$2105 010F  
                                     _atoi$2106 0113                                       _atoi$2107 0111  
                         _TMR6_InterruptHandler 01AF                          __size_of_TMR6_CallBack 0020  
                        __end_of_TMR4_StopTimer 6D4E                                     _efgtoa$1602 0143  
                                   _efgtoa$1603 0145                                     _efgtoa$1604 0147  
                                   _efgtoa$1592 013D                                     _efgtoa$1593 013F  
                                   _efgtoa$1598 0141                                i2_i2c_ReadSerial 5D16  
                   i2i2c_WriteSerial@targetAddr 0009                          _PIN_MANAGER_Initialize 6A64  
                                     __pintcode 0008                                        ?___fladd 0100  
              __end_of_TMR4_SetInterruptHandler 6CFA                                        ?___fldiv 0100  
                                      ?___awdiv 0100                                       __ptext100 4E70  
                                     __ptext101 678E                                       __ptext110 6C06  
                                     __ptext102 69AC                                        ?___flneg 0100  
                                     __ptext111 0000                                       __ptext103 6B30  
                                     __ptext104 4FBA                                       __ptext105 6A38  
                                     __ptext106 5DB2                                       __ptext107 6D54  
                                     __ptext108 6D6E                                       __ptext109 6D5A  
                                      ?___awmod 0100                                        ?___flmul 0100  
                             ??_dataLogger_init 0199                                        ?___flsub 0119  
                                      ?___fltol 0100                               ??_i2c_WriteSerial 0106  
                  ??_INTERRUPT_InterruptManager 00EB                                __CFG_PRICLKEN$ON 000000  
                             __size_of_vfprintf 0058                                     __smallconst 1000  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 6D5A  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 6D54  
                                      ?_isdigit 0100                            _EUSART1_ErrorHandler 01B9  
                                __size_ofi2_pad 009A                                        ?_isspace 0100  
                                      ?_isupper 0100                         _EUSART1_SetErrorHandler 6D2C  
                      __size_of_TMR4_Initialize 0024                                     ??i2___fladd 0049  
                                   ??i2___fldiv 0030                                     ??i2___awdiv 0005  
                                   ??i2___flneg 0005                                     ??i2___awmod 0005  
                                      ?_sprintf 00BF                                        ?_tolower 0106  
                                   ??i2___flmul 0017                                     ??i2___flsub 0059  
                                   ??i2___fltol 0005                                       _logStatus 01D3  
                                __size_of_fputc 00A2                                  __size_of_fputs 003C  
                                      ?_strncmp 0100                                  __size_of_putch 000E  
                          _INTERRUPT_Initialize 6D64                                     _eeprom_Addr 1001  
                              ?i2_EUSART1_Write 0001                                  ___wmul@product 0104  
       EUSART1_SetErrorHandler@interruptHandler 0100                            __end_of_procent_sign 100F  
                                 _TMR2_CallBack 6C88                                        _PIE1bits 000F9D  
                                      _PIE5bits 000F7D                                     ??i2_isdigit 0003  
                              ?i2___fpclassifyf 0001                                 ?_TMR4_StopTimer 0001  
                              i2_vfpfcnvrt$1633 00AD                                i2_vfpfcnvrt$1629 00AB  
                                   ??i2_isspace 0003             __size_of_INTERRUPT_InterruptManager 00C4  
                                      _PIR1bits 000F9E                                        i2u611_40 3AFC  
                                   ??i2_isupper 0003                                        i2u606_40 3AA8  
                                      i2u711_40 35E0                                        i2u607_40 3AB8  
                                      i2u632_40 3C7E                                        i2u624_40 3C0E  
                                      i2u608_40 3ABA                                        i2u801_40 13F0  
                                      _PIR5bits 000F7E                                        i2u706_40 33DE  
                                      i2u626_40 3C22                                        i2u730_40 4960  
                                      i2u722_45 5798                                        i2u730_45 4956  
                                      i2u651_40 61DE                                        i2u715_40 363C  
                                      i2u707_40 3554                                        i2u723_40 57B6  
                                      i2u811_40 14B2                                        i2u707_45 354A  
                                      i2u716_40 365A                                        i2u724_40 57B8  
                                      i2u732_40 49C0                                        i2u636_40 69A4  
                                      i2u804_40 142C                                        i2u732_45 49B6  
                                      i2u725_40 48B0                                        i2u637_40 69A6  
                                      i2u741_40 6620                                        i2u725_45 48A6  
                                      i2u662_40 6084                                        i2u670_40 58C0  
                                      i2u718_40 573A                                        i2u726_40 48D0  
                                      i2u742_40 6622                                        i2u670_45 58B6  
                                      i2u718_45 5730                                        i2u735_40 69D4  
                                      i2u807_40 1464                                        i2u736_40 69D6  
                                      i2u728_45 48FA                                        i2u728_46 4900  
                                      i2u728_47 490E                                        i2u657_40 63C0  
                                      i2u738_40 67C0                                        i2u674_40 5916  
                                      i2u594_40 5BE8                                        i2u834_40 19D4  
                                      i2u851_40 4F80                                        i2u739_40 654E  
                                      i2u739_47 6544                                        i2u852_40 4F82  
                                      i2u692_40 43D4                                        i2u596_40 5C30  
                                      i2u836_40 1A34                                        i2u828_40 18EC  
                                      i2u844_40 540A                      ??_TMR6_SetInterruptHandler 0102  
                                      i2u669_40 5890                                        i2u837_40 1A36  
                                      i2u847_40 5482                                        i2u839_41 536A  
                                      i2u696_40 4430                                        i2u792_40 11CA  
                                      i2u849_40 4ECC                                        i2u697_40 4454  
                                      i2u793_40 11CC                                        i2u970_40 2B28  
                                      i2u859_40 5A6A                                        i2u971_40 2B2A  
                                      i2u963_40 2972                          ?_EUSART1_RxDataHandler 0001  
                                      i2u796_40 127E                                        i2u964_40 2974  
                                      i2u797_40 1280                                        i2u789_40 115E  
                                      i2u965_40 2980                                        _RCONbits 000FD0  
                             i2___fldiv@new_exp 0039                                __CFG_WDTPS$32768 000000  
                                      _SSP1CON1 000FC6                                        _SSP1CON2 000FC5  
                                   ??i2_tolower 0009                                        _TMR2_ISR 6B9E  
                                      _TMR4_ISR 6BE4                                   _TMR4_CallBack 6C68  
                                   ??i2_strncmp 0007                                        _TMR6_ISR 6BC2  
                                      _SSP1STAT 000FC7                                     _displayLine 00F9  
                                   _displayInit 102C                                       _vfpfcnvrt 240A  
                                     _verifyPos 1030                                        i2___flge 555E  
                                      i2___fleq 6002                               ___wmul@multiplier 0100  
                                      i2___wmul 6B30                                   _TMR6_CallBack 6C48  
                                      i2_efgtoa 10F4                                        i2_floorf 486A  
                ??_TMR2_DefaultInterruptHandler 0001               __size_of_TMR2_SetInterruptHandler 000A  
                             i2___awdiv@divisor 0003                       ?_TMR2_SetInterruptHandler 0100  
                             i2___awdiv@counter 0005                                    _isspace$2136 0106  
                                      i2_printf 6B08                                        i2pad@buf 0015  
                                 ?_dataLogWrite 0001                        __size_of_TMR6_Initialize 0024  
                         _adafruit_temp_command 1035                                        i2_strcpy 6504  
                                      i2_strlen 6A8E                                      vfpfcnvrt@c 0185  
                                    vfpfcnvrt@f 0181                                     _INTCON2bits 000FF1  
                                     copy_data0 62B0                                       copy_data1 62D0  
                                      i2fputc@c 0003                           ?_INTERRUPT_Initialize 0001  
                                      i2fputs@c 0010                                        i2fputs@i 0011  
                                      i2fputs@s 000C                              i2___awmod@dividend 0001  
                                      _i2c_init 68B2                               ??_TMR2_Initialize 0102  
                         EUSART1_Read@readValue 0100                                        i2stoa@cp 001C  
                                      i2stoa@fp 000C                                __size_ofi2_fputc 00A0  
                              __size_ofi2_fputs 0038                                  ?_TMR2_CallBack 0001  
                           i2c_WriteSerial@addr 0100                             i2c_WriteSerial@data 0102  
                    __size_ofi2_i2c_WriteSerial 0086                                __size_ofi2_putch 000A  
                      __size_of_TMR4_StartTimer 0006           __end_of_EUSART1_SetTxInterruptHandler 6D0E  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 6D04  
                                      __Hrparam 0000                                     _costum_char 00FD  
                                    vfprintf@ap 018D                                        __Lrparam 0000  
                                    vfprintf@fp 0189                              __CFG_BOREN$SBORDIS 000000  
                         __end_of_adafruit_Addr 1003                                  ?_TMR4_CallBack 0001  
                             __CFG_P2BMX$PORTB5 000000                           __end_of_adafruit_init 6750  
                       ??_OSCILLATOR_Initialize 0100                                __size_of___fladd 030E  
                              __size_of___fldiv 028A                                __size_of___awdiv 0086  
                              __size_of___flneg 0030                                __size_of___awmod 0072  
                              __size_of___flmul 0354                                __size_of___flsub 0048  
                              __size_of___fltol 00BC                           i2___wmul@multiplicand 0003  
                   __size_of_EUSART1_Initialize 0080                                      ?_vfpfcnvrt 0171  
                      _TMR4_SetInterruptHandler 6CF0                                        _adafruit 2C7E  
                                ?_TMR6_CallBack 0001                                      _ANSELCbits 000F3A  
                            ___fpclassifyf@F463 01A1                       ??_EUSART1_SetErrorHandler 0102  
           __end_of_EUSART1_DefaultErrorHandler 6D60                     _EUSART1_DefaultErrorHandler 6D5A  
                           dataLogRead@readTemp 00D8                             dataLogRead@readOutT 00D3  
                                _i2c_ReadSerial 5A90                                      sprintf@fmt 00C1  
                                      ___xxtofl 4FBA                                  ??_dataLogWrite 000C  
                              __size_of_isdigit 0032                                __size_of_isspace 0040  
                                      __ptext10 65AA                                        __ptext11 68E8  
                                      __ptext20 562E                                        __ptext12 64AE  
                                      __ptext21 57C8                                        __ptext13 5C78  
                                      __ptext30 608C                                        __ptext22 6644  
                                      __ptext14 69DC                                        __ptext31 4D22  
                                      __ptext23 36A4                                        __ptext15 67CC  
                                      __ptext40 6CA8                                        __ptext32 66D2  
                                      __ptext24 694C                                        __ptext16 5B36  
                                      __ptext41 6B56                                        __ptext33 691A  
                                      __ptext25 2FFE                                        __ptext17 6CD8  
                                      __ptext50 621C                                        __ptext42 6CE6  
                                      __ptext34 6AE0                                        __ptext26 548C  
                                      __ptext18 6808                                        __ptext51 6D04  
                                      __ptext43 6B7A                                        __ptext35 5A90  
                                      __ptext27 5F76                                        __ptext19 46B0  
                                      __ptext60 6D68                                        __ptext52 6D0E  
                                      __ptext44 6CF0                                        __ptext36 6712  
                                      __ptext28 3F74                                        __ptext61 4A20  
                                      __ptext53 6D18                                        __ptext45 6C28  
                                      __ptext37 5EE8                                        __ptext29 6314  
                                      __ptext70 2C7E                                        __ptext62 6BE4  
                                      __ptext54 6D22                                        __ptext46 6CFA  
                                      __ptext38 6D48                                        __ptext71 6112  
                                      __ptext63 6C68                                        __ptext55 6D2C  
                                      __ptext47 6A64                                        __ptext39 6D4E  
                                      __ptext80 697C                                        __ptext72 5D16  
                                      __ptext64 6D6A                                        __ptext56 6750  
                                      __ptext48 6CC6                                        __ptext81 6504  
                                      __ptext73 6558                                        __ptext65 3CBE  
                                      __ptext49 6D64                                        __ptext90 5884  
                                      __ptext82 5E4E                                        __ptext74 63F6  
                                      __ptext66 6B08                                        __ptext58 6BC2  
                                      __ptext91 668C                                        __ptext83 6A8E  
                                      __ptext75 2844                                        __ptext67 6B9E  
                                      __ptext59 6C48                                        __ptext92 39B2  
                                      __ptext84 6842                                        __ptext76 59E8  
                                      __ptext68 6C88                                        __ptext93 6A0A  
                                      __ptext85 5BD8                                        __ptext77 5360  
                                      __ptext69 6D6C                                        __ptext94 3352  
                                      __ptext86 6D36                                        __ptext78 10F4  
                                      __ptext95 555E                                        __ptext87 687A  
                                      __ptext79 65F8                                        __ptext96 6002  
                                      __ptext88 486A                                        __ptext97 41FE  
                                      __ptext89 56FC                                        __ptext98 6386  
                                      __ptext99 6198                                __size_of_isupper 0032  
                                  _SSP1CON2bits 000FC5                                __size_of_sprintf 0052  
                              __size_of_tolower 004E                                      strcpy@dest 0100  
                              __size_of_strncmp 00AA                                i2c_WriteSerial@i 0109  
                                      _readData 01CB                               ??_TMR4_Initialize 0102  
                                 __size_of_atoi 014E                                   __size_of_main 015E  
                                      _humiRead 01D7                                   __size_of_stoa 0132  
                                      _humiText 101A                                        _tempRead 00F7  
                                      efgtoa@fp 012D                                        _tempText 1021  
                                      efgtoa@ne 014F                                        efgtoa@pp 014B  
                                      efgtoa@ou 0139                                       stoa@F1153 01D9  
EUSART1_SetOverrunErrorHandler@interruptHandler 0100                                        int$flags 005E  
                                      _vfprintf 6456              __end_of_INTERRUPT_InterruptManager 00CC  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0191  
                                  _SSP1STATbits 000FC7                                    ?_dataLogRead 0001  
                   _EUSART1_FramingErrorHandler 01BD                             _EUSART1_Receive_ISR 5DB2  
                        i2i2c_ReadSerial@length 0005                          __end_of_i2c_ReadSerial 5B36  
                             i2___awmod@divisor 0003                               i2___awmod@counter 0005  
                                _vfpfcnvrt$1633 017F                                  _vfpfcnvrt$1629 017D  
                                    _INTCONbits 000FF2                        __end_ofi2_i2c_ReadSerial 5DB2  
                                      isdigit@c 0100                          ??_INTERRUPT_Initialize 0100  
                             i2___fpclassifyf@e 0009                               i2___fpclassifyf@u 000B  
                             i2___fpclassifyf@x 0001            __end_of_TMR6_DefaultInterruptHandler 6D6A  
         __size_of_TMR6_DefaultInterruptHandler 0002                    _TMR6_DefaultInterruptHandler 6D68  
                                      intlevel2 0000                                       sprintf@ap 00C9  
                               ??_TMR2_CallBack 005E                            ?_EUSART1_Receive_ISR 0001  
                               _dataLogger_init 4486                                        isspace@c 0100  
                       ?_PIN_MANAGER_Initialize 0001                               ??_TMR6_Initialize 0102  
                               _i2c_WriteSerial 5EE8          __end_of_EUSART1_SetOverrunErrorHandler 6D22  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 6D18  
                                     strcpy@src 0102                                      _RCSTA1bits 000FAB  
                                      isupper@c 0100                    __end_of_EUSART1_Transmit_ISR 6A64  
                                     strncmp@_l 0100                                       strncmp@_r 0102  
                               ??_TMR4_CallBack 005E                                     efgtoa@nmode 0157  
                                      printf@ap 0197  EUSART1_SetFramingErrorHandler@interruptHandler 0100  
                ?_EUSART1_SetTxInterruptHandler 0100                               ??_TMR4_StartTimer 0100  
                                 ??i2_vfpfcnvrt 00A5                                     ??_vfpfcnvrt 0177  
                                      stoa@nuls 0110                                 ??_TMR6_CallBack 000E  
                        __size_of_EUSART1_Write 003A                              _eusart1RxLastError 01C4  
                               ?_i2c_ReadSerial 0100                                        sprintf@f 00CB  
                                      tolower@c 0106                                        sprintf@s 00BF  
                                  _procent_sign 1004                          __size_of___fpclassifyf 00CE  
                         TMR2_ISR@CountCallBack 01B5                                        strncmp@l 0107  
                                      strncmp@n 0104                                        strncmp@r 0109  
                             __CFG_T3CMX$PORTC0 000000                                   ___fladd@signs 010C  
                                i2_isspace$2136 0007                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 6A8E                                ??_TMR4_StopTimer 0100  
                 ?_TMR6_DefaultInterruptHandler 0001                                    ___fladd@aexp 010D  
                                  ___fladd@bexp 010E                               __CFG_FOSC$INTIO67 000000  
                         _TMR2_InterruptHandler 01B7                         ??_EUSART1_RxDataHandler 0001  
