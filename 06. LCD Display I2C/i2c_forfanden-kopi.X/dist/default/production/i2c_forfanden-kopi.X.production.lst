

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 12 10:19:04 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           ; Version 2.05
    66                           ; Generated 20/12/2018 GMT
    67                           ; 
    68                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F26K22 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataBANK0
   101  002661                     __pidataBANK0:
   102                           	opt callstack 0
   103                           
   104                           ;initializer for _display_addr
   105  002661  3C                 	db	60
   106                           
   107                           ;initializer for _temperature_addr
   108  002662  27                 	db	39
   109                           
   110                           ;initializer for _precission
   111  002663  01                 	db	1
   112                           
   113                           ;initializer for _debug
   114  002664  01                 	db	1
   115                           
   116                           ;initializer for _oslash
   117  002665  80                 	db	128
   118  002666  60                 	db	96
   119  002667  40                 	db	64
   120  002668  00                 	db	0
   121  002669  00                 	db	0
   122  00266A  0E                 	db	14
   123  00266B  13                 	db	19
   124  00266C  15                 	db	21
   125  00266D  19                 	db	25
   126  00266E  0E                 	db	14
   127  00266F  00                 	db	0
   128                           
   129                           ;initializer for _AElig
   130  002670  80                 	db	128
   131  002671  58                 	db	88
   132  002672  40                 	db	64
   133  002673  0F                 	db	15
   134  002674  14                 	db	20
   135  002675  14                 	db	20
   136  002676  1F                 	db	31
   137  002677  14                 	db	20
   138  002678  14                 	db	20
   139  002679  17                 	db	23
   140  00267A  00                 	db	0
   141                           
   142                           ;initializer for _aelig
   143  00267B  80                 	db	128
   144  00267C  50                 	db	80
   145  00267D  40                 	db	64
   146  00267E  00                 	db	0
   147  00267F  00                 	db	0
   148  002680  0E                 	db	14
   149  002681  05                 	db	5
   150  002682  0F                 	db	15
   151  002683  14                 	db	20
   152  002684  0F                 	db	15
   153  002685  00                 	db	0
   154                           
   155                           ;initializer for _custom_char0
   156  002686  80                 	db	128
   157  002687  40                 	db	64
   158  002688  40                 	db	64
   159  002689  0C                 	db	12
   160  00268A  12                 	db	18
   161  00268B  12                 	db	18
   162  00268C  0C                 	db	12
   163  00268D  00                 	db	0
   164  00268E  00                 	db	0
   165  00268F  00                 	db	0
   166  002690  00                 	db	0
   167                           
   168                           ;initializer for _display_init
   169  002691  00                 	db	0
   170  002692  38                 	db	56
   171  002693  0C                 	db	12
   172  002694  06                 	db	6
   173                           
   174                           ;initializer for _moist_pos
   175  002695  00                 	db	0
   176  002696  C7                 	db	199
   177                           
   178                           ;initializer for _temp_pos
   179  002697  00                 	db	0
   180  002698  84                 	db	132
   181                           
   182                           ;initializer for _degree_pos
   183  002699  00                 	db	0
   184  00269A  8A                 	db	138
   185                           
   186                           ;initializer for _shift_line
   187  00269B  00                 	db	0
   188  00269C  C0                 	db	192
   189                           
   190                           ;initializer for _first_line
   191  00269D  00                 	db	0
   192  00269E  80                 	db	128
   193                           
   194                           ;initializer for _minus
   195  00269F  40                 	db	64
   196  0026A0  2D                 	db	45
   197                           
   198                           ;initializer for _degree_sign
   199  0026A1  40                 	db	64
   200  0026A2  DF                 	db	223
   201                           
   202                           	psect	idataBANK1
   203  00261C                     __pidataBANK1:
   204                           	opt callstack 0
   205                           
   206                           ;initializer for _moist_string
   207  00261C  40                 	db	64
   208  00261D  4D                 	db	77
   209  00261E  6F                 	db	111
   210  00261F  69                 	db	105
   211  002620  73                 	db	115
   212  002621  74                 	db	116
   213  002622  3A                 	db	58
   214  002623  78                 	db	120
   215  002624  78                 	db	120
   216  002625  78                 	db	120
   217  002626  25                 	db	37
   218  002627  20                 	db	32
   219  002628  20                 	db	32
   220  002629  20                 	db	32
   221  00262A  20                 	db	32
   222  00262B  20                 	db	32
   223  00262C  20                 	db	32
   224  00262D  00                 	db	0
   225                           
   226                           ;initializer for _temp_string
   227  00262E  40                 	db	64
   228  00262F  54                 	db	84
   229  002630  6D                 	db	109
   230  002631  70                 	db	112
   231  002632  3A                 	db	58
   232  002633  78                 	db	120
   233  002634  78                 	db	120
   234  002635  2C                 	db	44
   235  002636  78                 	db	120
   236  002637  6F                 	db	111
   237  002638  20                 	db	32
   238  002639  20                 	db	32
   239  00263A  20                 	db	32
   240  00263B  20                 	db	32
   241  00263C  20                 	db	32
   242  00263D  20                 	db	32
   243  00263E  20                 	db	32
   244  00263F  00                 	db	0
   245                           
   246                           ;initializer for _Aring
   247  002640  80                 	db	128
   248  002641  78                 	db	120
   249  002642  40                 	db	64
   250  002643  0E                 	db	14
   251  002644  0E                 	db	14
   252  002645  11                 	db	17
   253  002646  11                 	db	17
   254  002647  1F                 	db	31
   255  002648  11                 	db	17
   256  002649  11                 	db	17
   257  00264A  00                 	db	0
   258                           
   259                           ;initializer for _aring
   260  00264B  80                 	db	128
   261  00264C  70                 	db	112
   262  00264D  40                 	db	64
   263  00264E  0E                 	db	14
   264  00264F  0A                 	db	10
   265  002650  0E                 	db	14
   266  002651  01                 	db	1
   267  002652  0F                 	db	15
   268  002653  11                 	db	17
   269  002654  0F                 	db	15
   270  002655  00                 	db	0
   271                           
   272                           ;initializer for _O_slash
   273  002656  80                 	db	128
   274  002657  68                 	db	104
   275  002658  40                 	db	64
   276  002659  0E                 	db	14
   277  00265A  13                 	db	19
   278  00265B  15                 	db	21
   279  00265C  15                 	db	21
   280  00265D  15                 	db	21
   281  00265E  19                 	db	25
   282  00265F  0E                 	db	14
   283  002660  00                 	db	0
   284  0000                     _ANSELCbits	set	3898
   285  0000                     _ANSELA	set	3896
   286  0000                     _ANSELB	set	3897
   287  0000                     _ANSELC	set	3898
   288  0000                     _SSP2CON2bits	set	3947
   289  0000                     _SSP1BUF	set	4041
   290  0000                     _SSP1CON2bits	set	4037
   291  0000                     _SSP1STAT	set	4039
   292  0000                     _SSP1CON2	set	4037
   293  0000                     _SSP1CON1	set	4038
   294  0000                     _SSP1ADD	set	4040
   295  0000                     _TRISCbits	set	3988
   296  0000                     _LATBbits	set	3978
   297  0000                     _PIR1bits	set	3998
   298  0000                     _RCONbits	set	4048
   299  0000                     _RCREG1	set	4014
   300  0000                     _RCSTA1bits	set	4011
   301  0000                     _TXREG1	set	4013
   302  0000                     _TXSTA1bits	set	4012
   303  0000                     _SPBRGH1	set	4016
   304  0000                     _SPBRG1	set	4015
   305  0000                     _TXSTA1	set	4012
   306  0000                     _RCSTA1	set	4011
   307  0000                     _BAUDCON1	set	4024
   308  0000                     _PIE1bits	set	3997
   309  0000                     _INTCONbits	set	4082
   310  0000                     _INTCON2bits	set	4081
   311  0000                     _WPUB	set	3937
   312  0000                     _TRISC	set	3988
   313  0000                     _TRISB	set	3987
   314  0000                     _TRISA	set	3986
   315  0000                     _LATC	set	3979
   316  0000                     _LATB	set	3978
   317  0000                     _LATA	set	3977
   318  0000                     _OSCTUNE	set	3995
   319  0000                     _OSCCON2	set	4050
   320  0000                     _OSCCON	set	4051
   321  0000                     _PLLRDY	set	32407
   322                           
   323                           	psect	smallconst
   324  001000                     __psmallconst:
   325                           	opt callstack 0
   326  001000  00                 	db	0
   327  001001                     STR_5:
   328                           
   329                           ; BSR set to: 0
   330  001001  2F                 	db	47
   331  001002  6E                 	db	110	;'n'
   332  001003  2F                 	db	47
   333  001004  72                 	db	114	;'r'
   334  001005  2A                 	db	42
   335  001006  2A                 	db	42
   336  001007  2A                 	db	42
   337  001008  2A                 	db	42
   338  001009  2A                 	db	42
   339  00100A  2A                 	db	42
   340  00100B  2A                 	db	42
   341  00100C  2A                 	db	42
   342  00100D  2A                 	db	42
   343  00100E  2A                 	db	42
   344  00100F  2A                 	db	42
   345  001010  52                 	db	82	;'R'
   346  001011  45                 	db	69	;'E'
   347  001012  41                 	db	65	;'A'
   348  001013  44                 	db	68	;'D'
   349  001014  2A                 	db	42
   350  001015  2A                 	db	42
   351  001016  2A                 	db	42
   352  001017  2A                 	db	42
   353  001018  2A                 	db	42
   354  001019  2A                 	db	42
   355  00101A  2A                 	db	42
   356  00101B  2A                 	db	42
   357  00101C  2A                 	db	42
   358  00101D  2A                 	db	42
   359  00101E  2A                 	db	42
   360  00101F  2A                 	db	42
   361  001020  2A                 	db	42
   362  001021  2A                 	db	42
   363  001022  2A                 	db	42
   364  001023  2A                 	db	42
   365  001024  2A                 	db	42
   366  001025  0A                 	db	10
   367  001026  0D                 	db	13
   368  001027  00                 	db	0
   369  001028                     STR_3:
   370                           
   371                           ; BSR set to: 0
   372  001028  46                 	db	70	;'F'
   373  001029  65                 	db	101	;'e'
   374  00102A  6A                 	db	106	;'j'
   375  00102B  6C                 	db	108	;'l'
   376  00102C  20                 	db	32
   377  00102D  69                 	db	105	;'i'
   378  00102E  20                 	db	32
   379  00102F  6C                 	db	108	;'l'
   380  001030  61                 	db	97	;'a'
   381  001031  65                 	db	101	;'e'
   382  001032  73                 	db	115	;'s'
   383  001033  6E                 	db	110	;'n'
   384  001034  69                 	db	105	;'i'
   385  001035  6E                 	db	110	;'n'
   386  001036  67                 	db	103	;'g'
   387  001037  20                 	db	32
   388  001038  61                 	db	97	;'a'
   389  001039  66                 	db	102	;'f'
   390  00103A  20                 	db	32
   391  00103B  64                 	db	100	;'d'
   392  00103C  61                 	db	97	;'a'
   393  00103D  74                 	db	116	;'t'
   394  00103E  61                 	db	97	;'a'
   395  00103F  0D                 	db	13
   396  001040  0A                 	db	10
   397  001041  00                 	db	0
   398  001042                     STR_2:
   399                           
   400                           ; BSR set to: 0
   401  001042  53                 	db	83	;'S'
   402  001043  6B                 	db	107	;'k'
   403  001044  72                 	db	114	;'r'
   404  001045  69                 	db	105	;'i'
   405  001046  76                 	db	118	;'v'
   406  001047  65                 	db	101	;'e'
   407  001048  72                 	db	114	;'r'
   408  001049  20                 	db	32
   409  00104A  64                 	db	100	;'d'
   410  00104B  61                 	db	97	;'a'
   411  00104C  74                 	db	116	;'t'
   412  00104D  61                 	db	97	;'a'
   413  00104E  3A                 	db	58	;':'
   414  00104F  20                 	db	32
   415  001050  25                 	db	37
   416  001051  23                 	db	35
   417  001052  20                 	db	32
   418  001053  2D                 	db	45
   419  001054  20                 	db	32
   420  001055  25                 	db	37
   421  001056  63                 	db	99	;'c'
   422  001057  0A                 	db	10
   423  001058  0D                 	db	13
   424  001059  00                 	db	0
   425  00105A                     STR_1:
   426                           
   427                           ; BSR set to: 0
   428  00105A  53                 	db	83	;'S'
   429  00105B  6B                 	db	107	;'k'
   430  00105C  72                 	db	114	;'r'
   431  00105D  69                 	db	105	;'i'
   432  00105E  76                 	db	118	;'v'
   433  00105F  65                 	db	101	;'e'
   434  001060  72                 	db	114	;'r'
   435  001061  3A                 	db	58	;':'
   436  001062  20                 	db	32
   437  001063  61                 	db	97	;'a'
   438  001064  64                 	db	100	;'d'
   439  001065  72                 	db	114	;'r'
   440  001066  65                 	db	101	;'e'
   441  001067  73                 	db	115	;'s'
   442  001068  73                 	db	115	;'s'
   443  001069  65                 	db	101	;'e'
   444  00106A  3A                 	db	58	;':'
   445  00106B  20                 	db	32
   446  00106C  25                 	db	37
   447  00106D  64                 	db	100	;'d'
   448  00106E  0A                 	db	10
   449  00106F  0D                 	db	13
   450  001070  00                 	db	0
   451  001071                     STR_7:
   452                           
   453                           ; BSR set to: 0
   454  001071  48                 	db	72	;'H'
   455  001072  61                 	db	97	;'a'
   456  001073  72                 	db	114	;'r'
   457  001074  20                 	db	32
   458  001075  73                 	db	115	;'s'
   459  001076  65                 	db	101	;'e'
   460  001077  6E                 	db	110	;'n'
   461  001078  64                 	db	100	;'d'
   462  001079  74                 	db	116	;'t'
   463  00107A  20                 	db	32
   464  00107B  73                 	db	115	;'s'
   465  00107C  74                 	db	116	;'t'
   466  00107D  61                 	db	97	;'a'
   467  00107E  72                 	db	114	;'r'
   468  00107F  74                 	db	116	;'t'
   469  001080  0A                 	db	10
   470  001081  0D                 	db	13
   471  001082  00                 	db	0
   472  001083                     STR_4:
   473                           
   474                           ; BSR set to: 0
   475  001083  48                 	db	72	;'H'
   476  001084  61                 	db	97	;'a'
   477  001085  72                 	db	114	;'r'
   478  001086  20                 	db	32
   479  001087  73                 	db	115	;'s'
   480  001088  65                 	db	101	;'e'
   481  001089  6E                 	db	110	;'n'
   482  00108A  64                 	db	100	;'d'
   483  00108B  74                 	db	116	;'t'
   484  00108C  20                 	db	32
   485  00108D  73                 	db	115	;'s'
   486  00108E  74                 	db	116	;'t'
   487  00108F  6F                 	db	111	;'o'
   488  001090  70                 	db	112	;'p'
   489  001091  0A                 	db	10
   490  001092  0D                 	db	13
   491  001093  00                 	db	0
   492  001094                     STR_6:
   493                           
   494                           ; BSR set to: 0
   495  001094  42                 	db	66	;'B'
   496  001095  75                 	db	117	;'u'
   497  001096  73                 	db	115	;'s'
   498  001097  73                 	db	115	;'s'
   499  001098  65                 	db	101	;'e'
   500  001099  6E                 	db	110	;'n'
   501  00109A  65                 	db	101	;'e'
   502  00109B  72                 	db	114	;'r'
   503  00109C  20                 	db	32
   504  00109D  6B                 	db	107	;'k'
   505  00109E  6C                 	db	108	;'l'
   506  00109F  61                 	db	97	;'a'
   507  0010A0  72                 	db	114	;'r'
   508  0010A1  0A                 	db	10
   509  0010A2  0D                 	db	13
   510  0010A3  00                 	db	0
   511  0000                     
   512                           ; #config settings
   513  0010A4  00                 	db	0	; dummy byte at the end
   514  0000                     
   515                           	psect	cinit
   516  0023A4                     __pcinit:
   517                           	opt callstack 0
   518  0023A4                     start_initialization:
   519                           	opt callstack 0
   520  0023A4                     __initialization:
   521                           	opt callstack 0
   522                           
   523                           ; Initialize objects allocated to BANK1 (69 bytes)
   524                           ; load TBLPTR registers with __pidataBANK1
   525  0023A4  0E1C               	movlw	low __pidataBANK1
   526  0023A6  6EF6               	movwf	tblptrl,c
   527  0023A8  0E26               	movlw	high __pidataBANK1
   528  0023AA  6EF7               	movwf	tblptrh,c
   529  0023AC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   530  0023AE  6EF8               	movwf	tblptru,c
   531  0023B0  EE01  F0A0         	lfsr	0,__pdataBANK1
   532  0023B4  EE10 F045          	lfsr	1,69
   533  0023B8                     copy_data0:
   534  0023B8  0009               	tblrd		*+
   535  0023BA  CFF5 FFEE          	movff	tablat,postinc0
   536  0023BE  50E5               	movf	postdec1,w,c
   537  0023C0  50E1               	movf	fsr1l,w,c
   538  0023C2  E1FA               	bnz	copy_data0
   539                           
   540                           ; Initialize objects allocated to BANK0 (66 bytes)
   541                           ; load TBLPTR registers with __pidataBANK0
   542  0023C4  0E61               	movlw	low __pidataBANK0
   543  0023C6  6EF6               	movwf	tblptrl,c
   544  0023C8  0E26               	movlw	high __pidataBANK0
   545  0023CA  6EF7               	movwf	tblptrh,c
   546  0023CC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   547  0023CE  6EF8               	movwf	tblptru,c
   548  0023D0  EE00  F060         	lfsr	0,__pdataBANK0
   549  0023D4  EE10 F042          	lfsr	1,66
   550  0023D8                     copy_data1:
   551  0023D8  0009               	tblrd		*+
   552  0023DA  CFF5 FFEE          	movff	tablat,postinc0
   553  0023DE  50E5               	movf	postdec1,w,c
   554  0023E0  50E1               	movf	fsr1l,w,c
   555  0023E2  E1FA               	bnz	copy_data1
   556                           
   557                           ; Clear objects allocated to BANK2 (64 bytes)
   558  0023E4  EE02  F000         	lfsr	0,__pbssBANK2
   559  0023E8  0E40               	movlw	64
   560  0023EA                     clear_0:
   561  0023EA  6AEE               	clrf	postinc0,c
   562  0023EC  06E8               	decf	wreg,f,c
   563  0023EE  E1FD               	bnz	clear_0
   564                           
   565                           ; Clear objects allocated to BANK1 (160 bytes)
   566  0023F0  EE01  F000         	lfsr	0,__pbssBANK1
   567  0023F4  0EA0               	movlw	160
   568  0023F6                     clear_1:
   569  0023F6  6AEE               	clrf	postinc0,c
   570  0023F8  06E8               	decf	wreg,f,c
   571  0023FA  E1FD               	bnz	clear_1
   572                           
   573                           ; Clear objects allocated to BANK0 (44 bytes)
   574  0023FC  EE00  F0A2         	lfsr	0,__pbssBANK0
   575  002400  0E2C               	movlw	44
   576  002402                     clear_2:
   577  002402  6AEE               	clrf	postinc0,c
   578  002404  06E8               	decf	wreg,f,c
   579  002406  E1FD               	bnz	clear_2
   580                           
   581                           ; Clear objects allocated to COMRAM (5 bytes)
   582  002408  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   583  00240A  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   584  00240C  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   585  00240E  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   586  002410  6A56               	clrf	__pbssCOMRAM& (0+255),c
   587  002412                     end_of_initialization:
   588                           	opt callstack 0
   589  002412                     __end_of__initialization:
   590                           	opt callstack 0
   591  002412  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   592  002414  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   593  002416  0100               	movlb	0
   594  002418  EFA5  F00C         	goto	_main	;jump to C main() function
   595                           
   596                           	psect	bssCOMRAM
   597  000056                     __pbssCOMRAM:
   598                           	opt callstack 0
   599  000056                     _eusart1RxTail:
   600                           	opt callstack 0
   601  000056                     	ds	1
   602  000057                     _eusart1RxHead:
   603                           	opt callstack 0
   604  000057                     	ds	1
   605  000058                     _eusart1TxBufferRemaining:
   606                           	opt callstack 0
   607  000058                     	ds	1
   608  000059                     _eusart1TxTail:
   609                           	opt callstack 0
   610  000059                     	ds	1
   611  00005A                     _eusart1TxHead:
   612                           	opt callstack 0
   613  00005A                     	ds	1
   614                           
   615                           	psect	bssBANK0
   616  0000A2                     __pbssBANK0:
   617                           	opt callstack 0
   618  0000A2                     	ds	4
   619  0000A6                     _nout:
   620                           	opt callstack 0
   621  0000A6                     	ds	2
   622  0000A8                     _width:
   623                           	opt callstack 0
   624  0000A8                     	ds	2
   625  0000AA                     _prec:
   626                           	opt callstack 0
   627  0000AA                     	ds	2
   628  0000AC                     _flags:
   629                           	opt callstack 0
   630  0000AC                     	ds	2
   631  0000AE                     _EUSART1_ErrorHandler:
   632                           	opt callstack 0
   633  0000AE                     	ds	2
   634  0000B0                     _EUSART1_OverrunErrorHandler:
   635                           	opt callstack 0
   636  0000B0                     	ds	2
   637  0000B2                     _EUSART1_FramingErrorHandler:
   638                           	opt callstack 0
   639  0000B2                     	ds	2
   640  0000B4                     _EUSART1_RxDefaultInterruptHandler:
   641                           	opt callstack 0
   642  0000B4                     	ds	2
   643  0000B6                     _EUSART1_TxDefaultInterruptHandler:
   644                           	opt callstack 0
   645  0000B6                     	ds	2
   646  0000B8                     _error:
   647                           	opt callstack 0
   648  0000B8                     	ds	1
   649  0000B9                     _eusart1RxLastError:
   650                           	opt callstack 0
   651  0000B9                     	ds	1
   652  0000BA                     _eusart1RxCount:
   653                           	opt callstack 0
   654  0000BA                     	ds	1
   655  0000BB                     _tmp_string:
   656                           	opt callstack 0
   657  0000BB                     	ds	15
   658  0000CA                     _data_out:
   659                           	opt callstack 0
   660  0000CA                     	ds	4
   661                           
   662                           	psect	dataBANK0
   663  000060                     __pdataBANK0:
   664                           	opt callstack 0
   665  000060                     _display_addr:
   666                           	opt callstack 0
   667  000060                     	ds	1
   668  000061                     _temperature_addr:
   669                           	opt callstack 0
   670  000061                     	ds	1
   671  000062                     _precission:
   672                           	opt callstack 0
   673  000062                     	ds	1
   674  000063                     _debug:
   675                           	opt callstack 0
   676  000063                     	ds	1
   677  000064                     _oslash:
   678                           	opt callstack 0
   679  000064                     	ds	11
   680  00006F                     _AElig:
   681                           	opt callstack 0
   682  00006F                     	ds	11
   683  00007A                     _aelig:
   684                           	opt callstack 0
   685  00007A                     	ds	11
   686  000085                     _custom_char0:
   687                           	opt callstack 0
   688  000085                     	ds	11
   689  000090                     _display_init:
   690                           	opt callstack 0
   691  000090                     	ds	4
   692  000094                     _moist_pos:
   693                           	opt callstack 0
   694  000094                     	ds	2
   695  000096                     _temp_pos:
   696                           	opt callstack 0
   697  000096                     	ds	2
   698  000098                     _degree_pos:
   699                           	opt callstack 0
   700  000098                     	ds	2
   701  00009A                     _shift_line:
   702                           	opt callstack 0
   703  00009A                     	ds	2
   704  00009C                     _first_line:
   705                           	opt callstack 0
   706  00009C                     	ds	2
   707  00009E                     _minus:
   708                           	opt callstack 0
   709  00009E                     	ds	2
   710  0000A0                     _degree_sign:
   711                           	opt callstack 0
   712  0000A0                     	ds	2
   713                           
   714                           	psect	bssBANK1
   715  000100                     __pbssBANK1:
   716                           	opt callstack 0
   717  000100                     _eusart1RxStatusBuffer:
   718                           	opt callstack 0
   719  000100                     	ds	64
   720  000140                     _eusart1TxBuffer:
   721                           	opt callstack 0
   722  000140                     	ds	64
   723  000180                     _dbuf:
   724                           	opt callstack 0
   725  000180                     	ds	32
   726                           
   727                           	psect	dataBANK1
   728  0001A0                     __pdataBANK1:
   729                           	opt callstack 0
   730  0001A0                     _moist_string:
   731                           	opt callstack 0
   732  0001A0                     	ds	18
   733  0001B2                     _temp_string:
   734                           	opt callstack 0
   735  0001B2                     	ds	18
   736  0001C4                     _Aring:
   737                           	opt callstack 0
   738  0001C4                     	ds	11
   739  0001CF                     _aring:
   740                           	opt callstack 0
   741  0001CF                     	ds	11
   742  0001DA                     _O_slash:
   743                           	opt callstack 0
   744  0001DA                     	ds	11
   745                           
   746                           	psect	bssBANK2
   747  000200                     __pbssBANK2:
   748                           	opt callstack 0
   749  000200                     _eusart1RxBuffer:
   750                           	opt callstack 0
   751  000200                     	ds	64
   752                           
   753                           	psect	cstackBANK1
   754  0001E5                     __pcstackBANK1:
   755                           	opt callstack 0
   756  0001E5                     getReading@decimal2:
   757                           	opt callstack 0
   758                           
   759                           ; 1 bytes @ 0x0
   760  0001E5                     	ds	1
   761  0001E6                     getReading@ones:
   762                           	opt callstack 0
   763                           
   764                           ; 1 bytes @ 0x1
   765  0001E6                     	ds	1
   766  0001E7                     getReading@tens:
   767                           	opt callstack 0
   768                           
   769                           ; 1 bytes @ 0x2
   770  0001E7                     	ds	1
   771  0001E8                     getReading@decimal1:
   772                           	opt callstack 0
   773                           
   774                           ; 1 bytes @ 0x3
   775  0001E8                     	ds	1
   776  0001E9                     getReading@tmp_moist:
   777                           	opt callstack 0
   778                           
   779                           ; 4 bytes @ 0x4
   780  0001E9                     	ds	4
   781  0001ED                     getReading@tmp_temp:
   782                           	opt callstack 0
   783                           
   784                           ; 4 bytes @ 0x8
   785  0001ED                     	ds	4
   786  0001F1                     getReading@length:
   787                           	opt callstack 0
   788                           
   789                           ; 1 bytes @ 0xC
   790  0001F1                     	ds	1
   791                           
   792                           	psect	cstackBANK0
   793  0000CE                     __pcstackBANK0:
   794                           	opt callstack 0
   795  0000CE                     vfpfcnvrt@ll:
   796                           	opt callstack 0
   797                           
   798                           ; 8 bytes @ 0x0
   799  0000CE                     	ds	8
   800  0000D6                     vfpfcnvrt@done:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x8
   804  0000D6                     	ds	2
   805  0000D8                     ?_vfprintf:
   806                           	opt callstack 0
   807  0000D8                     vfprintf@fp:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0xA
   811  0000D8                     	ds	2
   812  0000DA                     vfprintf@fmt:
   813                           	opt callstack 0
   814                           
   815                           ; 2 bytes @ 0xC
   816  0000DA                     	ds	2
   817  0000DC                     vfprintf@ap:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0xE
   821  0000DC                     	ds	2
   822  0000DE                     ?_printf:
   823                           	opt callstack 0
   824  0000DE                     printf@fmt:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x10
   828  0000DE                     	ds	6
   829  0000E4                     i2c_write_serial@data:
   830                           	opt callstack 0
   831  0000E4                     i2c_read_serial@data_out:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x16
   835  0000E4                     	ds	2
   836  0000E6                     i2c_write_serial@length:
   837                           	opt callstack 0
   838  0000E6                     i2c_read_serial@length:
   839                           	opt callstack 0
   840                           
   841                           ; 1 bytes @ 0x18
   842  0000E6                     	ds	1
   843  0000E7                     ??_i2c_read_serial:
   844  0000E7                     i2c_write_serial@addr:
   845                           	opt callstack 0
   846                           
   847                           ; 1 bytes @ 0x19
   848  0000E7                     	ds	1
   849  0000E8                     i2c_write_serial@targetAddr:
   850                           	opt callstack 0
   851                           
   852                           ; 1 bytes @ 0x1A
   853  0000E8                     	ds	1
   854  0000E9                     i2c_write_serial@i:
   855                           	opt callstack 0
   856                           
   857                           ; 1 bytes @ 0x1B
   858  0000E9                     	ds	1
   859  0000EA                     updateMoist@output:
   860                           	opt callstack 0
   861                           
   862                           ; 3 bytes @ 0x1C
   863  0000EA                     	ds	3
   864  0000ED                     i2c_read_serial@addr:
   865                           	opt callstack 0
   866  0000ED                     updateMoist@moist:
   867                           	opt callstack 0
   868                           
   869                           ; 1 bytes @ 0x1F
   870  0000ED                     	ds	1
   871  0000EE                     i2c_read_serial@targetAddr:
   872                           	opt callstack 0
   873                           
   874                           ; 1 bytes @ 0x20
   875  0000EE                     	ds	1
   876  0000EF                     i2c_read_serial@i:
   877                           	opt callstack 0
   878                           
   879                           ; 1 bytes @ 0x21
   880  0000EF                     	ds	1
   881  0000F0                     ??_getReading:
   882                           
   883                           ; 1 bytes @ 0x22
   884  0000F0                     	ds	4
   885  0000F4                     ??_main:
   886                           
   887                           ; 1 bytes @ 0x26
   888  0000F4                     	ds	2
   889                           
   890                           	psect	cstackCOMRAM
   891  000001                     __pcstackCOMRAM:
   892                           	opt callstack 0
   893  000001                     ??_INTERRUPT_InterruptManager:
   894  000001                     
   895                           ; 1 bytes @ 0x0
   896  000001                     	ds	4
   897  000005                     ?_strlen:
   898                           	opt callstack 0
   899  000005                     ?___awdiv:
   900                           	opt callstack 0
   901  000005                     ?___awmod:
   902                           	opt callstack 0
   903  000005                     ?___lmul:
   904                           	opt callstack 0
   905  000005                     ?___lldiv:
   906                           	opt callstack 0
   907  000005                     ?___aldiv:
   908                           	opt callstack 0
   909  000005                     ?___almod:
   910                           	opt callstack 0
   911  000005                     ?___aodiv:
   912                           	opt callstack 0
   913  000005                     ?___aomod:
   914                           	opt callstack 0
   915  000005                     EUSART1_Write@txData:
   916                           	opt callstack 0
   917  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   918                           	opt callstack 0
   919  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   920                           	opt callstack 0
   921  000005                     EUSART1_SetErrorHandler@interruptHandler:
   922                           	opt callstack 0
   923  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
   924                           	opt callstack 0
   925  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   926                           	opt callstack 0
   927  000005                     ___awdiv@dividend:
   928                           	opt callstack 0
   929  000005                     ___awmod@dividend:
   930                           	opt callstack 0
   931  000005                     strlen@s:
   932                           	opt callstack 0
   933  000005                     ___lmul@multiplier:
   934                           	opt callstack 0
   935  000005                     ___lldiv@dividend:
   936                           	opt callstack 0
   937  000005                     ___aldiv@dividend:
   938                           	opt callstack 0
   939  000005                     ___almod@dividend:
   940                           	opt callstack 0
   941  000005                     ___aodiv@dividend:
   942                           	opt callstack 0
   943  000005                     ___aomod@dividend:
   944                           	opt callstack 0
   945                           
   946                           ; 8 bytes @ 0x4
   947  000005                     	ds	1
   948  000006                     putch@txData:
   949                           	opt callstack 0
   950                           
   951                           ; 1 bytes @ 0x5
   952  000006                     	ds	1
   953  000007                     ___awdiv@divisor:
   954                           	opt callstack 0
   955  000007                     ___awmod@divisor:
   956                           	opt callstack 0
   957  000007                     fputc@c:
   958                           	opt callstack 0
   959  000007                     strlen@a:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x6
   963  000007                     	ds	2
   964  000009                     ___awdiv@counter:
   965                           	opt callstack 0
   966  000009                     ___awmod@counter:
   967                           	opt callstack 0
   968  000009                     fputc@fp:
   969                           	opt callstack 0
   970  000009                     ___lmul@multiplicand:
   971                           	opt callstack 0
   972  000009                     ___lldiv@divisor:
   973                           	opt callstack 0
   974  000009                     ___aldiv@divisor:
   975                           	opt callstack 0
   976  000009                     ___almod@divisor:
   977                           	opt callstack 0
   978                           
   979                           ; 4 bytes @ 0x8
   980  000009                     	ds	1
   981  00000A                     ___awdiv@sign:
   982                           	opt callstack 0
   983  00000A                     ___awmod@sign:
   984                           	opt callstack 0
   985                           
   986                           ; 1 bytes @ 0x9
   987  00000A                     	ds	1
   988  00000B                     ??_fputc:
   989  00000B                     ___awdiv@quotient:
   990                           	opt callstack 0
   991                           
   992                           ; 2 bytes @ 0xA
   993  00000B                     	ds	2
   994  00000D                     ___aldiv@counter:
   995                           	opt callstack 0
   996  00000D                     ___almod@counter:
   997                           	opt callstack 0
   998  00000D                     ___lmul@product:
   999                           	opt callstack 0
  1000  00000D                     ___lldiv@quotient:
  1001                           	opt callstack 0
  1002  00000D                     ___aodiv@divisor:
  1003                           	opt callstack 0
  1004  00000D                     ___aomod@divisor:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 8 bytes @ 0xC
  1008  00000D                     	ds	1
  1009  00000E                     ___aldiv@sign:
  1010                           	opt callstack 0
  1011  00000E                     ___almod@sign:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 1 bytes @ 0xD
  1015  00000E                     	ds	1
  1016  00000F                     ___aldiv@quotient:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 4 bytes @ 0xE
  1020  00000F                     	ds	1
  1021  000010                     fputs@s:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0xF
  1025  000010                     	ds	1
  1026  000011                     ___lldiv@counter:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x10
  1030  000011                     	ds	1
  1031  000012                     fputs@fp:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x11
  1035  000012                     	ds	2
  1036  000014                     fputs@c:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x13
  1040  000014                     	ds	1
  1041  000015                     ___aodiv@counter:
  1042                           	opt callstack 0
  1043  000015                     ___aomod@counter:
  1044                           	opt callstack 0
  1045  000015                     fputs@i:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x14
  1049  000015                     	ds	1
  1050  000016                     ___aodiv@sign:
  1051                           	opt callstack 0
  1052  000016                     ___aomod@sign:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x15
  1056  000016                     	ds	1
  1057  000017                     ?_abs:
  1058                           	opt callstack 0
  1059  000017                     ?_pad:
  1060                           	opt callstack 0
  1061  000017                     pad@fp:
  1062                           	opt callstack 0
  1063  000017                     abs@a:
  1064                           	opt callstack 0
  1065  000017                     ___aodiv@quotient:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 8 bytes @ 0x16
  1069  000017                     	ds	2
  1070  000019                     ??_abs:
  1071  000019                     pad@buf:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x18
  1075  000019                     	ds	2
  1076  00001B                     pad@p:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x1A
  1080  00001B                     	ds	2
  1081  00001D                     ??_pad:
  1082                           
  1083                           ; 1 bytes @ 0x1C
  1084  00001D                     	ds	1
  1085  00001E                     pad@i:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x1D
  1089  00001E                     	ds	2
  1090  000020                     pad@w:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x1F
  1094  000020                     	ds	2
  1095  000022                     ?_dtoa:
  1096                           	opt callstack 0
  1097  000022                     dtoa@fp:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x21
  1101  000022                     	ds	2
  1102  000024                     dtoa@d:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 8 bytes @ 0x23
  1106  000024                     	ds	8
  1107  00002C                     ??_dtoa:
  1108                           
  1109                           ; 1 bytes @ 0x2B
  1110  00002C                     	ds	8
  1111  000034                     _dtoa$1091:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x33
  1115  000034                     	ds	2
  1116  000036                     dtoa@p:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x35
  1120  000036                     	ds	2
  1121  000038                     dtoa@w:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x37
  1125  000038                     	ds	2
  1126  00003A                     dtoa@s:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x39
  1130  00003A                     	ds	2
  1131  00003C                     dtoa@n:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 8 bytes @ 0x3B
  1135  00003C                     	ds	8
  1136  000044                     dtoa@i:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x43
  1140  000044                     	ds	2
  1141  000046                     ?_vfpfcnvrt:
  1142                           	opt callstack 0
  1143  000046                     vfpfcnvrt@fp:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x45
  1147  000046                     	ds	2
  1148  000048                     vfpfcnvrt@fmt:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x47
  1152  000048                     	ds	2
  1153  00004A                     vfpfcnvrt@ap:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x49
  1157  00004A                     	ds	2
  1158  00004C                     ??_vfpfcnvrt:
  1159                           
  1160                           ; 1 bytes @ 0x4B
  1161  00004C                     	ds	2
  1162  00004E                     vfprintf@cfmt:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x4D
  1166  00004E                     	ds	2
  1167  000050                     
  1168                           ; 1 bytes @ 0x4F
  1169  000050                     	ds	2
  1170  000052                     printf@ap:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x51
  1174  000052                     	ds	2
  1175  000054                     ??_i2c_write_serial:
  1176                           
  1177                           ; 1 bytes @ 0x53
  1178  000054                     	ds	2
  1179  000056                     
  1180                           ; 1 bytes @ 0x55
  1181 ;;
  1182 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1183 ;;
  1184 ;; *************** function _main *****************
  1185 ;; Defined at:
  1186 ;;		line 54 in file "main.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;		None
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;Total ram usage:        2 bytes
  1205 ;; Hardware stack levels required when called:   16
  1206 ;; This function calls:
  1207 ;;		_EUSART1_Initialize
  1208 ;;		_SYSTEM_Initialize
  1209 ;;		_getReading
  1210 ;;		_i2c_init
  1211 ;;		_i2c_write_serial
  1212 ;; This function is called by:
  1213 ;;		Startup code after reset
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text0
  1218  00194A                     __ptext0:
  1219                           	opt callstack 0
  1220  00194A                     _main:
  1221                           	opt callstack 15
  1222                           
  1223                           ;main.c: 57:     SYSTEM_Initialize();
  1224                           
  1225                           ;incstack = 0
  1226  00194A  EC13  F014         	call	_SYSTEM_Initialize	;wreg free
  1227                           
  1228                           ;main.c: 58:     EUSART1_Initialize();
  1229  00194E  EC0E  F012         	call	_EUSART1_Initialize	;wreg free
  1230                           
  1231                           ;main.c: 59:     INTCONbits.GIE = 1;
  1232  001952  8EF2               	bsf	4082,7,c	;volatile
  1233                           
  1234                           ;main.c: 60:     INTCONbits.PEIE = 1;
  1235  001954  8CF2               	bsf	4082,6,c	;volatile
  1236  001956  9A8A               	bcf	3978,5,c	;volatile
  1237                           
  1238                           ;main.c: 64:     i2c_init();
  1239  001958  EC07  F014         	call	_i2c_init	;wreg free
  1240                           
  1241                           ;main.c: 65:     i2c_write_serial(display_addr, display_init, 4);
  1242  00195C  0E90               	movlw	low _display_init
  1243  00195E  0100               	movlb	0	; () banked
  1244  001960  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1245  001962  0E00               	movlw	high _display_init
  1246  001964  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1247  001966  0E04               	movlw	4
  1248  001968  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1249  00196A  0E3C               	movlw	60
  1250  00196C  EC47  F00F         	call	_i2c_write_serial
  1251                           
  1252                           ;main.c: 66:     i2c_write_serial(display_addr, first_line, 2);
  1253  001970  0E9C               	movlw	low _first_line
  1254  001972  0100               	movlb	0	; () banked
  1255  001974  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1256  001976  0E00               	movlw	high _first_line
  1257  001978  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1258  00197A  0E02               	movlw	2
  1259  00197C  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1260  00197E  0E3C               	movlw	60
  1261  001980  EC47  F00F         	call	_i2c_write_serial
  1262                           
  1263                           ;main.c: 67:     i2c_write_serial(display_addr, temp_string, 17);
  1264  001984  0EB2               	movlw	low _temp_string
  1265  001986  0100               	movlb	0	; () banked
  1266  001988  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1267  00198A  0E01               	movlw	high _temp_string
  1268  00198C  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1269  00198E  0E11               	movlw	17
  1270  001990  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1271  001992  0E3C               	movlw	60
  1272  001994  EC47  F00F         	call	_i2c_write_serial
  1273                           
  1274                           ;main.c: 69:     i2c_write_serial(display_addr, degree_pos, 2);
  1275  001998  0E98               	movlw	low _degree_pos
  1276  00199A  0100               	movlb	0	; () banked
  1277  00199C  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1278  00199E  0E00               	movlw	high _degree_pos
  1279  0019A0  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1280  0019A2  0E02               	movlw	2
  1281  0019A4  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1282  0019A6  0E3C               	movlw	60
  1283  0019A8  EC47  F00F         	call	_i2c_write_serial
  1284                           
  1285                           ;main.c: 70:     i2c_write_serial(display_addr, degree_sign, 2);
  1286  0019AC  0EA0               	movlw	low _degree_sign
  1287  0019AE  0100               	movlb	0	; () banked
  1288  0019B0  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1289  0019B2  0E00               	movlw	high _degree_sign
  1290  0019B4  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1291  0019B6  0E02               	movlw	2
  1292  0019B8  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1293  0019BA  0E3C               	movlw	60
  1294  0019BC  EC47  F00F         	call	_i2c_write_serial
  1295                           
  1296                           ;main.c: 72:     i2c_write_serial(display_addr, shift_line, 2);
  1297  0019C0  0E9A               	movlw	low _shift_line
  1298  0019C2  0100               	movlb	0	; () banked
  1299  0019C4  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1300  0019C6  0E00               	movlw	high _shift_line
  1301  0019C8  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1302  0019CA  0E02               	movlw	2
  1303  0019CC  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1304  0019CE  0E3C               	movlw	60
  1305  0019D0  EC47  F00F         	call	_i2c_write_serial
  1306                           
  1307                           ;main.c: 73:     i2c_write_serial(display_addr, moist_string, 17);
  1308  0019D4  0EA0               	movlw	low _moist_string
  1309  0019D6  0100               	movlb	0	; () banked
  1310  0019D8  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1311  0019DA  0E01               	movlw	high _moist_string
  1312  0019DC  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1313  0019DE  0E11               	movlw	17
  1314  0019E0  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1315  0019E2  0E3C               	movlw	60
  1316  0019E4  EC47  F00F         	call	_i2c_write_serial
  1317                           
  1318                           ;main.c: 75:     i2c_write_serial(display_addr, custom_char0, 11);
  1319  0019E8  0E85               	movlw	low _custom_char0
  1320  0019EA  0100               	movlb	0	; () banked
  1321  0019EC  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1322  0019EE  0E00               	movlw	high _custom_char0
  1323  0019F0  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1324  0019F2  0E0B               	movlw	11
  1325  0019F4  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1326  0019F6  0E3C               	movlw	60
  1327  0019F8  EC47  F00F         	call	_i2c_write_serial
  1328                           
  1329                           ;main.c: 76:     i2c_write_serial(display_addr, first_line, 2);
  1330  0019FC  0E9C               	movlw	low _first_line
  1331  0019FE  0100               	movlb	0	; () banked
  1332  001A00  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1333  001A02  0E00               	movlw	high _first_line
  1334  001A04  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1335  001A06  0E02               	movlw	2
  1336  001A08  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1337  001A0A  0E3C               	movlw	60
  1338  001A0C  EC47  F00F         	call	_i2c_write_serial
  1339                           
  1340                           ;main.c: 78:     i2c_write_serial(display_addr, custom_char0, 11);
  1341  001A10  0E85               	movlw	low _custom_char0
  1342  001A12  0100               	movlb	0	; () banked
  1343  001A14  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1344  001A16  0E00               	movlw	high _custom_char0
  1345  001A18  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1346  001A1A  0E0B               	movlw	11
  1347  001A1C  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1348  001A1E  0E3C               	movlw	60
  1349  001A20  EC47  F00F         	call	_i2c_write_serial
  1350                           
  1351                           ;main.c: 79:     i2c_write_serial(display_addr, first_line, 2);
  1352  001A24  0E9C               	movlw	low _first_line
  1353  001A26  0100               	movlb	0	; () banked
  1354  001A28  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1355  001A2A  0E00               	movlw	high _first_line
  1356  001A2C  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1357  001A2E  0E02               	movlw	2
  1358  001A30  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1359  001A32  0E3C               	movlw	60
  1360  001A34  EC47  F00F         	call	_i2c_write_serial
  1361                           
  1362                           ;main.c: 81:     i2c_write_serial(display_addr, aelig, 11);
  1363  001A38  0E7A               	movlw	low _aelig
  1364  001A3A  0100               	movlb	0	; () banked
  1365  001A3C  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1366  001A3E  0E00               	movlw	high _aelig
  1367  001A40  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1368  001A42  0E0B               	movlw	11
  1369  001A44  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1370  001A46  0E3C               	movlw	60
  1371  001A48  EC47  F00F         	call	_i2c_write_serial
  1372                           
  1373                           ;main.c: 82:     i2c_write_serial(display_addr, first_line, 2);
  1374  001A4C  0E9C               	movlw	low _first_line
  1375  001A4E  0100               	movlb	0	; () banked
  1376  001A50  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1377  001A52  0E00               	movlw	high _first_line
  1378  001A54  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1379  001A56  0E02               	movlw	2
  1380  001A58  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1381  001A5A  0E3C               	movlw	60
  1382  001A5C  EC47  F00F         	call	_i2c_write_serial
  1383                           
  1384                           ;main.c: 84:     i2c_write_serial(display_addr, AElig, 11);
  1385  001A60  0E6F               	movlw	low _AElig
  1386  001A62  0100               	movlb	0	; () banked
  1387  001A64  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1388  001A66  0E00               	movlw	high _AElig
  1389  001A68  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1390  001A6A  0E0B               	movlw	11
  1391  001A6C  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1392  001A6E  0E3C               	movlw	60
  1393  001A70  EC47  F00F         	call	_i2c_write_serial
  1394                           
  1395                           ;main.c: 85:     i2c_write_serial(display_addr, first_line, 2);
  1396  001A74  0E9C               	movlw	low _first_line
  1397  001A76  0100               	movlb	0	; () banked
  1398  001A78  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1399  001A7A  0E00               	movlw	high _first_line
  1400  001A7C  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1401  001A7E  0E02               	movlw	2
  1402  001A80  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1403  001A82  0E3C               	movlw	60
  1404  001A84  EC47  F00F         	call	_i2c_write_serial
  1405                           
  1406                           ;main.c: 87:     i2c_write_serial(display_addr, oslash, 11);
  1407  001A88  0E64               	movlw	low _oslash
  1408  001A8A  0100               	movlb	0	; () banked
  1409  001A8C  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1410  001A8E  0E00               	movlw	high _oslash
  1411  001A90  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1412  001A92  0E0B               	movlw	11
  1413  001A94  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1414  001A96  0E3C               	movlw	60
  1415  001A98  EC47  F00F         	call	_i2c_write_serial
  1416                           
  1417                           ;main.c: 88:     i2c_write_serial(display_addr, first_line, 2);
  1418  001A9C  0E9C               	movlw	low _first_line
  1419  001A9E  0100               	movlb	0	; () banked
  1420  001AA0  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1421  001AA2  0E00               	movlw	high _first_line
  1422  001AA4  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1423  001AA6  0E02               	movlw	2
  1424  001AA8  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1425  001AAA  0E3C               	movlw	60
  1426  001AAC  EC47  F00F         	call	_i2c_write_serial
  1427                           
  1428                           ;main.c: 90:     i2c_write_serial(display_addr, O_slash, 11);
  1429  001AB0  0EDA               	movlw	low _O_slash
  1430  001AB2  0100               	movlb	0	; () banked
  1431  001AB4  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1432  001AB6  0E01               	movlw	high _O_slash
  1433  001AB8  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1434  001ABA  0E0B               	movlw	11
  1435  001ABC  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1436  001ABE  0E3C               	movlw	60
  1437  001AC0  EC47  F00F         	call	_i2c_write_serial
  1438                           
  1439                           ;main.c: 91:     i2c_write_serial(display_addr, first_line, 2);
  1440  001AC4  0E9C               	movlw	low _first_line
  1441  001AC6  0100               	movlb	0	; () banked
  1442  001AC8  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1443  001ACA  0E00               	movlw	high _first_line
  1444  001ACC  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1445  001ACE  0E02               	movlw	2
  1446  001AD0  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1447  001AD2  0E3C               	movlw	60
  1448  001AD4  EC47  F00F         	call	_i2c_write_serial
  1449                           
  1450                           ;main.c: 93:     i2c_write_serial(display_addr, aring, 11);
  1451  001AD8  0ECF               	movlw	low _aring
  1452  001ADA  0100               	movlb	0	; () banked
  1453  001ADC  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1454  001ADE  0E01               	movlw	high _aring
  1455  001AE0  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1456  001AE2  0E0B               	movlw	11
  1457  001AE4  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1458  001AE6  0E3C               	movlw	60
  1459  001AE8  EC47  F00F         	call	_i2c_write_serial
  1460                           
  1461                           ;main.c: 94:     i2c_write_serial(display_addr, first_line, 2);
  1462  001AEC  0E9C               	movlw	low _first_line
  1463  001AEE  0100               	movlb	0	; () banked
  1464  001AF0  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1465  001AF2  0E00               	movlw	high _first_line
  1466  001AF4  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1467  001AF6  0E02               	movlw	2
  1468  001AF8  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1469  001AFA  0E3C               	movlw	60
  1470  001AFC  EC47  F00F         	call	_i2c_write_serial
  1471                           
  1472                           ;main.c: 96:     i2c_write_serial(display_addr, Aring, 11);
  1473  001B00  0EC4               	movlw	low _Aring
  1474  001B02  0100               	movlb	0	; () banked
  1475  001B04  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1476  001B06  0E01               	movlw	high _Aring
  1477  001B08  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1478  001B0A  0E0B               	movlw	11
  1479  001B0C  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1480  001B0E  0E3C               	movlw	60
  1481  001B10  EC47  F00F         	call	_i2c_write_serial
  1482                           
  1483                           ;main.c: 97:     i2c_write_serial(display_addr, first_line, 2);
  1484  001B14  0E9C               	movlw	low _first_line
  1485  001B16  0100               	movlb	0	; () banked
  1486  001B18  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1487  001B1A  0E00               	movlw	high _first_line
  1488  001B1C  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1489  001B1E  0E02               	movlw	2
  1490  001B20  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1491  001B22  0E3C               	movlw	60
  1492  001B24  EC47  F00F         	call	_i2c_write_serial
  1493  001B28                     l3838:
  1494                           
  1495                           ;main.c: 100:     {;main.c: 101:        getReading();
  1496  001B28  EC53  F008         	call	_getReading	;wreg free
  1497                           
  1498                           ;main.c: 102:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  1499  001B2C  0EF4               	movlw	244
  1500  001B2E  0100               	movlb	0	; () banked
  1501  001B30  6FF5               	movwf	(??_main+1)& (0+255),b
  1502  001B32  0E82               	movlw	130
  1503  001B34  6FF4               	movwf	??_main& (0+255),b
  1504  001B36  0E05               	movlw	5
  1505  001B38                     u3517:
  1506  001B38  2EE8               	decfsz	wreg,f,c
  1507  001B3A  D7FE               	bra	u3517
  1508  001B3C  2FF4               	decfsz	??_main& (0+255),f,b
  1509  001B3E  D7FC               	bra	u3517
  1510  001B40  2FF5               	decfsz	(??_main+1)& (0+255),f,b
  1511  001B42  D7FA               	bra	u3517
  1512  001B44  D7F1               	goto	l3838
  1513  001B46                     __end_of_main:
  1514                           	opt callstack 0
  1515                           
  1516 ;; *************** function _i2c_init *****************
  1517 ;; Defined at:
  1518 ;;		line 112 in file "main.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    4
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text1
  1547  00280E                     __ptext1:
  1548                           	opt callstack 0
  1549  00280E                     _i2c_init:
  1550                           	opt callstack 26
  1551                           
  1552                           ;main.c: 113:     TRISCbits.RC3=1;
  1553                           
  1554                           ;incstack = 0
  1555  00280E  8694               	bsf	3988,3,c	;volatile
  1556                           
  1557                           ;main.c: 114:     TRISCbits.RC4=1;
  1558  002810  8894               	bsf	3988,4,c	;volatile
  1559                           
  1560                           ;main.c: 116:     ANSELCbits.ANSC3 = 0;
  1561  002812  010F               	movlb	15	; () banked
  1562  002814  973A               	bcf	58,3,b	;volatile
  1563                           
  1564                           ;main.c: 117:     ANSELCbits.ANSC4 = 0;
  1565  002816  993A               	bcf	58,4,b	;volatile
  1566                           
  1567                           ; BSR set to: 15
  1568                           ;main.c: 121:     SSP1ADD = 0x9F;
  1569  002818  0E9F               	movlw	159
  1570  00281A  6EC8               	movwf	4040,c	;volatile
  1571                           
  1572                           ;main.c: 122:     SSP1CON1 = 0x28;
  1573  00281C  0E28               	movlw	40
  1574  00281E  6EC6               	movwf	4038,c	;volatile
  1575                           
  1576                           ;main.c: 123:     SSP1CON2 = 0;
  1577  002820  0E00               	movlw	0
  1578  002822  6EC5               	movwf	4037,c	;volatile
  1579                           
  1580                           ; BSR set to: 15
  1581  002824  0012               	return		;funcret
  1582  002826                     __end_of_i2c_init:
  1583                           	opt callstack 0
  1584                           
  1585 ;; *************** function _getReading *****************
  1586 ;; Defined at:
  1587 ;;		line 259 in file "main.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  tens            1    2[BANK1 ] unsigned char 
  1592 ;;  ones            1    1[BANK1 ] unsigned char 
  1593 ;;  tmp_temp        4    8[BANK1 ] long 
  1594 ;;  tmp_moist       4    4[BANK1 ] unsigned long 
  1595 ;;  length          1   12[BANK1 ] unsigned char 
  1596 ;;  decimal1        1    3[BANK1 ] char 
  1597 ;;  decimal2        1    0[BANK1 ] char 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Totals:         0       4      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;Total ram usage:       17 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; Hardware stack levels required when called:   15
  1614 ;; This function calls:
  1615 ;;		___aldiv
  1616 ;;		___almod
  1617 ;;		___awmod
  1618 ;;		___lldiv
  1619 ;;		___lmul
  1620 ;;		_i2c_read_serial
  1621 ;;		_i2c_write_serial
  1622 ;;		_updateMoist
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text2
  1629  0010A6                     __ptext2:
  1630                           	opt callstack 0
  1631  0010A6                     _getReading:
  1632                           	opt callstack 15
  1633                           
  1634                           ;main.c: 261:     int32_t tmp_temp = 0;
  1635                           
  1636                           ; BSR set to: 15
  1637                           ;incstack = 0
  1638  0010A6  0E00               	movlw	0
  1639  0010A8  0101               	movlb	1	; () banked
  1640  0010AA  6FED               	movwf	getReading@tmp_temp& (0+255),b
  1641  0010AC  0E00               	movlw	0
  1642  0010AE  6FEE               	movwf	(getReading@tmp_temp+1)& (0+255),b
  1643  0010B0  0E00               	movlw	0
  1644  0010B2  6FEF               	movwf	(getReading@tmp_temp+2)& (0+255),b
  1645  0010B4  0E00               	movlw	0
  1646  0010B6  6FF0               	movwf	(getReading@tmp_temp+3)& (0+255),b
  1647                           
  1648                           ;main.c: 262:     uint8_t length = 0;
  1649  0010B8  0E00               	movlw	0
  1650  0010BA  6FF1               	movwf	getReading@length& (0+255),b
  1651                           
  1652                           ; BSR set to: 1
  1653                           ;main.c: 265:     i2c_write_serial(temperature_addr, 0, 0);
  1654  0010BC  0E00               	movlw	0
  1655  0010BE  0100               	movlb	0	; () banked
  1656  0010C0  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  1657  0010C2  0E00               	movlw	0
  1658  0010C4  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1659  0010C6  0E00               	movlw	0
  1660  0010C8  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  1661  0010CA  0E27               	movlw	39
  1662  0010CC  EC47  F00F         	call	_i2c_write_serial
  1663                           
  1664                           ;main.c: 266:     i2c_read_serial(temperature_addr, data_out, 4);
  1665  0010D0  0ECA               	movlw	low _data_out
  1666  0010D2  0100               	movlb	0	; () banked
  1667  0010D4  6FE4               	movwf	i2c_read_serial@data_out& (0+255),b
  1668  0010D6  0E00               	movlw	high _data_out
  1669  0010D8  6FE5               	movwf	(i2c_read_serial@data_out+1)& (0+255),b
  1670  0010DA  0E04               	movlw	4
  1671  0010DC  6FE6               	movwf	i2c_read_serial@length& (0+255),b
  1672  0010DE  0E27               	movlw	39
  1673  0010E0  ECD9  F00E         	call	_i2c_read_serial
  1674                           
  1675                           ;main.c: 268:     tmp_moist = ( data_out[0] & 0b00111111 ) << 8;
  1676  0010E4  C0CA  F0F0         	movff	_data_out,??_getReading
  1677  0010E8  0E3F               	movlw	63
  1678  0010EA  0100               	movlb	0	; () banked
  1679  0010EC  17F0               	andwf	??_getReading& (0+255),f,b
  1680  0010EE  51F0               	movf	??_getReading& (0+255),w,b
  1681  0010F0  6FF2               	movwf	(??_getReading+2)& (0+255),b
  1682  0010F2  6BF1               	clrf	(??_getReading+1)& (0+255),b
  1683  0010F4  C0F1  F1E9         	movff	??_getReading+1,getReading@tmp_moist
  1684  0010F8  C0F2  F1EA         	movff	??_getReading+2,getReading@tmp_moist+1
  1685  0010FC  0101               	movlb	1	; () banked
  1686  0010FE  0E00               	movlw	0
  1687  001100  BFEA               	btfsc	(getReading@tmp_moist+1)& (0+255),7,b
  1688  001102  0EFF               	movlw	-1
  1689  001104  6FEB               	movwf	(getReading@tmp_moist+2)& (0+255),b
  1690  001106  6FEC               	movwf	(getReading@tmp_moist+3)& (0+255),b
  1691                           
  1692                           ; BSR set to: 1
  1693                           ;main.c: 269:     tmp_moist += data_out[1];
  1694  001108  0100               	movlb	0	; () banked
  1695  00110A  51CB               	movf	(_data_out+1)& (0+255),w,b
  1696  00110C  0101               	movlb	1	; () banked
  1697  00110E  27E9               	addwf	getReading@tmp_moist& (0+255),f,b
  1698  001110  0E00               	movlw	0
  1699  001112  23EA               	addwfc	(getReading@tmp_moist+1)& (0+255),f,b
  1700  001114  23EB               	addwfc	(getReading@tmp_moist+2)& (0+255),f,b
  1701  001116  23EC               	addwfc	(getReading@tmp_moist+3)& (0+255),f,b
  1702                           
  1703                           ; BSR set to: 1
  1704                           ;main.c: 270:     tmp_moist *= 100;
  1705  001118  C1E9  F005         	movff	getReading@tmp_moist,___lmul@multiplier
  1706  00111C  C1EA  F006         	movff	getReading@tmp_moist+1,___lmul@multiplier+1
  1707  001120  C1EB  F007         	movff	getReading@tmp_moist+2,___lmul@multiplier+2
  1708  001124  C1EC  F008         	movff	getReading@tmp_moist+3,___lmul@multiplier+3
  1709  001128  0E64               	movlw	100
  1710  00112A  6E09               	movwf	___lmul@multiplicand,c
  1711  00112C  0E00               	movlw	0
  1712  00112E  6E0A               	movwf	___lmul@multiplicand+1,c
  1713  001130  0E00               	movlw	0
  1714  001132  6E0B               	movwf	___lmul@multiplicand+2,c
  1715  001134  0E00               	movlw	0
  1716  001136  6E0C               	movwf	___lmul@multiplicand+3,c
  1717  001138  ECE3  F012         	call	___lmul	;wreg free
  1718  00113C  C005  F1E9         	movff	?___lmul,getReading@tmp_moist
  1719  001140  C006  F1EA         	movff	?___lmul+1,getReading@tmp_moist+1
  1720  001144  C007  F1EB         	movff	?___lmul+2,getReading@tmp_moist+2
  1721  001148  C008  F1EC         	movff	?___lmul+3,getReading@tmp_moist+3
  1722                           
  1723                           ;main.c: 271:     tmp_moist /= 16382;
  1724  00114C  C1E9  F005         	movff	getReading@tmp_moist,___lldiv@dividend
  1725  001150  C1EA  F006         	movff	getReading@tmp_moist+1,___lldiv@dividend+1
  1726  001154  C1EB  F007         	movff	getReading@tmp_moist+2,___lldiv@dividend+2
  1727  001158  C1EC  F008         	movff	getReading@tmp_moist+3,___lldiv@dividend+3
  1728  00115C  0EFE               	movlw	254
  1729  00115E  6E09               	movwf	___lldiv@divisor,c
  1730  001160  0E3F               	movlw	63
  1731  001162  6E0A               	movwf	___lldiv@divisor+1,c
  1732  001164  0E00               	movlw	0
  1733  001166  6E0B               	movwf	___lldiv@divisor+2,c
  1734  001168  0E00               	movlw	0
  1735  00116A  6E0C               	movwf	___lldiv@divisor+3,c
  1736  00116C  EC91  F011         	call	___lldiv	;wreg free
  1737  001170  C005  F1E9         	movff	?___lldiv,getReading@tmp_moist
  1738  001174  C006  F1EA         	movff	?___lldiv+1,getReading@tmp_moist+1
  1739  001178  C007  F1EB         	movff	?___lldiv+2,getReading@tmp_moist+2
  1740  00117C  C008  F1EC         	movff	?___lldiv+3,getReading@tmp_moist+3
  1741                           
  1742                           ;main.c: 273:     updateMoist( (int8_t) tmp_moist);
  1743  001180  0101               	movlb	1	; () banked
  1744  001182  51E9               	movf	getReading@tmp_moist& (0+255),w,b
  1745  001184  EC06  F011         	call	_updateMoist
  1746                           
  1747                           ;main.c: 276:     tmp_temp = data_out[2] << 8;
  1748  001188  0100               	movlb	0	; () banked
  1749  00118A  51CC               	movf	(_data_out+2)& (0+255),w,b
  1750  00118C  6FF1               	movwf	(??_getReading+1)& (0+255),b
  1751  00118E  6BF0               	clrf	??_getReading& (0+255),b
  1752  001190  C0F0  F1ED         	movff	??_getReading,getReading@tmp_temp
  1753  001194  C0F1  F1EE         	movff	??_getReading+1,getReading@tmp_temp+1
  1754  001198  0101               	movlb	1	; () banked
  1755  00119A  0E00               	movlw	0
  1756  00119C  BFEE               	btfsc	(getReading@tmp_temp+1)& (0+255),7,b
  1757  00119E  0EFF               	movlw	-1
  1758  0011A0  6FEF               	movwf	(getReading@tmp_temp+2)& (0+255),b
  1759  0011A2  6FF0               	movwf	(getReading@tmp_temp+3)& (0+255),b
  1760                           
  1761                           ; BSR set to: 1
  1762                           ;main.c: 277:     tmp_temp += data_out[3];
  1763  0011A4  0100               	movlb	0	; () banked
  1764  0011A6  51CD               	movf	(_data_out+3)& (0+255),w,b
  1765  0011A8  0101               	movlb	1	; () banked
  1766  0011AA  27ED               	addwf	getReading@tmp_temp& (0+255),f,b
  1767  0011AC  0E00               	movlw	0
  1768  0011AE  23EE               	addwfc	(getReading@tmp_temp+1)& (0+255),f,b
  1769  0011B0  23EF               	addwfc	(getReading@tmp_temp+2)& (0+255),f,b
  1770  0011B2  23F0               	addwfc	(getReading@tmp_temp+3)& (0+255),f,b
  1771                           
  1772                           ; BSR set to: 1
  1773                           ;main.c: 278:     tmp_temp >>= 2;
  1774  0011B4  0E02               	movlw	2
  1775  0011B6  0100               	movlb	0	; () banked
  1776  0011B8  6FF0               	movwf	??_getReading& (0+255),b
  1777  0011BA                     u3455:
  1778  0011BA  0101               	movlb	1	; () banked
  1779  0011BC  35F0               	rlcf	(getReading@tmp_temp+3)& (0+255),w,b
  1780  0011BE  33F0               	rrcf	(getReading@tmp_temp+3)& (0+255),f,b
  1781  0011C0  33EF               	rrcf	(getReading@tmp_temp+2)& (0+255),f,b
  1782  0011C2  33EE               	rrcf	(getReading@tmp_temp+1)& (0+255),f,b
  1783  0011C4  33ED               	rrcf	getReading@tmp_temp& (0+255),f,b
  1784  0011C6  0100               	movlb	0	; () banked
  1785  0011C8  2FF0               	decfsz	??_getReading& (0+255),f,b
  1786  0011CA  D7F7               	goto	u3455
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;main.c: 280:     tmp_temp *= 16500;
  1790  0011CC  C1ED  F005         	movff	getReading@tmp_temp,___lmul@multiplier
  1791  0011D0  C1EE  F006         	movff	getReading@tmp_temp+1,___lmul@multiplier+1
  1792  0011D4  C1EF  F007         	movff	getReading@tmp_temp+2,___lmul@multiplier+2
  1793  0011D8  C1F0  F008         	movff	getReading@tmp_temp+3,___lmul@multiplier+3
  1794  0011DC  0E74               	movlw	116
  1795  0011DE  6E09               	movwf	___lmul@multiplicand,c
  1796  0011E0  0E40               	movlw	64
  1797  0011E2  6E0A               	movwf	___lmul@multiplicand+1,c
  1798  0011E4  0E00               	movlw	0
  1799  0011E6  6E0B               	movwf	___lmul@multiplicand+2,c
  1800  0011E8  0E00               	movlw	0
  1801  0011EA  6E0C               	movwf	___lmul@multiplicand+3,c
  1802  0011EC  ECE3  F012         	call	___lmul	;wreg free
  1803  0011F0  C005  F1ED         	movff	?___lmul,getReading@tmp_temp
  1804  0011F4  C006  F1EE         	movff	?___lmul+1,getReading@tmp_temp+1
  1805  0011F8  C007  F1EF         	movff	?___lmul+2,getReading@tmp_temp+2
  1806  0011FC  C008  F1F0         	movff	?___lmul+3,getReading@tmp_temp+3
  1807                           
  1808                           ;main.c: 281:     tmp_temp /= 16382;
  1809  001200  C1ED  F005         	movff	getReading@tmp_temp,___aldiv@dividend
  1810  001204  C1EE  F006         	movff	getReading@tmp_temp+1,___aldiv@dividend+1
  1811  001208  C1EF  F007         	movff	getReading@tmp_temp+2,___aldiv@dividend+2
  1812  00120C  C1F0  F008         	movff	getReading@tmp_temp+3,___aldiv@dividend+3
  1813  001210  0EFE               	movlw	254
  1814  001212  6E09               	movwf	___aldiv@divisor,c
  1815  001214  0E3F               	movlw	63
  1816  001216  6E0A               	movwf	___aldiv@divisor+1,c
  1817  001218  0E00               	movlw	0
  1818  00121A  6E0B               	movwf	___aldiv@divisor+2,c
  1819  00121C  0E00               	movlw	0
  1820  00121E  6E0C               	movwf	___aldiv@divisor+3,c
  1821  001220  ECB1  F00F         	call	___aldiv	;wreg free
  1822  001224  C005  F1ED         	movff	?___aldiv,getReading@tmp_temp
  1823  001228  C006  F1EE         	movff	?___aldiv+1,getReading@tmp_temp+1
  1824  00122C  C007  F1EF         	movff	?___aldiv+2,getReading@tmp_temp+2
  1825  001230  C008  F1F0         	movff	?___aldiv+3,getReading@tmp_temp+3
  1826                           
  1827                           ;main.c: 282:     tmp_temp -= 4000;
  1828  001234  0E60               	movlw	96
  1829  001236  0101               	movlb	1	; () banked
  1830  001238  27ED               	addwf	getReading@tmp_temp& (0+255),f,b
  1831  00123A  0EF0               	movlw	240
  1832  00123C  23EE               	addwfc	(getReading@tmp_temp+1)& (0+255),f,b
  1833  00123E  0EFF               	movlw	255
  1834  001240  23EF               	addwfc	(getReading@tmp_temp+2)& (0+255),f,b
  1835  001242  0EFF               	movlw	255
  1836  001244  23F0               	addwfc	(getReading@tmp_temp+3)& (0+255),f,b
  1837                           
  1838                           ; BSR set to: 1
  1839                           ;main.c: 285:     tmp_string[length++] = 0x40;
  1840  001246  0E40               	movlw	64
  1841  001248  0100               	movlb	0	; () banked
  1842  00124A  6FBB               	movwf	_tmp_string& (0+255),b
  1843                           
  1844                           ; BSR set to: 0
  1845  00124C  0101               	movlb	1	; () banked
  1846  00124E  2BF1               	incf	getReading@length& (0+255),f,b
  1847                           
  1848                           ; BSR set to: 1
  1849                           ;main.c: 288:     if(tmp_temp < 0) {
  1850  001250  AFF0               	btfss	(getReading@tmp_temp+3)& (0+255),7,b
  1851  001252  D023               	goto	l3720
  1852                           
  1853                           ; BSR set to: 1
  1854                           ;main.c: 289:         tmp_string[length++] = 0x2D;
  1855  001254  0EBB               	movlw	low _tmp_string
  1856  001256  25F1               	addwf	getReading@length& (0+255),w,b
  1857  001258  6ED9               	movwf	fsr2l,c
  1858  00125A  6ADA               	clrf	fsr2h,c
  1859  00125C  0E00               	movlw	high _tmp_string
  1860  00125E  22DA               	addwfc	fsr2h,f,c
  1861  001260  0E2D               	movlw	45
  1862  001262  6EDF               	movwf	indf2,c
  1863                           
  1864                           ; BSR set to: 1
  1865  001264  2BF1               	incf	getReading@length& (0+255),f,b
  1866                           
  1867                           ; BSR set to: 1
  1868                           ;main.c: 290:         tmp_temp *= -1;
  1869  001266  C1ED  F005         	movff	getReading@tmp_temp,___lmul@multiplier
  1870  00126A  C1EE  F006         	movff	getReading@tmp_temp+1,___lmul@multiplier+1
  1871  00126E  C1EF  F007         	movff	getReading@tmp_temp+2,___lmul@multiplier+2
  1872  001272  C1F0  F008         	movff	getReading@tmp_temp+3,___lmul@multiplier+3
  1873  001276  0EFF               	movlw	255
  1874  001278  6E09               	movwf	___lmul@multiplicand,c
  1875  00127A  0EFF               	movlw	255
  1876  00127C  6E0A               	movwf	___lmul@multiplicand+1,c
  1877  00127E  0EFF               	movlw	255
  1878  001280  6E0B               	movwf	___lmul@multiplicand+2,c
  1879  001282  0EFF               	movlw	255
  1880  001284  6E0C               	movwf	___lmul@multiplicand+3,c
  1881  001286  ECE3  F012         	call	___lmul	;wreg free
  1882  00128A  C005  F1ED         	movff	?___lmul,getReading@tmp_temp
  1883  00128E  C006  F1EE         	movff	?___lmul+1,getReading@tmp_temp+1
  1884  001292  C007  F1EF         	movff	?___lmul+2,getReading@tmp_temp+2
  1885  001296  C008  F1F0         	movff	?___lmul+3,getReading@tmp_temp+3
  1886  00129A                     l3720:
  1887                           
  1888                           ;main.c: 294:     int8_t decimal2 = tmp_temp % 10;
  1889  00129A  C1ED  F005         	movff	getReading@tmp_temp,___almod@dividend
  1890  00129E  C1EE  F006         	movff	getReading@tmp_temp+1,___almod@dividend+1
  1891  0012A2  C1EF  F007         	movff	getReading@tmp_temp+2,___almod@dividend+2
  1892  0012A6  C1F0  F008         	movff	getReading@tmp_temp+3,___almod@dividend+3
  1893  0012AA  0E0A               	movlw	10
  1894  0012AC  6E09               	movwf	___almod@divisor,c
  1895  0012AE  0E00               	movlw	0
  1896  0012B0  6E0A               	movwf	___almod@divisor+1,c
  1897  0012B2  0E00               	movlw	0
  1898  0012B4  6E0B               	movwf	___almod@divisor+2,c
  1899  0012B6  0E00               	movlw	0
  1900  0012B8  6E0C               	movwf	___almod@divisor+3,c
  1901  0012BA  EC17  F010         	call	___almod	;wreg free
  1902  0012BE  5005               	movf	?___almod,w,c
  1903  0012C0  0101               	movlb	1	; () banked
  1904  0012C2  6FE5               	movwf	getReading@decimal2& (0+255),b
  1905                           
  1906                           ; BSR set to: 1
  1907                           ;main.c: 295:     tmp_temp /= 10;
  1908  0012C4  C1ED  F005         	movff	getReading@tmp_temp,___aldiv@dividend
  1909  0012C8  C1EE  F006         	movff	getReading@tmp_temp+1,___aldiv@dividend+1
  1910  0012CC  C1EF  F007         	movff	getReading@tmp_temp+2,___aldiv@dividend+2
  1911  0012D0  C1F0  F008         	movff	getReading@tmp_temp+3,___aldiv@dividend+3
  1912  0012D4  0E0A               	movlw	10
  1913  0012D6  6E09               	movwf	___aldiv@divisor,c
  1914  0012D8  0E00               	movlw	0
  1915  0012DA  6E0A               	movwf	___aldiv@divisor+1,c
  1916  0012DC  0E00               	movlw	0
  1917  0012DE  6E0B               	movwf	___aldiv@divisor+2,c
  1918  0012E0  0E00               	movlw	0
  1919  0012E2  6E0C               	movwf	___aldiv@divisor+3,c
  1920  0012E4  ECB1  F00F         	call	___aldiv	;wreg free
  1921  0012E8  C005  F1ED         	movff	?___aldiv,getReading@tmp_temp
  1922  0012EC  C006  F1EE         	movff	?___aldiv+1,getReading@tmp_temp+1
  1923  0012F0  C007  F1EF         	movff	?___aldiv+2,getReading@tmp_temp+2
  1924  0012F4  C008  F1F0         	movff	?___aldiv+3,getReading@tmp_temp+3
  1925                           
  1926                           ;main.c: 298:     int8_t decimal1 = tmp_temp % 10;
  1927  0012F8  C1ED  F005         	movff	getReading@tmp_temp,___almod@dividend
  1928  0012FC  C1EE  F006         	movff	getReading@tmp_temp+1,___almod@dividend+1
  1929  001300  C1EF  F007         	movff	getReading@tmp_temp+2,___almod@dividend+2
  1930  001304  C1F0  F008         	movff	getReading@tmp_temp+3,___almod@dividend+3
  1931  001308  0E0A               	movlw	10
  1932  00130A  6E09               	movwf	___almod@divisor,c
  1933  00130C  0E00               	movlw	0
  1934  00130E  6E0A               	movwf	___almod@divisor+1,c
  1935  001310  0E00               	movlw	0
  1936  001312  6E0B               	movwf	___almod@divisor+2,c
  1937  001314  0E00               	movlw	0
  1938  001316  6E0C               	movwf	___almod@divisor+3,c
  1939  001318  EC17  F010         	call	___almod	;wreg free
  1940  00131C  5005               	movf	?___almod,w,c
  1941  00131E  0101               	movlb	1	; () banked
  1942  001320  6FE8               	movwf	getReading@decimal1& (0+255),b
  1943                           
  1944                           ; BSR set to: 1
  1945                           ;main.c: 300:     if(decimal2 >= 5 ) {
  1946  001322  51E5               	movf	getReading@decimal2& (0+255),w,b
  1947  001324  0A80               	xorlw	128
  1948  001326  0F7B               	addlw	-133
  1949  001328  A0D8               	btfss	status,0,c
  1950  00132A  D007               	goto	l3732
  1951                           
  1952                           ; BSR set to: 1
  1953                           ;main.c: 301:         decimal1++;
  1954  00132C  2BE8               	incf	getReading@decimal1& (0+255),f,b
  1955                           
  1956                           ; BSR set to: 1
  1957                           ;main.c: 302:         tmp_temp++;
  1958  00132E  0E01               	movlw	1
  1959  001330  27ED               	addwf	getReading@tmp_temp& (0+255),f,b
  1960  001332  0E00               	movlw	0
  1961  001334  23EE               	addwfc	(getReading@tmp_temp+1)& (0+255),f,b
  1962  001336  23EF               	addwfc	(getReading@tmp_temp+2)& (0+255),f,b
  1963  001338  23F0               	addwfc	(getReading@tmp_temp+3)& (0+255),f,b
  1964  00133A                     l3732:
  1965                           
  1966                           ; BSR set to: 1
  1967                           ;main.c: 305:     tmp_temp /= 10;
  1968  00133A  C1ED  F005         	movff	getReading@tmp_temp,___aldiv@dividend
  1969  00133E  C1EE  F006         	movff	getReading@tmp_temp+1,___aldiv@dividend+1
  1970  001342  C1EF  F007         	movff	getReading@tmp_temp+2,___aldiv@dividend+2
  1971  001346  C1F0  F008         	movff	getReading@tmp_temp+3,___aldiv@dividend+3
  1972  00134A  0E0A               	movlw	10
  1973  00134C  6E09               	movwf	___aldiv@divisor,c
  1974  00134E  0E00               	movlw	0
  1975  001350  6E0A               	movwf	___aldiv@divisor+1,c
  1976  001352  0E00               	movlw	0
  1977  001354  6E0B               	movwf	___aldiv@divisor+2,c
  1978  001356  0E00               	movlw	0
  1979  001358  6E0C               	movwf	___aldiv@divisor+3,c
  1980  00135A  ECB1  F00F         	call	___aldiv	;wreg free
  1981  00135E  C005  F1ED         	movff	?___aldiv,getReading@tmp_temp
  1982  001362  C006  F1EE         	movff	?___aldiv+1,getReading@tmp_temp+1
  1983  001366  C007  F1EF         	movff	?___aldiv+2,getReading@tmp_temp+2
  1984  00136A  C008  F1F0         	movff	?___aldiv+3,getReading@tmp_temp+3
  1985                           
  1986                           ;main.c: 308:     if(tmp_temp > 9) {
  1987  00136E  0101               	movlb	1	; () banked
  1988  001370  BFF0               	btfsc	(getReading@tmp_temp+3)& (0+255),7,b
  1989  001372  D046               	goto	l3748
  1990  001374  51F0               	movf	(getReading@tmp_temp+3)& (0+255),w,b
  1991  001376  11EF               	iorwf	(getReading@tmp_temp+2)& (0+255),w,b
  1992  001378  11EE               	iorwf	(getReading@tmp_temp+1)& (0+255),w,b
  1993  00137A  E104               	bnz	u3480
  1994  00137C  0E0A               	movlw	10
  1995  00137E  5DED               	subwf	getReading@tmp_temp& (0+255),w,b
  1996  001380  A0D8               	btfss	status,0,c
  1997  001382  D03E               	goto	l3748
  1998  001384                     u3480:
  1999                           
  2000                           ; BSR set to: 1
  2001                           ;main.c: 309:         uint8_t ones = (uint8_t) tmp_temp % 10;
  2002  001384  C1ED  F005         	movff	getReading@tmp_temp,___awmod@dividend
  2003  001388  6A06               	clrf	___awmod@dividend+1,c
  2004  00138A  0E00               	movlw	0
  2005  00138C  6E08               	movwf	___awmod@divisor+1,c
  2006  00138E  0E0A               	movlw	10
  2007  001390  6E07               	movwf	___awmod@divisor,c
  2008  001392  EC49  F012         	call	___awmod	;wreg free
  2009  001396  5005               	movf	?___awmod,w,c
  2010  001398  0101               	movlb	1	; () banked
  2011  00139A  6FE6               	movwf	getReading@ones& (0+255),b
  2012                           
  2013                           ;main.c: 310:         tmp_temp /= 10;
  2014  00139C  C1ED  F005         	movff	getReading@tmp_temp,___aldiv@dividend
  2015  0013A0  C1EE  F006         	movff	getReading@tmp_temp+1,___aldiv@dividend+1
  2016  0013A4  C1EF  F007         	movff	getReading@tmp_temp+2,___aldiv@dividend+2
  2017  0013A8  C1F0  F008         	movff	getReading@tmp_temp+3,___aldiv@dividend+3
  2018  0013AC  0E0A               	movlw	10
  2019  0013AE  6E09               	movwf	___aldiv@divisor,c
  2020  0013B0  0E00               	movlw	0
  2021  0013B2  6E0A               	movwf	___aldiv@divisor+1,c
  2022  0013B4  0E00               	movlw	0
  2023  0013B6  6E0B               	movwf	___aldiv@divisor+2,c
  2024  0013B8  0E00               	movlw	0
  2025  0013BA  6E0C               	movwf	___aldiv@divisor+3,c
  2026  0013BC  ECB1  F00F         	call	___aldiv	;wreg free
  2027  0013C0  C005  F1ED         	movff	?___aldiv,getReading@tmp_temp
  2028  0013C4  C006  F1EE         	movff	?___aldiv+1,getReading@tmp_temp+1
  2029  0013C8  C007  F1EF         	movff	?___aldiv+2,getReading@tmp_temp+2
  2030  0013CC  C008  F1F0         	movff	?___aldiv+3,getReading@tmp_temp+3
  2031                           
  2032                           ;main.c: 311:         uint8_t tens = (uint8_t) tmp_temp;
  2033  0013D0  C1ED  F1E7         	movff	getReading@tmp_temp,getReading@tens
  2034                           
  2035                           ;main.c: 313:         tmp_string[length++] = tens | 0b00110000;
  2036  0013D4  0EBB               	movlw	low _tmp_string
  2037  0013D6  0101               	movlb	1	; () banked
  2038  0013D8  25F1               	addwf	getReading@length& (0+255),w,b
  2039  0013DA  6ED9               	movwf	fsr2l,c
  2040  0013DC  6ADA               	clrf	fsr2h,c
  2041  0013DE  0E00               	movlw	high _tmp_string
  2042  0013E0  22DA               	addwfc	fsr2h,f,c
  2043  0013E2  51E7               	movf	getReading@tens& (0+255),w,b
  2044  0013E4  0930               	iorlw	48
  2045  0013E6  6EDF               	movwf	indf2,c
  2046                           
  2047                           ; BSR set to: 1
  2048  0013E8  2BF1               	incf	getReading@length& (0+255),f,b
  2049                           
  2050                           ; BSR set to: 1
  2051                           ;main.c: 314:         tmp_string[length++] = ones | 0b00110000;
  2052  0013EA  0EBB               	movlw	low _tmp_string
  2053  0013EC  25F1               	addwf	getReading@length& (0+255),w,b
  2054  0013EE  6ED9               	movwf	fsr2l,c
  2055  0013F0  6ADA               	clrf	fsr2h,c
  2056  0013F2  0E00               	movlw	high _tmp_string
  2057  0013F4  22DA               	addwfc	fsr2h,f,c
  2058  0013F6  51E6               	movf	getReading@ones& (0+255),w,b
  2059  0013F8  0930               	iorlw	48
  2060  0013FA  6EDF               	movwf	indf2,c
  2061  0013FC                     l3746:
  2062                           
  2063                           ; BSR set to: 1
  2064  0013FC  2BF1               	incf	getReading@length& (0+255),f,b
  2065                           
  2066                           ;main.c: 315:     } else {
  2067  0013FE  D009               	goto	l3752
  2068  001400                     l3748:
  2069                           
  2070                           ; BSR set to: 1
  2071                           ;main.c: 316:         tmp_string[length++] = tmp_temp;
  2072  001400  0EBB               	movlw	low _tmp_string
  2073  001402  25F1               	addwf	getReading@length& (0+255),w,b
  2074  001404  6ED9               	movwf	fsr2l,c
  2075  001406  6ADA               	clrf	fsr2h,c
  2076  001408  0E00               	movlw	high _tmp_string
  2077  00140A  22DA               	addwfc	fsr2h,f,c
  2078  00140C  C1ED  FFDF         	movff	getReading@tmp_temp,indf2
  2079  001410  D7F5               	goto	l3746
  2080  001412                     l3752:
  2081                           
  2082                           ; BSR set to: 1
  2083                           ;main.c: 320:     tmp_string[length++] = 0x2C;
  2084  001412  0EBB               	movlw	low _tmp_string
  2085  001414  25F1               	addwf	getReading@length& (0+255),w,b
  2086  001416  6ED9               	movwf	fsr2l,c
  2087  001418  6ADA               	clrf	fsr2h,c
  2088  00141A  0E00               	movlw	high _tmp_string
  2089  00141C  22DA               	addwfc	fsr2h,f,c
  2090  00141E  0E2C               	movlw	44
  2091  001420  6EDF               	movwf	indf2,c
  2092  001422  2BF1               	incf	getReading@length& (0+255),f,b
  2093                           
  2094                           ; BSR set to: 1
  2095                           ;main.c: 321:     tmp_string[length++] = decimal1 | 0b00110000;
  2096  001424  0EBB               	movlw	low _tmp_string
  2097  001426  25F1               	addwf	getReading@length& (0+255),w,b
  2098  001428  6ED9               	movwf	fsr2l,c
  2099  00142A  6ADA               	clrf	fsr2h,c
  2100  00142C  0E00               	movlw	high _tmp_string
  2101  00142E  22DA               	addwfc	fsr2h,f,c
  2102  001430  51E8               	movf	getReading@decimal1& (0+255),w,b
  2103  001432  0930               	iorlw	48
  2104  001434  6EDF               	movwf	indf2,c
  2105                           
  2106                           ; BSR set to: 1
  2107  001436  2BF1               	incf	getReading@length& (0+255),f,b
  2108                           
  2109                           ;main.c: 325:     tmp_string[length++] = 0x00;
  2110  001438  0EBB               	movlw	low _tmp_string
  2111  00143A  25F1               	addwf	getReading@length& (0+255),w,b
  2112  00143C  6ED9               	movwf	fsr2l,c
  2113  00143E  6ADA               	clrf	fsr2h,c
  2114  001440  0E00               	movlw	high _tmp_string
  2115  001442  22DA               	addwfc	fsr2h,f,c
  2116  001444  0E00               	movlw	0
  2117  001446  6EDF               	movwf	indf2,c
  2118                           
  2119                           ; BSR set to: 1
  2120  001448  2BF1               	incf	getReading@length& (0+255),f,b
  2121                           
  2122                           ; BSR set to: 1
  2123                           ;main.c: 326:     tmp_string[length++] = 0x01;
  2124  00144A  0EBB               	movlw	low _tmp_string
  2125  00144C  25F1               	addwf	getReading@length& (0+255),w,b
  2126  00144E  6ED9               	movwf	fsr2l,c
  2127  001450  6ADA               	clrf	fsr2h,c
  2128  001452  0E00               	movlw	high _tmp_string
  2129  001454  22DA               	addwfc	fsr2h,f,c
  2130  001456  0E01               	movlw	1
  2131  001458  6EDF               	movwf	indf2,c
  2132  00145A  2BF1               	incf	getReading@length& (0+255),f,b
  2133                           
  2134                           ; BSR set to: 1
  2135                           ;main.c: 327:     tmp_string[length++] = 0x02;
  2136  00145C  0EBB               	movlw	low _tmp_string
  2137  00145E  25F1               	addwf	getReading@length& (0+255),w,b
  2138  001460  6ED9               	movwf	fsr2l,c
  2139  001462  6ADA               	clrf	fsr2h,c
  2140  001464  0E00               	movlw	high _tmp_string
  2141  001466  22DA               	addwfc	fsr2h,f,c
  2142  001468  0E02               	movlw	2
  2143  00146A  6EDF               	movwf	indf2,c
  2144                           
  2145                           ; BSR set to: 1
  2146  00146C  2BF1               	incf	getReading@length& (0+255),f,b
  2147                           
  2148                           ;main.c: 328:     tmp_string[length++] = 0x03;
  2149  00146E  0EBB               	movlw	low _tmp_string
  2150  001470  25F1               	addwf	getReading@length& (0+255),w,b
  2151  001472  6ED9               	movwf	fsr2l,c
  2152  001474  6ADA               	clrf	fsr2h,c
  2153  001476  0E00               	movlw	high _tmp_string
  2154  001478  22DA               	addwfc	fsr2h,f,c
  2155  00147A  0E03               	movlw	3
  2156  00147C  6EDF               	movwf	indf2,c
  2157                           
  2158                           ; BSR set to: 1
  2159  00147E  2BF1               	incf	getReading@length& (0+255),f,b
  2160                           
  2161                           ; BSR set to: 1
  2162                           ;main.c: 329:     tmp_string[length++] = 0x04;
  2163  001480  0EBB               	movlw	low _tmp_string
  2164  001482  25F1               	addwf	getReading@length& (0+255),w,b
  2165  001484  6ED9               	movwf	fsr2l,c
  2166  001486  6ADA               	clrf	fsr2h,c
  2167  001488  0E00               	movlw	high _tmp_string
  2168  00148A  22DA               	addwfc	fsr2h,f,c
  2169  00148C  0E04               	movlw	4
  2170  00148E  6EDF               	movwf	indf2,c
  2171  001490  2BF1               	incf	getReading@length& (0+255),f,b
  2172                           
  2173                           ; BSR set to: 1
  2174                           ;main.c: 330:     tmp_string[length++] = 0x05;
  2175  001492  0EBB               	movlw	low _tmp_string
  2176  001494  25F1               	addwf	getReading@length& (0+255),w,b
  2177  001496  6ED9               	movwf	fsr2l,c
  2178  001498  6ADA               	clrf	fsr2h,c
  2179  00149A  0E00               	movlw	high _tmp_string
  2180  00149C  22DA               	addwfc	fsr2h,f,c
  2181  00149E  0E05               	movlw	5
  2182  0014A0  6EDF               	movwf	indf2,c
  2183                           
  2184                           ; BSR set to: 1
  2185  0014A2  2BF1               	incf	getReading@length& (0+255),f,b
  2186                           
  2187                           ;main.c: 331:     tmp_string[length++] = 0x06;
  2188  0014A4  0EBB               	movlw	low _tmp_string
  2189  0014A6  25F1               	addwf	getReading@length& (0+255),w,b
  2190  0014A8  6ED9               	movwf	fsr2l,c
  2191  0014AA  6ADA               	clrf	fsr2h,c
  2192  0014AC  0E00               	movlw	high _tmp_string
  2193  0014AE  22DA               	addwfc	fsr2h,f,c
  2194  0014B0  0E06               	movlw	6
  2195  0014B2  6EDF               	movwf	indf2,c
  2196                           
  2197                           ; BSR set to: 1
  2198  0014B4  2BF1               	incf	getReading@length& (0+255),f,b
  2199                           
  2200                           ; BSR set to: 1
  2201                           ;main.c: 332:     tmp_string[length++] = 0x07;
  2202  0014B6  0EBB               	movlw	low _tmp_string
  2203  0014B8  25F1               	addwf	getReading@length& (0+255),w,b
  2204  0014BA  6ED9               	movwf	fsr2l,c
  2205  0014BC  6ADA               	clrf	fsr2h,c
  2206  0014BE  0E00               	movlw	high _tmp_string
  2207  0014C0  22DA               	addwfc	fsr2h,f,c
  2208  0014C2  0E07               	movlw	7
  2209  0014C4  6EDF               	movwf	indf2,c
  2210  0014C6  2BF1               	incf	getReading@length& (0+255),f,b
  2211                           
  2212                           ; BSR set to: 1
  2213                           ;main.c: 336:     i2c_write_serial(display_addr, temp_pos, 2);
  2214  0014C8  0E96               	movlw	low _temp_pos
  2215  0014CA  0100               	movlb	0	; () banked
  2216  0014CC  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  2217  0014CE  0E00               	movlw	high _temp_pos
  2218  0014D0  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2219  0014D2  0E02               	movlw	2
  2220  0014D4  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  2221  0014D6  0E3C               	movlw	60
  2222  0014D8  EC47  F00F         	call	_i2c_write_serial
  2223                           
  2224                           ;main.c: 337:     i2c_write_serial(display_addr, tmp_string, length);
  2225  0014DC  0EBB               	movlw	low _tmp_string
  2226  0014DE  0100               	movlb	0	; () banked
  2227  0014E0  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  2228  0014E2  0E00               	movlw	high _tmp_string
  2229  0014E4  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2230  0014E6  C1F1  F0E6         	movff	getReading@length,i2c_write_serial@length
  2231  0014EA  0E3C               	movlw	60
  2232  0014EC  EC47  F00F         	call	_i2c_write_serial
  2233  0014F0  0012               	return		;funcret
  2234  0014F2                     __end_of_getReading:
  2235                           	opt callstack 0
  2236                           
  2237 ;; *************** function _updateMoist *****************
  2238 ;; Defined at:
  2239 ;;		line 233 in file "main.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  moist           1    wreg     unsigned char 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  moist           1   31[BANK0 ] unsigned char 
  2244 ;;  output          3   28[BANK0 ] unsigned char [3]
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;Total ram usage:        4 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:   14
  2261 ;; This function calls:
  2262 ;;		___awdiv
  2263 ;;		___awmod
  2264 ;;		_i2c_write_serial
  2265 ;; This function is called by:
  2266 ;;		_getReading
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text3
  2271  00220C                     __ptext3:
  2272                           	opt callstack 0
  2273  00220C                     _updateMoist:
  2274                           	opt callstack 15
  2275                           
  2276                           ;incstack = 0
  2277                           ;updateMoist@moist stored from wreg
  2278  00220C  0100               	movlb	0	; () banked
  2279  00220E  6FED               	movwf	updateMoist@moist& (0+255),b
  2280                           
  2281                           ;main.c: 234:     uint8_t output[3];;main.c: 235:     output[0] = 0x40;
  2282  002210  0E40               	movlw	64
  2283  002212  0100               	movlb	0	; () banked
  2284  002214  6FEA               	movwf	updateMoist@output& (0+255),b
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;main.c: 237:     if(moist >= 100) {
  2288  002216  0E63               	movlw	99
  2289  002218  65ED               	cpfsgt	updateMoist@moist& (0+255),b
  2290  00221A  D007               	goto	l3554
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;main.c: 238:         output[1] = 1;
  2294  00221C  0E01               	movlw	1
  2295  00221E  6FEB               	movwf	(updateMoist@output+1)& (0+255),b
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;main.c: 239:         output[1] |= 0b00110000;
  2299  002220  0E30               	movlw	48
  2300  002222  13EB               	iorwf	(updateMoist@output+1)& (0+255),f,b
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;main.c: 240:         moist -= 100;
  2304  002224  0E64               	movlw	100
  2305  002226  5FED               	subwf	updateMoist@moist& (0+255),f,b
  2306                           
  2307                           ;main.c: 241:     } else {
  2308  002228  D002               	goto	l3556
  2309  00222A                     l3554:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;main.c: 242:         output[1] = 0b10100000;
  2313  00222A  0EA0               	movlw	160
  2314  00222C  6FEB               	movwf	(updateMoist@output+1)& (0+255),b
  2315  00222E                     l3556:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;main.c: 245:     if(moist >= 10) {
  2319  00222E  0E09               	movlw	9
  2320  002230  65ED               	cpfsgt	updateMoist@moist& (0+255),b
  2321  002232  D01A               	goto	l3560
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;main.c: 246:         output[2] = (moist / 10) | 0b00110000;
  2325  002234  C0ED  F005         	movff	updateMoist@moist,___awdiv@dividend
  2326  002238  6A06               	clrf	___awdiv@dividend+1,c
  2327  00223A  0E00               	movlw	0
  2328  00223C  6E08               	movwf	___awdiv@divisor+1,c
  2329  00223E  0E0A               	movlw	10
  2330  002240  6E07               	movwf	___awdiv@divisor,c
  2331  002242  EC4F  F011         	call	___awdiv	;wreg free
  2332  002246  5005               	movf	?___awdiv,w,c
  2333  002248  0930               	iorlw	48
  2334  00224A  0100               	movlb	0	; () banked
  2335  00224C  6FEC               	movwf	(updateMoist@output+2)& (0+255),b
  2336                           
  2337                           ;main.c: 247:         output[3] = (moist % 10) | 0b00110000;
  2338  00224E  C0ED  F005         	movff	updateMoist@moist,___awmod@dividend
  2339  002252  6A06               	clrf	___awmod@dividend+1,c
  2340  002254  0E00               	movlw	0
  2341  002256  6E08               	movwf	___awmod@divisor+1,c
  2342  002258  0E0A               	movlw	10
  2343  00225A  6E07               	movwf	___awmod@divisor,c
  2344  00225C  EC49  F012         	call	___awmod	;wreg free
  2345  002260  5005               	movf	?___awmod,w,c
  2346  002262  0930               	iorlw	48
  2347  002264  0100               	movlb	0	; () banked
  2348  002266  D006               	goto	L1
  2349  002268                     l3560:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;main.c: 249:         output[1] = 0b10100000;
  2353  002268  0EA0               	movlw	160
  2354  00226A  6FEB               	movwf	(updateMoist@output+1)& (0+255),b
  2355                           
  2356                           ;main.c: 250:         output[2] = 0b10100000;
  2357  00226C  0EA0               	movlw	160
  2358  00226E  6FEC               	movwf	(updateMoist@output+2)& (0+255),b
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;main.c: 251:         output[3] = moist | 0b00110000;
  2362  002270  51ED               	movf	updateMoist@moist& (0+255),w,b
  2363  002272  0930               	iorlw	48
  2364  002274                     L1:
  2365  002274  6FED               	movwf	(updateMoist@output+3)& (0+255),b
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 254:     i2c_write_serial(display_addr, moist_pos, 2);
  2369  002276  0E94               	movlw	low _moist_pos
  2370  002278  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  2371  00227A  0E00               	movlw	high _moist_pos
  2372  00227C  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2373  00227E  0E02               	movlw	2
  2374  002280  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  2375  002282  0E3C               	movlw	60
  2376  002284  EC47  F00F         	call	_i2c_write_serial
  2377                           
  2378                           ;main.c: 255:     i2c_write_serial(display_addr, output, 4);
  2379  002288  0EEA               	movlw	low updateMoist@output
  2380  00228A  0100               	movlb	0	; () banked
  2381  00228C  6FE4               	movwf	i2c_write_serial@data& (0+255),b
  2382  00228E  0E00               	movlw	high updateMoist@output
  2383  002290  6FE5               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2384  002292  0E04               	movlw	4
  2385  002294  6FE6               	movwf	i2c_write_serial@length& (0+255),b
  2386  002296  0E3C               	movlw	60
  2387  002298  EC47  F00F         	call	_i2c_write_serial
  2388  00229C  0012               	return		;funcret
  2389  00229E                     __end_of_updateMoist:
  2390                           	opt callstack 0
  2391                           
  2392 ;; *************** function _i2c_write_serial *****************
  2393 ;; Defined at:
  2394 ;;		line 127 in file "main.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  addr            1    wreg     unsigned char 
  2397 ;;  data            2   22[BANK0 ] PTR unsigned char 
  2398 ;;		 -> tmp_string(15), NULL(0), moist_pos(2), updateMoist@output(3), 
  2399 ;;		 -> updateTemperature@output(4), minus(2), temp_pos(2), Aring(11), 
  2400 ;;		 -> aring(11), O_slash(11), oslash(11), AElig(11), 
  2401 ;;		 -> aelig(11), custom_char0(11), moist_string(18), shift_line(2), 
  2402 ;;		 -> degree_sign(2), degree_pos(2), temp_string(18), first_line(2), 
  2403 ;;		 -> display_init(4), 
  2404 ;;  length          1   24[BANK0 ] unsigned char 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  addr            1   25[BANK0 ] unsigned char 
  2407 ;;  i               1   27[BANK0 ] unsigned char 
  2408 ;;  targetAddr      1   26[BANK0 ] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2418 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;Total ram usage:        8 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:   13
  2425 ;; This function calls:
  2426 ;;		_printf
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;;		_updateMoist
  2430 ;;		_getReading
  2431 ;;		_updateTemperature
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text4
  2436  001E8E                     __ptext4:
  2437                           	opt callstack 0
  2438  001E8E                     _i2c_write_serial:
  2439                           	opt callstack 17
  2440                           
  2441                           ;incstack = 0
  2442                           ;i2c_write_serial@addr stored from wreg
  2443  001E8E  0100               	movlb	0	; () banked
  2444  001E90  6FE7               	movwf	i2c_write_serial@addr& (0+255),b
  2445                           
  2446                           ;main.c: 128:     uint8_t targetAddr = addr<<1;
  2447  001E92  0100               	movlb	0	; () banked
  2448  001E94  51E7               	movf	i2c_write_serial@addr& (0+255),w,b
  2449  001E96  25E7               	addwf	i2c_write_serial@addr& (0+255),w,b
  2450  001E98  6FE8               	movwf	i2c_write_serial@targetAddr& (0+255),b
  2451  001E9A                     l337:
  2452  001E9A  B4C7               	btfsc	4039,2,c	;volatile
  2453  001E9C  D7FE               	goto	l337
  2454  001E9E  CFC5 F054          	movff	4037,??_i2c_write_serial	;volatile
  2455  001EA2  0E1F               	movlw	31
  2456  001EA4  1654               	andwf	??_i2c_write_serial,f,c
  2457  001EA6  A4D8               	btfss	status,2,c
  2458  001EA8  D7F8               	goto	l337
  2459                           
  2460                           ;main.c: 135:     SSP1CON2bits.SEN = 1;
  2461  001EAA  80C5               	bsf	4037,0,c	;volatile
  2462  001EAC                     l340:
  2463  001EAC  B0C5               	btfsc	4037,0,c	;volatile
  2464  001EAE  D7FE               	goto	l340
  2465                           
  2466                           ;main.c: 141:     SSP1BUF = targetAddr;
  2467  001EB0  C0E8  FFC9         	movff	i2c_write_serial@targetAddr,4041	;volatile
  2468  001EB4                     l343:
  2469  001EB4  BC6B               	btfsc	3947,6,c	;volatile
  2470  001EB6  D7FE               	goto	l343
  2471                           
  2472                           ;main.c: 144:     printf("Skriver: adresse: %d\n\r", targetAddr);
  2473  001EB8  0E5A               	movlw	low STR_1
  2474  001EBA  0100               	movlb	0	; () banked
  2475  001EBC  6FDE               	movwf	printf@fmt& (0+255),b
  2476  001EBE  0E10               	movlw	high STR_1
  2477  001EC0  6FDF               	movwf	(printf@fmt+1)& (0+255),b
  2478  001EC2  C0E8  F0E0         	movff	i2c_write_serial@targetAddr,?_printf+2
  2479  001EC6  6BE1               	clrf	(?_printf+3)& (0+255),b
  2480  001EC8  ECE2  F013         	call	_printf	;wreg free
  2481                           
  2482                           ;main.c: 146:     if(SSP2CON2bits.ACKSTAT == 0) {
  2483  001ECC  BC6B               	btfsc	3947,6,c	;volatile
  2484  001ECE  D03E               	goto	u3020
  2485                           
  2486                           ;main.c: 147:         for (uint8_t i=0; i < length ; i++) {
  2487  001ED0  0E00               	movlw	0
  2488  001ED2  0100               	movlb	0	; () banked
  2489  001ED4  6FE9               	movwf	i2c_write_serial@i& (0+255),b
  2490  001ED6  D036               	goto	l3436
  2491  001ED8                     l348:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;main.c: 148:             if( SSP1CON2bits.ACKSTAT == 0 ) {
  2495  001ED8  BCC5               	btfsc	4037,6,c	;volatile
  2496  001EDA  D02C               	goto	l3432
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;main.c: 150:                 (debug)?printf("Skriver data: %# - %c\n\r", data[i], data[
      +                          i]):0;
  2500  001EDC  51E9               	movf	i2c_write_serial@i& (0+255),w,b
  2501  001EDE  25E4               	addwf	i2c_write_serial@data& (0+255),w,b
  2502  001EE0  6ED9               	movwf	fsr2l,c
  2503  001EE2  0E00               	movlw	0
  2504  001EE4  21E5               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2505  001EE6  6EDA               	movwf	fsr2h,c
  2506  001EE8  50DF               	movf	indf2,w,c
  2507  001EEA  6EC9               	movwf	4041,c	;volatile
  2508                           
  2509                           ; BSR set to: 0
  2510  001EEC  0E42               	movlw	low STR_2
  2511  001EEE  6FDE               	movwf	printf@fmt& (0+255),b
  2512  001EF0  0E10               	movlw	high STR_2
  2513  001EF2  6FDF               	movwf	(printf@fmt+1)& (0+255),b
  2514  001EF4  51E9               	movf	i2c_write_serial@i& (0+255),w,b
  2515  001EF6  25E4               	addwf	i2c_write_serial@data& (0+255),w,b
  2516  001EF8  6ED9               	movwf	fsr2l,c
  2517  001EFA  0E00               	movlw	0
  2518  001EFC  21E5               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2519  001EFE  6EDA               	movwf	fsr2h,c
  2520  001F00  50DF               	movf	indf2,w,c
  2521  001F02  6E54               	movwf	??_i2c_write_serial& (0+255),c
  2522  001F04  5054               	movf	??_i2c_write_serial,w,c
  2523  001F06  6FE0               	movwf	(?_printf+2)& (0+255),b
  2524  001F08  6BE1               	clrf	(?_printf+3)& (0+255),b
  2525  001F0A  51E9               	movf	i2c_write_serial@i& (0+255),w,b
  2526  001F0C  25E4               	addwf	i2c_write_serial@data& (0+255),w,b
  2527  001F0E  6ED9               	movwf	fsr2l,c
  2528  001F10  0E00               	movlw	0
  2529  001F12  21E5               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2530  001F14  6EDA               	movwf	fsr2h,c
  2531  001F16  50DF               	movf	indf2,w,c
  2532  001F18  6E55               	movwf	(??_i2c_write_serial+1)& (0+255),c
  2533  001F1A  5055               	movf	??_i2c_write_serial+1,w,c
  2534  001F1C  6FE2               	movwf	(?_printf+4)& (0+255),b
  2535  001F1E  6BE3               	clrf	(?_printf+5)& (0+255),b
  2536  001F20  ECE2  F013         	call	_printf	;wreg free
  2537                           
  2538                           ;main.c: 151:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  2539  001F24  0ED0               	movlw	208
  2540  001F26  6E54               	movwf	??_i2c_write_serial& (0+255),c
  2541  001F28  0ECA               	movlw	202
  2542  001F2A                     u3527:
  2543  001F2A  2EE8               	decfsz	wreg,f,c
  2544  001F2C  D7FE               	bra	u3527
  2545  001F2E  2E54               	decfsz	??_i2c_write_serial& (0+255),f,c
  2546  001F30  D7FC               	bra	u3527
  2547                           
  2548                           ;main.c: 152:             } else {
  2549  001F32  D006               	goto	l3434
  2550  001F34                     l3432:
  2551                           
  2552                           ; BSR set to: 0
  2553  001F34  0E28               	movlw	low STR_3
  2554  001F36  6FDE               	movwf	printf@fmt& (0+255),b
  2555  001F38  0E10               	movlw	high STR_3
  2556  001F3A  6FDF               	movwf	(printf@fmt+1)& (0+255),b
  2557  001F3C  ECE2  F013         	call	_printf	;wreg free
  2558  001F40                     l3434:
  2559                           
  2560                           ;main.c: 155:         }
  2561  001F40  0100               	movlb	0	; () banked
  2562  001F42  2BE9               	incf	i2c_write_serial@i& (0+255),f,b
  2563  001F44                     l3436:
  2564                           
  2565                           ; BSR set to: 0
  2566  001F44  51E6               	movf	i2c_write_serial@length& (0+255),w,b
  2567  001F46  5DE9               	subwf	i2c_write_serial@i& (0+255),w,b
  2568  001F48  A0D8               	btfss	status,0,c
  2569  001F4A  D7C6               	goto	l348
  2570  001F4C                     u3020:
  2571                           
  2572                           ;main.c: 159:     SSP1CON2bits.PEN = 1;
  2573                           
  2574                           ;main.c: 156:     }
  2575  001F4C  84C5               	bsf	4037,2,c	;volatile
  2576  001F4E                     l360:
  2577  001F4E  B4C5               	btfsc	4037,2,c	;volatile
  2578  001F50  D7FE               	goto	l360
  2579  001F52  0E83               	movlw	low STR_4
  2580  001F54  0100               	movlb	0	; () banked
  2581  001F56  6FDE               	movwf	printf@fmt& (0+255),b
  2582  001F58  0E10               	movlw	high STR_4
  2583  001F5A  6FDF               	movwf	(printf@fmt+1)& (0+255),b
  2584  001F5C  ECE2  F013         	call	_printf	;wreg free
  2585  001F60  0012               	return		;funcret
  2586  001F62                     __end_of_i2c_write_serial:
  2587                           	opt callstack 0
  2588                           
  2589 ;; *************** function ___awmod *****************
  2590 ;; Defined at:
  2591 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  dividend        2    4[COMRAM] int 
  2594 ;;  divisor         2    6[COMRAM] int 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  sign            1    9[COMRAM] unsigned char 
  2597 ;;  counter         1    8[COMRAM] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  2    4[COMRAM] int 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;Total ram usage:        6 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    4
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_updateMoist
  2618 ;;		_getReading
  2619 ;;		_updateTemperature
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text5
  2624  002492                     __ptext5:
  2625                           	opt callstack 0
  2626  002492                     ___awmod:
  2627                           	opt callstack 24
  2628                           
  2629                           ;incstack = 0
  2630  002492  0E00               	movlw	0
  2631  002494  6E0A               	movwf	___awmod@sign,c
  2632  002496  AE06               	btfss	___awmod@dividend+1,7,c
  2633  002498  D006               	goto	l3492
  2634  00249A  6C05               	negf	___awmod@dividend,c
  2635  00249C  1E06               	comf	___awmod@dividend+1,f,c
  2636  00249E  B0D8               	btfsc	status,0,c
  2637  0024A0  2A06               	incf	___awmod@dividend+1,f,c
  2638  0024A2  0E01               	movlw	1
  2639  0024A4  6E0A               	movwf	___awmod@sign,c
  2640  0024A6                     l3492:
  2641  0024A6  AE08               	btfss	___awmod@divisor+1,7,c
  2642  0024A8  D004               	goto	l3496
  2643  0024AA  6C07               	negf	___awmod@divisor,c
  2644  0024AC  1E08               	comf	___awmod@divisor+1,f,c
  2645  0024AE  B0D8               	btfsc	status,0,c
  2646  0024B0  2A08               	incf	___awmod@divisor+1,f,c
  2647  0024B2                     l3496:
  2648  0024B2  5007               	movf	___awmod@divisor,w,c
  2649  0024B4  1008               	iorwf	___awmod@divisor+1,w,c
  2650  0024B6  B4D8               	btfsc	status,2,c
  2651  0024B8  D018               	goto	l3512
  2652  0024BA  0E01               	movlw	1
  2653  0024BC  6E09               	movwf	___awmod@counter,c
  2654  0024BE  D004               	goto	l3502
  2655  0024C0                     l3500:
  2656  0024C0  90D8               	bcf	status,0,c
  2657  0024C2  3607               	rlcf	___awmod@divisor,f,c
  2658  0024C4  3608               	rlcf	___awmod@divisor+1,f,c
  2659  0024C6  2A09               	incf	___awmod@counter,f,c
  2660  0024C8                     l3502:
  2661  0024C8  AE08               	btfss	___awmod@divisor+1,7,c
  2662  0024CA  D7FA               	goto	l3500
  2663  0024CC                     u3130:
  2664  0024CC  5007               	movf	___awmod@divisor,w,c
  2665  0024CE  5C05               	subwf	___awmod@dividend,w,c
  2666  0024D0  5008               	movf	___awmod@divisor+1,w,c
  2667  0024D2  5806               	subwfb	___awmod@dividend+1,w,c
  2668  0024D4  A0D8               	btfss	status,0,c
  2669  0024D6  D004               	goto	l3508
  2670  0024D8  5007               	movf	___awmod@divisor,w,c
  2671  0024DA  5E05               	subwf	___awmod@dividend,f,c
  2672  0024DC  5008               	movf	___awmod@divisor+1,w,c
  2673  0024DE  5A06               	subwfb	___awmod@dividend+1,f,c
  2674  0024E0                     l3508:
  2675  0024E0  90D8               	bcf	status,0,c
  2676  0024E2  3208               	rrcf	___awmod@divisor+1,f,c
  2677  0024E4  3207               	rrcf	___awmod@divisor,f,c
  2678  0024E6  2E09               	decfsz	___awmod@counter,f,c
  2679  0024E8  D7F1               	goto	u3130
  2680  0024EA                     l3512:
  2681  0024EA  500A               	movf	___awmod@sign,w,c
  2682  0024EC  B4D8               	btfsc	status,2,c
  2683  0024EE  D004               	goto	l3516
  2684  0024F0  6C05               	negf	___awmod@dividend,c
  2685  0024F2  1E06               	comf	___awmod@dividend+1,f,c
  2686  0024F4  B0D8               	btfsc	status,0,c
  2687  0024F6  2A06               	incf	___awmod@dividend+1,f,c
  2688  0024F8                     l3516:
  2689  0024F8  C005  F005         	movff	___awmod@dividend,?___awmod
  2690  0024FC  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  2691  002500  0012               	return		;funcret
  2692  002502                     __end_of___awmod:
  2693                           	opt callstack 0
  2694                           
  2695 ;; *************** function ___awdiv *****************
  2696 ;; Defined at:
  2697 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  dividend        2    4[COMRAM] int 
  2700 ;;  divisor         2    6[COMRAM] int 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  quotient        2   10[COMRAM] int 
  2703 ;;  sign            1    9[COMRAM] unsigned char 
  2704 ;;  counter         1    8[COMRAM] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  2    4[COMRAM] int 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;Total ram usage:        8 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    4
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_updateMoist
  2725 ;;		_updateTemperature
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text6
  2730  00229E                     __ptext6:
  2731                           	opt callstack 0
  2732  00229E                     ___awdiv:
  2733                           	opt callstack 24
  2734                           
  2735                           ;incstack = 0
  2736  00229E  0E00               	movlw	0
  2737  0022A0  6E0A               	movwf	___awdiv@sign,c
  2738  0022A2  AE08               	btfss	___awdiv@divisor+1,7,c
  2739  0022A4  D006               	goto	l3448
  2740  0022A6  6C07               	negf	___awdiv@divisor,c
  2741  0022A8  1E08               	comf	___awdiv@divisor+1,f,c
  2742  0022AA  B0D8               	btfsc	status,0,c
  2743  0022AC  2A08               	incf	___awdiv@divisor+1,f,c
  2744  0022AE  0E01               	movlw	1
  2745  0022B0  6E0A               	movwf	___awdiv@sign,c
  2746  0022B2                     l3448:
  2747  0022B2  AE06               	btfss	___awdiv@dividend+1,7,c
  2748  0022B4  D006               	goto	l3454
  2749  0022B6  6C05               	negf	___awdiv@dividend,c
  2750  0022B8  1E06               	comf	___awdiv@dividend+1,f,c
  2751  0022BA  B0D8               	btfsc	status,0,c
  2752  0022BC  2A06               	incf	___awdiv@dividend+1,f,c
  2753  0022BE  0E01               	movlw	1
  2754  0022C0  1A0A               	xorwf	___awdiv@sign,f,c
  2755  0022C2                     l3454:
  2756  0022C2  0E00               	movlw	0
  2757  0022C4  6E0C               	movwf	___awdiv@quotient+1,c
  2758  0022C6  0E00               	movlw	0
  2759  0022C8  6E0B               	movwf	___awdiv@quotient,c
  2760  0022CA  5007               	movf	___awdiv@divisor,w,c
  2761  0022CC  1008               	iorwf	___awdiv@divisor+1,w,c
  2762  0022CE  B4D8               	btfsc	status,2,c
  2763  0022D0  D01C               	goto	l3476
  2764  0022D2  0E01               	movlw	1
  2765  0022D4  6E09               	movwf	___awdiv@counter,c
  2766  0022D6  D004               	goto	l3462
  2767  0022D8                     l3460:
  2768  0022D8  90D8               	bcf	status,0,c
  2769  0022DA  3607               	rlcf	___awdiv@divisor,f,c
  2770  0022DC  3608               	rlcf	___awdiv@divisor+1,f,c
  2771  0022DE  2A09               	incf	___awdiv@counter,f,c
  2772  0022E0                     l3462:
  2773  0022E0  AE08               	btfss	___awdiv@divisor+1,7,c
  2774  0022E2  D7FA               	goto	l3460
  2775  0022E4                     u3070:
  2776  0022E4  90D8               	bcf	status,0,c
  2777  0022E6  360B               	rlcf	___awdiv@quotient,f,c
  2778  0022E8  360C               	rlcf	___awdiv@quotient+1,f,c
  2779  0022EA  5007               	movf	___awdiv@divisor,w,c
  2780  0022EC  5C05               	subwf	___awdiv@dividend,w,c
  2781  0022EE  5008               	movf	___awdiv@divisor+1,w,c
  2782  0022F0  5806               	subwfb	___awdiv@dividend+1,w,c
  2783  0022F2  A0D8               	btfss	status,0,c
  2784  0022F4  D005               	goto	l3472
  2785  0022F6  5007               	movf	___awdiv@divisor,w,c
  2786  0022F8  5E05               	subwf	___awdiv@dividend,f,c
  2787  0022FA  5008               	movf	___awdiv@divisor+1,w,c
  2788  0022FC  5A06               	subwfb	___awdiv@dividend+1,f,c
  2789  0022FE  800B               	bsf	___awdiv@quotient,0,c
  2790  002300                     l3472:
  2791  002300  90D8               	bcf	status,0,c
  2792  002302  3208               	rrcf	___awdiv@divisor+1,f,c
  2793  002304  3207               	rrcf	___awdiv@divisor,f,c
  2794  002306  2E09               	decfsz	___awdiv@counter,f,c
  2795  002308  D7ED               	goto	u3070
  2796  00230A                     l3476:
  2797  00230A  500A               	movf	___awdiv@sign,w,c
  2798  00230C  B4D8               	btfsc	status,2,c
  2799  00230E  D004               	goto	l3480
  2800  002310  6C0B               	negf	___awdiv@quotient,c
  2801  002312  1E0C               	comf	___awdiv@quotient+1,f,c
  2802  002314  B0D8               	btfsc	status,0,c
  2803  002316  2A0C               	incf	___awdiv@quotient+1,f,c
  2804  002318                     l3480:
  2805  002318  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  2806  00231C  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  2807  002320  0012               	return		;funcret
  2808  002322                     __end_of___awdiv:
  2809                           	opt callstack 0
  2810                           
  2811 ;; *************** function _i2c_read_serial *****************
  2812 ;; Defined at:
  2813 ;;		line 166 in file "main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  addr            1    wreg     unsigned char 
  2816 ;;  data_out        2   22[BANK0 ] PTR unsigned char 
  2817 ;;		 -> data_out(4), 
  2818 ;;  length          1   24[BANK0 ] unsigned char 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  addr            1   31[BANK0 ] unsigned char 
  2821 ;;  i               1   33[BANK0 ] unsigned char 
  2822 ;;  targetAddr      1   32[BANK0 ] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      unsigned char 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:       12 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:   13
  2839 ;; This function calls:
  2840 ;;		_printf
  2841 ;; This function is called by:
  2842 ;;		_getReading
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text7
  2847  001DB2                     __ptext7:
  2848                           	opt callstack 0
  2849  001DB2                     _i2c_read_serial:
  2850                           	opt callstack 16
  2851                           
  2852                           ;incstack = 0
  2853                           ;i2c_read_serial@addr stored from wreg
  2854  001DB2  0100               	movlb	0	; () banked
  2855  001DB4  6FED               	movwf	i2c_read_serial@addr& (0+255),b
  2856                           
  2857                           ;main.c: 169:     (debug)?printf("/n/r***********READ*****************\n\r"):0;
  2858  001DB6  0100               	movlb	0	; () banked
  2859  001DB8  51ED               	movf	i2c_read_serial@addr& (0+255),w,b
  2860  001DBA  0D02               	mullw	2
  2861  001DBC  28F3               	incf	prodl,w,c
  2862  001DBE  6FEE               	movwf	i2c_read_serial@targetAddr& (0+255),b
  2863                           
  2864                           ; BSR set to: 0
  2865  001DC0  0E01               	movlw	low STR_5
  2866  001DC2  6FDE               	movwf	printf@fmt& (0+255),b
  2867  001DC4  0E10               	movlw	high STR_5
  2868  001DC6  6FDF               	movwf	(printf@fmt+1)& (0+255),b
  2869  001DC8  ECE2  F013         	call	_printf	;wreg free
  2870  001DCC                     l374:
  2871  001DCC  B4C7               	btfsc	4039,2,c	;volatile
  2872  001DCE  D7FE               	goto	l374
  2873  001DD0  CFC5 F0E7          	movff	4037,??_i2c_read_serial	;volatile
  2874  001DD4  0E1F               	movlw	31
  2875  001DD6  0100               	movlb	0	; () banked
  2876  001DD8  17E7               	andwf	??_i2c_read_serial& (0+255),f,b
  2877  001DDA  A4D8               	btfss	status,2,c
  2878  001DDC  D7F7               	goto	l374
  2879                           
  2880                           ; BSR set to: 0
  2881  001DDE  0E94               	movlw	low STR_6
  2882  001DE0  6FDE               	movwf	printf@fmt& (0+255),b
  2883  001DE2  0E10               	movlw	high STR_6
  2884  001DE4  6FDF               	movwf	(printf@fmt+1)& (0+255),b
  2885  001DE6  ECE2  F013         	call	_printf	;wreg free
  2886                           
  2887                           ;main.c: 176:     SSP1CON2bits.SEN = 1;
  2888  001DEA  80C5               	bsf	4037,0,c	;volatile
  2889  001DEC                     l381:
  2890  001DEC  B0C5               	btfsc	4037,0,c	;volatile
  2891  001DEE  D7FE               	goto	l381
  2892  001DF0  0E71               	movlw	low STR_7
  2893  001DF2  0100               	movlb	0	; () banked
  2894  001DF4  6FDE               	movwf	printf@fmt& (0+255),b
  2895  001DF6  0E10               	movlw	high STR_7
  2896  001DF8  6FDF               	movwf	(printf@fmt+1)& (0+255),b
  2897  001DFA  ECE2  F013         	call	_printf	;wreg free
  2898                           
  2899                           ;main.c: 181:     (debug)?printf("Skriver: adresse: %d\n\r", targetAddr):0;
  2900  001DFE  C0EE  FFC9         	movff	i2c_read_serial@targetAddr,4041	;volatile
  2901  001E02  0E5A               	movlw	low STR_1
  2902  001E04  0100               	movlb	0	; () banked
  2903  001E06  6FDE               	movwf	printf@fmt& (0+255),b
  2904  001E08  0E10               	movlw	high STR_1
  2905  001E0A  6FDF               	movwf	(printf@fmt+1)& (0+255),b
  2906  001E0C  C0EE  F0E0         	movff	i2c_read_serial@targetAddr,?_printf+2
  2907  001E10  6BE1               	clrf	(?_printf+3)& (0+255),b
  2908  001E12  ECE2  F013         	call	_printf	;wreg free
  2909                           
  2910                           ;main.c: 183:     if(SSP1CON2bits.ACKSTAT == 0) {
  2911  001E16  BCC5               	btfsc	4037,6,c	;volatile
  2912  001E18  D031               	goto	u3230
  2913                           
  2914                           ;main.c: 184:         for (uint8_t i=0; i < length ; i++) {
  2915  001E1A  0E00               	movlw	0
  2916  001E1C  0100               	movlb	0	; () banked
  2917  001E1E  6FEF               	movwf	i2c_read_serial@i& (0+255),b
  2918  001E20  D029               	goto	l3542
  2919  001E22                     l394:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;main.c: 185:             SSP1CON2bits.RCEN = 1;
  2923  001E22  86C5               	bsf	4037,3,c	;volatile
  2924  001E24                     l395:
  2925  001E24  B6C5               	btfsc	4037,3,c	;volatile
  2926  001E26  D7FE               	goto	l395
  2927                           
  2928                           ;main.c: 188:             data_out[i] = SSP1BUF;
  2929  001E28  0100               	movlb	0	; () banked
  2930  001E2A  51EF               	movf	i2c_read_serial@i& (0+255),w,b
  2931  001E2C  25E4               	addwf	i2c_read_serial@data_out& (0+255),w,b
  2932  001E2E  6ED9               	movwf	fsr2l,c
  2933  001E30  0E00               	movlw	0
  2934  001E32  21E5               	addwfc	(i2c_read_serial@data_out+1)& (0+255),w,b
  2935  001E34  6EDA               	movwf	fsr2h,c
  2936  001E36  CFC9 FFDF          	movff	4041,indf2	;volatile
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;main.c: 191:             if( i != length -1)
  2940  001E3A  51EF               	movf	i2c_read_serial@i& (0+255),w,b
  2941  001E3C  6FE7               	movwf	??_i2c_read_serial& (0+255),b
  2942  001E3E  6BE8               	clrf	(??_i2c_read_serial+1)& (0+255),b
  2943  001E40  0EFF               	movlw	255
  2944  001E42  6FE9               	movwf	(??_i2c_read_serial+2)& (0+255),b
  2945  001E44  0EFF               	movlw	255
  2946  001E46  6FEA               	movwf	(??_i2c_read_serial+3)& (0+255),b
  2947  001E48  51E6               	movf	i2c_read_serial@length& (0+255),w,b
  2948  001E4A  6FEB               	movwf	(??_i2c_read_serial+4)& (0+255),b
  2949  001E4C  6BEC               	clrf	(??_i2c_read_serial+5)& (0+255),b
  2950  001E4E  51E9               	movf	(??_i2c_read_serial+2)& (0+255),w,b
  2951  001E50  27EB               	addwf	(??_i2c_read_serial+4)& (0+255),f,b
  2952  001E52  51EA               	movf	(??_i2c_read_serial+3)& (0+255),w,b
  2953  001E54  23EC               	addwfc	(??_i2c_read_serial+5)& (0+255),f,b
  2954  001E56  51E7               	movf	??_i2c_read_serial& (0+255),w,b
  2955  001E58  19EB               	xorwf	(??_i2c_read_serial+4)& (0+255),w,b
  2956  001E5A  E104               	bnz	u3210
  2957  001E5C  51E8               	movf	(??_i2c_read_serial+1)& (0+255),w,b
  2958  001E5E  19EC               	xorwf	(??_i2c_read_serial+5)& (0+255),w,b
  2959  001E60  B4D8               	btfsc	status,2,c
  2960  001E62  D002               	goto	l398
  2961  001E64                     u3210:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;main.c: 192:                 SSP1CON2bits.ACKDT = 0;
  2965  001E64  9AC5               	bcf	4037,5,c	;volatile
  2966  001E66  D001               	goto	l399
  2967  001E68                     l398:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;main.c: 194:                 SSP1CON2bits.ACKDT = 1;
  2971  001E68  8AC5               	bsf	4037,5,c	;volatile
  2972  001E6A                     l399:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;main.c: 196:             SSP1CON2bits.ACKEN = 1;
  2976  001E6A  88C5               	bsf	4037,4,c	;volatile
  2977  001E6C                     l400:
  2978  001E6C  B8C5               	btfsc	4037,4,c	;volatile
  2979  001E6E  D7FE               	goto	l400
  2980                           
  2981                           ;main.c: 200:         }
  2982  001E70  0100               	movlb	0	; () banked
  2983  001E72  2BEF               	incf	i2c_read_serial@i& (0+255),f,b
  2984  001E74                     l3542:
  2985                           
  2986                           ; BSR set to: 0
  2987  001E74  51E6               	movf	i2c_read_serial@length& (0+255),w,b
  2988  001E76  5DEF               	subwf	i2c_read_serial@i& (0+255),w,b
  2989  001E78  A0D8               	btfss	status,0,c
  2990  001E7A  D7D3               	goto	l394
  2991  001E7C                     u3230:
  2992                           
  2993                           ;main.c: 204:     SSP1CON2bits.ACKDT = 1;
  2994                           
  2995                           ;main.c: 201:     }
  2996  001E7C  8AC5               	bsf	4037,5,c	;volatile
  2997                           
  2998                           ;main.c: 205:     SSP1CON2bits.ACKEN = 1;
  2999  001E7E  88C5               	bsf	4037,4,c	;volatile
  3000  001E80                     l404:
  3001  001E80  B8C5               	btfsc	4037,4,c	;volatile
  3002  001E82  D7FE               	goto	l404
  3003                           
  3004                           ;main.c: 209:     SSP1CON2bits.PEN = 1;
  3005  001E84  84C5               	bsf	4037,2,c	;volatile
  3006  001E86                     l407:
  3007  001E86  B4C5               	btfsc	4037,2,c	;volatile
  3008  001E88  D7FE               	goto	l407
  3009                           
  3010                           ;main.c: 213:     do { LATBbits.LATB5 = 1; } while(0);
  3011  001E8A  8A8A               	bsf	3978,5,c	;volatile
  3012  001E8C  0012               	return		;funcret
  3013  001E8E                     __end_of_i2c_read_serial:
  3014                           	opt callstack 0
  3015                           
  3016 ;; *************** function _printf *****************
  3017 ;; Defined at:
  3018 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
  3021 ;;		 -> STR_8(23), STR_7(18), STR_6(16), STR_5(39), 
  3022 ;;		 -> STR_4(17), STR_3(26), STR_2(24), STR_1(23), 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  ap              2   81[COMRAM] PTR void [1]
  3025 ;;		 -> ?_printf(2), 
  3026 ;;  ret             2    0        int 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  2   16[BANK0 ] int 
  3029 ;; Registers used:
  3030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3036 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;Total ram usage:       10 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:   12
  3043 ;; This function calls:
  3044 ;;		_vfprintf
  3045 ;; This function is called by:
  3046 ;;		_i2c_write_serial
  3047 ;;		_i2c_read_serial
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text8
  3052  0027C4                     __ptext8:
  3053                           	opt callstack 0
  3054  0027C4                     _printf:
  3055                           	opt callstack 17
  3056                           
  3057                           ;incstack = 0
  3058  0027C4  0EE0               	movlw	low (?_printf+2)
  3059  0027C6  6E52               	movwf	printf@ap,c
  3060  0027C8  0E00               	movlw	high (?_printf+2)
  3061  0027CA  6E53               	movwf	printf@ap+1,c
  3062  0027CC  0E00               	movlw	0
  3063  0027CE  0100               	movlb	0	; () banked
  3064  0027D0  6FD8               	movwf	vfprintf@fp& (0+255),b
  3065  0027D2  0E00               	movlw	0
  3066  0027D4  6FD9               	movwf	(vfprintf@fp+1)& (0+255),b
  3067  0027D6  C0DE  F0DA         	movff	printf@fmt,vfprintf@fmt
  3068  0027DA  C0DF  F0DB         	movff	printf@fmt+1,vfprintf@fmt+1
  3069  0027DE  0E52               	movlw	low printf@ap
  3070  0027E0  6FDC               	movwf	vfprintf@ap& (0+255),b
  3071  0027E2  0E00               	movlw	high printf@ap
  3072  0027E4  6FDD               	movwf	(vfprintf@ap+1)& (0+255),b
  3073  0027E6  ECB7  F012         	call	_vfprintf	;wreg free
  3074  0027EA  0012               	return		;funcret
  3075  0027EC                     __end_of_printf:
  3076                           	opt callstack 0
  3077                           
  3078 ;; *************** function _vfprintf *****************
  3079 ;; Defined at:
  3080 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  3083 ;;		 -> NULL(0), 
  3084 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
  3085 ;;		 -> STR_8(23), STR_7(18), STR_6(16), STR_5(39), 
  3086 ;;		 -> STR_4(17), STR_3(26), STR_2(24), STR_1(23), 
  3087 ;;  ap              2   14[BANK0 ] PTR PTR void 
  3088 ;;		 -> printf@ap(2), 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  3091 ;;		 -> STR_8(23), STR_7(18), STR_6(16), STR_5(39), 
  3092 ;;		 -> STR_4(17), STR_3(26), STR_2(24), STR_1(23), 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  2   10[BANK0 ] int 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3102 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;Total ram usage:        8 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:   11
  3109 ;; This function calls:
  3110 ;;		_vfpfcnvrt
  3111 ;; This function is called by:
  3112 ;;		_printf
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text9
  3117  00256E                     __ptext9:
  3118                           	opt callstack 0
  3119  00256E                     _vfprintf:
  3120                           	opt callstack 17
  3121                           
  3122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3123                           
  3124                           ;incstack = 0
  3125  00256E  C0DA  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  3126  002572  C0DB  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3127                           
  3128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3129  002576  0E00               	movlw	0
  3130  002578  0100               	movlb	0	; () banked
  3131  00257A  6FA7               	movwf	(_nout+1)& (0+255),b
  3132  00257C  0E00               	movlw	0
  3133  00257E  6FA6               	movwf	_nout& (0+255),b
  3134                           
  3135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3136  002580  D013               	goto	l3408
  3137  002582                     l3406:
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3141  002582  C0D8  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  3142  002586  C0D9  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3143  00258A  0E4E               	movlw	low vfprintf@cfmt
  3144  00258C  6E48               	movwf	vfpfcnvrt@fmt,c
  3145  00258E  0E00               	movlw	high vfprintf@cfmt
  3146  002590  6E49               	movwf	vfpfcnvrt@fmt+1,c
  3147  002592  C0DC  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  3148  002596  C0DD  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3149  00259A  EC9D  F00B         	call	_vfpfcnvrt	;wreg free
  3150  00259E  5046               	movf	?_vfpfcnvrt,w,c
  3151  0025A0  0100               	movlb	0	; () banked
  3152  0025A2  27A6               	addwf	_nout& (0+255),f,b
  3153  0025A4  5047               	movf	?_vfpfcnvrt+1,w,c
  3154  0025A6  23A7               	addwfc	(_nout+1)& (0+255),f,b
  3155  0025A8                     l3408:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3159  0025A8  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3160  0025AC  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3161  0025B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3162  0025B0  6AF8               	clrf	tblptru,c
  3163  0025B2                     	endif
  3164  0025B2                     	if	0	;tblptru may be non-zero
  3165  0025B2                     	endif
  3166  0025B2  0008               	tblrd		*
  3167  0025B4  50F5               	movf	tablat,w,c
  3168  0025B6  0900               	iorlw	0
  3169  0025B8  A4D8               	btfss	status,2,c
  3170  0025BA  D7E3               	goto	l3406
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3174  0025BC  C0A6  F0D8         	movff	_nout,?_vfprintf
  3175  0025C0  C0A7  F0D9         	movff	_nout+1,?_vfprintf+1
  3176                           
  3177                           ; BSR set to: 0
  3178  0025C4  0012               	return		;funcret
  3179  0025C6                     __end_of_vfprintf:
  3180                           	opt callstack 0
  3181                           
  3182 ;; *************** function _vfpfcnvrt *****************
  3183 ;; Defined at:
  3184 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  3187 ;;		 -> NULL(0), 
  3188 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  3189 ;;		 -> vfprintf@cfmt(2), 
  3190 ;;  ap              2   73[COMRAM] PTR PTR void 
  3191 ;;		 -> printf@ap(2), 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  ll              8    0[BANK0 ] long long 
  3194 ;;  llu             8    0        unsigned long long 
  3195 ;;  f               4    0        unsigned long long 
  3196 ;;  vp              3    0        PTR void 
  3197 ;;  ct              3    0        unsigned char [3]
  3198 ;;  cp              3    0        PTR unsigned char 
  3199 ;;  done            2    8[BANK0 ] int 
  3200 ;;  i               2    0        int 
  3201 ;;  c               1    0        unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  2   69[COMRAM] int 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:       18 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:   10
  3218 ;; This function calls:
  3219 ;;		_dtoa
  3220 ;;		_fputc
  3221 ;; This function is called by:
  3222 ;;		_vfprintf
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text10
  3227  00173A                     __ptext10:
  3228                           	opt callstack 0
  3229  00173A                     _vfpfcnvrt:
  3230                           	opt callstack 17
  3231                           
  3232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;incstack = 0
  3236  00173A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3237  00173E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3238  001742  CFDE FFF6          	movff	postinc2,tblptrl
  3239  001746  CFDD FFF7          	movff	postdec2,tblptrh
  3240  00174A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3241  00174A  6AF8               	clrf	tblptru,c
  3242  00174C                     	endif
  3243  00174C                     	if	0	;tblptru may be non-zero
  3244  00174C                     	endif
  3245  00174C  0008               	tblrd		*
  3246  00174E  50F5               	movf	tablat,w,c
  3247  001750  0A25               	xorlw	37
  3248  001752  A4D8               	btfss	status,2,c
  3249  001754  D0DF               	goto	l3388
  3250                           
  3251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3252  001756  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3253  00175A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3254  00175E  2ADE               	incf	postinc2,f,c
  3255  001760  0E00               	movlw	0
  3256  001762  22DD               	addwfc	postdec2,f,c
  3257                           
  3258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3259  001764  0E00               	movlw	0
  3260  001766  0100               	movlb	0	; () banked
  3261  001768  6FA9               	movwf	(_width+1)& (0+255),b
  3262  00176A  0E00               	movlw	0
  3263  00176C  6FA8               	movwf	_width& (0+255),b
  3264  00176E  C0A8  F0AC         	movff	_width,_flags
  3265  001772  C0A9  F0AD         	movff	_width+1,_flags+1
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3269  001776  69AA               	setf	_prec& (0+255),b
  3270  001778  69AB               	setf	(_prec+1)& (0+255),b
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3274  00177A  0E00               	movlw	0
  3275  00177C  6FD7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3276  00177E  0E00               	movlw	0
  3277  001780  D014               	goto	L2
  3278  001782                     l3332:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3282  001782  81AC               	bsf	_flags& (0+255),0,b
  3283  001784                     l3334:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3287  001784  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3288  001788  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3289  00178C  2ADE               	incf	postinc2,f,c
  3290  00178E  0E00               	movlw	0
  3291  001790  22DD               	addwfc	postdec2,f,c
  3292                           
  3293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3294  001792  D02F               	goto	l3358
  3295  001794                     l3336:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3299  001794  83AC               	bsf	_flags& (0+255),1,b
  3300  001796  D7F6               	goto	l3334
  3301  001798                     l3340:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3305  001798  85AC               	bsf	_flags& (0+255),2,b
  3306  00179A  D7F4               	goto	l3334
  3307  00179C                     l3344:
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3311  00179C  87AC               	bsf	_flags& (0+255),3,b
  3312  00179E  D7F2               	goto	l3334
  3313  0017A0                     l3348:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3317  0017A0  89AC               	bsf	_flags& (0+255),4,b
  3318  0017A2  D7F0               	goto	l3334
  3319  0017A4                     l3352:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3323  0017A4  0E00               	movlw	0
  3324  0017A6  6FD7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3325  0017A8  0E01               	movlw	1
  3326  0017AA                     L2:
  3327  0017AA  6FD6               	movwf	vfpfcnvrt@done& (0+255),b
  3328                           
  3329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3330  0017AC  D022               	goto	l3358
  3331  0017AE                     l3356:
  3332                           
  3333                           ; BSR set to: 0
  3334  0017AE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3335  0017B2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3336  0017B6  CFDE FFF6          	movff	postinc2,tblptrl
  3337  0017BA  CFDD FFF7          	movff	postdec2,tblptrh
  3338  0017BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3339  0017BE  6AF8               	clrf	tblptru,c
  3340  0017C0                     	endif
  3341  0017C0                     	if	0	;tblptru may be non-zero
  3342  0017C0                     	endif
  3343  0017C0  0008               	tblrd		*
  3344  0017C2  50F5               	movf	tablat,w,c
  3345  0017C4  6E4C               	movwf	??_vfpfcnvrt& (0+255),c
  3346  0017C6  6A4D               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  3347                           
  3348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3349                           ; Switch size 1, requested type "simple"
  3350                           ; Number of cases is 1, Range of values is 0 to 0
  3351                           ; switch strategies available:
  3352                           ; Name         Instructions Cycles
  3353                           ; simple_byte            4     3 (average)
  3354                           ;	Chosen strategy is simple_byte
  3355  0017C8  504D               	movf	??_vfpfcnvrt+1,w,c
  3356  0017CA  0A00               	xorlw	0	; case 0
  3357  0017CC  A4D8               	btfss	status,2,c
  3358  0017CE  D7EA               	goto	l3352
  3359                           
  3360                           ; BSR set to: 0
  3361                           ; Switch size 1, requested type "simple"
  3362                           ; Number of cases is 5, Range of values is 32 to 48
  3363                           ; switch strategies available:
  3364                           ; Name         Instructions Cycles
  3365                           ; simple_byte           16     9 (average)
  3366                           ;	Chosen strategy is simple_byte
  3367  0017D0  504C               	movf	??_vfpfcnvrt,w,c
  3368  0017D2  0A20               	xorlw	32	; case 32
  3369  0017D4  B4D8               	btfsc	status,2,c
  3370  0017D6  D7E2               	goto	l3344
  3371  0017D8  0A03               	xorlw	3	; case 35
  3372  0017DA  B4D8               	btfsc	status,2,c
  3373  0017DC  D7E1               	goto	l3348
  3374  0017DE  0A08               	xorlw	8	; case 43
  3375  0017E0  B4D8               	btfsc	status,2,c
  3376  0017E2  D7DA               	goto	l3340
  3377  0017E4  0A06               	xorlw	6	; case 45
  3378  0017E6  B4D8               	btfsc	status,2,c
  3379  0017E8  D7CC               	goto	l3332
  3380  0017EA  0A1D               	xorlw	29	; case 48
  3381  0017EC  B4D8               	btfsc	status,2,c
  3382  0017EE  D7D2               	goto	l3336
  3383  0017F0  D7D9               	goto	l3352
  3384  0017F2                     l3358:
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3388  0017F2  51D6               	movf	vfpfcnvrt@done& (0+255),w,b
  3389  0017F4  11D7               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3390  0017F6  B4D8               	btfsc	status,2,c
  3391  0017F8  D7DA               	goto	l3356
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3395  0017FA  B1AC               	btfsc	_flags& (0+255),0,b
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3399  0017FC  93AC               	bcf	_flags& (0+255),1,b
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3403  0017FE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3404  001802  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3405  001806  CFDE FFF6          	movff	postinc2,tblptrl
  3406  00180A  CFDD FFF7          	movff	postdec2,tblptrh
  3407  00180E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3408  00180E  6AF8               	clrf	tblptru,c
  3409  001810                     	endif
  3410  001810                     	if	0	;tblptru may be non-zero
  3411  001810                     	endif
  3412  001810  0008               	tblrd		*
  3413  001812  50F5               	movf	tablat,w,c
  3414  001814  0A64               	xorlw	100
  3415  001816  B4D8               	btfsc	status,2,c
  3416  001818  D00E               	goto	u2930
  3417                           
  3418                           ; BSR set to: 0
  3419  00181A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3420  00181E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3421  001822  CFDE FFF6          	movff	postinc2,tblptrl
  3422  001826  CFDD FFF7          	movff	postdec2,tblptrh
  3423  00182A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3424  00182A  6AF8               	clrf	tblptru,c
  3425  00182C                     	endif
  3426  00182C                     	if	0	;tblptru may be non-zero
  3427  00182C                     	endif
  3428  00182C  0008               	tblrd		*
  3429  00182E  50F5               	movf	tablat,w,c
  3430  001830  0A69               	xorlw	105
  3431  001832  A4D8               	btfss	status,2,c
  3432  001834  D03F               	goto	l3372
  3433  001836                     u2930:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3437  001836  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3438  00183A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3439  00183E  2ADE               	incf	postinc2,f,c
  3440  001840  0E00               	movlw	0
  3441  001842  22DD               	addwfc	postdec2,f,c
  3442                           
  3443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3444  001844  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3445  001848  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3446  00184C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  3447  001850  0E02               	movlw	2
  3448  001852  26DE               	addwf	postinc2,f,c
  3449  001854  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  3450  001858  0E00               	movlw	0
  3451  00185A  22DD               	addwfc	postdec2,f,c
  3452  00185C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3453  001860  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3454  001864  CFDE F0CE          	movff	postinc2,vfpfcnvrt@ll
  3455  001868  CFDD F0CF          	movff	postdec2,vfpfcnvrt@ll+1
  3456  00186C  0E00               	movlw	0
  3457  00186E  BFCF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3458  001870  0EFF               	movlw	-1
  3459  001872  6FD0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3460  001874  6FD1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3461  001876  6FD2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3462  001878  6FD3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3463  00187A  6FD4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3464  00187C  6FD5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3468  00187E  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  3469  001882  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3470  001886  C0CE  F024         	movff	vfpfcnvrt@ll,dtoa@d
  3471  00188A  C0CF  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3472  00188E  C0D0  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3473  001892  C0D1  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3474  001896  C0D2  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3475  00189A  C0D3  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3476  00189E  C0D4  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3477  0018A2  C0D5  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3478  0018A6  EC79  F00A         	call	_dtoa	;wreg free
  3479  0018AA  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  3480  0018AE  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3481  0018B2  0012               	return	
  3482  0018B4                     l3372:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3486  0018B4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3487  0018B8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3488  0018BC  CFDE FFF6          	movff	postinc2,tblptrl
  3489  0018C0  CFDD FFF7          	movff	postdec2,tblptrh
  3490  0018C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3491  0018C4  6AF8               	clrf	tblptru,c
  3492  0018C6                     	endif
  3493  0018C6                     	if	0	;tblptru may be non-zero
  3494  0018C6                     	endif
  3495  0018C6  0008               	tblrd		*
  3496  0018C8  50F5               	movf	tablat,w,c
  3497  0018CA  0A25               	xorlw	37
  3498  0018CC  A4D8               	btfss	status,2,c
  3499  0018CE  D016               	goto	l3382
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3503  0018D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3504  0018D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3505  0018D8  2ADE               	incf	postinc2,f,c
  3506  0018DA  0E00               	movlw	0
  3507  0018DC  22DD               	addwfc	postdec2,f,c
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3511  0018DE  0E00               	movlw	0
  3512  0018E0  6E08               	movwf	fputc@c+1,c
  3513  0018E2  0E25               	movlw	37
  3514  0018E4  6E07               	movwf	fputc@c,c
  3515  0018E6  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3516  0018EA  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3517  0018EE  EC81  F012         	call	_fputc	;wreg free
  3518  0018F2                     l3378:
  3519                           
  3520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3521  0018F2  0E00               	movlw	0
  3522  0018F4  6E47               	movwf	?_vfpfcnvrt+1,c
  3523  0018F6  0E01               	movlw	1
  3524  0018F8  6E46               	movwf	?_vfpfcnvrt,c
  3525  0018FA  0012               	return	
  3526  0018FC                     l3382:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3530  0018FC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3531  001900  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3532  001904  2ADE               	incf	postinc2,f,c
  3533  001906  0E00               	movlw	0
  3534  001908  22DD               	addwfc	postdec2,f,c
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3538  00190A  0E00               	movlw	0
  3539  00190C  6E47               	movwf	?_vfpfcnvrt+1,c
  3540  00190E  0E00               	movlw	0
  3541  001910  6E46               	movwf	?_vfpfcnvrt,c
  3542  001912  0012               	return	
  3543  001914                     l3388:
  3544                           
  3545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3546  001914  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3547  001918  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3548  00191C  CFDE FFF6          	movff	postinc2,tblptrl
  3549  001920  CFDD FFF7          	movff	postdec2,tblptrh
  3550  001924                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3551  001924  6AF8               	clrf	tblptru,c
  3552  001926                     	endif
  3553  001926                     	if	0	;tblptru may be non-zero
  3554  001926                     	endif
  3555  001926  0008               	tblrd		*
  3556  001928  50F5               	movf	tablat,w,c
  3557  00192A  6E07               	movwf	fputc@c,c
  3558  00192C  6A08               	clrf	fputc@c+1,c
  3559  00192E  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3560  001932  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3561  001936  EC81  F012         	call	_fputc	;wreg free
  3562                           
  3563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3564  00193A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3565  00193E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3566  001942  2ADE               	incf	postinc2,f,c
  3567  001944  0E00               	movlw	0
  3568  001946  22DD               	addwfc	postdec2,f,c
  3569  001948  D7D4               	goto	l3378
  3570  00194A                     __end_of_vfpfcnvrt:
  3571                           	opt callstack 0
  3572                           
  3573 ;; *************** function _dtoa *****************
  3574 ;; Defined at:
  3575 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3578 ;;		 -> NULL(0), 
  3579 ;;  d               8   35[COMRAM] long long 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  n               8   59[COMRAM] long long 
  3582 ;;  i               2   67[COMRAM] int 
  3583 ;;  s               2   57[COMRAM] int 
  3584 ;;  w               2   55[COMRAM] int 
  3585 ;;  p               2   53[COMRAM] int 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2   33[COMRAM] int 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3595 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;Total ram usage:       36 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    9
  3602 ;; This function calls:
  3603 ;;		___aodiv
  3604 ;;		___aomod
  3605 ;;		_abs
  3606 ;;		_pad
  3607 ;; This function is called by:
  3608 ;;		_vfpfcnvrt
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text11
  3613  0014F2                     __ptext11:
  3614                           	opt callstack 0
  3615  0014F2                     _dtoa:
  3616                           	opt callstack 17
  3617                           
  3618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3619                           
  3620                           ;incstack = 0
  3621  0014F2  C024  F03C         	movff	dtoa@d,dtoa@n
  3622  0014F6  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  3623  0014FA  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  3624  0014FE  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  3625  001502  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  3626  001506  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  3627  00150A  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  3628  00150E  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  3629                           
  3630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3631  001512  AE43               	btfss	dtoa@n+7,7,c
  3632  001514  D002               	goto	u2740
  3633  001516  0E01               	movlw	1
  3634  001518  D001               	goto	u2750
  3635  00151A                     u2740:
  3636  00151A  0E00               	movlw	0
  3637  00151C                     u2750:
  3638  00151C  6E3A               	movwf	dtoa@s,c
  3639  00151E  6A3B               	clrf	dtoa@s+1,c
  3640                           
  3641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3642  001520  503A               	movf	dtoa@s,w,c
  3643  001522  103B               	iorwf	dtoa@s+1,w,c
  3644  001524  B4D8               	btfsc	status,2,c
  3645  001526  D010               	goto	l3266
  3646                           
  3647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3648  001528  1E43               	comf	dtoa@n+7,f,c
  3649  00152A  1E42               	comf	dtoa@n+6,f,c
  3650  00152C  1E41               	comf	dtoa@n+5,f,c
  3651  00152E  1E40               	comf	dtoa@n+4,f,c
  3652  001530  1E3F               	comf	dtoa@n+3,f,c
  3653  001532  1E3E               	comf	dtoa@n+2,f,c
  3654  001534  1E3D               	comf	dtoa@n+1,f,c
  3655  001536  6C3C               	negf	dtoa@n,c
  3656  001538  0E00               	movlw	0
  3657  00153A  223D               	addwfc	dtoa@n+1,f,c
  3658  00153C  223E               	addwfc	dtoa@n+2,f,c
  3659  00153E  223F               	addwfc	dtoa@n+3,f,c
  3660  001540  2240               	addwfc	dtoa@n+4,f,c
  3661  001542  2241               	addwfc	dtoa@n+5,f,c
  3662  001544  2242               	addwfc	dtoa@n+6,f,c
  3663  001546  2243               	addwfc	dtoa@n+7,f,c
  3664  001548                     l3266:
  3665                           
  3666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3667  001548  0100               	movlb	0	; () banked
  3668  00154A  AFAB               	btfss	(_prec+1)& (0+255),7,b
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  3672  00154C  93AC               	bcf	_flags& (0+255),1,b
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  3676  00154E  BFAB               	btfsc	(_prec+1)& (0+255),7,b
  3677  001550  D005               	goto	u2780
  3678  001552  51AB               	movf	(_prec+1)& (0+255),w,b
  3679  001554  E108               	bnz	l472
  3680  001556  05AA               	decf	_prec& (0+255),w,b
  3681  001558  B0D8               	btfsc	status,0,c
  3682  00155A  D005               	goto	l472
  3683  00155C                     u2780:
  3684                           
  3685                           ; BSR set to: 0
  3686  00155C  0E00               	movlw	0
  3687  00155E  6E37               	movwf	dtoa@p+1,c
  3688  001560  0E01               	movlw	1
  3689  001562  6E36               	movwf	dtoa@p,c
  3690  001564  D004               	goto	l474
  3691  001566                     l472:
  3692                           
  3693                           ; BSR set to: 0
  3694  001566  C0AA  F036         	movff	_prec,dtoa@p
  3695  00156A  C0AB  F037         	movff	_prec+1,dtoa@p+1
  3696  00156E                     l474:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  3700  00156E  C0A8  F038         	movff	_width,dtoa@w
  3701  001572  C0A9  F039         	movff	_width+1,dtoa@w+1
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  3705  001576  503A               	movf	dtoa@s,w,c
  3706  001578  103B               	iorwf	dtoa@s+1,w,c
  3707  00157A  A4D8               	btfss	status,2,c
  3708  00157C  D002               	goto	u2800
  3709                           
  3710                           ; BSR set to: 0
  3711  00157E  A5AC               	btfss	_flags& (0+255),2,b
  3712  001580  D003               	goto	l3280
  3713  001582                     u2800:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  3717  001582  0638               	decf	dtoa@w,f,c
  3718  001584  A0D8               	btfss	status,0,c
  3719  001586  0639               	decf	dtoa@w+1,f,c
  3720  001588                     l3280:
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  3724  001588  0E00               	movlw	0
  3725  00158A  6E45               	movwf	dtoa@i+1,c
  3726  00158C  0E1F               	movlw	31
  3727  00158E  6E44               	movwf	dtoa@i,c
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  3731  001590  0E00               	movlw	0
  3732  001592  0101               	movlb	1	; () banked
  3733  001594  6F9F               	movwf	(_dbuf+31)& (0+255),b
  3734                           
  3735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3736  001596  D07C               	goto	l3294
  3737  001598                     l3284:
  3738                           
  3739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  3740  001598  0644               	decf	dtoa@i,f,c
  3741  00159A  A0D8               	btfss	status,0,c
  3742  00159C  0645               	decf	dtoa@i+1,f,c
  3743                           
  3744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  3745  00159E  0E80               	movlw	low _dbuf
  3746  0015A0  2444               	addwf	dtoa@i,w,c
  3747  0015A2  6ED9               	movwf	fsr2l,c
  3748  0015A4  0E01               	movlw	high _dbuf
  3749  0015A6  2045               	addwfc	dtoa@i+1,w,c
  3750  0015A8  6EDA               	movwf	fsr2h,c
  3751  0015AA  C03C  F005         	movff	dtoa@n,___aomod@dividend
  3752  0015AE  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  3753  0015B2  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  3754  0015B6  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  3755  0015BA  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  3756  0015BE  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  3757  0015C2  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  3758  0015C6  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  3759  0015CA  0E0A               	movlw	10
  3760  0015CC  6E0D               	movwf	___aomod@divisor,c
  3761  0015CE  0E00               	movlw	0
  3762  0015D0  6E0E               	movwf	___aomod@divisor+1,c
  3763  0015D2  0E00               	movlw	0
  3764  0015D4  6E0F               	movwf	___aomod@divisor+2,c
  3765  0015D6  0E00               	movlw	0
  3766  0015D8  6E10               	movwf	___aomod@divisor+3,c
  3767  0015DA  0E00               	movlw	0
  3768  0015DC  6E11               	movwf	___aomod@divisor+4,c
  3769  0015DE  0E00               	movlw	0
  3770  0015E0  6E12               	movwf	___aomod@divisor+5,c
  3771  0015E2  0E00               	movlw	0
  3772  0015E4  6E13               	movwf	___aomod@divisor+6,c
  3773  0015E6  0E00               	movlw	0
  3774  0015E8  6E14               	movwf	___aomod@divisor+7,c
  3775  0015EA  EC47  F00E         	call	___aomod	;wreg free
  3776  0015EE  C005  F02C         	movff	?___aomod,??_dtoa
  3777  0015F2  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  3778  0015F6  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  3779  0015FA  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  3780  0015FE  C009  F030         	movff	?___aomod+4,??_dtoa+4
  3781  001602  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  3782  001606  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  3783  00160A  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  3784  00160E  C02C  F017         	movff	??_dtoa,abs@a
  3785  001612  C02E  F018         	movff	??_dtoa+2,abs@a+1
  3786  001616  EC89  F013         	call	_abs	;wreg free
  3787  00161A  5017               	movf	?_abs,w,c
  3788  00161C  0F30               	addlw	48
  3789  00161E  6EDF               	movwf	indf2,c
  3790                           
  3791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  3792  001620  0636               	decf	dtoa@p,f,c
  3793  001622  A0D8               	btfss	status,0,c
  3794  001624  0637               	decf	dtoa@p+1,f,c
  3795                           
  3796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  3797  001626  0638               	decf	dtoa@w,f,c
  3798  001628  A0D8               	btfss	status,0,c
  3799  00162A  0639               	decf	dtoa@w+1,f,c
  3800                           
  3801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  3802  00162C  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  3803  001630  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  3804  001634  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  3805  001638  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  3806  00163C  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  3807  001640  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  3808  001644  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  3809  001648  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  3810  00164C  0E0A               	movlw	10
  3811  00164E  6E0D               	movwf	___aodiv@divisor,c
  3812  001650  0E00               	movlw	0
  3813  001652  6E0E               	movwf	___aodiv@divisor+1,c
  3814  001654  0E00               	movlw	0
  3815  001656  6E0F               	movwf	___aodiv@divisor+2,c
  3816  001658  0E00               	movlw	0
  3817  00165A  6E10               	movwf	___aodiv@divisor+3,c
  3818  00165C  0E00               	movlw	0
  3819  00165E  6E11               	movwf	___aodiv@divisor+4,c
  3820  001660  0E00               	movlw	0
  3821  001662  6E12               	movwf	___aodiv@divisor+5,c
  3822  001664  0E00               	movlw	0
  3823  001666  6E13               	movwf	___aodiv@divisor+6,c
  3824  001668  0E00               	movlw	0
  3825  00166A  6E14               	movwf	___aodiv@divisor+7,c
  3826  00166C  ECA3  F00D         	call	___aodiv	;wreg free
  3827  001670  C005  F03C         	movff	?___aodiv,dtoa@n
  3828  001674  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  3829  001678  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  3830  00167C  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  3831  001680  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  3832  001684  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  3833  001688  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  3834  00168C  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  3835  001690                     l3294:
  3836                           
  3837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3838  001690  BE45               	btfsc	dtoa@i+1,7,c
  3839  001692  D020               	goto	u2850
  3840  001694  5045               	movf	dtoa@i+1,w,c
  3841  001696  E103               	bnz	u2810
  3842  001698  0444               	decf	dtoa@i,w,c
  3843  00169A  A0D8               	btfss	status,0,c
  3844  00169C  D01B               	goto	u2850
  3845  00169E                     u2810:
  3846  00169E  503C               	movf	dtoa@n,w,c
  3847  0016A0  103D               	iorwf	dtoa@n+1,w,c
  3848  0016A2  103E               	iorwf	dtoa@n+2,w,c
  3849  0016A4  103F               	iorwf	dtoa@n+3,w,c
  3850  0016A6  1040               	iorwf	dtoa@n+4,w,c
  3851  0016A8  1041               	iorwf	dtoa@n+5,w,c
  3852  0016AA  1042               	iorwf	dtoa@n+6,w,c
  3853  0016AC  1043               	iorwf	dtoa@n+7,w,c
  3854  0016AE  A4D8               	btfss	status,2,c
  3855  0016B0  D773               	goto	l3284
  3856  0016B2  BE37               	btfsc	dtoa@p+1,7,c
  3857  0016B4  D005               	goto	u2830
  3858  0016B6  5037               	movf	dtoa@p+1,w,c
  3859  0016B8  E102               	bnz	u2831
  3860  0016BA  0436               	decf	dtoa@p,w,c
  3861  0016BC  B0D8               	btfsc	status,0,c
  3862  0016BE                     u2831:
  3863  0016BE  D76C               	goto	l3284
  3864  0016C0                     u2830:
  3865  0016C0  BE39               	btfsc	dtoa@w+1,7,c
  3866  0016C2  D008               	goto	u2850
  3867  0016C4  5039               	movf	dtoa@w+1,w,c
  3868  0016C6  E103               	bnz	u2840
  3869  0016C8  0438               	decf	dtoa@w,w,c
  3870  0016CA  A0D8               	btfss	status,0,c
  3871  0016CC  D003               	goto	u2850
  3872  0016CE                     u2840:
  3873  0016CE  0100               	movlb	0	; () banked
  3874  0016D0  B3AC               	btfsc	_flags& (0+255),1,b
  3875  0016D2  D762               	goto	l3284
  3876  0016D4                     u2850:
  3877                           
  3878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  3879  0016D4  503A               	movf	dtoa@s,w,c
  3880  0016D6  103B               	iorwf	dtoa@s+1,w,c
  3881  0016D8  A4D8               	btfss	status,2,c
  3882  0016DA  D003               	goto	u2870
  3883  0016DC  0100               	movlb	0	; () banked
  3884  0016DE  A5AC               	btfss	_flags& (0+255),2,b
  3885  0016E0  D017               	goto	l3318
  3886  0016E2                     u2870:
  3887                           
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  3889  0016E2  0644               	decf	dtoa@i,f,c
  3890  0016E4  A0D8               	btfss	status,0,c
  3891  0016E6  0645               	decf	dtoa@i+1,f,c
  3892                           
  3893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  3894  0016E8  503A               	movf	dtoa@s,w,c
  3895  0016EA  103B               	iorwf	dtoa@s+1,w,c
  3896  0016EC  A4D8               	btfss	status,2,c
  3897  0016EE  D004               	goto	l3314
  3898  0016F0  0E00               	movlw	0
  3899  0016F2  6E35               	movwf	_dtoa$1091+1,c
  3900  0016F4  0E2B               	movlw	43
  3901  0016F6  D003               	goto	L3
  3902  0016F8                     l3314:
  3903  0016F8  0E00               	movlw	0
  3904  0016FA  6E35               	movwf	_dtoa$1091+1,c
  3905  0016FC  0E2D               	movlw	45
  3906  0016FE                     L3:
  3907  0016FE  6E34               	movwf	_dtoa$1091,c
  3908  001700  0E80               	movlw	low _dbuf
  3909  001702  2444               	addwf	dtoa@i,w,c
  3910  001704  6ED9               	movwf	fsr2l,c
  3911  001706  0E01               	movlw	high _dbuf
  3912  001708  2045               	addwfc	dtoa@i+1,w,c
  3913  00170A  6EDA               	movwf	fsr2h,c
  3914  00170C  C034  FFDF         	movff	_dtoa$1091,indf2
  3915  001710                     l3318:
  3916                           
  3917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  3918  001710  C022  F017         	movff	dtoa@fp,pad@fp
  3919  001714  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  3920  001718  0E80               	movlw	low _dbuf
  3921  00171A  2444               	addwf	dtoa@i,w,c
  3922  00171C  6E19               	movwf	pad@buf,c
  3923  00171E  0E01               	movlw	high _dbuf
  3924  001720  2045               	addwfc	dtoa@i+1,w,c
  3925  001722  6E1A               	movwf	pad@buf+1,c
  3926  001724  C038  F01B         	movff	dtoa@w,pad@p
  3927  001728  C039  F01C         	movff	dtoa@w+1,pad@p+1
  3928  00172C  EC6D  F010         	call	_pad	;wreg free
  3929  001730  C017  F022         	movff	?_pad,?_dtoa
  3930  001734  C018  F023         	movff	?_pad+1,?_dtoa+1
  3931  001738  0012               	return		;funcret
  3932  00173A                     __end_of_dtoa:
  3933                           	opt callstack 0
  3934                           
  3935 ;; *************** function _pad *****************
  3936 ;; Defined at:
  3937 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3940 ;;		 -> NULL(0), 
  3941 ;;  buf             2   24[COMRAM] PTR unsigned char 
  3942 ;;		 -> dbuf(32), 
  3943 ;;  p               2   26[COMRAM] int 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  w               2   31[COMRAM] int 
  3946 ;;  i               2   29[COMRAM] int 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  2   22[COMRAM] int 
  3949 ;; Registers used:
  3950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3956 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;Total ram usage:       11 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    8
  3963 ;; This function calls:
  3964 ;;		_fputc
  3965 ;;		_fputs
  3966 ;;		_strlen
  3967 ;; This function is called by:
  3968 ;;		_dtoa
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text12
  3973  0020DA                     __ptext12:
  3974                           	opt callstack 0
  3975  0020DA                     _pad:
  3976                           	opt callstack 17
  3977                           
  3978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3979                           
  3980                           ;incstack = 0
  3981  0020DA  0100               	movlb	0	; () banked
  3982  0020DC  A1AC               	btfss	_flags& (0+255),0,b
  3983  0020DE  D00A               	goto	l3158
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3987  0020E0  C019  F010         	movff	pad@buf,fputs@s
  3988  0020E4  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3989  0020E8  C017  F012         	movff	pad@fp,fputs@fp
  3990  0020EC  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3991  0020F0  EC52  F013         	call	_fputs	;wreg free
  3992  0020F4                     l3158:
  3993                           
  3994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3995  0020F4  BE1C               	btfsc	pad@p+1,7,c
  3996  0020F6  D005               	goto	l3162
  3997  0020F8  C01B  F020         	movff	pad@p,pad@w
  3998  0020FC  C01C  F021         	movff	pad@p+1,pad@w+1
  3999  002100  D004               	goto	l461
  4000  002102                     l3162:
  4001  002102  0E00               	movlw	0
  4002  002104  6E21               	movwf	pad@w+1,c
  4003  002106  0E00               	movlw	0
  4004  002108  6E20               	movwf	pad@w,c
  4005  00210A                     l461:
  4006                           
  4007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4008  00210A  0E00               	movlw	0
  4009  00210C  6E1F               	movwf	pad@i+1,c
  4010  00210E  0E00               	movlw	0
  4011  002110  6E1E               	movwf	pad@i,c
  4012                           
  4013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4014  002112  D00C               	goto	l3168
  4015  002114                     l3164:
  4016                           
  4017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4018  002114  0E00               	movlw	0
  4019  002116  6E08               	movwf	fputc@c+1,c
  4020  002118  0E20               	movlw	32
  4021  00211A  6E07               	movwf	fputc@c,c
  4022  00211C  C017  F009         	movff	pad@fp,fputc@fp
  4023  002120  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4024  002124  EC81  F012         	call	_fputc	;wreg free
  4025                           
  4026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4027  002128  4A1E               	infsnz	pad@i,f,c
  4028  00212A  2A1F               	incf	pad@i+1,f,c
  4029  00212C                     l3168:
  4030                           
  4031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4032  00212C  5020               	movf	pad@w,w,c
  4033  00212E  5C1E               	subwf	pad@i,w,c
  4034  002130  501F               	movf	pad@i+1,w,c
  4035  002132  0A80               	xorlw	128
  4036  002134  6E1D               	movwf	??_pad& (0+255),c
  4037  002136  5021               	movf	pad@w+1,w,c
  4038  002138  0A80               	xorlw	128
  4039  00213A  581D               	subwfb	??_pad& (0+255),w,c
  4040  00213C  A0D8               	btfss	status,0,c
  4041  00213E  D7EA               	goto	l3164
  4042                           
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4044  002140  0100               	movlb	0	; () banked
  4045  002142  B1AC               	btfsc	_flags& (0+255),0,b
  4046  002144  D00A               	goto	l3172
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4050  002146  C019  F010         	movff	pad@buf,fputs@s
  4051  00214A  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4052  00214E  C017  F012         	movff	pad@fp,fputs@fp
  4053  002152  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4054  002156  EC52  F013         	call	_fputs	;wreg free
  4055  00215A                     l3172:
  4056                           
  4057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4058  00215A  C019  F005         	movff	pad@buf,strlen@s
  4059  00215E  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4060  002162  ECB8  F013         	call	_strlen	;wreg free
  4061  002166  5020               	movf	pad@w,w,c
  4062  002168  2405               	addwf	?_strlen,w,c
  4063  00216A  6E17               	movwf	?_pad,c
  4064  00216C  5021               	movf	pad@w+1,w,c
  4065  00216E  2006               	addwfc	?_strlen+1,w,c
  4066  002170  6E18               	movwf	?_pad+1,c
  4067  002172  0012               	return		;funcret
  4068  002174                     __end_of_pad:
  4069                           	opt callstack 0
  4070                           
  4071 ;; *************** function _strlen *****************
  4072 ;; Defined at:
  4073 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4076 ;;		 -> dbuf(32), 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4079 ;;		 -> dbuf(32), 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  2    4[COMRAM] unsigned int 
  4082 ;; Registers used:
  4083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;Total ram usage:        4 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    4
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_pad
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text13
  4104  002770                     __ptext13:
  4105                           	opt callstack 0
  4106  002770                     _strlen:
  4107                           	opt callstack 20
  4108                           
  4109                           ;incstack = 0
  4110  002770  C005  F007         	movff	strlen@s,strlen@a
  4111  002774  C006  F008         	movff	strlen@s+1,strlen@a+1
  4112  002778  D002               	goto	l3148
  4113  00277A                     l3146:
  4114  00277A  4A05               	infsnz	strlen@s,f,c
  4115  00277C  2A06               	incf	strlen@s+1,f,c
  4116  00277E                     l3148:
  4117  00277E  C005  FFD9         	movff	strlen@s,fsr2l
  4118  002782  C006  FFDA         	movff	strlen@s+1,fsr2h
  4119  002786  50DF               	movf	indf2,w,c
  4120  002788  A4D8               	btfss	status,2,c
  4121  00278A  D7F7               	goto	l3146
  4122  00278C  5007               	movf	strlen@a,w,c
  4123  00278E  5C05               	subwf	strlen@s,w,c
  4124  002790  6E05               	movwf	?_strlen,c
  4125  002792  5008               	movf	strlen@a+1,w,c
  4126  002794  5806               	subwfb	strlen@s+1,w,c
  4127  002796  6E06               	movwf	?_strlen+1,c
  4128  002798  0012               	return		;funcret
  4129  00279A                     __end_of_strlen:
  4130                           	opt callstack 0
  4131                           
  4132 ;; *************** function _fputs *****************
  4133 ;; Defined at:
  4134 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4137 ;;		 -> dbuf(32), 
  4138 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4139 ;;		 -> NULL(0), 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  i               2   20[COMRAM] int 
  4142 ;;  c               1   19[COMRAM] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  2   15[COMRAM] int 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;Total ram usage:        7 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    7
  4159 ;; This function calls:
  4160 ;;		_fputc
  4161 ;; This function is called by:
  4162 ;;		_pad
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text14
  4167  0026A4                     __ptext14:
  4168                           	opt callstack 0
  4169  0026A4                     _fputs:
  4170                           	opt callstack 17
  4171                           
  4172                           ;incstack = 0
  4173  0026A4  0E00               	movlw	0
  4174  0026A6  6E16               	movwf	fputs@i+1,c
  4175  0026A8  0E00               	movlw	0
  4176  0026AA  6E15               	movwf	fputs@i,c
  4177  0026AC  D00B               	goto	l3142
  4178  0026AE                     l3138:
  4179  0026AE  C014  F007         	movff	fputs@c,fputc@c
  4180  0026B2  6A08               	clrf	fputc@c+1,c
  4181  0026B4  C012  F009         	movff	fputs@fp,fputc@fp
  4182  0026B8  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4183  0026BC  EC81  F012         	call	_fputc	;wreg free
  4184  0026C0  4A15               	infsnz	fputs@i,f,c
  4185  0026C2  2A16               	incf	fputs@i+1,f,c
  4186  0026C4                     l3142:
  4187  0026C4  5015               	movf	fputs@i,w,c
  4188  0026C6  2410               	addwf	fputs@s,w,c
  4189  0026C8  6ED9               	movwf	fsr2l,c
  4190  0026CA  5016               	movf	fputs@i+1,w,c
  4191  0026CC  2011               	addwfc	fputs@s+1,w,c
  4192  0026CE  6EDA               	movwf	fsr2h,c
  4193  0026D0  50DF               	movf	indf2,w,c
  4194  0026D2  6E14               	movwf	fputs@c,c
  4195  0026D4  5014               	movf	fputs@c,w,c
  4196  0026D6  B4D8               	btfsc	status,2,c
  4197  0026D8  0012               	return	
  4198  0026DA  D7E9               	goto	l3138
  4199  0026DC                     __end_of_fputs:
  4200                           	opt callstack 0
  4201                           
  4202 ;; *************** function _fputc *****************
  4203 ;; Defined at:
  4204 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  c               2    6[COMRAM] int 
  4207 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4208 ;;		 -> NULL(0), 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  2    6[COMRAM] int 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;Total ram usage:        9 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    6
  4227 ;; This function calls:
  4228 ;;		_putch
  4229 ;; This function is called by:
  4230 ;;		_pad
  4231 ;;		_vfpfcnvrt
  4232 ;;		_fputs
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text15
  4237  002502                     __ptext15:
  4238                           	opt callstack 0
  4239  002502                     _fputc:
  4240                           	opt callstack 20
  4241                           
  4242                           ;incstack = 0
  4243  002502  5009               	movf	fputc@fp,w,c
  4244  002504  100A               	iorwf	fputc@fp+1,w,c
  4245  002506  B4D8               	btfsc	status,2,c
  4246  002508  D004               	goto	u2510
  4247  00250A  5009               	movf	fputc@fp,w,c
  4248  00250C  100A               	iorwf	fputc@fp+1,w,c
  4249  00250E  A4D8               	btfss	status,2,c
  4250  002510  D004               	goto	l3128
  4251  002512                     u2510:
  4252  002512  5007               	movf	fputc@c,w,c
  4253  002514  EC25  F014         	call	_putch
  4254  002518  0012               	return	
  4255  00251A                     l3128:
  4256  00251A  EE20 F004          	lfsr	2,4
  4257  00251E  5009               	movf	fputc@fp,w,c
  4258  002520  26D9               	addwf	fsr2l,f,c
  4259  002522  500A               	movf	fputc@fp+1,w,c
  4260  002524  22DA               	addwfc	fsr2h,f,c
  4261  002526  50DE               	movf	postinc2,w,c
  4262  002528  10DE               	iorwf	postinc2,w,c
  4263  00252A  B4D8               	btfsc	status,2,c
  4264  00252C  D016               	goto	u2530
  4265  00252E  EE20 F004          	lfsr	2,4
  4266  002532  5009               	movf	fputc@fp,w,c
  4267  002534  26D9               	addwf	fsr2l,f,c
  4268  002536  500A               	movf	fputc@fp+1,w,c
  4269  002538  22DA               	addwfc	fsr2h,f,c
  4270  00253A  EE10 F002          	lfsr	1,2
  4271  00253E  5009               	movf	fputc@fp,w,c
  4272  002540  26E1               	addwf	fsr1l,f,c
  4273  002542  500A               	movf	fputc@fp+1,w,c
  4274  002544  22E2               	addwfc	fsr1h,f,c
  4275  002546  50DE               	movf	postinc2,w,c
  4276  002548  5CE6               	subwf	postinc1,w,c
  4277  00254A  50E6               	movf	postinc1,w,c
  4278  00254C  0A80               	xorlw	128
  4279  00254E  6E0F               	movwf	(??_fputc+4)& (0+255),c
  4280  002550  50DE               	movf	postinc2,w,c
  4281  002552  0A80               	xorlw	128
  4282  002554  580F               	subwfb	(??_fputc+4)& (0+255),w,c
  4283  002556  B0D8               	btfsc	status,0,c
  4284  002558  0012               	return	
  4285  00255A                     u2530:
  4286  00255A  EE20 F002          	lfsr	2,2
  4287  00255E  5009               	movf	fputc@fp,w,c
  4288  002560  26D9               	addwf	fsr2l,f,c
  4289  002562  500A               	movf	fputc@fp+1,w,c
  4290  002564  22DA               	addwfc	fsr2h,f,c
  4291  002566  2ADE               	incf	postinc2,f,c
  4292  002568  0E00               	movlw	0
  4293  00256A  22DD               	addwfc	postdec2,f,c
  4294  00256C  0012               	return		;funcret
  4295  00256E                     __end_of_fputc:
  4296                           	opt callstack 0
  4297                           
  4298 ;; *************** function _putch *****************
  4299 ;; Defined at:
  4300 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  txData          1    wreg     unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  txData          1    5[COMRAM] unsigned char 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;Total ram usage:        1 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    5
  4321 ;; This function calls:
  4322 ;;		_EUSART1_Write
  4323 ;; This function is called by:
  4324 ;;		_fputc
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text16
  4329  00284A                     __ptext16:
  4330                           	opt callstack 0
  4331  00284A                     _putch:
  4332                           	opt callstack 20
  4333                           
  4334                           ;incstack = 0
  4335                           ;putch@txData stored from wreg
  4336  00284A  6E06               	movwf	putch@txData,c
  4337                           
  4338                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  4339  00284C  5006               	movf	putch@txData,w,c
  4340  00284E  EC6E  F013         	call	_EUSART1_Write
  4341  002852  0012               	return		;funcret
  4342  002854                     __end_of_putch:
  4343                           	opt callstack 0
  4344                           
  4345 ;; *************** function _EUSART1_Write *****************
  4346 ;; Defined at:
  4347 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  txData          1    wreg     unsigned char 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  txData          1    4[COMRAM] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;Total ram usage:        1 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:    4
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_putch
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text17
  4376  0026DC                     __ptext17:
  4377                           	opt callstack 0
  4378  0026DC                     _EUSART1_Write:
  4379                           	opt callstack 20
  4380                           
  4381                           ;incstack = 0
  4382                           ;EUSART1_Write@txData stored from wreg
  4383  0026DC  6E05               	movwf	EUSART1_Write@txData,c
  4384  0026DE                     
  4385                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  4386                           
  4387                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  4388  0026DE  5058               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  4389  0026E0  B4D8               	btfsc	status,2,c
  4390  0026E2  D7FD               	goto	l3102
  4391                           
  4392                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  4393  0026E4  B89D               	btfsc	3997,4,c	;volatile
  4394  0026E6  D003               	goto	l155
  4395                           
  4396                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  4397  0026E8  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4398                           
  4399                           ;mcc_generated_files/eusart1.c: 182:     }
  4400  0026EC  D010               	goto	l3118
  4401  0026EE                     l155:
  4402                           
  4403                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  4404  0026EE  989D               	bcf	3997,4,c	;volatile
  4405                           
  4406                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  4407  0026F0  0E40               	movlw	low _eusart1TxBuffer
  4408  0026F2  245A               	addwf	_eusart1TxHead,w,c	;volatile
  4409  0026F4  6ED9               	movwf	fsr2l,c
  4410  0026F6  6ADA               	clrf	fsr2h,c
  4411  0026F8  0E01               	movlw	high _eusart1TxBuffer
  4412  0026FA  22DA               	addwfc	fsr2h,f,c
  4413  0026FC  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  4414  002700  2A5A               	incf	_eusart1TxHead,f,c	;volatile
  4415                           
  4416                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  4417  002702  0E3F               	movlw	63
  4418  002704  645A               	cpfsgt	_eusart1TxHead,c	;volatile
  4419  002706  D002               	goto	l3116
  4420                           
  4421                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  4422  002708  0E00               	movlw	0
  4423  00270A  6E5A               	movwf	_eusart1TxHead,c	;volatile
  4424  00270C                     l3116:
  4425                           
  4426                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  4427  00270C  0658               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  4428  00270E                     l3118:
  4429                           
  4430                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  4431  00270E  889D               	bsf	3997,4,c	;volatile
  4432  002710  0012               	return		;funcret
  4433  002712                     __end_of_EUSART1_Write:
  4434                           	opt callstack 0
  4435                           
  4436 ;; *************** function _abs *****************
  4437 ;; Defined at:
  4438 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  a               2   22[COMRAM] int 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  2   22[COMRAM] int 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;Total ram usage:        4 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    4
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_dtoa
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text18
  4467  002712                     __ptext18:
  4468                           	opt callstack 0
  4469  002712                     _abs:
  4470                           	opt callstack 21
  4471                           
  4472                           ;incstack = 0
  4473  002712  BE18               	btfsc	abs@a+1,7,c
  4474  002714  D005               	goto	u2600
  4475  002716  5018               	movf	abs@a+1,w,c
  4476  002718  E110               	bnz	l1196
  4477  00271A  0417               	decf	abs@a,w,c
  4478  00271C  B0D8               	btfsc	status,0,c
  4479  00271E  D00D               	goto	l1196
  4480  002720                     u2600:
  4481  002720  C017  F019         	movff	abs@a,??_abs
  4482  002724  C018  F01A         	movff	abs@a+1,??_abs+1
  4483  002728  1E19               	comf	??_abs,f,c
  4484  00272A  1E1A               	comf	??_abs+1,f,c
  4485  00272C  4A19               	infsnz	??_abs,f,c
  4486  00272E  2A1A               	incf	??_abs+1,f,c
  4487  002730  C019  F017         	movff	??_abs,?_abs
  4488  002734  C01A  F018         	movff	??_abs+1,?_abs+1
  4489  002738  0012               	return	
  4490  00273A                     l1196:
  4491  00273A  C017  F017         	movff	abs@a,?_abs
  4492  00273E  C018  F018         	movff	abs@a+1,?_abs+1
  4493  002742  0012               	return		;funcret
  4494  002744                     __end_of_abs:
  4495                           	opt callstack 0
  4496                           
  4497 ;; *************** function ___aomod *****************
  4498 ;; Defined at:
  4499 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  dividend        8    4[COMRAM] long long 
  4502 ;;  divisor         8   12[COMRAM] long long 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  sign            1   21[COMRAM] unsigned char 
  4505 ;;  counter         1   20[COMRAM] unsigned char 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  8    4[COMRAM] long long 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4515 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;Total ram usage:       18 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    4
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_dtoa
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           	psect	text19
  4530  001C8E                     __ptext19:
  4531                           	opt callstack 0
  4532  001C8E                     ___aomod:
  4533                           	opt callstack 21
  4534                           
  4535                           ;incstack = 0
  4536  001C8E  0E00               	movlw	0
  4537  001C90  6E16               	movwf	___aomod@sign,c
  4538  001C92  AE0C               	btfss	___aomod@dividend+7,7,c
  4539  001C94  D012               	goto	l3232
  4540  001C96  1E0C               	comf	___aomod@dividend+7,f,c
  4541  001C98  1E0B               	comf	___aomod@dividend+6,f,c
  4542  001C9A  1E0A               	comf	___aomod@dividend+5,f,c
  4543  001C9C  1E09               	comf	___aomod@dividend+4,f,c
  4544  001C9E  1E08               	comf	___aomod@dividend+3,f,c
  4545  001CA0  1E07               	comf	___aomod@dividend+2,f,c
  4546  001CA2  1E06               	comf	___aomod@dividend+1,f,c
  4547  001CA4  6C05               	negf	___aomod@dividend,c
  4548  001CA6  0E00               	movlw	0
  4549  001CA8  2206               	addwfc	___aomod@dividend+1,f,c
  4550  001CAA  2207               	addwfc	___aomod@dividend+2,f,c
  4551  001CAC  2208               	addwfc	___aomod@dividend+3,f,c
  4552  001CAE  2209               	addwfc	___aomod@dividend+4,f,c
  4553  001CB0  220A               	addwfc	___aomod@dividend+5,f,c
  4554  001CB2  220B               	addwfc	___aomod@dividend+6,f,c
  4555  001CB4  220C               	addwfc	___aomod@dividend+7,f,c
  4556  001CB6  0E01               	movlw	1
  4557  001CB8  6E16               	movwf	___aomod@sign,c
  4558  001CBA                     l3232:
  4559  001CBA  AE14               	btfss	___aomod@divisor+7,7,c
  4560  001CBC  D010               	goto	l3236
  4561  001CBE  1E14               	comf	___aomod@divisor+7,f,c
  4562  001CC0  1E13               	comf	___aomod@divisor+6,f,c
  4563  001CC2  1E12               	comf	___aomod@divisor+5,f,c
  4564  001CC4  1E11               	comf	___aomod@divisor+4,f,c
  4565  001CC6  1E10               	comf	___aomod@divisor+3,f,c
  4566  001CC8  1E0F               	comf	___aomod@divisor+2,f,c
  4567  001CCA  1E0E               	comf	___aomod@divisor+1,f,c
  4568  001CCC  6C0D               	negf	___aomod@divisor,c
  4569  001CCE  0E00               	movlw	0
  4570  001CD0  220E               	addwfc	___aomod@divisor+1,f,c
  4571  001CD2  220F               	addwfc	___aomod@divisor+2,f,c
  4572  001CD4  2210               	addwfc	___aomod@divisor+3,f,c
  4573  001CD6  2211               	addwfc	___aomod@divisor+4,f,c
  4574  001CD8  2212               	addwfc	___aomod@divisor+5,f,c
  4575  001CDA  2213               	addwfc	___aomod@divisor+6,f,c
  4576  001CDC  2214               	addwfc	___aomod@divisor+7,f,c
  4577  001CDE                     l3236:
  4578  001CDE  500D               	movf	___aomod@divisor,w,c
  4579  001CE0  100E               	iorwf	___aomod@divisor+1,w,c
  4580  001CE2  100F               	iorwf	___aomod@divisor+2,w,c
  4581  001CE4  1010               	iorwf	___aomod@divisor+3,w,c
  4582  001CE6  1011               	iorwf	___aomod@divisor+4,w,c
  4583  001CE8  1012               	iorwf	___aomod@divisor+5,w,c
  4584  001CEA  1013               	iorwf	___aomod@divisor+6,w,c
  4585  001CEC  1014               	iorwf	___aomod@divisor+7,w,c
  4586  001CEE  B4D8               	btfsc	status,2,c
  4587  001CF0  D03C               	goto	l3252
  4588  001CF2  0E01               	movlw	1
  4589  001CF4  6E15               	movwf	___aomod@counter,c
  4590  001CF6  D00A               	goto	l3242
  4591  001CF8                     l3240:
  4592  001CF8  90D8               	bcf	status,0,c
  4593  001CFA  360D               	rlcf	___aomod@divisor,f,c
  4594  001CFC  360E               	rlcf	___aomod@divisor+1,f,c
  4595  001CFE  360F               	rlcf	___aomod@divisor+2,f,c
  4596  001D00  3610               	rlcf	___aomod@divisor+3,f,c
  4597  001D02  3611               	rlcf	___aomod@divisor+4,f,c
  4598  001D04  3612               	rlcf	___aomod@divisor+5,f,c
  4599  001D06  3613               	rlcf	___aomod@divisor+6,f,c
  4600  001D08  3614               	rlcf	___aomod@divisor+7,f,c
  4601  001D0A  2A15               	incf	___aomod@counter,f,c
  4602  001D0C                     l3242:
  4603  001D0C  AE14               	btfss	___aomod@divisor+7,7,c
  4604  001D0E  D7F4               	goto	l3240
  4605  001D10                     u2710:
  4606  001D10  500D               	movf	___aomod@divisor,w,c
  4607  001D12  5C05               	subwf	___aomod@dividend,w,c
  4608  001D14  500E               	movf	___aomod@divisor+1,w,c
  4609  001D16  5806               	subwfb	___aomod@dividend+1,w,c
  4610  001D18  500F               	movf	___aomod@divisor+2,w,c
  4611  001D1A  5807               	subwfb	___aomod@dividend+2,w,c
  4612  001D1C  5010               	movf	___aomod@divisor+3,w,c
  4613  001D1E  5808               	subwfb	___aomod@dividend+3,w,c
  4614  001D20  5011               	movf	___aomod@divisor+4,w,c
  4615  001D22  5809               	subwfb	___aomod@dividend+4,w,c
  4616  001D24  5012               	movf	___aomod@divisor+5,w,c
  4617  001D26  580A               	subwfb	___aomod@dividend+5,w,c
  4618  001D28  5013               	movf	___aomod@divisor+6,w,c
  4619  001D2A  580B               	subwfb	___aomod@dividend+6,w,c
  4620  001D2C  5014               	movf	___aomod@divisor+7,w,c
  4621  001D2E  580C               	subwfb	___aomod@dividend+7,w,c
  4622  001D30  A0D8               	btfss	status,0,c
  4623  001D32  D010               	goto	l3248
  4624  001D34  500D               	movf	___aomod@divisor,w,c
  4625  001D36  5E05               	subwf	___aomod@dividend,f,c
  4626  001D38  500E               	movf	___aomod@divisor+1,w,c
  4627  001D3A  5A06               	subwfb	___aomod@dividend+1,f,c
  4628  001D3C  500F               	movf	___aomod@divisor+2,w,c
  4629  001D3E  5A07               	subwfb	___aomod@dividend+2,f,c
  4630  001D40  5010               	movf	___aomod@divisor+3,w,c
  4631  001D42  5A08               	subwfb	___aomod@dividend+3,f,c
  4632  001D44  5011               	movf	___aomod@divisor+4,w,c
  4633  001D46  5A09               	subwfb	___aomod@dividend+4,f,c
  4634  001D48  5012               	movf	___aomod@divisor+5,w,c
  4635  001D4A  5A0A               	subwfb	___aomod@dividend+5,f,c
  4636  001D4C  5013               	movf	___aomod@divisor+6,w,c
  4637  001D4E  5A0B               	subwfb	___aomod@dividend+6,f,c
  4638  001D50  5014               	movf	___aomod@divisor+7,w,c
  4639  001D52  5A0C               	subwfb	___aomod@dividend+7,f,c
  4640  001D54                     l3248:
  4641  001D54  90D8               	bcf	status,0,c
  4642  001D56  3214               	rrcf	___aomod@divisor+7,f,c
  4643  001D58  3213               	rrcf	___aomod@divisor+6,f,c
  4644  001D5A  3212               	rrcf	___aomod@divisor+5,f,c
  4645  001D5C  3211               	rrcf	___aomod@divisor+4,f,c
  4646  001D5E  3210               	rrcf	___aomod@divisor+3,f,c
  4647  001D60  320F               	rrcf	___aomod@divisor+2,f,c
  4648  001D62  320E               	rrcf	___aomod@divisor+1,f,c
  4649  001D64  320D               	rrcf	___aomod@divisor,f,c
  4650  001D66  2E15               	decfsz	___aomod@counter,f,c
  4651  001D68  D7D3               	goto	u2710
  4652  001D6A                     l3252:
  4653  001D6A  5016               	movf	___aomod@sign,w,c
  4654  001D6C  B4D8               	btfsc	status,2,c
  4655  001D6E  D010               	goto	l3256
  4656  001D70  1E0C               	comf	___aomod@dividend+7,f,c
  4657  001D72  1E0B               	comf	___aomod@dividend+6,f,c
  4658  001D74  1E0A               	comf	___aomod@dividend+5,f,c
  4659  001D76  1E09               	comf	___aomod@dividend+4,f,c
  4660  001D78  1E08               	comf	___aomod@dividend+3,f,c
  4661  001D7A  1E07               	comf	___aomod@dividend+2,f,c
  4662  001D7C  1E06               	comf	___aomod@dividend+1,f,c
  4663  001D7E  6C05               	negf	___aomod@dividend,c
  4664  001D80  0E00               	movlw	0
  4665  001D82  2206               	addwfc	___aomod@dividend+1,f,c
  4666  001D84  2207               	addwfc	___aomod@dividend+2,f,c
  4667  001D86  2208               	addwfc	___aomod@dividend+3,f,c
  4668  001D88  2209               	addwfc	___aomod@dividend+4,f,c
  4669  001D8A  220A               	addwfc	___aomod@dividend+5,f,c
  4670  001D8C  220B               	addwfc	___aomod@dividend+6,f,c
  4671  001D8E  220C               	addwfc	___aomod@dividend+7,f,c
  4672  001D90                     l3256:
  4673  001D90  C005  F005         	movff	___aomod@dividend,?___aomod
  4674  001D94  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  4675  001D98  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  4676  001D9C  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  4677  001DA0  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  4678  001DA4  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  4679  001DA8  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  4680  001DAC  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  4681  001DB0  0012               	return		;funcret
  4682  001DB2                     __end_of___aomod:
  4683                           	opt callstack 0
  4684                           
  4685 ;; *************** function ___aodiv *****************
  4686 ;; Defined at:
  4687 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  dividend        8    4[COMRAM] long long 
  4690 ;;  divisor         8   12[COMRAM] long long 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  quotient        8   22[COMRAM] long long 
  4693 ;;  sign            1   21[COMRAM] unsigned char 
  4694 ;;  counter         1   20[COMRAM] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  8    4[COMRAM] long long 
  4697 ;; Registers used:
  4698 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4704 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;Total ram usage:       26 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:    4
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_dtoa
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text20
  4719  001B46                     __ptext20:
  4720                           	opt callstack 0
  4721  001B46                     ___aodiv:
  4722                           	opt callstack 21
  4723                           
  4724                           ;incstack = 0
  4725  001B46  0E00               	movlw	0
  4726  001B48  6E16               	movwf	___aodiv@sign,c
  4727  001B4A  AE14               	btfss	___aodiv@divisor+7,7,c
  4728  001B4C  D012               	goto	l3188
  4729  001B4E  1E14               	comf	___aodiv@divisor+7,f,c
  4730  001B50  1E13               	comf	___aodiv@divisor+6,f,c
  4731  001B52  1E12               	comf	___aodiv@divisor+5,f,c
  4732  001B54  1E11               	comf	___aodiv@divisor+4,f,c
  4733  001B56  1E10               	comf	___aodiv@divisor+3,f,c
  4734  001B58  1E0F               	comf	___aodiv@divisor+2,f,c
  4735  001B5A  1E0E               	comf	___aodiv@divisor+1,f,c
  4736  001B5C  6C0D               	negf	___aodiv@divisor,c
  4737  001B5E  0E00               	movlw	0
  4738  001B60  220E               	addwfc	___aodiv@divisor+1,f,c
  4739  001B62  220F               	addwfc	___aodiv@divisor+2,f,c
  4740  001B64  2210               	addwfc	___aodiv@divisor+3,f,c
  4741  001B66  2211               	addwfc	___aodiv@divisor+4,f,c
  4742  001B68  2212               	addwfc	___aodiv@divisor+5,f,c
  4743  001B6A  2213               	addwfc	___aodiv@divisor+6,f,c
  4744  001B6C  2214               	addwfc	___aodiv@divisor+7,f,c
  4745  001B6E  0E01               	movlw	1
  4746  001B70  6E16               	movwf	___aodiv@sign,c
  4747  001B72                     l3188:
  4748  001B72  AE0C               	btfss	___aodiv@dividend+7,7,c
  4749  001B74  D012               	goto	l3194
  4750  001B76  1E0C               	comf	___aodiv@dividend+7,f,c
  4751  001B78  1E0B               	comf	___aodiv@dividend+6,f,c
  4752  001B7A  1E0A               	comf	___aodiv@dividend+5,f,c
  4753  001B7C  1E09               	comf	___aodiv@dividend+4,f,c
  4754  001B7E  1E08               	comf	___aodiv@dividend+3,f,c
  4755  001B80  1E07               	comf	___aodiv@dividend+2,f,c
  4756  001B82  1E06               	comf	___aodiv@dividend+1,f,c
  4757  001B84  6C05               	negf	___aodiv@dividend,c
  4758  001B86  0E00               	movlw	0
  4759  001B88  2206               	addwfc	___aodiv@dividend+1,f,c
  4760  001B8A  2207               	addwfc	___aodiv@dividend+2,f,c
  4761  001B8C  2208               	addwfc	___aodiv@dividend+3,f,c
  4762  001B8E  2209               	addwfc	___aodiv@dividend+4,f,c
  4763  001B90  220A               	addwfc	___aodiv@dividend+5,f,c
  4764  001B92  220B               	addwfc	___aodiv@dividend+6,f,c
  4765  001B94  220C               	addwfc	___aodiv@dividend+7,f,c
  4766  001B96  0E01               	movlw	1
  4767  001B98  1A16               	xorwf	___aodiv@sign,f,c
  4768  001B9A                     l3194:
  4769  001B9A  EE20  F017         	lfsr	2,___aodiv@quotient
  4770  001B9E  0E07               	movlw	7
  4771  001BA0                     u2631:
  4772  001BA0  6ADE               	clrf	postinc2,c
  4773  001BA2  06E8               	decf	wreg,f,c
  4774  001BA4  E2FD               	bc	u2631
  4775  001BA6  500D               	movf	___aodiv@divisor,w,c
  4776  001BA8  100E               	iorwf	___aodiv@divisor+1,w,c
  4777  001BAA  100F               	iorwf	___aodiv@divisor+2,w,c
  4778  001BAC  1010               	iorwf	___aodiv@divisor+3,w,c
  4779  001BAE  1011               	iorwf	___aodiv@divisor+4,w,c
  4780  001BB0  1012               	iorwf	___aodiv@divisor+5,w,c
  4781  001BB2  1013               	iorwf	___aodiv@divisor+6,w,c
  4782  001BB4  1014               	iorwf	___aodiv@divisor+7,w,c
  4783  001BB6  B4D8               	btfsc	status,2,c
  4784  001BB8  D046               	goto	l3216
  4785  001BBA  0E01               	movlw	1
  4786  001BBC  6E15               	movwf	___aodiv@counter,c
  4787  001BBE  D00A               	goto	l3202
  4788  001BC0                     l3200:
  4789  001BC0  90D8               	bcf	status,0,c
  4790  001BC2  360D               	rlcf	___aodiv@divisor,f,c
  4791  001BC4  360E               	rlcf	___aodiv@divisor+1,f,c
  4792  001BC6  360F               	rlcf	___aodiv@divisor+2,f,c
  4793  001BC8  3610               	rlcf	___aodiv@divisor+3,f,c
  4794  001BCA  3611               	rlcf	___aodiv@divisor+4,f,c
  4795  001BCC  3612               	rlcf	___aodiv@divisor+5,f,c
  4796  001BCE  3613               	rlcf	___aodiv@divisor+6,f,c
  4797  001BD0  3614               	rlcf	___aodiv@divisor+7,f,c
  4798  001BD2  2A15               	incf	___aodiv@counter,f,c
  4799  001BD4                     l3202:
  4800  001BD4  AE14               	btfss	___aodiv@divisor+7,7,c
  4801  001BD6  D7F4               	goto	l3200
  4802  001BD8                     u2650:
  4803  001BD8  90D8               	bcf	status,0,c
  4804  001BDA  3617               	rlcf	___aodiv@quotient,f,c
  4805  001BDC  3618               	rlcf	___aodiv@quotient+1,f,c
  4806  001BDE  3619               	rlcf	___aodiv@quotient+2,f,c
  4807  001BE0  361A               	rlcf	___aodiv@quotient+3,f,c
  4808  001BE2  361B               	rlcf	___aodiv@quotient+4,f,c
  4809  001BE4  361C               	rlcf	___aodiv@quotient+5,f,c
  4810  001BE6  361D               	rlcf	___aodiv@quotient+6,f,c
  4811  001BE8  361E               	rlcf	___aodiv@quotient+7,f,c
  4812  001BEA  500D               	movf	___aodiv@divisor,w,c
  4813  001BEC  5C05               	subwf	___aodiv@dividend,w,c
  4814  001BEE  500E               	movf	___aodiv@divisor+1,w,c
  4815  001BF0  5806               	subwfb	___aodiv@dividend+1,w,c
  4816  001BF2  500F               	movf	___aodiv@divisor+2,w,c
  4817  001BF4  5807               	subwfb	___aodiv@dividend+2,w,c
  4818  001BF6  5010               	movf	___aodiv@divisor+3,w,c
  4819  001BF8  5808               	subwfb	___aodiv@dividend+3,w,c
  4820  001BFA  5011               	movf	___aodiv@divisor+4,w,c
  4821  001BFC  5809               	subwfb	___aodiv@dividend+4,w,c
  4822  001BFE  5012               	movf	___aodiv@divisor+5,w,c
  4823  001C00  580A               	subwfb	___aodiv@dividend+5,w,c
  4824  001C02  5013               	movf	___aodiv@divisor+6,w,c
  4825  001C04  580B               	subwfb	___aodiv@dividend+6,w,c
  4826  001C06  5014               	movf	___aodiv@divisor+7,w,c
  4827  001C08  580C               	subwfb	___aodiv@dividend+7,w,c
  4828  001C0A  A0D8               	btfss	status,0,c
  4829  001C0C  D011               	goto	l3212
  4830  001C0E  500D               	movf	___aodiv@divisor,w,c
  4831  001C10  5E05               	subwf	___aodiv@dividend,f,c
  4832  001C12  500E               	movf	___aodiv@divisor+1,w,c
  4833  001C14  5A06               	subwfb	___aodiv@dividend+1,f,c
  4834  001C16  500F               	movf	___aodiv@divisor+2,w,c
  4835  001C18  5A07               	subwfb	___aodiv@dividend+2,f,c
  4836  001C1A  5010               	movf	___aodiv@divisor+3,w,c
  4837  001C1C  5A08               	subwfb	___aodiv@dividend+3,f,c
  4838  001C1E  5011               	movf	___aodiv@divisor+4,w,c
  4839  001C20  5A09               	subwfb	___aodiv@dividend+4,f,c
  4840  001C22  5012               	movf	___aodiv@divisor+5,w,c
  4841  001C24  5A0A               	subwfb	___aodiv@dividend+5,f,c
  4842  001C26  5013               	movf	___aodiv@divisor+6,w,c
  4843  001C28  5A0B               	subwfb	___aodiv@dividend+6,f,c
  4844  001C2A  5014               	movf	___aodiv@divisor+7,w,c
  4845  001C2C  5A0C               	subwfb	___aodiv@dividend+7,f,c
  4846  001C2E  8017               	bsf	___aodiv@quotient,0,c
  4847  001C30                     l3212:
  4848  001C30  90D8               	bcf	status,0,c
  4849  001C32  3214               	rrcf	___aodiv@divisor+7,f,c
  4850  001C34  3213               	rrcf	___aodiv@divisor+6,f,c
  4851  001C36  3212               	rrcf	___aodiv@divisor+5,f,c
  4852  001C38  3211               	rrcf	___aodiv@divisor+4,f,c
  4853  001C3A  3210               	rrcf	___aodiv@divisor+3,f,c
  4854  001C3C  320F               	rrcf	___aodiv@divisor+2,f,c
  4855  001C3E  320E               	rrcf	___aodiv@divisor+1,f,c
  4856  001C40  320D               	rrcf	___aodiv@divisor,f,c
  4857  001C42  2E15               	decfsz	___aodiv@counter,f,c
  4858  001C44  D7C9               	goto	u2650
  4859  001C46                     l3216:
  4860  001C46  5016               	movf	___aodiv@sign,w,c
  4861  001C48  B4D8               	btfsc	status,2,c
  4862  001C4A  D010               	goto	l3220
  4863  001C4C  1E1E               	comf	___aodiv@quotient+7,f,c
  4864  001C4E  1E1D               	comf	___aodiv@quotient+6,f,c
  4865  001C50  1E1C               	comf	___aodiv@quotient+5,f,c
  4866  001C52  1E1B               	comf	___aodiv@quotient+4,f,c
  4867  001C54  1E1A               	comf	___aodiv@quotient+3,f,c
  4868  001C56  1E19               	comf	___aodiv@quotient+2,f,c
  4869  001C58  1E18               	comf	___aodiv@quotient+1,f,c
  4870  001C5A  6C17               	negf	___aodiv@quotient,c
  4871  001C5C  0E00               	movlw	0
  4872  001C5E  2218               	addwfc	___aodiv@quotient+1,f,c
  4873  001C60  2219               	addwfc	___aodiv@quotient+2,f,c
  4874  001C62  221A               	addwfc	___aodiv@quotient+3,f,c
  4875  001C64  221B               	addwfc	___aodiv@quotient+4,f,c
  4876  001C66  221C               	addwfc	___aodiv@quotient+5,f,c
  4877  001C68  221D               	addwfc	___aodiv@quotient+6,f,c
  4878  001C6A  221E               	addwfc	___aodiv@quotient+7,f,c
  4879  001C6C                     l3220:
  4880  001C6C  C017  F005         	movff	___aodiv@quotient,?___aodiv
  4881  001C70  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  4882  001C74  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  4883  001C78  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  4884  001C7C  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  4885  001C80  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  4886  001C84  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  4887  001C88  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  4888  001C8C  0012               	return		;funcret
  4889  001C8E                     __end_of___aodiv:
  4890                           	opt callstack 0
  4891                           
  4892 ;; *************** function ___lmul *****************
  4893 ;; Defined at:
  4894 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  multiplier      4    4[COMRAM] unsigned long 
  4897 ;;  multiplicand    4    8[COMRAM] unsigned long 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  product         4   12[COMRAM] unsigned long 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  4    4[COMRAM] unsigned long 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4909 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;Total ram usage:       12 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:    4
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_getReading
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text21
  4924  0025C6                     __ptext21:
  4925                           	opt callstack 0
  4926  0025C6                     ___lmul:
  4927                           	opt callstack 25
  4928                           
  4929                           ;incstack = 0
  4930  0025C6  0E00               	movlw	0
  4931  0025C8  6E0D               	movwf	___lmul@product,c
  4932  0025CA  0E00               	movlw	0
  4933  0025CC  6E0E               	movwf	___lmul@product+1,c
  4934  0025CE  0E00               	movlw	0
  4935  0025D0  6E0F               	movwf	___lmul@product+2,c
  4936  0025D2  0E00               	movlw	0
  4937  0025D4  6E10               	movwf	___lmul@product+3,c
  4938  0025D6                     l3570:
  4939  0025D6  A005               	btfss	___lmul@multiplier,0,c
  4940  0025D8  D008               	goto	l3574
  4941  0025DA  5009               	movf	___lmul@multiplicand,w,c
  4942  0025DC  260D               	addwf	___lmul@product,f,c
  4943  0025DE  500A               	movf	___lmul@multiplicand+1,w,c
  4944  0025E0  220E               	addwfc	___lmul@product+1,f,c
  4945  0025E2  500B               	movf	___lmul@multiplicand+2,w,c
  4946  0025E4  220F               	addwfc	___lmul@product+2,f,c
  4947  0025E6  500C               	movf	___lmul@multiplicand+3,w,c
  4948  0025E8  2210               	addwfc	___lmul@product+3,f,c
  4949  0025EA                     l3574:
  4950  0025EA  90D8               	bcf	status,0,c
  4951  0025EC  3609               	rlcf	___lmul@multiplicand,f,c
  4952  0025EE  360A               	rlcf	___lmul@multiplicand+1,f,c
  4953  0025F0  360B               	rlcf	___lmul@multiplicand+2,f,c
  4954  0025F2  360C               	rlcf	___lmul@multiplicand+3,f,c
  4955  0025F4  90D8               	bcf	status,0,c
  4956  0025F6  3208               	rrcf	___lmul@multiplier+3,f,c
  4957  0025F8  3207               	rrcf	___lmul@multiplier+2,f,c
  4958  0025FA  3206               	rrcf	___lmul@multiplier+1,f,c
  4959  0025FC  3205               	rrcf	___lmul@multiplier,f,c
  4960  0025FE  5005               	movf	___lmul@multiplier,w,c
  4961  002600  1006               	iorwf	___lmul@multiplier+1,w,c
  4962  002602  1007               	iorwf	___lmul@multiplier+2,w,c
  4963  002604  1008               	iorwf	___lmul@multiplier+3,w,c
  4964  002606  A4D8               	btfss	status,2,c
  4965  002608  D7E6               	goto	l3570
  4966  00260A  C00D  F005         	movff	___lmul@product,?___lmul
  4967  00260E  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  4968  002612  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  4969  002616  C010  F008         	movff	___lmul@product+3,?___lmul+3
  4970  00261A  0012               	return		;funcret
  4971  00261C                     __end_of___lmul:
  4972                           	opt callstack 0
  4973                           
  4974 ;; *************** function ___lldiv *****************
  4975 ;; Defined at:
  4976 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  dividend        4    4[COMRAM] unsigned long 
  4979 ;;  divisor         4    8[COMRAM] unsigned long 
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;  quotient        4   12[COMRAM] unsigned long 
  4982 ;;  counter         1   16[COMRAM] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  4    4[COMRAM] unsigned long 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2, status,0
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4992 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;Total ram usage:       13 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; Hardware stack levels required when called:    4
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		_getReading
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           	psect	text22
  5007  002322                     __ptext22:
  5008                           	opt callstack 0
  5009  002322                     ___lldiv:
  5010                           	opt callstack 25
  5011                           
  5012                           ;incstack = 0
  5013  002322  0E00               	movlw	0
  5014  002324  6E0D               	movwf	___lldiv@quotient,c
  5015  002326  0E00               	movlw	0
  5016  002328  6E0E               	movwf	___lldiv@quotient+1,c
  5017  00232A  0E00               	movlw	0
  5018  00232C  6E0F               	movwf	___lldiv@quotient+2,c
  5019  00232E  0E00               	movlw	0
  5020  002330  6E10               	movwf	___lldiv@quotient+3,c
  5021  002332  5009               	movf	___lldiv@divisor,w,c
  5022  002334  100A               	iorwf	___lldiv@divisor+1,w,c
  5023  002336  100B               	iorwf	___lldiv@divisor+2,w,c
  5024  002338  100C               	iorwf	___lldiv@divisor+3,w,c
  5025  00233A  B4D8               	btfsc	status,2,c
  5026  00233C  D02A               	goto	l548
  5027  00233E  0E01               	movlw	1
  5028  002340  6E11               	movwf	___lldiv@counter,c
  5029  002342  D006               	goto	l3586
  5030  002344                     l3584:
  5031  002344  90D8               	bcf	status,0,c
  5032  002346  3609               	rlcf	___lldiv@divisor,f,c
  5033  002348  360A               	rlcf	___lldiv@divisor+1,f,c
  5034  00234A  360B               	rlcf	___lldiv@divisor+2,f,c
  5035  00234C  360C               	rlcf	___lldiv@divisor+3,f,c
  5036  00234E  2A11               	incf	___lldiv@counter,f,c
  5037  002350                     l3586:
  5038  002350  AE0C               	btfss	___lldiv@divisor+3,7,c
  5039  002352  D7F8               	goto	l3584
  5040  002354                     u3310:
  5041  002354  90D8               	bcf	status,0,c
  5042  002356  360D               	rlcf	___lldiv@quotient,f,c
  5043  002358  360E               	rlcf	___lldiv@quotient+1,f,c
  5044  00235A  360F               	rlcf	___lldiv@quotient+2,f,c
  5045  00235C  3610               	rlcf	___lldiv@quotient+3,f,c
  5046  00235E  5009               	movf	___lldiv@divisor,w,c
  5047  002360  5C05               	subwf	___lldiv@dividend,w,c
  5048  002362  500A               	movf	___lldiv@divisor+1,w,c
  5049  002364  5806               	subwfb	___lldiv@dividend+1,w,c
  5050  002366  500B               	movf	___lldiv@divisor+2,w,c
  5051  002368  5807               	subwfb	___lldiv@dividend+2,w,c
  5052  00236A  500C               	movf	___lldiv@divisor+3,w,c
  5053  00236C  5808               	subwfb	___lldiv@dividend+3,w,c
  5054  00236E  A0D8               	btfss	status,0,c
  5055  002370  D009               	goto	l3596
  5056  002372  5009               	movf	___lldiv@divisor,w,c
  5057  002374  5E05               	subwf	___lldiv@dividend,f,c
  5058  002376  500A               	movf	___lldiv@divisor+1,w,c
  5059  002378  5A06               	subwfb	___lldiv@dividend+1,f,c
  5060  00237A  500B               	movf	___lldiv@divisor+2,w,c
  5061  00237C  5A07               	subwfb	___lldiv@dividend+2,f,c
  5062  00237E  500C               	movf	___lldiv@divisor+3,w,c
  5063  002380  5A08               	subwfb	___lldiv@dividend+3,f,c
  5064  002382  800D               	bsf	___lldiv@quotient,0,c
  5065  002384                     l3596:
  5066  002384  90D8               	bcf	status,0,c
  5067  002386  320C               	rrcf	___lldiv@divisor+3,f,c
  5068  002388  320B               	rrcf	___lldiv@divisor+2,f,c
  5069  00238A  320A               	rrcf	___lldiv@divisor+1,f,c
  5070  00238C  3209               	rrcf	___lldiv@divisor,f,c
  5071  00238E  2E11               	decfsz	___lldiv@counter,f,c
  5072  002390  D7E1               	goto	u3310
  5073  002392                     l548:
  5074  002392  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  5075  002396  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  5076  00239A  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  5077  00239E  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  5078  0023A2  0012               	return		;funcret
  5079  0023A4                     __end_of___lldiv:
  5080                           	opt callstack 0
  5081                           
  5082 ;; *************** function ___almod *****************
  5083 ;; Defined at:
  5084 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\almod.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  dividend        4    4[COMRAM] long 
  5087 ;;  divisor         4    8[COMRAM] long 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  sign            1   13[COMRAM] unsigned char 
  5090 ;;  counter         1   12[COMRAM] unsigned char 
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  4    4[COMRAM] long 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5100 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;Total ram usage:       10 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    4
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_getReading
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text23
  5115  00202E                     __ptext23:
  5116                           	opt callstack 0
  5117  00202E                     ___almod:
  5118                           	opt callstack 25
  5119                           
  5120                           ;incstack = 0
  5121  00202E  0E00               	movlw	0
  5122  002030  6E0E               	movwf	___almod@sign,c
  5123  002032  AE08               	btfss	___almod@dividend+3,7,c
  5124  002034  D00A               	goto	l3652
  5125  002036  1E08               	comf	___almod@dividend+3,f,c
  5126  002038  1E07               	comf	___almod@dividend+2,f,c
  5127  00203A  1E06               	comf	___almod@dividend+1,f,c
  5128  00203C  6C05               	negf	___almod@dividend,c
  5129  00203E  0E00               	movlw	0
  5130  002040  2206               	addwfc	___almod@dividend+1,f,c
  5131  002042  2207               	addwfc	___almod@dividend+2,f,c
  5132  002044  2208               	addwfc	___almod@dividend+3,f,c
  5133  002046  0E01               	movlw	1
  5134  002048  6E0E               	movwf	___almod@sign,c
  5135  00204A                     l3652:
  5136  00204A  AE0C               	btfss	___almod@divisor+3,7,c
  5137  00204C  D008               	goto	l3656
  5138  00204E  1E0C               	comf	___almod@divisor+3,f,c
  5139  002050  1E0B               	comf	___almod@divisor+2,f,c
  5140  002052  1E0A               	comf	___almod@divisor+1,f,c
  5141  002054  6C09               	negf	___almod@divisor,c
  5142  002056  0E00               	movlw	0
  5143  002058  220A               	addwfc	___almod@divisor+1,f,c
  5144  00205A  220B               	addwfc	___almod@divisor+2,f,c
  5145  00205C  220C               	addwfc	___almod@divisor+3,f,c
  5146  00205E                     l3656:
  5147  00205E  5009               	movf	___almod@divisor,w,c
  5148  002060  100A               	iorwf	___almod@divisor+1,w,c
  5149  002062  100B               	iorwf	___almod@divisor+2,w,c
  5150  002064  100C               	iorwf	___almod@divisor+3,w,c
  5151  002066  B4D8               	btfsc	status,2,c
  5152  002068  D024               	goto	l3672
  5153  00206A  0E01               	movlw	1
  5154  00206C  6E0D               	movwf	___almod@counter,c
  5155  00206E  D006               	goto	l3662
  5156  002070                     l3660:
  5157  002070  90D8               	bcf	status,0,c
  5158  002072  3609               	rlcf	___almod@divisor,f,c
  5159  002074  360A               	rlcf	___almod@divisor+1,f,c
  5160  002076  360B               	rlcf	___almod@divisor+2,f,c
  5161  002078  360C               	rlcf	___almod@divisor+3,f,c
  5162  00207A  2A0D               	incf	___almod@counter,f,c
  5163  00207C                     l3662:
  5164  00207C  AE0C               	btfss	___almod@divisor+3,7,c
  5165  00207E  D7F8               	goto	l3660
  5166  002080                     u3420:
  5167  002080  5009               	movf	___almod@divisor,w,c
  5168  002082  5C05               	subwf	___almod@dividend,w,c
  5169  002084  500A               	movf	___almod@divisor+1,w,c
  5170  002086  5806               	subwfb	___almod@dividend+1,w,c
  5171  002088  500B               	movf	___almod@divisor+2,w,c
  5172  00208A  5807               	subwfb	___almod@dividend+2,w,c
  5173  00208C  500C               	movf	___almod@divisor+3,w,c
  5174  00208E  5808               	subwfb	___almod@dividend+3,w,c
  5175  002090  A0D8               	btfss	status,0,c
  5176  002092  D008               	goto	l3668
  5177  002094  5009               	movf	___almod@divisor,w,c
  5178  002096  5E05               	subwf	___almod@dividend,f,c
  5179  002098  500A               	movf	___almod@divisor+1,w,c
  5180  00209A  5A06               	subwfb	___almod@dividend+1,f,c
  5181  00209C  500B               	movf	___almod@divisor+2,w,c
  5182  00209E  5A07               	subwfb	___almod@dividend+2,f,c
  5183  0020A0  500C               	movf	___almod@divisor+3,w,c
  5184  0020A2  5A08               	subwfb	___almod@dividend+3,f,c
  5185  0020A4                     l3668:
  5186  0020A4  90D8               	bcf	status,0,c
  5187  0020A6  320C               	rrcf	___almod@divisor+3,f,c
  5188  0020A8  320B               	rrcf	___almod@divisor+2,f,c
  5189  0020AA  320A               	rrcf	___almod@divisor+1,f,c
  5190  0020AC  3209               	rrcf	___almod@divisor,f,c
  5191  0020AE  2E0D               	decfsz	___almod@counter,f,c
  5192  0020B0  D7E7               	goto	u3420
  5193  0020B2                     l3672:
  5194  0020B2  500E               	movf	___almod@sign,w,c
  5195  0020B4  B4D8               	btfsc	status,2,c
  5196  0020B6  D008               	goto	l3676
  5197  0020B8  1E08               	comf	___almod@dividend+3,f,c
  5198  0020BA  1E07               	comf	___almod@dividend+2,f,c
  5199  0020BC  1E06               	comf	___almod@dividend+1,f,c
  5200  0020BE  6C05               	negf	___almod@dividend,c
  5201  0020C0  0E00               	movlw	0
  5202  0020C2  2206               	addwfc	___almod@dividend+1,f,c
  5203  0020C4  2207               	addwfc	___almod@dividend+2,f,c
  5204  0020C6  2208               	addwfc	___almod@dividend+3,f,c
  5205  0020C8                     l3676:
  5206  0020C8  C005  F005         	movff	___almod@dividend,?___almod
  5207  0020CC  C006  F006         	movff	___almod@dividend+1,?___almod+1
  5208  0020D0  C007  F007         	movff	___almod@dividend+2,?___almod+2
  5209  0020D4  C008  F008         	movff	___almod@dividend+3,?___almod+3
  5210  0020D8  0012               	return		;funcret
  5211  0020DA                     __end_of___almod:
  5212                           	opt callstack 0
  5213                           
  5214 ;; *************** function ___aldiv *****************
  5215 ;; Defined at:
  5216 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  dividend        4    4[COMRAM] long 
  5219 ;;  divisor         4    8[COMRAM] long 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  quotient        4   14[COMRAM] long 
  5222 ;;  sign            1   13[COMRAM] unsigned char 
  5223 ;;  counter         1   12[COMRAM] unsigned char 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  4    4[COMRAM] long 
  5226 ;; Registers used:
  5227 ;;		wreg, status,2, status,0
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5233 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;Total ram usage:       14 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    4
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		_getReading
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text24
  5248  001F62                     __ptext24:
  5249                           	opt callstack 0
  5250  001F62                     ___aldiv:
  5251                           	opt callstack 25
  5252                           
  5253                           ;incstack = 0
  5254  001F62  0E00               	movlw	0
  5255  001F64  6E0E               	movwf	___aldiv@sign,c
  5256  001F66  AE0C               	btfss	___aldiv@divisor+3,7,c
  5257  001F68  D00A               	goto	l3608
  5258  001F6A  1E0C               	comf	___aldiv@divisor+3,f,c
  5259  001F6C  1E0B               	comf	___aldiv@divisor+2,f,c
  5260  001F6E  1E0A               	comf	___aldiv@divisor+1,f,c
  5261  001F70  6C09               	negf	___aldiv@divisor,c
  5262  001F72  0E00               	movlw	0
  5263  001F74  220A               	addwfc	___aldiv@divisor+1,f,c
  5264  001F76  220B               	addwfc	___aldiv@divisor+2,f,c
  5265  001F78  220C               	addwfc	___aldiv@divisor+3,f,c
  5266  001F7A  0E01               	movlw	1
  5267  001F7C  6E0E               	movwf	___aldiv@sign,c
  5268  001F7E                     l3608:
  5269  001F7E  AE08               	btfss	___aldiv@dividend+3,7,c
  5270  001F80  D00A               	goto	l3614
  5271  001F82  1E08               	comf	___aldiv@dividend+3,f,c
  5272  001F84  1E07               	comf	___aldiv@dividend+2,f,c
  5273  001F86  1E06               	comf	___aldiv@dividend+1,f,c
  5274  001F88  6C05               	negf	___aldiv@dividend,c
  5275  001F8A  0E00               	movlw	0
  5276  001F8C  2206               	addwfc	___aldiv@dividend+1,f,c
  5277  001F8E  2207               	addwfc	___aldiv@dividend+2,f,c
  5278  001F90  2208               	addwfc	___aldiv@dividend+3,f,c
  5279  001F92  0E01               	movlw	1
  5280  001F94  1A0E               	xorwf	___aldiv@sign,f,c
  5281  001F96                     l3614:
  5282  001F96  0E00               	movlw	0
  5283  001F98  6E0F               	movwf	___aldiv@quotient,c
  5284  001F9A  0E00               	movlw	0
  5285  001F9C  6E10               	movwf	___aldiv@quotient+1,c
  5286  001F9E  0E00               	movlw	0
  5287  001FA0  6E11               	movwf	___aldiv@quotient+2,c
  5288  001FA2  0E00               	movlw	0
  5289  001FA4  6E12               	movwf	___aldiv@quotient+3,c
  5290  001FA6  5009               	movf	___aldiv@divisor,w,c
  5291  001FA8  100A               	iorwf	___aldiv@divisor+1,w,c
  5292  001FAA  100B               	iorwf	___aldiv@divisor+2,w,c
  5293  001FAC  100C               	iorwf	___aldiv@divisor+3,w,c
  5294  001FAE  B4D8               	btfsc	status,2,c
  5295  001FB0  D02A               	goto	l3636
  5296  001FB2  0E01               	movlw	1
  5297  001FB4  6E0D               	movwf	___aldiv@counter,c
  5298  001FB6  D006               	goto	l3622
  5299  001FB8                     l3620:
  5300  001FB8  90D8               	bcf	status,0,c
  5301  001FBA  3609               	rlcf	___aldiv@divisor,f,c
  5302  001FBC  360A               	rlcf	___aldiv@divisor+1,f,c
  5303  001FBE  360B               	rlcf	___aldiv@divisor+2,f,c
  5304  001FC0  360C               	rlcf	___aldiv@divisor+3,f,c
  5305  001FC2  2A0D               	incf	___aldiv@counter,f,c
  5306  001FC4                     l3622:
  5307  001FC4  AE0C               	btfss	___aldiv@divisor+3,7,c
  5308  001FC6  D7F8               	goto	l3620
  5309  001FC8                     u3360:
  5310  001FC8  90D8               	bcf	status,0,c
  5311  001FCA  360F               	rlcf	___aldiv@quotient,f,c
  5312  001FCC  3610               	rlcf	___aldiv@quotient+1,f,c
  5313  001FCE  3611               	rlcf	___aldiv@quotient+2,f,c
  5314  001FD0  3612               	rlcf	___aldiv@quotient+3,f,c
  5315  001FD2  5009               	movf	___aldiv@divisor,w,c
  5316  001FD4  5C05               	subwf	___aldiv@dividend,w,c
  5317  001FD6  500A               	movf	___aldiv@divisor+1,w,c
  5318  001FD8  5806               	subwfb	___aldiv@dividend+1,w,c
  5319  001FDA  500B               	movf	___aldiv@divisor+2,w,c
  5320  001FDC  5807               	subwfb	___aldiv@dividend+2,w,c
  5321  001FDE  500C               	movf	___aldiv@divisor+3,w,c
  5322  001FE0  5808               	subwfb	___aldiv@dividend+3,w,c
  5323  001FE2  A0D8               	btfss	status,0,c
  5324  001FE4  D009               	goto	l3632
  5325  001FE6  5009               	movf	___aldiv@divisor,w,c
  5326  001FE8  5E05               	subwf	___aldiv@dividend,f,c
  5327  001FEA  500A               	movf	___aldiv@divisor+1,w,c
  5328  001FEC  5A06               	subwfb	___aldiv@dividend+1,f,c
  5329  001FEE  500B               	movf	___aldiv@divisor+2,w,c
  5330  001FF0  5A07               	subwfb	___aldiv@dividend+2,f,c
  5331  001FF2  500C               	movf	___aldiv@divisor+3,w,c
  5332  001FF4  5A08               	subwfb	___aldiv@dividend+3,f,c
  5333  001FF6  800F               	bsf	___aldiv@quotient,0,c
  5334  001FF8                     l3632:
  5335  001FF8  90D8               	bcf	status,0,c
  5336  001FFA  320C               	rrcf	___aldiv@divisor+3,f,c
  5337  001FFC  320B               	rrcf	___aldiv@divisor+2,f,c
  5338  001FFE  320A               	rrcf	___aldiv@divisor+1,f,c
  5339  002000  3209               	rrcf	___aldiv@divisor,f,c
  5340  002002  2E0D               	decfsz	___aldiv@counter,f,c
  5341  002004  D7E1               	goto	u3360
  5342  002006                     l3636:
  5343  002006  500E               	movf	___aldiv@sign,w,c
  5344  002008  B4D8               	btfsc	status,2,c
  5345  00200A  D008               	goto	l3640
  5346  00200C  1E12               	comf	___aldiv@quotient+3,f,c
  5347  00200E  1E11               	comf	___aldiv@quotient+2,f,c
  5348  002010  1E10               	comf	___aldiv@quotient+1,f,c
  5349  002012  6C0F               	negf	___aldiv@quotient,c
  5350  002014  0E00               	movlw	0
  5351  002016  2210               	addwfc	___aldiv@quotient+1,f,c
  5352  002018  2211               	addwfc	___aldiv@quotient+2,f,c
  5353  00201A  2212               	addwfc	___aldiv@quotient+3,f,c
  5354  00201C                     l3640:
  5355  00201C  C00F  F005         	movff	___aldiv@quotient,?___aldiv
  5356  002020  C010  F006         	movff	___aldiv@quotient+1,?___aldiv+1
  5357  002024  C011  F007         	movff	___aldiv@quotient+2,?___aldiv+2
  5358  002028  C012  F008         	movff	___aldiv@quotient+3,?___aldiv+3
  5359  00202C  0012               	return		;funcret
  5360  00202E                     __end_of___aldiv:
  5361                           	opt callstack 0
  5362                           
  5363 ;; *************** function _SYSTEM_Initialize *****************
  5364 ;; Defined at:
  5365 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2, status,0, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;Total ram usage:        0 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    6
  5386 ;; This function calls:
  5387 ;;		_EUSART1_Initialize
  5388 ;;		_INTERRUPT_Initialize
  5389 ;;		_OSCILLATOR_Initialize
  5390 ;;		_PIN_MANAGER_Initialize
  5391 ;; This function is called by:
  5392 ;;		_main
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text25
  5397  002826                     __ptext25:
  5398                           	opt callstack 0
  5399  002826                     _SYSTEM_Initialize:
  5400                           	opt callstack 24
  5401                           
  5402                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5403                           
  5404                           ;incstack = 0
  5405  002826  EC49  F014         	call	_INTERRUPT_Initialize	;wreg free
  5406                           
  5407                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5408  00282A  ECA2  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  5409                           
  5410                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5411  00282E  EC1C  F014         	call	_OSCILLATOR_Initialize	;wreg free
  5412                           
  5413                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  5414  002832  EC0E  F012         	call	_EUSART1_Initialize	;wreg free
  5415  002836  0012               	return		;funcret
  5416  002838                     __end_of_SYSTEM_Initialize:
  5417                           	opt callstack 0
  5418                           
  5419 ;; *************** function _PIN_MANAGER_Initialize *****************
  5420 ;; Defined at:
  5421 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;		None
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  1    wreg      void 
  5428 ;; Registers used:
  5429 ;;		wreg, status,2
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;Total ram usage:        0 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    4
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_SYSTEM_Initialize
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text26
  5450  002744                     __ptext26:
  5451                           	opt callstack 0
  5452  002744                     _PIN_MANAGER_Initialize:
  5453                           	opt callstack 25
  5454                           
  5455                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5456                           
  5457                           ;incstack = 0
  5458  002744  0E00               	movlw	0
  5459  002746  6E89               	movwf	3977,c	;volatile
  5460                           
  5461                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5462  002748  0E00               	movlw	0
  5463  00274A  6E8A               	movwf	3978,c	;volatile
  5464                           
  5465                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5466  00274C  0E00               	movlw	0
  5467  00274E  6E8B               	movwf	3979,c	;volatile
  5468                           
  5469                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5470  002750  6892               	setf	3986,c	;volatile
  5471                           
  5472                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  5473  002752  0EDF               	movlw	223
  5474  002754  6E93               	movwf	3987,c	;volatile
  5475                           
  5476                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  5477  002756  0EBF               	movlw	191
  5478  002758  6E94               	movwf	3988,c	;volatile
  5479                           
  5480                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5481  00275A  0E3C               	movlw	60
  5482  00275C  010F               	movlb	15	; () banked
  5483  00275E  6F3A               	movwf	58,b	;volatile
  5484                           
  5485                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x1F;
  5486  002760  0E1F               	movlw	31
  5487  002762  6F39               	movwf	57,b	;volatile
  5488                           
  5489                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5490  002764  0E2F               	movlw	47
  5491  002766  6F38               	movwf	56,b	;volatile
  5492                           
  5493                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5494  002768  0E00               	movlw	0
  5495  00276A  6E61               	movwf	3937,c	;volatile
  5496                           
  5497                           ; BSR set to: 15
  5498                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5499  00276C  8EF1               	bsf	4081,7,c	;volatile
  5500                           
  5501                           ; BSR set to: 15
  5502  00276E  0012               	return		;funcret
  5503  002770                     __end_of_PIN_MANAGER_Initialize:
  5504                           	opt callstack 0
  5505                           
  5506 ;; *************** function _OSCILLATOR_Initialize *****************
  5507 ;; Defined at:
  5508 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, status,2
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    4
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_SYSTEM_Initialize
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text27
  5537  002838                     __ptext27:
  5538                           	opt callstack 0
  5539  002838                     _OSCILLATOR_Initialize:
  5540                           	opt callstack 25
  5541                           
  5542                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  5543                           
  5544                           ; BSR set to: 15
  5545                           ;incstack = 0
  5546  002838  0E70               	movlw	112
  5547  00283A  6ED3               	movwf	4051,c	;volatile
  5548                           
  5549                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  5550  00283C  0E04               	movlw	4
  5551  00283E  6ED2               	movwf	4050,c	;volatile
  5552                           
  5553                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
  5554  002840  0E40               	movlw	64
  5555  002842  6E9B               	movwf	3995,c	;volatile
  5556  002844                     l22:
  5557                           
  5558                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
  5559  002844  BED2               	btfsc	4050,7,c	;volatile
  5560  002846  0012               	return	
  5561  002848  D7FD               	goto	l22
  5562  00284A                     __end_of_OSCILLATOR_Initialize:
  5563                           	opt callstack 0
  5564                           
  5565 ;; *************** function _INTERRUPT_Initialize *****************
  5566 ;; Defined at:
  5567 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      void 
  5574 ;; Registers used:
  5575 ;;		None
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:    4
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_SYSTEM_Initialize
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text28
  5596  002892                     __ptext28:
  5597                           	opt callstack 0
  5598  002892                     _INTERRUPT_Initialize:
  5599                           	opt callstack 25
  5600                           
  5601                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5602                           
  5603                           ;incstack = 0
  5604  002892  9ED0               	bcf	4048,7,c	;volatile
  5605  002894  0012               	return		;funcret
  5606  002896                     __end_of_INTERRUPT_Initialize:
  5607                           	opt callstack 0
  5608                           
  5609 ;; *************** function _EUSART1_Initialize *****************
  5610 ;; Defined at:
  5611 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;		None
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;		None
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;Total ram usage:        0 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    5
  5632 ;; This function calls:
  5633 ;;		_EUSART1_SetErrorHandler
  5634 ;;		_EUSART1_SetFramingErrorHandler
  5635 ;;		_EUSART1_SetOverrunErrorHandler
  5636 ;;		_EUSART1_SetRxInterruptHandler
  5637 ;;		_EUSART1_SetTxInterruptHandler
  5638 ;; This function is called by:
  5639 ;;		_SYSTEM_Initialize
  5640 ;;		_main
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text29
  5645  00241C                     __ptext29:
  5646                           	opt callstack 0
  5647  00241C                     _EUSART1_Initialize:
  5648                           	opt callstack 24
  5649                           
  5650                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  5651                           
  5652                           ;incstack = 0
  5653  00241C  9A9D               	bcf	3997,5,c	;volatile
  5654                           
  5655                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  5656  00241E  0E74               	movlw	low _EUSART1_Receive_ISR
  5657  002420  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  5658  002422  0E21               	movlw	high _EUSART1_Receive_ISR
  5659  002424  6E06               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  5660  002426  EC2F  F014         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  5661                           
  5662                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  5663  00242A  989D               	bcf	3997,4,c	;volatile
  5664                           
  5665                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  5666  00242C  0E9A               	movlw	low _EUSART1_Transmit_ISR
  5667  00242E  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  5668  002430  0E27               	movlw	high _EUSART1_Transmit_ISR
  5669  002432  6E06               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  5670  002434  EC2A  F014         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  5671                           
  5672                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  5673  002438  0E08               	movlw	8
  5674  00243A  6EB8               	movwf	4024,c	;volatile
  5675                           
  5676                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  5677  00243C  0E90               	movlw	144
  5678  00243E  6EAB               	movwf	4011,c	;volatile
  5679                           
  5680                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  5681  002440  0E24               	movlw	36
  5682  002442  6EAC               	movwf	4012,c	;volatile
  5683                           
  5684                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x82;
  5685  002444  0E82               	movlw	130
  5686  002446  6EAF               	movwf	4015,c	;volatile
  5687                           
  5688                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x06;
  5689  002448  0E06               	movlw	6
  5690  00244A  6EB0               	movwf	4016,c	;volatile
  5691                           
  5692                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  5693  00244C  0E96               	movlw	low _EUSART1_DefaultFramingErrorHandler
  5694  00244E  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  5695  002450  0E28               	movlw	high _EUSART1_DefaultFramingErrorHandler
  5696  002452  6E06               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  5697  002454  EC39  F014         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5698                           
  5699                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  5700  002458  0E86               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  5701  00245A  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  5702  00245C  0E28               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  5703  00245E  6E06               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  5704  002460  EC34  F014         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5705                           
  5706                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  5707  002464  0E8C               	movlw	low _EUSART1_DefaultErrorHandler
  5708  002466  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  5709  002468  0E28               	movlw	high _EUSART1_DefaultErrorHandler
  5710  00246A  6E06               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  5711  00246C  EC3E  F014         	call	_EUSART1_SetErrorHandler	;wreg free
  5712                           
  5713                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  5714  002470  0E00               	movlw	0
  5715  002472  0100               	movlb	0	; () banked
  5716  002474  6FB9               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5717                           
  5718                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  5719  002476  0E00               	movlw	0
  5720  002478  6E5A               	movwf	_eusart1TxHead,c	;volatile
  5721                           
  5722                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  5723  00247A  0E00               	movlw	0
  5724  00247C  6E59               	movwf	_eusart1TxTail,c	;volatile
  5725                           
  5726                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  5727  00247E  0E40               	movlw	64
  5728  002480  6E58               	movwf	_eusart1TxBufferRemaining,c	;volatile
  5729                           
  5730                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  5731  002482  0E00               	movlw	0
  5732  002484  6E57               	movwf	_eusart1RxHead,c	;volatile
  5733                           
  5734                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  5735  002486  0E00               	movlw	0
  5736  002488  6E56               	movwf	_eusart1RxTail,c	;volatile
  5737                           
  5738                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  5739  00248A  0E00               	movlw	0
  5740  00248C  6FBA               	movwf	_eusart1RxCount& (0+255),b	;volatile
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  5744  00248E  8A9D               	bsf	3997,5,c	;volatile
  5745                           
  5746                           ; BSR set to: 0
  5747  002490  0012               	return		;funcret
  5748  002492                     __end_of_EUSART1_Initialize:
  5749                           	opt callstack 0
  5750                           
  5751 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  5752 ;; Defined at:
  5753 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5756 ;;		 -> EUSART1_Transmit_ISR(1), 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  1    wreg      void 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;Total ram usage:        2 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    4
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_EUSART1_Initialize
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text30
  5783  002854                     __ptext30:
  5784                           	opt callstack 0
  5785  002854                     _EUSART1_SetTxInterruptHandler:
  5786                           	opt callstack 24
  5787                           
  5788                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;incstack = 0
  5792  002854  C005  F0B6         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  5793  002858  C006  F0B7         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  5794  00285C  0012               	return		;funcret
  5795  00285E                     __end_of_EUSART1_SetTxInterruptHandler:
  5796                           	opt callstack 0
  5797                           
  5798 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  5799 ;; Defined at:
  5800 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5803 ;;		 -> EUSART1_Receive_ISR(1), 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;Total ram usage:        2 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:    4
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_EUSART1_Initialize
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text31
  5830  00285E                     __ptext31:
  5831                           	opt callstack 0
  5832  00285E                     _EUSART1_SetRxInterruptHandler:
  5833                           	opt callstack 24
  5834                           
  5835                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  5836                           
  5837                           ;incstack = 0
  5838  00285E  C005  F0B4         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  5839  002862  C006  F0B5         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  5840  002866  0012               	return		;funcret
  5841  002868                     __end_of_EUSART1_SetRxInterruptHandler:
  5842                           	opt callstack 0
  5843                           
  5844 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5845 ;; Defined at:
  5846 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5849 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      void 
  5854 ;; Registers used:
  5855 ;;		wreg, status,2, status,0
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;Total ram usage:        2 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    4
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_EUSART1_Initialize
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text32
  5876  002868                     __ptext32:
  5877                           	opt callstack 0
  5878  002868                     _EUSART1_SetOverrunErrorHandler:
  5879                           	opt callstack 24
  5880                           
  5881                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  5882                           
  5883                           ;incstack = 0
  5884  002868  C005  F0B0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5885  00286C  C006  F0B1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5886  002870  0012               	return		;funcret
  5887  002872                     __end_of_EUSART1_SetOverrunErrorHandler:
  5888                           	opt callstack 0
  5889                           
  5890 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5891 ;; Defined at:
  5892 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5895 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      void 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;Total ram usage:        2 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    4
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_EUSART1_Initialize
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text33
  5922  002872                     __ptext33:
  5923                           	opt callstack 0
  5924  002872                     _EUSART1_SetFramingErrorHandler:
  5925                           	opt callstack 24
  5926                           
  5927                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  5928                           
  5929                           ;incstack = 0
  5930  002872  C005  F0B2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5931  002876  C006  F0B3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5932  00287A  0012               	return		;funcret
  5933  00287C                     __end_of_EUSART1_SetFramingErrorHandler:
  5934                           	opt callstack 0
  5935                           
  5936 ;; *************** function _EUSART1_SetErrorHandler *****************
  5937 ;; Defined at:
  5938 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5941 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      void 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5957 ;;Total ram usage:        2 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; Hardware stack levels required when called:    4
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_EUSART1_Initialize
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text34
  5968  00287C                     __ptext34:
  5969                           	opt callstack 0
  5970  00287C                     _EUSART1_SetErrorHandler:
  5971                           	opt callstack 24
  5972                           
  5973                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  5974                           
  5975                           ;incstack = 0
  5976  00287C  C005  F0AE         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5977  002880  C006  F0AF         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5978  002884  0012               	return		;funcret
  5979  002886                     __end_of_EUSART1_SetErrorHandler:
  5980                           	opt callstack 0
  5981                           
  5982 ;; *************** function _INTERRUPT_InterruptManager *****************
  5983 ;; Defined at:
  5984 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;		None
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;		None
  5989 ;; Return value:  Size  Location     Type
  5990 ;;                  1    wreg      void 
  5991 ;; Registers used:
  5992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;Total ram usage:        4 bytes
  6003 ;; Hardware stack levels used:    1
  6004 ;; Hardware stack levels required when called:    3
  6005 ;; This function calls:
  6006 ;;		Absolute function
  6007 ;;		_EUSART1_Receive_ISR
  6008 ;;		_EUSART1_Transmit_ISR
  6009 ;; This function is called by:
  6010 ;;		Interrupt level 2
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	intcode
  6015  000008                     __pintcode:
  6016                           	opt callstack 0
  6017  000008                     _INTERRUPT_InterruptManager:
  6018                           	opt callstack 15
  6019                           
  6020                           ;incstack = 0
  6021  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6022  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6023  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6024  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6025  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6026                           
  6027                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6028  00001A  ACF2               	btfss	4082,6,c	;volatile
  6029  00001C  D01B               	goto	i2u244_49
  6030                           
  6031                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  6032  00001E  B89D               	btfsc	3997,4,c	;volatile
  6033  000020  A89E               	btfss	3998,4,c	;volatile
  6034  000022  D009               	goto	i2l226
  6035                           
  6036                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  6037  000024  D801               	call	i2u241_48
  6038  000026  D016               	goto	i2u244_49
  6039  000028                     i2u241_48:
  6040  000028  0005               	push	
  6041  00002A  6EFA               	movwf	pclath,c
  6042  00002C  0100               	movlb	0	; () banked
  6043  00002E  51B6               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  6044  000030  6EFD               	movwf	tosl,c
  6045  000032  51B7               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  6046  000034  D00B               	goto	L4
  6047  000036                     i2l226:
  6048  000036  BA9D               	btfsc	3997,5,c	;volatile
  6049  000038  AA9E               	btfss	3998,5,c	;volatile
  6050  00003A  D00C               	goto	i2u244_49
  6051                           
  6052                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  6053  00003C  D801               	call	i2u244_48
  6054  00003E  D00A               	goto	i2u244_49
  6055  000040                     i2u244_48:
  6056  000040  0005               	push	
  6057  000042  6EFA               	movwf	pclath,c
  6058  000044  0100               	movlb	0	; () banked
  6059  000046  51B4               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  6060  000048  6EFD               	movwf	tosl,c
  6061  00004A  51B5               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  6062  00004C                     L4:
  6063  00004C  6EFE               	movwf	tosh,c
  6064  00004E  6AFF               	clrf	tosu,c
  6065  000050  50FA               	movf	pclath,w,c
  6066  000052  0012               	return		;indir
  6067  000054                     i2u244_49:
  6068                           
  6069                           ;mcc_generated_files/interrupt_manager.c: 75:     }
  6070                           
  6071                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  6072  000054  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6073  000058  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6074  00005C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6075  000060  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6076  000064  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6077  000066  0011               	retfie		f
  6078  000068                     __end_of_INTERRUPT_InterruptManager:
  6079                           	opt callstack 0
  6080                           
  6081 ;; *************** function _EUSART1_Transmit_ISR *****************
  6082 ;; Defined at:
  6083 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;Total ram usage:        0 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; This function calls:
  6104 ;;		Nothing
  6105 ;; This function is called by:
  6106 ;;		_EUSART1_Initialize
  6107 ;;		_INTERRUPT_InterruptManager
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text36
  6112  00279A                     __ptext36:
  6113                           	opt callstack 0
  6114  00279A                     _EUSART1_Transmit_ISR:
  6115                           	opt callstack 17
  6116                           
  6117                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6118                           
  6119                           ;incstack = 0
  6120  00279A  0E40               	movlw	64
  6121  00279C  6058               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  6122  00279E  D010               	goto	i2l167
  6123                           
  6124                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  6125  0027A0  0E40               	movlw	low _eusart1TxBuffer
  6126  0027A2  2459               	addwf	_eusart1TxTail,w,c	;volatile
  6127  0027A4  6ED9               	movwf	fsr2l,c
  6128  0027A6  6ADA               	clrf	fsr2h,c
  6129  0027A8  0E01               	movlw	high _eusart1TxBuffer
  6130  0027AA  22DA               	addwfc	fsr2h,f,c
  6131  0027AC  50DF               	movf	indf2,w,c
  6132  0027AE  6EAD               	movwf	4013,c	;volatile
  6133  0027B0  2A59               	incf	_eusart1TxTail,f,c	;volatile
  6134                           
  6135                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6136  0027B2  0E3F               	movlw	63
  6137  0027B4  6459               	cpfsgt	_eusart1TxTail,c	;volatile
  6138  0027B6  D002               	goto	i2l2844
  6139                           
  6140                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  6141  0027B8  0E00               	movlw	0
  6142  0027BA  6E59               	movwf	_eusart1TxTail,c	;volatile
  6143  0027BC                     i2l2844:
  6144                           
  6145                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  6146  0027BC  2A58               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  6147                           
  6148                           ;mcc_generated_files/eusart1.c: 218:     }
  6149  0027BE  0012               	return	
  6150  0027C0                     i2l167:
  6151                           
  6152                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  6153  0027C0  989D               	bcf	3997,4,c	;volatile
  6154  0027C2  0012               	return		;funcret
  6155  0027C4                     __end_of_EUSART1_Transmit_ISR:
  6156                           	opt callstack 0
  6157                           
  6158 ;; *************** function _EUSART1_Receive_ISR *****************
  6159 ;; Defined at:
  6160 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;Total ram usage:        0 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    2
  6181 ;; This function calls:
  6182 ;;		Absolute function
  6183 ;;		_EUSART1_DefaultErrorHandler
  6184 ;;		_EUSART1_DefaultFramingErrorHandler
  6185 ;;		_EUSART1_DefaultOverrunErrorHandler
  6186 ;;		_EUSART1_RxDataHandler
  6187 ;; This function is called by:
  6188 ;;		_EUSART1_Initialize
  6189 ;;		_INTERRUPT_InterruptManager
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text37
  6194  002174                     __ptext37:
  6195                           	opt callstack 0
  6196  002174                     _EUSART1_Receive_ISR:
  6197                           	opt callstack 15
  6198                           
  6199                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6200                           
  6201                           ;incstack = 0
  6202  002174  0E00               	movlw	low _eusart1RxStatusBuffer
  6203  002176  2457               	addwf	_eusart1RxHead,w,c	;volatile
  6204  002178  6ED9               	movwf	fsr2l,c
  6205  00217A  6ADA               	clrf	fsr2h,c
  6206  00217C  0E01               	movlw	high _eusart1RxStatusBuffer
  6207  00217E  22DA               	addwfc	fsr2h,f,c
  6208  002180  0E00               	movlw	0
  6209  002182  6EDF               	movwf	indf2,c
  6210                           
  6211                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  6212  002184  A4AB               	btfss	4011,2,c	;volatile
  6213  002186  D014               	goto	i2u229_49
  6214                           
  6215                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6216  002188  0E00               	movlw	low _eusart1RxStatusBuffer
  6217  00218A  2457               	addwf	_eusart1RxHead,w,c	;volatile
  6218  00218C  6ED9               	movwf	fsr2l,c
  6219  00218E  6ADA               	clrf	fsr2h,c
  6220  002190  0E01               	movlw	high _eusart1RxStatusBuffer
  6221  002192  22DA               	addwfc	fsr2h,f,c
  6222  002194  0101               	movlb	1	; () banked
  6223  002196  82DF               	bsf	indf2,1,c
  6224                           
  6225                           ; BSR set to: 1
  6226                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  6227  002198  D801               	call	i2u229_48
  6228  00219A  D00A               	goto	i2u229_49
  6229  00219C                     i2u229_48:
  6230  00219C  0005               	push	
  6231  00219E  6EFA               	movwf	pclath,c
  6232  0021A0  0100               	movlb	0	; () banked
  6233  0021A2  51B2               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6234  0021A4  6EFD               	movwf	tosl,c
  6235  0021A6  51B3               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6236  0021A8  6EFE               	movwf	tosh,c
  6237  0021AA  6AFF               	clrf	tosu,c
  6238  0021AC  50FA               	movf	pclath,w,c
  6239  0021AE  0012               	return		;indir
  6240  0021B0                     i2u229_49:
  6241                           
  6242                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  6243  0021B0  A2AB               	btfss	4011,1,c	;volatile
  6244  0021B2  D014               	goto	i2u231_49
  6245                           
  6246                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6247  0021B4  0E00               	movlw	low _eusart1RxStatusBuffer
  6248  0021B6  2457               	addwf	_eusart1RxHead,w,c	;volatile
  6249  0021B8  6ED9               	movwf	fsr2l,c
  6250  0021BA  6ADA               	clrf	fsr2h,c
  6251  0021BC  0E01               	movlw	high _eusart1RxStatusBuffer
  6252  0021BE  22DA               	addwfc	fsr2h,f,c
  6253  0021C0  0101               	movlb	1	; () banked
  6254  0021C2  84DF               	bsf	indf2,2,c
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  6258  0021C4  D801               	call	i2u231_48
  6259  0021C6  D00A               	goto	i2u231_49
  6260  0021C8                     i2u231_48:
  6261  0021C8  0005               	push	
  6262  0021CA  6EFA               	movwf	pclath,c
  6263  0021CC  0100               	movlb	0	; () banked
  6264  0021CE  51B0               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6265  0021D0  6EFD               	movwf	tosl,c
  6266  0021D2  51B1               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6267  0021D4  6EFE               	movwf	tosh,c
  6268  0021D6  6AFF               	clrf	tosu,c
  6269  0021D8  50FA               	movf	pclath,w,c
  6270  0021DA  0012               	return		;indir
  6271  0021DC                     i2u231_49:
  6272                           
  6273                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6274  0021DC  0E00               	movlw	low _eusart1RxStatusBuffer
  6275  0021DE  2457               	addwf	_eusart1RxHead,w,c	;volatile
  6276  0021E0  6ED9               	movwf	fsr2l,c
  6277  0021E2  6ADA               	clrf	fsr2h,c
  6278  0021E4  0E01               	movlw	high _eusart1RxStatusBuffer
  6279  0021E6  22DA               	addwfc	fsr2h,f,c
  6280  0021E8  50DF               	movf	indf2,w,c
  6281  0021EA  B4D8               	btfsc	status,2,c
  6282  0021EC  D00C               	goto	i2l2864
  6283                           
  6284                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  6285  0021EE  D801               	call	i2u233_48
  6286  0021F0  0012               	return	
  6287  0021F2                     i2u233_48:
  6288  0021F2  0005               	push	
  6289  0021F4  6EFA               	movwf	pclath,c
  6290  0021F6  0100               	movlb	0	; () banked
  6291  0021F8  51AE               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6292  0021FA  6EFD               	movwf	tosl,c
  6293  0021FC  51AF               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6294  0021FE  6EFE               	movwf	tosh,c
  6295  002200  6AFF               	clrf	tosu,c
  6296  002202  50FA               	movf	pclath,w,c
  6297  002204  0012               	return		;indir
  6298  002206                     i2l2864:
  6299                           
  6300                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  6301  002206  ECF6  F013         	call	_EUSART1_RxDataHandler	;wreg free
  6302  00220A  0012               	return		;funcret
  6303  00220C                     __end_of_EUSART1_Receive_ISR:
  6304                           	opt callstack 0
  6305                           
  6306 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6307 ;; Defined at:
  6308 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;		None
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;		None
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  1    wreg      void 
  6315 ;; Registers used:
  6316 ;;		None
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;Total ram usage:        0 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_EUSART1_Initialize
  6332 ;;		_EUSART1_Receive_ISR
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text38
  6337  002886                     __ptext38:
  6338                           	opt callstack 0
  6339  002886                     _EUSART1_DefaultOverrunErrorHandler:
  6340                           	opt callstack 16
  6341                           
  6342                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  6343                           
  6344                           ;incstack = 0
  6345  002886  98AB               	bcf	4011,4,c	;volatile
  6346                           
  6347                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  6348  002888  88AB               	bsf	4011,4,c	;volatile
  6349  00288A  0012               	return		;funcret
  6350  00288C                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6351                           	opt callstack 0
  6352                           
  6353 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6354 ;; Defined at:
  6355 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		None
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;Total ram usage:        0 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_EUSART1_Initialize
  6379 ;;		_EUSART1_Receive_ISR
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text39
  6384  002896                     __ptext39:
  6385                           	opt callstack 0
  6386  002896                     _EUSART1_DefaultFramingErrorHandler:
  6387                           	opt callstack 16
  6388                           
  6389                           ;incstack = 0
  6390  002896  0012               	return		;funcret
  6391  002898                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6392                           	opt callstack 0
  6393                           
  6394 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6395 ;; Defined at:
  6396 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;		None
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      void 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;Total ram usage:        0 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    1
  6417 ;; This function calls:
  6418 ;;		_EUSART1_RxDataHandler
  6419 ;; This function is called by:
  6420 ;;		_EUSART1_Initialize
  6421 ;;		_EUSART1_Receive_ISR
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text40
  6426  00288C                     __ptext40:
  6427                           	opt callstack 0
  6428  00288C                     _EUSART1_DefaultErrorHandler:
  6429                           	opt callstack 15
  6430                           
  6431                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  6432                           
  6433                           ;incstack = 0
  6434  00288C  ECF6  F013         	call	_EUSART1_RxDataHandler	;wreg free
  6435  002890  0012               	return		;funcret
  6436  002892                     __end_of_EUSART1_DefaultErrorHandler:
  6437                           	opt callstack 0
  6438                           
  6439 ;; *************** function _EUSART1_RxDataHandler *****************
  6440 ;; Defined at:
  6441 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;Total ram usage:        0 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_EUSART1_Receive_ISR
  6465 ;;		_EUSART1_DefaultErrorHandler
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text41
  6470  0027EC                     __ptext41:
  6471                           	opt callstack 0
  6472  0027EC                     _EUSART1_RxDataHandler:
  6473                           	opt callstack 16
  6474                           
  6475                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6476                           
  6477                           ;incstack = 0
  6478  0027EC  0E00               	movlw	low _eusart1RxBuffer
  6479  0027EE  2457               	addwf	_eusart1RxHead,w,c	;volatile
  6480  0027F0  6ED9               	movwf	fsr2l,c
  6481  0027F2  6ADA               	clrf	fsr2h,c
  6482  0027F4  0E02               	movlw	high _eusart1RxBuffer
  6483  0027F6  22DA               	addwfc	fsr2h,f,c
  6484  0027F8  CFAE FFDF          	movff	4014,indf2	;volatile
  6485  0027FC  2A57               	incf	_eusart1RxHead,f,c	;volatile
  6486                           
  6487                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6488  0027FE  0E3F               	movlw	63
  6489  002800  6457               	cpfsgt	_eusart1RxHead,c	;volatile
  6490  002802  D002               	goto	i2l2500
  6491                           
  6492                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  6493  002804  0E00               	movlw	0
  6494  002806  6E57               	movwf	_eusart1RxHead,c	;volatile
  6495  002808                     i2l2500:
  6496                           
  6497                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  6498  002808  0100               	movlb	0	; () banked
  6499  00280A  2BBA               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  6500                           
  6501                           ; BSR set to: 0
  6502  00280C  0012               	return		;funcret
  6503  00280E                     __end_of_EUSART1_RxDataHandler:
  6504                           	opt callstack 0
  6505                           
  6506                           	psect	text42
  6507  000000                     __ptext42:
  6508                           	opt callstack 0
  6509                           
  6510                           	psect	rparam
  6511  0000                     
  6512                           	psect	temp
  6513  00005B                     btemp:
  6514                           	opt callstack 0
  6515  00005B                     	ds	1
  6516  0000                     int$flags	set	btemp
  6517  0000                     wtemp8	set	btemp+1
  6518  0000                     ttemp5	set	btemp+1
  6519  0000                     ttemp6	set	btemp+4
  6520  0000                     ttemp7	set	btemp+8
  6521                           tosu	equ	0xFFF
  6522                           tosh	equ	0xFFE
  6523                           tosl	equ	0xFFD
  6524                           stkptr	equ	0xFFC
  6525                           pclatu	equ	0xFFB
  6526                           pclath	equ	0xFFA
  6527                           pcl	equ	0xFF9
  6528                           tblptru	equ	0xFF8
  6529                           tblptrh	equ	0xFF7
  6530                           tblptrl	equ	0xFF6
  6531                           tablat	equ	0xFF5
  6532                           prodh	equ	0xFF4
  6533                           prodl	equ	0xFF3
  6534                           indf0	equ	0xFEF
  6535                           postinc0	equ	0xFEE
  6536                           postdec0	equ	0xFED
  6537                           preinc0	equ	0xFEC
  6538                           plusw0	equ	0xFEB
  6539                           fsr0h	equ	0xFEA
  6540                           fsr0l	equ	0xFE9
  6541                           wreg	equ	0xFE8
  6542                           indf1	equ	0xFE7
  6543                           postinc1	equ	0xFE6
  6544                           postdec1	equ	0xFE5
  6545                           preinc1	equ	0xFE4
  6546                           plusw1	equ	0xFE3
  6547                           fsr1h	equ	0xFE2
  6548                           fsr1l	equ	0xFE1
  6549                           bsr	equ	0xFE0
  6550                           indf2	equ	0xFDF
  6551                           postinc2	equ	0xFDE
  6552                           postdec2	equ	0xFDD
  6553                           preinc2	equ	0xFDC
  6554                           plusw2	equ	0xFDB
  6555                           fsr2h	equ	0xFDA
  6556                           fsr2l	equ	0xFD9
  6557                           status	equ	0xFD8


Data Sizes:
    Strings     163
    Constant    0
    Data        135
    BSS         273
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160     40     150
    BANK1           256     13     242
    BANK2           256      0      64
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_8(CODE[23]), STR_7(CODE[18]), STR_6(CODE[16]), STR_5(CODE[39]), 
		 -> STR_4(CODE[17]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1552_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_8(CODE[23]), STR_7(CODE[18]), STR_6(CODE[16]), STR_5(CODE[39]), 
		 -> STR_4(CODE[17]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 39
		 -> STR_8(CODE[23]), STR_7(CODE[18]), STR_6(CODE[16]), STR_5(CODE[39]), 
		 -> STR_4(CODE[17]), STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    i2c_read_serial@data_out	PTR unsigned char  size(2) Largest target is 4
		 -> data_out(BANK0[4]), 

    i2c_write_serial@data	PTR unsigned char  size(2) Largest target is 18
		 -> tmp_string(BANK0[15]), NULL(NULL[0]), moist_pos(BANK0[2]), updateMoist@output(BANK0[3]), 
		 -> updateTemperature@output(COMRAM[4]), minus(BANK0[2]), temp_pos(BANK0[2]), Aring(BANK1[11]), 
		 -> aring(BANK1[11]), O_slash(BANK1[11]), oslash(BANK0[11]), AElig(BANK0[11]), 
		 -> aelig(BANK0[11]), custom_char0(BANK0[11]), moist_string(BANK1[18]), shift_line(BANK0[2]), 
		 -> degree_sign(BANK0[2]), degree_pos(BANK0[2]), temp_string(BANK1[18]), first_line(BANK0[2]), 
		 -> display_init(BANK0[4]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_i2c_write_serial
    _getReading->_i2c_write_serial
    _updateMoist->_i2c_write_serial
    _i2c_write_serial->_printf
    _i2c_read_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_getReading
    _getReading->_i2c_read_serial
    _updateMoist->_i2c_write_serial
    _i2c_write_serial->_printf
    _i2c_read_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_getReading

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   63403
                                             38 BANK0      2     2      0
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                         _getReading
                           _i2c_init
                   _i2c_write_serial
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getReading                                          17    17      0   47325
                                             34 BANK0      4     4      0
                                              0 BANK1     13    13      0
                            ___aldiv
                            ___almod
                            ___awmod
                            ___lldiv
                             ___lmul
                    _i2c_read_serial
                   _i2c_write_serial
                        _updateMoist
 ---------------------------------------------------------------------------------
 (2) _updateMoist                                          4     4      0   17373
                                             28 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                   _i2c_write_serial
 ---------------------------------------------------------------------------------
 (1) _i2c_write_serial                                     8     5      3   15098
                                             83 COMRAM     2     2      0
                                             22 BANK0      6     3      3
                             _printf
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     973
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     805
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _i2c_read_serial                                     12     9      3    9456
                                             22 BANK0     12     9      3
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6    8988
                                             79 COMRAM     4     4      0
                                             16 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8187
                                             77 COMRAM     2     2      0
                                             10 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7681
                                             69 COMRAM     8     2      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     816
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     793
                                              4 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1165
                                              4 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _getReading
     ___aldiv
     ___almod
     ___awmod
     ___lldiv
     ___lmul
     _i2c_read_serial
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
     _i2c_write_serial
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
     _updateMoist
       ___awdiv
       ___awmod
       _i2c_write_serial
         _printf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART1_Write
   _i2c_init
   _i2c_write_serial
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      40       9       25.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     28      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     222      12        0.0%
DATA                 0      0     222       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 12 10:19:04 2020

                      _eusart1TxBufferRemaining 0058                                i2c_read_serial@i 00EF  
                                            l22 2844                                    ___awdiv@sign 000A  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                                             l400 1E6C  
                                           l155 26EE                                             l404 1E80  
                                           l340 1EAC                                             l407 1E86  
                                           l343 1EB4                                             l360 1F4E  
                                           l337 1E9A                                             l348 1ED8  
                                           l461 210A                                             l381 1DEC  
                                           l374 1DCC                                             l472 1566  
                                           l474 156E                                             l394 1E22  
                                           l395 1E24                                             l548 2392  
                                           l398 1E68                                             l399 1E6A  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                                           _abs 2712                                             _pad 20DA  
                                  ___awmod@sign 000A                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                       i2c_read_serial@data_out 00E4                                            ?_abs 0017  
                                          l3102 26DE                                            l3200 1BC0  
                                          l3202 1BD4                                            l3220 1C6C  
                                          l3212 1C30                                            l1196 273A  
                                          l3116 270C                                            l3118 270E  
                                          l3142 26C4                                            l3216 1C46  
                                          l3240 1CF8                                            l3232 1CBA  
                                          l3128 251A                                            l3242 1D0C  
                                          l3138 26AE                                            l3146 277A  
                                          l3162 2102                                            l3314 16F8  
                                          l3252 1D6A                                            l3236 1CDE  
                                          l3148 277E                                            l3172 215A  
                                          l3164 2114                                            l3340 1798  
                                          l3332 1782                                            l3500 24C0  
                                          l3158 20F4                                            l3318 1710  
                                          l3334 1784                                            l3406 2582  
                                          l3502 24C8                                            l3256 1D90  
                                          l3248 1D54                                            l3168 212C  
                                          l3280 1588                                            l3352 17A4  
                                          l3344 179C                                            l3336 1794  
                                          l3408 25A8                                            l3512 24EA  
                                          l3432 1F34                                            l3194 1B9A  
                                          l3266 1548                                            l3434 1F40  
                                          l3620 1FB8                                            l3188 1B72  
                                          l3284 1598                                            l3372 18B4  
                                          l3356 17AE                                            l3348 17A0  
                                          l3460 22D8                                            l3516 24F8  
                                          l3508 24E0                                            l3436 1F44  
                                          l3622 1FC4                                            l3614 1F96  
                                          l3294 1690                                            l3382 18FC  
                                          l3358 17F2                                            l3542 1E74  
                                          l3462 22E0                                            l3454 22C2  
                                          l3640 201C                                            l3632 1FF8  
                                          l3608 1F7E                                            l3480 2318  
                                          l3472 2300                                            l3448 22B2  
                                          l3560 2268                                            l3720 129A  
                                          l3570 25D6                                            l3378 18F2  
                                          l3554 222A                                            l3636 2006  
                                          l3660 2070                                            l3652 204A  
                                          l3388 1914                                            l3476 230A  
                                          l3492 24A6                                            l3556 222E  
                                          l3732 133A                                            l3662 207C  
                                          l3574 25EA                                            ?_pad 0017  
                                          l3672 20B2                                            l3656 205E  
                                          l3584 2344                                            l3496 24B2  
                                          l3752 1412                                            l3586 2350  
                                          l3746 13FC                                            l3676 20C8  
                                          l3668 20A4                                            l3596 2384  
                                          l3748 1400                                            l3838 1B28  
                                          STR_1 105A                                            STR_2 1042  
                                          STR_3 1028                                            STR_4 1083  
                                          STR_5 1001                                            STR_6 1094  
                                          STR_7 1071                                            STR_8 105A  
                                          u3020 1F4C                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u3210 1E64                                            u3130 24CC  
                                          u3310 2354                                            u2510 2512  
                                          u3230 1E7C                                            u3070 22E4  
                                          u2600 2720                                            u2530 255A  
                                          u3420 2080                                            u2710 1D10  
                                          u2631 1BA0                                            u3360 1FC8  
                                          u2800 1582                                            u2650 1BD8  
                                          u2810 169E                                            u2740 151A  
                                          u3517 1B38                                            u2830 16C0  
                                          u2750 151C                                            u2831 16BE  
                                          u3527 1F2A                                            u3455 11BA  
                                          u2840 16CE                                            u3480 1384  
                                          u2850 16D4                                            u2930 1836  
                                          u2780 155C                                            u2870 16E2  
                                          _WPUB 000F61                                   _EUSART1_Write 26DC  
                                          abs@a 0017                                            _dbuf 0180  
                                          _main 194A                                            _dtoa 14F2  
                                          _prec 00AA                                            _nout 00A6  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          btemp 005B                                   __CFG_BORV$190 000000  
                                          prodl 000FF3                                            start 0068  
                              updateMoist@moist 00ED                                   __CFG_IESO$OFF 000000  
                           i2c_read_serial@addr 00ED                                    ___param_bank 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 284A  
                         _eusart1RxStatusBuffer 0100                                 __end_of___aldiv 202E  
                               __end_of___aodiv 1C8E                                 __end_of___almod 20DA  
                                         ?_main 0001                                           ?_dtoa 0022  
                               __end_of___aomod 1DB2                                 __end_of___awdiv 2322  
                               __end_of___awmod 2502                                 __end_of___lldiv 23A4  
                               ___awdiv@divisor 0007                                  __CFG_DEBUG$OFF 000000  
                                         _AElig 006F                                           i2l226 0036  
                                         i2l167 27C0                                 ___awdiv@counter 0009  
                                  vfpfcnvrt@fmt 0048                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _Aring 01C4                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                           ___lmul@multiplicand 0009                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 279A                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                           _aelig 007A  
                                __CFG_EBTRB$OFF 000000                                           _debug 0063  
                             i2c_write_serial@i 00E9                                           _flags 00AC  
                                         _aring 01CF                                           _error 00B8  
                                         _fputc 2502                                           _fputs 26A4  
                                         _minus 009E                              __CFG_MCLRE$EXTMCLR 000000  
                                         pad@fp 0017                                           _width 00A8  
                                         _putch 284A                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                  __CFG_HFOFST$ON 000000  
    __end_of_EUSART1_DefaultFramingErrorHandler 2898     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 2896                               updateMoist@output 00EA  
                                __CFG_PBADEN$ON 000000                                 __initialization 23A4  
                    __end_of_EUSART1_Initialize 2492                                    __end_of_main 1B46  
                                  __end_of_dtoa 173A                             getReading@tmp_moist 01E9  
                              __end_of_i2c_init 2826                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_main 00F4                                          ??_dtoa 002C  
                                 __activetblptr 000003                           ?_EUSART1_Transmit_ISR 0001  
                                        ?_fputc 0007                                          ?_fputs 0010  
                              ___awdiv@dividend 0005                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                        __end_of_i2c_write_serial 1F62  
                                        i2l2500 2808                                  __CFG_WDTEN$OFF 000000  
                                        i2l2844 27BC                                          i2l2864 2206  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 00D6                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 004E  
                                        ___lmul 25C6                                       ??___aldiv 000D  
                                     ??___aodiv 0015                                       ??___almod 000D  
                                     ??___aomod 0015                                       ??___awdiv 0009  
                                __CFG_STVREN$ON 000000                                       ??___awmod 0009  
                                     ??___lldiv 000D                        ?_EUSART1_SetErrorHandler 0005  
                               _i2c_read_serial 1DB2                                          clear_0 23EA  
                                        clear_1 23F6                                          clear_2 2402  
                              ___awdiv@quotient 000B                                 ___awmod@divisor 0007  
                                        _oslash 0064                                 ___awmod@counter 0009  
                                        _printf 27C4                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        dtoa@fp 0022                                          _strlen 2770  
                                        fputc@c 0007                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 25C6                                 ??_EUSART1_Write 0005  
                               _eusart1RxBuffer 0200                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0140                          updateTemperature@F6416 00A2  
                             _SYSTEM_Initialize 2826                                      __accesstop 0060  
                       __end_of__initialization 2412                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 0022  
                                  ?_updateMoist 0001                           i2c_read_serial@length 00E6  
                 __end_of_EUSART1_RxDataHandler 280E                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 2661                                    __pidataBANK1 261C  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 256E  
                                 __end_of_fputs 26DC                                   __end_of_putch 2854  
                        ??_EUSART1_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 220C  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 2838  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0057                                   _eusart1TxHead 005A  
                                 _eusart1RxTail 0056                                      __pbssBANK0 00A2  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart1TxTail 0059               _EUSART1_TxDefaultInterruptHandler 00B6  
               ??_EUSART1_SetRxInterruptHandler 0007                                 __CFG_PLLCFG$OFF 000000  
                                     ?_i2c_init 0001                                      _degree_pos 0098  
                       __end_of_i2c_read_serial 1E8E                 __end_of_EUSART1_SetErrorHandler 2886  
                            __CFG_CCP2MX$PORTC1 000000                                         ?___lmul 0005  
                            __CFG_CCP3MX$PORTB5 000000                          i2c_write_serial@length 00E6  
                                    _getReading 10A6                                  ___lmul@product 000D  
                                       ?_printf 00DE                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 287C         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 2872                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0210  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP1ADD 000FC8                                         _SSP1BUF 000FC9  
                                    ??_i2c_init 0005                                getReading@length 01F1  
                                       _O_slash 01DA                                      _first_line 009C  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aldiv 1F62  
                                       ___aodiv 1B46                                         ___almod 202E  
                                       ___aomod 1C8E                                         ___awdiv 229E  
                               __size_of___lmul 0056                                         ___awmod 2492  
                                       ___lldiv 2322                                       ?_vfprintf 00D8  
                                  __psmallconst 1000                                         __pcinit 23A4  
                                       __ramtop 1000                                         __ptext0 194A  
                                       __ptext1 280E                                         __ptext2 10A6  
                                       __ptext3 220C                                         __ptext4 1E8E  
                                       __ptext5 2492                                         __ptext6 229E  
                                       __ptext7 1DB2                                         __ptext8 27C4  
                                       __ptext9 256E                                 __size_of_printf 0028  
                               __size_of_strlen 002A                           _OSCILLATOR_Initialize 2838  
                                  __size_of_abs 0032                                    __size_of_pad 009A  
                              ___awmod@dividend 0005                                ___aldiv@dividend 0005  
                            _EUSART1_Initialize 241C                        ??_PIN_MANAGER_Initialize 0005  
                 ??_EUSART1_DefaultErrorHandler 0001                      __size_of_SYSTEM_Initialize 0012  
                          end_of_initialization 2412                             ?_EUSART1_Initialize 0001  
                             ?_i2c_write_serial 00E4                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 00B0                                         fputs@fp 0012  
                            ??_i2c_write_serial 0054                                 ___lldiv@divisor 0009  
         __end_of_EUSART1_SetRxInterruptHandler 2868          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 285E                                 ___lldiv@counter 0011  
                              ?_i2c_read_serial 00E4                                      _shift_line 009A  
                             __end_of_vfpfcnvrt 194A                                ___aldiv@quotient 000F  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                    _precission 0062                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                          __size_of_updateMoist 0092                                      ??_vfprintf 004E  
                          ??_EUSART1_Initialize 0007                                     ?_getReading 0001  
                                       strlen@a 0007                                         strlen@s 0005  
                                  _display_addr 0060                                    _display_init 0090  
                                     _TRISCbits 000F94                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                      _tmp_string 00BB  
                            getReading@decimal1 01E8                              getReading@decimal2 01E5  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 2896  
                                __end_of___lmul 261C                                     vfpfcnvrt@ap 004A  
                                   vfpfcnvrt@fp 0046                                     vfpfcnvrt@ll 00CE  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 27EC  
                                __end_of_strlen 279A                             start_initialization 23A4  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 2744  
                                   __end_of_pad 2174                              getReading@tmp_temp 01ED  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART1_Write 2712  
                           __size_of_getReading 044C                                _temperature_addr 0061  
                             __size_of_i2c_init 0018                                  getReading@ones 01E6  
                                getReading@tens 01E7                                     vfprintf@fmt 00DA  
                                      ??___lmul 000D                           _EUSART1_RxDataHandler 27EC  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 0060  
                                   __pdataBANK1 01A0                                        ??_printf 0050  
                                      ??_strlen 0007                                  _eusart1RxCount 00BA  
                                   __pbssCOMRAM 0056               _EUSART1_RxDefaultInterruptHandler 00B4  
                 __size_of_EUSART1_Transmit_ISR 002A                                   __pcstackBANK0 00CE  
                                 __pcstackBANK1 01E5                                ___aodiv@dividend 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                    __size_of_EUSART1_Receive_ISR 0098  
                                   _degree_sign 00A0                          _PIN_MANAGER_Initialize 2744  
                                     _dtoa$1091 0034                                       __pintcode 0008  
                                      ?___aldiv 0005                                        ?___aodiv 0005  
                                      ?___almod 0005                                        ?___aomod 0005  
                                      ?___awdiv 0005                                ___aodiv@quotient 0017  
                                      ?___awmod 0005                                        ?___lldiv 0005  
                                  _custom_char0 0085                    ??_INTERRUPT_InterruptManager 0001  
                              ___almod@dividend 0005                                __CFG_PRICLKEN$ON 000000  
                             __size_of_vfprintf 0058                                     __smallconst 1000  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 288C  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 2886  
                          _EUSART1_ErrorHandler 00AE                         _EUSART1_SetErrorHandler 287C  
                                __size_of_fputc 006C                                  __size_of_fputs 0038  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 2892  
                               ___aldiv@divisor 0009                                 ___aldiv@counter 000D  
       EUSART1_SetErrorHandler@interruptHandler 0005                                        _LATBbits 000F8A  
                                      _PIE1bits 000F9D                                       _moist_pos 0094  
           __size_of_INTERRUPT_InterruptManager 0060                                        i2u231_48 21C8  
                                      i2u231_49 21DC                                        i2u233_48 21F2  
                                      i2u241_48 0028                                        i2u244_48 0040  
                                      i2u244_49 0054                                        i2u229_48 219C  
                                      i2u229_49 21B0                                        _PIR1bits 000F9E  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                              __CFG_WDTPS$32768 000000                                        _SSP1CON1 000FC6  
                                      _SSP1CON2 000FC5                                        _SSP1STAT 000FC7  
                                  ??_getReading 00F0                       __size_of_i2c_write_serial 00D4  
                                     _vfpfcnvrt 173A                      i2c_write_serial@targetAddr 00E8  
                             ___lmul@multiplier 0005                                     _INTCON2bits 000FF1  
                                     copy_data0 23B8                                       copy_data1 23D8  
                         ?_INTERRUPT_Initialize 0001                                        _i2c_init 280E  
                            __end_of_getReading 14F2           __end_of_EUSART1_SetTxInterruptHandler 285E  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 2854  
                                 ??_updateMoist 0056                                        __Hrparam 0000  
                                    vfprintf@ap 00DC                                        __Lrparam 0000  
                                    vfprintf@fp 00D8                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0005  
                              __size_of___aldiv 00CC                                __size_of___aodiv 0148  
                              __size_of___almod 00AC                                __size_of___aomod 0124  
                              __size_of___awdiv 0084                                __size_of___awmod 0070  
                              __size_of___lldiv 0082                     __size_of_EUSART1_Initialize 0076  
                                    ?_vfpfcnvrt 0046                        __size_of_i2c_read_serial 00DC  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                                    _ANSELCbits 000F3A                       ??_EUSART1_SetErrorHandler 0007  
           __end_of_EUSART1_DefaultErrorHandler 2892                     _EUSART1_DefaultErrorHandler 288C  
                                      _data_out 00CA                            i2c_write_serial@addr 00E7  
                          i2c_write_serial@data 00E4                                        __ptext10 173A  
                                      __ptext11 14F2                                        __ptext20 1B46  
                                      __ptext12 20DA                                        __ptext21 25C6  
                                      __ptext13 2770                                        __ptext30 2854  
                                      __ptext22 2322                                        __ptext14 26A4  
                                      __ptext31 285E                                        __ptext23 202E  
                                      __ptext15 2502                                        __ptext40 288C  
                                      __ptext32 2868                                        __ptext24 1F62  
                                      __ptext16 284A                                        __ptext41 27EC  
                                      __ptext33 2872                                        __ptext25 2826  
                                      __ptext17 26DC                                        __ptext42 0000  
                                      __ptext34 287C                                        __ptext26 2744  
                                      __ptext18 2712                                        __ptext27 2838  
                                      __ptext19 1C8E                                        __ptext36 279A  
                                      __ptext28 2892                                        __ptext37 2174  
                                      __ptext29 241C                                        __ptext38 2886  
                                      __ptext39 2896                                    _SSP1CON2bits 000FC5  
                                  _SSP2CON2bits 000F6B                                 ___almod@divisor 0009  
                                  _moist_string 01A0                                 ___almod@counter 000D  
                                 __size_of_main 01FC                                   __size_of_dtoa 0248  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        _temp_pos 0096  
                                      int$flags 005B                                        _vfprintf 256E  
            __end_of_INTERRUPT_InterruptManager 0068                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00DE                             __end_of_updateMoist 229E  
                   _EUSART1_FramingErrorHandler 00B2                             _EUSART1_Receive_ISR 2174  
                     i2c_read_serial@targetAddr 00EE                                ___aomod@dividend 0005  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0005  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                              ___lldiv@dividend 0005                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 2872         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2868                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 27C4                                        printf@ap 0052  
EUSART1_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                               ___aomod@divisor 000D                                _i2c_write_serial 1E8E  
                                   ??_vfpfcnvrt 004C                                 ___aomod@counter 0015  
                        __size_of_EUSART1_Write 0036                              _eusart1RxLastError 00B9  
                                   _temp_string 01B2                                ___lldiv@quotient 000D  
                                  ___aldiv@sign 000E                               __CFG_T3CMX$PORTC0 000000  
                             ??_i2c_read_serial 00E7                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 2770  
                                  ___almod@sign 000E                               __CFG_FOSC$INTIO67 000000  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
                                   _updateMoist 220C  
