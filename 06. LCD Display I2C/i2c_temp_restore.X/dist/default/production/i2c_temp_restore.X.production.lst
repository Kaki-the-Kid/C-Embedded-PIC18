

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Aug 26 14:00:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           ; Version 2.05
    68                           ; Generated 20/12/2018 GMT
    69                           ; 
    70                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F26K22 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102                           	psect	idataCOMRAM
   103  000EA6                     __pidataCOMRAM:
   104                           	opt callstack 0
   105                           
   106                           ;initializer for _number
   107  000EA6  58                 	db	88
   108                           
   109                           ;initializer for _display_addr
   110  000EA7  3C                 	db	60
   111                           
   112                           ;initializer for _temperature_addr
   113  000EA8  48                 	db	72
   114                           
   115                           	psect	idataBANK0
   116  000E9C                     __pidataBANK0:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for _empty
   120  000E9C  000B               	dw	11
   121                           
   122                           ;initializer for _debug
   123  000E9E  01                 	db	1
   124                           
   125                           ;initializer for _display_2
   126  000E9F  01                 	db	1
   127                           
   128                           ;initializer for _display_1
   129  000EA0  02                 	db	2
   130                           
   131                           	psect	mediumconst
   132  00FED4                     __pmediumconst:
   133                           	opt callstack 0
   134  00FED4  00                 	db	0
   135  00FED5                     _get7seg:
   136                           	opt callstack 0
   137  00FED5  C0                 	db	192
   138  00FED6  F9                 	db	249
   139  00FED7  A4                 	db	164
   140  00FED8  B0                 	db	176
   141  00FED9  99                 	db	153
   142  00FEDA  92                 	db	146
   143  00FEDB  82                 	db	130
   144  00FEDC  F8                 	db	248
   145  00FEDD  80                 	db	128
   146  00FEDE  90                 	db	144
   147  00FEDF  7F                 	db	127
   148  00FEE0  FF                 	db	255
   149  00FEE1                     __end_of_get7seg:
   150                           	opt callstack 0
   151  0000                     _ANSELCbits	set	3898
   152  0000                     _ANSELA	set	3896
   153  0000                     _ANSELB	set	3897
   154  0000                     _ANSELC	set	3898
   155  0000                     _SSP1BUF	set	4041
   156  0000                     _SSP1CON2	set	4037
   157  0000                     _SSP1STAT	set	4039
   158  0000                     _SSP1CON1bits	set	4038
   159  0000                     _SSP1CON1	set	4038
   160  0000                     _SSP1ADD	set	4040
   161  0000                     _TRISCbits	set	3988
   162  0000                     _SSP1CON2bits	set	4037
   163  0000                     _PORTA	set	3968
   164  0000                     _PORTC	set	3970
   165  0000                     _LATBbits	set	3978
   166  0000                     _RCREG1	set	4014
   167  0000                     _RCSTA1bits	set	4011
   168  0000                     _TXREG1	set	4013
   169  0000                     _TXSTA1bits	set	4012
   170  0000                     _SPBRGH1	set	4016
   171  0000                     _SPBRG1	set	4015
   172  0000                     _TXSTA1	set	4012
   173  0000                     _RCSTA1	set	4011
   174  0000                     _BAUDCON1	set	4024
   175  0000                     _RCONbits	set	4048
   176  0000                     _T2CONbits	set	4026
   177  0000                     _T2CON	set	4026
   178  0000                     _PIE1bits	set	3997
   179  0000                     _PIR1bits	set	3998
   180  0000                     _TMR2	set	4028
   181  0000                     _PR2	set	4027
   182  0000                     _INTCONbits	set	4082
   183  0000                     _INTCON2bits	set	4081
   184  0000                     _WPUB	set	3937
   185  0000                     _TRISC	set	3988
   186  0000                     _TRISB	set	3987
   187  0000                     _TRISA	set	3986
   188  0000                     _LATC	set	3979
   189  0000                     _LATB	set	3978
   190  0000                     _LATA	set	3977
   191  0000                     _OSCTUNE	set	3995
   192  0000                     _OSCCON2	set	4050
   193  0000                     _OSCCON	set	4051
   194  0000                     _PLLRDY	set	32407
   195  00FEE1  45                 	db	69	;'E'
   196  00FEE2  78                 	db	120	;'x'
   197  00FEE3  69                 	db	105	;'i'
   198  00FEE4  74                 	db	116	;'t'
   199  00FEE5  20                 	db	32
   200  00FEE6  69                 	db	105	;'i'
   201  00FEE7  32                 	db	50	;'2'
   202  00FEE8  63                 	db	99	;'c'
   203  00FEE9  5F                 	db	95	;'_'
   204  00FEEA  73                 	db	115	;'s'
   205  00FEEB  65                 	db	101	;'e'
   206  00FEEC  74                 	db	116	;'t'
   207  00FEED  5F                 	db	95	;'_'
   208  00FEEE  61                 	db	97	;'a'
   209  00FEEF  64                 	db	100	;'d'
   210  00FEF0  64                 	db	100	;'d'
   211  00FEF1  72                 	db	114	;'r'
   212  00FEF2  65                 	db	101	;'e'
   213  00FEF3  73                 	db	115	;'s'
   214  00FEF4  73                 	db	115	;'s'
   215  00FEF5  28                 	db	40
   216  00FEF6  75                 	db	117	;'u'
   217  00FEF7  69                 	db	105	;'i'
   218  00FEF8  6E                 	db	110	;'n'
   219  00FEF9  74                 	db	116	;'t'
   220  00FEFA  38                 	db	56	;'8'
   221  00FEFB  5F                 	db	95	;'_'
   222  00FEFC  74                 	db	116	;'t'
   223  00FEFD  20                 	db	32
   224  00FEFE  25                 	db	37
   225  00FEFF  64                 	db	100	;'d'
   226  00FF00  2C                 	db	44
   227  00FF01  20                 	db	32
   228  00FF02  75                 	db	117	;'u'
   229  00FF03  69                 	db	105	;'i'
   230  00FF04  6E                 	db	110	;'n'
   231  00FF05  74                 	db	116	;'t'
   232  00FF06  38                 	db	56	;'8'
   233  00FF07  5F                 	db	95	;'_'
   234  00FF08  74                 	db	116	;'t'
   235  00FF09  20                 	db	32
   236  00FF0A  25                 	db	37
   237  00FF0B  64                 	db	100	;'d'
   238  00FF0C  29                 	db	41
   239  00FF0D  20                 	db	32
   240  00FF0E  2D                 	db	45
   241  00FF0F  20                 	db	32
   242  00FF10  53                 	db	83	;'S'
   243  00FF11  53                 	db	83	;'S'
   244  00FF12  50                 	db	80	;'P'
   245  00FF13  31                 	db	49	;'1'
   246  00FF14  41                 	db	65	;'A'
   247  00FF15  44                 	db	68	;'D'
   248  00FF16  44                 	db	68	;'D'
   249  00FF17  20                 	db	32
   250  00FF18  3D                 	db	61	;'='
   251  00FF19  20                 	db	32
   252  00FF1A  25                 	db	37
   253  00FF1B  64                 	db	100	;'d'
   254  00FF1C  3B                 	db	59	;';'
   255  00FF1D  0A                 	db	10
   256  00FF1E  0D                 	db	13
   257  00FF1F  00                 	db	0
   258  00FF20                     STR_7:
   259  00FF20  45                 	db	69	;'E'
   260  00FF21  78                 	db	120	;'x'
   261  00FF22  69                 	db	105	;'i'
   262  00FF23  74                 	db	116	;'t'
   263  00FF24  20                 	db	32
   264  00FF25  69                 	db	105	;'i'
   265  00FF26  32                 	db	50	;'2'
   266  00FF27  63                 	db	99	;'c'
   267  00FF28  5F                 	db	95	;'_'
   268  00FF29  73                 	db	115	;'s'
   269  00FF2A  65                 	db	101	;'e'
   270  00FF2B  74                 	db	116	;'t'
   271  00FF2C  5F                 	db	95	;'_'
   272  00FF2D  73                 	db	115	;'s'
   273  00FF2E  74                 	db	116	;'t'
   274  00FF2F  61                 	db	97	;'a'
   275  00FF30  72                 	db	114	;'r'
   276  00FF31  74                 	db	116	;'t'
   277  00FF32  5F                 	db	95	;'_'
   278  00FF33  63                 	db	99	;'c'
   279  00FF34  6F                 	db	111	;'o'
   280  00FF35  6E                 	db	110	;'n'
   281  00FF36  64                 	db	100	;'d'
   282  00FF37  69                 	db	105	;'i'
   283  00FF38  74                 	db	116	;'t'
   284  00FF39  69                 	db	105	;'i'
   285  00FF3A  6F                 	db	111	;'o'
   286  00FF3B  6E                 	db	110	;'n'
   287  00FF3C  28                 	db	40
   288  00FF3D  29                 	db	41
   289  00FF3E  0A                 	db	10
   290  00FF3F  0D                 	db	13
   291  00FF40  00                 	db	0
   292  00FF41                     STR_8:
   293  00FF41  45                 	db	69	;'E'
   294  00FF42  78                 	db	120	;'x'
   295  00FF43  69                 	db	105	;'i'
   296  00FF44  74                 	db	116	;'t'
   297  00FF45  20                 	db	32
   298  00FF46  69                 	db	105	;'i'
   299  00FF47  32                 	db	50	;'2'
   300  00FF48  63                 	db	99	;'c'
   301  00FF49  5F                 	db	95	;'_'
   302  00FF4A  73                 	db	115	;'s'
   303  00FF4B  65                 	db	101	;'e'
   304  00FF4C  74                 	db	116	;'t'
   305  00FF4D  5F                 	db	95	;'_'
   306  00FF4E  73                 	db	115	;'s'
   307  00FF4F  74                 	db	116	;'t'
   308  00FF50  6F                 	db	111	;'o'
   309  00FF51  70                 	db	112	;'p'
   310  00FF52  5F                 	db	95	;'_'
   311  00FF53  63                 	db	99	;'c'
   312  00FF54  6F                 	db	111	;'o'
   313  00FF55  6E                 	db	110	;'n'
   314  00FF56  64                 	db	100	;'d'
   315  00FF57  69                 	db	105	;'i'
   316  00FF58  74                 	db	116	;'t'
   317  00FF59  69                 	db	105	;'i'
   318  00FF5A  6F                 	db	111	;'o'
   319  00FF5B  6E                 	db	110	;'n'
   320  00FF5C  28                 	db	40
   321  00FF5D  29                 	db	41
   322  00FF5E  0A                 	db	10
   323  00FF5F  0D                 	db	13
   324  00FF60  00                 	db	0
   325  00FF61  52                 	db	82	;'R'
   326  00FF62  65                 	db	101	;'e'
   327  00FF63  73                 	db	115	;'s'
   328  00FF64  75                 	db	117	;'u'
   329  00FF65  6C                 	db	108	;'l'
   330  00FF66  74                 	db	116	;'t'
   331  00FF67  61                 	db	97	;'a'
   332  00FF68  74                 	db	116	;'t'
   333  00FF69  20                 	db	32
   334  00FF6A  66                 	db	102	;'f'
   335  00FF6B  72                 	db	114	;'r'
   336  00FF6C  61                 	db	97	;'a'
   337  00FF6D  20                 	db	32
   338  00FF6E  53                 	db	83	;'S'
   339  00FF6F  53                 	db	83	;'S'
   340  00FF70  50                 	db	80	;'P'
   341  00FF71  31                 	db	49	;'1'
   342  00FF72  42                 	db	66	;'B'
   343  00FF73  55                 	db	85	;'U'
   344  00FF74  46                 	db	70	;'F'
   345  00FF75  20                 	db	32
   346  00FF76  3D                 	db	61	;'='
   347  00FF77  20                 	db	32
   348  00FF78  25                 	db	37
   349  00FF79  64                 	db	100	;'d'
   350  00FF7A  0A                 	db	10
   351  00FF7B  0D                 	db	13
   352  00FF7C  00                 	db	0
   353  00FF7D  53                 	db	83	;'S'
   354  00FF7E  61                 	db	97	;'a'
   355  00FF7F  65                 	db	101	;'e'
   356  00FF80  74                 	db	116	;'t'
   357  00FF81  74                 	db	116	;'t'
   358  00FF82  65                 	db	101	;'e'
   359  00FF83  72                 	db	114	;'r'
   360  00FF84  20                 	db	32
   361  00FF85  57                 	db	87	;'W'
   362  00FF86  52                 	db	82	;'R'
   363  00FF87  49                 	db	73	;'I'
   364  00FF88  54                 	db	84	;'T'
   365  00FF89  45                 	db	69	;'E'
   366  00FF8A  20                 	db	32
   367  00FF8B  74                 	db	116	;'t'
   368  00FF8C  69                 	db	105	;'i'
   369  00FF8D  6C                 	db	108	;'l'
   370  00FF8E  73                 	db	115	;'s'
   371  00FF8F  74                 	db	116	;'t'
   372  00FF90  61                 	db	97	;'a'
   373  00FF91  6E                 	db	110	;'n'
   374  00FF92  64                 	db	100	;'d'
   375  00FF93  0A                 	db	10
   376  00FF94  0D                 	db	13
   377  00FF95  00                 	db	0
   378  00FF96  53                 	db	83	;'S'
   379  00FF97  61                 	db	97	;'a'
   380  00FF98  65                 	db	101	;'e'
   381  00FF99  74                 	db	116	;'t'
   382  00FF9A  74                 	db	116	;'t'
   383  00FF9B  65                 	db	101	;'e'
   384  00FF9C  72                 	db	114	;'r'
   385  00FF9D  20                 	db	32
   386  00FF9E  52                 	db	82	;'R'
   387  00FF9F  45                 	db	69	;'E'
   388  00FFA0  41                 	db	65	;'A'
   389  00FFA1  44                 	db	68	;'D'
   390  00FFA2  20                 	db	32
   391  00FFA3  74                 	db	116	;'t'
   392  00FFA4  69                 	db	105	;'i'
   393  00FFA5  6C                 	db	108	;'l'
   394  00FFA6  73                 	db	115	;'s'
   395  00FFA7  74                 	db	116	;'t'
   396  00FFA8  61                 	db	97	;'a'
   397  00FFA9  6E                 	db	110	;'n'
   398  00FFAA  64                 	db	100	;'d'
   399  00FFAB  0A                 	db	10
   400  00FFAC  0D                 	db	13
   401  00FFAD  00                 	db	0
   402  00FFAE                     STR_2:
   403  00FFAE  49                 	db	73	;'I'
   404  00FFAF  32                 	db	50	;'2'
   405  00FFB0  43                 	db	67	;'C'
   406  00FFB1  20                 	db	32
   407  00FFB2  66                 	db	102	;'f'
   408  00FFB3  72                 	db	114	;'r'
   409  00FFB4  65                 	db	101	;'e'
   410  00FFB5  6B                 	db	107	;'k'
   411  00FFB6  76                 	db	118	;'v'
   412  00FFB7  65                 	db	101	;'e'
   413  00FFB8  6E                 	db	110	;'n'
   414  00FFB9  73                 	db	115	;'s'
   415  00FFBA  3A                 	db	58	;':'
   416  00FFBB  20                 	db	32
   417  00FFBC  25                 	db	37
   418  00FFBD  64                 	db	100	;'d'
   419  00FFBE  0A                 	db	10
   420  00FFBF  0D                 	db	13
   421  00FFC0  00                 	db	0
   422  00FFC1                     STR_4:
   423  00FFC1  45                 	db	69	;'E'
   424  00FFC2  78                 	db	120	;'x'
   425  00FFC3  69                 	db	105	;'i'
   426  00FFC4  74                 	db	116	;'t'
   427  00FFC5  20                 	db	32
   428  00FFC6  69                 	db	105	;'i'
   429  00FFC7  32                 	db	50	;'2'
   430  00FFC8  63                 	db	99	;'c'
   431  00FFC9  5F                 	db	95	;'_'
   432  00FFCA  77                 	db	119	;'w'
   433  00FFCB  61                 	db	97	;'a'
   434  00FFCC  69                 	db	105	;'i'
   435  00FFCD  74                 	db	116	;'t'
   436  00FFCE  28                 	db	40
   437  00FFCF  29                 	db	41
   438  00FFD0  0A                 	db	10
   439  00FFD1  0D                 	db	13
   440  00FFD2  00                 	db	0
   441  00FFD3                     STR_3:
   442  00FFD3  45                 	db	69	;'E'
   443  00FFD4  78                 	db	120	;'x'
   444  00FFD5  69                 	db	105	;'i'
   445  00FFD6  74                 	db	116	;'t'
   446  00FFD7  20                 	db	32
   447  00FFD8  69                 	db	105	;'i'
   448  00FFD9  32                 	db	50	;'2'
   449  00FFDA  63                 	db	99	;'c'
   450  00FFDB  5F                 	db	95	;'_'
   451  00FFDC  69                 	db	105	;'i'
   452  00FFDD  6E                 	db	110	;'n'
   453  00FFDE  69                 	db	105	;'i'
   454  00FFDF  74                 	db	116	;'t'
   455  00FFE0  28                 	db	40
   456  00FFE1  29                 	db	41
   457  00FFE2  0A                 	db	10
   458  00FFE3  0D                 	db	13
   459  00FFE4  00                 	db	0
   460  00FFE5  76                 	db	118	;'v'
   461  00FFE6  61                 	db	97	;'a'
   462  00FFE7  6C                 	db	108	;'l'
   463  00FFE8  75                 	db	117	;'u'
   464  00FFE9  65                 	db	101	;'e'
   465  00FFEA  20                 	db	32
   466  00FFEB  69                 	db	105	;'i'
   467  00FFEC  73                 	db	115	;'s'
   468  00FFED  20                 	db	32
   469  00FFEE  3A                 	db	58	;':'
   470  00FFEF  20                 	db	32
   471  00FFF0  25                 	db	37
   472  00FFF1  64                 	db	100	;'d'
   473  00FFF2  0A                 	db	10
   474  00FFF3  0D                 	db	13
   475  00FFF4  00                 	db	0
   476  00FFF5  46                 	db	70	;'F'
   477  00FFF6  65                 	db	101	;'e'
   478  00FFF7  6A                 	db	106	;'j'
   479  00FFF8  6C                 	db	108	;'l'
   480  00FFF9  21                 	db	33
   481  00FFFA  21                 	db	33
   482  00FFFB  21                 	db	33
   483  00FFFC  0A                 	db	10
   484  00FFFD  0D                 	db	13
   485  00FFFE  00                 	db	0
   486                           
   487                           ; #config settings
   488  00FFFF  00                 	db	0	; dummy byte at the end
   489  0000                     
   490                           	psect	cinit
   491  0009FC                     __pcinit:
   492                           	opt callstack 0
   493  0009FC                     start_initialization:
   494                           	opt callstack 0
   495  0009FC                     __initialization:
   496                           	opt callstack 0
   497                           
   498                           ; Initialize objects allocated to BANK0 (5 bytes)
   499                           ; load TBLPTR registers with __pidataBANK0
   500  0009FC  0E9C               	movlw	low __pidataBANK0
   501  0009FE  6EF6               	movwf	tblptrl,c
   502  000A00  0E0E               	movlw	high __pidataBANK0
   503  000A02  6EF7               	movwf	tblptrh,c
   504  000A04  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   505  000A06  6EF8               	movwf	tblptru,c
   506  000A08  EE00  F0DC         	lfsr	0,__pdataBANK0
   507  000A0C  EE10 F005          	lfsr	1,5
   508  000A10                     copy_data0:
   509  000A10  0009               	tblrd		*+
   510  000A12  CFF5 FFEE          	movff	tablat,postinc0
   511  000A16  50E5               	movf	postdec1,w,c
   512  000A18  50E1               	movf	fsr1l,w,c
   513  000A1A  E1FA               	bnz	copy_data0
   514                           
   515                           ; Initialize objects allocated to COMRAM (3 bytes)
   516                           ; load TBLPTR registers with __pidataCOMRAM
   517  000A1C  0EA6               	movlw	low __pidataCOMRAM
   518  000A1E  6EF6               	movwf	tblptrl,c
   519  000A20  0E0E               	movlw	high __pidataCOMRAM
   520  000A22  6EF7               	movwf	tblptrh,c
   521  000A24  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   522  000A26  6EF8               	movwf	tblptru,c
   523  000A28  0009               	tblrd		*+	;fetch initializer
   524  000A2A  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   525  000A2E  0009               	tblrd		*+	;fetch initializer
   526  000A30  CFF5 F04D          	movff	tablat,__pdataCOMRAM+1
   527  000A34  0009               	tblrd		*+	;fetch initializer
   528  000A36  CFF5 F04E          	movff	tablat,__pdataCOMRAM+2
   529                           
   530                           ; Clear objects allocated to BANK1 (192 bytes)
   531  000A3A  EE01  F000         	lfsr	0,__pbssBANK1
   532  000A3E  0EC0               	movlw	192
   533  000A40                     clear_0:
   534  000A40  6AEE               	clrf	postinc0,c
   535  000A42  06E8               	decf	wreg,f,c
   536  000A44  E1FD               	bnz	clear_0
   537                           
   538                           ; Clear objects allocated to BANK0 (64 bytes)
   539  000A46  EE00  F060         	lfsr	0,__pbssBANK0
   540  000A4A  0E40               	movlw	64
   541  000A4C                     clear_1:
   542  000A4C  6AEE               	clrf	postinc0,c
   543  000A4E  06E8               	decf	wreg,f,c
   544  000A50  E1FD               	bnz	clear_1
   545                           
   546                           ; Clear objects allocated to COMRAM (13 bytes)
   547  000A52  EE00  F03F         	lfsr	0,__pbssCOMRAM
   548  000A56  0E0D               	movlw	13
   549  000A58                     clear_2:
   550  000A58  6AEE               	clrf	postinc0,c
   551  000A5A  06E8               	decf	wreg,f,c
   552  000A5C  E1FD               	bnz	clear_2
   553  000A5E                     end_of_initialization:
   554                           	opt callstack 0
   555  000A5E                     __end_of__initialization:
   556                           	opt callstack 0
   557  000A5E  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   558  000A60  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   559  000A62  0100               	movlb	0
   560  000A64  EFBC  F005         	goto	_main	;jump to C main() function
   561                           
   562                           	psect	bssCOMRAM
   563  00003F                     __pbssCOMRAM:
   564                           	opt callstack 0
   565  00003F                     _prec:
   566                           	opt callstack 0
   567  00003F                     	ds	2
   568  000041                     _flags:
   569                           	opt callstack 0
   570  000041                     	ds	2
   571  000043                     _decimal_2:
   572                           	opt callstack 0
   573  000043                     	ds	1
   574  000044                     _decimal_1:
   575                           	opt callstack 0
   576  000044                     	ds	1
   577  000045                     _eusart1RxLastError:
   578                           	opt callstack 0
   579  000045                     	ds	1
   580  000046                     _eusart1RxCount:
   581                           	opt callstack 0
   582  000046                     	ds	1
   583  000047                     _eusart1RxTail:
   584                           	opt callstack 0
   585  000047                     	ds	1
   586  000048                     _eusart1RxHead:
   587                           	opt callstack 0
   588  000048                     	ds	1
   589  000049                     _eusart1TxBufferRemaining:
   590                           	opt callstack 0
   591  000049                     	ds	1
   592  00004A                     _eusart1TxTail:
   593                           	opt callstack 0
   594  00004A                     	ds	1
   595  00004B                     _eusart1TxHead:
   596                           	opt callstack 0
   597  00004B                     	ds	1
   598                           
   599                           	psect	dataCOMRAM
   600  00004C                     __pdataCOMRAM:
   601                           	opt callstack 0
   602  00004C                     _number:
   603                           	opt callstack 0
   604  00004C                     	ds	1
   605  00004D                     _display_addr:
   606                           	opt callstack 0
   607  00004D                     	ds	1
   608  00004E                     _temperature_addr:
   609                           	opt callstack 0
   610  00004E                     	ds	1
   611                           
   612                           	psect	bssBANK0
   613  000060                     __pbssBANK0:
   614                           	opt callstack 0
   615  000060                     _string:
   616                           	opt callstack 0
   617  000060                     	ds	10
   618  00006A                     _nout:
   619                           	opt callstack 0
   620  00006A                     	ds	2
   621  00006C                     _width:
   622                           	opt callstack 0
   623  00006C                     	ds	2
   624  00006E                     _flipflop:
   625                           	opt callstack 0
   626  00006E                     	ds	2
   627  000070                     _EUSART1_ErrorHandler:
   628                           	opt callstack 0
   629  000070                     	ds	2
   630  000072                     _EUSART1_OverrunErrorHandler:
   631                           	opt callstack 0
   632  000072                     	ds	2
   633  000074                     _EUSART1_FramingErrorHandler:
   634                           	opt callstack 0
   635  000074                     	ds	2
   636  000076                     _EUSART1_RxDefaultInterruptHandler:
   637                           	opt callstack 0
   638  000076                     	ds	2
   639  000078                     _EUSART1_TxDefaultInterruptHandler:
   640                           	opt callstack 0
   641  000078                     	ds	2
   642  00007A                     TMR2_ISR@CountCallBack:
   643                           	opt callstack 0
   644  00007A                     	ds	2
   645  00007C                     _TMR2_InterruptHandler:
   646                           	opt callstack 0
   647  00007C                     	ds	2
   648  00007E                     _index:
   649                           	opt callstack 0
   650  00007E                     	ds	1
   651  00007F                     _tmp:
   652                           	opt callstack 0
   653  00007F                     	ds	1
   654  000080                     _dbuf:
   655                           	opt callstack 0
   656  000080                     	ds	32
   657                           
   658                           	psect	dataBANK0
   659  0000DC                     __pdataBANK0:
   660                           	opt callstack 0
   661  0000DC                     _empty:
   662                           	opt callstack 0
   663  0000DC                     	ds	2
   664  0000DE                     _debug:
   665                           	opt callstack 0
   666  0000DE                     	ds	1
   667  0000DF                     _display_2:
   668                           	opt callstack 0
   669  0000DF                     	ds	1
   670  0000E0                     _display_1:
   671                           	opt callstack 0
   672  0000E0                     	ds	1
   673                           
   674                           	psect	bssBANK1
   675  000100                     __pbssBANK1:
   676                           	opt callstack 0
   677  000100                     _eusart1RxStatusBuffer:
   678                           	opt callstack 0
   679  000100                     	ds	64
   680  000140                     _eusart1RxBuffer:
   681                           	opt callstack 0
   682  000140                     	ds	64
   683  000180                     _eusart1TxBuffer:
   684                           	opt callstack 0
   685  000180                     	ds	64
   686                           
   687                           	psect	cstackBANK0
   688  0000A0                     __pcstackBANK0:
   689                           	opt callstack 0
   690  0000A0                     ??_dtoa:
   691                           
   692                           ; 1 bytes @ 0x0
   693  0000A0                     	ds	8
   694  0000A8                     _dtoa$1254:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x8
   698  0000A8                     	ds	2
   699  0000AA                     dtoa@p:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0xA
   703  0000AA                     	ds	2
   704  0000AC                     dtoa@w:
   705                           	opt callstack 0
   706                           
   707                           ; 2 bytes @ 0xC
   708  0000AC                     	ds	2
   709  0000AE                     dtoa@s:
   710                           	opt callstack 0
   711                           
   712                           ; 2 bytes @ 0xE
   713  0000AE                     	ds	2
   714  0000B0                     dtoa@n:
   715                           	opt callstack 0
   716                           
   717                           ; 8 bytes @ 0x10
   718  0000B0                     	ds	8
   719  0000B8                     dtoa@i:
   720                           	opt callstack 0
   721                           
   722                           ; 2 bytes @ 0x18
   723  0000B8                     	ds	2
   724  0000BA                     ??_vfpfcnvrt:
   725                           
   726                           ; 1 bytes @ 0x1A
   727  0000BA                     	ds	2
   728  0000BC                     vfpfcnvrt@ll:
   729                           	opt callstack 0
   730                           
   731                           ; 8 bytes @ 0x1C
   732  0000BC                     	ds	8
   733  0000C4                     ?_vfprintf:
   734                           	opt callstack 0
   735  0000C4                     vfprintf@fp:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x24
   739  0000C4                     	ds	2
   740  0000C6                     vfprintf@fmt:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x26
   744  0000C6                     	ds	2
   745  0000C8                     vfprintf@ap:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x28
   749  0000C8                     	ds	2
   750  0000CA                     vfprintf@cfmt:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x2A
   754  0000CA                     	ds	2
   755  0000CC                     ?_printf:
   756                           	opt callstack 0
   757  0000CC                     printf@fmt:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x2C
   761  0000CC                     	ds	10
   762  0000D6                     printf@ap:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x36
   766  0000D6                     	ds	2
   767  0000D8                     i2c_write@data:
   768                           	opt callstack 0
   769                           
   770                           ; 1 bytes @ 0x38
   771  0000D8                     	ds	1
   772  0000D9                     i2c_display_write_inst@byInst:
   773                           	opt callstack 0
   774                           
   775                           ; 1 bytes @ 0x39
   776  0000D9                     	ds	1
   777  0000DA                     ??_main:
   778                           
   779                           ; 1 bytes @ 0x3A
   780  0000DA                     	ds	2
   781                           
   782                           	psect	cstackCOMRAM
   783  000001                     __pcstackCOMRAM:
   784                           	opt callstack 0
   785  000001                     ?___awdiv:
   786                           	opt callstack 0
   787  000001                     ?___awmod:
   788                           	opt callstack 0
   789  000001                     ___awdiv@dividend:
   790                           	opt callstack 0
   791  000001                     ___awmod@dividend:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0x0
   795  000001                     	ds	2
   796  000003                     ___awdiv@divisor:
   797                           	opt callstack 0
   798  000003                     ___awmod@divisor:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0x2
   802  000003                     	ds	2
   803  000005                     ___awdiv@counter:
   804                           	opt callstack 0
   805  000005                     ___awmod@counter:
   806                           	opt callstack 0
   807                           
   808                           ; 1 bytes @ 0x4
   809  000005                     	ds	1
   810  000006                     ___awdiv@sign:
   811                           	opt callstack 0
   812  000006                     ___awmod@sign:
   813                           	opt callstack 0
   814                           
   815                           ; 1 bytes @ 0x5
   816  000006                     	ds	1
   817  000007                     ___awdiv@quotient:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0x6
   821  000007                     	ds	2
   822  000009                     ??_INTERRUPT_InterruptManager:
   823                           
   824                           ; 1 bytes @ 0x8
   825  000009                     	ds	8
   826  000011                     ?_strlen:
   827                           	opt callstack 0
   828  000011                     ?___aodiv:
   829                           	opt callstack 0
   830  000011                     ?___aomod:
   831                           	opt callstack 0
   832  000011                     EUSART1_Write@txData:
   833                           	opt callstack 0
   834  000011                     TMR2_SetInterruptHandler@InterruptHandler:
   835                           	opt callstack 0
   836  000011                     EUSART1_SetFramingErrorHandler@interruptHandler:
   837                           	opt callstack 0
   838  000011                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   839                           	opt callstack 0
   840  000011                     EUSART1_SetErrorHandler@interruptHandler:
   841                           	opt callstack 0
   842  000011                     EUSART1_SetTxInterruptHandler@interruptHandler:
   843                           	opt callstack 0
   844  000011                     EUSART1_SetRxInterruptHandler@interruptHandler:
   845                           	opt callstack 0
   846  000011                     strlen@s:
   847                           	opt callstack 0
   848  000011                     ___aodiv@dividend:
   849                           	opt callstack 0
   850  000011                     ___aomod@dividend:
   851                           	opt callstack 0
   852                           
   853                           ; 8 bytes @ 0x10
   854  000011                     	ds	1
   855  000012                     putch@txData:
   856                           	opt callstack 0
   857                           
   858                           ; 1 bytes @ 0x11
   859  000012                     	ds	1
   860  000013                     fputc@c:
   861                           	opt callstack 0
   862  000013                     strlen@a:
   863                           	opt callstack 0
   864                           
   865                           ; 2 bytes @ 0x12
   866  000013                     	ds	2
   867  000015                     fputc@fp:
   868                           	opt callstack 0
   869                           
   870                           ; 2 bytes @ 0x14
   871  000015                     	ds	2
   872  000017                     ??_fputc:
   873                           
   874                           ; 1 bytes @ 0x16
   875  000017                     	ds	2
   876  000019                     ___aodiv@divisor:
   877                           	opt callstack 0
   878  000019                     ___aomod@divisor:
   879                           	opt callstack 0
   880                           
   881                           ; 8 bytes @ 0x18
   882  000019                     	ds	3
   883  00001C                     fputs@s:
   884                           	opt callstack 0
   885                           
   886                           ; 2 bytes @ 0x1B
   887  00001C                     	ds	2
   888  00001E                     fputs@fp:
   889                           	opt callstack 0
   890                           
   891                           ; 2 bytes @ 0x1D
   892  00001E                     	ds	2
   893  000020                     fputs@c:
   894                           	opt callstack 0
   895                           
   896                           ; 1 bytes @ 0x1F
   897  000020                     	ds	1
   898  000021                     ___aodiv@counter:
   899                           	opt callstack 0
   900  000021                     ___aomod@counter:
   901                           	opt callstack 0
   902  000021                     fputs@i:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x20
   906  000021                     	ds	1
   907  000022                     ___aodiv@sign:
   908                           	opt callstack 0
   909  000022                     ___aomod@sign:
   910                           	opt callstack 0
   911                           
   912                           ; 1 bytes @ 0x21
   913  000022                     	ds	1
   914  000023                     ?_abs:
   915                           	opt callstack 0
   916  000023                     ?_pad:
   917                           	opt callstack 0
   918  000023                     pad@fp:
   919                           	opt callstack 0
   920  000023                     abs@a:
   921                           	opt callstack 0
   922  000023                     ___aodiv@quotient:
   923                           	opt callstack 0
   924                           
   925                           ; 8 bytes @ 0x22
   926  000023                     	ds	2
   927  000025                     ??_abs:
   928  000025                     pad@buf:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0x24
   932  000025                     	ds	2
   933  000027                     pad@p:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x26
   937  000027                     	ds	2
   938  000029                     ??_pad:
   939                           
   940                           ; 1 bytes @ 0x28
   941  000029                     	ds	1
   942  00002A                     pad@i:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x29
   946  00002A                     	ds	2
   947  00002C                     pad@w:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x2B
   951  00002C                     	ds	2
   952  00002E                     ?_dtoa:
   953                           	opt callstack 0
   954  00002E                     dtoa@fp:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0x2D
   958  00002E                     	ds	2
   959  000030                     dtoa@d:
   960                           	opt callstack 0
   961                           
   962                           ; 8 bytes @ 0x2F
   963  000030                     	ds	8
   964  000038                     ?_vfpfcnvrt:
   965                           	opt callstack 0
   966  000038                     vfpfcnvrt@fp:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x37
   970  000038                     	ds	2
   971  00003A                     vfpfcnvrt@fmt:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x39
   975  00003A                     	ds	2
   976  00003C                     vfpfcnvrt@ap:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x3B
   980  00003C                     	ds	2
   981  00003E                     ??_i2c_wait:
   982  00003E                     
   983                           ; 1 bytes @ 0x3D
   984  00003E                     	ds	1
   985  00003F                     
   986                           ; 1 bytes @ 0x3E
   987 ;;
   988 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   989 ;;
   990 ;; *************** function _main *****************
   991 ;; Defined at:
   992 ;;		line 64 in file "main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;Total ram usage:        2 bytes
  1011 ;; Hardware stack levels required when called:   18
  1012 ;; This function calls:
  1013 ;;		_EUSART1_Initialize
  1014 ;;		_SYSTEM_Initialize
  1015 ;;		_TMR2_SetInterruptHandler
  1016 ;;		_i2c_display_init
  1017 ;;		_i2c_init
  1018 ;; This function is called by:
  1019 ;;		Startup code after reset
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text0
  1024  000B78                     __ptext0:
  1025                           	opt callstack 0
  1026  000B78                     _main:
  1027                           	opt callstack 13
  1028                           
  1029                           ;main.c: 67:     SYSTEM_Initialize();
  1030                           
  1031                           ;incstack = 0
  1032  000B78  EC00  F007         	call	_SYSTEM_Initialize	;wreg free
  1033                           
  1034                           ;main.c: 68:     (INTCONbits.GIE = 1);
  1035  000B7C  8EF2               	bsf	4082,7,c	;volatile
  1036                           
  1037                           ;main.c: 69:     (INTCONbits.PEIE = 1);
  1038  000B7E  8CF2               	bsf	4082,6,c	;volatile
  1039                           
  1040                           ;main.c: 71:     TMR2_SetInterruptHandler(displayController);
  1041  000B80  0E02               	movlw	low _displayController
  1042  000B82  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1043  000B84  0E08               	movlw	high _displayController
  1044  000B86  6E12               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1045  000B88  EC2A  F007         	call	_TMR2_SetInterruptHandler	;wreg free
  1046                           
  1047                           ;main.c: 72:     EUSART1_Initialize();
  1048  000B8C  EC8C  F004         	call	_EUSART1_Initialize	;wreg free
  1049  000B90  8A8A               	bsf	3978,5,c	;volatile
  1050                           
  1051                           ;main.c: 75:     i2c_init();
  1052  000B92  EC96  F005         	call	_i2c_init	;wreg free
  1053                           
  1054                           ;main.c: 76:     i2c_display_init();
  1055  000B96  EC0B  F007         	call	_i2c_display_init	;wreg free
  1056  000B9A                     l2878:
  1057                           
  1058                           ;main.c: 79:     {;main.c: 91:         _delay((unsigned long)((1000)*(64000000/4000.0)))
      +                          ;
  1059  000B9A  0E52               	movlw	82
  1060  000B9C  0100               	movlb	0	; () banked
  1061  000B9E  6FDB               	movwf	(??_main+1)& (0+255),b
  1062  000BA0  0E2B               	movlw	43
  1063  000BA2  6FDA               	movwf	??_main& (0+255),b
  1064  000BA4  0E00               	movlw	0
  1065  000BA6                     u2197:
  1066  000BA6  2EE8               	decfsz	wreg,f,c
  1067  000BA8  D7FE               	bra	u2197
  1068  000BAA  2FDA               	decfsz	??_main& (0+255),f,b
  1069  000BAC  D7FC               	bra	u2197
  1070  000BAE  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  1071  000BB0  D7FA               	bra	u2197
  1072  000BB2  F000               	nop	
  1073  000BB4  D7F2               	goto	l2878
  1074  000BB6                     __end_of_main:
  1075                           	opt callstack 0
  1076                           
  1077 ;; *************** function _i2c_init *****************
  1078 ;; Defined at:
  1079 ;;		line 14 in file "i2c_lib.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  i2c_clock       1    0        unsigned char 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;Total ram usage:        1 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:   14
  1100 ;; This function calls:
  1101 ;;		_printf
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text1
  1108  000B2C                     __ptext1:
  1109                           	opt callstack 0
  1110  000B2C                     _i2c_init:
  1111                           	opt callstack 16
  1112                           
  1113                           ;i2c_lib.c: 22:     TRISC |= 0b00011000;
  1114                           
  1115                           ;incstack = 0
  1116  000B2C  0E18               	movlw	24
  1117  000B2E  1294               	iorwf	3988,f,c	;volatile
  1118                           
  1119                           ;i2c_lib.c: 26:     TRISC |= 0x18;
  1120  000B30  0E18               	movlw	24
  1121  000B32  1294               	iorwf	3988,f,c	;volatile
  1122                           
  1123                           ;i2c_lib.c: 29:     TRISCbits.RC3 = 1;
  1124  000B34  8694               	bsf	3988,3,c	;volatile
  1125                           
  1126                           ;i2c_lib.c: 30:     TRISCbits.RC4 = 1;
  1127  000B36  8894               	bsf	3988,4,c	;volatile
  1128                           
  1129                           ;i2c_lib.c: 36:     ANSELC &= 0b11100111;
  1130  000B38  0EE7               	movlw	231
  1131  000B3A  010F               	movlb	15	; () banked
  1132  000B3C  173A               	andwf	58,f,b	;volatile
  1133                           
  1134                           ;i2c_lib.c: 40:     ANSELC &= 0xE7;
  1135  000B3E  0EE7               	movlw	231
  1136  000B40  173A               	andwf	58,f,b	;volatile
  1137                           
  1138                           ; BSR set to: 15
  1139                           ;i2c_lib.c: 44:     ANSELCbits.ANSC3 = 0;
  1140  000B42  973A               	bcf	58,3,b	;volatile
  1141                           
  1142                           ; BSR set to: 15
  1143                           ;i2c_lib.c: 45:     ANSELCbits.ANSC4 = 0;
  1144  000B44  993A               	bcf	58,4,b	;volatile
  1145                           
  1146                           ; BSR set to: 15
  1147                           
  1148                           ; BSR set to: 15
  1149  000B46  0EAE               	movlw	low STR_2
  1150  000B48  0100               	movlb	0	; () banked
  1151  000B4A  6FCC               	movwf	printf@fmt& (0+255),b
  1152  000B4C  0EFF               	movlw	high STR_2
  1153  000B4E  6FCD               	movwf	(printf@fmt+1)& (0+255),b
  1154  000B50  0E00               	movlw	0
  1155  000B52  6FCF               	movwf	(?_printf+3)& (0+255),b
  1156  000B54  0E9F               	movlw	159
  1157  000B56  6FCE               	movwf	(?_printf+2)& (0+255),b
  1158  000B58  EC83  F006         	call	_printf	;wreg free
  1159                           
  1160                           ;i2c_lib.c: 55:     SSP1ADD = i2c_clock;
  1161  000B5C  0E9F               	movlw	159
  1162  000B5E  6EC8               	movwf	4040,c	;volatile
  1163                           
  1164                           ;i2c_lib.c: 73:     SSP1CON1 = 0b00101000;
  1165  000B60  0E28               	movlw	40
  1166  000B62  6EC6               	movwf	4038,c	;volatile
  1167                           
  1168                           ;i2c_lib.c: 76:     SSP1CON1 |= 0b1000;
  1169  000B64  86C6               	bsf	4038,3,c	;volatile
  1170                           
  1171                           ;i2c_lib.c: 80:     (debug)?printf("Exit i2c_init()\n\r"):0;
  1172  000B66  8AC6               	bsf	4038,5,c	;volatile
  1173  000B68  0ED3               	movlw	low STR_3
  1174  000B6A  0100               	movlb	0	; () banked
  1175  000B6C  6FCC               	movwf	printf@fmt& (0+255),b
  1176  000B6E  0EFF               	movlw	high STR_3
  1177  000B70  6FCD               	movwf	(printf@fmt+1)& (0+255),b
  1178  000B72  EC83  F006         	call	_printf	;wreg free
  1179  000B76  0012               	return		;funcret
  1180  000B78                     __end_of_i2c_init:
  1181                           	opt callstack 0
  1182                           
  1183 ;; *************** function _i2c_display_init *****************
  1184 ;; Defined at:
  1185 ;;		line 154 in file "main.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;Total ram usage:        0 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:   17
  1206 ;; This function calls:
  1207 ;;		_i2c_display_write_inst
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text2
  1214  000E16                     __ptext2:
  1215                           	opt callstack 0
  1216  000E16                     _i2c_display_init:
  1217                           	opt callstack 13
  1218                           
  1219                           ;main.c: 155:     i2c_display_write_inst(0x38);
  1220                           
  1221                           ;incstack = 0
  1222  000E16  0E38               	movlw	56
  1223  000E18  EC2B  F006         	call	_i2c_display_write_inst
  1224                           
  1225                           ;main.c: 156:     i2c_display_write_inst(0x0F);
  1226  000E1C  0E0F               	movlw	15
  1227  000E1E  EC2B  F006         	call	_i2c_display_write_inst
  1228                           
  1229                           ;main.c: 157:     i2c_display_write_inst(0X06);
  1230  000E22  0E06               	movlw	6
  1231  000E24  EC2B  F006         	call	_i2c_display_write_inst
  1232  000E28  0012               	return		;funcret
  1233  000E2A                     __end_of_i2c_display_init:
  1234                           	opt callstack 0
  1235                           
  1236 ;; *************** function _i2c_display_write_inst *****************
  1237 ;; Defined at:
  1238 ;;		line 160 in file "main.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  byInst          1    wreg     unsigned char 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  byInst          1   57[BANK0 ] unsigned char 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;Total ram usage:        1 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:   16
  1259 ;; This function calls:
  1260 ;;		_i2c_set_start_condition
  1261 ;;		_i2c_set_stop_condition
  1262 ;;		_i2c_wait
  1263 ;;		_i2c_write
  1264 ;; This function is called by:
  1265 ;;		_i2c_display_init
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text3
  1270  000C56                     __ptext3:
  1271                           	opt callstack 0
  1272  000C56                     _i2c_display_write_inst:
  1273                           	opt callstack 13
  1274                           
  1275                           ;incstack = 0
  1276                           ;i2c_display_write_inst@byInst stored from wreg
  1277  000C56  0100               	movlb	0	; () banked
  1278  000C58  6FD9               	movwf	i2c_display_write_inst@byInst& (0+255),b
  1279                           
  1280                           ;main.c: 161:     i2c_wait();
  1281  000C5A  ECA9  F006         	call	_i2c_wait	;wreg free
  1282                           
  1283                           ;main.c: 163:     i2c_set_start_condition();
  1284  000C5E  ECF5  F006         	call	_i2c_set_start_condition	;wreg free
  1285                           
  1286                           ;main.c: 165:     i2c_write(0x78);
  1287  000C62  0E78               	movlw	120
  1288  000C64  EC1E  F007         	call	_i2c_write
  1289                           
  1290                           ;main.c: 167:     if( SSP1CON2bits.ACKSTAT == 0 ) {
  1291  000C68  BCC5               	btfsc	4037,6,c	;volatile
  1292  000C6A  D009               	goto	l390
  1293                           
  1294                           ;main.c: 168:         i2c_write(0x00);
  1295  000C6C  0E00               	movlw	0
  1296  000C6E  EC1E  F007         	call	_i2c_write
  1297                           
  1298                           ;main.c: 169:         if( SSP1CON2bits.ACKSTAT == 0 ) {
  1299  000C72  BCC5               	btfsc	4037,6,c	;volatile
  1300  000C74  D004               	goto	l390
  1301                           
  1302                           ;main.c: 170:             i2c_write(byInst);
  1303  000C76  0100               	movlb	0	; () banked
  1304  000C78  51D9               	movf	i2c_display_write_inst@byInst& (0+255),w,b
  1305  000C7A  EC1E  F007         	call	_i2c_write
  1306  000C7E                     l390:
  1307                           
  1308                           ;main.c: 175:     i2c_set_stop_condition();
  1309  000C7E  ECE8  F006         	call	_i2c_set_stop_condition	;wreg free
  1310  000C82  0012               	return		;funcret
  1311  000C84                     __end_of_i2c_display_write_inst:
  1312                           	opt callstack 0
  1313                           
  1314 ;; *************** function _i2c_write *****************
  1315 ;; Defined at:
  1316 ;;		line 92 in file "i2c_lib.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  data            1    wreg     unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  data            1   56[BANK0 ] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;Total ram usage:        1 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:   15
  1337 ;; This function calls:
  1338 ;;		_i2c_wait
  1339 ;; This function is called by:
  1340 ;;		_i2c_display_write_inst
  1341 ;;		_readTemperature
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text4
  1346  000E3C                     __ptext4:
  1347                           	opt callstack 0
  1348  000E3C                     _i2c_write:
  1349                           	opt callstack 13
  1350                           
  1351                           ;incstack = 0
  1352                           ;i2c_write@data stored from wreg
  1353  000E3C  0100               	movlb	0	; () banked
  1354  000E3E  6FD8               	movwf	i2c_write@data& (0+255),b
  1355                           
  1356                           ;i2c_lib.c: 93:     i2c_wait();
  1357  000E40  ECA9  F006         	call	_i2c_wait	;wreg free
  1358                           
  1359                           ;i2c_lib.c: 94:     SSP1BUF = data;
  1360  000E44  C0D8  FFC9         	movff	i2c_write@data,4041	;volatile
  1361  000E48  0012               	return		;funcret
  1362  000E4A                     __end_of_i2c_write:
  1363                           	opt callstack 0
  1364                           
  1365 ;; *************** function _i2c_set_stop_condition *****************
  1366 ;; Defined at:
  1367 ;;		line 171 in file "i2c_lib.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;Total ram usage:        0 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:   15
  1388 ;; This function calls:
  1389 ;;		_i2c_wait
  1390 ;;		_printf
  1391 ;; This function is called by:
  1392 ;;		_i2c_display_write_inst
  1393 ;;		_readTemperature
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text5
  1398  000DD0                     __ptext5:
  1399                           	opt callstack 0
  1400  000DD0                     _i2c_set_stop_condition:
  1401                           	opt callstack 13
  1402                           
  1403                           ;i2c_lib.c: 172:     i2c_wait();
  1404                           
  1405                           ;incstack = 0
  1406  000DD0  ECA9  F006         	call	_i2c_wait	;wreg free
  1407                           
  1408                           ;i2c_lib.c: 173:     SSP1CON2bits.PEN = 1;
  1409  000DD4  84C5               	bsf	4037,2,c	;volatile
  1410  000DD6                     l477:
  1411  000DD6  B4C5               	btfsc	4037,2,c	;volatile
  1412  000DD8  D7FE               	goto	l477
  1413  000DDA  0E41               	movlw	low STR_8
  1414  000DDC  0100               	movlb	0	; () banked
  1415  000DDE  6FCC               	movwf	printf@fmt& (0+255),b
  1416  000DE0  0EFF               	movlw	high STR_8
  1417  000DE2  6FCD               	movwf	(printf@fmt+1)& (0+255),b
  1418  000DE4  EC83  F006         	call	_printf	;wreg free
  1419  000DE8  0012               	return		;funcret
  1420  000DEA                     __end_of_i2c_set_stop_condition:
  1421                           	opt callstack 0
  1422                           
  1423 ;; *************** function _i2c_set_start_condition *****************
  1424 ;; Defined at:
  1425 ;;		line 156 in file "i2c_lib.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:   15
  1446 ;; This function calls:
  1447 ;;		_i2c_wait
  1448 ;;		_printf
  1449 ;; This function is called by:
  1450 ;;		_i2c_display_write_inst
  1451 ;;		_readTemperature
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text6
  1456  000DEA                     __ptext6:
  1457                           	opt callstack 0
  1458  000DEA                     _i2c_set_start_condition:
  1459                           	opt callstack 13
  1460                           
  1461                           ;i2c_lib.c: 157:     i2c_wait();
  1462                           
  1463                           ;incstack = 0
  1464  000DEA  ECA9  F006         	call	_i2c_wait	;wreg free
  1465                           
  1466                           ;i2c_lib.c: 160:     (debug)?printf("Exit i2c_set_start_condition()\n\r"):0;
  1467  000DEE  80C5               	bsf	4037,0,c	;volatile
  1468  000DF0  0E20               	movlw	low STR_7
  1469  000DF2  0100               	movlb	0	; () banked
  1470  000DF4  6FCC               	movwf	printf@fmt& (0+255),b
  1471  000DF6  0EFF               	movlw	high STR_7
  1472  000DF8  6FCD               	movwf	(printf@fmt+1)& (0+255),b
  1473  000DFA  EC83  F006         	call	_printf	;wreg free
  1474  000DFE  0012               	return		;funcret
  1475  000E00                     __end_of_i2c_set_start_condition:
  1476                           	opt callstack 0
  1477                           
  1478 ;; *************** function _i2c_wait *****************
  1479 ;; Defined at:
  1480 ;;		line 84 in file "i2c_lib.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;Total ram usage:        1 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:   14
  1501 ;; This function calls:
  1502 ;;		_printf
  1503 ;; This function is called by:
  1504 ;;		_i2c_display_write_inst
  1505 ;;		_i2c_write
  1506 ;;		_i2c_set_start_condition
  1507 ;;		_i2c_set_stop_condition
  1508 ;;		_readTemperature
  1509 ;;		_i2c_read
  1510 ;;		_i2c_set_restart_condition
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text7
  1515  000D52                     __ptext7:
  1516                           	opt callstack 0
  1517  000D52                     _i2c_wait:
  1518                           	opt callstack 13
  1519                           
  1520                           ;i2c_lib.c: 86:     while ( (SSP1STAT & 0x04) || (SSP1CON2 & 0x1F) );
  1521                           
  1522                           ;incstack = 0
  1523  000D52  B4C7               	btfsc	4039,2,c	;volatile
  1524  000D54  D7FE               	goto	_i2c_wait
  1525  000D56  CFC5 F03E          	movff	4037,??_i2c_wait	;volatile
  1526  000D5A  0E1F               	movlw	31
  1527  000D5C  163E               	andwf	??_i2c_wait,f,c
  1528  000D5E  A4D8               	btfss	status,2,c
  1529  000D60  D7F8               	goto	_i2c_wait
  1530  000D62  0EC1               	movlw	low STR_4
  1531  000D64  0100               	movlb	0	; () banked
  1532  000D66  6FCC               	movwf	printf@fmt& (0+255),b
  1533  000D68  0EFF               	movlw	high STR_4
  1534  000D6A  6FCD               	movwf	(printf@fmt+1)& (0+255),b
  1535  000D6C  EC83  F006         	call	_printf	;wreg free
  1536  000D70  0012               	return		;funcret
  1537  000D72                     __end_of_i2c_wait:
  1538                           	opt callstack 0
  1539                           
  1540 ;; *************** function _printf *****************
  1541 ;; Defined at:
  1542 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  fmt             2   44[BANK0 ] PTR const unsigned char 
  1545 ;;		 -> STR_11(63), STR_10(25), STR_9(24), STR_8(32), 
  1546 ;;		 -> STR_7(33), STR_6(10), STR_5(28), STR_4(18), 
  1547 ;;		 -> STR_3(18), STR_2(19), STR_1(16), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  ap              2   54[BANK0 ] PTR void [1]
  1550 ;;		 -> ?_printf(2), 
  1551 ;;  ret             2    0        int 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  2   44[BANK0 ] int 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1561 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;Total ram usage:       12 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:   13
  1568 ;; This function calls:
  1569 ;;		_vfprintf
  1570 ;; This function is called by:
  1571 ;;		_i2c_init
  1572 ;;		_i2c_wait
  1573 ;;		_i2c_set_start_condition
  1574 ;;		_i2c_set_stop_condition
  1575 ;;		_readTemperature
  1576 ;;		_i2c_read
  1577 ;;		_i2c_set_address
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text8
  1582  000D06                     __ptext8:
  1583                           	opt callstack 0
  1584  000D06                     _printf:
  1585                           	opt callstack 16
  1586                           
  1587                           ;incstack = 0
  1588  000D06  0ECE               	movlw	low (?_printf+2)
  1589  000D08  0100               	movlb	0	; () banked
  1590  000D0A  6FD6               	movwf	printf@ap& (0+255),b
  1591  000D0C  0E00               	movlw	high (?_printf+2)
  1592  000D0E  6FD7               	movwf	(printf@ap+1)& (0+255),b
  1593                           
  1594                           ; BSR set to: 0
  1595  000D10  0E00               	movlw	0
  1596  000D12  6FC4               	movwf	vfprintf@fp& (0+255),b
  1597  000D14  0E00               	movlw	0
  1598  000D16  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  1599  000D18  C0CC  F0C6         	movff	printf@fmt,vfprintf@fmt
  1600  000D1C  C0CD  F0C7         	movff	printf@fmt+1,vfprintf@fmt+1
  1601  000D20  0ED6               	movlw	low printf@ap
  1602  000D22  6FC8               	movwf	vfprintf@ap& (0+255),b
  1603  000D24  0E00               	movlw	high printf@ap
  1604  000D26  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  1605  000D28  EC6A  F005         	call	_vfprintf	;wreg free
  1606  000D2C  0012               	return		;funcret
  1607  000D2E                     __end_of_printf:
  1608                           	opt callstack 0
  1609                           
  1610 ;; *************** function _vfprintf *****************
  1611 ;; Defined at:
  1612 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  1615 ;;		 -> NULL(0), 
  1616 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  1617 ;;		 -> STR_11(63), STR_10(25), STR_9(24), STR_8(32), 
  1618 ;;		 -> STR_7(33), STR_6(10), STR_5(28), STR_4(18), 
  1619 ;;		 -> STR_3(18), STR_2(19), STR_1(16), 
  1620 ;;  ap              2   40[BANK0 ] PTR PTR void 
  1621 ;;		 -> printf@ap(2), 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  cfmt            2   42[BANK0 ] PTR unsigned char 
  1624 ;;		 -> STR_11(63), STR_10(25), STR_9(24), STR_8(32), 
  1625 ;;		 -> STR_7(33), STR_6(10), STR_5(28), STR_4(18), 
  1626 ;;		 -> STR_3(18), STR_2(19), STR_1(16), 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2   36[BANK0 ] int 
  1629 ;; Registers used:
  1630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1636 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;Total ram usage:        8 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:   12
  1643 ;; This function calls:
  1644 ;;		_vfpfcnvrt
  1645 ;; This function is called by:
  1646 ;;		_printf
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text9
  1651  000AD4                     __ptext9:
  1652                           	opt callstack 0
  1653  000AD4                     _vfprintf:
  1654                           	opt callstack 16
  1655                           
  1656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1657                           
  1658                           ;incstack = 0
  1659  000AD4  C0C6  F0CA         	movff	vfprintf@fmt,vfprintf@cfmt
  1660  000AD8  C0C7  F0CB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1661                           
  1662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1663  000ADC  0E00               	movlw	0
  1664  000ADE  0100               	movlb	0	; () banked
  1665  000AE0  6F6B               	movwf	(_nout+1)& (0+255),b
  1666  000AE2  0E00               	movlw	0
  1667  000AE4  6F6A               	movwf	_nout& (0+255),b
  1668                           
  1669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1670  000AE6  D013               	goto	l2804
  1671  000AE8                     l2802:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1675  000AE8  C0C4  F038         	movff	vfprintf@fp,vfpfcnvrt@fp
  1676  000AEC  C0C5  F039         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1677  000AF0  0ECA               	movlw	low vfprintf@cfmt
  1678  000AF2  6E3A               	movwf	vfpfcnvrt@fmt,c
  1679  000AF4  0E00               	movlw	high vfprintf@cfmt
  1680  000AF6  6E3B               	movwf	vfpfcnvrt@fmt+1,c
  1681  000AF8  C0C8  F03C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1682  000AFC  C0C9  F03D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1683  000B00  EC6E  F001         	call	_vfpfcnvrt	;wreg free
  1684  000B04  5038               	movf	?_vfpfcnvrt,w,c
  1685  000B06  0100               	movlb	0	; () banked
  1686  000B08  276A               	addwf	_nout& (0+255),f,b
  1687  000B0A  5039               	movf	?_vfpfcnvrt+1,w,c
  1688  000B0C  236B               	addwfc	(_nout+1)& (0+255),f,b
  1689  000B0E                     l2804:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1693  000B0E  C0CA  FFF6         	movff	vfprintf@cfmt,tblptrl
  1694  000B12  C0CB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1695  000B16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1696  000B16  6AF8               	clrf	tblptru,c
  1697  000B18                     	endif
  1698  000B18                     	if	0	;tblptru may be non-zero
  1699  000B18                     	endif
  1700  000B18  0008               	tblrd		*
  1701  000B1A  50F5               	movf	tablat,w,c
  1702  000B1C  0900               	iorlw	0
  1703  000B1E  A4D8               	btfss	status,2,c
  1704  000B20  D7E3               	goto	l2802
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1708  000B22  C06A  F0C4         	movff	_nout,?_vfprintf
  1709  000B26  C06B  F0C5         	movff	_nout+1,?_vfprintf+1
  1710                           
  1711                           ; BSR set to: 0
  1712  000B2A  0012               	return		;funcret
  1713  000B2C                     __end_of_vfprintf:
  1714                           	opt callstack 0
  1715                           
  1716 ;; *************** function _vfpfcnvrt *****************
  1717 ;; Defined at:
  1718 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  fp              2   55[COMRAM] PTR struct _IO_FILE
  1721 ;;		 -> NULL(0), 
  1722 ;;  fmt             2   57[COMRAM] PTR PTR unsigned char 
  1723 ;;		 -> vfprintf@cfmt(2), 
  1724 ;;  ap              2   59[COMRAM] PTR PTR void 
  1725 ;;		 -> printf@ap(2), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  ll              8   28[BANK0 ] long long 
  1728 ;;  llu             8    0        unsigned long long 
  1729 ;;  f               4    0        unsigned long long 
  1730 ;;  vp              3    0        PTR void 
  1731 ;;  ct              3    0        unsigned char [3]
  1732 ;;  cp              3    0        PTR unsigned char 
  1733 ;;  i               2    0        int 
  1734 ;;  done            2    0        int 
  1735 ;;  c               1    0        unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2   55[COMRAM] int 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1745 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;Total ram usage:       16 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:   11
  1752 ;; This function calls:
  1753 ;;		_dtoa
  1754 ;;		_fputc
  1755 ;; This function is called by:
  1756 ;;		_vfprintf
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text10
  1761  0002DC                     __ptext10:
  1762                           	opt callstack 0
  1763  0002DC                     _vfpfcnvrt:
  1764                           	opt callstack 16
  1765                           
  1766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;incstack = 0
  1770  0002DC  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1771  0002E0  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1772  0002E4  CFDE FFF6          	movff	postinc2,tblptrl
  1773  0002E8  CFDD FFF7          	movff	postdec2,tblptrh
  1774  0002EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1775  0002EC  6AF8               	clrf	tblptru,c
  1776  0002EE                     	endif
  1777  0002EE                     	if	0	;tblptru may be non-zero
  1778  0002EE                     	endif
  1779  0002EE  0008               	tblrd		*
  1780  0002F0  50F5               	movf	tablat,w,c
  1781  0002F2  0A25               	xorlw	37
  1782  0002F4  A4D8               	btfss	status,2,c
  1783  0002F6  D09D               	goto	l2790
  1784                           
  1785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1786  0002F8  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1787  0002FC  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1788  000300  2ADE               	incf	postinc2,f,c
  1789  000302  0E00               	movlw	0
  1790  000304  22DD               	addwfc	postdec2,f,c
  1791                           
  1792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1793  000306  0E00               	movlw	0
  1794  000308  0100               	movlb	0	; () banked
  1795  00030A  6F6D               	movwf	(_width+1)& (0+255),b
  1796  00030C  0E00               	movlw	0
  1797  00030E  6F6C               	movwf	_width& (0+255),b
  1798  000310  C06C  F041         	movff	_width,_flags
  1799  000314  C06D  F042         	movff	_width+1,_flags+1
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1803  000318  683F               	setf	_prec,c
  1804  00031A  6840               	setf	_prec+1,c
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1808  00031C  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1809  000320  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1810  000324  CFDE FFF6          	movff	postinc2,tblptrl
  1811  000328  CFDD FFF7          	movff	postdec2,tblptrh
  1812  00032C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1813  00032C  6AF8               	clrf	tblptru,c
  1814  00032E                     	endif
  1815  00032E                     	if	0	;tblptru may be non-zero
  1816  00032E                     	endif
  1817  00032E  0008               	tblrd		*
  1818  000330  50F5               	movf	tablat,w,c
  1819  000332  0A64               	xorlw	100
  1820  000334  B4D8               	btfsc	status,2,c
  1821  000336  D00E               	goto	u2080
  1822                           
  1823                           ; BSR set to: 0
  1824  000338  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1825  00033C  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1826  000340  CFDE FFF6          	movff	postinc2,tblptrl
  1827  000344  CFDD FFF7          	movff	postdec2,tblptrh
  1828  000348                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1829  000348  6AF8               	clrf	tblptru,c
  1830  00034A                     	endif
  1831  00034A                     	if	0	;tblptru may be non-zero
  1832  00034A                     	endif
  1833  00034A  0008               	tblrd		*
  1834  00034C  50F5               	movf	tablat,w,c
  1835  00034E  0A69               	xorlw	105
  1836  000350  A4D8               	btfss	status,2,c
  1837  000352  D03F               	goto	l2774
  1838  000354                     u2080:
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1842  000354  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1843  000358  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1844  00035C  2ADE               	incf	postinc2,f,c
  1845  00035E  0E00               	movlw	0
  1846  000360  22DD               	addwfc	postdec2,f,c
  1847                           
  1848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1849  000362  C03C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1850  000366  C03D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1851  00036A  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  1852  00036E  0E02               	movlw	2
  1853  000370  26DE               	addwf	postinc2,f,c
  1854  000372  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  1855  000376  0E00               	movlw	0
  1856  000378  22DD               	addwfc	postdec2,f,c
  1857  00037A  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1858  00037E  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1859  000382  CFDE F0BC          	movff	postinc2,vfpfcnvrt@ll
  1860  000386  CFDD F0BD          	movff	postdec2,vfpfcnvrt@ll+1
  1861  00038A  0E00               	movlw	0
  1862  00038C  BFBD               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1863  00038E  0EFF               	movlw	-1
  1864  000390  6FBE               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1865  000392  6FBF               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1866  000394  6FC0               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1867  000396  6FC1               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1868  000398  6FC2               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1869  00039A  6FC3               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1873  00039C  C038  F02E         	movff	vfpfcnvrt@fp,dtoa@fp
  1874  0003A0  C039  F02F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1875  0003A4  C0BC  F030         	movff	vfpfcnvrt@ll,dtoa@d
  1876  0003A8  C0BD  F031         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1877  0003AC  C0BE  F032         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1878  0003B0  C0BF  F033         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1879  0003B4  C0C0  F034         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1880  0003B8  C0C1  F035         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1881  0003BC  C0C2  F036         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1882  0003C0  C0C3  F037         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1883  0003C4  EC4B  F000         	call	_dtoa	;wreg free
  1884  0003C8  C02E  F038         	movff	?_dtoa,?_vfpfcnvrt
  1885  0003CC  C02F  F039         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1886  0003D0  0012               	return	
  1887  0003D2                     l2774:
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1891  0003D2  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1892  0003D6  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1893  0003DA  CFDE FFF6          	movff	postinc2,tblptrl
  1894  0003DE  CFDD FFF7          	movff	postdec2,tblptrh
  1895  0003E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1896  0003E2  6AF8               	clrf	tblptru,c
  1897  0003E4                     	endif
  1898  0003E4                     	if	0	;tblptru may be non-zero
  1899  0003E4                     	endif
  1900  0003E4  0008               	tblrd		*
  1901  0003E6  50F5               	movf	tablat,w,c
  1902  0003E8  0A25               	xorlw	37
  1903  0003EA  A4D8               	btfss	status,2,c
  1904  0003EC  D016               	goto	l2784
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1908  0003EE  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1909  0003F2  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1910  0003F6  2ADE               	incf	postinc2,f,c
  1911  0003F8  0E00               	movlw	0
  1912  0003FA  22DD               	addwfc	postdec2,f,c
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1916  0003FC  0E00               	movlw	0
  1917  0003FE  6E14               	movwf	fputc@c+1,c
  1918  000400  0E25               	movlw	37
  1919  000402  6E13               	movwf	fputc@c,c
  1920  000404  C038  F015         	movff	vfpfcnvrt@fp,fputc@fp
  1921  000408  C039  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1922  00040C  EC34  F005         	call	_fputc	;wreg free
  1923  000410                     l2780:
  1924                           
  1925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1926  000410  0E00               	movlw	0
  1927  000412  6E39               	movwf	?_vfpfcnvrt+1,c
  1928  000414  0E01               	movlw	1
  1929  000416  6E38               	movwf	?_vfpfcnvrt,c
  1930  000418  0012               	return	
  1931  00041A                     l2784:
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1935  00041A  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1936  00041E  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1937  000422  2ADE               	incf	postinc2,f,c
  1938  000424  0E00               	movlw	0
  1939  000426  22DD               	addwfc	postdec2,f,c
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1943  000428  0E00               	movlw	0
  1944  00042A  6E39               	movwf	?_vfpfcnvrt+1,c
  1945  00042C  0E00               	movlw	0
  1946  00042E  6E38               	movwf	?_vfpfcnvrt,c
  1947  000430  0012               	return	
  1948  000432                     l2790:
  1949                           
  1950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1951  000432  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1952  000436  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1953  00043A  CFDE FFF6          	movff	postinc2,tblptrl
  1954  00043E  CFDD FFF7          	movff	postdec2,tblptrh
  1955  000442                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1956  000442  6AF8               	clrf	tblptru,c
  1957  000444                     	endif
  1958  000444                     	if	0	;tblptru may be non-zero
  1959  000444                     	endif
  1960  000444  0008               	tblrd		*
  1961  000446  50F5               	movf	tablat,w,c
  1962  000448  6E13               	movwf	fputc@c,c
  1963  00044A  6A14               	clrf	fputc@c+1,c
  1964  00044C  C038  F015         	movff	vfpfcnvrt@fp,fputc@fp
  1965  000450  C039  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1966  000454  EC34  F005         	call	_fputc	;wreg free
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1969  000458  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1970  00045C  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1971  000460  2ADE               	incf	postinc2,f,c
  1972  000462  0E00               	movlw	0
  1973  000464  22DD               	addwfc	postdec2,f,c
  1974  000466  D7D4               	goto	l2780
  1975  000468                     __end_of_vfpfcnvrt:
  1976                           	opt callstack 0
  1977                           
  1978 ;; *************** function _dtoa *****************
  1979 ;; Defined at:
  1980 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  1983 ;;		 -> NULL(0), 
  1984 ;;  d               8   47[COMRAM] long long 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  n               8   16[BANK0 ] long long 
  1987 ;;  i               2   24[BANK0 ] int 
  1988 ;;  s               2   14[BANK0 ] int 
  1989 ;;  w               2   12[BANK0 ] int 
  1990 ;;  p               2   10[BANK0 ] int 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  2   45[COMRAM] int 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2000 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;Total ram usage:       36 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:   10
  2007 ;; This function calls:
  2008 ;;		___aodiv
  2009 ;;		___aomod
  2010 ;;		_abs
  2011 ;;		_pad
  2012 ;; This function is called by:
  2013 ;;		_vfpfcnvrt
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text11
  2018  000096                     __ptext11:
  2019                           	opt callstack 0
  2020  000096                     _dtoa:
  2021                           	opt callstack 16
  2022                           
  2023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2024                           
  2025                           ;incstack = 0
  2026  000096  C030  F0B0         	movff	dtoa@d,dtoa@n
  2027  00009A  C031  F0B1         	movff	dtoa@d+1,dtoa@n+1
  2028  00009E  C032  F0B2         	movff	dtoa@d+2,dtoa@n+2
  2029  0000A2  C033  F0B3         	movff	dtoa@d+3,dtoa@n+3
  2030  0000A6  C034  F0B4         	movff	dtoa@d+4,dtoa@n+4
  2031  0000AA  C035  F0B5         	movff	dtoa@d+5,dtoa@n+5
  2032  0000AE  C036  F0B6         	movff	dtoa@d+6,dtoa@n+6
  2033  0000B2  C037  F0B7         	movff	dtoa@d+7,dtoa@n+7
  2034                           
  2035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2036  0000B6  0100               	movlb	0	; () banked
  2037  0000B8  AFB7               	btfss	(dtoa@n+7)& (0+255),7,b
  2038  0000BA  D002               	goto	u1910
  2039  0000BC  0E01               	movlw	1
  2040  0000BE  D001               	goto	u1920
  2041  0000C0                     u1910:
  2042  0000C0  0E00               	movlw	0
  2043  0000C2                     u1920:
  2044  0000C2  6FAE               	movwf	dtoa@s& (0+255),b
  2045  0000C4  6BAF               	clrf	(dtoa@s+1)& (0+255),b
  2046                           
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2048  0000C6  51AE               	movf	dtoa@s& (0+255),w,b
  2049  0000C8  11AF               	iorwf	(dtoa@s+1)& (0+255),w,b
  2050  0000CA  B4D8               	btfsc	status,2,c
  2051  0000CC  D010               	goto	l2700
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2055  0000CE  1FB7               	comf	(dtoa@n+7)& (0+255),f,b
  2056  0000D0  1FB6               	comf	(dtoa@n+6)& (0+255),f,b
  2057  0000D2  1FB5               	comf	(dtoa@n+5)& (0+255),f,b
  2058  0000D4  1FB4               	comf	(dtoa@n+4)& (0+255),f,b
  2059  0000D6  1FB3               	comf	(dtoa@n+3)& (0+255),f,b
  2060  0000D8  1FB2               	comf	(dtoa@n+2)& (0+255),f,b
  2061  0000DA  1FB1               	comf	(dtoa@n+1)& (0+255),f,b
  2062  0000DC  6DB0               	negf	dtoa@n& (0+255),b
  2063  0000DE  0E00               	movlw	0
  2064  0000E0  23B1               	addwfc	(dtoa@n+1)& (0+255),f,b
  2065  0000E2  23B2               	addwfc	(dtoa@n+2)& (0+255),f,b
  2066  0000E4  23B3               	addwfc	(dtoa@n+3)& (0+255),f,b
  2067  0000E6  23B4               	addwfc	(dtoa@n+4)& (0+255),f,b
  2068  0000E8  23B5               	addwfc	(dtoa@n+5)& (0+255),f,b
  2069  0000EA  23B6               	addwfc	(dtoa@n+6)& (0+255),f,b
  2070  0000EC  23B7               	addwfc	(dtoa@n+7)& (0+255),f,b
  2071  0000EE                     l2700:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2075  0000EE  AE40               	btfss	_prec+1,7,c
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2079  0000F0  9241               	bcf	_flags,1,c
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2083  0000F2  BE40               	btfsc	_prec+1,7,c
  2084  0000F4  D005               	goto	u1950
  2085  0000F6  5040               	movf	_prec+1,w,c
  2086  0000F8  E108               	bnz	l560
  2087  0000FA  043F               	decf	_prec,w,c
  2088  0000FC  B0D8               	btfsc	status,0,c
  2089  0000FE  D005               	goto	l560
  2090  000100                     u1950:
  2091                           
  2092                           ; BSR set to: 0
  2093  000100  0E00               	movlw	0
  2094  000102  6FAB               	movwf	(dtoa@p+1)& (0+255),b
  2095  000104  0E01               	movlw	1
  2096  000106  6FAA               	movwf	dtoa@p& (0+255),b
  2097  000108  D004               	goto	l562
  2098  00010A                     l560:
  2099                           
  2100                           ; BSR set to: 0
  2101  00010A  C03F  F0AA         	movff	_prec,dtoa@p
  2102  00010E  C040  F0AB         	movff	_prec+1,dtoa@p+1
  2103  000112                     l562:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2107  000112  C06C  F0AC         	movff	_width,dtoa@w
  2108  000116  C06D  F0AD         	movff	_width+1,dtoa@w+1
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2112  00011A  51AE               	movf	dtoa@s& (0+255),w,b
  2113  00011C  11AF               	iorwf	(dtoa@s+1)& (0+255),w,b
  2114  00011E  A4D8               	btfss	status,2,c
  2115  000120  D002               	goto	u1970
  2116                           
  2117                           ; BSR set to: 0
  2118  000122  A441               	btfss	_flags,2,c
  2119  000124  D003               	goto	l2714
  2120  000126                     u1970:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2124  000126  07AC               	decf	dtoa@w& (0+255),f,b
  2125  000128  A0D8               	btfss	status,0,c
  2126  00012A  07AD               	decf	(dtoa@w+1)& (0+255),f,b
  2127  00012C                     l2714:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2131  00012C  0E00               	movlw	0
  2132  00012E  6FB9               	movwf	(dtoa@i+1)& (0+255),b
  2133  000130  0E1F               	movlw	31
  2134  000132  6FB8               	movwf	dtoa@i& (0+255),b
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2138  000134  0E00               	movlw	0
  2139  000136  6F9F               	movwf	(_dbuf+31)& (0+255),b
  2140                           
  2141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2142  000138  D07D               	goto	l2728
  2143  00013A                     l2718:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2147  00013A  07B8               	decf	dtoa@i& (0+255),f,b
  2148  00013C  A0D8               	btfss	status,0,c
  2149  00013E  07B9               	decf	(dtoa@i+1)& (0+255),f,b
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2153  000140  0E80               	movlw	low _dbuf
  2154  000142  25B8               	addwf	dtoa@i& (0+255),w,b
  2155  000144  6ED9               	movwf	fsr2l,c
  2156  000146  0E00               	movlw	high _dbuf
  2157  000148  21B9               	addwfc	(dtoa@i+1)& (0+255),w,b
  2158  00014A  6EDA               	movwf	fsr2h,c
  2159  00014C  C0B0  F011         	movff	dtoa@n,___aomod@dividend
  2160  000150  C0B1  F012         	movff	dtoa@n+1,___aomod@dividend+1
  2161  000154  C0B2  F013         	movff	dtoa@n+2,___aomod@dividend+2
  2162  000158  C0B3  F014         	movff	dtoa@n+3,___aomod@dividend+3
  2163  00015C  C0B4  F015         	movff	dtoa@n+4,___aomod@dividend+4
  2164  000160  C0B5  F016         	movff	dtoa@n+5,___aomod@dividend+5
  2165  000164  C0B6  F017         	movff	dtoa@n+6,___aomod@dividend+6
  2166  000168  C0B7  F018         	movff	dtoa@n+7,___aomod@dividend+7
  2167  00016C  0E0A               	movlw	10
  2168  00016E  6E19               	movwf	___aomod@divisor,c
  2169  000170  0E00               	movlw	0
  2170  000172  6E1A               	movwf	___aomod@divisor+1,c
  2171  000174  0E00               	movlw	0
  2172  000176  6E1B               	movwf	___aomod@divisor+2,c
  2173  000178  0E00               	movlw	0
  2174  00017A  6E1C               	movwf	___aomod@divisor+3,c
  2175  00017C  0E00               	movlw	0
  2176  00017E  6E1D               	movwf	___aomod@divisor+4,c
  2177  000180  0E00               	movlw	0
  2178  000182  6E1E               	movwf	___aomod@divisor+5,c
  2179  000184  0E00               	movlw	0
  2180  000186  6E1F               	movwf	___aomod@divisor+6,c
  2181  000188  0E00               	movlw	0
  2182  00018A  6E20               	movwf	___aomod@divisor+7,c
  2183  00018C  ECD8  F002         	call	___aomod	;wreg free
  2184  000190  C011  F0A0         	movff	?___aomod,??_dtoa
  2185  000194  C012  F0A1         	movff	?___aomod+1,??_dtoa+1
  2186  000198  C013  F0A2         	movff	?___aomod+2,??_dtoa+2
  2187  00019C  C014  F0A3         	movff	?___aomod+3,??_dtoa+3
  2188  0001A0  C015  F0A4         	movff	?___aomod+4,??_dtoa+4
  2189  0001A4  C016  F0A5         	movff	?___aomod+5,??_dtoa+5
  2190  0001A8  C017  F0A6         	movff	?___aomod+6,??_dtoa+6
  2191  0001AC  C018  F0A7         	movff	?___aomod+7,??_dtoa+7
  2192  0001B0  C0A0  F023         	movff	??_dtoa,abs@a
  2193  0001B4  C0A2  F024         	movff	??_dtoa+2,abs@a+1
  2194  0001B8  EC12  F006         	call	_abs	;wreg free
  2195  0001BC  5023               	movf	?_abs,w,c
  2196  0001BE  0F30               	addlw	48
  2197  0001C0  6EDF               	movwf	indf2,c
  2198                           
  2199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2200  0001C2  0100               	movlb	0	; () banked
  2201  0001C4  07AA               	decf	dtoa@p& (0+255),f,b
  2202  0001C6  A0D8               	btfss	status,0,c
  2203  0001C8  07AB               	decf	(dtoa@p+1)& (0+255),f,b
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2207  0001CA  07AC               	decf	dtoa@w& (0+255),f,b
  2208  0001CC  A0D8               	btfss	status,0,c
  2209  0001CE  07AD               	decf	(dtoa@w+1)& (0+255),f,b
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2213  0001D0  C0B0  F011         	movff	dtoa@n,___aodiv@dividend
  2214  0001D4  C0B1  F012         	movff	dtoa@n+1,___aodiv@dividend+1
  2215  0001D8  C0B2  F013         	movff	dtoa@n+2,___aodiv@dividend+2
  2216  0001DC  C0B3  F014         	movff	dtoa@n+3,___aodiv@dividend+3
  2217  0001E0  C0B4  F015         	movff	dtoa@n+4,___aodiv@dividend+4
  2218  0001E4  C0B5  F016         	movff	dtoa@n+5,___aodiv@dividend+5
  2219  0001E8  C0B6  F017         	movff	dtoa@n+6,___aodiv@dividend+6
  2220  0001EC  C0B7  F018         	movff	dtoa@n+7,___aodiv@dividend+7
  2221  0001F0  0E0A               	movlw	10
  2222  0001F2  6E19               	movwf	___aodiv@divisor,c
  2223  0001F4  0E00               	movlw	0
  2224  0001F6  6E1A               	movwf	___aodiv@divisor+1,c
  2225  0001F8  0E00               	movlw	0
  2226  0001FA  6E1B               	movwf	___aodiv@divisor+2,c
  2227  0001FC  0E00               	movlw	0
  2228  0001FE  6E1C               	movwf	___aodiv@divisor+3,c
  2229  000200  0E00               	movlw	0
  2230  000202  6E1D               	movwf	___aodiv@divisor+4,c
  2231  000204  0E00               	movlw	0
  2232  000206  6E1E               	movwf	___aodiv@divisor+5,c
  2233  000208  0E00               	movlw	0
  2234  00020A  6E1F               	movwf	___aodiv@divisor+6,c
  2235  00020C  0E00               	movlw	0
  2236  00020E  6E20               	movwf	___aodiv@divisor+7,c
  2237  000210  EC34  F002         	call	___aodiv	;wreg free
  2238  000214  C011  F0B0         	movff	?___aodiv,dtoa@n
  2239  000218  C012  F0B1         	movff	?___aodiv+1,dtoa@n+1
  2240  00021C  C013  F0B2         	movff	?___aodiv+2,dtoa@n+2
  2241  000220  C014  F0B3         	movff	?___aodiv+3,dtoa@n+3
  2242  000224  C015  F0B4         	movff	?___aodiv+4,dtoa@n+4
  2243  000228  C016  F0B5         	movff	?___aodiv+5,dtoa@n+5
  2244  00022C  C017  F0B6         	movff	?___aodiv+6,dtoa@n+6
  2245  000230  C018  F0B7         	movff	?___aodiv+7,dtoa@n+7
  2246  000234                     l2728:
  2247                           
  2248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2249  000234  0100               	movlb	0	; () banked
  2250  000236  BFB9               	btfsc	(dtoa@i+1)& (0+255),7,b
  2251  000238  D01F               	goto	u2020
  2252  00023A  51B9               	movf	(dtoa@i+1)& (0+255),w,b
  2253  00023C  E103               	bnz	u1980
  2254  00023E  05B8               	decf	dtoa@i& (0+255),w,b
  2255  000240  A0D8               	btfss	status,0,c
  2256  000242  D01A               	goto	u2020
  2257  000244                     u1980:
  2258                           
  2259                           ; BSR set to: 0
  2260  000244  51B0               	movf	dtoa@n& (0+255),w,b
  2261  000246  11B1               	iorwf	(dtoa@n+1)& (0+255),w,b
  2262  000248  11B2               	iorwf	(dtoa@n+2)& (0+255),w,b
  2263  00024A  11B3               	iorwf	(dtoa@n+3)& (0+255),w,b
  2264  00024C  11B4               	iorwf	(dtoa@n+4)& (0+255),w,b
  2265  00024E  11B5               	iorwf	(dtoa@n+5)& (0+255),w,b
  2266  000250  11B6               	iorwf	(dtoa@n+6)& (0+255),w,b
  2267  000252  11B7               	iorwf	(dtoa@n+7)& (0+255),w,b
  2268  000254  A4D8               	btfss	status,2,c
  2269  000256  D771               	goto	l2718
  2270                           
  2271                           ; BSR set to: 0
  2272  000258  BFAB               	btfsc	(dtoa@p+1)& (0+255),7,b
  2273  00025A  D005               	goto	u2000
  2274  00025C  51AB               	movf	(dtoa@p+1)& (0+255),w,b
  2275  00025E  E102               	bnz	u2001
  2276  000260  05AA               	decf	dtoa@p& (0+255),w,b
  2277  000262  B0D8               	btfsc	status,0,c
  2278  000264                     u2001:
  2279  000264  D76A               	goto	l2718
  2280  000266                     u2000:
  2281                           
  2282                           ; BSR set to: 0
  2283  000266  BFAD               	btfsc	(dtoa@w+1)& (0+255),7,b
  2284  000268  D007               	goto	u2020
  2285  00026A  51AD               	movf	(dtoa@w+1)& (0+255),w,b
  2286  00026C  E103               	bnz	u2010
  2287  00026E  05AC               	decf	dtoa@w& (0+255),w,b
  2288  000270  A0D8               	btfss	status,0,c
  2289  000272  D002               	goto	u2020
  2290  000274                     u2010:
  2291                           
  2292                           ; BSR set to: 0
  2293  000274  B241               	btfsc	_flags,1,c
  2294  000276  D761               	goto	l2718
  2295  000278                     u2020:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2299  000278  51AE               	movf	dtoa@s& (0+255),w,b
  2300  00027A  11AF               	iorwf	(dtoa@s+1)& (0+255),w,b
  2301  00027C  A4D8               	btfss	status,2,c
  2302  00027E  D002               	goto	u2040
  2303                           
  2304                           ; BSR set to: 0
  2305  000280  A441               	btfss	_flags,2,c
  2306  000282  D017               	goto	l2752
  2307  000284                     u2040:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2311  000284  07B8               	decf	dtoa@i& (0+255),f,b
  2312  000286  A0D8               	btfss	status,0,c
  2313  000288  07B9               	decf	(dtoa@i+1)& (0+255),f,b
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2317  00028A  51AE               	movf	dtoa@s& (0+255),w,b
  2318  00028C  11AF               	iorwf	(dtoa@s+1)& (0+255),w,b
  2319  00028E  A4D8               	btfss	status,2,c
  2320  000290  D004               	goto	l2748
  2321                           
  2322                           ; BSR set to: 0
  2323  000292  0E00               	movlw	0
  2324  000294  6FA9               	movwf	(_dtoa$1254+1)& (0+255),b
  2325  000296  0E2B               	movlw	43
  2326  000298  D003               	goto	L1
  2327  00029A                     l2748:
  2328                           
  2329                           ; BSR set to: 0
  2330  00029A  0E00               	movlw	0
  2331  00029C  6FA9               	movwf	(_dtoa$1254+1)& (0+255),b
  2332  00029E  0E2D               	movlw	45
  2333  0002A0                     L1:
  2334  0002A0  6FA8               	movwf	_dtoa$1254& (0+255),b
  2335                           
  2336                           ; BSR set to: 0
  2337  0002A2  0E80               	movlw	low _dbuf
  2338  0002A4  25B8               	addwf	dtoa@i& (0+255),w,b
  2339  0002A6  6ED9               	movwf	fsr2l,c
  2340  0002A8  0E00               	movlw	high _dbuf
  2341  0002AA  21B9               	addwfc	(dtoa@i+1)& (0+255),w,b
  2342  0002AC  6EDA               	movwf	fsr2h,c
  2343  0002AE  C0A8  FFDF         	movff	_dtoa$1254,indf2
  2344  0002B2                     l2752:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2348  0002B2  C02E  F023         	movff	dtoa@fp,pad@fp
  2349  0002B6  C02F  F024         	movff	dtoa@fp+1,pad@fp+1
  2350  0002BA  0E80               	movlw	low _dbuf
  2351  0002BC  25B8               	addwf	dtoa@i& (0+255),w,b
  2352  0002BE  6E25               	movwf	pad@buf,c
  2353  0002C0  0E00               	movlw	high _dbuf
  2354  0002C2  21B9               	addwfc	(dtoa@i+1)& (0+255),w,b
  2355  0002C4  6E26               	movwf	pad@buf+1,c
  2356  0002C6  C0AC  F027         	movff	dtoa@w,pad@p
  2357  0002CA  C0AD  F028         	movff	dtoa@w+1,pad@p+1
  2358  0002CE  ECB6  F003         	call	_pad	;wreg free
  2359  0002D2  C023  F02E         	movff	?_pad,?_dtoa
  2360  0002D6  C024  F02F         	movff	?_pad+1,?_dtoa+1
  2361  0002DA  0012               	return		;funcret
  2362  0002DC                     __end_of_dtoa:
  2363                           	opt callstack 0
  2364                           
  2365 ;; *************** function _pad *****************
  2366 ;; Defined at:
  2367 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  2370 ;;		 -> NULL(0), 
  2371 ;;  buf             2   36[COMRAM] PTR unsigned char 
  2372 ;;		 -> dbuf(32), 
  2373 ;;  p               2   38[COMRAM] int 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  w               2   43[COMRAM] int 
  2376 ;;  i               2   41[COMRAM] int 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2   34[COMRAM] int 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2386 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;Total ram usage:       11 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    9
  2393 ;; This function calls:
  2394 ;;		_fputc
  2395 ;;		_fputs
  2396 ;;		_strlen
  2397 ;; This function is called by:
  2398 ;;		_dtoa
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text12
  2403  00076C                     __ptext12:
  2404                           	opt callstack 0
  2405  00076C                     _pad:
  2406                           	opt callstack 16
  2407                           
  2408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2409                           
  2410                           ;incstack = 0
  2411  00076C  A041               	btfss	_flags,0,c
  2412  00076E  D00A               	goto	l2088
  2413                           
  2414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2415  000770  C025  F01C         	movff	pad@buf,fputs@s
  2416  000774  C026  F01D         	movff	pad@buf+1,fputs@s+1
  2417  000778  C023  F01E         	movff	pad@fp,fputs@fp
  2418  00077C  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  2419  000780  ECDB  F005         	call	_fputs	;wreg free
  2420  000784                     l2088:
  2421                           
  2422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2423  000784  BE28               	btfsc	pad@p+1,7,c
  2424  000786  D005               	goto	l2092
  2425  000788  C027  F02C         	movff	pad@p,pad@w
  2426  00078C  C028  F02D         	movff	pad@p+1,pad@w+1
  2427  000790  D004               	goto	l549
  2428  000792                     l2092:
  2429  000792  0E00               	movlw	0
  2430  000794  6E2D               	movwf	pad@w+1,c
  2431  000796  0E00               	movlw	0
  2432  000798  6E2C               	movwf	pad@w,c
  2433  00079A                     l549:
  2434                           
  2435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2436  00079A  0E00               	movlw	0
  2437  00079C  6E2B               	movwf	pad@i+1,c
  2438  00079E  0E00               	movlw	0
  2439  0007A0  6E2A               	movwf	pad@i,c
  2440                           
  2441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2442  0007A2  D00C               	goto	l2098
  2443  0007A4                     l2094:
  2444                           
  2445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2446  0007A4  0E00               	movlw	0
  2447  0007A6  6E14               	movwf	fputc@c+1,c
  2448  0007A8  0E20               	movlw	32
  2449  0007AA  6E13               	movwf	fputc@c,c
  2450  0007AC  C023  F015         	movff	pad@fp,fputc@fp
  2451  0007B0  C024  F016         	movff	pad@fp+1,fputc@fp+1
  2452  0007B4  EC34  F005         	call	_fputc	;wreg free
  2453                           
  2454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2455  0007B8  4A2A               	infsnz	pad@i,f,c
  2456  0007BA  2A2B               	incf	pad@i+1,f,c
  2457  0007BC                     l2098:
  2458                           
  2459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2460  0007BC  502C               	movf	pad@w,w,c
  2461  0007BE  5C2A               	subwf	pad@i,w,c
  2462  0007C0  502B               	movf	pad@i+1,w,c
  2463  0007C2  0A80               	xorlw	128
  2464  0007C4  6E29               	movwf	??_pad& (0+255),c
  2465  0007C6  502D               	movf	pad@w+1,w,c
  2466  0007C8  0A80               	xorlw	128
  2467  0007CA  5829               	subwfb	??_pad& (0+255),w,c
  2468  0007CC  A0D8               	btfss	status,0,c
  2469  0007CE  D7EA               	goto	l2094
  2470                           
  2471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2472  0007D0  B041               	btfsc	_flags,0,c
  2473  0007D2  D00A               	goto	l2102
  2474                           
  2475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2476  0007D4  C025  F01C         	movff	pad@buf,fputs@s
  2477  0007D8  C026  F01D         	movff	pad@buf+1,fputs@s+1
  2478  0007DC  C023  F01E         	movff	pad@fp,fputs@fp
  2479  0007E0  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  2480  0007E4  ECDB  F005         	call	_fputs	;wreg free
  2481  0007E8                     l2102:
  2482                           
  2483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2484  0007E8  C025  F011         	movff	pad@buf,strlen@s
  2485  0007EC  C026  F012         	movff	pad@buf+1,strlen@s+1
  2486  0007F0  EC59  F006         	call	_strlen	;wreg free
  2487  0007F4  502C               	movf	pad@w,w,c
  2488  0007F6  2411               	addwf	?_strlen,w,c
  2489  0007F8  6E23               	movwf	?_pad,c
  2490  0007FA  502D               	movf	pad@w+1,w,c
  2491  0007FC  2012               	addwfc	?_strlen+1,w,c
  2492  0007FE  6E24               	movwf	?_pad+1,c
  2493  000800  0012               	return		;funcret
  2494  000802                     __end_of_pad:
  2495                           	opt callstack 0
  2496                           
  2497 ;; *************** function _strlen *****************
  2498 ;; Defined at:
  2499 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  s               2   16[COMRAM] PTR const unsigned char 
  2502 ;;		 -> dbuf(32), 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  a               2   18[COMRAM] PTR const unsigned char 
  2505 ;;		 -> dbuf(32), 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  2   16[COMRAM] unsigned int 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;Total ram usage:        4 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    5
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_pad
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text13
  2530  000CB2                     __ptext13:
  2531                           	opt callstack 0
  2532  000CB2                     _strlen:
  2533                           	opt callstack 19
  2534                           
  2535                           ;incstack = 0
  2536  000CB2  C011  F013         	movff	strlen@s,strlen@a
  2537  000CB6  C012  F014         	movff	strlen@s+1,strlen@a+1
  2538  000CBA  D002               	goto	l2078
  2539  000CBC                     l2076:
  2540  000CBC  4A11               	infsnz	strlen@s,f,c
  2541  000CBE  2A12               	incf	strlen@s+1,f,c
  2542  000CC0                     l2078:
  2543  000CC0  C011  FFD9         	movff	strlen@s,fsr2l
  2544  000CC4  C012  FFDA         	movff	strlen@s+1,fsr2h
  2545  000CC8  50DF               	movf	indf2,w,c
  2546  000CCA  A4D8               	btfss	status,2,c
  2547  000CCC  D7F7               	goto	l2076
  2548  000CCE  5013               	movf	strlen@a,w,c
  2549  000CD0  5C11               	subwf	strlen@s,w,c
  2550  000CD2  6E11               	movwf	?_strlen,c
  2551  000CD4  5014               	movf	strlen@a+1,w,c
  2552  000CD6  5812               	subwfb	strlen@s+1,w,c
  2553  000CD8  6E12               	movwf	?_strlen+1,c
  2554  000CDA  0012               	return		;funcret
  2555  000CDC                     __end_of_strlen:
  2556                           	opt callstack 0
  2557                           
  2558 ;; *************** function _fputs *****************
  2559 ;; Defined at:
  2560 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  s               2   27[COMRAM] PTR const unsigned char 
  2563 ;;		 -> dbuf(32), 
  2564 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2565 ;;		 -> NULL(0), 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  i               2   32[COMRAM] int 
  2568 ;;  c               1   31[COMRAM] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  2   27[COMRAM] int 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2578 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;Total ram usage:        7 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    8
  2585 ;; This function calls:
  2586 ;;		_fputc
  2587 ;; This function is called by:
  2588 ;;		_pad
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text14
  2593  000BB6                     __ptext14:
  2594                           	opt callstack 0
  2595  000BB6                     _fputs:
  2596                           	opt callstack 16
  2597                           
  2598                           ;incstack = 0
  2599  000BB6  0E00               	movlw	0
  2600  000BB8  6E22               	movwf	fputs@i+1,c
  2601  000BBA  0E00               	movlw	0
  2602  000BBC  6E21               	movwf	fputs@i,c
  2603  000BBE  D00B               	goto	l2072
  2604  000BC0                     l2068:
  2605  000BC0  C020  F013         	movff	fputs@c,fputc@c
  2606  000BC4  6A14               	clrf	fputc@c+1,c
  2607  000BC6  C01E  F015         	movff	fputs@fp,fputc@fp
  2608  000BCA  C01F  F016         	movff	fputs@fp+1,fputc@fp+1
  2609  000BCE  EC34  F005         	call	_fputc	;wreg free
  2610  000BD2  4A21               	infsnz	fputs@i,f,c
  2611  000BD4  2A22               	incf	fputs@i+1,f,c
  2612  000BD6                     l2072:
  2613  000BD6  5021               	movf	fputs@i,w,c
  2614  000BD8  241C               	addwf	fputs@s,w,c
  2615  000BDA  6ED9               	movwf	fsr2l,c
  2616  000BDC  5022               	movf	fputs@i+1,w,c
  2617  000BDE  201D               	addwfc	fputs@s+1,w,c
  2618  000BE0  6EDA               	movwf	fsr2h,c
  2619  000BE2  50DF               	movf	indf2,w,c
  2620  000BE4  6E20               	movwf	fputs@c,c
  2621  000BE6  5020               	movf	fputs@c,w,c
  2622  000BE8  B4D8               	btfsc	status,2,c
  2623  000BEA  0012               	return	
  2624  000BEC  D7E9               	goto	l2068
  2625  000BEE                     __end_of_fputs:
  2626                           	opt callstack 0
  2627                           
  2628 ;; *************** function _fputc *****************
  2629 ;; Defined at:
  2630 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  c               2   18[COMRAM] int 
  2633 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2634 ;;		 -> NULL(0), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  2   18[COMRAM] int 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;Total ram usage:        9 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    7
  2653 ;; This function calls:
  2654 ;;		_putch
  2655 ;; This function is called by:
  2656 ;;		_pad
  2657 ;;		_vfpfcnvrt
  2658 ;;		_fputs
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text15
  2663  000A68                     __ptext15:
  2664                           	opt callstack 0
  2665  000A68                     _fputc:
  2666                           	opt callstack 19
  2667                           
  2668                           ;incstack = 0
  2669  000A68  5015               	movf	fputc@fp,w,c
  2670  000A6A  1016               	iorwf	fputc@fp+1,w,c
  2671  000A6C  B4D8               	btfsc	status,2,c
  2672  000A6E  D004               	goto	u1030
  2673  000A70  5015               	movf	fputc@fp,w,c
  2674  000A72  1016               	iorwf	fputc@fp+1,w,c
  2675  000A74  A4D8               	btfss	status,2,c
  2676  000A76  D004               	goto	l2058
  2677  000A78                     u1030:
  2678  000A78  5013               	movf	fputc@c,w,c
  2679  000A7A  EC25  F007         	call	_putch
  2680  000A7E  0012               	return	
  2681  000A80                     l2058:
  2682  000A80  EE20 F004          	lfsr	2,4
  2683  000A84  5015               	movf	fputc@fp,w,c
  2684  000A86  26D9               	addwf	fsr2l,f,c
  2685  000A88  5016               	movf	fputc@fp+1,w,c
  2686  000A8A  22DA               	addwfc	fsr2h,f,c
  2687  000A8C  50DE               	movf	postinc2,w,c
  2688  000A8E  10DE               	iorwf	postinc2,w,c
  2689  000A90  B4D8               	btfsc	status,2,c
  2690  000A92  D016               	goto	u1050
  2691  000A94  EE20 F004          	lfsr	2,4
  2692  000A98  5015               	movf	fputc@fp,w,c
  2693  000A9A  26D9               	addwf	fsr2l,f,c
  2694  000A9C  5016               	movf	fputc@fp+1,w,c
  2695  000A9E  22DA               	addwfc	fsr2h,f,c
  2696  000AA0  EE10 F002          	lfsr	1,2
  2697  000AA4  5015               	movf	fputc@fp,w,c
  2698  000AA6  26E1               	addwf	fsr1l,f,c
  2699  000AA8  5016               	movf	fputc@fp+1,w,c
  2700  000AAA  22E2               	addwfc	fsr1h,f,c
  2701  000AAC  50DE               	movf	postinc2,w,c
  2702  000AAE  5CE6               	subwf	postinc1,w,c
  2703  000AB0  50E6               	movf	postinc1,w,c
  2704  000AB2  0A80               	xorlw	128
  2705  000AB4  6E1B               	movwf	(??_fputc+4)& (0+255),c
  2706  000AB6  50DE               	movf	postinc2,w,c
  2707  000AB8  0A80               	xorlw	128
  2708  000ABA  581B               	subwfb	(??_fputc+4)& (0+255),w,c
  2709  000ABC  B0D8               	btfsc	status,0,c
  2710  000ABE  0012               	return	
  2711  000AC0                     u1050:
  2712  000AC0  EE20 F002          	lfsr	2,2
  2713  000AC4  5015               	movf	fputc@fp,w,c
  2714  000AC6  26D9               	addwf	fsr2l,f,c
  2715  000AC8  5016               	movf	fputc@fp+1,w,c
  2716  000ACA  22DA               	addwfc	fsr2h,f,c
  2717  000ACC  2ADE               	incf	postinc2,f,c
  2718  000ACE  0E00               	movlw	0
  2719  000AD0  22DD               	addwfc	postdec2,f,c
  2720  000AD2  0012               	return		;funcret
  2721  000AD4                     __end_of_fputc:
  2722                           	opt callstack 0
  2723                           
  2724 ;; *************** function _putch *****************
  2725 ;; Defined at:
  2726 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  txData          1    wreg     unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  txData          1   17[COMRAM] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;Total ram usage:        1 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    6
  2747 ;; This function calls:
  2748 ;;		_EUSART1_Write
  2749 ;; This function is called by:
  2750 ;;		_fputc
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text16
  2755  000E4A                     __ptext16:
  2756                           	opt callstack 0
  2757  000E4A                     _putch:
  2758                           	opt callstack 19
  2759                           
  2760                           ;incstack = 0
  2761                           ;putch@txData stored from wreg
  2762  000E4A  6E12               	movwf	putch@txData,c
  2763                           
  2764                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  2765  000E4C  5012               	movf	putch@txData,w,c
  2766  000E4E  ECF7  F005         	call	_EUSART1_Write
  2767  000E52  0012               	return		;funcret
  2768  000E54                     __end_of_putch:
  2769                           	opt callstack 0
  2770                           
  2771 ;; *************** function _EUSART1_Write *****************
  2772 ;; Defined at:
  2773 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  txData          1    wreg     unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  txData          1   16[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;Total ram usage:        1 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    5
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_putch
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text17
  2802  000BEE                     __ptext17:
  2803                           	opt callstack 0
  2804  000BEE                     _EUSART1_Write:
  2805                           	opt callstack 19
  2806                           
  2807                           ;incstack = 0
  2808                           ;EUSART1_Write@txData stored from wreg
  2809  000BEE  6E11               	movwf	EUSART1_Write@txData,c
  2810  000BF0                     
  2811                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  2812                           
  2813                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  2814  000BF0  5049               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  2815  000BF2  B4D8               	btfsc	status,2,c
  2816  000BF4  D7FD               	goto	l2032
  2817                           
  2818                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  2819  000BF6  B89D               	btfsc	3997,4,c	;volatile
  2820  000BF8  D003               	goto	l241
  2821                           
  2822                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  2823  000BFA  C011  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2824                           
  2825                           ;mcc_generated_files/eusart1.c: 182:     }
  2826  000BFE  D010               	goto	l2048
  2827  000C00                     l241:
  2828                           
  2829                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  2830  000C00  989D               	bcf	3997,4,c	;volatile
  2831                           
  2832                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  2833  000C02  0E80               	movlw	low _eusart1TxBuffer
  2834  000C04  244B               	addwf	_eusart1TxHead,w,c	;volatile
  2835  000C06  6ED9               	movwf	fsr2l,c
  2836  000C08  6ADA               	clrf	fsr2h,c
  2837  000C0A  0E01               	movlw	high _eusart1TxBuffer
  2838  000C0C  22DA               	addwfc	fsr2h,f,c
  2839  000C0E  C011  FFDF         	movff	EUSART1_Write@txData,indf2
  2840  000C12  2A4B               	incf	_eusart1TxHead,f,c	;volatile
  2841                           
  2842                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  2843  000C14  0E3F               	movlw	63
  2844  000C16  644B               	cpfsgt	_eusart1TxHead,c	;volatile
  2845  000C18  D002               	goto	l2046
  2846                           
  2847                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2848  000C1A  0E00               	movlw	0
  2849  000C1C  6E4B               	movwf	_eusart1TxHead,c	;volatile
  2850  000C1E                     l2046:
  2851                           
  2852                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2853  000C1E  0649               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  2854  000C20                     l2048:
  2855                           
  2856                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  2857  000C20  889D               	bsf	3997,4,c	;volatile
  2858  000C22  0012               	return		;funcret
  2859  000C24                     __end_of_EUSART1_Write:
  2860                           	opt callstack 0
  2861                           
  2862 ;; *************** function _abs *****************
  2863 ;; Defined at:
  2864 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  a               2   34[COMRAM] int 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  2   34[COMRAM] int 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;Total ram usage:        4 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    5
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_dtoa
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text18
  2893  000C24                     __ptext18:
  2894                           	opt callstack 0
  2895  000C24                     _abs:
  2896                           	opt callstack 20
  2897                           
  2898                           ;incstack = 0
  2899  000C24  BE24               	btfsc	abs@a+1,7,c
  2900  000C26  D005               	goto	u1120
  2901  000C28  5024               	movf	abs@a+1,w,c
  2902  000C2A  E110               	bnz	l1272
  2903  000C2C  0423               	decf	abs@a,w,c
  2904  000C2E  B0D8               	btfsc	status,0,c
  2905  000C30  D00D               	goto	l1272
  2906  000C32                     u1120:
  2907  000C32  C023  F025         	movff	abs@a,??_abs
  2908  000C36  C024  F026         	movff	abs@a+1,??_abs+1
  2909  000C3A  1E25               	comf	??_abs,f,c
  2910  000C3C  1E26               	comf	??_abs+1,f,c
  2911  000C3E  4A25               	infsnz	??_abs,f,c
  2912  000C40  2A26               	incf	??_abs+1,f,c
  2913  000C42  C025  F023         	movff	??_abs,?_abs
  2914  000C46  C026  F024         	movff	??_abs+1,?_abs+1
  2915  000C4A  0012               	return	
  2916  000C4C                     l1272:
  2917  000C4C  C023  F023         	movff	abs@a,?_abs
  2918  000C50  C024  F024         	movff	abs@a+1,?_abs+1
  2919  000C54  0012               	return		;funcret
  2920  000C56                     __end_of_abs:
  2921                           	opt callstack 0
  2922                           
  2923 ;; *************** function ___aomod *****************
  2924 ;; Defined at:
  2925 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  dividend        8   16[COMRAM] long long 
  2928 ;;  divisor         8   24[COMRAM] long long 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  sign            1   33[COMRAM] unsigned char 
  2931 ;;  counter         1   32[COMRAM] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  8   16[COMRAM] long long 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2941 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;Total ram usage:       18 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    5
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_dtoa
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text19
  2956  0005B0                     __ptext19:
  2957                           	opt callstack 0
  2958  0005B0                     ___aomod:
  2959                           	opt callstack 20
  2960                           
  2961                           ;incstack = 0
  2962  0005B0  0E00               	movlw	0
  2963  0005B2  6E22               	movwf	___aomod@sign,c
  2964  0005B4  AE18               	btfss	___aomod@dividend+7,7,c
  2965  0005B6  D012               	goto	l2162
  2966  0005B8  1E18               	comf	___aomod@dividend+7,f,c
  2967  0005BA  1E17               	comf	___aomod@dividend+6,f,c
  2968  0005BC  1E16               	comf	___aomod@dividend+5,f,c
  2969  0005BE  1E15               	comf	___aomod@dividend+4,f,c
  2970  0005C0  1E14               	comf	___aomod@dividend+3,f,c
  2971  0005C2  1E13               	comf	___aomod@dividend+2,f,c
  2972  0005C4  1E12               	comf	___aomod@dividend+1,f,c
  2973  0005C6  6C11               	negf	___aomod@dividend,c
  2974  0005C8  0E00               	movlw	0
  2975  0005CA  2212               	addwfc	___aomod@dividend+1,f,c
  2976  0005CC  2213               	addwfc	___aomod@dividend+2,f,c
  2977  0005CE  2214               	addwfc	___aomod@dividend+3,f,c
  2978  0005D0  2215               	addwfc	___aomod@dividend+4,f,c
  2979  0005D2  2216               	addwfc	___aomod@dividend+5,f,c
  2980  0005D4  2217               	addwfc	___aomod@dividend+6,f,c
  2981  0005D6  2218               	addwfc	___aomod@dividend+7,f,c
  2982  0005D8  0E01               	movlw	1
  2983  0005DA  6E22               	movwf	___aomod@sign,c
  2984  0005DC                     l2162:
  2985  0005DC  AE20               	btfss	___aomod@divisor+7,7,c
  2986  0005DE  D010               	goto	l2166
  2987  0005E0  1E20               	comf	___aomod@divisor+7,f,c
  2988  0005E2  1E1F               	comf	___aomod@divisor+6,f,c
  2989  0005E4  1E1E               	comf	___aomod@divisor+5,f,c
  2990  0005E6  1E1D               	comf	___aomod@divisor+4,f,c
  2991  0005E8  1E1C               	comf	___aomod@divisor+3,f,c
  2992  0005EA  1E1B               	comf	___aomod@divisor+2,f,c
  2993  0005EC  1E1A               	comf	___aomod@divisor+1,f,c
  2994  0005EE  6C19               	negf	___aomod@divisor,c
  2995  0005F0  0E00               	movlw	0
  2996  0005F2  221A               	addwfc	___aomod@divisor+1,f,c
  2997  0005F4  221B               	addwfc	___aomod@divisor+2,f,c
  2998  0005F6  221C               	addwfc	___aomod@divisor+3,f,c
  2999  0005F8  221D               	addwfc	___aomod@divisor+4,f,c
  3000  0005FA  221E               	addwfc	___aomod@divisor+5,f,c
  3001  0005FC  221F               	addwfc	___aomod@divisor+6,f,c
  3002  0005FE  2220               	addwfc	___aomod@divisor+7,f,c
  3003  000600                     l2166:
  3004  000600  5019               	movf	___aomod@divisor,w,c
  3005  000602  101A               	iorwf	___aomod@divisor+1,w,c
  3006  000604  101B               	iorwf	___aomod@divisor+2,w,c
  3007  000606  101C               	iorwf	___aomod@divisor+3,w,c
  3008  000608  101D               	iorwf	___aomod@divisor+4,w,c
  3009  00060A  101E               	iorwf	___aomod@divisor+5,w,c
  3010  00060C  101F               	iorwf	___aomod@divisor+6,w,c
  3011  00060E  1020               	iorwf	___aomod@divisor+7,w,c
  3012  000610  B4D8               	btfsc	status,2,c
  3013  000612  D03C               	goto	l2182
  3014  000614  0E01               	movlw	1
  3015  000616  6E21               	movwf	___aomod@counter,c
  3016  000618  D00A               	goto	l2172
  3017  00061A                     l2170:
  3018  00061A  90D8               	bcf	status,0,c
  3019  00061C  3619               	rlcf	___aomod@divisor,f,c
  3020  00061E  361A               	rlcf	___aomod@divisor+1,f,c
  3021  000620  361B               	rlcf	___aomod@divisor+2,f,c
  3022  000622  361C               	rlcf	___aomod@divisor+3,f,c
  3023  000624  361D               	rlcf	___aomod@divisor+4,f,c
  3024  000626  361E               	rlcf	___aomod@divisor+5,f,c
  3025  000628  361F               	rlcf	___aomod@divisor+6,f,c
  3026  00062A  3620               	rlcf	___aomod@divisor+7,f,c
  3027  00062C  2A21               	incf	___aomod@counter,f,c
  3028  00062E                     l2172:
  3029  00062E  AE20               	btfss	___aomod@divisor+7,7,c
  3030  000630  D7F4               	goto	l2170
  3031  000632                     u1230:
  3032  000632  5019               	movf	___aomod@divisor,w,c
  3033  000634  5C11               	subwf	___aomod@dividend,w,c
  3034  000636  501A               	movf	___aomod@divisor+1,w,c
  3035  000638  5812               	subwfb	___aomod@dividend+1,w,c
  3036  00063A  501B               	movf	___aomod@divisor+2,w,c
  3037  00063C  5813               	subwfb	___aomod@dividend+2,w,c
  3038  00063E  501C               	movf	___aomod@divisor+3,w,c
  3039  000640  5814               	subwfb	___aomod@dividend+3,w,c
  3040  000642  501D               	movf	___aomod@divisor+4,w,c
  3041  000644  5815               	subwfb	___aomod@dividend+4,w,c
  3042  000646  501E               	movf	___aomod@divisor+5,w,c
  3043  000648  5816               	subwfb	___aomod@dividend+5,w,c
  3044  00064A  501F               	movf	___aomod@divisor+6,w,c
  3045  00064C  5817               	subwfb	___aomod@dividend+6,w,c
  3046  00064E  5020               	movf	___aomod@divisor+7,w,c
  3047  000650  5818               	subwfb	___aomod@dividend+7,w,c
  3048  000652  A0D8               	btfss	status,0,c
  3049  000654  D010               	goto	l2178
  3050  000656  5019               	movf	___aomod@divisor,w,c
  3051  000658  5E11               	subwf	___aomod@dividend,f,c
  3052  00065A  501A               	movf	___aomod@divisor+1,w,c
  3053  00065C  5A12               	subwfb	___aomod@dividend+1,f,c
  3054  00065E  501B               	movf	___aomod@divisor+2,w,c
  3055  000660  5A13               	subwfb	___aomod@dividend+2,f,c
  3056  000662  501C               	movf	___aomod@divisor+3,w,c
  3057  000664  5A14               	subwfb	___aomod@dividend+3,f,c
  3058  000666  501D               	movf	___aomod@divisor+4,w,c
  3059  000668  5A15               	subwfb	___aomod@dividend+4,f,c
  3060  00066A  501E               	movf	___aomod@divisor+5,w,c
  3061  00066C  5A16               	subwfb	___aomod@dividend+5,f,c
  3062  00066E  501F               	movf	___aomod@divisor+6,w,c
  3063  000670  5A17               	subwfb	___aomod@dividend+6,f,c
  3064  000672  5020               	movf	___aomod@divisor+7,w,c
  3065  000674  5A18               	subwfb	___aomod@dividend+7,f,c
  3066  000676                     l2178:
  3067  000676  90D8               	bcf	status,0,c
  3068  000678  3220               	rrcf	___aomod@divisor+7,f,c
  3069  00067A  321F               	rrcf	___aomod@divisor+6,f,c
  3070  00067C  321E               	rrcf	___aomod@divisor+5,f,c
  3071  00067E  321D               	rrcf	___aomod@divisor+4,f,c
  3072  000680  321C               	rrcf	___aomod@divisor+3,f,c
  3073  000682  321B               	rrcf	___aomod@divisor+2,f,c
  3074  000684  321A               	rrcf	___aomod@divisor+1,f,c
  3075  000686  3219               	rrcf	___aomod@divisor,f,c
  3076  000688  2E21               	decfsz	___aomod@counter,f,c
  3077  00068A  D7D3               	goto	u1230
  3078  00068C                     l2182:
  3079  00068C  5022               	movf	___aomod@sign,w,c
  3080  00068E  B4D8               	btfsc	status,2,c
  3081  000690  D010               	goto	l2186
  3082  000692  1E18               	comf	___aomod@dividend+7,f,c
  3083  000694  1E17               	comf	___aomod@dividend+6,f,c
  3084  000696  1E16               	comf	___aomod@dividend+5,f,c
  3085  000698  1E15               	comf	___aomod@dividend+4,f,c
  3086  00069A  1E14               	comf	___aomod@dividend+3,f,c
  3087  00069C  1E13               	comf	___aomod@dividend+2,f,c
  3088  00069E  1E12               	comf	___aomod@dividend+1,f,c
  3089  0006A0  6C11               	negf	___aomod@dividend,c
  3090  0006A2  0E00               	movlw	0
  3091  0006A4  2212               	addwfc	___aomod@dividend+1,f,c
  3092  0006A6  2213               	addwfc	___aomod@dividend+2,f,c
  3093  0006A8  2214               	addwfc	___aomod@dividend+3,f,c
  3094  0006AA  2215               	addwfc	___aomod@dividend+4,f,c
  3095  0006AC  2216               	addwfc	___aomod@dividend+5,f,c
  3096  0006AE  2217               	addwfc	___aomod@dividend+6,f,c
  3097  0006B0  2218               	addwfc	___aomod@dividend+7,f,c
  3098  0006B2                     l2186:
  3099  0006B2  C011  F011         	movff	___aomod@dividend,?___aomod
  3100  0006B6  C012  F012         	movff	___aomod@dividend+1,?___aomod+1
  3101  0006BA  C013  F013         	movff	___aomod@dividend+2,?___aomod+2
  3102  0006BE  C014  F014         	movff	___aomod@dividend+3,?___aomod+3
  3103  0006C2  C015  F015         	movff	___aomod@dividend+4,?___aomod+4
  3104  0006C6  C016  F016         	movff	___aomod@dividend+5,?___aomod+5
  3105  0006CA  C017  F017         	movff	___aomod@dividend+6,?___aomod+6
  3106  0006CE  C018  F018         	movff	___aomod@dividend+7,?___aomod+7
  3107  0006D2  0012               	return		;funcret
  3108  0006D4                     __end_of___aomod:
  3109                           	opt callstack 0
  3110                           
  3111 ;; *************** function ___aodiv *****************
  3112 ;; Defined at:
  3113 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  dividend        8   16[COMRAM] long long 
  3116 ;;  divisor         8   24[COMRAM] long long 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  quotient        8   34[COMRAM] long long 
  3119 ;;  sign            1   33[COMRAM] unsigned char 
  3120 ;;  counter         1   32[COMRAM] unsigned char 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  8   16[COMRAM] long long 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3130 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;Total ram usage:       26 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    5
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_dtoa
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text20
  3145  000468                     __ptext20:
  3146                           	opt callstack 0
  3147  000468                     ___aodiv:
  3148                           	opt callstack 20
  3149                           
  3150                           ;incstack = 0
  3151  000468  0E00               	movlw	0
  3152  00046A  6E22               	movwf	___aodiv@sign,c
  3153  00046C  AE20               	btfss	___aodiv@divisor+7,7,c
  3154  00046E  D012               	goto	l2118
  3155  000470  1E20               	comf	___aodiv@divisor+7,f,c
  3156  000472  1E1F               	comf	___aodiv@divisor+6,f,c
  3157  000474  1E1E               	comf	___aodiv@divisor+5,f,c
  3158  000476  1E1D               	comf	___aodiv@divisor+4,f,c
  3159  000478  1E1C               	comf	___aodiv@divisor+3,f,c
  3160  00047A  1E1B               	comf	___aodiv@divisor+2,f,c
  3161  00047C  1E1A               	comf	___aodiv@divisor+1,f,c
  3162  00047E  6C19               	negf	___aodiv@divisor,c
  3163  000480  0E00               	movlw	0
  3164  000482  221A               	addwfc	___aodiv@divisor+1,f,c
  3165  000484  221B               	addwfc	___aodiv@divisor+2,f,c
  3166  000486  221C               	addwfc	___aodiv@divisor+3,f,c
  3167  000488  221D               	addwfc	___aodiv@divisor+4,f,c
  3168  00048A  221E               	addwfc	___aodiv@divisor+5,f,c
  3169  00048C  221F               	addwfc	___aodiv@divisor+6,f,c
  3170  00048E  2220               	addwfc	___aodiv@divisor+7,f,c
  3171  000490  0E01               	movlw	1
  3172  000492  6E22               	movwf	___aodiv@sign,c
  3173  000494                     l2118:
  3174  000494  AE18               	btfss	___aodiv@dividend+7,7,c
  3175  000496  D012               	goto	l2124
  3176  000498  1E18               	comf	___aodiv@dividend+7,f,c
  3177  00049A  1E17               	comf	___aodiv@dividend+6,f,c
  3178  00049C  1E16               	comf	___aodiv@dividend+5,f,c
  3179  00049E  1E15               	comf	___aodiv@dividend+4,f,c
  3180  0004A0  1E14               	comf	___aodiv@dividend+3,f,c
  3181  0004A2  1E13               	comf	___aodiv@dividend+2,f,c
  3182  0004A4  1E12               	comf	___aodiv@dividend+1,f,c
  3183  0004A6  6C11               	negf	___aodiv@dividend,c
  3184  0004A8  0E00               	movlw	0
  3185  0004AA  2212               	addwfc	___aodiv@dividend+1,f,c
  3186  0004AC  2213               	addwfc	___aodiv@dividend+2,f,c
  3187  0004AE  2214               	addwfc	___aodiv@dividend+3,f,c
  3188  0004B0  2215               	addwfc	___aodiv@dividend+4,f,c
  3189  0004B2  2216               	addwfc	___aodiv@dividend+5,f,c
  3190  0004B4  2217               	addwfc	___aodiv@dividend+6,f,c
  3191  0004B6  2218               	addwfc	___aodiv@dividend+7,f,c
  3192  0004B8  0E01               	movlw	1
  3193  0004BA  1A22               	xorwf	___aodiv@sign,f,c
  3194  0004BC                     l2124:
  3195  0004BC  EE20  F023         	lfsr	2,___aodiv@quotient
  3196  0004C0  0E07               	movlw	7
  3197  0004C2                     u1151:
  3198  0004C2  6ADE               	clrf	postinc2,c
  3199  0004C4  06E8               	decf	wreg,f,c
  3200  0004C6  E2FD               	bc	u1151
  3201  0004C8  5019               	movf	___aodiv@divisor,w,c
  3202  0004CA  101A               	iorwf	___aodiv@divisor+1,w,c
  3203  0004CC  101B               	iorwf	___aodiv@divisor+2,w,c
  3204  0004CE  101C               	iorwf	___aodiv@divisor+3,w,c
  3205  0004D0  101D               	iorwf	___aodiv@divisor+4,w,c
  3206  0004D2  101E               	iorwf	___aodiv@divisor+5,w,c
  3207  0004D4  101F               	iorwf	___aodiv@divisor+6,w,c
  3208  0004D6  1020               	iorwf	___aodiv@divisor+7,w,c
  3209  0004D8  B4D8               	btfsc	status,2,c
  3210  0004DA  D046               	goto	l2146
  3211  0004DC  0E01               	movlw	1
  3212  0004DE  6E21               	movwf	___aodiv@counter,c
  3213  0004E0  D00A               	goto	l2132
  3214  0004E2                     l2130:
  3215  0004E2  90D8               	bcf	status,0,c
  3216  0004E4  3619               	rlcf	___aodiv@divisor,f,c
  3217  0004E6  361A               	rlcf	___aodiv@divisor+1,f,c
  3218  0004E8  361B               	rlcf	___aodiv@divisor+2,f,c
  3219  0004EA  361C               	rlcf	___aodiv@divisor+3,f,c
  3220  0004EC  361D               	rlcf	___aodiv@divisor+4,f,c
  3221  0004EE  361E               	rlcf	___aodiv@divisor+5,f,c
  3222  0004F0  361F               	rlcf	___aodiv@divisor+6,f,c
  3223  0004F2  3620               	rlcf	___aodiv@divisor+7,f,c
  3224  0004F4  2A21               	incf	___aodiv@counter,f,c
  3225  0004F6                     l2132:
  3226  0004F6  AE20               	btfss	___aodiv@divisor+7,7,c
  3227  0004F8  D7F4               	goto	l2130
  3228  0004FA                     u1170:
  3229  0004FA  90D8               	bcf	status,0,c
  3230  0004FC  3623               	rlcf	___aodiv@quotient,f,c
  3231  0004FE  3624               	rlcf	___aodiv@quotient+1,f,c
  3232  000500  3625               	rlcf	___aodiv@quotient+2,f,c
  3233  000502  3626               	rlcf	___aodiv@quotient+3,f,c
  3234  000504  3627               	rlcf	___aodiv@quotient+4,f,c
  3235  000506  3628               	rlcf	___aodiv@quotient+5,f,c
  3236  000508  3629               	rlcf	___aodiv@quotient+6,f,c
  3237  00050A  362A               	rlcf	___aodiv@quotient+7,f,c
  3238  00050C  5019               	movf	___aodiv@divisor,w,c
  3239  00050E  5C11               	subwf	___aodiv@dividend,w,c
  3240  000510  501A               	movf	___aodiv@divisor+1,w,c
  3241  000512  5812               	subwfb	___aodiv@dividend+1,w,c
  3242  000514  501B               	movf	___aodiv@divisor+2,w,c
  3243  000516  5813               	subwfb	___aodiv@dividend+2,w,c
  3244  000518  501C               	movf	___aodiv@divisor+3,w,c
  3245  00051A  5814               	subwfb	___aodiv@dividend+3,w,c
  3246  00051C  501D               	movf	___aodiv@divisor+4,w,c
  3247  00051E  5815               	subwfb	___aodiv@dividend+4,w,c
  3248  000520  501E               	movf	___aodiv@divisor+5,w,c
  3249  000522  5816               	subwfb	___aodiv@dividend+5,w,c
  3250  000524  501F               	movf	___aodiv@divisor+6,w,c
  3251  000526  5817               	subwfb	___aodiv@dividend+6,w,c
  3252  000528  5020               	movf	___aodiv@divisor+7,w,c
  3253  00052A  5818               	subwfb	___aodiv@dividend+7,w,c
  3254  00052C  A0D8               	btfss	status,0,c
  3255  00052E  D011               	goto	l2142
  3256  000530  5019               	movf	___aodiv@divisor,w,c
  3257  000532  5E11               	subwf	___aodiv@dividend,f,c
  3258  000534  501A               	movf	___aodiv@divisor+1,w,c
  3259  000536  5A12               	subwfb	___aodiv@dividend+1,f,c
  3260  000538  501B               	movf	___aodiv@divisor+2,w,c
  3261  00053A  5A13               	subwfb	___aodiv@dividend+2,f,c
  3262  00053C  501C               	movf	___aodiv@divisor+3,w,c
  3263  00053E  5A14               	subwfb	___aodiv@dividend+3,f,c
  3264  000540  501D               	movf	___aodiv@divisor+4,w,c
  3265  000542  5A15               	subwfb	___aodiv@dividend+4,f,c
  3266  000544  501E               	movf	___aodiv@divisor+5,w,c
  3267  000546  5A16               	subwfb	___aodiv@dividend+5,f,c
  3268  000548  501F               	movf	___aodiv@divisor+6,w,c
  3269  00054A  5A17               	subwfb	___aodiv@dividend+6,f,c
  3270  00054C  5020               	movf	___aodiv@divisor+7,w,c
  3271  00054E  5A18               	subwfb	___aodiv@dividend+7,f,c
  3272  000550  8023               	bsf	___aodiv@quotient,0,c
  3273  000552                     l2142:
  3274  000552  90D8               	bcf	status,0,c
  3275  000554  3220               	rrcf	___aodiv@divisor+7,f,c
  3276  000556  321F               	rrcf	___aodiv@divisor+6,f,c
  3277  000558  321E               	rrcf	___aodiv@divisor+5,f,c
  3278  00055A  321D               	rrcf	___aodiv@divisor+4,f,c
  3279  00055C  321C               	rrcf	___aodiv@divisor+3,f,c
  3280  00055E  321B               	rrcf	___aodiv@divisor+2,f,c
  3281  000560  321A               	rrcf	___aodiv@divisor+1,f,c
  3282  000562  3219               	rrcf	___aodiv@divisor,f,c
  3283  000564  2E21               	decfsz	___aodiv@counter,f,c
  3284  000566  D7C9               	goto	u1170
  3285  000568                     l2146:
  3286  000568  5022               	movf	___aodiv@sign,w,c
  3287  00056A  B4D8               	btfsc	status,2,c
  3288  00056C  D010               	goto	l2150
  3289  00056E  1E2A               	comf	___aodiv@quotient+7,f,c
  3290  000570  1E29               	comf	___aodiv@quotient+6,f,c
  3291  000572  1E28               	comf	___aodiv@quotient+5,f,c
  3292  000574  1E27               	comf	___aodiv@quotient+4,f,c
  3293  000576  1E26               	comf	___aodiv@quotient+3,f,c
  3294  000578  1E25               	comf	___aodiv@quotient+2,f,c
  3295  00057A  1E24               	comf	___aodiv@quotient+1,f,c
  3296  00057C  6C23               	negf	___aodiv@quotient,c
  3297  00057E  0E00               	movlw	0
  3298  000580  2224               	addwfc	___aodiv@quotient+1,f,c
  3299  000582  2225               	addwfc	___aodiv@quotient+2,f,c
  3300  000584  2226               	addwfc	___aodiv@quotient+3,f,c
  3301  000586  2227               	addwfc	___aodiv@quotient+4,f,c
  3302  000588  2228               	addwfc	___aodiv@quotient+5,f,c
  3303  00058A  2229               	addwfc	___aodiv@quotient+6,f,c
  3304  00058C  222A               	addwfc	___aodiv@quotient+7,f,c
  3305  00058E                     l2150:
  3306  00058E  C023  F011         	movff	___aodiv@quotient,?___aodiv
  3307  000592  C024  F012         	movff	___aodiv@quotient+1,?___aodiv+1
  3308  000596  C025  F013         	movff	___aodiv@quotient+2,?___aodiv+2
  3309  00059A  C026  F014         	movff	___aodiv@quotient+3,?___aodiv+3
  3310  00059E  C027  F015         	movff	___aodiv@quotient+4,?___aodiv+4
  3311  0005A2  C028  F016         	movff	___aodiv@quotient+5,?___aodiv+5
  3312  0005A6  C029  F017         	movff	___aodiv@quotient+6,?___aodiv+6
  3313  0005AA  C02A  F018         	movff	___aodiv@quotient+7,?___aodiv+7
  3314  0005AE  0012               	return		;funcret
  3315  0005B0                     __end_of___aodiv:
  3316                           	opt callstack 0
  3317                           
  3318 ;; *************** function _SYSTEM_Initialize *****************
  3319 ;; Defined at:
  3320 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;		None
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;Total ram usage:        0 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    7
  3341 ;; This function calls:
  3342 ;;		_EUSART1_Initialize
  3343 ;;		_INTERRUPT_Initialize
  3344 ;;		_OSCILLATOR_Initialize
  3345 ;;		_PIN_MANAGER_Initialize
  3346 ;;		_TMR2_Initialize
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text21
  3353  000E00                     __ptext21:
  3354                           	opt callstack 0
  3355  000E00                     _SYSTEM_Initialize:
  3356                           	opt callstack 23
  3357                           
  3358                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3359                           
  3360                           ;incstack = 0
  3361  000E00  EC51  F007         	call	_INTERRUPT_Initialize	;wreg free
  3362                           
  3363                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3364  000E04  EC42  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  3365                           
  3366                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3367  000E08  EC15  F007         	call	_OSCILLATOR_Initialize	;wreg free
  3368                           
  3369                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  3370  000E0C  ECD9  F006         	call	_TMR2_Initialize	;wreg free
  3371                           
  3372                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  3373  000E10  EC8C  F004         	call	_EUSART1_Initialize	;wreg free
  3374  000E14  0012               	return		;funcret
  3375  000E16                     __end_of_SYSTEM_Initialize:
  3376                           	opt callstack 0
  3377                           
  3378 ;; *************** function _TMR2_Initialize *****************
  3379 ;; Defined at:
  3380 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    6
  3401 ;; This function calls:
  3402 ;;		_TMR2_SetInterruptHandler
  3403 ;; This function is called by:
  3404 ;;		_SYSTEM_Initialize
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text22
  3409  000DB2                     __ptext22:
  3410                           	opt callstack 0
  3411  000DB2                     _TMR2_Initialize:
  3412                           	opt callstack 23
  3413                           
  3414                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x7C;
  3415                           
  3416                           ;incstack = 0
  3417  000DB2  0E7C               	movlw	124
  3418  000DB4  6EBB               	movwf	4027,c	;volatile
  3419                           
  3420                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3421  000DB6  0E00               	movlw	0
  3422  000DB8  6EBC               	movwf	4028,c	;volatile
  3423                           
  3424                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3425  000DBA  929E               	bcf	3998,1,c	;volatile
  3426                           
  3427                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3428  000DBC  829D               	bsf	3997,1,c	;volatile
  3429                           
  3430                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3431  000DBE  0EAA               	movlw	low _TMR2_DefaultInterruptHandler
  3432  000DC0  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  3433  000DC2  0E0E               	movlw	high _TMR2_DefaultInterruptHandler
  3434  000DC4  6E12               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  3435  000DC6  EC2A  F007         	call	_TMR2_SetInterruptHandler	;wreg free
  3436                           
  3437                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x3E;
  3438  000DCA  0E3E               	movlw	62
  3439  000DCC  6EBA               	movwf	4026,c	;volatile
  3440  000DCE  0012               	return		;funcret
  3441  000DD0                     __end_of_TMR2_Initialize:
  3442                           	opt callstack 0
  3443                           
  3444 ;; *************** function _TMR2_SetInterruptHandler *****************
  3445 ;; Defined at:
  3446 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  3449 ;;		 -> displayController(1), TMR2_DefaultInterruptHandler(1), 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;Total ram usage:        2 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:    5
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_TMR2_Initialize
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text23
  3477  000E54                     __ptext23:
  3478                           	opt callstack 0
  3479  000E54                     _TMR2_SetInterruptHandler:
  3480                           	opt callstack 25
  3481                           
  3482                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  3483                           
  3484                           ;incstack = 0
  3485  000E54  C011  F07C         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  3486  000E58  C012  F07D         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  3487  000E5C  0012               	return		;funcret
  3488  000E5E                     __end_of_TMR2_SetInterruptHandler:
  3489                           	opt callstack 0
  3490                           
  3491 ;; *************** function _PIN_MANAGER_Initialize *****************
  3492 ;; Defined at:
  3493 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      void 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;Total ram usage:        0 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    5
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_SYSTEM_Initialize
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text24
  3522  000C84                     __ptext24:
  3523                           	opt callstack 0
  3524  000C84                     _PIN_MANAGER_Initialize:
  3525                           	opt callstack 24
  3526                           
  3527                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3528                           
  3529                           ;incstack = 0
  3530  000C84  0E00               	movlw	0
  3531  000C86  6E89               	movwf	3977,c	;volatile
  3532                           
  3533                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3534  000C88  0E00               	movlw	0
  3535  000C8A  6E8A               	movwf	3978,c	;volatile
  3536                           
  3537                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3538  000C8C  0E00               	movlw	0
  3539  000C8E  6E8B               	movwf	3979,c	;volatile
  3540                           
  3541                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x00;
  3542  000C90  0E00               	movlw	0
  3543  000C92  6E92               	movwf	3986,c	;volatile
  3544                           
  3545                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  3546  000C94  0EDF               	movlw	223
  3547  000C96  6E93               	movwf	3987,c	;volatile
  3548                           
  3549                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBC;
  3550  000C98  0EBC               	movlw	188
  3551  000C9A  6E94               	movwf	3988,c	;volatile
  3552                           
  3553                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3554  000C9C  0E3C               	movlw	60
  3555  000C9E  010F               	movlb	15	; () banked
  3556  000CA0  6F3A               	movwf	58,b	;volatile
  3557                           
  3558                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x1F;
  3559  000CA2  0E1F               	movlw	31
  3560  000CA4  6F39               	movwf	57,b	;volatile
  3561                           
  3562                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  3563  000CA6  0E00               	movlw	0
  3564  000CA8  6F38               	movwf	56,b	;volatile
  3565                           
  3566                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3567  000CAA  0E00               	movlw	0
  3568  000CAC  6E61               	movwf	3937,c	;volatile
  3569                           
  3570                           ; BSR set to: 15
  3571                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3572  000CAE  8EF1               	bsf	4081,7,c	;volatile
  3573                           
  3574                           ; BSR set to: 15
  3575  000CB0  0012               	return		;funcret
  3576  000CB2                     __end_of_PIN_MANAGER_Initialize:
  3577                           	opt callstack 0
  3578                           
  3579 ;; *************** function _OSCILLATOR_Initialize *****************
  3580 ;; Defined at:
  3581 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;Total ram usage:        0 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    5
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_SYSTEM_Initialize
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text25
  3610  000E2A                     __ptext25:
  3611                           	opt callstack 0
  3612  000E2A                     _OSCILLATOR_Initialize:
  3613                           	opt callstack 24
  3614                           
  3615                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  3616                           
  3617                           ; BSR set to: 15
  3618                           ;incstack = 0
  3619  000E2A  0E70               	movlw	112
  3620  000E2C  6ED3               	movwf	4051,c	;volatile
  3621                           
  3622                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
  3623  000E2E  0E04               	movlw	4
  3624  000E30  6ED2               	movwf	4050,c	;volatile
  3625                           
  3626                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x40;
  3627  000E32  0E40               	movlw	64
  3628  000E34  6E9B               	movwf	3995,c	;volatile
  3629  000E36                     l24:
  3630                           
  3631                           ;mcc_generated_files/mcc.c: 69:     while(PLLRDY == 0)
  3632  000E36  BED2               	btfsc	4050,7,c	;volatile
  3633  000E38  0012               	return	
  3634  000E3A  D7FD               	goto	l24
  3635  000E3C                     __end_of_OSCILLATOR_Initialize:
  3636                           	opt callstack 0
  3637                           
  3638 ;; *************** function _INTERRUPT_Initialize *****************
  3639 ;; Defined at:
  3640 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		None
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    5
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_SYSTEM_Initialize
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text26
  3669  000EA2                     __ptext26:
  3670                           	opt callstack 0
  3671  000EA2                     _INTERRUPT_Initialize:
  3672                           	opt callstack 24
  3673                           
  3674                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3675                           
  3676                           ;incstack = 0
  3677  000EA2  9ED0               	bcf	4048,7,c	;volatile
  3678  000EA4  0012               	return		;funcret
  3679  000EA6                     __end_of_INTERRUPT_Initialize:
  3680                           	opt callstack 0
  3681                           
  3682 ;; *************** function _EUSART1_Initialize *****************
  3683 ;; Defined at:
  3684 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;Total ram usage:        0 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    6
  3705 ;; This function calls:
  3706 ;;		_EUSART1_SetErrorHandler
  3707 ;;		_EUSART1_SetFramingErrorHandler
  3708 ;;		_EUSART1_SetOverrunErrorHandler
  3709 ;;		_EUSART1_SetRxInterruptHandler
  3710 ;;		_EUSART1_SetTxInterruptHandler
  3711 ;; This function is called by:
  3712 ;;		_SYSTEM_Initialize
  3713 ;;		_main
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text27
  3718  000918                     __ptext27:
  3719                           	opt callstack 0
  3720  000918                     _EUSART1_Initialize:
  3721                           	opt callstack 23
  3722                           
  3723                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  3724                           
  3725                           ;incstack = 0
  3726  000918  9A9D               	bcf	3997,5,c	;volatile
  3727                           
  3728                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3729  00091A  0ED4               	movlw	low _EUSART1_Receive_ISR
  3730  00091C  6E11               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  3731  00091E  0E06               	movlw	high _EUSART1_Receive_ISR
  3732  000920  6E12               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  3733  000922  EC34  F007         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3734                           
  3735                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  3736  000926  989D               	bcf	3997,4,c	;volatile
  3737                           
  3738                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  3739  000928  0EDC               	movlw	low _EUSART1_Transmit_ISR
  3740  00092A  6E11               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  3741  00092C  0E0C               	movlw	high _EUSART1_Transmit_ISR
  3742  00092E  6E12               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  3743  000930  EC2F  F007         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3744                           
  3745                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  3746  000934  0E08               	movlw	8
  3747  000936  6EB8               	movwf	4024,c	;volatile
  3748                           
  3749                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  3750  000938  0E90               	movlw	144
  3751  00093A  6EAB               	movwf	4011,c	;volatile
  3752                           
  3753                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  3754  00093C  0E24               	movlw	36
  3755  00093E  6EAC               	movwf	4012,c	;volatile
  3756                           
  3757                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x82;
  3758  000940  0E82               	movlw	130
  3759  000942  6EAF               	movwf	4015,c	;volatile
  3760                           
  3761                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x06;
  3762  000944  0E06               	movlw	6
  3763  000946  6EB0               	movwf	4016,c	;volatile
  3764                           
  3765                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3766  000948  0EAC               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3767  00094A  6E11               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  3768  00094C  0E0E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3769  00094E  6E12               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  3770  000950  EC3E  F007         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3771                           
  3772                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3773  000954  0E90               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3774  000956  6E11               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  3775  000958  0E0E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3776  00095A  6E12               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  3777  00095C  EC39  F007         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3778                           
  3779                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3780  000960  0E96               	movlw	low _EUSART1_DefaultErrorHandler
  3781  000962  6E11               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  3782  000964  0E0E               	movlw	high _EUSART1_DefaultErrorHandler
  3783  000966  6E12               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  3784  000968  EC43  F007         	call	_EUSART1_SetErrorHandler	;wreg free
  3785                           
  3786                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3787  00096C  0E00               	movlw	0
  3788  00096E  6E45               	movwf	_eusart1RxLastError,c	;volatile
  3789                           
  3790                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3791  000970  0E00               	movlw	0
  3792  000972  6E4B               	movwf	_eusart1TxHead,c	;volatile
  3793                           
  3794                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3795  000974  0E00               	movlw	0
  3796  000976  6E4A               	movwf	_eusart1TxTail,c	;volatile
  3797                           
  3798                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3799  000978  0E40               	movlw	64
  3800  00097A  6E49               	movwf	_eusart1TxBufferRemaining,c	;volatile
  3801                           
  3802                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3803  00097C  0E00               	movlw	0
  3804  00097E  6E48               	movwf	_eusart1RxHead,c	;volatile
  3805                           
  3806                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3807  000980  0E00               	movlw	0
  3808  000982  6E47               	movwf	_eusart1RxTail,c	;volatile
  3809                           
  3810                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3811  000984  0E00               	movlw	0
  3812  000986  6E46               	movwf	_eusart1RxCount,c	;volatile
  3813                           
  3814                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  3815  000988  8A9D               	bsf	3997,5,c	;volatile
  3816  00098A  0012               	return		;funcret
  3817  00098C                     __end_of_EUSART1_Initialize:
  3818                           	opt callstack 0
  3819                           
  3820 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3821 ;; Defined at:
  3822 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3825 ;;		 -> EUSART1_Transmit_ISR(1), 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;Total ram usage:        2 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    5
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_EUSART1_Initialize
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text28
  3852  000E5E                     __ptext28:
  3853                           	opt callstack 0
  3854  000E5E                     _EUSART1_SetTxInterruptHandler:
  3855                           	opt callstack 23
  3856                           
  3857                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3858                           
  3859                           ;incstack = 0
  3860  000E5E  C011  F078         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3861  000E62  C012  F079         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3862  000E66  0012               	return		;funcret
  3863  000E68                     __end_of_EUSART1_SetTxInterruptHandler:
  3864                           	opt callstack 0
  3865                           
  3866 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3867 ;; Defined at:
  3868 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3871 ;;		 -> EUSART1_Receive_ISR(1), 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;Total ram usage:        2 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    5
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_EUSART1_Initialize
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text29
  3898  000E68                     __ptext29:
  3899                           	opt callstack 0
  3900  000E68                     _EUSART1_SetRxInterruptHandler:
  3901                           	opt callstack 23
  3902                           
  3903                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3904                           
  3905                           ;incstack = 0
  3906  000E68  C011  F076         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3907  000E6C  C012  F077         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3908  000E70  0012               	return		;funcret
  3909  000E72                     __end_of_EUSART1_SetRxInterruptHandler:
  3910                           	opt callstack 0
  3911                           
  3912 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3913 ;; Defined at:
  3914 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3917 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;Total ram usage:        2 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    5
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_EUSART1_Initialize
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text30
  3944  000E72                     __ptext30:
  3945                           	opt callstack 0
  3946  000E72                     _EUSART1_SetOverrunErrorHandler:
  3947                           	opt callstack 23
  3948                           
  3949                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  3950                           
  3951                           ;incstack = 0
  3952  000E72  C011  F072         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3953  000E76  C012  F073         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3954  000E7A  0012               	return		;funcret
  3955  000E7C                     __end_of_EUSART1_SetOverrunErrorHandler:
  3956                           	opt callstack 0
  3957                           
  3958 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3959 ;; Defined at:
  3960 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3963 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;Total ram usage:        2 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    5
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_EUSART1_Initialize
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text31
  3990  000E7C                     __ptext31:
  3991                           	opt callstack 0
  3992  000E7C                     _EUSART1_SetFramingErrorHandler:
  3993                           	opt callstack 23
  3994                           
  3995                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  3996                           
  3997                           ;incstack = 0
  3998  000E7C  C011  F074         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3999  000E80  C012  F075         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4000  000E84  0012               	return		;funcret
  4001  000E86                     __end_of_EUSART1_SetFramingErrorHandler:
  4002                           	opt callstack 0
  4003                           
  4004 ;; *************** function _EUSART1_SetErrorHandler *****************
  4005 ;; Defined at:
  4006 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  4009 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;		None
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4021 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;Total ram usage:        2 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    5
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_EUSART1_Initialize
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text32
  4036  000E86                     __ptext32:
  4037                           	opt callstack 0
  4038  000E86                     _EUSART1_SetErrorHandler:
  4039                           	opt callstack 23
  4040                           
  4041                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  4042                           
  4043                           ;incstack = 0
  4044  000E86  C011  F070         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4045  000E8A  C012  F071         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4046  000E8E  0012               	return		;funcret
  4047  000E90                     __end_of_EUSART1_SetErrorHandler:
  4048                           	opt callstack 0
  4049                           
  4050 ;; *************** function _INTERRUPT_InterruptManager *****************
  4051 ;; Defined at:
  4052 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;Total ram usage:        8 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    4
  4073 ;; This function calls:
  4074 ;;		Absolute function
  4075 ;;		_EUSART1_Receive_ISR
  4076 ;;		_EUSART1_Transmit_ISR
  4077 ;;		_TMR2_ISR
  4078 ;; This function is called by:
  4079 ;;		Interrupt level 2
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	intcode
  4084  000008                     __pintcode:
  4085                           	opt callstack 0
  4086  000008                     _INTERRUPT_InterruptManager:
  4087                           	opt callstack 13
  4088                           
  4089                           ;incstack = 0
  4090  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4091  00000A  CFFA F009          	movff	pclath,??_INTERRUPT_InterruptManager
  4092  00000E  CFFB F00A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4093  000012  CFD9 F00B          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  4094  000016  CFDA F00C          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  4095  00001A  CFF6 F00D          	movff	tblptrl,??_INTERRUPT_InterruptManager+4
  4096  00001E  CFF7 F00E          	movff	tblptrh,??_INTERRUPT_InterruptManager+5
  4097  000022  CFF8 F00F          	movff	tblptru,??_INTERRUPT_InterruptManager+6
  4098  000026  CFF5 F010          	movff	tablat,??_INTERRUPT_InterruptManager+7
  4099                           
  4100                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  4101  00002A  ACF2               	btfss	4082,6,c	;volatile
  4102  00002C  D020               	goto	i2l135
  4103                           
  4104                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  4105  00002E  B89D               	btfsc	3997,4,c	;volatile
  4106  000030  A89E               	btfss	3998,4,c	;volatile
  4107  000032  D009               	goto	i2l134
  4108                           
  4109                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  4110  000034  D801               	call	i2u182_48
  4111  000036  D01B               	goto	i2l135
  4112  000038                     i2u182_48:
  4113  000038  0005               	push	
  4114  00003A  6EFA               	movwf	pclath,c
  4115  00003C  0100               	movlb	0	; () banked
  4116  00003E  5178               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  4117  000040  6EFD               	movwf	tosl,c
  4118  000042  5179               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  4119  000044  D00B               	goto	L2
  4120  000046                     i2l134:
  4121  000046  BA9D               	btfsc	3997,5,c	;volatile
  4122  000048  AA9E               	btfss	3998,5,c	;volatile
  4123  00004A  D00C               	goto	i2l136
  4124                           
  4125                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  4126  00004C  D801               	call	i2u185_48
  4127  00004E  D00F               	goto	i2l135
  4128  000050                     i2u185_48:
  4129  000050  0005               	push	
  4130  000052  6EFA               	movwf	pclath,c
  4131  000054  0100               	movlb	0	; () banked
  4132  000056  5176               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  4133  000058  6EFD               	movwf	tosl,c
  4134  00005A  5177               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  4135  00005C                     L2:
  4136  00005C  6EFE               	movwf	tosh,c
  4137  00005E  6AFF               	clrf	tosu,c
  4138  000060  50FA               	movf	pclath,w,c
  4139  000062  0012               	return		;indir
  4140  000064                     i2l136:
  4141  000064  B29D               	btfsc	3997,1,c	;volatile
  4142  000066  A29E               	btfss	3998,1,c	;volatile
  4143  000068  D002               	goto	i2l135
  4144                           
  4145                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR2_ISR();
  4146  00006A  EC97  F006         	call	_TMR2_ISR	;wreg free
  4147  00006E                     i2l135:
  4148                           
  4149                           ;mcc_generated_files/interrupt_manager.c: 79:     }
  4150  00006E  C010  FFF5         	movff	??_INTERRUPT_InterruptManager+7,tablat
  4151  000072  C00F  FFF8         	movff	??_INTERRUPT_InterruptManager+6,tblptru
  4152  000076  C00E  FFF7         	movff	??_INTERRUPT_InterruptManager+5,tblptrh
  4153  00007A  C00D  FFF6         	movff	??_INTERRUPT_InterruptManager+4,tblptrl
  4154  00007E  C00C  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  4155  000082  C00B  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  4156  000086  C00A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4157  00008A  C009  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4158  00008E  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4159  000090  0011               	retfie		f
  4160  000092                     __end_of_INTERRUPT_InterruptManager:
  4161                           	opt callstack 0
  4162                           
  4163 ;; *************** function _TMR2_ISR *****************
  4164 ;; Defined at:
  4165 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;		None
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;		None
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      void 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;Total ram usage:        0 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    3
  4186 ;; This function calls:
  4187 ;;		_TMR2_CallBack
  4188 ;; This function is called by:
  4189 ;;		_INTERRUPT_InterruptManager
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text34
  4194  000D2E                     __ptext34:
  4195                           	opt callstack 0
  4196  000D2E                     _TMR2_ISR:
  4197                           	opt callstack 13
  4198                           
  4199                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  4200                           
  4201                           ;incstack = 0
  4202  000D2E  929E               	bcf	3998,1,c	;volatile
  4203                           
  4204                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 7)
  4205  000D30  0100               	movlb	0	; () banked
  4206  000D32  4B7A               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
  4207  000D34  2B7B               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  4208  000D36  517B               	movf	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  4209  000D38  E104               	bnz	i2u168_40
  4210  000D3A  0E07               	movlw	7
  4211  000D3C  5D7A               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
  4212  000D3E  A0D8               	btfss	status,0,c
  4213  000D40  0012               	return	
  4214  000D42                     i2u168_40:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  4218  000D42  ECB9  F006         	call	_TMR2_CallBack	;wreg free
  4219                           
  4220                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  4221  000D46  0E00               	movlw	0
  4222  000D48  0100               	movlb	0	; () banked
  4223  000D4A  6F7B               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
  4224  000D4C  0E00               	movlw	0
  4225  000D4E  6F7A               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
  4226                           
  4227                           ; BSR set to: 0
  4228  000D50  0012               	return		;funcret
  4229  000D52                     __end_of_TMR2_ISR:
  4230                           	opt callstack 0
  4231                           
  4232 ;; *************** function _TMR2_CallBack *****************
  4233 ;; Defined at:
  4234 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;Total ram usage:        0 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    2
  4255 ;; This function calls:
  4256 ;;		Absolute function
  4257 ;;		_TMR2_DefaultInterruptHandler
  4258 ;;		_displayController
  4259 ;; This function is called by:
  4260 ;;		_TMR2_ISR
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text35
  4265  000D72                     __ptext35:
  4266                           	opt callstack 0
  4267  000D72                     _TMR2_CallBack:
  4268                           	opt callstack 13
  4269                           
  4270                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;incstack = 0
  4274  000D72  0100               	movlb	0	; () banked
  4275  000D74  517C               	movf	_TMR2_InterruptHandler& (0+255),w,b
  4276  000D76  117D               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  4277  000D78  B4D8               	btfsc	status,2,c
  4278  000D7A  0012               	return	
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  4282  000D7C  D801               	call	i2u165_48
  4283  000D7E  0012               	return	
  4284  000D80                     i2u165_48:
  4285  000D80  0005               	push	
  4286  000D82  6EFA               	movwf	pclath,c
  4287  000D84  517C               	movf	_TMR2_InterruptHandler& (0+255),w,b
  4288  000D86  6EFD               	movwf	tosl,c
  4289  000D88  517D               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  4290  000D8A  6EFE               	movwf	tosh,c
  4291  000D8C  6AFF               	clrf	tosu,c
  4292  000D8E  50FA               	movf	pclath,w,c
  4293  000D90  0012               	return		;indir
  4294  000D92                     __end_of_TMR2_CallBack:
  4295                           	opt callstack 0
  4296                           
  4297 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4298 ;; Defined at:
  4299 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		None
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_TMR2_Initialize
  4323 ;;		_TMR2_CallBack
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text36
  4328  000EAA                     __ptext36:
  4329                           	opt callstack 0
  4330  000EAA                     _TMR2_DefaultInterruptHandler:
  4331                           	opt callstack 14
  4332                           
  4333                           ;incstack = 0
  4334  000EAA  0012               	return		;funcret
  4335  000EAC                     __end_of_TMR2_DefaultInterruptHandler:
  4336                           	opt callstack 0
  4337                           
  4338 ;; *************** function _displayController *****************
  4339 ;; Defined at:
  4340 ;;		line 113 in file "main.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;Total ram usage:        0 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    1
  4361 ;; This function calls:
  4362 ;;		___awdiv
  4363 ;;		___awmod
  4364 ;; This function is called by:
  4365 ;;		_main
  4366 ;;		_TMR2_CallBack
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text37
  4371  000802                     __ptext37:
  4372                           	opt callstack 0
  4373  000802                     _displayController:
  4374                           	opt callstack 13
  4375                           
  4376                           ;main.c: 114:     if(number > 9)
  4377                           
  4378                           ;incstack = 0
  4379  000802  0E09               	movlw	9
  4380  000804  644C               	cpfsgt	_number,c
  4381  000806  D017               	goto	i2l373
  4382                           
  4383                           ;main.c: 115:     {;main.c: 116:         decimal_1 = number / 10;
  4384  000808  C04C  F001         	movff	_number,___awdiv@dividend
  4385  00080C  6A02               	clrf	___awdiv@dividend+1,c
  4386  00080E  0E00               	movlw	0
  4387  000810  6E04               	movwf	___awdiv@divisor+1,c
  4388  000812  0E0A               	movlw	10
  4389  000814  6E03               	movwf	___awdiv@divisor,c
  4390  000816  EC4A  F004         	call	___awdiv	;wreg free
  4391  00081A  5001               	movf	?___awdiv,w,c
  4392  00081C  6E44               	movwf	_decimal_1,c
  4393                           
  4394                           ;main.c: 117:         decimal_2 = number % 10;
  4395  00081E  C04C  F001         	movff	_number,___awmod@dividend
  4396  000822  6A02               	clrf	___awmod@dividend+1,c
  4397  000824  0E00               	movlw	0
  4398  000826  6E04               	movwf	___awmod@divisor+1,c
  4399  000828  0E0A               	movlw	10
  4400  00082A  6E03               	movwf	___awmod@divisor,c
  4401  00082C  ECC6  F004         	call	___awmod	;wreg free
  4402  000830  5001               	movf	?___awmod,w,c
  4403  000832  6E43               	movwf	_decimal_2,c
  4404                           
  4405                           ;main.c: 118:     }
  4406  000834  D004               	goto	i2l2434
  4407  000836                     i2l373:
  4408                           
  4409                           ;main.c: 120:     {;main.c: 121:         decimal_2 = number;
  4410  000836  C04C  F043         	movff	_number,_decimal_2
  4411                           
  4412                           ;main.c: 122:         decimal_1 = empty;
  4413  00083A  C0DC  F044         	movff	_empty,_decimal_1
  4414  00083E                     i2l2434:
  4415                           
  4416                           ;main.c: 125:     if(flipflop == 0)
  4417  00083E  0100               	movlb	0	; () banked
  4418  000840  516E               	movf	_flipflop& (0+255),w,b
  4419  000842  116F               	iorwf	(_flipflop+1)& (0+255),w,b
  4420  000844  A4D8               	btfss	status,2,c
  4421  000846  D013               	goto	i2l2442
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;main.c: 126:     {;main.c: 127:         PORTC = 0b00000010;
  4425  000848  0E02               	movlw	2
  4426  00084A  6E82               	movwf	3970,c	;volatile
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;main.c: 128:         PORTA = get7seg[decimal_1];
  4430  00084C  0ED5               	movlw	low _get7seg
  4431  00084E  2444               	addwf	_decimal_1,w,c
  4432  000850  6EF6               	movwf	tblptrl,c
  4433  000852  6AF7               	clrf	tblptrh,c
  4434  000854  0EFE               	movlw	high _get7seg
  4435  000856  22F7               	addwfc	tblptrh,f,c
  4436  000858                     	if	1	;There are 3 active tblptr bytes
  4437  000858  6AF8               	clrf	tblptru,c
  4438  00085A  0E00               	movlw	low (__mediumconst shr (0+16))
  4439  00085C  22F8               	addwfc	tblptru,f,c
  4440  00085E                     	endif
  4441  00085E  0008               	tblrd		*
  4442  000860  CFF5 FF80          	movff	tablat,3968	;volatile
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;main.c: 129:         flipflop = 1;
  4446  000864  0E00               	movlw	0
  4447  000866  6F6F               	movwf	(_flipflop+1)& (0+255),b
  4448  000868  0E01               	movlw	1
  4449  00086A  6F6E               	movwf	_flipflop& (0+255),b
  4450                           
  4451                           ;main.c: 130:     }
  4452  00086C  0012               	return	
  4453  00086E                     i2l2442:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;main.c: 132:     {;main.c: 133:         PORTC = 0b00000001;
  4457  00086E  0E01               	movlw	1
  4458  000870  6E82               	movwf	3970,c	;volatile
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;main.c: 134:         PORTA = get7seg[decimal_2];
  4462  000872  0ED5               	movlw	low _get7seg
  4463  000874  2443               	addwf	_decimal_2,w,c
  4464  000876  6EF6               	movwf	tblptrl,c
  4465  000878  6AF7               	clrf	tblptrh,c
  4466  00087A  0EFE               	movlw	high _get7seg
  4467  00087C  22F7               	addwfc	tblptrh,f,c
  4468  00087E                     	if	1	;There are 3 active tblptr bytes
  4469  00087E  6AF8               	clrf	tblptru,c
  4470  000880  0E00               	movlw	low (__mediumconst shr (0+16))
  4471  000882  22F8               	addwfc	tblptru,f,c
  4472  000884                     	endif
  4473  000884  0008               	tblrd		*
  4474  000886  CFF5 FF80          	movff	tablat,3968	;volatile
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;main.c: 135:         flipflop = 0;
  4478  00088A  0E00               	movlw	0
  4479  00088C  6F6F               	movwf	(_flipflop+1)& (0+255),b
  4480  00088E  0E00               	movlw	0
  4481  000890  6F6E               	movwf	_flipflop& (0+255),b
  4482                           
  4483                           ; BSR set to: 0
  4484  000892  0012               	return		;funcret
  4485  000894                     __end_of_displayController:
  4486                           	opt callstack 0
  4487                           
  4488 ;; *************** function ___awmod *****************
  4489 ;; Defined at:
  4490 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  dividend        2    0[COMRAM] int 
  4493 ;;  divisor         2    2[COMRAM] int 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  sign            1    5[COMRAM] unsigned char 
  4496 ;;  counter         1    4[COMRAM] unsigned char 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  2    0[COMRAM] int 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4509 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;Total ram usage:        6 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_displayController
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text38
  4520  00098C                     __ptext38:
  4521                           	opt callstack 0
  4522  00098C                     ___awmod:
  4523                           	opt callstack 13
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;incstack = 0
  4527  00098C  0E00               	movlw	0
  4528  00098E  6E06               	movwf	___awmod@sign,c
  4529  000990  AE02               	btfss	___awmod@dividend+1,7,c
  4530  000992  D006               	goto	i2l2366
  4531  000994  6C01               	negf	___awmod@dividend,c
  4532  000996  1E02               	comf	___awmod@dividend+1,f,c
  4533  000998  B0D8               	btfsc	status,0,c
  4534  00099A  2A02               	incf	___awmod@dividend+1,f,c
  4535  00099C  0E01               	movlw	1
  4536  00099E  6E06               	movwf	___awmod@sign,c
  4537  0009A0                     i2l2366:
  4538  0009A0  AE04               	btfss	___awmod@divisor+1,7,c
  4539  0009A2  D004               	goto	i2l2370
  4540  0009A4  6C03               	negf	___awmod@divisor,c
  4541  0009A6  1E04               	comf	___awmod@divisor+1,f,c
  4542  0009A8  B0D8               	btfsc	status,0,c
  4543  0009AA  2A04               	incf	___awmod@divisor+1,f,c
  4544  0009AC                     i2l2370:
  4545  0009AC  5003               	movf	___awmod@divisor,w,c
  4546  0009AE  1004               	iorwf	___awmod@divisor+1,w,c
  4547  0009B0  B4D8               	btfsc	status,2,c
  4548  0009B2  D018               	goto	i2l2386
  4549  0009B4  0E01               	movlw	1
  4550  0009B6  6E05               	movwf	___awmod@counter,c
  4551  0009B8  D004               	goto	i2l2376
  4552  0009BA                     i2l2374:
  4553  0009BA  90D8               	bcf	status,0,c
  4554  0009BC  3603               	rlcf	___awmod@divisor,f,c
  4555  0009BE  3604               	rlcf	___awmod@divisor+1,f,c
  4556  0009C0  2A05               	incf	___awmod@counter,f,c
  4557  0009C2                     i2l2376:
  4558  0009C2  AE04               	btfss	___awmod@divisor+1,7,c
  4559  0009C4  D7FA               	goto	i2l2374
  4560  0009C6                     i2u157_40:
  4561  0009C6  5003               	movf	___awmod@divisor,w,c
  4562  0009C8  5C01               	subwf	___awmod@dividend,w,c
  4563  0009CA  5004               	movf	___awmod@divisor+1,w,c
  4564  0009CC  5802               	subwfb	___awmod@dividend+1,w,c
  4565  0009CE  A0D8               	btfss	status,0,c
  4566  0009D0  D004               	goto	i2l2382
  4567  0009D2  5003               	movf	___awmod@divisor,w,c
  4568  0009D4  5E01               	subwf	___awmod@dividend,f,c
  4569  0009D6  5004               	movf	___awmod@divisor+1,w,c
  4570  0009D8  5A02               	subwfb	___awmod@dividend+1,f,c
  4571  0009DA                     i2l2382:
  4572  0009DA  90D8               	bcf	status,0,c
  4573  0009DC  3204               	rrcf	___awmod@divisor+1,f,c
  4574  0009DE  3203               	rrcf	___awmod@divisor,f,c
  4575  0009E0  2E05               	decfsz	___awmod@counter,f,c
  4576  0009E2  D7F1               	goto	i2u157_40
  4577  0009E4                     i2l2386:
  4578  0009E4  5006               	movf	___awmod@sign,w,c
  4579  0009E6  B4D8               	btfsc	status,2,c
  4580  0009E8  D004               	goto	i2l2390
  4581  0009EA  6C01               	negf	___awmod@dividend,c
  4582  0009EC  1E02               	comf	___awmod@dividend+1,f,c
  4583  0009EE  B0D8               	btfsc	status,0,c
  4584  0009F0  2A02               	incf	___awmod@dividend+1,f,c
  4585  0009F2                     i2l2390:
  4586  0009F2  C001  F001         	movff	___awmod@dividend,?___awmod
  4587  0009F6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4588  0009FA  0012               	return		;funcret
  4589  0009FC                     __end_of___awmod:
  4590                           	opt callstack 0
  4591                           
  4592 ;; *************** function ___awdiv *****************
  4593 ;; Defined at:
  4594 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  dividend        2    0[COMRAM] int 
  4597 ;;  divisor         2    2[COMRAM] int 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  quotient        2    6[COMRAM] int 
  4600 ;;  sign            1    5[COMRAM] unsigned char 
  4601 ;;  counter         1    4[COMRAM] unsigned char 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  2    0[COMRAM] int 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;Total ram usage:        8 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_displayController
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text39
  4625  000894                     __ptext39:
  4626                           	opt callstack 0
  4627  000894                     ___awdiv:
  4628                           	opt callstack 13
  4629                           
  4630                           ;incstack = 0
  4631  000894  0E00               	movlw	0
  4632  000896  6E06               	movwf	___awdiv@sign,c
  4633  000898  AE04               	btfss	___awdiv@divisor+1,7,c
  4634  00089A  D006               	goto	i2l2322
  4635  00089C  6C03               	negf	___awdiv@divisor,c
  4636  00089E  1E04               	comf	___awdiv@divisor+1,f,c
  4637  0008A0  B0D8               	btfsc	status,0,c
  4638  0008A2  2A04               	incf	___awdiv@divisor+1,f,c
  4639  0008A4  0E01               	movlw	1
  4640  0008A6  6E06               	movwf	___awdiv@sign,c
  4641  0008A8                     i2l2322:
  4642  0008A8  AE02               	btfss	___awdiv@dividend+1,7,c
  4643  0008AA  D006               	goto	i2l2328
  4644  0008AC  6C01               	negf	___awdiv@dividend,c
  4645  0008AE  1E02               	comf	___awdiv@dividend+1,f,c
  4646  0008B0  B0D8               	btfsc	status,0,c
  4647  0008B2  2A02               	incf	___awdiv@dividend+1,f,c
  4648  0008B4  0E01               	movlw	1
  4649  0008B6  1A06               	xorwf	___awdiv@sign,f,c
  4650  0008B8                     i2l2328:
  4651  0008B8  0E00               	movlw	0
  4652  0008BA  6E08               	movwf	___awdiv@quotient+1,c
  4653  0008BC  0E00               	movlw	0
  4654  0008BE  6E07               	movwf	___awdiv@quotient,c
  4655  0008C0  5003               	movf	___awdiv@divisor,w,c
  4656  0008C2  1004               	iorwf	___awdiv@divisor+1,w,c
  4657  0008C4  B4D8               	btfsc	status,2,c
  4658  0008C6  D01C               	goto	i2l2350
  4659  0008C8  0E01               	movlw	1
  4660  0008CA  6E05               	movwf	___awdiv@counter,c
  4661  0008CC  D004               	goto	i2l2336
  4662  0008CE                     i2l2334:
  4663  0008CE  90D8               	bcf	status,0,c
  4664  0008D0  3603               	rlcf	___awdiv@divisor,f,c
  4665  0008D2  3604               	rlcf	___awdiv@divisor+1,f,c
  4666  0008D4  2A05               	incf	___awdiv@counter,f,c
  4667  0008D6                     i2l2336:
  4668  0008D6  AE04               	btfss	___awdiv@divisor+1,7,c
  4669  0008D8  D7FA               	goto	i2l2334
  4670  0008DA                     i2u151_40:
  4671  0008DA  90D8               	bcf	status,0,c
  4672  0008DC  3607               	rlcf	___awdiv@quotient,f,c
  4673  0008DE  3608               	rlcf	___awdiv@quotient+1,f,c
  4674  0008E0  5003               	movf	___awdiv@divisor,w,c
  4675  0008E2  5C01               	subwf	___awdiv@dividend,w,c
  4676  0008E4  5004               	movf	___awdiv@divisor+1,w,c
  4677  0008E6  5802               	subwfb	___awdiv@dividend+1,w,c
  4678  0008E8  A0D8               	btfss	status,0,c
  4679  0008EA  D005               	goto	i2l2346
  4680  0008EC  5003               	movf	___awdiv@divisor,w,c
  4681  0008EE  5E01               	subwf	___awdiv@dividend,f,c
  4682  0008F0  5004               	movf	___awdiv@divisor+1,w,c
  4683  0008F2  5A02               	subwfb	___awdiv@dividend+1,f,c
  4684  0008F4  8007               	bsf	___awdiv@quotient,0,c
  4685  0008F6                     i2l2346:
  4686  0008F6  90D8               	bcf	status,0,c
  4687  0008F8  3204               	rrcf	___awdiv@divisor+1,f,c
  4688  0008FA  3203               	rrcf	___awdiv@divisor,f,c
  4689  0008FC  2E05               	decfsz	___awdiv@counter,f,c
  4690  0008FE  D7ED               	goto	i2u151_40
  4691  000900                     i2l2350:
  4692  000900  5006               	movf	___awdiv@sign,w,c
  4693  000902  B4D8               	btfsc	status,2,c
  4694  000904  D004               	goto	i2l2354
  4695  000906  6C07               	negf	___awdiv@quotient,c
  4696  000908  1E08               	comf	___awdiv@quotient+1,f,c
  4697  00090A  B0D8               	btfsc	status,0,c
  4698  00090C  2A08               	incf	___awdiv@quotient+1,f,c
  4699  00090E                     i2l2354:
  4700  00090E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4701  000912  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4702  000916  0012               	return		;funcret
  4703  000918                     __end_of___awdiv:
  4704                           	opt callstack 0
  4705                           
  4706 ;; *************** function _EUSART1_Transmit_ISR *****************
  4707 ;; Defined at:
  4708 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;Total ram usage:        0 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_EUSART1_Initialize
  4732 ;;		_INTERRUPT_InterruptManager
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text40
  4737  000CDC                     __ptext40:
  4738                           	opt callstack 0
  4739  000CDC                     _EUSART1_Transmit_ISR:
  4740                           	opt callstack 16
  4741                           
  4742                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  4743                           
  4744                           ;incstack = 0
  4745  000CDC  0E40               	movlw	64
  4746  000CDE  6049               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  4747  000CE0  D010               	goto	i2l253
  4748                           
  4749                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  4750  000CE2  0E80               	movlw	low _eusart1TxBuffer
  4751  000CE4  244A               	addwf	_eusart1TxTail,w,c	;volatile
  4752  000CE6  6ED9               	movwf	fsr2l,c
  4753  000CE8  6ADA               	clrf	fsr2h,c
  4754  000CEA  0E01               	movlw	high _eusart1TxBuffer
  4755  000CEC  22DA               	addwfc	fsr2h,f,c
  4756  000CEE  50DF               	movf	indf2,w,c
  4757  000CF0  6EAD               	movwf	4013,c	;volatile
  4758  000CF2  2A4A               	incf	_eusart1TxTail,f,c	;volatile
  4759                           
  4760                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  4761  000CF4  0E3F               	movlw	63
  4762  000CF6  644A               	cpfsgt	_eusart1TxTail,c	;volatile
  4763  000CF8  D002               	goto	i2l2550
  4764                           
  4765                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  4766  000CFA  0E00               	movlw	0
  4767  000CFC  6E4A               	movwf	_eusart1TxTail,c	;volatile
  4768  000CFE                     i2l2550:
  4769                           
  4770                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  4771  000CFE  2A49               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  4772                           
  4773                           ;mcc_generated_files/eusart1.c: 218:     }
  4774  000D00  0012               	return	
  4775  000D02                     i2l253:
  4776                           
  4777                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  4778  000D02  989D               	bcf	3997,4,c	;volatile
  4779  000D04  0012               	return		;funcret
  4780  000D06                     __end_of_EUSART1_Transmit_ISR:
  4781                           	opt callstack 0
  4782                           
  4783 ;; *************** function _EUSART1_Receive_ISR *****************
  4784 ;; Defined at:
  4785 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4803 ;;Total ram usage:        0 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    2
  4806 ;; This function calls:
  4807 ;;		Absolute function
  4808 ;;		_EUSART1_DefaultErrorHandler
  4809 ;;		_EUSART1_DefaultFramingErrorHandler
  4810 ;;		_EUSART1_DefaultOverrunErrorHandler
  4811 ;;		_EUSART1_RxDataHandler
  4812 ;; This function is called by:
  4813 ;;		_EUSART1_Initialize
  4814 ;;		_INTERRUPT_InterruptManager
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text41
  4819  0006D4                     __ptext41:
  4820                           	opt callstack 0
  4821  0006D4                     _EUSART1_Receive_ISR:
  4822                           	opt callstack 14
  4823                           
  4824                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  4825                           
  4826                           ;incstack = 0
  4827  0006D4  0E00               	movlw	low _eusart1RxStatusBuffer
  4828  0006D6  2448               	addwf	_eusart1RxHead,w,c	;volatile
  4829  0006D8  6ED9               	movwf	fsr2l,c
  4830  0006DA  6ADA               	clrf	fsr2h,c
  4831  0006DC  0E01               	movlw	high _eusart1RxStatusBuffer
  4832  0006DE  22DA               	addwfc	fsr2h,f,c
  4833  0006E0  0E00               	movlw	0
  4834  0006E2  6EDF               	movwf	indf2,c
  4835                           
  4836                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  4837  0006E4  A4AB               	btfss	4011,2,c	;volatile
  4838  0006E6  D014               	goto	i2u174_49
  4839                           
  4840                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  4841  0006E8  0E00               	movlw	low _eusart1RxStatusBuffer
  4842  0006EA  2448               	addwf	_eusart1RxHead,w,c	;volatile
  4843  0006EC  6ED9               	movwf	fsr2l,c
  4844  0006EE  6ADA               	clrf	fsr2h,c
  4845  0006F0  0E01               	movlw	high _eusart1RxStatusBuffer
  4846  0006F2  22DA               	addwfc	fsr2h,f,c
  4847  0006F4  0101               	movlb	1	; () banked
  4848  0006F6  82DF               	bsf	indf2,1,c
  4849                           
  4850                           ; BSR set to: 1
  4851                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  4852  0006F8  D801               	call	i2u174_48
  4853  0006FA  D00A               	goto	i2u174_49
  4854  0006FC                     i2u174_48:
  4855  0006FC  0005               	push	
  4856  0006FE  6EFA               	movwf	pclath,c
  4857  000700  0100               	movlb	0	; () banked
  4858  000702  5174               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  4859  000704  6EFD               	movwf	tosl,c
  4860  000706  5175               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  4861  000708  6EFE               	movwf	tosh,c
  4862  00070A  6AFF               	clrf	tosu,c
  4863  00070C  50FA               	movf	pclath,w,c
  4864  00070E  0012               	return		;indir
  4865  000710                     i2u174_49:
  4866                           
  4867                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  4868  000710  A2AB               	btfss	4011,1,c	;volatile
  4869  000712  D014               	goto	i2u176_49
  4870                           
  4871                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  4872  000714  0E00               	movlw	low _eusart1RxStatusBuffer
  4873  000716  2448               	addwf	_eusart1RxHead,w,c	;volatile
  4874  000718  6ED9               	movwf	fsr2l,c
  4875  00071A  6ADA               	clrf	fsr2h,c
  4876  00071C  0E01               	movlw	high _eusart1RxStatusBuffer
  4877  00071E  22DA               	addwfc	fsr2h,f,c
  4878  000720  0101               	movlb	1	; () banked
  4879  000722  84DF               	bsf	indf2,2,c
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  4883  000724  D801               	call	i2u176_48
  4884  000726  D00A               	goto	i2u176_49
  4885  000728                     i2u176_48:
  4886  000728  0005               	push	
  4887  00072A  6EFA               	movwf	pclath,c
  4888  00072C  0100               	movlb	0	; () banked
  4889  00072E  5172               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  4890  000730  6EFD               	movwf	tosl,c
  4891  000732  5173               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  4892  000734  6EFE               	movwf	tosh,c
  4893  000736  6AFF               	clrf	tosu,c
  4894  000738  50FA               	movf	pclath,w,c
  4895  00073A  0012               	return		;indir
  4896  00073C                     i2u176_49:
  4897                           
  4898                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  4899  00073C  0E00               	movlw	low _eusart1RxStatusBuffer
  4900  00073E  2448               	addwf	_eusart1RxHead,w,c	;volatile
  4901  000740  6ED9               	movwf	fsr2l,c
  4902  000742  6ADA               	clrf	fsr2h,c
  4903  000744  0E01               	movlw	high _eusart1RxStatusBuffer
  4904  000746  22DA               	addwfc	fsr2h,f,c
  4905  000748  50DF               	movf	indf2,w,c
  4906  00074A  B4D8               	btfsc	status,2,c
  4907  00074C  D00C               	goto	i2l2570
  4908                           
  4909                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  4910  00074E  D801               	call	i2u178_48
  4911  000750  0012               	return	
  4912  000752                     i2u178_48:
  4913  000752  0005               	push	
  4914  000754  6EFA               	movwf	pclath,c
  4915  000756  0100               	movlb	0	; () banked
  4916  000758  5170               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  4917  00075A  6EFD               	movwf	tosl,c
  4918  00075C  5171               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  4919  00075E  6EFE               	movwf	tosh,c
  4920  000760  6AFF               	clrf	tosu,c
  4921  000762  50FA               	movf	pclath,w,c
  4922  000764  0012               	return		;indir
  4923  000766                     i2l2570:
  4924                           
  4925                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  4926  000766  ECC9  F006         	call	_EUSART1_RxDataHandler	;wreg free
  4927  00076A  0012               	return		;funcret
  4928  00076C                     __end_of_EUSART1_Receive_ISR:
  4929                           	opt callstack 0
  4930                           
  4931 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  4932 ;; Defined at:
  4933 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		None
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;Total ram usage:        0 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_EUSART1_Initialize
  4957 ;;		_EUSART1_Receive_ISR
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text42
  4962  000E90                     __ptext42:
  4963                           	opt callstack 0
  4964  000E90                     _EUSART1_DefaultOverrunErrorHandler:
  4965                           	opt callstack 15
  4966                           
  4967                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  4968                           
  4969                           ;incstack = 0
  4970  000E90  98AB               	bcf	4011,4,c	;volatile
  4971                           
  4972                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  4973  000E92  88AB               	bsf	4011,4,c	;volatile
  4974  000E94  0012               	return		;funcret
  4975  000E96                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  4976                           	opt callstack 0
  4977                           
  4978 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4979 ;; Defined at:
  4980 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		None
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_EUSART1_Initialize
  5004 ;;		_EUSART1_Receive_ISR
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text43
  5009  000EAC                     __ptext43:
  5010                           	opt callstack 0
  5011  000EAC                     _EUSART1_DefaultFramingErrorHandler:
  5012                           	opt callstack 15
  5013                           
  5014                           ;incstack = 0
  5015  000EAC  0012               	return		;funcret
  5016  000EAE                     __end_of_EUSART1_DefaultFramingErrorHandler:
  5017                           	opt callstack 0
  5018                           
  5019 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  5020 ;; Defined at:
  5021 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;		None
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;		None
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;Total ram usage:        0 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    1
  5042 ;; This function calls:
  5043 ;;		_EUSART1_RxDataHandler
  5044 ;; This function is called by:
  5045 ;;		_EUSART1_Initialize
  5046 ;;		_EUSART1_Receive_ISR
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text44
  5051  000E96                     __ptext44:
  5052                           	opt callstack 0
  5053  000E96                     _EUSART1_DefaultErrorHandler:
  5054                           	opt callstack 14
  5055                           
  5056                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  5057                           
  5058                           ;incstack = 0
  5059  000E96  ECC9  F006         	call	_EUSART1_RxDataHandler	;wreg free
  5060  000E9A  0012               	return		;funcret
  5061  000E9C                     __end_of_EUSART1_DefaultErrorHandler:
  5062                           	opt callstack 0
  5063                           
  5064 ;; *************** function _EUSART1_RxDataHandler *****************
  5065 ;; Defined at:
  5066 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;		None
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;Total ram usage:        0 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_EUSART1_Receive_ISR
  5090 ;;		_EUSART1_DefaultErrorHandler
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text45
  5095  000D92                     __ptext45:
  5096                           	opt callstack 0
  5097  000D92                     _EUSART1_RxDataHandler:
  5098                           	opt callstack 15
  5099                           
  5100                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  5101                           
  5102                           ;incstack = 0
  5103  000D92  0E40               	movlw	low _eusart1RxBuffer
  5104  000D94  2448               	addwf	_eusart1RxHead,w,c	;volatile
  5105  000D96  6ED9               	movwf	fsr2l,c
  5106  000D98  6ADA               	clrf	fsr2h,c
  5107  000D9A  0E01               	movlw	high _eusart1RxBuffer
  5108  000D9C  22DA               	addwfc	fsr2h,f,c
  5109  000D9E  CFAE FFDF          	movff	4014,indf2	;volatile
  5110  000DA2  2A48               	incf	_eusart1RxHead,f,c	;volatile
  5111                           
  5112                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  5113  000DA4  0E3F               	movlw	63
  5114  000DA6  6448               	cpfsgt	_eusart1RxHead,c	;volatile
  5115  000DA8  D002               	goto	i2l2414
  5116                           
  5117                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  5118  000DAA  0E00               	movlw	0
  5119  000DAC  6E48               	movwf	_eusart1RxHead,c	;volatile
  5120  000DAE                     i2l2414:
  5121                           
  5122                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  5123  000DAE  2A46               	incf	_eusart1RxCount,f,c	;volatile
  5124  000DB0  0012               	return		;funcret
  5125  000DB2                     __end_of_EUSART1_RxDataHandler:
  5126                           	opt callstack 0
  5127                           
  5128                           	psect	text46
  5129  000000                     __ptext46:
  5130                           	opt callstack 0
  5131                           
  5132                           	psect	rparam
  5133  0000                     
  5134                           	psect	temp
  5135  00004F                     btemp:
  5136                           	opt callstack 0
  5137  00004F                     	ds	1
  5138  0000                     int$flags	set	btemp
  5139  0000                     wtemp8	set	btemp+1
  5140  0000                     ttemp5	set	btemp+1
  5141  0000                     ttemp6	set	btemp+4
  5142  0000                     ttemp7	set	btemp+8
  5143                           tosu	equ	0xFFF
  5144                           tosh	equ	0xFFE
  5145                           tosl	equ	0xFFD
  5146                           stkptr	equ	0xFFC
  5147                           pclatu	equ	0xFFB
  5148                           pclath	equ	0xFFA
  5149                           pcl	equ	0xFF9
  5150                           tblptru	equ	0xFF8
  5151                           tblptrh	equ	0xFF7
  5152                           tblptrl	equ	0xFF6
  5153                           tablat	equ	0xFF5
  5154                           prodh	equ	0xFF4
  5155                           prodl	equ	0xFF3
  5156                           indf0	equ	0xFEF
  5157                           postinc0	equ	0xFEE
  5158                           postdec0	equ	0xFED
  5159                           preinc0	equ	0xFEC
  5160                           plusw0	equ	0xFEB
  5161                           fsr0h	equ	0xFEA
  5162                           fsr0l	equ	0xFE9
  5163                           wreg	equ	0xFE8
  5164                           indf1	equ	0xFE7
  5165                           postinc1	equ	0xFE6
  5166                           postdec1	equ	0xFE5
  5167                           preinc1	equ	0xFE4
  5168                           plusw1	equ	0xFE3
  5169                           fsr1h	equ	0xFE2
  5170                           fsr1l	equ	0xFE1
  5171                           bsr	equ	0xFE0
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           postdec2	equ	0xFDD
  5175                           preinc2	equ	0xFDC
  5176                           plusw2	equ	0xFDB
  5177                           fsr2h	equ	0xFDA
  5178                           fsr2l	equ	0xFD9
  5179                           status	equ	0xFD8


Data Sizes:
    Strings     286
    Constant    12
    Data        8
    BSS         269
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      78
    BANK0           160     60     129
    BANK1           256      0     192
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_11(CODE[63]), STR_10(CODE[25]), STR_9(CODE[24]), STR_8(CODE[32]), 
		 -> STR_7(CODE[33]), STR_6(CODE[10]), STR_5(CODE[28]), STR_4(CODE[18]), 
		 -> STR_3(CODE[18]), STR_2(CODE[19]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1715_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_11(CODE[63]), STR_10(CODE[25]), STR_9(CODE[24]), STR_8(CODE[32]), 
		 -> STR_7(CODE[33]), STR_6(CODE[10]), STR_5(CODE[28]), STR_4(CODE[18]), 
		 -> STR_3(CODE[18]), STR_2(CODE[19]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 63
		 -> STR_11(CODE[63]), STR_10(CODE[25]), STR_9(CODE[24]), STR_8(CODE[32]), 
		 -> STR_7(CODE[33]), STR_6(CODE[10]), STR_5(CODE[28]), STR_4(CODE[18]), 
		 -> STR_3(CODE[18]), STR_2(CODE[19]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayController(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayController(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_i2c_init
    _i2c_display_write_inst->_i2c_wait
    _i2c_write->_i2c_wait
    _i2c_set_stop_condition->_i2c_wait
    _i2c_set_start_condition->_i2c_wait
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _displayController->___awdiv

Critical Paths under _main in BANK0

    _i2c_init->_printf
    _i2c_display_init->_i2c_display_write_inst
    _i2c_display_write_inst->_i2c_write
    _i2c_set_stop_condition->_printf
    _i2c_set_start_condition->_printf
    _i2c_wait->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   55439
                                             58 BANK0      2     2      0
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                   _i2c_display_init
                           _i2c_init
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0    7777
                                             61 COMRAM     1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _i2c_display_init                                     0     0      0   46334
             _i2c_display_write_inst
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_inst                               1     1      0   46334
                                             57 BANK0      1     1      0
            _i2c_set_start_condition
             _i2c_set_stop_condition
                           _i2c_wait
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0    7743
                                             56 BANK0      1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_set_stop_condition                               0     0      0   15424
                           _i2c_wait
                             _printf
 ---------------------------------------------------------------------------------
 (3) _i2c_set_start_condition                              0     0      0   15424
                           _i2c_wait
                             _printf
 ---------------------------------------------------------------------------------
 (4) _i2c_wait                                             1     1      0    7712
                                             61 COMRAM     1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              12     4      8    7712
                                             44 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6641
                                             36 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    6168
                                             55 COMRAM     6     0      6
                                             26 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4596
                                             45 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             34 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             27 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                             18 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      66
                                             17 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      44
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             34 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                             16 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                             16 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          8     8      0     900
                                              8 COMRAM     8     8      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR2_ISR                                            0     0      0     900
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (16) _TMR2_CallBack                                       0     0      0     900
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                  _displayController *
 ---------------------------------------------------------------------------------
 (17) _displayController                                   0     0      0     900
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (18) ___awmod                                             6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (18) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (17) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (16) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _i2c_display_init
     _i2c_display_write_inst
       _i2c_set_start_condition
         _i2c_wait
           _printf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _EUSART1_Write
                     _fputs
                       _fputc
                         _putch
                           _EUSART1_Write
                     _strlen
                 _fputc
                   _putch
                     _EUSART1_Write
         _printf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART1_Write
       _i2c_set_stop_condition
         _i2c_wait
           _printf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _EUSART1_Write
                     _fputs
                       _fputc
                         _putch
                           _EUSART1_Write
                     _strlen
                 _fputc
                   _putch
                     _EUSART1_Write
         _printf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART1_Write
       _i2c_wait
         _printf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART1_Write
       _i2c_write
         _i2c_wait
           _printf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _EUSART1_Write
                     _fputs
                       _fputc
                         _putch
                           _EUSART1_Write
                     _strlen
                 _fputc
                   _putch
                     _EUSART1_Write
   _i2c_init
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _displayController *
         ___awdiv
         ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C0       7       75.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      81       5       80.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      4E       1       83.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18F      12        0.0%
DATA                 0      0     18F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Aug 26 14:00:37 2019

              __end_of_TMR2_SetInterruptHandler 0E5E                        _eusart1TxBufferRemaining 0049  
                                            l24 0E36                                    ___awdiv@sign 0006  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                        ??_i2c_display_write_inst 003F  
                                           l241 0C00                                             l390 0C7E  
                                           l560 010A                                             l562 0112  
                                           l549 079A                                             l477 0DD6  
                                  __CFG_CPB$OFF 000000                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                             _abs 0C24  
                                           _pad 076C                                             _tmp 007F  
                                  ___awmod@sign 0006                                 _TMR2_Initialize 0DB2  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                       __size_of_i2c_display_init 0014  
                                          ?_abs 0023                                            l2102 07E8  
                                          l2032 0BF0                                            l2130 04E2  
                                          l2132 04F6                                            l2124 04BC  
                                          l2150 058E                                            l2142 0552  
                                          l2118 0494                                            l2046 0C1E  
                                          l1272 0C4C                                            l2048 0C20  
                                          l2072 0BD6                                            l2146 0568  
                                          l2170 061A                                            l2162 05DC  
                                          l2058 0A80                                            l2172 062E  
                                          l2068 0BC0                                            l2076 0CBC  
                                          l2092 0792                                            l2182 068C  
                                          l2166 0600                                            l2078 0CC0  
                                          l2094 07A4                                            l2088 0784  
                                          l2186 06B2                                            l2178 0676  
                                          l2098 07BC                                            l2700 00EE  
                                          l2714 012C                                            l2802 0AE8  
                                          l2804 0B0E                                            l2718 013A  
                                          l2752 02B2                                            l2728 0234  
                                          l2748 029A                                            l2780 0410  
                                          l2774 03D2                                            l2790 0432  
                                          ?_pad 0023                                            l2784 041A  
                                          l2878 0B9A                                            STR_1 FFE5  
                                          STR_2 FFAE                                            STR_3 FFD3  
                                          STR_4 FFC1                                            STR_5 FF61  
                                          STR_6 FFF5                                            STR_7 FF20  
                                          STR_8 FF41                                            STR_9 FF96  
                                          u1030 0A78                                            u1120 0C32  
                                          u2000 0266                                            u2001 0264  
                                          u1050 0AC0                                            u2010 0274  
                                          u2020 0278                                            u1230 0632  
                                          u1151 04C2                                            u2040 0284  
                                          u1170 04FA                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u2080 0354                                            u2197 0BA6  
                                          u1910 00C0                                            u1920 00C2  
                                          u1950 0100                                            u1970 0126  
                                          u1980 0244                                            _TMR2 000FBC  
                                          _WPUB 000F61                                   _EUSART1_Write 0BEE  
                                          abs@a 0023                                            _dbuf 0080  
                                          _main 0B78                        ??_i2c_set_stop_condition 003F  
                                          _dtoa 0096                                            _prec 003F  
                                          _nout 006A                                            pad@i 002A  
                                          pad@p 0027                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002C  
                                          fsr2l 000FD9                                            btemp 004F  
                                 __CFG_BORV$190 000000                                            start 0092  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                                         ??_abs 0025                                           ??_pad 0029  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 0E3C  
                         _eusart1RxStatusBuffer 0100                                 __end_of___aodiv 05B0  
                                         ?_main 0001                                           ?_dtoa 002E  
                               __end_of___aomod 06D4                                 __end_of___awdiv 0918  
                                         STR_10 FF7D                                           STR_11 FEE1  
                               __end_of___awmod 09FC                                 ___awdiv@divisor 0003  
                                         _T2CON 000FBA                                  __CFG_DEBUG$OFF 000000  
                                         i2l134 0046                                           i2l135 006E  
                                         i2l136 0064                                           i2l253 0D02  
                                         i2l373 0836                                 ___awdiv@counter 0005  
                                  vfpfcnvrt@fmt 003A                                           _PORTA 000F80  
                                         _PORTC 000F82                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                     ??_i2c_set_start_condition 003F                                 __end_of_get7seg FEE1  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 0CDC                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR2_ISR 0D52                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _debug 00DE  
                                         _flags 0041                                           _index 007E  
                                         _empty 00DC                                           _fputc 0A68  
                                         _fputs 0BB6                              __CFG_MCLRE$EXTMCLR 000000  
                                         pad@fp 0023                                           _width 006C  
                                         _putch 0E4A                                           dtoa@d 0030  
                                         dtoa@i 00B8                                           dtoa@n 00B0  
                                         dtoa@p 00AA                                           dtoa@s 00AE  
                                         dtoa@w 00AC                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                         ttemp5 0050                                           ttemp6 0053  
                                         ttemp7 0057                                           status 000FD8  
                                         wtemp8 0050                                  __CFG_HFOFST$ON 000000  
    __end_of_EUSART1_DefaultFramingErrorHandler 0EAE     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 0EAC                    i2c_display_write_inst@byInst 00D9  
                                __CFG_PBADEN$ON 000000                                 __initialization 09FC  
                    __end_of_EUSART1_Initialize 098C                                    __end_of_main 0BB6  
                                  __end_of_dtoa 02DC                                __end_of_i2c_init 0B78  
                              __end_of_i2c_wait 0D72                         __end_of_TMR2_Initialize 0DD0  
                   ?_INTERRUPT_InterruptManager 0001                        _TMR2_SetInterruptHandler 0E54  
                                        ??_main 00DA                                          ??_dtoa 00A0  
                                 __activetblptr 000003                 __size_of_i2c_display_write_inst 002E  
                         ?_EUSART1_Transmit_ISR 0001                                          ?_fputc 0013  
                                        ?_fputs 001C                                ___awdiv@dividend 0001  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        i2l2322 08A8                                          i2l2414 0DAE  
                                        i2l2334 08CE                                          i2l2350 0900  
                                        i2l2336 08D6                                          i2l2328 08B8  
                                        i2l2354 090E                                          i2l2346 08F6  
                                        i2l2370 09AC                                          i2l2442 086E  
                                        i2l2434 083E                                          i2l2550 0CFE  
                                        i2l2390 09F2                                          i2l2382 09DA  
                                        i2l2374 09BA                                          i2l2366 09A0  
                                __CFG_WDTEN$OFF 000000                                          i2l2376 09C2  
                                        i2l2570 0766                                          i2l2386 09E4  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                            __size_of_i2c_write 000E                 __size_of_i2c_set_stop_condition 001A  
                                        _TXSTA1 000FAC                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 00CA                                       ??___aodiv 0021  
                                     ??___aomod 0021                                       ??___awdiv 0005  
                                __CFG_STVREN$ON 000000                                       ??___awmod 0005  
                      ?_EUSART1_SetErrorHandler 0011                                          clear_0 0A40  
                                        clear_1 0A4C                                          clear_2 0A58  
                              ___awdiv@quotient 0007                                 ___awmod@divisor 0003  
                                        _number 004C                                 ___awmod@counter 0005  
                                        _printf 0D06                                          pad@buf 0025  
              ??_EUSART1_SetOverrunErrorHandler 0013                 ?_EUSART1_SetOverrunErrorHandler 0011  
                                        dtoa@fp 002E                                          _string 0060  
                                        _strlen 0CB2                                          fputc@c 0013  
                                        fputs@c 0020                                          fputs@i 0021  
                                  __pdataCOMRAM 004C                                          fputs@s 001C  
                                  __mediumconst FED4                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              _i2c_display_init 0E16                                __end_of_vfprintf 0B2C  
                               ??_EUSART1_Write 0011        TMR2_SetInterruptHandler@InterruptHandler 0011  
                               _eusart1RxBuffer 0140                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0180                               _SYSTEM_Initialize 0E00  
                                    __accesstop 0060                         __end_of__initialization 0A5E  
                         __end_of_TMR2_CallBack 0D92                          _i2c_display_write_inst 0C56  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                __size_of_EUSART1_RxDataHandler 0020                   __end_of_EUSART1_RxDataHandler 0DB2  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 0E9C  
                           ??_SYSTEM_Initialize 0013                                       ?_TMR2_ISR 0001  
                                 __end_of_fputc 0AD4                                   __end_of_fputs 0BEE  
                                 __end_of_putch 0E54                                ?_TMR2_Initialize 0001  
                        _i2c_set_stop_condition 0DD0                          ??_EUSART1_Transmit_ISR 0001  
                             __end_of_i2c_write 0E4A                     __end_of_EUSART1_Receive_ISR 076C  
                                       ??_fputc 0017                       __end_of_SYSTEM_Initialize 0E16  
                                       ??_fputs 0020                                         ??_putch 0012  
                                 _eusart1RxHead 0048                                   _eusart1TxHead 004B  
                                 _eusart1RxTail 0047                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                   _eusart1TxTail 004A  
             _EUSART1_TxDefaultInterruptHandler 0078                 ??_EUSART1_SetRxInterruptHandler 0013  
                               __CFG_PLLCFG$OFF 000000                                       ?_i2c_init 0001  
                                     ?_i2c_wait 0001                 __end_of_EUSART1_SetErrorHandler 0E90  
                            __CFG_CCP2MX$PORTC1 000000                                      ??_TMR2_ISR 0009  
                            __CFG_CCP3MX$PORTB5 000000                                         ?_printf 00CC  
                                       ?_strlen 0011          __end_of_EUSART1_SetFramingErrorHandler 0E86  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 0E7C  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 018C                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                                       _SSP1BUF 000FC9                                      ??_i2c_init 003E  
                                    ??_i2c_wait 003E                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 0000                                         __Lparam 0000  
                    ??_TMR2_SetInterruptHandler 0013                                         ___aodiv 0468  
                                       ___aomod 05B0                                         ___awdiv 0894  
                                       ___awmod 098C                                       ?_vfprintf 00C4  
                                       __pcinit 09FC                                         _get7seg FED5  
                                       __ramtop 1000                                         __ptext0 0B78  
                                       __ptext1 0B2C                                         __ptext2 0E16  
                                       __ptext3 0C56                                         __ptext4 0E3C  
                                       __ptext5 0DD0                                         __ptext6 0DEA  
                                       __ptext7 0D52                                         __ptext8 0D06  
                                       __ptext9 0AD4                                 __size_of_printf 0028  
                               __size_of_strlen 002A                           _OSCILLATOR_Initialize 0E2A  
                                     _T2CONbits 000FBA                                    __size_of_abs 0032  
                                  __size_of_pad 0096                                ___awmod@dividend 0001  
                            _EUSART1_Initialize 0918                        ??_PIN_MANAGER_Initialize 0011  
                 ??_EUSART1_DefaultErrorHandler 0001                      __size_of_SYSTEM_Initialize 0016  
                          end_of_initialization 0A5E                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0015                     _EUSART1_OverrunErrorHandler 0072  
                                       fputs@fp 001E           __end_of_EUSART1_SetRxInterruptHandler 0E72  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 0E68  
                             __end_of_vfpfcnvrt 0468                        __end_of_i2c_display_init 0E2A  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                      ??_vfprintf 003E  
                          ??_EUSART1_Initialize 0013                                         strlen@a 0013  
                                       strlen@s 0011                        ?_i2c_set_start_condition 0001  
                                  _display_addr 004D                                   i2c_write@data 00D8  
                                     _TRISCbits 000F94                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0011                         ?_i2c_display_write_inst 0001  
                             _displayController 0802                              ?_displayController 0001  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 0EA6  
                       ?_i2c_set_stop_condition 0001            __end_of_TMR2_DefaultInterruptHandler 0EAC  
         __size_of_TMR2_DefaultInterruptHandler 0002                    _TMR2_DefaultInterruptHandler 0EAA  
                           ??_displayController 0009                                     vfpfcnvrt@ap 003C  
                                   vfpfcnvrt@fp 0038                                     vfpfcnvrt@ll 00BC  
                                 __pidataCOMRAM 0EA6                               __size_of_TMR2_ISR 0024  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 0D2E  
                                __end_of_strlen 0CDC                             start_initialization 09FC  
               __size_of_PIN_MANAGER_Initialize 002E                                     __end_of_abs 0C56  
                                   __end_of_pad 0802                                       _i2c_write 0E3C  
                __end_of_i2c_display_write_inst 0C84   EUSART1_SetRxInterruptHandler@interruptHandler 0011  
 EUSART1_SetTxInterruptHandler@interruptHandler 0011                                     putch@txData 0012  
                         __end_of_EUSART1_Write 0C24                       __end_of_displayController 0894  
                              _temperature_addr 004E                               __size_of_i2c_init 004C  
                             __size_of_i2c_wait 0020                                     vfprintf@fmt 00C6  
                __end_of_i2c_set_stop_condition 0DEA                 __end_of_i2c_set_start_condition 0E00  
                         _EUSART1_RxDataHandler 0D92                  ?_EUSART1_SetRxInterruptHandler 0011  
                                   __pdataBANK0 00DC                   ?_TMR2_DefaultInterruptHandler 0001  
                                      ??_printf 003E                                        ??_strlen 0013  
                                _eusart1RxCount 0046                          __size_of_TMR2_CallBack 0020  
                                   __pbssCOMRAM 003F               _EUSART1_RxDefaultInterruptHandler 0076  
                 __size_of_EUSART1_Transmit_ISR 002A                                   __pcstackBANK0 00A0  
                              ___aodiv@dividend 0011                        __size_of_TMR2_Initialize 001E  
                                    ?_i2c_write 0001                 ??_EUSART1_SetTxInterruptHandler 0013  
              ??_EUSART1_SetFramingErrorHandler 0013                 ?_EUSART1_SetFramingErrorHandler 0011  
                  __size_of_EUSART1_Receive_ISR 0098                                       _decimal_1 0044  
                                     _decimal_2 0043                          _PIN_MANAGER_Initialize 0C84  
                                     _dtoa$1254 00A8                                       __pintcode 0008  
                                 __pmediumconst FED4                                        ?___aodiv 0011  
                                      ?___aomod 0011                                        ?___awdiv 0001  
                              ___aodiv@quotient 0023                                        ?___awmod 0001  
                  ??_INTERRUPT_InterruptManager 0009                                __CFG_PRICLKEN$ON 000000  
                                     _display_1 00E0                                       _display_2 00DF  
                             __size_of_vfprintf 0058                                        _BAUDCON1 000FB8  
    __end_of_EUSART1_DefaultOverrunErrorHandler 0E96     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 0E90                            _EUSART1_ErrorHandler 0070  
                       _EUSART1_SetErrorHandler 0E86                                  __size_of_fputc 006C  
                                __size_of_fputs 0038                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 0EA2                      __size_of_displayController 0092  
       EUSART1_SetErrorHandler@interruptHandler 0011                                        _LATBbits 000F8A  
                                 _TMR2_CallBack 0D72                                        _PIE1bits 000F9D  
                                      i2u151_40 08DA             __size_of_INTERRUPT_InterruptManager 008A  
                                      i2u157_40 09C6                                        i2u165_48 0D80  
                                      i2u174_48 06FC                                        i2u182_48 0038  
                                      i2u174_49 0710                                        i2u168_40 0D42  
                                      i2u176_48 0728                                        i2u176_49 073C  
                                      _PIR1bits 000F9E                                        i2u185_48 0050  
                                      i2u178_48 0752                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                      _SSP1CON1 000FC6                                        _SSP1CON2 000FC5  
                             ?_i2c_display_init 0001                                        _TMR2_ISR 0D2E  
                                      _SSP1STAT 000FC7                                       _vfpfcnvrt 02DC  
                            ??_i2c_display_init 003F                  ??_TMR2_DefaultInterruptHandler 0001  
             __size_of_TMR2_SetInterruptHandler 000A                       ?_TMR2_SetInterruptHandler 0011  
                                   ??_i2c_write 003F                                     _INTCON2bits 000FF1  
                                     copy_data0 0A10                           ?_INTERRUPT_Initialize 0001  
              __size_of_i2c_set_start_condition 0016                                        _i2c_init 0B2C  
                                      _i2c_wait 0D52                               ??_TMR2_Initialize 0013  
                                ?_TMR2_CallBack 0001           __end_of_EUSART1_SetTxInterruptHandler 0E68  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 0E5E  
                                      __Hrparam 0000                                      vfprintf@ap 00C8  
                                      __Lrparam 0000                                      vfprintf@fp 00C4  
                            __CFG_BOREN$SBORDIS 000000                               __CFG_P2BMX$PORTB5 000000  
                       ??_OSCILLATOR_Initialize 0011                                __size_of___aodiv 0148  
                              __size_of___aomod 0124                                __size_of___awdiv 0084  
                              __size_of___awmod 0070                     __size_of_EUSART1_Initialize 0074  
                                    ?_vfpfcnvrt 0038                                 ___aodiv@divisor 0019  
                               ___aodiv@counter 0021                                      _ANSELCbits 000F3A  
                     ??_EUSART1_SetErrorHandler 0013             __end_of_EUSART1_DefaultErrorHandler 0E9C  
                   _EUSART1_DefaultErrorHandler 0E96                                        __ptext10 02DC  
                                      __ptext11 0096                                        __ptext20 0468  
                                      __ptext12 076C                                        __ptext21 0E00  
                                      __ptext13 0CB2                                        __ptext30 0E72  
                                      __ptext22 0DB2                                        __ptext14 0BB6  
                                      __ptext31 0E7C                                        __ptext23 0E54  
                                      __ptext15 0A68                                        __ptext40 0CDC  
                                      __ptext32 0E86                                        __ptext24 0C84  
                                      __ptext16 0E4A                                        __ptext41 06D4  
                                      __ptext25 0E2A                                        __ptext17 0BEE  
                                      __ptext42 0E90                                        __ptext34 0D2E  
                                      __ptext26 0EA2                                        __ptext18 0C24  
                                      __ptext43 0EAC                                        __ptext35 0D72  
                                      __ptext27 0918                                        __ptext19 05B0  
                                      __ptext44 0E96                                        __ptext36 0EAA  
                                      __ptext28 0E5E                                        __ptext45 0D92  
                                      __ptext37 0802                                        __ptext29 0E68  
                                      __ptext46 0000                                        __ptext38 098C  
                                      __ptext39 0894                                    _SSP1CON1bits 000FC6  
                                  _SSP1CON2bits 000FC5                                        _flipflop 006E  
                                 __size_of_main 003E                                   __size_of_dtoa 0246  
EUSART1_SetOverrunErrorHandler@interruptHandler 0011                                        int$flags 004F  
                                      _vfprintf 0AD4              __end_of_INTERRUPT_InterruptManager 0092  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00CC  
                   _EUSART1_FramingErrorHandler 0074                             _EUSART1_Receive_ISR 06D4  
                              ___aomod@dividend 0011                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 0011                                        intlevel2 0000  
                               ??_TMR2_CallBack 0009                            ?_EUSART1_Receive_ISR 0001  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 0E7C  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 0E72  
                                    _RCSTA1bits 000FAB                    __end_of_EUSART1_Transmit_ISR 0D06  
                                      printf@ap 00D6  EUSART1_SetFramingErrorHandler@interruptHandler 0011  
                ?_EUSART1_SetTxInterruptHandler 0011                                 ___aomod@divisor 0019  
                                   ??_vfpfcnvrt 00BA                                 ___aomod@counter 0021  
                        __size_of_EUSART1_Write 0036                              _eusart1RxLastError 0045  
                         TMR2_ISR@CountCallBack 007A                               __CFG_T3CMX$PORTC0 000000  
                       _i2c_set_start_condition 0DEA                                    ___aodiv@sign 0022  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 0CB2  
                             __CFG_FOSC$INTIO67 000000                           _TMR2_InterruptHandler 007C  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0022  
