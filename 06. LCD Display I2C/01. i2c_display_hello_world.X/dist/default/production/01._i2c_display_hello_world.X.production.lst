

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 19:47:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.32
    55                           ; Generated 02/02/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F26K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataBANK0
    91  001F2C                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for _second_line
    95  001F2C  00                 	db	0
    96  001F2D  C0                 	db	192
    97                           
    98                           ;initializer for _display_addr
    99  001F2E  3C                 	db	60
   100                           
   101                           ;initializer for _temp_string
   102  001F2F  40                 	db	64
   103  001F30  48                 	db	72
   104  001F31  65                 	db	101
   105  001F32  6C                 	db	108
   106  001F33  6C                 	db	108
   107  001F34  6F                 	db	111
   108  001F35  20                 	db	32
   109  001F36  57                 	db	87
   110  001F37  6F                 	db	111
   111  001F38  72                 	db	114
   112  001F39  6C                 	db	108
   113  001F3A  64                 	db	100
   114  001F3B  21                 	db	33
   115  001F3C  20                 	db	32
   116  001F3D  20                 	db	32
   117  001F3E  20                 	db	32
   118  001F3F  20                 	db	32
   119  001F40  00                 	db	0
   120                           
   121                           ;initializer for _display_init
   122  001F41  00                 	db	0
   123  001F42  38                 	db	56
   124  001F43  0C                 	db	12
   125  001F44  06                 	db	6
   126                           
   127                           ;initializer for _first_line
   128  001F45  00                 	db	0
   129  001F46  80                 	db	128
   130  0000                     _ANSELCbits	set	3898
   131  0000                     _ANSELA	set	3896
   132  0000                     _ANSELB	set	3897
   133  0000                     _ANSELC	set	3898
   134  0000                     _SSP2CON2bits	set	3947
   135  0000                     _SSP1BUF	set	4041
   136  0000                     _SSP1CON2bits	set	4037
   137  0000                     _SSP1STAT	set	4039
   138  0000                     _SSP1CON2	set	4037
   139  0000                     _SSP1CON1	set	4038
   140  0000                     _SSP1ADD	set	4040
   141  0000                     _TRISCbits	set	3988
   142  0000                     _PIR1bits	set	3998
   143  0000                     _RCONbits	set	4048
   144  0000                     _RCREG1	set	4014
   145  0000                     _RCSTA1bits	set	4011
   146  0000                     _TXREG1	set	4013
   147  0000                     _TXSTA1bits	set	4012
   148  0000                     _SPBRGH1	set	4016
   149  0000                     _SPBRG1	set	4015
   150  0000                     _TXSTA1	set	4012
   151  0000                     _RCSTA1	set	4011
   152  0000                     _BAUDCON1	set	4024
   153  0000                     _PIE1bits	set	3997
   154  0000                     _INTCONbits	set	4082
   155  0000                     _INTCON2bits	set	4081
   156  0000                     _WPUB	set	3937
   157  0000                     _TRISC	set	3988
   158  0000                     _TRISB	set	3987
   159  0000                     _TRISA	set	3986
   160  0000                     _LATC	set	3979
   161  0000                     _LATB	set	3978
   162  0000                     _LATA	set	3977
   163  0000                     _OSCTUNE	set	3995
   164  0000                     _OSCCON2	set	4050
   165  0000                     _OSCCON	set	4051
   166  0000                     _PLLRDY	set	32407
   167                           
   168                           	psect	smallconst
   169  001000                     __psmallconst:
   170                           	callstack 0
   171  001000  00                 	db	0
   172  001001                     STR_3:
   173                           
   174                           ; BSR set to: 0
   175  001001  46                 	db	70	;'F'
   176  001002  65                 	db	101	;'e'
   177  001003  6A                 	db	106	;'j'
   178  001004  6C                 	db	108	;'l'
   179  001005  20                 	db	32
   180  001006  69                 	db	105	;'i'
   181  001007  20                 	db	32
   182  001008  6C                 	db	108	;'l'
   183  001009  61                 	db	97	;'a'
   184  00100A  65                 	db	101	;'e'
   185  00100B  73                 	db	115	;'s'
   186  00100C  6E                 	db	110	;'n'
   187  00100D  69                 	db	105	;'i'
   188  00100E  6E                 	db	110	;'n'
   189  00100F  67                 	db	103	;'g'
   190  001010  20                 	db	32
   191  001011  61                 	db	97	;'a'
   192  001012  66                 	db	102	;'f'
   193  001013  20                 	db	32
   194  001014  64                 	db	100	;'d'
   195  001015  61                 	db	97	;'a'
   196  001016  74                 	db	116	;'t'
   197  001017  61                 	db	97	;'a'
   198  001018  0D                 	db	13
   199  001019  0A                 	db	10
   200  00101A  00                 	db	0
   201  00101B                     STR_2:
   202                           
   203                           ; BSR set to: 0
   204  00101B  53                 	db	83	;'S'
   205  00101C  6B                 	db	107	;'k'
   206  00101D  72                 	db	114	;'r'
   207  00101E  69                 	db	105	;'i'
   208  00101F  76                 	db	118	;'v'
   209  001020  65                 	db	101	;'e'
   210  001021  72                 	db	114	;'r'
   211  001022  20                 	db	32
   212  001023  64                 	db	100	;'d'
   213  001024  61                 	db	97	;'a'
   214  001025  74                 	db	116	;'t'
   215  001026  61                 	db	97	;'a'
   216  001027  3A                 	db	58	;':'
   217  001028  20                 	db	32
   218  001029  25                 	db	37
   219  00102A  23                 	db	35
   220  00102B  20                 	db	32
   221  00102C  2D                 	db	45
   222  00102D  20                 	db	32
   223  00102E  25                 	db	37
   224  00102F  63                 	db	99	;'c'
   225  001030  0A                 	db	10
   226  001031  0D                 	db	13
   227  001032  00                 	db	0
   228  001033                     STR_1:
   229                           
   230                           ; BSR set to: 0
   231  001033  53                 	db	83	;'S'
   232  001034  6B                 	db	107	;'k'
   233  001035  72                 	db	114	;'r'
   234  001036  69                 	db	105	;'i'
   235  001037  76                 	db	118	;'v'
   236  001038  65                 	db	101	;'e'
   237  001039  72                 	db	114	;'r'
   238  00103A  3A                 	db	58	;':'
   239  00103B  20                 	db	32
   240  00103C  61                 	db	97	;'a'
   241  00103D  64                 	db	100	;'d'
   242  00103E  72                 	db	114	;'r'
   243  00103F  65                 	db	101	;'e'
   244  001040  73                 	db	115	;'s'
   245  001041  73                 	db	115	;'s'
   246  001042  65                 	db	101	;'e'
   247  001043  3A                 	db	58	;':'
   248  001044  20                 	db	32
   249  001045  25                 	db	37
   250  001046  64                 	db	100	;'d'
   251  001047  0A                 	db	10
   252  001048  0D                 	db	13
   253  001049  00                 	db	0
   254  00104A  00                 	db	0	; dummy byte at the end
   255  0000                     
   256                           ; #config settings
   257                           
   258                           	psect	cinit
   259  001D4A                     __pcinit:
   260                           	callstack 0
   261  001D4A                     start_initialization:
   262                           	callstack 0
   263  001D4A                     __initialization:
   264                           	callstack 0
   265                           
   266                           ; Initialize objects allocated to BANK0 (27 bytes)
   267                           ; load TBLPTR registers with __pidataBANK0
   268  001D4A  0E2C               	movlw	low __pidataBANK0
   269  001D4C  6EF6               	movwf	tblptrl,c
   270  001D4E  0E1F               	movlw	high __pidataBANK0
   271  001D50  6EF7               	movwf	tblptrh,c
   272  001D52  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   273  001D54  6EF8               	movwf	tblptru,c
   274  001D56  EE00  F0B4         	lfsr	0,__pdataBANK0
   275  001D5A  EE10 F01B          	lfsr	1,27
   276  001D5E                     copy_data0:
   277  001D5E  0009               	tblrd		*+
   278  001D60  CFF5 FFEE          	movff	tablat,postinc0
   279  001D64  50E5               	movf	postdec1,w,c
   280  001D66  50E1               	movf	fsr1l,w,c
   281  001D68  E1FA               	bnz	copy_data0
   282                           
   283                           ; Clear objects allocated to BANK1 (192 bytes)
   284  001D6A  EE01  F000         	lfsr	0,__pbssBANK1
   285  001D6E  0EC0               	movlw	192
   286  001D70                     clear_0:
   287  001D70  6AEE               	clrf	postinc0,c
   288  001D72  06E8               	decf	wreg,f,c
   289  001D74  E1FD               	bnz	clear_0
   290                           
   291                           ; Clear objects allocated to BANK0 (56 bytes)
   292  001D76  EE00  F060         	lfsr	0,__pbssBANK0
   293  001D7A  0E38               	movlw	56
   294  001D7C                     clear_1:
   295  001D7C  6AEE               	clrf	postinc0,c
   296  001D7E  06E8               	decf	wreg,f,c
   297  001D80  E1FD               	bnz	clear_1
   298                           
   299                           ; Clear objects allocated to COMRAM (5 bytes)
   300  001D82  6A58               	clrf	(__pbssCOMRAM+4)& (0+255),c
   301  001D84  6A57               	clrf	(__pbssCOMRAM+3)& (0+255),c
   302  001D86  6A56               	clrf	(__pbssCOMRAM+2)& (0+255),c
   303  001D88  6A55               	clrf	(__pbssCOMRAM+1)& (0+255),c
   304  001D8A  6A54               	clrf	__pbssCOMRAM& (0+255),c
   305  001D8C                     end_of_initialization:
   306                           	callstack 0
   307  001D8C                     __end_of__initialization:
   308                           	callstack 0
   309  001D8C  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   310  001D8E  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   311  001D90  0100               	movlb	0
   312  001D92  EF7D  F00E         	goto	_main	;jump to C main() function
   313                           
   314                           	psect	bssCOMRAM
   315  000054                     __pbssCOMRAM:
   316                           	callstack 0
   317  000054                     _eusart1RxTail:
   318                           	callstack 0
   319  000054                     	ds	1
   320  000055                     _eusart1RxHead:
   321                           	callstack 0
   322  000055                     	ds	1
   323  000056                     _eusart1TxBufferRemaining:
   324                           	callstack 0
   325  000056                     	ds	1
   326  000057                     _eusart1TxTail:
   327                           	callstack 0
   328  000057                     	ds	1
   329  000058                     _eusart1TxHead:
   330                           	callstack 0
   331  000058                     	ds	1
   332                           
   333                           	psect	bssBANK0
   334  000060                     __pbssBANK0:
   335                           	callstack 0
   336  000060                     _data_out:
   337                           	callstack 0
   338  000060                     	ds	4
   339  000064                     _nout:
   340                           	callstack 0
   341  000064                     	ds	2
   342  000066                     _width:
   343                           	callstack 0
   344  000066                     	ds	2
   345  000068                     _prec:
   346                           	callstack 0
   347  000068                     	ds	2
   348  00006A                     _flags:
   349                           	callstack 0
   350  00006A                     	ds	2
   351  00006C                     _EUSART1_ErrorHandler:
   352                           	callstack 0
   353  00006C                     	ds	2
   354  00006E                     _EUSART1_OverrunErrorHandler:
   355                           	callstack 0
   356  00006E                     	ds	2
   357  000070                     _EUSART1_FramingErrorHandler:
   358                           	callstack 0
   359  000070                     	ds	2
   360  000072                     _EUSART1_RxDefaultInterruptHandler:
   361                           	callstack 0
   362  000072                     	ds	2
   363  000074                     _EUSART1_TxDefaultInterruptHandler:
   364                           	callstack 0
   365  000074                     	ds	2
   366  000076                     _eusart1RxLastError:
   367                           	callstack 0
   368  000076                     	ds	1
   369  000077                     _eusart1RxCount:
   370                           	callstack 0
   371  000077                     	ds	1
   372  000078                     _dbuf:
   373                           	callstack 0
   374  000078                     	ds	32
   375                           
   376                           	psect	dataBANK0
   377  0000B4                     __pdataBANK0:
   378                           	callstack 0
   379  0000B4                     _second_line:
   380                           	callstack 0
   381  0000B4                     	ds	2
   382  0000B6                     _display_addr:
   383                           	callstack 0
   384  0000B6                     	ds	1
   385  0000B7                     _temp_string:
   386                           	callstack 0
   387  0000B7                     	ds	18
   388  0000C9                     _display_init:
   389                           	callstack 0
   390  0000C9                     	ds	4
   391  0000CD                     _first_line:
   392                           	callstack 0
   393  0000CD                     	ds	2
   394                           
   395                           	psect	bssBANK1
   396  000100                     __pbssBANK1:
   397                           	callstack 0
   398  000100                     _eusart1RxStatusBuffer:
   399                           	callstack 0
   400  000100                     	ds	64
   401  000140                     _eusart1RxBuffer:
   402                           	callstack 0
   403  000140                     	ds	64
   404  000180                     _eusart1TxBuffer:
   405                           	callstack 0
   406  000180                     	ds	64
   407                           
   408                           	psect	cstackBANK0
   409  000098                     __pcstackBANK0:
   410                           	callstack 0
   411  000098                     vfpfcnvrt@ll:
   412                           	callstack 0
   413                           
   414                           ; 8 bytes @ 0x0
   415  000098                     	ds	8
   416  0000A0                     vfpfcnvrt@done:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x8
   420  0000A0                     	ds	2
   421  0000A2                     ?_vfprintf:
   422                           	callstack 0
   423  0000A2                     vfprintf@fp:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0xA
   427  0000A2                     	ds	2
   428  0000A4                     vfprintf@fmt:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0xC
   432  0000A4                     	ds	2
   433  0000A6                     vfprintf@ap:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0xE
   437  0000A6                     	ds	2
   438  0000A8                     ?_printf:
   439                           	callstack 0
   440  0000A8                     printf@fmt:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x10
   444  0000A8                     	ds	6
   445  0000AE                     i2c_write_serial@data:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x16
   449  0000AE                     	ds	2
   450  0000B0                     i2c_write_serial@length:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x18
   454  0000B0                     	ds	1
   455  0000B1                     i2c_write_serial@addr:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x19
   459  0000B1                     	ds	1
   460  0000B2                     i2c_write_serial@targetAddr:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x1A
   464  0000B2                     	ds	1
   465  0000B3                     i2c_write_serial@i:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x1B
   469  0000B3                     	ds	1
   470                           
   471                           	psect	cstackCOMRAM
   472  000001                     __pcstackCOMRAM:
   473                           	callstack 0
   474  000001                     ??_INTERRUPT_InterruptManager:
   475  000001                     
   476                           ; 1 bytes @ 0x0
   477  000001                     	ds	4
   478  000005                     ?_strlen:
   479                           	callstack 0
   480  000005                     ?___aodiv:
   481                           	callstack 0
   482  000005                     ?___aomod:
   483                           	callstack 0
   484  000005                     EUSART1_Write@txData:
   485                           	callstack 0
   486  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   487                           	callstack 0
   488  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   489                           	callstack 0
   490  000005                     EUSART1_SetErrorHandler@interruptHandler:
   491                           	callstack 0
   492  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
   493                           	callstack 0
   494  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   495                           	callstack 0
   496  000005                     strlen@s:
   497                           	callstack 0
   498  000005                     ___aodiv@dividend:
   499                           	callstack 0
   500  000005                     ___aomod@dividend:
   501                           	callstack 0
   502                           
   503                           ; 8 bytes @ 0x4
   504  000005                     	ds	1
   505  000006                     putch@txData:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x5
   509  000006                     	ds	1
   510  000007                     fputc@c:
   511                           	callstack 0
   512  000007                     strlen@a:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x6
   516  000007                     	ds	2
   517  000009                     fputc@fp:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x8
   521  000009                     	ds	2
   522  00000B                     ??_fputc:
   523                           
   524                           ; 1 bytes @ 0xA
   525  00000B                     	ds	2
   526  00000D                     ___aodiv@divisor:
   527                           	callstack 0
   528  00000D                     ___aomod@divisor:
   529                           	callstack 0
   530                           
   531                           ; 8 bytes @ 0xC
   532  00000D                     	ds	3
   533  000010                     fputs@s:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0xF
   537  000010                     	ds	2
   538  000012                     fputs@fp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x11
   542  000012                     	ds	2
   543  000014                     fputs@c:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x13
   547  000014                     	ds	1
   548  000015                     ___aodiv@counter:
   549                           	callstack 0
   550  000015                     ___aomod@counter:
   551                           	callstack 0
   552  000015                     fputs@i:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x14
   556  000015                     	ds	1
   557  000016                     ___aodiv@sign:
   558                           	callstack 0
   559  000016                     ___aomod@sign:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x15
   563  000016                     	ds	1
   564  000017                     ?_abs:
   565                           	callstack 0
   566  000017                     ?_pad:
   567                           	callstack 0
   568  000017                     pad@fp:
   569                           	callstack 0
   570  000017                     abs@a:
   571                           	callstack 0
   572  000017                     ___aodiv@quotient:
   573                           	callstack 0
   574                           
   575                           ; 8 bytes @ 0x16
   576  000017                     	ds	2
   577  000019                     ??_abs:
   578  000019                     pad@buf:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x18
   582  000019                     	ds	2
   583  00001B                     pad@p:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x1A
   587  00001B                     	ds	2
   588  00001D                     ??_pad:
   589                           
   590                           ; 1 bytes @ 0x1C
   591  00001D                     	ds	1
   592  00001E                     pad@i:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x1D
   596  00001E                     	ds	2
   597  000020                     pad@w:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x1F
   601  000020                     	ds	2
   602  000022                     ?_dtoa:
   603                           	callstack 0
   604  000022                     dtoa@fp:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x21
   608  000022                     	ds	2
   609  000024                     dtoa@d:
   610                           	callstack 0
   611                           
   612                           ; 8 bytes @ 0x23
   613  000024                     	ds	8
   614  00002C                     ??_dtoa:
   615                           
   616                           ; 1 bytes @ 0x2B
   617  00002C                     	ds	8
   618  000034                     _dtoa$1451:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x33
   622  000034                     	ds	2
   623  000036                     dtoa@p:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x35
   627  000036                     	ds	2
   628  000038                     dtoa@w:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x37
   632  000038                     	ds	2
   633  00003A                     dtoa@s:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x39
   637  00003A                     	ds	2
   638  00003C                     dtoa@n:
   639                           	callstack 0
   640                           
   641                           ; 8 bytes @ 0x3B
   642  00003C                     	ds	8
   643  000044                     dtoa@i:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x43
   647  000044                     	ds	2
   648  000046                     ?_vfpfcnvrt:
   649                           	callstack 0
   650  000046                     vfpfcnvrt@fp:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x45
   654  000046                     	ds	2
   655  000048                     vfpfcnvrt@fmt:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x47
   659  000048                     	ds	2
   660  00004A                     vfpfcnvrt@ap:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x49
   664  00004A                     	ds	2
   665  00004C                     ??_vfpfcnvrt:
   666                           
   667                           ; 1 bytes @ 0x4B
   668  00004C                     	ds	2
   669  00004E                     vfprintf@cfmt:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x4D
   673  00004E                     	ds	2
   674  000050                     printf@ap:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x4F
   678  000050                     	ds	2
   679  000052                     ??_i2c_write_serial:
   680                           
   681                           ; 1 bytes @ 0x51
   682  000052                     	ds	2
   683  000054                     
   684                           ; 1 bytes @ 0x53
   685 ;;
   686 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   687 ;;
   688 ;; *************** function _main *****************
   689 ;; Defined at:
   690 ;;		line 27 in file "main.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels required when called: 14
   710 ;; This function calls:
   711 ;;		_SYSTEM_Initialize
   712 ;;		_i2c_init
   713 ;;		_i2c_write_serial
   714 ;; This function is called by:
   715 ;;		Startup code after reset
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text0
   720  001CFA                     __ptext0:
   721                           	callstack 0
   722  001CFA                     _main:
   723                           	callstack 17
   724  001CFA                     
   725                           ;main.c: 30:     SYSTEM_Initialize();
   726  001CFA  ECB0  F00F         	call	_SYSTEM_Initialize	;wreg free
   727  001CFE                     
   728                           ;main.c: 31:     INTCONbits.GIE = 1;
   729  001CFE  8EF2               	bsf	242,7,c	;volatile
   730  001D00                     
   731                           ;main.c: 32:     INTCONbits.PEIE = 1;
   732  001D00  8CF2               	bsf	242,6,c	;volatile
   733  001D02                     
   734                           ;main.c: 34:     i2c_init();
   735  001D02  ECA4  F00F         	call	_i2c_init	;wreg free
   736  001D06                     
   737                           ;main.c: 35:     i2c_write_serial(display_addr, display_init, 4);
   738  001D06  0EC9               	movlw	low _display_init
   739  001D08  0100               	movlb	0	; () banked
   740  001D0A  6FAE               	movwf	i2c_write_serial@data& (0+255),b
   741  001D0C  0E00               	movlw	high _display_init
   742  001D0E  6FAF               	movwf	(i2c_write_serial@data+1)& (0+255),b
   743  001D10  0E04               	movlw	4
   744  001D12  6FB0               	movwf	i2c_write_serial@length& (0+255),b
   745  001D14  0E3C               	movlw	60
   746  001D16  EC4A  F00C         	call	_i2c_write_serial
   747  001D1A                     
   748                           ;main.c: 36:     i2c_write_serial(display_addr, first_line, 2);
   749  001D1A  0ECD               	movlw	low _first_line
   750  001D1C  0100               	movlb	0	; () banked
   751  001D1E  6FAE               	movwf	i2c_write_serial@data& (0+255),b
   752  001D20  0E00               	movlw	high _first_line
   753  001D22  6FAF               	movwf	(i2c_write_serial@data+1)& (0+255),b
   754  001D24  0E02               	movlw	2
   755  001D26  6FB0               	movwf	i2c_write_serial@length& (0+255),b
   756  001D28  0E3C               	movlw	60
   757  001D2A  EC4A  F00C         	call	_i2c_write_serial
   758  001D2E                     
   759                           ;main.c: 37:     i2c_write_serial(display_addr, temp_string, 17);
   760  001D2E  0EB7               	movlw	low _temp_string
   761  001D30  0100               	movlb	0	; () banked
   762  001D32  6FAE               	movwf	i2c_write_serial@data& (0+255),b
   763  001D34  0E00               	movlw	high _temp_string
   764  001D36  6FAF               	movwf	(i2c_write_serial@data+1)& (0+255),b
   765  001D38  0E11               	movlw	17
   766  001D3A  6FB0               	movwf	i2c_write_serial@length& (0+255),b
   767  001D3C  0E3C               	movlw	60
   768  001D3E  EC4A  F00C         	call	_i2c_write_serial
   769  001D42                     l278:
   770  001D42  EFA1  F00E         	goto	l278
   771  001D46  EF58  F000         	goto	start
   772  001D4A                     __end_of_main:
   773                           	callstack 0
   774                           
   775 ;; *************** function _i2c_write_serial *****************
   776 ;; Defined at:
   777 ;;		line 58 in file "main.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  addr            1    wreg     unsigned char 
   780 ;;  data            2   22[BANK0 ] PTR unsigned char 
   781 ;;		 -> temp_string(18), first_line(2), display_init(4), 
   782 ;;  length          1   24[BANK0 ] unsigned char 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  addr            1   25[BANK0 ] unsigned char 
   785 ;;  i               1   27[BANK0 ] unsigned char 
   786 ;;  targetAddr      1   26[BANK0 ] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   796 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;Total ram usage:        8 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 13
   803 ;; This function calls:
   804 ;;		_printf
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text1
   811  001894                     __ptext1:
   812                           	callstack 0
   813  001894                     _i2c_write_serial:
   814                           	callstack 17
   815                           
   816                           ;incstack = 0
   817                           ;i2c_write_serial@addr stored from wreg
   818  001894  0100               	movlb	0	; () banked
   819  001896  6FB1               	movwf	i2c_write_serial@addr& (0+255),b
   820  001898                     
   821                           ;main.c: 59:     uint8_t targetAddr = addr<<1;
   822  001898  0100               	movlb	0	; () banked
   823  00189A  51B1               	movf	i2c_write_serial@addr& (0+255),w,b
   824  00189C  25B1               	addwf	i2c_write_serial@addr& (0+255),w,b
   825  00189E  6FB2               	movwf	i2c_write_serial@targetAddr& (0+255),b
   826  0018A0                     l287:
   827  0018A0  B4C7               	btfsc	199,2,c	;volatile
   828  0018A2  EF55  F00C         	goto	u2121
   829  0018A6  EF57  F00C         	goto	u2120
   830  0018AA                     u2121:
   831  0018AA  EF50  F00C         	goto	l287
   832  0018AE                     u2120:
   833  0018AE  CFC5 F052          	movff	4037,??_i2c_write_serial	;volatile
   834  0018B2  0E1F               	movlw	31
   835  0018B4  1652               	andwf	??_i2c_write_serial^0,f,c
   836  0018B6  A4D8               	btfss	status,2,c
   837  0018B8  EF60  F00C         	goto	u2131
   838  0018BC  EF62  F00C         	goto	u2130
   839  0018C0                     u2131:
   840  0018C0  EF50  F00C         	goto	l287
   841  0018C4                     u2130:
   842  0018C4                     
   843                           ;main.c: 65:     SSP1CON2bits.SEN = 1;
   844  0018C4  80C5               	bsf	197,0,c	;volatile
   845  0018C6                     l290:
   846  0018C6  B0C5               	btfsc	197,0,c	;volatile
   847  0018C8  EF68  F00C         	goto	u2141
   848  0018CC  EF6A  F00C         	goto	u2140
   849  0018D0                     u2141:
   850  0018D0  EF63  F00C         	goto	l290
   851  0018D4                     u2140:
   852  0018D4                     
   853                           ;main.c: 69:     SSP1BUF = targetAddr;
   854  0018D4  C0B2  FFC9         	movff	i2c_write_serial@targetAddr,4041	;volatile
   855  0018D8                     l293:
   856  0018D8  BC6B               	btfsc	107,6,c	;volatile
   857  0018DA  EF71  F00C         	goto	u2151
   858  0018DE  EF73  F00C         	goto	u2150
   859  0018E2                     u2151:
   860  0018E2  EF6C  F00C         	goto	l293
   861  0018E6                     u2150:
   862  0018E6                     
   863                           ;main.c: 72:     printf("Skriver: adresse: %d\n\r", targetAddr);
   864  0018E6  0E33               	movlw	low STR_1
   865  0018E8  0100               	movlb	0	; () banked
   866  0018EA  6FA8               	movwf	printf@fmt& (0+255),b
   867  0018EC  0E10               	movlw	high STR_1
   868  0018EE  6FA9               	movwf	(printf@fmt+1)& (0+255),b
   869  0018F0  C0B2  F0AA         	movff	i2c_write_serial@targetAddr,?_printf+2
   870  0018F4  6BAB               	clrf	(?_printf+3)& (0+255),b
   871  0018F6  EC74  F00F         	call	_printf	;wreg free
   872  0018FA                     
   873                           ;main.c: 74:     if(SSP2CON2bits.ACKSTAT == 0) {
   874  0018FA  BC6B               	btfsc	107,6,c	;volatile
   875  0018FC  EF82  F00C         	goto	u2161
   876  001900  EF84  F00C         	goto	u2160
   877  001904                     u2161:
   878  001904  EFCE  F00C         	goto	l296
   879  001908                     u2160:
   880  001908                     
   881                           ;main.c: 75:         for (uint8_t i=0; i < length ; i++) {
   882  001908  0E00               	movlw	0
   883  00190A  0100               	movlb	0	; () banked
   884  00190C  6FB3               	movwf	i2c_write_serial@i& (0+255),b
   885  00190E  EFC5  F00C         	goto	l2522
   886  001912                     l298:
   887                           
   888                           ; BSR set to: 0
   889                           ;main.c: 76:             if( SSP1CON2bits.ACKSTAT == 0 ) {
   890  001912  BCC5               	btfsc	197,6,c	;volatile
   891  001914  EF8E  F00C         	goto	u2171
   892  001918  EF90  F00C         	goto	u2170
   893  00191C                     u2171:
   894  00191C  EFBD  F00C         	goto	l2518
   895  001920                     u2170:
   896  001920                     
   897                           ; BSR set to: 0
   898                           ;main.c: 77:                 SSP1BUF = (uint8_t) data[i];
   899  001920  51B3               	movf	i2c_write_serial@i& (0+255),w,b
   900  001922  25AE               	addwf	i2c_write_serial@data& (0+255),w,b
   901  001924  6ED9               	movwf	fsr2l,c
   902  001926  0E00               	movlw	0
   903  001928  21AF               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
   904  00192A  6EDA               	movwf	fsr2h,c
   905  00192C  50DF               	movf	indf2,w,c
   906  00192E  6EC9               	movwf	201,c	;volatile
   907  001930                     
   908                           ; BSR set to: 0
   909                           ;main.c: 78:                 printf("Skriver data: %# - %c\n\r", data[i], data[i]);
   910  001930  0E1B               	movlw	low STR_2
   911  001932  6FA8               	movwf	printf@fmt& (0+255),b
   912  001934  0E10               	movlw	high STR_2
   913  001936  6FA9               	movwf	(printf@fmt+1)& (0+255),b
   914  001938  51B3               	movf	i2c_write_serial@i& (0+255),w,b
   915  00193A  25AE               	addwf	i2c_write_serial@data& (0+255),w,b
   916  00193C  6ED9               	movwf	fsr2l,c
   917  00193E  0E00               	movlw	0
   918  001940  21AF               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
   919  001942  6EDA               	movwf	fsr2h,c
   920  001944  50DF               	movf	indf2,w,c
   921  001946  6E52               	movwf	??_i2c_write_serial^0,c
   922  001948  5052               	movf	??_i2c_write_serial^0,w,c
   923  00194A  6FAA               	movwf	(?_printf+2)& (0+255),b
   924  00194C  6BAB               	clrf	(?_printf+3)& (0+255),b
   925  00194E  51B3               	movf	i2c_write_serial@i& (0+255),w,b
   926  001950  25AE               	addwf	i2c_write_serial@data& (0+255),w,b
   927  001952  6ED9               	movwf	fsr2l,c
   928  001954  0E00               	movlw	0
   929  001956  21AF               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
   930  001958  6EDA               	movwf	fsr2h,c
   931  00195A  50DF               	movf	indf2,w,c
   932  00195C  6E53               	movwf	(??_i2c_write_serial+1)^0,c
   933  00195E  5053               	movf	(??_i2c_write_serial+1)^0,w,c
   934  001960  6FAC               	movwf	(?_printf+4)& (0+255),b
   935  001962  6BAD               	clrf	(?_printf+5)& (0+255),b
   936  001964  EC74  F00F         	call	_printf	;wreg free
   937  001968                     
   938                           ;main.c: 79:                 _delay((unsigned long)((10)*(64000000/4000.0)));
   939  001968  0ED0               	movlw	208
   940  00196A  6E52               	movwf	??_i2c_write_serial^0,c
   941  00196C  0ECA               	movlw	202
   942  00196E                     u2207:
   943  00196E  2EE8               	decfsz	wreg,f,c
   944  001970  D7FE               	bra	u2207
   945  001972  2E52               	decfsz	??_i2c_write_serial^0,f,c
   946  001974  D7FC               	bra	u2207
   947                           
   948                           ;main.c: 80:             } else {
   949  001976  EFC3  F00C         	goto	l2520
   950  00197A                     l2518:
   951                           
   952                           ; BSR set to: 0
   953                           ;main.c: 81:                 printf("Fejl i laesning af data\r\n");
   954  00197A  0E01               	movlw	low STR_3
   955  00197C  6FA8               	movwf	printf@fmt& (0+255),b
   956  00197E  0E10               	movlw	high STR_3
   957  001980  6FA9               	movwf	(printf@fmt+1)& (0+255),b
   958  001982  EC74  F00F         	call	_printf	;wreg free
   959  001986                     l2520:
   960                           
   961                           ;main.c: 83:         }
   962  001986  0100               	movlb	0	; () banked
   963  001988  2BB3               	incf	i2c_write_serial@i& (0+255),f,b
   964  00198A                     l2522:
   965                           
   966                           ; BSR set to: 0
   967  00198A  51B0               	movf	i2c_write_serial@length& (0+255),w,b
   968  00198C  5DB3               	subwf	i2c_write_serial@i& (0+255),w,b
   969  00198E  A0D8               	btfss	status,0,c
   970  001990  EFCC  F00C         	goto	u2181
   971  001994  EFCE  F00C         	goto	u2180
   972  001998                     u2181:
   973  001998  EF89  F00C         	goto	l298
   974  00199C                     u2180:
   975  00199C                     l296:
   976                           
   977                           ;main.c: 87:     SSP1CON2bits.PEN = 1;
   978  00199C  84C5               	bsf	197,2,c	;volatile
   979  00199E                     l302:
   980  00199E  B4C5               	btfsc	197,2,c	;volatile
   981  0019A0  EFD4  F00C         	goto	u2191
   982  0019A4  EFD6  F00C         	goto	u2190
   983  0019A8                     u2191:
   984  0019A8  EFCF  F00C         	goto	l302
   985  0019AC                     u2190:
   986  0019AC  0012               	return		;funcret
   987  0019AE                     __end_of_i2c_write_serial:
   988                           	callstack 0
   989                           
   990 ;; *************** function _printf *****************
   991 ;; Defined at:
   992 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
   995 ;;		 -> STR_3(26), STR_2(24), STR_1(23), 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  ap              2   79[COMRAM] PTR void [1]
   998 ;;		 -> ?_printf(2), 
   999 ;;  ret             2    0        int 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  2   16[BANK0 ] int 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1009 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;Total ram usage:        8 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 12
  1016 ;; This function calls:
  1017 ;;		_vfprintf
  1018 ;; This function is called by:
  1019 ;;		_i2c_write_serial
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text2
  1024  001EE8                     __ptext2:
  1025                           	callstack 0
  1026  001EE8                     _printf:
  1027                           	callstack 17
  1028  001EE8  0EAA               	movlw	low (?_printf+2)
  1029  001EEA  6E50               	movwf	printf@ap^0,c
  1030  001EEC  0E00               	movlw	high (?_printf+2)
  1031  001EEE  6E51               	movwf	(printf@ap+1)^0,c
  1032  001EF0  0E00               	movlw	0
  1033  001EF2  0100               	movlb	0	; () banked
  1034  001EF4  6FA2               	movwf	vfprintf@fp& (0+255),b
  1035  001EF6  0E00               	movlw	0
  1036  001EF8  6FA3               	movwf	(vfprintf@fp+1)& (0+255),b
  1037  001EFA  C0A8  F0A4         	movff	printf@fmt,vfprintf@fmt
  1038  001EFE  C0A9  F0A5         	movff	printf@fmt+1,vfprintf@fmt+1
  1039  001F02  0E50               	movlw	low printf@ap
  1040  001F04  6FA6               	movwf	vfprintf@ap& (0+255),b
  1041  001F06  0E00               	movlw	high printf@ap
  1042  001F08  6FA7               	movwf	(vfprintf@ap+1)& (0+255),b
  1043  001F0A  EC20  F00E         	call	_vfprintf	;wreg free
  1044  001F0E  0012               	return		;funcret
  1045  001F10                     __end_of_printf:
  1046                           	callstack 0
  1047                           
  1048 ;; *************** function _vfprintf *****************
  1049 ;; Defined at:
  1050 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  1053 ;;		 -> NULL(0), 
  1054 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
  1055 ;;		 -> STR_3(26), STR_2(24), STR_1(23), 
  1056 ;;  ap              2   14[BANK0 ] PTR PTR void 
  1057 ;;		 -> printf@ap(2), 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1060 ;;		 -> STR_3(26), STR_2(24), STR_1(23), 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2   10[BANK0 ] int 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        8 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 11
  1077 ;; This function calls:
  1078 ;;		_vfpfcnvrt
  1079 ;; This function is called by:
  1080 ;;		_printf
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text3
  1085  001C40                     __ptext3:
  1086                           	callstack 0
  1087  001C40                     _vfprintf:
  1088                           	callstack 17
  1089  001C40                     
  1090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1091  001C40  C0A4  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1092  001C44  C0A5  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1093  001C48                     
  1094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1095  001C48  0E00               	movlw	0
  1096  001C4A  0100               	movlb	0	; () banked
  1097  001C4C  6F65               	movwf	(_nout+1)& (0+255),b
  1098  001C4E  0E00               	movlw	0
  1099  001C50  6F64               	movwf	_nout& (0+255),b
  1100                           
  1101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1102  001C52  EF3E  F00E         	goto	l2494
  1103  001C56                     l2492:
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1107  001C56  C0A2  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  1108  001C5A  C0A3  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1109  001C5E  0E4E               	movlw	low vfprintf@cfmt
  1110  001C60  6E48               	movwf	vfpfcnvrt@fmt^0,c
  1111  001C62  0E00               	movlw	high vfprintf@cfmt
  1112  001C64  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1113  001C66  C0A6  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  1114  001C6A  C0A7  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1115  001C6E  EC97  F009         	call	_vfpfcnvrt	;wreg free
  1116  001C72  5046               	movf	?_vfpfcnvrt^0,w,c
  1117  001C74  0100               	movlb	0	; () banked
  1118  001C76  2764               	addwf	_nout& (0+255),f,b
  1119  001C78  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  1120  001C7A  2365               	addwfc	(_nout+1)& (0+255),f,b
  1121  001C7C                     l2494:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1125  001C7C  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1126  001C80  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1127  001C84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1128  001C84  6AF8               	clrf	tblptru,c
  1129  001C86                     	endif
  1130  001C86                     	if	0	;tblptru may be non-zero
  1131  001C86                     	endif
  1132  001C86  0008               	tblrd		*
  1133  001C88  50F5               	movf	tablat,w,c
  1134  001C8A  0900               	iorlw	0
  1135  001C8C  A4D8               	btfss	status,2,c
  1136  001C8E  EF4B  F00E         	goto	u2111
  1137  001C92  EF4D  F00E         	goto	u2110
  1138  001C96                     u2111:
  1139  001C96  EF2B  F00E         	goto	l2492
  1140  001C9A                     u2110:
  1141  001C9A                     
  1142                           ; BSR set to: 0
  1143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1144  001C9A  C064  F0A2         	movff	_nout,?_vfprintf
  1145  001C9E  C065  F0A3         	movff	_nout+1,?_vfprintf+1
  1146  001CA2                     
  1147                           ; BSR set to: 0
  1148  001CA2  0012               	return		;funcret
  1149  001CA4                     __end_of_vfprintf:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _vfpfcnvrt *****************
  1153 ;; Defined at:
  1154 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  1157 ;;		 -> NULL(0), 
  1158 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  1159 ;;		 -> vfprintf@cfmt(2), 
  1160 ;;  ap              2   73[COMRAM] PTR PTR void 
  1161 ;;		 -> printf@ap(2), 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  ll              8    0[BANK0 ] long long 
  1164 ;;  llu             8    0        unsigned long long 
  1165 ;;  f               4    0        unsigned long long 
  1166 ;;  vp              3    0        PTR void 
  1167 ;;  ct              3    0        unsigned char [3]
  1168 ;;  cp              3    0        PTR unsigned char 
  1169 ;;  done            2    8[BANK0 ] int 
  1170 ;;  i               2    0        int 
  1171 ;;  c               1    0        unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  2   69[COMRAM] int 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1181 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;Total ram usage:       18 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 10
  1188 ;; This function calls:
  1189 ;;		_dtoa
  1190 ;;		_fputc
  1191 ;; This function is called by:
  1192 ;;		_vfprintf
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text4
  1197  00132E                     __ptext4:
  1198                           	callstack 0
  1199  00132E                     _vfpfcnvrt:
  1200                           	callstack 17
  1201  00132E                     
  1202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1203  00132E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1204  001332  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1205  001336  CFDE FFF6          	movff	postinc2,tblptrl
  1206  00133A  CFDD FFF7          	movff	postdec2,tblptrh
  1207  00133E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1208  00133E  6AF8               	clrf	tblptru,c
  1209  001340                     	endif
  1210  001340                     	if	0	;tblptru may be non-zero
  1211  001340                     	endif
  1212  001340  0008               	tblrd		*
  1213  001342  50F5               	movf	tablat,w,c
  1214  001344  0A25               	xorlw	37
  1215  001346  A4D8               	btfss	status,2,c
  1216  001348  EFA8  F009         	goto	u2051
  1217  00134C  EFAA  F009         	goto	u2050
  1218  001350                     u2051:
  1219  001350  EFB7  F00A         	goto	l2474
  1220  001354                     u2050:
  1221  001354                     
  1222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1223  001354  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1224  001358  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1225  00135C  2ADE               	incf	postinc2,f,c
  1226  00135E  0E00               	movlw	0
  1227  001360  22DD               	addwfc	postdec2,f,c
  1228  001362                     
  1229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1230  001362  0E00               	movlw	0
  1231  001364  0100               	movlb	0	; () banked
  1232  001366  6F67               	movwf	(_width+1)& (0+255),b
  1233  001368  0E00               	movlw	0
  1234  00136A  6F66               	movwf	_width& (0+255),b
  1235  00136C  C066  F06A         	movff	_width,_flags
  1236  001370  C067  F06B         	movff	_width+1,_flags+1
  1237  001374                     
  1238                           ; BSR set to: 0
  1239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1240  001374  6968               	setf	_prec& (0+255),b
  1241  001376  6969               	setf	(_prec+1)& (0+255),b
  1242  001378                     
  1243                           ; BSR set to: 0
  1244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1245  001378  0E00               	movlw	0
  1246  00137A  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1247  00137C  0E00               	movlw	0
  1248  00137E  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1251  001380  EF09  F00A         	goto	l2444
  1252  001384                     l2418:
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1256  001384  816A               	bsf	_flags& (0+255),0,b
  1257  001386                     l2420:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1261  001386  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1262  00138A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1263  00138E  2ADE               	incf	postinc2,f,c
  1264  001390  0E00               	movlw	0
  1265  001392  22DD               	addwfc	postdec2,f,c
  1266                           
  1267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1268  001394  EF09  F00A         	goto	l2444
  1269  001398                     l2422:
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1273  001398  836A               	bsf	_flags& (0+255),1,b
  1274  00139A  EFC3  F009         	goto	l2420
  1275  00139E                     l2426:
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1279  00139E  856A               	bsf	_flags& (0+255),2,b
  1280  0013A0  EFC3  F009         	goto	l2420
  1281  0013A4                     l2430:
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1285  0013A4  876A               	bsf	_flags& (0+255),3,b
  1286  0013A6  EFC3  F009         	goto	l2420
  1287  0013AA                     l2434:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1291  0013AA  896A               	bsf	_flags& (0+255),4,b
  1292  0013AC  EFC3  F009         	goto	l2420
  1293  0013B0                     l2438:
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1297  0013B0  0E00               	movlw	0
  1298  0013B2  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1299  0013B4  0E01               	movlw	1
  1300  0013B6  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  1301                           
  1302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1303  0013B8  EF09  F00A         	goto	l2444
  1304  0013BC                     l2442:
  1305                           
  1306                           ; BSR set to: 0
  1307  0013BC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1308  0013C0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1309  0013C4  CFDE FFF6          	movff	postinc2,tblptrl
  1310  0013C8  CFDD FFF7          	movff	postdec2,tblptrh
  1311  0013CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1312  0013CC  6AF8               	clrf	tblptru,c
  1313  0013CE                     	endif
  1314  0013CE                     	if	0	;tblptru may be non-zero
  1315  0013CE                     	endif
  1316  0013CE  0008               	tblrd		*
  1317  0013D0  50F5               	movf	tablat,w,c
  1318  0013D2  6E4C               	movwf	??_vfpfcnvrt^0,c
  1319  0013D4  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
  1320                           
  1321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1322                           ; Switch size 1, requested type "simple"
  1323                           ; Number of cases is 1, Range of values is 0 to 0
  1324                           ; switch strategies available:
  1325                           ; Name         Instructions Cycles
  1326                           ; simple_byte            4     3 (average)
  1327                           ;	Chosen strategy is simple_byte
  1328  0013D6  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  1329  0013D8  0A00               	xorlw	0	; case 0
  1330  0013DA  B4D8               	btfsc	status,2,c
  1331  0013DC  EFF2  F009         	goto	l2568
  1332  0013E0  EFD8  F009         	goto	l2438
  1333  0013E4                     l2568:
  1334                           
  1335                           ; BSR set to: 0
  1336                           ; Switch size 1, requested type "simple"
  1337                           ; Number of cases is 5, Range of values is 32 to 48
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; simple_byte           16     9 (average)
  1341                           ;	Chosen strategy is simple_byte
  1342  0013E4  504C               	movf	??_vfpfcnvrt^0,w,c
  1343  0013E6  0A20               	xorlw	32	; case 32
  1344  0013E8  B4D8               	btfsc	status,2,c
  1345  0013EA  EFD2  F009         	goto	l2430
  1346  0013EE  0A03               	xorlw	3	; case 35
  1347  0013F0  B4D8               	btfsc	status,2,c
  1348  0013F2  EFD5  F009         	goto	l2434
  1349  0013F6  0A08               	xorlw	8	; case 43
  1350  0013F8  B4D8               	btfsc	status,2,c
  1351  0013FA  EFCF  F009         	goto	l2426
  1352  0013FE  0A06               	xorlw	6	; case 45
  1353  001400  B4D8               	btfsc	status,2,c
  1354  001402  EFC2  F009         	goto	l2418
  1355  001406  0A1D               	xorlw	29	; case 48
  1356  001408  B4D8               	btfsc	status,2,c
  1357  00140A  EFCC  F009         	goto	l2422
  1358  00140E  EFD8  F009         	goto	l2438
  1359  001412                     l2444:
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1363  001412  51A0               	movf	vfpfcnvrt@done& (0+255),w,b
  1364  001414  11A1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1365  001416  B4D8               	btfsc	status,2,c
  1366  001418  EF10  F00A         	goto	u2061
  1367  00141C  EF12  F00A         	goto	u2060
  1368  001420                     u2061:
  1369  001420  EFDE  F009         	goto	l2442
  1370  001424                     u2060:
  1371  001424                     
  1372                           ; BSR set to: 0
  1373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1374  001424  A16A               	btfss	_flags& (0+255),0,b
  1375  001426  EF17  F00A         	goto	u2071
  1376  00142A  EF19  F00A         	goto	u2070
  1377  00142E                     u2071:
  1378  00142E  EF1A  F00A         	goto	l2448
  1379  001432                     u2070:
  1380  001432                     
  1381                           ; BSR set to: 0
  1382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1383  001432  936A               	bcf	_flags& (0+255),1,b
  1384  001434                     l2448:
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1388  001434  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1389  001438  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1390  00143C  CFDE FFF6          	movff	postinc2,tblptrl
  1391  001440  CFDD FFF7          	movff	postdec2,tblptrh
  1392  001444                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1393  001444  6AF8               	clrf	tblptru,c
  1394  001446                     	endif
  1395  001446                     	if	0	;tblptru may be non-zero
  1396  001446                     	endif
  1397  001446  0008               	tblrd		*
  1398  001448  50F5               	movf	tablat,w,c
  1399  00144A  0A64               	xorlw	100
  1400  00144C  B4D8               	btfsc	status,2,c
  1401  00144E  EF2B  F00A         	goto	u2081
  1402  001452  EF2D  F00A         	goto	u2080
  1403  001456                     u2081:
  1404  001456  EF40  F00A         	goto	l2452
  1405  00145A                     u2080:
  1406  00145A                     
  1407                           ; BSR set to: 0
  1408  00145A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1409  00145E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1410  001462  CFDE FFF6          	movff	postinc2,tblptrl
  1411  001466  CFDD FFF7          	movff	postdec2,tblptrh
  1412  00146A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1413  00146A  6AF8               	clrf	tblptru,c
  1414  00146C                     	endif
  1415  00146C                     	if	0	;tblptru may be non-zero
  1416  00146C                     	endif
  1417  00146C  0008               	tblrd		*
  1418  00146E  50F5               	movf	tablat,w,c
  1419  001470  0A69               	xorlw	105
  1420  001472  A4D8               	btfss	status,2,c
  1421  001474  EF3E  F00A         	goto	u2091
  1422  001478  EF40  F00A         	goto	u2090
  1423  00147C                     u2091:
  1424  00147C  EF80  F00A         	goto	l2458
  1425  001480                     u2090:
  1426  001480                     l2452:
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1430  001480  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1431  001484  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1432  001488  2ADE               	incf	postinc2,f,c
  1433  00148A  0E00               	movlw	0
  1434  00148C  22DD               	addwfc	postdec2,f,c
  1435                           
  1436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1437  00148E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1438  001492  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1439  001496  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1440  00149A  0E02               	movlw	2
  1441  00149C  26DE               	addwf	postinc2,f,c
  1442  00149E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1443  0014A2  0E00               	movlw	0
  1444  0014A4  22DD               	addwfc	postdec2,f,c
  1445  0014A6  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1446  0014AA  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1447  0014AE  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  1448  0014B2  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  1449  0014B6  0E00               	movlw	0
  1450  0014B8  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1451  0014BA  0EFF               	movlw	-1
  1452  0014BC  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1453  0014BE  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1454  0014C0  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1455  0014C2  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1456  0014C4  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1457  0014C6  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1458  0014C8                     
  1459                           ; BSR set to: 0
  1460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1461  0014C8  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  1462  0014CC  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1463  0014D0  C098  F024         	movff	vfpfcnvrt@ll,dtoa@d
  1464  0014D4  C099  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1465  0014D8  C09A  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1466  0014DC  C09B  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1467  0014E0  C09C  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1468  0014E4  C09D  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1469  0014E8  C09E  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1470  0014EC  C09F  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1471  0014F0  EC26  F008         	call	_dtoa	;wreg free
  1472  0014F4  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  1473  0014F8  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1474  0014FC  EFD3  F00A         	goto	l1090
  1475  001500                     l2458:
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1479  001500  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1480  001504  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1481  001508  CFDE FFF6          	movff	postinc2,tblptrl
  1482  00150C  CFDD FFF7          	movff	postdec2,tblptrh
  1483  001510                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1484  001510  6AF8               	clrf	tblptru,c
  1485  001512                     	endif
  1486  001512                     	if	0	;tblptru may be non-zero
  1487  001512                     	endif
  1488  001512  0008               	tblrd		*
  1489  001514  50F5               	movf	tablat,w,c
  1490  001516  0A25               	xorlw	37
  1491  001518  A4D8               	btfss	status,2,c
  1492  00151A  EF91  F00A         	goto	u2101
  1493  00151E  EF93  F00A         	goto	u2100
  1494  001522                     u2101:
  1495  001522  EFAA  F00A         	goto	l2468
  1496  001526                     u2100:
  1497  001526                     
  1498                           ; BSR set to: 0
  1499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1500  001526  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1501  00152A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1502  00152E  2ADE               	incf	postinc2,f,c
  1503  001530  0E00               	movlw	0
  1504  001532  22DD               	addwfc	postdec2,f,c
  1505  001534                     
  1506                           ; BSR set to: 0
  1507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1508  001534  0E00               	movlw	0
  1509  001536  6E08               	movwf	(fputc@c+1)^0,c
  1510  001538  0E25               	movlw	37
  1511  00153A  6E07               	movwf	fputc@c^0,c
  1512  00153C  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1513  001540  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1514  001544  EC9A  F00D         	call	_fputc	;wreg free
  1515  001548                     l2464:
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1518  001548  0E00               	movlw	0
  1519  00154A  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1520  00154C  0E01               	movlw	1
  1521  00154E  6E46               	movwf	?_vfpfcnvrt^0,c
  1522  001550  EFD3  F00A         	goto	l1090
  1523  001554                     l2468:
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1527  001554  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1528  001558  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1529  00155C  2ADE               	incf	postinc2,f,c
  1530  00155E  0E00               	movlw	0
  1531  001560  22DD               	addwfc	postdec2,f,c
  1532  001562                     
  1533                           ; BSR set to: 0
  1534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1535  001562  0E00               	movlw	0
  1536  001564  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1537  001566  0E00               	movlw	0
  1538  001568  6E46               	movwf	?_vfpfcnvrt^0,c
  1539  00156A  EFD3  F00A         	goto	l1090
  1540  00156E                     l2474:
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1543  00156E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1544  001572  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1545  001576  CFDE FFF6          	movff	postinc2,tblptrl
  1546  00157A  CFDD FFF7          	movff	postdec2,tblptrh
  1547  00157E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1548  00157E  6AF8               	clrf	tblptru,c
  1549  001580                     	endif
  1550  001580                     	if	0	;tblptru may be non-zero
  1551  001580                     	endif
  1552  001580  0008               	tblrd		*
  1553  001582  50F5               	movf	tablat,w,c
  1554  001584  6E07               	movwf	fputc@c^0,c
  1555  001586  6A08               	clrf	(fputc@c+1)^0,c
  1556  001588  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1557  00158C  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1558  001590  EC9A  F00D         	call	_fputc	;wreg free
  1559  001594                     
  1560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1561  001594  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1562  001598  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1563  00159C  2ADE               	incf	postinc2,f,c
  1564  00159E  0E00               	movlw	0
  1565  0015A0  22DD               	addwfc	postdec2,f,c
  1566  0015A2  EFA4  F00A         	goto	l2464
  1567  0015A6                     l1090:
  1568  0015A6  0012               	return		;funcret
  1569  0015A8                     __end_of_vfpfcnvrt:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _dtoa *****************
  1573 ;; Defined at:
  1574 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1577 ;;		 -> NULL(0), 
  1578 ;;  d               8   35[COMRAM] long long 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  n               8   59[COMRAM] long long 
  1581 ;;  i               2   67[COMRAM] int 
  1582 ;;  s               2   57[COMRAM] int 
  1583 ;;  w               2   55[COMRAM] int 
  1584 ;;  p               2   53[COMRAM] int 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2   33[COMRAM] int 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1594 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;Total ram usage:       36 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 9
  1601 ;; This function calls:
  1602 ;;		___aodiv
  1603 ;;		___aomod
  1604 ;;		_abs
  1605 ;;		_pad
  1606 ;; This function is called by:
  1607 ;;		_vfpfcnvrt
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text5
  1612  00104C                     __ptext5:
  1613                           	callstack 0
  1614  00104C                     _dtoa:
  1615                           	callstack 17
  1616  00104C                     
  1617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1618  00104C  C024  F03C         	movff	dtoa@d,dtoa@n
  1619  001050  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  1620  001054  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  1621  001058  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  1622  00105C  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  1623  001060  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  1624  001064  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  1625  001068  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  1626  00106C                     
  1627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1628  00106C  BE43               	btfsc	(dtoa@n+7)^0,7,c
  1629  00106E  EF3B  F008         	goto	u1901
  1630  001072  EF3E  F008         	goto	u1900
  1631  001076                     u1901:
  1632  001076  0E01               	movlw	1
  1633  001078  EF3F  F008         	goto	u1910
  1634  00107C                     u1900:
  1635  00107C  0E00               	movlw	0
  1636  00107E                     u1910:
  1637  00107E  6E3A               	movwf	dtoa@s^0,c
  1638  001080  6A3B               	clrf	(dtoa@s+1)^0,c
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1641  001082  503A               	movf	dtoa@s^0,w,c
  1642  001084  103B               	iorwf	(dtoa@s+1)^0,w,c
  1643  001086  B4D8               	btfsc	status,2,c
  1644  001088  EF48  F008         	goto	u1921
  1645  00108C  EF4A  F008         	goto	u1920
  1646  001090                     u1921:
  1647  001090  EF5A  F008         	goto	l2352
  1648  001094                     u1920:
  1649  001094                     
  1650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1651  001094  1E43               	comf	(dtoa@n+7)^0,f,c
  1652  001096  1E42               	comf	(dtoa@n+6)^0,f,c
  1653  001098  1E41               	comf	(dtoa@n+5)^0,f,c
  1654  00109A  1E40               	comf	(dtoa@n+4)^0,f,c
  1655  00109C  1E3F               	comf	(dtoa@n+3)^0,f,c
  1656  00109E  1E3E               	comf	(dtoa@n+2)^0,f,c
  1657  0010A0  1E3D               	comf	(dtoa@n+1)^0,f,c
  1658  0010A2  6C3C               	negf	dtoa@n^0,c
  1659  0010A4  0E00               	movlw	0
  1660  0010A6  223D               	addwfc	(dtoa@n+1)^0,f,c
  1661  0010A8  223E               	addwfc	(dtoa@n+2)^0,f,c
  1662  0010AA  223F               	addwfc	(dtoa@n+3)^0,f,c
  1663  0010AC  2240               	addwfc	(dtoa@n+4)^0,f,c
  1664  0010AE  2241               	addwfc	(dtoa@n+5)^0,f,c
  1665  0010B0  2242               	addwfc	(dtoa@n+6)^0,f,c
  1666  0010B2  2243               	addwfc	(dtoa@n+7)^0,f,c
  1667  0010B4                     l2352:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1670  0010B4  0100               	movlb	0	; () banked
  1671  0010B6  BF69               	btfsc	(_prec+1)& (0+255),7,b
  1672  0010B8  EF60  F008         	goto	u1931
  1673  0010BC  EF62  F008         	goto	u1930
  1674  0010C0                     u1931:
  1675  0010C0  EF63  F008         	goto	l2356
  1676  0010C4                     u1930:
  1677  0010C4                     
  1678                           ; BSR set to: 0
  1679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1680  0010C4  936A               	bcf	_flags& (0+255),1,b
  1681  0010C6                     l2356:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1685  0010C6  BF69               	btfsc	(_prec+1)& (0+255),7,b
  1686  0010C8  EF70  F008         	goto	u1940
  1687  0010CC  5169               	movf	(_prec+1)& (0+255),w,b
  1688  0010CE  E106               	bnz	u1941
  1689  0010D0  0568               	decf	_prec& (0+255),w,b
  1690  0010D2  B0D8               	btfsc	status,0,c
  1691  0010D4  EF6E  F008         	goto	u1941
  1692  0010D8  EF70  F008         	goto	u1940
  1693  0010DC                     u1941:
  1694  0010DC  EF76  F008         	goto	l1051
  1695  0010E0                     u1940:
  1696  0010E0                     
  1697                           ; BSR set to: 0
  1698  0010E0  0E00               	movlw	0
  1699  0010E2  6E37               	movwf	(dtoa@p+1)^0,c
  1700  0010E4  0E01               	movlw	1
  1701  0010E6  6E36               	movwf	dtoa@p^0,c
  1702  0010E8  EF7A  F008         	goto	l1053
  1703  0010EC                     l1051:
  1704                           
  1705                           ; BSR set to: 0
  1706  0010EC  C068  F036         	movff	_prec,dtoa@p
  1707  0010F0  C069  F037         	movff	_prec+1,dtoa@p+1
  1708  0010F4                     l1053:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1712  0010F4  C066  F038         	movff	_width,dtoa@w
  1713  0010F8  C067  F039         	movff	_width+1,dtoa@w+1
  1714  0010FC                     
  1715                           ; BSR set to: 0
  1716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1717  0010FC  503A               	movf	dtoa@s^0,w,c
  1718  0010FE  103B               	iorwf	(dtoa@s+1)^0,w,c
  1719  001100  A4D8               	btfss	status,2,c
  1720  001102  EF85  F008         	goto	u1951
  1721  001106  EF87  F008         	goto	u1950
  1722  00110A                     u1951:
  1723  00110A  EF8E  F008         	goto	l2364
  1724  00110E                     u1950:
  1725  00110E                     
  1726                           ; BSR set to: 0
  1727  00110E  A56A               	btfss	_flags& (0+255),2,b
  1728  001110  EF8C  F008         	goto	u1961
  1729  001114  EF8E  F008         	goto	u1960
  1730  001118                     u1961:
  1731  001118  EF91  F008         	goto	l2366
  1732  00111C                     u1960:
  1733  00111C                     l2364:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1737  00111C  0638               	decf	dtoa@w^0,f,c
  1738  00111E  A0D8               	btfss	status,0,c
  1739  001120  0639               	decf	(dtoa@w+1)^0,f,c
  1740  001122                     l2366:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1744  001122  0E00               	movlw	0
  1745  001124  6E45               	movwf	(dtoa@i+1)^0,c
  1746  001126  0E1F               	movlw	31
  1747  001128  6E44               	movwf	dtoa@i^0,c
  1748  00112A                     
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1751  00112A  0E00               	movlw	0
  1752  00112C  6F97               	movwf	(_dbuf+31)& (0+255),b
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1755  00112E  EF15  F009         	goto	l2380
  1756  001132                     l2370:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1759  001132  0644               	decf	dtoa@i^0,f,c
  1760  001134  A0D8               	btfss	status,0,c
  1761  001136  0645               	decf	(dtoa@i+1)^0,f,c
  1762  001138                     
  1763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1764  001138  0E78               	movlw	low _dbuf
  1765  00113A  2444               	addwf	dtoa@i^0,w,c
  1766  00113C  6ED9               	movwf	fsr2l,c
  1767  00113E  0E00               	movlw	high _dbuf
  1768  001140  2045               	addwfc	(dtoa@i+1)^0,w,c
  1769  001142  6EDA               	movwf	fsr2h,c
  1770  001144  C03C  F005         	movff	dtoa@n,___aomod@dividend
  1771  001148  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1772  00114C  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1773  001150  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1774  001154  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1775  001158  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1776  00115C  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1777  001160  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1778  001164  0E0A               	movlw	10
  1779  001166  6E0D               	movwf	___aomod@divisor^0,c
  1780  001168  0E00               	movlw	0
  1781  00116A  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1782  00116C  0E00               	movlw	0
  1783  00116E  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1784  001170  0E00               	movlw	0
  1785  001172  6E10               	movwf	(___aomod@divisor+3)^0,c
  1786  001174  0E00               	movlw	0
  1787  001176  6E11               	movwf	(___aomod@divisor+4)^0,c
  1788  001178  0E00               	movlw	0
  1789  00117A  6E12               	movwf	(___aomod@divisor+5)^0,c
  1790  00117C  0E00               	movlw	0
  1791  00117E  6E13               	movwf	(___aomod@divisor+6)^0,c
  1792  001180  0E00               	movlw	0
  1793  001182  6E14               	movwf	(___aomod@divisor+7)^0,c
  1794  001184  EC98  F00B         	call	___aomod	;wreg free
  1795  001188  C005  F02C         	movff	?___aomod,??_dtoa
  1796  00118C  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  1797  001190  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  1798  001194  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  1799  001198  C009  F030         	movff	?___aomod+4,??_dtoa+4
  1800  00119C  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  1801  0011A0  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  1802  0011A4  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  1803  0011A8  C02C  F017         	movff	??_dtoa,abs@a
  1804  0011AC  C02E  F018         	movff	??_dtoa+2,abs@a+1
  1805  0011B0  ECED  F00E         	call	_abs	;wreg free
  1806  0011B4  5017               	movf	?_abs^0,w,c
  1807  0011B6  0F30               	addlw	48
  1808  0011B8  6EDF               	movwf	indf2,c
  1809  0011BA                     
  1810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1811  0011BA  0636               	decf	dtoa@p^0,f,c
  1812  0011BC  A0D8               	btfss	status,0,c
  1813  0011BE  0637               	decf	(dtoa@p+1)^0,f,c
  1814  0011C0                     
  1815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1816  0011C0  0638               	decf	dtoa@w^0,f,c
  1817  0011C2  A0D8               	btfss	status,0,c
  1818  0011C4  0639               	decf	(dtoa@w+1)^0,f,c
  1819  0011C6                     
  1820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1821  0011C6  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  1822  0011CA  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1823  0011CE  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1824  0011D2  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1825  0011D6  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1826  0011DA  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1827  0011DE  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1828  0011E2  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1829  0011E6  0E0A               	movlw	10
  1830  0011E8  6E0D               	movwf	___aodiv@divisor^0,c
  1831  0011EA  0E00               	movlw	0
  1832  0011EC  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1833  0011EE  0E00               	movlw	0
  1834  0011F0  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1835  0011F2  0E00               	movlw	0
  1836  0011F4  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1837  0011F6  0E00               	movlw	0
  1838  0011F8  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1839  0011FA  0E00               	movlw	0
  1840  0011FC  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1841  0011FE  0E00               	movlw	0
  1842  001200  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1843  001202  0E00               	movlw	0
  1844  001204  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1845  001206  ECD4  F00A         	call	___aodiv	;wreg free
  1846  00120A  C005  F03C         	movff	?___aodiv,dtoa@n
  1847  00120E  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  1848  001212  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  1849  001216  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  1850  00121A  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  1851  00121E  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  1852  001222  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  1853  001226  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  1854  00122A                     l2380:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1857  00122A  BE45               	btfsc	(dtoa@i+1)^0,7,c
  1858  00122C  EF20  F009         	goto	u1971
  1859  001230  5045               	movf	(dtoa@i+1)^0,w,c
  1860  001232  E108               	bnz	u1970
  1861  001234  0444               	decf	dtoa@i^0,w,c
  1862  001236  A0D8               	btfss	status,0,c
  1863  001238  EF20  F009         	goto	u1971
  1864  00123C  EF22  F009         	goto	u1970
  1865  001240                     u1971:
  1866  001240  EF53  F009         	goto	l2390
  1867  001244                     u1970:
  1868  001244  503C               	movf	dtoa@n^0,w,c
  1869  001246  103D               	iorwf	(dtoa@n+1)^0,w,c
  1870  001248  103E               	iorwf	(dtoa@n+2)^0,w,c
  1871  00124A  103F               	iorwf	(dtoa@n+3)^0,w,c
  1872  00124C  1040               	iorwf	(dtoa@n+4)^0,w,c
  1873  00124E  1041               	iorwf	(dtoa@n+5)^0,w,c
  1874  001250  1042               	iorwf	(dtoa@n+6)^0,w,c
  1875  001252  1043               	iorwf	(dtoa@n+7)^0,w,c
  1876  001254  A4D8               	btfss	status,2,c
  1877  001256  EF2F  F009         	goto	u1981
  1878  00125A  EF31  F009         	goto	u1980
  1879  00125E                     u1981:
  1880  00125E  EF99  F008         	goto	l2370
  1881  001262                     u1980:
  1882  001262  BE37               	btfsc	(dtoa@p+1)^0,7,c
  1883  001264  EF3E  F009         	goto	u1990
  1884  001268  5037               	movf	(dtoa@p+1)^0,w,c
  1885  00126A  E106               	bnz	u1991
  1886  00126C  0436               	decf	dtoa@p^0,w,c
  1887  00126E  B0D8               	btfsc	status,0,c
  1888  001270  EF3C  F009         	goto	u1991
  1889  001274  EF3E  F009         	goto	u1990
  1890  001278                     u1991:
  1891  001278  EF99  F008         	goto	l2370
  1892  00127C                     u1990:
  1893  00127C  BE39               	btfsc	(dtoa@w+1)^0,7,c
  1894  00127E  EF49  F009         	goto	u2001
  1895  001282  5039               	movf	(dtoa@w+1)^0,w,c
  1896  001284  E108               	bnz	u2000
  1897  001286  0438               	decf	dtoa@w^0,w,c
  1898  001288  A0D8               	btfss	status,0,c
  1899  00128A  EF49  F009         	goto	u2001
  1900  00128E  EF4B  F009         	goto	u2000
  1901  001292                     u2001:
  1902  001292  EF53  F009         	goto	l2390
  1903  001296                     u2000:
  1904  001296  0100               	movlb	0	; () banked
  1905  001298  B36A               	btfsc	_flags& (0+255),1,b
  1906  00129A  EF51  F009         	goto	u2011
  1907  00129E  EF53  F009         	goto	u2010
  1908  0012A2                     u2011:
  1909  0012A2  EF99  F008         	goto	l2370
  1910  0012A6                     u2010:
  1911  0012A6                     l2390:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1914  0012A6  503A               	movf	dtoa@s^0,w,c
  1915  0012A8  103B               	iorwf	(dtoa@s+1)^0,w,c
  1916  0012AA  A4D8               	btfss	status,2,c
  1917  0012AC  EF5A  F009         	goto	u2021
  1918  0012B0  EF5C  F009         	goto	u2020
  1919  0012B4                     u2021:
  1920  0012B4  EF64  F009         	goto	l2394
  1921  0012B8                     u2020:
  1922  0012B8  0100               	movlb	0	; () banked
  1923  0012BA  A56A               	btfss	_flags& (0+255),2,b
  1924  0012BC  EF62  F009         	goto	u2031
  1925  0012C0  EF64  F009         	goto	u2030
  1926  0012C4                     u2031:
  1927  0012C4  EF82  F009         	goto	l2404
  1928  0012C8                     u2030:
  1929  0012C8                     l2394:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1932  0012C8  0644               	decf	dtoa@i^0,f,c
  1933  0012CA  A0D8               	btfss	status,0,c
  1934  0012CC  0645               	decf	(dtoa@i+1)^0,f,c
  1935  0012CE                     
  1936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1937  0012CE  503A               	movf	dtoa@s^0,w,c
  1938  0012D0  103B               	iorwf	(dtoa@s+1)^0,w,c
  1939  0012D2  A4D8               	btfss	status,2,c
  1940  0012D4  EF6E  F009         	goto	u2041
  1941  0012D8  EF70  F009         	goto	u2040
  1942  0012DC                     u2041:
  1943  0012DC  EF76  F009         	goto	l2400
  1944  0012E0                     u2040:
  1945  0012E0  0E00               	movlw	0
  1946  0012E2  6E35               	movwf	(_dtoa$1451+1)^0,c
  1947  0012E4  0E2B               	movlw	43
  1948  0012E6  6E34               	movwf	_dtoa$1451^0,c
  1949  0012E8  EF7A  F009         	goto	l2402
  1950  0012EC                     l2400:
  1951  0012EC  0E00               	movlw	0
  1952  0012EE  6E35               	movwf	(_dtoa$1451+1)^0,c
  1953  0012F0  0E2D               	movlw	45
  1954  0012F2  6E34               	movwf	_dtoa$1451^0,c
  1955  0012F4                     l2402:
  1956  0012F4  0E78               	movlw	low _dbuf
  1957  0012F6  2444               	addwf	dtoa@i^0,w,c
  1958  0012F8  6ED9               	movwf	fsr2l,c
  1959  0012FA  0E00               	movlw	high _dbuf
  1960  0012FC  2045               	addwfc	(dtoa@i+1)^0,w,c
  1961  0012FE  6EDA               	movwf	fsr2h,c
  1962  001300  C034  FFDF         	movff	_dtoa$1451,indf2
  1963  001304                     l2404:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1966  001304  C022  F017         	movff	dtoa@fp,pad@fp
  1967  001308  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  1968  00130C  0E78               	movlw	low _dbuf
  1969  00130E  2444               	addwf	dtoa@i^0,w,c
  1970  001310  6E19               	movwf	pad@buf^0,c
  1971  001312  0E00               	movlw	high _dbuf
  1972  001314  2045               	addwfc	(dtoa@i+1)^0,w,c
  1973  001316  6E1A               	movwf	(pad@buf+1)^0,c
  1974  001318  C038  F01B         	movff	dtoa@w,pad@p
  1975  00131C  C039  F01C         	movff	dtoa@w+1,pad@p+1
  1976  001320  ECD7  F00C         	call	_pad	;wreg free
  1977  001324  C017  F022         	movff	?_pad,?_dtoa
  1978  001328  C018  F023         	movff	?_pad+1,?_dtoa+1
  1979  00132C  0012               	return		;funcret
  1980  00132E                     __end_of_dtoa:
  1981                           	callstack 0
  1982                           
  1983 ;; *************** function _pad *****************
  1984 ;; Defined at:
  1985 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  1988 ;;		 -> NULL(0), 
  1989 ;;  buf             2   24[COMRAM] PTR unsigned char 
  1990 ;;		 -> dbuf(32), 
  1991 ;;  p               2   26[COMRAM] int 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  w               2   31[COMRAM] int 
  1994 ;;  i               2   29[COMRAM] int 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  2   22[COMRAM] int 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2004 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;Total ram usage:       11 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 8
  2011 ;; This function calls:
  2012 ;;		_fputc
  2013 ;;		_fputs
  2014 ;;		_strlen
  2015 ;; This function is called by:
  2016 ;;		_dtoa
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text6
  2021  0019AE                     __ptext6:
  2022                           	callstack 0
  2023  0019AE                     _pad:
  2024                           	callstack 17
  2025  0019AE                     
  2026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2027  0019AE  0100               	movlb	0	; () banked
  2028  0019B0  A16A               	btfss	_flags& (0+255),0,b
  2029  0019B2  EFDD  F00C         	goto	u1851
  2030  0019B6  EFDF  F00C         	goto	u1850
  2031  0019BA                     u1851:
  2032  0019BA  EFE9  F00C         	goto	l2324
  2033  0019BE                     u1850:
  2034  0019BE                     
  2035                           ; BSR set to: 0
  2036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2037  0019BE  C019  F010         	movff	pad@buf,fputs@s
  2038  0019C2  C01A  F011         	movff	pad@buf+1,fputs@s+1
  2039  0019C6  C017  F012         	movff	pad@fp,fputs@fp
  2040  0019CA  C018  F013         	movff	pad@fp+1,fputs@fp+1
  2041  0019CE  ECCB  F00E         	call	_fputs	;wreg free
  2042  0019D2                     l2324:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2045  0019D2  BE1C               	btfsc	(pad@p+1)^0,7,c
  2046  0019D4  EFEE  F00C         	goto	u1861
  2047  0019D8  EFF0  F00C         	goto	u1860
  2048  0019DC                     u1861:
  2049  0019DC  EFF6  F00C         	goto	l2328
  2050  0019E0                     u1860:
  2051  0019E0  C01B  F020         	movff	pad@p,pad@w
  2052  0019E4  C01C  F021         	movff	pad@p+1,pad@w+1
  2053  0019E8  EFFA  F00C         	goto	l1040
  2054  0019EC                     l2328:
  2055  0019EC  0E00               	movlw	0
  2056  0019EE  6E21               	movwf	(pad@w+1)^0,c
  2057  0019F0  0E00               	movlw	0
  2058  0019F2  6E20               	movwf	pad@w^0,c
  2059  0019F4                     l1040:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2062  0019F4  0E00               	movlw	0
  2063  0019F6  6E1F               	movwf	(pad@i+1)^0,c
  2064  0019F8  0E00               	movlw	0
  2065  0019FA  6E1E               	movwf	pad@i^0,c
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2068  0019FC  EF0C  F00D         	goto	l2334
  2069  001A00                     l2330:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2072  001A00  0E00               	movlw	0
  2073  001A02  6E08               	movwf	(fputc@c+1)^0,c
  2074  001A04  0E20               	movlw	32
  2075  001A06  6E07               	movwf	fputc@c^0,c
  2076  001A08  C017  F009         	movff	pad@fp,fputc@fp
  2077  001A0C  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  2078  001A10  EC9A  F00D         	call	_fputc	;wreg free
  2079  001A14                     
  2080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2081  001A14  4A1E               	infsnz	pad@i^0,f,c
  2082  001A16  2A1F               	incf	(pad@i+1)^0,f,c
  2083  001A18                     l2334:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2086  001A18  5020               	movf	pad@w^0,w,c
  2087  001A1A  5C1E               	subwf	pad@i^0,w,c
  2088  001A1C  501F               	movf	(pad@i+1)^0,w,c
  2089  001A1E  0A80               	xorlw	128
  2090  001A20  6E1D               	movwf	??_pad^0,c
  2091  001A22  5021               	movf	(pad@w+1)^0,w,c
  2092  001A24  0A80               	xorlw	128
  2093  001A26  581D               	subwfb	??_pad^0,w,c
  2094  001A28  A0D8               	btfss	status,0,c
  2095  001A2A  EF19  F00D         	goto	u1871
  2096  001A2E  EF1B  F00D         	goto	u1870
  2097  001A32                     u1871:
  2098  001A32  EF00  F00D         	goto	l2330
  2099  001A36                     u1870:
  2100  001A36                     
  2101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2102  001A36  0100               	movlb	0	; () banked
  2103  001A38  B16A               	btfsc	_flags& (0+255),0,b
  2104  001A3A  EF21  F00D         	goto	u1881
  2105  001A3E  EF23  F00D         	goto	u1880
  2106  001A42                     u1881:
  2107  001A42  EF2D  F00D         	goto	l2338
  2108  001A46                     u1880:
  2109  001A46                     
  2110                           ; BSR set to: 0
  2111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2112  001A46  C019  F010         	movff	pad@buf,fputs@s
  2113  001A4A  C01A  F011         	movff	pad@buf+1,fputs@s+1
  2114  001A4E  C017  F012         	movff	pad@fp,fputs@fp
  2115  001A52  C018  F013         	movff	pad@fp+1,fputs@fp+1
  2116  001A56  ECCB  F00E         	call	_fputs	;wreg free
  2117  001A5A                     l2338:
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2120  001A5A  C019  F005         	movff	pad@buf,strlen@s
  2121  001A5E  C01A  F006         	movff	pad@buf+1,strlen@s+1
  2122  001A62  EC2D  F00F         	call	_strlen	;wreg free
  2123  001A66  5020               	movf	pad@w^0,w,c
  2124  001A68  2405               	addwf	?_strlen^0,w,c
  2125  001A6A  6E17               	movwf	?_pad^0,c
  2126  001A6C  5021               	movf	(pad@w+1)^0,w,c
  2127  001A6E  2006               	addwfc	(?_strlen+1)^0,w,c
  2128  001A70  6E18               	movwf	(?_pad+1)^0,c
  2129  001A72  0012               	return		;funcret
  2130  001A74                     __end_of_pad:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _strlen *****************
  2134 ;; Defined at:
  2135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2138 ;;		 -> dbuf(32), 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2141 ;;		 -> dbuf(32), 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  2    4[COMRAM] unsigned int 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;Total ram usage:        4 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; Hardware stack levels required when called: 4
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_pad
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text7
  2166  001E5A                     __ptext7:
  2167                           	callstack 0
  2168  001E5A                     _strlen:
  2169                           	callstack 20
  2170  001E5A  C005  F007         	movff	strlen@s,strlen@a
  2171  001E5E  C006  F008         	movff	strlen@s+1,strlen@a+1
  2172  001E62  EF35  F00F         	goto	l2234
  2173  001E66                     l2232:
  2174  001E66  4A05               	infsnz	strlen@s^0,f,c
  2175  001E68  2A06               	incf	(strlen@s+1)^0,f,c
  2176  001E6A                     l2234:
  2177  001E6A  C005  FFD9         	movff	strlen@s,fsr2l
  2178  001E6E  C006  FFDA         	movff	strlen@s+1,fsr2h
  2179  001E72  50DF               	movf	indf2,w,c
  2180  001E74  A4D8               	btfss	status,2,c
  2181  001E76  EF3F  F00F         	goto	u1711
  2182  001E7A  EF41  F00F         	goto	u1710
  2183  001E7E                     u1711:
  2184  001E7E  EF33  F00F         	goto	l2232
  2185  001E82                     u1710:
  2186  001E82  5007               	movf	strlen@a^0,w,c
  2187  001E84  5C05               	subwf	strlen@s^0,w,c
  2188  001E86  6E05               	movwf	?_strlen^0,c
  2189  001E88  5008               	movf	(strlen@a+1)^0,w,c
  2190  001E8A  5806               	subwfb	(strlen@s+1)^0,w,c
  2191  001E8C  6E06               	movwf	(?_strlen+1)^0,c
  2192  001E8E  0012               	return		;funcret
  2193  001E90                     __end_of_strlen:
  2194                           	callstack 0
  2195                           
  2196 ;; *************** function _fputs *****************
  2197 ;; Defined at:
  2198 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2201 ;;		 -> dbuf(32), 
  2202 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2203 ;;		 -> NULL(0), 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  i               2   20[COMRAM] int 
  2206 ;;  c               1   19[COMRAM] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  2   15[COMRAM] int 
  2209 ;; Registers used:
  2210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;Total ram usage:        7 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 7
  2223 ;; This function calls:
  2224 ;;		_fputc
  2225 ;; This function is called by:
  2226 ;;		_pad
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text8
  2231  001D96                     __ptext8:
  2232                           	callstack 0
  2233  001D96                     _fputs:
  2234                           	callstack 17
  2235  001D96  0E00               	movlw	0
  2236  001D98  6E16               	movwf	(fputs@i+1)^0,c
  2237  001D9A  0E00               	movlw	0
  2238  001D9C  6E15               	movwf	fputs@i^0,c
  2239  001D9E  EFDC  F00E         	goto	l2228
  2240  001DA2                     l2224:
  2241  001DA2  C014  F007         	movff	fputs@c,fputc@c
  2242  001DA6  6A08               	clrf	(fputc@c+1)^0,c
  2243  001DA8  C012  F009         	movff	fputs@fp,fputc@fp
  2244  001DAC  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  2245  001DB0  EC9A  F00D         	call	_fputc	;wreg free
  2246  001DB4  4A15               	infsnz	fputs@i^0,f,c
  2247  001DB6  2A16               	incf	(fputs@i+1)^0,f,c
  2248  001DB8                     l2228:
  2249  001DB8  5015               	movf	fputs@i^0,w,c
  2250  001DBA  2410               	addwf	fputs@s^0,w,c
  2251  001DBC  6ED9               	movwf	fsr2l,c
  2252  001DBE  5016               	movf	(fputs@i+1)^0,w,c
  2253  001DC0  2011               	addwfc	(fputs@s+1)^0,w,c
  2254  001DC2  6EDA               	movwf	fsr2h,c
  2255  001DC4  50DF               	movf	indf2,w,c
  2256  001DC6  6E14               	movwf	fputs@c^0,c
  2257  001DC8  5014               	movf	fputs@c^0,w,c
  2258  001DCA  A4D8               	btfss	status,2,c
  2259  001DCC  EFEA  F00E         	goto	u1701
  2260  001DD0  EFEC  F00E         	goto	u1700
  2261  001DD4                     u1701:
  2262  001DD4  EFD1  F00E         	goto	l2224
  2263  001DD8                     u1700:
  2264  001DD8  0012               	return		;funcret
  2265  001DDA                     __end_of_fputs:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _fputc *****************
  2269 ;; Defined at:
  2270 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  c               2    6[COMRAM] int 
  2273 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  2274 ;;		 -> NULL(0), 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2    6[COMRAM] int 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;Total ram usage:        9 bytes
  2291 ;; Hardware stack levels used: 1
  2292 ;; Hardware stack levels required when called: 6
  2293 ;; This function calls:
  2294 ;;		_putch
  2295 ;; This function is called by:
  2296 ;;		_pad
  2297 ;;		_vfpfcnvrt
  2298 ;;		_fputs
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text9
  2303  001B34                     __ptext9:
  2304                           	callstack 0
  2305  001B34                     _fputc:
  2306                           	callstack 20
  2307  001B34  5009               	movf	fputc@fp^0,w,c
  2308  001B36  100A               	iorwf	(fputc@fp+1)^0,w,c
  2309  001B38  B4D8               	btfsc	status,2,c
  2310  001B3A  EFA1  F00D         	goto	u1661
  2311  001B3E  EFA3  F00D         	goto	u1660
  2312  001B42                     u1661:
  2313  001B42  EFAC  F00D         	goto	l2212
  2314  001B46                     u1660:
  2315  001B46  5009               	movf	fputc@fp^0,w,c
  2316  001B48  100A               	iorwf	(fputc@fp+1)^0,w,c
  2317  001B4A  A4D8               	btfss	status,2,c
  2318  001B4C  EFAA  F00D         	goto	u1671
  2319  001B50  EFAC  F00D         	goto	u1670
  2320  001B54                     u1671:
  2321  001B54  EFB1  F00D         	goto	l2214
  2322  001B58                     u1670:
  2323  001B58                     l2212:
  2324  001B58  5007               	movf	fputc@c^0,w,c
  2325  001B5A  ECB9  F00F         	call	_putch
  2326  001B5E  EFE4  F00D         	goto	l1116
  2327  001B62                     l2214:
  2328  001B62  EE20 F004          	lfsr	2,4
  2329  001B66  5009               	movf	fputc@fp^0,w,c
  2330  001B68  26D9               	addwf	fsr2l,f,c
  2331  001B6A  500A               	movf	(fputc@fp+1)^0,w,c
  2332  001B6C  22DA               	addwfc	fsr2h,f,c
  2333  001B6E  50DE               	movf	postinc2,w,c
  2334  001B70  10DE               	iorwf	postinc2,w,c
  2335  001B72  B4D8               	btfsc	status,2,c
  2336  001B74  EFBE  F00D         	goto	u1681
  2337  001B78  EFC0  F00D         	goto	u1680
  2338  001B7C                     u1681:
  2339  001B7C  EFDB  F00D         	goto	l2218
  2340  001B80                     u1680:
  2341  001B80  EE20 F004          	lfsr	2,4
  2342  001B84  5009               	movf	fputc@fp^0,w,c
  2343  001B86  26D9               	addwf	fsr2l,f,c
  2344  001B88  500A               	movf	(fputc@fp+1)^0,w,c
  2345  001B8A  22DA               	addwfc	fsr2h,f,c
  2346  001B8C  EE10 F002          	lfsr	1,2
  2347  001B90  5009               	movf	fputc@fp^0,w,c
  2348  001B92  26E1               	addwf	fsr1l,f,c
  2349  001B94  500A               	movf	(fputc@fp+1)^0,w,c
  2350  001B96  22E2               	addwfc	fsr1h,f,c
  2351  001B98  50DE               	movf	postinc2,w,c
  2352  001B9A  5CE6               	subwf	postinc1,w,c
  2353  001B9C  50E6               	movf	postinc1,w,c
  2354  001B9E  0A80               	xorlw	128
  2355  001BA0  6E0F               	movwf	(??_fputc+4)^0,c
  2356  001BA2  50DE               	movf	postinc2,w,c
  2357  001BA4  0A80               	xorlw	128
  2358  001BA6  580F               	subwfb	(??_fputc+4)^0,w,c
  2359  001BA8  B0D8               	btfsc	status,0,c
  2360  001BAA  EFD9  F00D         	goto	u1691
  2361  001BAE  EFDB  F00D         	goto	u1690
  2362  001BB2                     u1691:
  2363  001BB2  EFE4  F00D         	goto	l1116
  2364  001BB6                     u1690:
  2365  001BB6                     l2218:
  2366  001BB6  EE20 F002          	lfsr	2,2
  2367  001BBA  5009               	movf	fputc@fp^0,w,c
  2368  001BBC  26D9               	addwf	fsr2l,f,c
  2369  001BBE  500A               	movf	(fputc@fp+1)^0,w,c
  2370  001BC0  22DA               	addwfc	fsr2h,f,c
  2371  001BC2  2ADE               	incf	postinc2,f,c
  2372  001BC4  0E00               	movlw	0
  2373  001BC6  22DD               	addwfc	postdec2,f,c
  2374  001BC8                     l1116:
  2375  001BC8  0012               	return		;funcret
  2376  001BCA                     __end_of_fputc:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function _putch *****************
  2380 ;; Defined at:
  2381 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  txData          1    wreg     unsigned char 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  txData          1    5[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;Total ram usage:        1 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 5
  2402 ;; This function calls:
  2403 ;;		_EUSART1_Write
  2404 ;; This function is called by:
  2405 ;;		_fputc
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text10
  2410  001F72                     __ptext10:
  2411                           	callstack 0
  2412  001F72                     _putch:
  2413                           	callstack 20
  2414                           
  2415                           ;incstack = 0
  2416                           ;putch@txData stored from wreg
  2417  001F72  6E06               	movwf	putch@txData^0,c
  2418  001F74                     
  2419                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  2420  001F74  5006               	movf	putch@txData^0,w,c
  2421  001F76  EC52  F00E         	call	_EUSART1_Write
  2422  001F7A  0012               	return		;funcret
  2423  001F7C                     __end_of_putch:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function _EUSART1_Write *****************
  2427 ;; Defined at:
  2428 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  txData          1    wreg     unsigned char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  txData          1    4[COMRAM] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;Total ram usage:        1 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 4
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_putch
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text11
  2457  001CA4                     __ptext11:
  2458                           	callstack 0
  2459  001CA4                     _EUSART1_Write:
  2460                           	callstack 20
  2461                           
  2462                           ;incstack = 0
  2463                           ;EUSART1_Write@txData stored from wreg
  2464  001CA4  6E05               	movwf	EUSART1_Write@txData^0,c
  2465  001CA6                     l2190:
  2466                           
  2467                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  2468  001CA6  5056               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  2469  001CA8  B4D8               	btfsc	status,2,c
  2470  001CAA  EF59  F00E         	goto	u1631
  2471  001CAE  EF5B  F00E         	goto	u1630
  2472  001CB2                     u1631:
  2473  001CB2  EF53  F00E         	goto	l2190
  2474  001CB6                     u1630:
  2475  001CB6                     
  2476                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  2477  001CB6  B89D               	btfsc	157,4,c	;volatile
  2478  001CB8  EF60  F00E         	goto	u1641
  2479  001CBC  EF62  F00E         	goto	u1640
  2480  001CC0                     u1641:
  2481  001CC0  EF66  F00E         	goto	l155
  2482  001CC4                     u1640:
  2483  001CC4                     
  2484                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  2485  001CC4  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2486                           
  2487                           ;mcc_generated_files/eusart1.c: 182:     }
  2488  001CC8  EF7B  F00E         	goto	l2204
  2489  001CCC                     l155:
  2490                           
  2491                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  2492  001CCC  989D               	bcf	157,4,c	;volatile
  2493  001CCE                     
  2494                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  2495  001CCE  0E80               	movlw	low _eusart1TxBuffer
  2496  001CD0  2458               	addwf	_eusart1TxHead^0,w,c	;volatile
  2497  001CD2  6ED9               	movwf	fsr2l,c
  2498  001CD4  6ADA               	clrf	fsr2h,c
  2499  001CD6  0E01               	movlw	high _eusart1TxBuffer
  2500  001CD8  22DA               	addwfc	fsr2h,f,c
  2501  001CDA  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  2502  001CDE  2A58               	incf	_eusart1TxHead^0,f,c	;volatile
  2503  001CE0                     
  2504                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  2505  001CE0  0E3F               	movlw	63
  2506  001CE2  6458               	cpfsgt	_eusart1TxHead^0,c	;volatile
  2507  001CE4  EF76  F00E         	goto	u1651
  2508  001CE8  EF78  F00E         	goto	u1650
  2509  001CEC                     u1651:
  2510  001CEC  EF7A  F00E         	goto	l2202
  2511  001CF0                     u1650:
  2512  001CF0                     
  2513                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2514  001CF0  0E00               	movlw	0
  2515  001CF2  6E58               	movwf	_eusart1TxHead^0,c	;volatile
  2516  001CF4                     l2202:
  2517                           
  2518                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2519  001CF4  0656               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  2520  001CF6                     l2204:
  2521                           
  2522                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  2523  001CF6  889D               	bsf	157,4,c	;volatile
  2524  001CF8  0012               	return		;funcret
  2525  001CFA                     __end_of_EUSART1_Write:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _abs *****************
  2529 ;; Defined at:
  2530 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  a               2   22[COMRAM] int 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  2   22[COMRAM] int 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;Total ram usage:        4 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; Hardware stack levels required when called: 4
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_dtoa
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text12
  2559  001DDA                     __ptext12:
  2560                           	callstack 0
  2561  001DDA                     _abs:
  2562                           	callstack 21
  2563  001DDA  BE18               	btfsc	(abs@a+1)^0,7,c
  2564  001DDC  EFFA  F00E         	goto	u1890
  2565  001DE0  5018               	movf	(abs@a+1)^0,w,c
  2566  001DE2  E106               	bnz	u1891
  2567  001DE4  0417               	decf	abs@a^0,w,c
  2568  001DE6  B0D8               	btfsc	status,0,c
  2569  001DE8  EFF8  F00E         	goto	u1891
  2570  001DEC  EFFA  F00E         	goto	u1890
  2571  001DF0                     u1891:
  2572  001DF0  EF08  F00F         	goto	l1101
  2573  001DF4                     u1890:
  2574  001DF4  C017  F019         	movff	abs@a,??_abs
  2575  001DF8  C018  F01A         	movff	abs@a+1,??_abs+1
  2576  001DFC  1E19               	comf	??_abs^0,f,c
  2577  001DFE  1E1A               	comf	(??_abs+1)^0,f,c
  2578  001E00  4A19               	infsnz	??_abs^0,f,c
  2579  001E02  2A1A               	incf	(??_abs+1)^0,f,c
  2580  001E04  C019  F017         	movff	??_abs,?_abs
  2581  001E08  C01A  F018         	movff	??_abs+1,?_abs+1
  2582  001E0C  EF0C  F00F         	goto	l1104
  2583  001E10                     l1101:
  2584  001E10  C017  F017         	movff	abs@a,?_abs
  2585  001E14  C018  F018         	movff	abs@a+1,?_abs+1
  2586  001E18                     l1104:
  2587  001E18  0012               	return		;funcret
  2588  001E1A                     __end_of_abs:
  2589                           	callstack 0
  2590                           
  2591 ;; *************** function ___aomod *****************
  2592 ;; Defined at:
  2593 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  dividend        8    4[COMRAM] long long 
  2596 ;;  divisor         8   12[COMRAM] long long 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  sign            1   21[COMRAM] unsigned char 
  2599 ;;  counter         1   20[COMRAM] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  8    4[COMRAM] long long 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2609 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;Total ram usage:       18 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 4
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_dtoa
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text13
  2624  001730                     __ptext13:
  2625                           	callstack 0
  2626  001730                     ___aomod:
  2627                           	callstack 21
  2628  001730  0E00               	movlw	0
  2629  001732  6E16               	movwf	___aomod@sign^0,c
  2630  001734  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2631  001736  EFA1  F00B         	goto	u1790
  2632  00173A  EF9F  F00B         	goto	u1791
  2633  00173E                     u1791:
  2634  00173E  EFB3  F00B         	goto	l2292
  2635  001742                     u1790:
  2636  001742  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2637  001744  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2638  001746  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2639  001748  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2640  00174A  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2641  00174C  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2642  00174E  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2643  001750  6C05               	negf	___aomod@dividend^0,c
  2644  001752  0E00               	movlw	0
  2645  001754  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2646  001756  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2647  001758  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2648  00175A  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2649  00175C  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2650  00175E  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2651  001760  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2652  001762  0E01               	movlw	1
  2653  001764  6E16               	movwf	___aomod@sign^0,c
  2654  001766                     l2292:
  2655  001766  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2656  001768  EFBA  F00B         	goto	u1800
  2657  00176C  EFB8  F00B         	goto	u1801
  2658  001770                     u1801:
  2659  001770  EFCA  F00B         	goto	l2296
  2660  001774                     u1800:
  2661  001774  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2662  001776  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2663  001778  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2664  00177A  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2665  00177C  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2666  00177E  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2667  001780  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2668  001782  6C0D               	negf	___aomod@divisor^0,c
  2669  001784  0E00               	movlw	0
  2670  001786  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2671  001788  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2672  00178A  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2673  00178C  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2674  00178E  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2675  001790  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2676  001792  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2677  001794                     l2296:
  2678  001794  500D               	movf	___aomod@divisor^0,w,c
  2679  001796  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2680  001798  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2681  00179A  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2682  00179C  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2683  00179E  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2684  0017A0  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2685  0017A2  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2686  0017A4  B4D8               	btfsc	status,2,c
  2687  0017A6  EFD7  F00B         	goto	u1811
  2688  0017AA  EFD9  F00B         	goto	u1810
  2689  0017AE                     u1811:
  2690  0017AE  EF21  F00C         	goto	l2312
  2691  0017B2                     u1810:
  2692  0017B2  0E01               	movlw	1
  2693  0017B4  6E15               	movwf	___aomod@counter^0,c
  2694  0017B6  EFE7  F00B         	goto	l2302
  2695  0017BA                     l2300:
  2696  0017BA  90D8               	bcf	status,0,c
  2697  0017BC  360D               	rlcf	___aomod@divisor^0,f,c
  2698  0017BE  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2699  0017C0  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2700  0017C2  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2701  0017C4  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2702  0017C6  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2703  0017C8  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2704  0017CA  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2705  0017CC  2A15               	incf	___aomod@counter^0,f,c
  2706  0017CE                     l2302:
  2707  0017CE  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2708  0017D0  EFEC  F00B         	goto	u1821
  2709  0017D4  EFEE  F00B         	goto	u1820
  2710  0017D8                     u1821:
  2711  0017D8  EFDD  F00B         	goto	l2300
  2712  0017DC                     u1820:
  2713  0017DC                     l2304:
  2714  0017DC  500D               	movf	___aomod@divisor^0,w,c
  2715  0017DE  5C05               	subwf	___aomod@dividend^0,w,c
  2716  0017E0  500E               	movf	(___aomod@divisor+1)^0,w,c
  2717  0017E2  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2718  0017E4  500F               	movf	(___aomod@divisor+2)^0,w,c
  2719  0017E6  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2720  0017E8  5010               	movf	(___aomod@divisor+3)^0,w,c
  2721  0017EA  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2722  0017EC  5011               	movf	(___aomod@divisor+4)^0,w,c
  2723  0017EE  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2724  0017F0  5012               	movf	(___aomod@divisor+5)^0,w,c
  2725  0017F2  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2726  0017F4  5013               	movf	(___aomod@divisor+6)^0,w,c
  2727  0017F6  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2728  0017F8  5014               	movf	(___aomod@divisor+7)^0,w,c
  2729  0017FA  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2730  0017FC  A0D8               	btfss	status,0,c
  2731  0017FE  EF03  F00C         	goto	u1831
  2732  001802  EF05  F00C         	goto	u1830
  2733  001806                     u1831:
  2734  001806  EF15  F00C         	goto	l2308
  2735  00180A                     u1830:
  2736  00180A  500D               	movf	___aomod@divisor^0,w,c
  2737  00180C  5E05               	subwf	___aomod@dividend^0,f,c
  2738  00180E  500E               	movf	(___aomod@divisor+1)^0,w,c
  2739  001810  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2740  001812  500F               	movf	(___aomod@divisor+2)^0,w,c
  2741  001814  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2742  001816  5010               	movf	(___aomod@divisor+3)^0,w,c
  2743  001818  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2744  00181A  5011               	movf	(___aomod@divisor+4)^0,w,c
  2745  00181C  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2746  00181E  5012               	movf	(___aomod@divisor+5)^0,w,c
  2747  001820  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2748  001822  5013               	movf	(___aomod@divisor+6)^0,w,c
  2749  001824  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2750  001826  5014               	movf	(___aomod@divisor+7)^0,w,c
  2751  001828  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2752  00182A                     l2308:
  2753  00182A  90D8               	bcf	status,0,c
  2754  00182C  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2755  00182E  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2756  001830  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2757  001832  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2758  001834  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2759  001836  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2760  001838  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2761  00183A  320D               	rrcf	___aomod@divisor^0,f,c
  2762  00183C  2E15               	decfsz	___aomod@counter^0,f,c
  2763  00183E  EFEE  F00B         	goto	l2304
  2764  001842                     l2312:
  2765  001842  5016               	movf	___aomod@sign^0,w,c
  2766  001844  B4D8               	btfsc	status,2,c
  2767  001846  EF27  F00C         	goto	u1841
  2768  00184A  EF29  F00C         	goto	u1840
  2769  00184E                     u1841:
  2770  00184E  EF39  F00C         	goto	l2316
  2771  001852                     u1840:
  2772  001852  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2773  001854  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2774  001856  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2775  001858  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2776  00185A  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2777  00185C  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2778  00185E  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2779  001860  6C05               	negf	___aomod@dividend^0,c
  2780  001862  0E00               	movlw	0
  2781  001864  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2782  001866  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2783  001868  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2784  00186A  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2785  00186C  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2786  00186E  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2787  001870  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2788  001872                     l2316:
  2789  001872  C005  F005         	movff	___aomod@dividend,?___aomod
  2790  001876  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2791  00187A  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2792  00187E  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2793  001882  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2794  001886  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2795  00188A  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2796  00188E  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2797  001892  0012               	return		;funcret
  2798  001894                     __end_of___aomod:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function ___aodiv *****************
  2802 ;; Defined at:
  2803 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  dividend        8    4[COMRAM] long long 
  2806 ;;  divisor         8   12[COMRAM] long long 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  quotient        8   22[COMRAM] long long 
  2809 ;;  sign            1   21[COMRAM] unsigned char 
  2810 ;;  counter         1   20[COMRAM] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  8    4[COMRAM] long long 
  2813 ;; Registers used:
  2814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2820 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2821 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;Total ram usage:       26 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 4
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_dtoa
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text14
  2835  0015A8                     __ptext14:
  2836                           	callstack 0
  2837  0015A8                     ___aodiv:
  2838                           	callstack 21
  2839  0015A8  0E00               	movlw	0
  2840  0015AA  6E16               	movwf	___aodiv@sign^0,c
  2841  0015AC  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2842  0015AE  EFDD  F00A         	goto	u1720
  2843  0015B2  EFDB  F00A         	goto	u1721
  2844  0015B6                     u1721:
  2845  0015B6  EFEF  F00A         	goto	l2248
  2846  0015BA                     u1720:
  2847  0015BA  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2848  0015BC  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2849  0015BE  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2850  0015C0  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2851  0015C2  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2852  0015C4  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2853  0015C6  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2854  0015C8  6C0D               	negf	___aodiv@divisor^0,c
  2855  0015CA  0E00               	movlw	0
  2856  0015CC  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2857  0015CE  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2858  0015D0  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2859  0015D2  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2860  0015D4  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2861  0015D6  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2862  0015D8  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2863  0015DA  0E01               	movlw	1
  2864  0015DC  6E16               	movwf	___aodiv@sign^0,c
  2865  0015DE                     l2248:
  2866  0015DE  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2867  0015E0  EFF6  F00A         	goto	u1730
  2868  0015E4  EFF4  F00A         	goto	u1731
  2869  0015E8                     u1731:
  2870  0015E8  EF08  F00B         	goto	l2254
  2871  0015EC                     u1730:
  2872  0015EC  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2873  0015EE  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2874  0015F0  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2875  0015F2  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2876  0015F4  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2877  0015F6  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2878  0015F8  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2879  0015FA  6C05               	negf	___aodiv@dividend^0,c
  2880  0015FC  0E00               	movlw	0
  2881  0015FE  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2882  001600  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2883  001602  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2884  001604  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2885  001606  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2886  001608  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2887  00160A  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2888  00160C  0E01               	movlw	1
  2889  00160E  1A16               	xorwf	___aodiv@sign^0,f,c
  2890  001610                     l2254:
  2891  001610  EE20  F017         	lfsr	2,___aodiv@quotient
  2892  001614  0E07               	movlw	7
  2893  001616                     u1741:
  2894  001616  6ADE               	clrf	postinc2,c
  2895  001618  06E8               	decf	wreg,f,c
  2896  00161A  E2FD               	bc	u1741
  2897  00161C  500D               	movf	___aodiv@divisor^0,w,c
  2898  00161E  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2899  001620  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2900  001622  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2901  001624  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2902  001626  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2903  001628  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2904  00162A  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2905  00162C  B4D8               	btfsc	status,2,c
  2906  00162E  EF1B  F00B         	goto	u1751
  2907  001632  EF1D  F00B         	goto	u1750
  2908  001636                     u1751:
  2909  001636  EF6F  F00B         	goto	l2276
  2910  00163A                     u1750:
  2911  00163A  0E01               	movlw	1
  2912  00163C  6E15               	movwf	___aodiv@counter^0,c
  2913  00163E  EF2B  F00B         	goto	l2262
  2914  001642                     l2260:
  2915  001642  90D8               	bcf	status,0,c
  2916  001644  360D               	rlcf	___aodiv@divisor^0,f,c
  2917  001646  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2918  001648  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2919  00164A  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2920  00164C  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2921  00164E  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2922  001650  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2923  001652  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2924  001654  2A15               	incf	___aodiv@counter^0,f,c
  2925  001656                     l2262:
  2926  001656  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2927  001658  EF30  F00B         	goto	u1761
  2928  00165C  EF32  F00B         	goto	u1760
  2929  001660                     u1761:
  2930  001660  EF21  F00B         	goto	l2260
  2931  001664                     u1760:
  2932  001664                     l2264:
  2933  001664  90D8               	bcf	status,0,c
  2934  001666  3617               	rlcf	___aodiv@quotient^0,f,c
  2935  001668  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2936  00166A  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2937  00166C  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2938  00166E  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2939  001670  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2940  001672  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2941  001674  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2942  001676  500D               	movf	___aodiv@divisor^0,w,c
  2943  001678  5C05               	subwf	___aodiv@dividend^0,w,c
  2944  00167A  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2945  00167C  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2946  00167E  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2947  001680  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2948  001682  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2949  001684  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2950  001686  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2951  001688  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2952  00168A  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2953  00168C  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2954  00168E  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2955  001690  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2956  001692  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2957  001694  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2958  001696  A0D8               	btfss	status,0,c
  2959  001698  EF50  F00B         	goto	u1771
  2960  00169C  EF52  F00B         	goto	u1770
  2961  0016A0                     u1771:
  2962  0016A0  EF63  F00B         	goto	l2272
  2963  0016A4                     u1770:
  2964  0016A4  500D               	movf	___aodiv@divisor^0,w,c
  2965  0016A6  5E05               	subwf	___aodiv@dividend^0,f,c
  2966  0016A8  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2967  0016AA  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2968  0016AC  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2969  0016AE  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2970  0016B0  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2971  0016B2  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2972  0016B4  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2973  0016B6  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2974  0016B8  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2975  0016BA  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2976  0016BC  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2977  0016BE  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2978  0016C0  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2979  0016C2  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2980  0016C4  8017               	bsf	___aodiv@quotient^0,0,c
  2981  0016C6                     l2272:
  2982  0016C6  90D8               	bcf	status,0,c
  2983  0016C8  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2984  0016CA  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2985  0016CC  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2986  0016CE  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2987  0016D0  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2988  0016D2  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2989  0016D4  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2990  0016D6  320D               	rrcf	___aodiv@divisor^0,f,c
  2991  0016D8  2E15               	decfsz	___aodiv@counter^0,f,c
  2992  0016DA  EF32  F00B         	goto	l2264
  2993  0016DE                     l2276:
  2994  0016DE  5016               	movf	___aodiv@sign^0,w,c
  2995  0016E0  B4D8               	btfsc	status,2,c
  2996  0016E2  EF75  F00B         	goto	u1781
  2997  0016E6  EF77  F00B         	goto	u1780
  2998  0016EA                     u1781:
  2999  0016EA  EF87  F00B         	goto	l2280
  3000  0016EE                     u1780:
  3001  0016EE  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3002  0016F0  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3003  0016F2  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3004  0016F4  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3005  0016F6  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3006  0016F8  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3007  0016FA  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3008  0016FC  6C17               	negf	___aodiv@quotient^0,c
  3009  0016FE  0E00               	movlw	0
  3010  001700  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3011  001702  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3012  001704  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3013  001706  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3014  001708  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3015  00170A  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3016  00170C  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3017  00170E                     l2280:
  3018  00170E  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3019  001712  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3020  001716  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3021  00171A  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3022  00171E  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3023  001722  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3024  001726  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3025  00172A  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3026  00172E  0012               	return		;funcret
  3027  001730                     __end_of___aodiv:
  3028                           	callstack 0
  3029                           
  3030 ;; *************** function _i2c_init *****************
  3031 ;; Defined at:
  3032 ;;		line 43 in file "main.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;		None
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;Total ram usage:        0 bytes
  3051 ;; Hardware stack levels used: 1
  3052 ;; Hardware stack levels required when called: 4
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text15
  3061  001F48                     __ptext15:
  3062                           	callstack 0
  3063  001F48                     _i2c_init:
  3064                           	callstack 26
  3065  001F48                     
  3066                           ;main.c: 44:     TRISCbits.RC3=1;
  3067  001F48  8694               	bsf	148,3,c	;volatile
  3068                           
  3069                           ;main.c: 45:     TRISCbits.RC4=1;
  3070  001F4A  8894               	bsf	148,4,c	;volatile
  3071                           
  3072                           ;main.c: 47:     ANSELCbits.ANSC3 = 0;
  3073  001F4C  010F               	movlb	15	; () banked
  3074  001F4E  973A               	bcf	58,3,b	;volatile
  3075                           
  3076                           ;main.c: 48:     ANSELCbits.ANSC4 = 0;
  3077  001F50  993A               	bcf	58,4,b	;volatile
  3078  001F52                     
  3079                           ; BSR set to: 15
  3080                           ;main.c: 52:     SSP1ADD = 0x9F;
  3081  001F52  0E9F               	movlw	159
  3082  001F54  6EC8               	movwf	200,c	;volatile
  3083                           
  3084                           ;main.c: 53:     SSP1CON1 = 0x28;
  3085  001F56  0E28               	movlw	40
  3086  001F58  6EC6               	movwf	198,c	;volatile
  3087                           
  3088                           ;main.c: 54:     SSP1CON2 = 0;
  3089  001F5A  0E00               	movlw	0
  3090  001F5C  6EC5               	movwf	197,c	;volatile
  3091  001F5E                     
  3092                           ; BSR set to: 15
  3093  001F5E  0012               	return		;funcret
  3094  001F60                     __end_of_i2c_init:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _SYSTEM_Initialize *****************
  3098 ;; Defined at:
  3099 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;Total ram usage:        0 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 6
  3120 ;; This function calls:
  3121 ;;		_EUSART1_Initialize
  3122 ;;		_INTERRUPT_Initialize
  3123 ;;		_OSCILLATOR_Initialize
  3124 ;;		_PIN_MANAGER_Initialize
  3125 ;; This function is called by:
  3126 ;;		_main
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text16
  3131  001F60                     __ptext16:
  3132                           	callstack 0
  3133  001F60                     _SYSTEM_Initialize:
  3134                           	callstack 24
  3135  001F60                     
  3136                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3137  001F60  ECDD  F00F         	call	_INTERRUPT_Initialize	;wreg free
  3138  001F64                     
  3139                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3140  001F64  EC48  F00F         	call	_PIN_MANAGER_Initialize	;wreg free
  3141  001F68                     
  3142                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3143  001F68  EC88  F00F         	call	_OSCILLATOR_Initialize	;wreg free
  3144  001F6C                     
  3145                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  3146  001F6C  ECE5  F00D         	call	_EUSART1_Initialize	;wreg free
  3147  001F70  0012               	return		;funcret
  3148  001F72                     __end_of_SYSTEM_Initialize:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _PIN_MANAGER_Initialize *****************
  3152 ;; Defined at:
  3153 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;		None
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;Total ram usage:        0 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 4
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_SYSTEM_Initialize
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text17
  3182  001E90                     __ptext17:
  3183                           	callstack 0
  3184  001E90                     _PIN_MANAGER_Initialize:
  3185                           	callstack 25
  3186  001E90                     
  3187                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3188  001E90  0E00               	movlw	0
  3189  001E92  6E89               	movwf	137,c	;volatile
  3190                           
  3191                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3192  001E94  0E00               	movlw	0
  3193  001E96  6E8A               	movwf	138,c	;volatile
  3194                           
  3195                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3196  001E98  0E00               	movlw	0
  3197  001E9A  6E8B               	movwf	139,c	;volatile
  3198  001E9C                     
  3199                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  3200  001E9C  6892               	setf	146,c	;volatile
  3201                           
  3202                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  3203  001E9E  0EDF               	movlw	223
  3204  001EA0  6E93               	movwf	147,c	;volatile
  3205                           
  3206                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3207  001EA2  0EBF               	movlw	191
  3208  001EA4  6E94               	movwf	148,c	;volatile
  3209                           
  3210                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3211  001EA6  0E3C               	movlw	60
  3212  001EA8  010F               	movlb	15	; () banked
  3213  001EAA  6F3A               	movwf	58,b	;volatile
  3214                           
  3215                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x1F;
  3216  001EAC  0E1F               	movlw	31
  3217  001EAE  6F39               	movwf	57,b	;volatile
  3218                           
  3219                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3220  001EB0  0E2F               	movlw	47
  3221  001EB2  6F38               	movwf	56,b	;volatile
  3222                           
  3223                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3224  001EB4  0E00               	movlw	0
  3225  001EB6  6E61               	movwf	97,c	;volatile
  3226  001EB8                     
  3227                           ; BSR set to: 15
  3228                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3229  001EB8  8EF1               	bsf	241,7,c	;volatile
  3230  001EBA                     
  3231                           ; BSR set to: 15
  3232  001EBA  0012               	return		;funcret
  3233  001EBC                     __end_of_PIN_MANAGER_Initialize:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function _OSCILLATOR_Initialize *****************
  3237 ;; Defined at:
  3238 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;Total ram usage:        0 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 4
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_SYSTEM_Initialize
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text18
  3267  001F10                     __ptext18:
  3268                           	callstack 0
  3269  001F10                     _OSCILLATOR_Initialize:
  3270                           	callstack 25
  3271  001F10                     
  3272                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  3273  001F10  0E70               	movlw	112
  3274  001F12  6ED3               	movwf	211,c	;volatile
  3275                           
  3276                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  3277  001F14  0E04               	movlw	4
  3278  001F16  6ED2               	movwf	210,c	;volatile
  3279                           
  3280                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
  3281  001F18  0E40               	movlw	64
  3282  001F1A  6E9B               	movwf	155,c	;volatile
  3283  001F1C                     l22:
  3284                           
  3285                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
  3286  001F1C  AED2               	btfss	4050,7,c	;volatile
  3287  001F1E  EF93  F00F         	goto	u1371
  3288  001F22  EF95  F00F         	goto	u1370
  3289  001F26                     u1371:
  3290  001F26  EF8E  F00F         	goto	l22
  3291  001F2A                     u1370:
  3292  001F2A  0012               	return		;funcret
  3293  001F2C                     __end_of_OSCILLATOR_Initialize:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _INTERRUPT_Initialize *****************
  3297 ;; Defined at:
  3298 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		None
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;Total ram usage:        0 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 4
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_SYSTEM_Initialize
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text19
  3327  001FBA                     __ptext19:
  3328                           	callstack 0
  3329  001FBA                     _INTERRUPT_Initialize:
  3330                           	callstack 25
  3331  001FBA                     
  3332                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3333  001FBA  9ED0               	bcf	208,7,c	;volatile
  3334  001FBC  0012               	return		;funcret
  3335  001FBE                     __end_of_INTERRUPT_Initialize:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function _EUSART1_Initialize *****************
  3339 ;; Defined at:
  3340 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;		None
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;Total ram usage:        0 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; Hardware stack levels required when called: 5
  3361 ;; This function calls:
  3362 ;;		_EUSART1_SetErrorHandler
  3363 ;;		_EUSART1_SetFramingErrorHandler
  3364 ;;		_EUSART1_SetOverrunErrorHandler
  3365 ;;		_EUSART1_SetRxInterruptHandler
  3366 ;;		_EUSART1_SetTxInterruptHandler
  3367 ;; This function is called by:
  3368 ;;		_SYSTEM_Initialize
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text20
  3373  001BCA                     __ptext20:
  3374                           	callstack 0
  3375  001BCA                     _EUSART1_Initialize:
  3376                           	callstack 24
  3377  001BCA                     
  3378                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  3379  001BCA  9A9D               	bcf	157,5,c	;volatile
  3380  001BCC                     
  3381                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3382  001BCC  0E74               	movlw	low _EUSART1_Receive_ISR
  3383  001BCE  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  3384  001BD0  0E1A               	movlw	high _EUSART1_Receive_ISR
  3385  001BD2  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  3386  001BD4  ECC3  F00F         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3387  001BD8                     
  3388                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  3389  001BD8  989D               	bcf	157,4,c	;volatile
  3390                           
  3391                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  3392  001BDA  0E1A               	movlw	low _EUSART1_Transmit_ISR
  3393  001BDC  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  3394  001BDE  0E1E               	movlw	high _EUSART1_Transmit_ISR
  3395  001BE0  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  3396  001BE2  ECBE  F00F         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3397  001BE6                     
  3398                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  3399  001BE6  0E08               	movlw	8
  3400  001BE8  6EB8               	movwf	184,c	;volatile
  3401  001BEA                     
  3402                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  3403  001BEA  0E90               	movlw	144
  3404  001BEC  6EAB               	movwf	171,c	;volatile
  3405  001BEE                     
  3406                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  3407  001BEE  0E24               	movlw	36
  3408  001BF0  6EAC               	movwf	172,c	;volatile
  3409  001BF2                     
  3410                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x82;
  3411  001BF2  0E82               	movlw	130
  3412  001BF4  6EAF               	movwf	175,c	;volatile
  3413  001BF6                     
  3414                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x06;
  3415  001BF6  0E06               	movlw	6
  3416  001BF8  6EB0               	movwf	176,c	;volatile
  3417  001BFA                     
  3418                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3419  001BFA  0EBE               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3420  001BFC  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3421  001BFE  0E1F               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3422  001C00  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3423  001C02  ECCD  F00F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3424  001C06                     
  3425                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3426  001C06  0EAE               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3427  001C08  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3428  001C0A  0E1F               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3429  001C0C  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3430  001C0E  ECC8  F00F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3431  001C12                     
  3432                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3433  001C12  0EB4               	movlw	low _EUSART1_DefaultErrorHandler
  3434  001C14  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3435  001C16  0E1F               	movlw	high _EUSART1_DefaultErrorHandler
  3436  001C18  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3437  001C1A  ECD2  F00F         	call	_EUSART1_SetErrorHandler	;wreg free
  3438                           
  3439                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3440  001C1E  0E00               	movlw	0
  3441  001C20  0100               	movlb	0	; () banked
  3442  001C22  6F76               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3443                           
  3444                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3445  001C24  0E00               	movlw	0
  3446  001C26  6E58               	movwf	_eusart1TxHead^0,c	;volatile
  3447                           
  3448                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3449  001C28  0E00               	movlw	0
  3450  001C2A  6E57               	movwf	_eusart1TxTail^0,c	;volatile
  3451                           
  3452                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3453  001C2C  0E40               	movlw	64
  3454  001C2E  6E56               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  3455                           
  3456                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3457  001C30  0E00               	movlw	0
  3458  001C32  6E55               	movwf	_eusart1RxHead^0,c	;volatile
  3459                           
  3460                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3461  001C34  0E00               	movlw	0
  3462  001C36  6E54               	movwf	_eusart1RxTail^0,c	;volatile
  3463                           
  3464                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3465  001C38  0E00               	movlw	0
  3466  001C3A  6F77               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3467  001C3C                     
  3468                           ; BSR set to: 0
  3469                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  3470  001C3C  8A9D               	bsf	157,5,c	;volatile
  3471  001C3E                     
  3472                           ; BSR set to: 0
  3473  001C3E  0012               	return		;funcret
  3474  001C40                     __end_of_EUSART1_Initialize:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3478 ;; Defined at:
  3479 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3482 ;;		 -> EUSART1_Transmit_ISR(1), 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;Total ram usage:        2 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; Hardware stack levels required when called: 4
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_EUSART1_Initialize
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text21
  3509  001F7C                     __ptext21:
  3510                           	callstack 0
  3511  001F7C                     _EUSART1_SetTxInterruptHandler:
  3512                           	callstack 24
  3513  001F7C                     
  3514                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3515  001F7C  C005  F074         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3516  001F80  C006  F075         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3517  001F84  0012               	return		;funcret
  3518  001F86                     __end_of_EUSART1_SetTxInterruptHandler:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3522 ;; Defined at:
  3523 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3526 ;;		 -> EUSART1_Receive_ISR(1), 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;Total ram usage:        2 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; Hardware stack levels required when called: 4
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_EUSART1_Initialize
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text22
  3553  001F86                     __ptext22:
  3554                           	callstack 0
  3555  001F86                     _EUSART1_SetRxInterruptHandler:
  3556                           	callstack 24
  3557  001F86                     
  3558                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3559  001F86  C005  F072         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3560  001F8A  C006  F073         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3561  001F8E  0012               	return		;funcret
  3562  001F90                     __end_of_EUSART1_SetRxInterruptHandler:
  3563                           	callstack 0
  3564                           
  3565 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3566 ;; Defined at:
  3567 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3570 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;Total ram usage:        2 bytes
  3587 ;; Hardware stack levels used: 1
  3588 ;; Hardware stack levels required when called: 4
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_EUSART1_Initialize
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text23
  3597  001F90                     __ptext23:
  3598                           	callstack 0
  3599  001F90                     _EUSART1_SetOverrunErrorHandler:
  3600                           	callstack 24
  3601  001F90                     
  3602                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  3603  001F90  C005  F06E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3604  001F94  C006  F06F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3605  001F98  0012               	return		;funcret
  3606  001F9A                     __end_of_EUSART1_SetOverrunErrorHandler:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3610 ;; Defined at:
  3611 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3614 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;Total ram usage:        2 bytes
  3631 ;; Hardware stack levels used: 1
  3632 ;; Hardware stack levels required when called: 4
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_EUSART1_Initialize
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text24
  3641  001F9A                     __ptext24:
  3642                           	callstack 0
  3643  001F9A                     _EUSART1_SetFramingErrorHandler:
  3644                           	callstack 24
  3645  001F9A                     
  3646                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  3647  001F9A  C005  F070         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3648  001F9E  C006  F071         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3649  001FA2  0012               	return		;funcret
  3650  001FA4                     __end_of_EUSART1_SetFramingErrorHandler:
  3651                           	callstack 0
  3652                           
  3653 ;; *************** function _EUSART1_SetErrorHandler *****************
  3654 ;; Defined at:
  3655 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3658 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;Total ram usage:        2 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 4
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_EUSART1_Initialize
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           	psect	text25
  3685  001FA4                     __ptext25:
  3686                           	callstack 0
  3687  001FA4                     _EUSART1_SetErrorHandler:
  3688                           	callstack 24
  3689  001FA4                     
  3690                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  3691  001FA4  C005  F06C         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3692  001FA8  C006  F06D         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3693  001FAC  0012               	return		;funcret
  3694  001FAE                     __end_of_EUSART1_SetErrorHandler:
  3695                           	callstack 0
  3696                           
  3697 ;; *************** function _INTERRUPT_InterruptManager *****************
  3698 ;; Defined at:
  3699 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;Total ram usage:        4 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; Hardware stack levels required when called: 3
  3720 ;; This function calls:
  3721 ;;		Absolute function
  3722 ;;		_EUSART1_Receive_ISR
  3723 ;;		_EUSART1_Transmit_ISR
  3724 ;; This function is called by:
  3725 ;;		Interrupt level 2
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	intcode
  3730  000008                     __pintcode:
  3731                           	callstack 0
  3732  000008                     _INTERRUPT_InterruptManager:
  3733                           	callstack 17
  3734                           
  3735                           ;incstack = 0
  3736  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3737  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3738  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3739  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3740  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3741  00001A                     
  3742                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  3743  00001A  ACF2               	btfss	242,6,c	;volatile
  3744  00001C  EF12  F000         	goto	i2u156_41
  3745  000020  EF14  F000         	goto	i2u156_40
  3746  000024                     i2u156_41:
  3747  000024  EF4E  F000         	goto	i2l231
  3748  000028                     i2u156_40:
  3749  000028                     
  3750                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  3751  000028  A89D               	btfss	157,4,c	;volatile
  3752  00002A  EF19  F000         	goto	i2u157_41
  3753  00002E  EF1B  F000         	goto	i2u157_40
  3754  000032                     i2u157_41:
  3755  000032  EF31  F000         	goto	i2l226
  3756  000036                     i2u157_40:
  3757  000036  A89E               	btfss	158,4,c	;volatile
  3758  000038  EF20  F000         	goto	i2u158_41
  3759  00003C  EF22  F000         	goto	i2u158_40
  3760  000040                     i2u158_41:
  3761  000040  EF31  F000         	goto	i2l226
  3762  000044                     i2u158_40:
  3763  000044                     
  3764                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  3765  000044  D802               	call	i2u159_48
  3766  000046  EF2F  F000         	goto	i2u159_49
  3767  00004A                     i2u159_48:
  3768  00004A  0005               	push	
  3769  00004C  6EFA               	movwf	pclath,c
  3770  00004E  0100               	movlb	0	; () banked
  3771  000050  5174               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  3772  000052  6EFD               	movwf	tosl,c
  3773  000054  5175               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  3774  000056  6EFE               	movwf	tosh,c
  3775  000058  6AFF               	clrf	tosu,c
  3776  00005A  50FA               	movf	pclath,w,c
  3777  00005C  0012               	return		;indir
  3778  00005E                     i2u159_49:
  3779                           
  3780                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  3781  00005E  EF4E  F000         	goto	i2l231
  3782  000062                     i2l226:
  3783  000062  AA9D               	btfss	157,5,c	;volatile
  3784  000064  EF36  F000         	goto	i2u160_41
  3785  000068  EF38  F000         	goto	i2u160_40
  3786  00006C                     i2u160_41:
  3787  00006C  EF4E  F000         	goto	i2l227
  3788  000070                     i2u160_40:
  3789  000070  AA9E               	btfss	158,5,c	;volatile
  3790  000072  EF3D  F000         	goto	i2u161_41
  3791  000076  EF3F  F000         	goto	i2u161_40
  3792  00007A                     i2u161_41:
  3793  00007A  EF4E  F000         	goto	i2l227
  3794  00007E                     i2u161_40:
  3795  00007E                     
  3796                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  3797  00007E  D802               	call	i2u162_48
  3798  000080  EF4C  F000         	goto	i2u162_49
  3799  000084                     i2u162_48:
  3800  000084  0005               	push	
  3801  000086  6EFA               	movwf	pclath,c
  3802  000088  0100               	movlb	0	; () banked
  3803  00008A  5172               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  3804  00008C  6EFD               	movwf	tosl,c
  3805  00008E  5173               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  3806  000090  6EFE               	movwf	tosh,c
  3807  000092  6AFF               	clrf	tosu,c
  3808  000094  50FA               	movf	pclath,w,c
  3809  000096  0012               	return		;indir
  3810  000098                     i2u162_49:
  3811                           
  3812                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  3813  000098  EF4E  F000         	goto	i2l231
  3814  00009C                     i2l227:
  3815  00009C                     i2l231:
  3816  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3817  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3818  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3819  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3820  0000AC  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3821  0000AE  0011               	retfie		f
  3822  0000B0                     __end_of_INTERRUPT_InterruptManager:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _EUSART1_Transmit_ISR *****************
  3826 ;; Defined at:
  3827 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_EUSART1_Initialize
  3851 ;;		_INTERRUPT_InterruptManager
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text27
  3856  001E1A                     __ptext27:
  3857                           	callstack 0
  3858  001E1A                     _EUSART1_Transmit_ISR:
  3859                           	callstack 19
  3860  001E1A                     
  3861                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  3862  001E1A  0E40               	movlw	64
  3863  001E1C  6056               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  3864  001E1E  EF13  F00F         	goto	i2u140_41
  3865  001E22  EF15  F00F         	goto	i2u140_40
  3866  001E26                     i2u140_41:
  3867  001E26  EF2B  F00F         	goto	i2l167
  3868  001E2A                     i2u140_40:
  3869  001E2A                     
  3870                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  3871  001E2A  0E80               	movlw	low _eusart1TxBuffer
  3872  001E2C  2457               	addwf	_eusart1TxTail^0,w,c	;volatile
  3873  001E2E  6ED9               	movwf	fsr2l,c
  3874  001E30  6ADA               	clrf	fsr2h,c
  3875  001E32  0E01               	movlw	high _eusart1TxBuffer
  3876  001E34  22DA               	addwfc	fsr2h,f,c
  3877  001E36  50DF               	movf	indf2,w,c
  3878  001E38  6EAD               	movwf	173,c	;volatile
  3879  001E3A  2A57               	incf	_eusart1TxTail^0,f,c	;volatile
  3880  001E3C                     
  3881                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  3882  001E3C  0E3F               	movlw	63
  3883  001E3E  6457               	cpfsgt	_eusart1TxTail^0,c	;volatile
  3884  001E40  EF24  F00F         	goto	i2u141_41
  3885  001E44  EF26  F00F         	goto	i2u141_40
  3886  001E48                     i2u141_41:
  3887  001E48  EF28  F00F         	goto	i2l2080
  3888  001E4C                     i2u141_40:
  3889  001E4C                     
  3890                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  3891  001E4C  0E00               	movlw	0
  3892  001E4E  6E57               	movwf	_eusart1TxTail^0,c	;volatile
  3893  001E50                     i2l2080:
  3894                           
  3895                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  3896  001E50  2A56               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  3897                           
  3898                           ;mcc_generated_files/eusart1.c: 218:     }
  3899  001E52  EF2C  F00F         	goto	i2l170
  3900  001E56                     i2l167:
  3901                           
  3902                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  3903  001E56  989D               	bcf	157,4,c	;volatile
  3904  001E58                     i2l170:
  3905  001E58  0012               	return		;funcret
  3906  001E5A                     __end_of_EUSART1_Transmit_ISR:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function _EUSART1_Receive_ISR *****************
  3910 ;; Defined at:
  3911 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;Total ram usage:        0 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; Hardware stack levels required when called: 2
  3932 ;; This function calls:
  3933 ;;		Absolute function
  3934 ;;		_EUSART1_DefaultErrorHandler
  3935 ;;		_EUSART1_DefaultFramingErrorHandler
  3936 ;;		_EUSART1_DefaultOverrunErrorHandler
  3937 ;;		_EUSART1_RxDataHandler
  3938 ;; This function is called by:
  3939 ;;		_EUSART1_Initialize
  3940 ;;		_INTERRUPT_InterruptManager
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text28
  3945  001A74                     __ptext28:
  3946                           	callstack 0
  3947  001A74                     _EUSART1_Receive_ISR:
  3948                           	callstack 17
  3949  001A74                     
  3950                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  3951  001A74  0E00               	movlw	low _eusart1RxStatusBuffer
  3952  001A76  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
  3953  001A78  6ED9               	movwf	fsr2l,c
  3954  001A7A  6ADA               	clrf	fsr2h,c
  3955  001A7C  0E01               	movlw	high _eusart1RxStatusBuffer
  3956  001A7E  22DA               	addwfc	fsr2h,f,c
  3957  001A80  0E00               	movlw	0
  3958  001A82  6EDF               	movwf	indf2,c
  3959  001A84                     
  3960                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  3961  001A84  A4AB               	btfss	171,2,c	;volatile
  3962  001A86  EF47  F00D         	goto	i2u142_41
  3963  001A8A  EF49  F00D         	goto	i2u142_40
  3964  001A8E                     i2u142_41:
  3965  001A8E  EF5E  F00D         	goto	i2l2090
  3966  001A92                     i2u142_40:
  3967  001A92                     
  3968                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  3969  001A92  0E00               	movlw	low _eusart1RxStatusBuffer
  3970  001A94  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
  3971  001A96  6ED9               	movwf	fsr2l,c
  3972  001A98  6ADA               	clrf	fsr2h,c
  3973  001A9A  0E01               	movlw	high _eusart1RxStatusBuffer
  3974  001A9C  22DA               	addwfc	fsr2h,f,c
  3975  001A9E  0101               	movlb	1	; () banked
  3976  001AA0  82DF               	bsf	indf2,1,c
  3977  001AA2                     
  3978                           ; BSR set to: 1
  3979                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  3980  001AA2  D802               	call	i2u143_48
  3981  001AA4  EF5E  F00D         	goto	i2u143_49
  3982  001AA8                     i2u143_48:
  3983  001AA8  0005               	push	
  3984  001AAA  6EFA               	movwf	pclath,c
  3985  001AAC  0100               	movlb	0	; () banked
  3986  001AAE  5170               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  3987  001AB0  6EFD               	movwf	tosl,c
  3988  001AB2  5171               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  3989  001AB4  6EFE               	movwf	tosh,c
  3990  001AB6  6AFF               	clrf	tosu,c
  3991  001AB8  50FA               	movf	pclath,w,c
  3992  001ABA  0012               	return		;indir
  3993  001ABC                     i2u143_49:
  3994  001ABC                     i2l2090:
  3995                           
  3996                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  3997  001ABC  A2AB               	btfss	171,1,c	;volatile
  3998  001ABE  EF63  F00D         	goto	i2u144_41
  3999  001AC2  EF65  F00D         	goto	i2u144_40
  4000  001AC6                     i2u144_41:
  4001  001AC6  EF7A  F00D         	goto	i2l2096
  4002  001ACA                     i2u144_40:
  4003  001ACA                     
  4004                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  4005  001ACA  0E00               	movlw	low _eusart1RxStatusBuffer
  4006  001ACC  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
  4007  001ACE  6ED9               	movwf	fsr2l,c
  4008  001AD0  6ADA               	clrf	fsr2h,c
  4009  001AD2  0E01               	movlw	high _eusart1RxStatusBuffer
  4010  001AD4  22DA               	addwfc	fsr2h,f,c
  4011  001AD6  0101               	movlb	1	; () banked
  4012  001AD8  84DF               	bsf	indf2,2,c
  4013  001ADA                     
  4014                           ; BSR set to: 1
  4015                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  4016  001ADA  D802               	call	i2u145_48
  4017  001ADC  EF7A  F00D         	goto	i2u145_49
  4018  001AE0                     i2u145_48:
  4019  001AE0  0005               	push	
  4020  001AE2  6EFA               	movwf	pclath,c
  4021  001AE4  0100               	movlb	0	; () banked
  4022  001AE6  516E               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  4023  001AE8  6EFD               	movwf	tosl,c
  4024  001AEA  516F               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  4025  001AEC  6EFE               	movwf	tosh,c
  4026  001AEE  6AFF               	clrf	tosu,c
  4027  001AF0  50FA               	movf	pclath,w,c
  4028  001AF2  0012               	return		;indir
  4029  001AF4                     i2u145_49:
  4030  001AF4                     i2l2096:
  4031                           
  4032                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  4033  001AF4  0E00               	movlw	low _eusart1RxStatusBuffer
  4034  001AF6  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
  4035  001AF8  6ED9               	movwf	fsr2l,c
  4036  001AFA  6ADA               	clrf	fsr2h,c
  4037  001AFC  0E01               	movlw	high _eusart1RxStatusBuffer
  4038  001AFE  22DA               	addwfc	fsr2h,f,c
  4039  001B00  50DF               	movf	indf2,w,c
  4040  001B02  B4D8               	btfsc	status,2,c
  4041  001B04  EF86  F00D         	goto	i2u146_41
  4042  001B08  EF88  F00D         	goto	i2u146_40
  4043  001B0C                     i2u146_41:
  4044  001B0C  EF97  F00D         	goto	i2l2100
  4045  001B10                     i2u146_40:
  4046  001B10                     
  4047                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  4048  001B10  D802               	call	i2u147_48
  4049  001B12  EF95  F00D         	goto	i2u147_49
  4050  001B16                     i2u147_48:
  4051  001B16  0005               	push	
  4052  001B18  6EFA               	movwf	pclath,c
  4053  001B1A  0100               	movlb	0	; () banked
  4054  001B1C  516C               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  4055  001B1E  6EFD               	movwf	tosl,c
  4056  001B20  516D               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  4057  001B22  6EFE               	movwf	tosh,c
  4058  001B24  6AFF               	clrf	tosu,c
  4059  001B26  50FA               	movf	pclath,w,c
  4060  001B28  0012               	return		;indir
  4061  001B2A                     i2u147_49:
  4062                           
  4063                           ;mcc_generated_files/eusart1.c: 242:     } else {
  4064  001B2A  EF99  F00D         	goto	i2l177
  4065  001B2E                     i2l2100:
  4066                           
  4067                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  4068  001B2E  EC5E  F00F         	call	_EUSART1_RxDataHandler	;wreg free
  4069  001B32                     i2l177:
  4070  001B32  0012               	return		;funcret
  4071  001B34                     __end_of_EUSART1_Receive_ISR:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  4075 ;; Defined at:
  4076 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		None
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;Total ram usage:        0 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_EUSART1_Initialize
  4100 ;;		_EUSART1_Receive_ISR
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text29
  4105  001FAE                     __ptext29:
  4106                           	callstack 0
  4107  001FAE                     _EUSART1_DefaultOverrunErrorHandler:
  4108                           	callstack 18
  4109  001FAE                     
  4110                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  4111  001FAE  98AB               	bcf	171,4,c	;volatile
  4112                           
  4113                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  4114  001FB0  88AB               	bsf	171,4,c	;volatile
  4115  001FB2  0012               	return		;funcret
  4116  001FB4                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  4117                           	callstack 0
  4118                           
  4119 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4120 ;; Defined at:
  4121 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		None
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_EUSART1_Initialize
  4145 ;;		_EUSART1_Receive_ISR
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text30
  4150  001FBE                     __ptext30:
  4151                           	callstack 0
  4152  001FBE                     _EUSART1_DefaultFramingErrorHandler:
  4153                           	callstack 18
  4154  001FBE  0012               	return		;funcret
  4155  001FC0                     __end_of_EUSART1_DefaultFramingErrorHandler:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  4159 ;; Defined at:
  4160 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;		None
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;Total ram usage:        0 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; Hardware stack levels required when called: 1
  4181 ;; This function calls:
  4182 ;;		_EUSART1_RxDataHandler
  4183 ;; This function is called by:
  4184 ;;		_EUSART1_Initialize
  4185 ;;		_EUSART1_Receive_ISR
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text31
  4190  001FB4                     __ptext31:
  4191                           	callstack 0
  4192  001FB4                     _EUSART1_DefaultErrorHandler:
  4193                           	callstack 17
  4194  001FB4                     
  4195                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  4196  001FB4  EC5E  F00F         	call	_EUSART1_RxDataHandler	;wreg free
  4197  001FB8  0012               	return		;funcret
  4198  001FBA                     __end_of_EUSART1_DefaultErrorHandler:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _EUSART1_RxDataHandler *****************
  4202 ;; Defined at:
  4203 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      void 
  4210 ;; Registers used:
  4211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used: 1
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_EUSART1_Receive_ISR
  4227 ;;		_EUSART1_DefaultErrorHandler
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text32
  4232  001EBC                     __ptext32:
  4233                           	callstack 0
  4234  001EBC                     _EUSART1_RxDataHandler:
  4235                           	callstack 18
  4236  001EBC                     
  4237                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  4238  001EBC  0E40               	movlw	low _eusart1RxBuffer
  4239  001EBE  2455               	addwf	_eusart1RxHead^0,w,c	;volatile
  4240  001EC0  6ED9               	movwf	fsr2l,c
  4241  001EC2  6ADA               	clrf	fsr2h,c
  4242  001EC4  0E01               	movlw	high _eusart1RxBuffer
  4243  001EC6  22DA               	addwfc	fsr2h,f,c
  4244  001EC8  CFAE FFDF          	movff	4014,indf2	;volatile
  4245  001ECC  2A55               	incf	_eusart1RxHead^0,f,c	;volatile
  4246  001ECE                     
  4247                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4248  001ECE  0E3F               	movlw	63
  4249  001ED0  6455               	cpfsgt	_eusart1RxHead^0,c	;volatile
  4250  001ED2  EF6D  F00F         	goto	i2u135_41
  4251  001ED6  EF6F  F00F         	goto	i2u135_40
  4252  001EDA                     i2u135_41:
  4253  001EDA  EF71  F00F         	goto	i2l1986
  4254  001EDE                     i2u135_40:
  4255  001EDE                     
  4256                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  4257  001EDE  0E00               	movlw	0
  4258  001EE0  6E55               	movwf	_eusart1RxHead^0,c	;volatile
  4259  001EE2                     i2l1986:
  4260                           
  4261                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  4262  001EE2  0100               	movlb	0	; () banked
  4263  001EE4  2B77               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  4264  001EE6                     
  4265                           ; BSR set to: 0
  4266  001EE6  0012               	return		;funcret
  4267  001EE8                     __end_of_EUSART1_RxDataHandler:
  4268                           	callstack 0
  4269                           
  4270                           	psect	text33
  4271  000000                     __ptext33:
  4272                           	callstack 0
  4273  000000                     
  4274                           	psect	rparam
  4275  0000                     
  4276                           	psect	temp
  4277  000059                     btemp:
  4278                           	callstack 0
  4279  000059                     	ds	1
  4280  0000                     int$flags	set	btemp
  4281  0000                     wtemp8	set	btemp+1
  4282  0000                     ttemp5	set	btemp+1
  4283  0000                     ttemp6	set	btemp+4
  4284  0000                     ttemp7	set	btemp+8
  4285                           
  4286                           	psect	idloc
  4287                           
  4288                           ;Config register IDLOC0 @ 0x200000
  4289                           ;	unspecified, using default values
  4290  200000                     	org	2097152
  4291  200000  FF                 	db	255
  4292                           
  4293                           ;Config register IDLOC1 @ 0x200001
  4294                           ;	unspecified, using default values
  4295  200001                     	org	2097153
  4296  200001  FF                 	db	255
  4297                           
  4298                           ;Config register IDLOC2 @ 0x200002
  4299                           ;	unspecified, using default values
  4300  200002                     	org	2097154
  4301  200002  FF                 	db	255
  4302                           
  4303                           ;Config register IDLOC3 @ 0x200003
  4304                           ;	unspecified, using default values
  4305  200003                     	org	2097155
  4306  200003  FF                 	db	255
  4307                           
  4308                           ;Config register IDLOC4 @ 0x200004
  4309                           ;	unspecified, using default values
  4310  200004                     	org	2097156
  4311  200004  FF                 	db	255
  4312                           
  4313                           ;Config register IDLOC5 @ 0x200005
  4314                           ;	unspecified, using default values
  4315  200005                     	org	2097157
  4316  200005  FF                 	db	255
  4317                           
  4318                           ;Config register IDLOC6 @ 0x200006
  4319                           ;	unspecified, using default values
  4320  200006                     	org	2097158
  4321  200006  FF                 	db	255
  4322                           
  4323                           ;Config register IDLOC7 @ 0x200007
  4324                           ;	unspecified, using default values
  4325  200007                     	org	2097159
  4326  200007  FF                 	db	255
  4327                           
  4328                           	psect	config
  4329                           
  4330                           ; Padding undefined space
  4331  300000                     	org	3145728
  4332  300000  FF                 	db	255
  4333                           
  4334                           ;Config register CONFIG1H @ 0x300001
  4335                           ;	Oscillator Selection bits
  4336                           ;	FOSC = INTIO67, Internal oscillator block
  4337                           ;	4X PLL Enable
  4338                           ;	PLLCFG = OFF, Oscillator used directly
  4339                           ;	Primary clock enable bit
  4340                           ;	PRICLKEN = ON, Primary clock enabled
  4341                           ;	Fail-Safe Clock Monitor Enable bit
  4342                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4343                           ;	Internal/External Oscillator Switchover bit
  4344                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4345  300001                     	org	3145729
  4346  300001  28                 	db	40
  4347                           
  4348                           ;Config register CONFIG2L @ 0x300002
  4349                           ;	Power-up Timer Enable bit
  4350                           ;	PWRTEN = OFF, Power up timer disabled
  4351                           ;	Brown-out Reset Enable bits
  4352                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4353                           ;	Brown Out Reset Voltage bits
  4354                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4355  300002                     	org	3145730
  4356  300002  1F                 	db	31
  4357                           
  4358                           ;Config register CONFIG2H @ 0x300003
  4359                           ;	Watchdog Timer Enable bits
  4360                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4361                           ;	Watchdog Timer Postscale Select bits
  4362                           ;	WDTPS = 32768, 1:32768
  4363  300003                     	org	3145731
  4364  300003  3C                 	db	60
  4365                           
  4366                           ; Padding undefined space
  4367  300004                     	org	3145732
  4368  300004  FF                 	db	255
  4369                           
  4370                           ;Config register CONFIG3H @ 0x300005
  4371                           ;	CCP2 MUX bit
  4372                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4373                           ;	PORTB A/D Enable bit
  4374                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4375                           ;	P3A/CCP3 Mux bit
  4376                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4377                           ;	HFINTOSC Fast Start-up
  4378                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4379                           ;	Timer3 Clock input mux bit
  4380                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4381                           ;	ECCP2 B output mux bit
  4382                           ;	P2BMX = PORTB5, P2B is on RB5
  4383                           ;	MCLR Pin Enable bit
  4384                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4385  300005                     	org	3145733
  4386  300005  BF                 	db	191
  4387                           
  4388                           ;Config register CONFIG4L @ 0x300006
  4389                           ;	Stack Full/Underflow Reset Enable bit
  4390                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4391                           ;	Single-Supply ICSP Enable bit
  4392                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4393                           ;	Extended Instruction Set Enable bit
  4394                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4395                           ;	Background Debug
  4396                           ;	DEBUG = OFF, Disabled
  4397  300006                     	org	3145734
  4398  300006  85                 	db	133
  4399                           
  4400                           ; Padding undefined space
  4401  300007                     	org	3145735
  4402  300007  FF                 	db	255
  4403                           
  4404                           ;Config register CONFIG5L @ 0x300008
  4405                           ;	Code Protection Block 0
  4406                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4407                           ;	Code Protection Block 1
  4408                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4409                           ;	Code Protection Block 2
  4410                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4411                           ;	Code Protection Block 3
  4412                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4413  300008                     	org	3145736
  4414  300008  0F                 	db	15
  4415                           
  4416                           ;Config register CONFIG5H @ 0x300009
  4417                           ;	Boot Block Code Protection bit
  4418                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4419                           ;	Data EEPROM Code Protection bit
  4420                           ;	CPD = OFF, Data EEPROM not code-protected
  4421  300009                     	org	3145737
  4422  300009  C0                 	db	192
  4423                           
  4424                           ;Config register CONFIG6L @ 0x30000A
  4425                           ;	Write Protection Block 0
  4426                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4427                           ;	Write Protection Block 1
  4428                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4429                           ;	Write Protection Block 2
  4430                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4431                           ;	Write Protection Block 3
  4432                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4433  30000A                     	org	3145738
  4434  30000A  0F                 	db	15
  4435                           
  4436                           ;Config register CONFIG6H @ 0x30000B
  4437                           ;	Configuration Register Write Protection bit
  4438                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4439                           ;	Boot Block Write Protection bit
  4440                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4441                           ;	Data EEPROM Write Protection bit
  4442                           ;	WRTD = OFF, Data EEPROM not write-protected
  4443  30000B                     	org	3145739
  4444  30000B  E0                 	db	224
  4445                           
  4446                           ;Config register CONFIG7L @ 0x30000C
  4447                           ;	Table Read Protection Block 0
  4448                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4449                           ;	Table Read Protection Block 1
  4450                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4451                           ;	Table Read Protection Block 2
  4452                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4453                           ;	Table Read Protection Block 3
  4454                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4455  30000C                     	org	3145740
  4456  30000C  0F                 	db	15
  4457                           
  4458                           ;Config register CONFIG7H @ 0x30000D
  4459                           ;	Boot Block Table Read Protection bit
  4460                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4461  30000D                     	org	3145741
  4462  30000D  40                 	db	64
  4463                           tosu	equ	0xFFF
  4464                           tosh	equ	0xFFE
  4465                           tosl	equ	0xFFD
  4466                           stkptr	equ	0xFFC
  4467                           pclatu	equ	0xFFB
  4468                           pclath	equ	0xFFA
  4469                           pcl	equ	0xFF9
  4470                           tblptru	equ	0xFF8
  4471                           tblptrh	equ	0xFF7
  4472                           tblptrl	equ	0xFF6
  4473                           tablat	equ	0xFF5
  4474                           prodh	equ	0xFF4
  4475                           prodl	equ	0xFF3
  4476                           indf0	equ	0xFEF
  4477                           postinc0	equ	0xFEE
  4478                           postdec0	equ	0xFED
  4479                           preinc0	equ	0xFEC
  4480                           plusw0	equ	0xFEB
  4481                           fsr0h	equ	0xFEA
  4482                           fsr0l	equ	0xFE9
  4483                           wreg	equ	0xFE8
  4484                           indf1	equ	0xFE7
  4485                           postinc1	equ	0xFE6
  4486                           postdec1	equ	0xFE5
  4487                           preinc1	equ	0xFE4
  4488                           plusw1	equ	0xFE3
  4489                           fsr1h	equ	0xFE2
  4490                           fsr1l	equ	0xFE1
  4491                           bsr	equ	0xFE0
  4492                           indf2	equ	0xFDF
  4493                           postinc2	equ	0xFDE
  4494                           postdec2	equ	0xFDD
  4495                           preinc2	equ	0xFDC
  4496                           plusw2	equ	0xFDB
  4497                           fsr2h	equ	0xFDA
  4498                           fsr2l	equ	0xFD9
  4499                           status	equ	0xFD8

Data Sizes:
    Strings     73
    Constant    0
    Data        27
    BSS         253
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     83      88
    BANK0           160     28     111
    BANK1           256      0     192
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1387_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_3(CODE[26]), STR_2(CODE[24]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    i2c_write_serial@data	PTR unsigned char  size(2) Largest target is 18
		 -> temp_string(BANK0[18]), first_line(BANK0[2]), display_init(BANK0[4]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_i2c_write_serial
    _i2c_write_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_i2c_write_serial
    _i2c_write_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9918
                  _SYSTEM_Initialize
                           _i2c_init
                   _i2c_write_serial
 ---------------------------------------------------------------------------------
 (1) _i2c_write_serial                                     8     5      3    9428
                                             81 COMRAM     2     2      0
                                             22 BANK0      6     3      3
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6    8538
                                             79 COMRAM     2     2      0
                                             16 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8187
                                             77 COMRAM     2     2      0
                                             10 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    7681
                                             69 COMRAM     8     2      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5683
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3417
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _i2c_init
   _i2c_write_serial
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
               _strlen
           _fputc

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C0       7       75.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      6F       5       69.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     53      58       1       93.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     187      12        0.0%
DATA                 0      0     187       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 19:47:50 2021

                      _eusart1TxBufferRemaining 0056                                              l22 1F1C  
                                            l25 1F2A                                              l19 1F70  
                                            l52 1EBA                                             l202 1F84  
                                           l130 1C3E                                             l220 1FBC  
                                           l205 1F8E                                             l302 199E  
                                           l305 19AC                                             l154 1CB6  
                                           l155 1CCC                                             l164 1F7A  
                                           l158 1CF8                                             l193 1FA2  
                                           l290 18C6                                             l196 1F98  
                                           l284 1F5E                                             l292 18D4  
                                           l293 18D8                                             l462 1892  
                                           l278 1D42                                             l199 1FAC  
                                           l287 18A0                                             l279 1D42  
                                           l296 199C                                             l449 172E  
                                           l289 18C4                                             l298 1912  
                                           _abs 1DDA                                             _pad 19AE  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1101 1E10  
                                          l1013 1F0E                                            l2000 1E9C  
                                          l1104 1E18                                            l1040 19F4  
                                          l2010 1BD8                                            l2002 1EB8  
                                          l1130 1E8E                                            l1043 1A36  
                                          l1051 10EC                                            ?_abs 0017  
                                          l2020 1BF6                                            l2012 1BE6  
                                          l2004 1F10                                            l1116 1BC8  
                                          l1124 1DD8                                            l1045 1A72  
                                          l1053 10F4                                            l2022 1BFA  
                                          l2014 1BEA                                            l2006 1BCA  
                                          l2102 1F48                                            l1071 132C  
                                          l2024 1C06                                            l2016 1BEE  
                                          l2008 1BCC                                            l2040 1F60  
                                          l2104 1F52                                            l2200 1CF0  
                                          l2026 1C12                                            l2018 1BF2  
                                          l2042 1F64                                            l2202 1CF4  
                                          l2210 1B46                                            l1090 15A6  
                                          l2028 1C3C                                            l2044 1F68  
                                          l2300 17BA                                            l2204 1CF6  
                                          l2212 1B58                                            l1085 1424  
                                          l2046 1F6C                                            l2310 183C  
                                          l2302 17CE                                            l2206 1F74  
                                          l2214 1B62                                            l2222 1D96  
                                          l2230 1E5A                                            l2240 15A8  
                                          l2304 17DC                                            l2312 1842  
                                          l2216 1B80                                            l2208 1B34  
                                          l2224 1DA2                                            l2232 1E66  
                                          l2320 19AE                                            l2400 12EC  
                                          l1096 1C9A                                            l1097 1CA2  
                                          l2250 15EC                                            l2242 15AC  
                                          l2314 1852                                            l2306 180A  
                                          l2218 1BB6                                            l2226 1DB4  
                                          l2234 1E6A                                            l2330 1A00  
                                          l2322 19BE                                            l2402 12F4  
                                          l2410 1354                                            l2260 1642  
                                          l2252 160C                                            l2244 15BA  
                                          l2316 1872                                            l2308 182A  
                                          l2228 1DB8                                            l2236 1E82  
                                          l2332 1A14                                            l2324 19D2  
                                          l2404 1304                                            l2420 1386  
                                          l2412 1362                                            l2270 16C4  
                                          l2262 1656                                            l2254 1610  
                                          l2246 15DA                                            l2342 1DDA  
                                          l2190 1CA6                                            l2334 1A18  
                                          l2326 19E0                                            l2350 1094  
                                          l2430 13A4                                            l2422 1398  
                                          l2414 1374                                            l2510 1908  
                                          l2502 1898                                            l2280 170E  
                                          l2272 16C6                                            l2264 1664  
                                          l2256 161C                                            l2248 15DE  
                                          l2344 1DF4                                            l2192 1CC4  
                                          l2336 1A46                                            l2328 19EC  
                                          l2360 10FC                                            l2352 10B4  
                                          l2416 1378                                            l2408 132E  
                                          l2520 1986                                            l2512 1920  
                                          l2504 18AE                                            l2274 16D8  
                                          l2266 1676                                            l2258 163A  
                                          l2290 1762                                            l2194 1CCE  
                                          l2338 1A5A                                            l2370 1132  
                                          l2362 110E                                            l2354 10C4  
                                          l2346 104C                                            l2450 145A  
                                          l2442 13BC                                            l2434 13AA  
                                          l2426 139E                                            l2418 1384  
                                          l2514 1930                                            l2522 198A  
                                          l2506 18E6                                            l2530 1D02  
                                          l2268 16A4                                            l2276 16DE  
                                          l2292 1766                                            l2284 1730  
                                          l2196 1CDE                                            l2188 1CA6  
                                          l2372 1138                                            l2380 122A  
                                          l2364 111C                                            l2356 10C6  
                                          l2348 106C                                            l2460 1526  
                                          l2452 1480                                            l2444 1412  
                                          l2516 1968                                            l2508 18FA  
                                          l2532 1D06                                            l2524 1CFA  
                                          l2278 16EE                                            l2294 1774  
                                          l2286 1734                                            l2198 1CE0  
                                          l2382 1244                                            l2390 12A6  
                                          l2374 11BA                                            l2366 1122  
                                          l2358 10E0                                            l2470 1562  
                                          l2462 1534                                            l2454 14C8  
                                          l2446 1432                                            l2438 13B0  
                                          l2518 197A                                            l2534 1D1A  
                                          l2526 1CFE                                            l2296 1794  
                                          l2288 1742                                            l2392 12B8  
                                          l2384 1262                                            l2376 11C0  
                                          l2368 112A                                            l2464 1548  
                                          l2448 1434                                            l2536 1D2E  
                                          l2528 1D00                                            l2298 17B2  
                                          l2394 12C8                                            l2386 127C  
                                          l2378 11C6                                            l2458 1500  
                                          l2474 156E                                            l2490 1C48  
                                          l2396 12CE                                            l2388 1296  
                                          l2476 1594                                            l2468 1554  
                                          l2492 1C56                                            l2398 12E0  
                                          l2494 1C7C                                            l2568 13E4  
                                          l2488 1C40                                            l2496 1EE8  
                                          l1970 1F7C                                            l2498 1EF0  
                                          l1972 1F9A                                            l1974 1F90  
                                          ?_pad 0017                                            l1976 1FA4  
                                          l1968 1F86                                            l1996 1FBA  
                                          l1998 1E90                                            STR_1 1033  
                                          STR_2 101B                                            STR_3 1001  
                                          u2000 1296                                            u2001 1292  
                                          u2010 12A6                                            u2011 12A2  
                                          u2020 12B8                                            u2100 1526  
                                          u2021 12B4                                            u2101 1522  
                                          u2030 12C8                                            u2110 1C9A  
                                          u2031 12C4                                            u2111 1C96  
                                          u2040 12E0                                            u2120 18AE  
                                          u2041 12DC                                            u2121 18AA  
                                          u2050 1354                                            u2130 18C4  
                                          u2051 1350                                            u2131 18C0  
                                          u2060 1424                                            u2140 18D4  
                                          u2061 1420                                            u2141 18D0  
                                          _LATA 000F89                                            u2070 1432  
                                          u2150 18E6                                            _LATB 000F8A  
                                          u2071 142E                                            u2207 196E  
                                          u2151 18E2                                            _LATC 000F8B  
                                          u2080 145A                                            u2160 1908  
                                          u2081 1456                                            u2161 1904  
                                          u1370 1F2A                                            u2090 1480  
                                          u2170 1920                                            u1371 1F26  
                                          u2091 147C                                            u2171 191C  
                                          u1700 1DD8                                            u2180 199C  
                                          u1701 1DD4                                            u2181 1998  
                                          u1630 1CB6                                            u1710 1E82  
                                          u2190 19AC                                            u1631 1CB2  
                                          u1711 1E7E                                            u2191 19A8  
                                          u1720 15BA                                            u1800 1774  
                                          u1640 1CC4                                            u1721 15B6  
                                          u1801 1770                                            u1641 1CC0  
                                          u1730 15EC                                            u1810 17B2  
                                          u1650 1CF0                                            u1731 15E8  
                                          u1811 17AE                                            u1651 1CEC  
                                          u1820 17DC                                            u1660 1B46  
                                          u1900 107C                                            u1741 1616  
                                          u1821 17D8                                            u1661 1B42  
                                          u1901 1076                                            u1750 163A  
                                          u1830 180A                                            u1670 1B58  
                                          u1910 107E                                            u1751 1636  
                                          u1831 1806                                            u1671 1B54  
                                          u1760 1664                                            u1840 1852  
                                          u1680 1B80                                            u1920 1094  
                                          u1761 1660                                            u1841 184E  
                                          u1681 1B7C                                            u1921 1090  
                                          u1770 16A4                                            u1690 1BB6  
                                          u1850 19BE                                            u1930 10C4  
                                          u1771 16A0                                            u1691 1BB2  
                                          u1851 19BA                                            u1931 10C0  
                                          u1780 16EE                                            u1860 19E0  
                                          u1940 10E0                                            u1781 16EA  
                                          u1861 19DC                                            u1941 10DC  
                                          u1790 1742                                            u1870 1A36  
                                          u1950 110E                                            u1791 173E  
                                          u1871 1A32                                            u1951 110A  
                                          u1880 1A46                                            u1960 111C  
                                          u1881 1A42                                            u1961 1118  
                                          u1890 1DF4                                            u1970 1244  
                                          u1891 1DF0                                            u1971 1240  
                                          u1980 1262                                            u1981 125E  
                                          u1990 127C                                            u1991 1278  
                                          _WPUB 000F61                                   _EUSART1_Write 1CA4  
                                          abs@a 0017                                            _dbuf 0078  
                                          _main 1CFA                                            _dtoa 104C  
                                          _prec 0068                                            _nout 0064  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          btemp 0059                                            start 00B0  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 1F2C  
                         _eusart1RxStatusBuffer 0100                                 __end_of___aodiv 1730  
                                         ?_main 0001                                           ?_dtoa 0022  
                               __end_of___aomod 1894                                           i2l231 009C  
                                         i2l170 1E58                                           i2l226 0062  
                                         i2l227 009C                                           i2l181 1EE6  
                                         i2l190 1FB8                                           i2l167 1E56  
                                         i2l184 1FBE                                           i2l177 1B32  
                                         i2l187 1FB2                                    vfpfcnvrt@fmt 0048  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                            _EUSART1_Transmit_ISR 1E1A  
                             i2c_write_serial@i 00B3                                           _flags 006A  
                                         _fputc 1B34                                           _fputs 1D96  
                                         pad@fp 0017                                           _width 0066  
                                         _putch 1F72                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                         ttemp5 005A                                           ttemp6 005D  
                                         ttemp7 0061                                           status 000FD8  
                                         wtemp8 005A           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 1FC0     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 1FBE                                 __initialization 1D4A  
                    __end_of_EUSART1_Initialize 1C40                                    __end_of_main 1D4A  
                                  __end_of_dtoa 132E                                __end_of_i2c_init 1F60  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 0054  
                                        ??_dtoa 002C                                   __activetblptr 000003  
                         ?_EUSART1_Transmit_ISR 0001                                          ?_fputc 0007  
                                        ?_fputs 0010                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          i2l2100 1B2E  
                                        i2l2030 1FAE                                          i2l2032 1FB4  
                                        i2l2140 0070                                          i2l2132 001A  
                                        i2l2070 1E1A                                          i2l2142 007E  
                                        i2l2134 0028                                          i2l2080 1E50  
                                        i2l2072 1E2A                                          i2l2136 0036  
                      __end_of_i2c_write_serial 19AE                                          i2l2090 1ABC  
                                        i2l2082 1A74                                          i2l2074 1E3A  
                                        i2l2138 0044                                          i2l2092 1ACA  
                                        i2l2084 1A84                                          i2l2076 1E3C  
                                        i2l2094 1ADA                                          i2l2086 1A92  
                                        i2l2078 1E4C                                          i2l2096 1AF4  
                                        i2l2088 1AA2                                          i2l2098 1B10  
                                        i2l1980 1ECC                                          i2l1982 1ECE  
                                        i2l1984 1EDE                                          i2l1986 1EE2  
                                        i2l1978 1EBC                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   vfpfcnvrt@done 00A0  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    vfprintf@cfmt 004E  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                      ?_EUSART1_SetErrorHandler 0005                                          clear_0 1D70  
                                        clear_1 1D7C                                          isa$std 000001  
                                        _printf 1EE8                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        dtoa@fp 0022                                          _strlen 1E5A  
                                        fputc@c 0007                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 1CA4                                 ??_EUSART1_Write 0005  
                               _eusart1RxBuffer 0140                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0180                               _SYSTEM_Initialize 1F60  
                                    __accesstop 0060                         __end_of__initialization 1D8C  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                __size_of_EUSART1_RxDataHandler 002C                   __end_of_EUSART1_RxDataHandler 1EE8  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 1F2C  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 1BCA  
                                 __end_of_fputs 1DDA                                   __end_of_putch 1F7C  
                        ??_EUSART1_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 1B34  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 1F72  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0055                                   _eusart1TxHead 0058  
                                 _eusart1RxTail 0054                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                   _eusart1TxTail 0057  
             _EUSART1_TxDefaultInterruptHandler 0074                 ??_EUSART1_SetRxInterruptHandler 0007  
                                     ?_i2c_init 0001                 __end_of_EUSART1_SetErrorHandler 1FAE  
                        i2c_write_serial@length 00B0                                         ?_printf 00A8  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 1FA4  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 1F9A  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 027A                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                                       _SSP1BUF 000FC9                                      ??_i2c_init 0005  
                                    _first_line 00CD                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 15A8  
                                       ___aomod 1730                                       ?_vfprintf 00A2  
                                  __psmallconst 1000                                         __pcinit 1D4A  
                                       __ramtop 1000                                         __ptext0 1CFA  
                                       __ptext1 1894                                         __ptext2 1EE8  
                                       __ptext3 1C40                                         __ptext4 132E  
                                       __ptext5 104C                                         __ptext6 19AE  
                                       __ptext7 1E5A                                         __ptext8 1D96  
                                       __ptext9 1B34                                 __size_of_printf 0028  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 1F10  
                                  __size_of_abs 0040                                    __size_of_pad 00C6  
                            _EUSART1_Initialize 1BCA                        ??_PIN_MANAGER_Initialize 0005  
                 ??_EUSART1_DefaultErrorHandler 0001                      __size_of_SYSTEM_Initialize 0012  
                          end_of_initialization 1D8C                             ?_EUSART1_Initialize 0001  
                             ?_i2c_write_serial 00AE                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 006E                                         fputs@fp 0012  
                            ??_i2c_write_serial 0052           __end_of_EUSART1_SetRxInterruptHandler 1F90  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 1F86  
                             __end_of_vfpfcnvrt 15A8                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                                    ??_vfprintf 004E                            ??_EUSART1_Initialize 0007  
                                       strlen@a 0007                                         strlen@s 0005  
                                  _display_addr 00B6                                    _display_init 00C9  
                                     _TRISCbits 000F94                         fp__EUSART1_Transmit_ISR 0000  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 1FBE  
                                   vfpfcnvrt@ap 004A                                     vfpfcnvrt@fp 0046  
                                   vfpfcnvrt@ll 0098                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 1F10                                  __end_of_strlen 1E90  
                           start_initialization 1D4A                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 1E1A                                     __end_of_pad 1A74  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART1_Write 1CFA  
                        fp__EUSART1_Receive_ISR 0000                               __size_of_i2c_init 0018  
                                   vfprintf@fmt 00A4                           _EUSART1_RxDataHandler 1EBC  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00B4  
                                      ??_printf 0050                                        ??_strlen 0007  
                                _eusart1RxCount 0077                                     __pbssCOMRAM 0054  
             _EUSART1_RxDefaultInterruptHandler 0072                   __size_of_EUSART1_Transmit_ISR 0040  
                                 __pcstackBANK0 0098                                ___aodiv@dividend 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                    __size_of_EUSART1_Receive_ISR 00C0  
                        _PIN_MANAGER_Initialize 1E90                                       _dtoa$1451 0034  
                                     __pintcode 0008                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                                   __smallconst 1000                                        _BAUDCON1 000FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 1FB4  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 1FAE  
                          _EUSART1_ErrorHandler 006C                         _EUSART1_SetErrorHandler 1FA4  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 1FBA  
       EUSART1_SetErrorHandler@interruptHandler 0005                                        _PIE1bits 000F9D  
                                      i2u140_40 1E2A                                        i2u140_41 1E26  
                                      i2u141_40 1E4C                                        i2u141_41 1E48  
                                      i2u142_40 1A92                                        i2u142_41 1A8E  
                                      i2u135_40 1EDE                                        i2u135_41 1EDA  
           __size_of_INTERRUPT_InterruptManager 00A8                                        i2u144_40 1ACA  
                                      i2u143_48 1AA8                                        i2u160_40 0070  
                                      i2u144_41 1AC6                                        i2u143_49 1ABC  
                                      i2u160_41 006C                                        i2u161_40 007E  
                                      i2u161_41 007A                                        i2u146_40 1B10  
                                      i2u145_48 1AE0                                        i2u146_41 1B0C  
                                      i2u145_49 1AF4                                        i2u162_48 0084  
                                      i2u162_49 0098                                        i2u147_48 1B16  
                                      i2u156_40 0028                                        i2u147_49 1B2A  
                                      i2u156_41 0024                                        i2u157_40 0036  
                                      i2u157_41 0032                                        i2u158_40 0044  
                                      i2u158_41 0040                                        i2u159_48 004A  
                                      i2u159_49 005E                                        _PIR1bits 000F9E  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                                      _SSP1CON1 000FC6                                        _SSP1CON2 000FC5  
                                      _SSP1STAT 000FC7                       __size_of_i2c_write_serial 011A  
                                     _vfpfcnvrt 132E                      i2c_write_serial@targetAddr 00B2  
                                   _INTCON2bits 000FF1                                       copy_data0 1D5E  
                         ?_INTERRUPT_Initialize 0001                                        _i2c_init 1F48  
         __end_of_EUSART1_SetTxInterruptHandler 1F86          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 1F7C                                        __Hrparam 0000  
                                    vfprintf@ap 00A6                                        __Lrparam 0000  
                                    vfprintf@fp 00A2                         ??_OSCILLATOR_Initialize 0005  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                   __size_of_EUSART1_Initialize 0076                                      ?_vfpfcnvrt 0046  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                                    _ANSELCbits 000F3A                       ??_EUSART1_SetErrorHandler 0007  
           __end_of_EUSART1_DefaultErrorHandler 1FBA                     _EUSART1_DefaultErrorHandler 1FB4  
                                      _data_out 0060                            i2c_write_serial@addr 00B1  
                          i2c_write_serial@data 00AE                                        __ptext10 1F72  
                                      __ptext11 1CA4                                        __ptext20 1BCA  
                                      __ptext12 1DDA                                        __ptext21 1F7C  
                                      __ptext13 1730                                        __ptext30 1FBE  
                                      __ptext22 1F86                                        __ptext14 15A8  
                                      __ptext31 1FB4                                        __ptext23 1F90  
                                      __ptext15 1F48                                        __ptext32 1EBC  
                                      __ptext24 1F9A                                        __ptext16 1F60  
                                      __ptext33 0000                                        __ptext25 1FA4  
                                      __ptext17 1E90                                        __ptext18 1F10  
                                      __ptext27 1E1A                                        __ptext19 1FBA  
                                      __ptext28 1A74                                        __ptext29 1FAE  
                                  _SSP1CON2bits 000FC5                                    _SSP2CON2bits 000F6B  
                                 __size_of_main 0050                                   __size_of_dtoa 02E2  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        isa$xinst 000000  
                                      int$flags 0059                                        _vfprintf 1C40  
            __end_of_INTERRUPT_InterruptManager 00B0                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00A8                     _EUSART1_FramingErrorHandler 0070  
                           _EUSART1_Receive_ISR 1A74                                ___aomod@dividend 0005  
                                   _second_line 00B4                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 0005                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1F9A         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1F90                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 1E5A                                        printf@ap 0050  
EUSART1_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                               ___aomod@divisor 000D                                _i2c_write_serial 1894  
                                   ??_vfpfcnvrt 004C                                 ___aomod@counter 0015  
                        __size_of_EUSART1_Write 0056                              _eusart1RxLastError 0076  
                                   _temp_string 00B7                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 1EBC  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
