

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Oct 06 12:54:12 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           ; Version 2.05
    70                           ; Generated 20/12/2018 GMT
    71                           ; 
    72                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F26K22 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataCOMRAM
   105  001EDE                     __pidataCOMRAM:
   106                           	opt callstack 0
   107                           
   108                           ;initializer for _number
   109  001EDE  38                 	db	56
   110                           
   111                           ;initializer for _display_1
   112  001EDF  02                 	db	2
   113                           
   114                           ;initializer for _x
   115  001EE0  08                 	db	8
   116                           
   117                           	psect	idataBANK0
   118  001C2C                     __pidataBANK0:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _Aring
   122  001C2C  0E                 	db	14
   123  001C2D  0E                 	db	14
   124  001C2E  11                 	db	17
   125  001C2F  11                 	db	17
   126  001C30  1F                 	db	31
   127  001C31  11                 	db	17
   128  001C32  11                 	db	17
   129  001C33  00                 	db	0
   130                           
   131                           ;initializer for _aring
   132  001C34  0E                 	db	14
   133  001C35  0A                 	db	10
   134  001C36  0E                 	db	14
   135  001C37  01                 	db	1
   136  001C38  0F                 	db	15
   137  001C39  11                 	db	17
   138  001C3A  0F                 	db	15
   139  001C3B  00                 	db	0
   140                           
   141                           ;initializer for _Oslash
   142  001C3C  0E                 	db	14
   143  001C3D  13                 	db	19
   144  001C3E  15                 	db	21
   145  001C3F  15                 	db	21
   146  001C40  15                 	db	21
   147  001C41  19                 	db	25
   148  001C42  0E                 	db	14
   149  001C43  00                 	db	0
   150                           
   151                           ;initializer for _oslash
   152  001C44  00                 	db	0
   153  001C45  00                 	db	0
   154  001C46  0E                 	db	14
   155  001C47  13                 	db	19
   156  001C48  15                 	db	21
   157  001C49  19                 	db	25
   158  001C4A  0E                 	db	14
   159  001C4B  00                 	db	0
   160                           
   161                           ;initializer for _AElig
   162  001C4C  0F                 	db	15
   163  001C4D  14                 	db	20
   164  001C4E  14                 	db	20
   165  001C4F  1F                 	db	31
   166  001C50  14                 	db	20
   167  001C51  14                 	db	20
   168  001C52  17                 	db	23
   169  001C53  00                 	db	0
   170                           
   171                           ;initializer for _aelig
   172  001C54  00                 	db	0
   173  001C55  00                 	db	0
   174  001C56  0E                 	db	14
   175  001C57  05                 	db	5
   176  001C58  0F                 	db	15
   177  001C59  14                 	db	20
   178  001C5A  0F                 	db	15
   179  001C5B  00                 	db	0
   180                           
   181                           ;initializer for _empty
   182  001C5C  000B               	dw	11
   183                           
   184                           ;initializer for _degree
   185  001C5E  FD                 	db	253
   186                           
   187                           ;initializer for _display_2
   188  001C5F  01                 	db	1
   189                           
   190                           ;initializer for _temperature_addr
   191  001C60  48                 	db	72
   192                           
   193                           	psect	smallconst
   194  001000                     __psmallconst:
   195                           	opt callstack 0
   196  001000  00                 	db	0
   197  001001                     _temperature_string:
   198                           	opt callstack 0
   199  001001  54                 	db	84
   200  001002  65                 	db	101
   201  001003  6D                 	db	109
   202  001004  70                 	db	112
   203  001005  65                 	db	101
   204  001006  72                 	db	114
   205  001007  61                 	db	97
   206  001008  74                 	db	116
   207  001009  75                 	db	117
   208  00100A  72                 	db	114
   209  00100B  65                 	db	101
   210  00100C  6E                 	db	110
   211  00100D  20                 	db	32
   212  00100E  65                 	db	101
   213  00100F  72                 	db	114
   214  001010  3A                 	db	58
   215  001011  20                 	db	32
   216  001012  00                 	db	0
   217  001013                     __end_of_temperature_string:
   218                           	opt callstack 0
   219  001013                     _get7seg:
   220                           	opt callstack 0
   221  001013  C0                 	db	192
   222  001014  F9                 	db	249
   223  001015  A4                 	db	164
   224  001016  B0                 	db	176
   225  001017  99                 	db	153
   226  001018  92                 	db	146
   227  001019  82                 	db	130
   228  00101A  F8                 	db	248
   229  00101B  80                 	db	128
   230  00101C  90                 	db	144
   231  00101D  7F                 	db	127
   232  00101E  FF                 	db	255
   233  00101F                     __end_of_get7seg:
   234                           	opt callstack 0
   235  0000                     _ANSELCbits	set	3898
   236  0000                     _ANSELA	set	3896
   237  0000                     _ANSELB	set	3897
   238  0000                     _ANSELC	set	3898
   239  0000                     _SSP1CON2bits	set	4037
   240  0000                     _SSP1STAT	set	4039
   241  0000                     _SSP2CON2	set	3947
   242  0000                     _SSP1CON1	set	4038
   243  0000                     _SSP1ADD	set	4040
   244  0000                     _TRISCbits	set	3988
   245  0000                     _PORTA	set	3968
   246  0000                     _PORTC	set	3970
   247  0000                     _T2CONbits	set	4026
   248  0000                     _T2CON	set	4026
   249  0000                     _TMR2	set	4028
   250  0000                     _PR2	set	4027
   251  0000                     _PIR1bits	set	3998
   252  0000                     _RCONbits	set	4048
   253  0000                     _INTCONbits	set	4082
   254  0000                     _INTCON2bits	set	4081
   255  0000                     _WPUB	set	3937
   256  0000                     _TRISC	set	3988
   257  0000                     _TRISB	set	3987
   258  0000                     _TRISA	set	3986
   259  0000                     _LATC	set	3979
   260  0000                     _LATB	set	3978
   261  0000                     _LATA	set	3977
   262  0000                     _OSCTUNE	set	3995
   263  0000                     _OSCCON2	set	4050
   264  0000                     _OSCCON	set	4051
   265  0000                     _RCREG1	set	4014
   266  0000                     _RCSTA1bits	set	4011
   267  0000                     _TXREG1	set	4013
   268  0000                     _TXSTA1bits	set	4012
   269  0000                     _SPBRGH1	set	4016
   270  0000                     _SPBRG1	set	4015
   271  0000                     _TXSTA1	set	4012
   272  0000                     _RCSTA1	set	4011
   273  0000                     _BAUDCON1	set	4024
   274  0000                     _PIE1bits	set	3997
   275  0000                     _PLLRDY	set	32407
   276  00101F                     STR_1:
   277  00101F  54                 	db	84	;'T'
   278  001020  65                 	db	101	;'e'
   279  001021  6D                 	db	109	;'m'
   280  001022  70                 	db	112	;'p'
   281  001023  65                 	db	101	;'e'
   282  001024  72                 	db	114	;'r'
   283  001025  61                 	db	97	;'a'
   284  001026  74                 	db	116	;'t'
   285  001027  75                 	db	117	;'u'
   286  001028  72                 	db	114	;'r'
   287  001029  65                 	db	101	;'e'
   288  00102A  6E                 	db	110	;'n'
   289  00102B  20                 	db	32
   290  00102C  65                 	db	101	;'e'
   291  00102D  72                 	db	114	;'r'
   292  00102E  3A                 	db	58	;':'
   293  00102F  20                 	db	32
   294  001030  25                 	db	37
   295  001031  64                 	db	100	;'d'
   296  001032  00                 	db	0
   297  001033                     STR_2:
   298  001033  49                 	db	73	;'I'
   299  001034  32                 	db	50	;'2'
   300  001035  43                 	db	67	;'C'
   301  001036  20                 	db	32
   302  001037  66                 	db	102	;'f'
   303  001038  72                 	db	114	;'r'
   304  001039  65                 	db	101	;'e'
   305  00103A  6B                 	db	107	;'k'
   306  00103B  76                 	db	118	;'v'
   307  00103C  65                 	db	101	;'e'
   308  00103D  6E                 	db	110	;'n'
   309  00103E  73                 	db	115	;'s'
   310  00103F  3A                 	db	58	;':'
   311  001040  20                 	db	32
   312  001041  25                 	db	37
   313  001042  64                 	db	100	;'d'
   314  001043  00                 	db	0
   315  001044                     STR_3:
   316  001044  46                 	db	70	;'F'
   317  001045  65                 	db	101	;'e'
   318  001046  6A                 	db	106	;'j'
   319  001047  6C                 	db	108	;'l'
   320  001048  21                 	db	33
   321  001049  21                 	db	33
   322  00104A  21                 	db	33
   323  00104B  0A                 	db	10
   324  00104C  0D                 	db	13
   325  00104D  00                 	db	0
   326                           
   327                           ; #config settings
   328  00104E  00                 	db	0	; dummy byte at the end
   329  0000                     
   330                           	psect	cinit
   331  001A38                     __pcinit:
   332                           	opt callstack 0
   333  001A38                     start_initialization:
   334                           	opt callstack 0
   335  001A38                     __initialization:
   336                           	opt callstack 0
   337                           
   338                           ; Initialize objects allocated to BANK0 (53 bytes)
   339                           ; load TBLPTR registers with __pidataBANK0
   340  001A38  0E2C               	movlw	low __pidataBANK0
   341  001A3A  6EF6               	movwf	tblptrl,c
   342  001A3C  0E1C               	movlw	high __pidataBANK0
   343  001A3E  6EF7               	movwf	tblptrh,c
   344  001A40  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   345  001A42  6EF8               	movwf	tblptru,c
   346  001A44  EE00  F096         	lfsr	0,__pdataBANK0
   347  001A48  EE10 F035          	lfsr	1,53
   348  001A4C                     copy_data0:
   349  001A4C  0009               	tblrd		*+
   350  001A4E  CFF5 FFEE          	movff	tablat,postinc0
   351  001A52  50E5               	movf	postdec1,w,c
   352  001A54  50E1               	movf	fsr1l,w,c
   353  001A56  E1FA               	bnz	copy_data0
   354                           
   355                           ; Initialize objects allocated to COMRAM (3 bytes)
   356                           ; load TBLPTR registers with __pidataCOMRAM
   357  001A58  0EDE               	movlw	low __pidataCOMRAM
   358  001A5A  6EF6               	movwf	tblptrl,c
   359  001A5C  0E1E               	movlw	high __pidataCOMRAM
   360  001A5E  6EF7               	movwf	tblptrh,c
   361  001A60  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   362  001A62  6EF8               	movwf	tblptru,c
   363  001A64  0009               	tblrd		*+	;fetch initializer
   364  001A66  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   365  001A6A  0009               	tblrd		*+	;fetch initializer
   366  001A6C  CFF5 F04D          	movff	tablat,__pdataCOMRAM+1
   367  001A70  0009               	tblrd		*+	;fetch initializer
   368  001A72  CFF5 F04E          	movff	tablat,__pdataCOMRAM+2
   369                           
   370                           ; Clear objects allocated to BANK1 (192 bytes)
   371  001A76  EE01  F000         	lfsr	0,__pbssBANK1
   372  001A7A  0EC0               	movlw	192
   373  001A7C                     clear_0:
   374  001A7C  6AEE               	clrf	postinc0,c
   375  001A7E  06E8               	decf	wreg,f,c
   376  001A80  E1FD               	bnz	clear_0
   377                           
   378                           ; Clear objects allocated to BANK0 (52 bytes)
   379  001A82  EE00  F0CB         	lfsr	0,__pbssBANK0
   380  001A86  0E34               	movlw	52
   381  001A88                     clear_1:
   382  001A88  6AEE               	clrf	postinc0,c
   383  001A8A  06E8               	decf	wreg,f,c
   384  001A8C  E1FD               	bnz	clear_1
   385                           
   386                           ; Clear objects allocated to COMRAM (13 bytes)
   387  001A8E  EE00  F03F         	lfsr	0,__pbssCOMRAM
   388  001A92  0E0D               	movlw	13
   389  001A94                     clear_2:
   390  001A94  6AEE               	clrf	postinc0,c
   391  001A96  06E8               	decf	wreg,f,c
   392  001A98  E1FD               	bnz	clear_2
   393  001A9A                     end_of_initialization:
   394                           	opt callstack 0
   395  001A9A                     __end_of__initialization:
   396                           	opt callstack 0
   397  001A9A  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   398  001A9C  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   399  001A9E  0100               	movlb	0
   400  001AA0  EF31  F00E         	goto	_main	;jump to C main() function
   401                           
   402                           	psect	bssCOMRAM
   403  00003F                     __pbssCOMRAM:
   404                           	opt callstack 0
   405  00003F                     _prec:
   406                           	opt callstack 0
   407  00003F                     	ds	2
   408  000041                     _flags:
   409                           	opt callstack 0
   410  000041                     	ds	2
   411  000043                     _decimal_2:
   412                           	opt callstack 0
   413  000043                     	ds	1
   414  000044                     _decimal_1:
   415                           	opt callstack 0
   416  000044                     	ds	1
   417  000045                     _eusart1RxLastError:
   418                           	opt callstack 0
   419  000045                     	ds	1
   420  000046                     _eusart1RxCount:
   421                           	opt callstack 0
   422  000046                     	ds	1
   423  000047                     _eusart1RxTail:
   424                           	opt callstack 0
   425  000047                     	ds	1
   426  000048                     _eusart1RxHead:
   427                           	opt callstack 0
   428  000048                     	ds	1
   429  000049                     _eusart1TxBufferRemaining:
   430                           	opt callstack 0
   431  000049                     	ds	1
   432  00004A                     _eusart1TxTail:
   433                           	opt callstack 0
   434  00004A                     	ds	1
   435  00004B                     _eusart1TxHead:
   436                           	opt callstack 0
   437  00004B                     	ds	1
   438                           
   439                           	psect	dataCOMRAM
   440  00004C                     __pdataCOMRAM:
   441                           	opt callstack 0
   442  00004C                     _number:
   443                           	opt callstack 0
   444  00004C                     	ds	1
   445  00004D                     _display_1:
   446                           	opt callstack 0
   447  00004D                     	ds	1
   448  00004E                     _x:
   449                           	opt callstack 0
   450  00004E                     	ds	1
   451                           
   452                           	psect	bssBANK0
   453  0000CB                     __pbssBANK0:
   454                           	opt callstack 0
   455  0000CB                     _nout:
   456                           	opt callstack 0
   457  0000CB                     	ds	2
   458  0000CD                     _width:
   459                           	opt callstack 0
   460  0000CD                     	ds	2
   461  0000CF                     _flipflop:
   462                           	opt callstack 0
   463  0000CF                     	ds	2
   464  0000D1                     TMR2_ISR@CountCallBack:
   465                           	opt callstack 0
   466  0000D1                     	ds	2
   467  0000D3                     _TMR2_InterruptHandler:
   468                           	opt callstack 0
   469  0000D3                     	ds	2
   470  0000D5                     _EUSART1_ErrorHandler:
   471                           	opt callstack 0
   472  0000D5                     	ds	2
   473  0000D7                     _EUSART1_OverrunErrorHandler:
   474                           	opt callstack 0
   475  0000D7                     	ds	2
   476  0000D9                     _EUSART1_FramingErrorHandler:
   477                           	opt callstack 0
   478  0000D9                     	ds	2
   479  0000DB                     _EUSART1_RxDefaultInterruptHandler:
   480                           	opt callstack 0
   481  0000DB                     	ds	2
   482  0000DD                     _EUSART1_TxDefaultInterruptHandler:
   483                           	opt callstack 0
   484  0000DD                     	ds	2
   485  0000DF                     _dbuf:
   486                           	opt callstack 0
   487  0000DF                     	ds	32
   488                           
   489                           	psect	dataBANK0
   490  000096                     __pdataBANK0:
   491                           	opt callstack 0
   492  000096                     _Aring:
   493                           	opt callstack 0
   494  000096                     	ds	8
   495  00009E                     _aring:
   496                           	opt callstack 0
   497  00009E                     	ds	8
   498  0000A6                     _Oslash:
   499                           	opt callstack 0
   500  0000A6                     	ds	8
   501  0000AE                     _oslash:
   502                           	opt callstack 0
   503  0000AE                     	ds	8
   504  0000B6                     _AElig:
   505                           	opt callstack 0
   506  0000B6                     	ds	8
   507  0000BE                     _aelig:
   508                           	opt callstack 0
   509  0000BE                     	ds	8
   510  0000C6                     _empty:
   511                           	opt callstack 0
   512  0000C6                     	ds	2
   513  0000C8                     _degree:
   514                           	opt callstack 0
   515  0000C8                     	ds	1
   516  0000C9                     _display_2:
   517                           	opt callstack 0
   518  0000C9                     	ds	1
   519  0000CA                     _temperature_addr:
   520                           	opt callstack 0
   521  0000CA                     	ds	1
   522                           
   523                           	psect	bssBANK1
   524  000100                     __pbssBANK1:
   525                           	opt callstack 0
   526  000100                     _eusart1RxStatusBuffer:
   527                           	opt callstack 0
   528  000100                     	ds	64
   529  000140                     _eusart1RxBuffer:
   530                           	opt callstack 0
   531  000140                     	ds	64
   532  000180                     _eusart1TxBuffer:
   533                           	opt callstack 0
   534  000180                     	ds	64
   535                           
   536                           	psect	cstackBANK1
   537  0001C0                     __pcstackBANK1:
   538                           	opt callstack 0
   539  0001C0                     	ds	4
   540  0001C4                     i2c_myinit@i2c_clock:
   541                           	opt callstack 0
   542                           
   543                           ; 1 bytes @ 0x4
   544  0001C4                     	ds	1
   545                           
   546                           	psect	cstackBANK0
   547  000060                     __pcstackBANK0:
   548                           	opt callstack 0
   549  000060                     ??_dtoa:
   550                           
   551                           ; 1 bytes @ 0x0
   552  000060                     	ds	8
   553  000068                     _dtoa$1089:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x8
   557  000068                     	ds	2
   558  00006A                     dtoa@p:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0xA
   562  00006A                     	ds	2
   563  00006C                     dtoa@w:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0xC
   567  00006C                     	ds	2
   568  00006E                     dtoa@s:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0xE
   572  00006E                     	ds	2
   573  000070                     dtoa@n:
   574                           	opt callstack 0
   575                           
   576                           ; 8 bytes @ 0x10
   577  000070                     	ds	8
   578  000078                     dtoa@i:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0x18
   582  000078                     	ds	2
   583  00007A                     ??_vfpfcnvrt:
   584                           
   585                           ; 1 bytes @ 0x1A
   586  00007A                     	ds	2
   587  00007C                     vfpfcnvrt@ll:
   588                           	opt callstack 0
   589                           
   590                           ; 8 bytes @ 0x1C
   591  00007C                     	ds	8
   592  000084                     ?_vfprintf:
   593                           	opt callstack 0
   594  000084                     vfprintf@fp:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x24
   598  000084                     	ds	2
   599  000086                     vfprintf@fmt:
   600                           	opt callstack 0
   601                           
   602                           ; 2 bytes @ 0x26
   603  000086                     	ds	2
   604  000088                     vfprintf@ap:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x28
   608  000088                     	ds	2
   609  00008A                     vfprintf@cfmt:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x2A
   613  00008A                     	ds	2
   614  00008C                     ?_printf:
   615                           	opt callstack 0
   616  00008C                     printf@fmt:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x2C
   620  00008C                     	ds	6
   621  000092                     printf@ap:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x32
   625  000092                     	ds	2
   626  000094                     readTemperature@result:
   627                           	opt callstack 0
   628                           
   629                           ; 1 bytes @ 0x34
   630  000094                     	ds	1
   631  000095                     main@number:
   632                           	opt callstack 0
   633                           
   634                           ; 1 bytes @ 0x35
   635  000095                     	ds	1
   636                           
   637                           	psect	cstackCOMRAM
   638  000001                     __pcstackCOMRAM:
   639                           	opt callstack 0
   640  000001                     ?___awdiv:
   641                           	opt callstack 0
   642  000001                     ?___awmod:
   643                           	opt callstack 0
   644  000001                     ___awdiv@dividend:
   645                           	opt callstack 0
   646  000001                     ___awmod@dividend:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0x0
   650  000001                     	ds	2
   651  000003                     ___awdiv@divisor:
   652                           	opt callstack 0
   653  000003                     ___awmod@divisor:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0x2
   657  000003                     	ds	2
   658  000005                     ___awdiv@counter:
   659                           	opt callstack 0
   660  000005                     ___awmod@counter:
   661                           	opt callstack 0
   662                           
   663                           ; 1 bytes @ 0x4
   664  000005                     	ds	1
   665  000006                     ___awdiv@sign:
   666                           	opt callstack 0
   667  000006                     ___awmod@sign:
   668                           	opt callstack 0
   669                           
   670                           ; 1 bytes @ 0x5
   671  000006                     	ds	1
   672  000007                     ___awdiv@quotient:
   673                           	opt callstack 0
   674                           
   675                           ; 2 bytes @ 0x6
   676  000007                     	ds	2
   677  000009                     ??_INTERRUPT_InterruptManager:
   678                           
   679                           ; 1 bytes @ 0x8
   680  000009                     	ds	8
   681  000011                     ??_i2c_wait:
   682  000011                     ?_strlen:
   683                           	opt callstack 0
   684  000011                     ?___lldiv:
   685                           	opt callstack 0
   686  000011                     ?___aodiv:
   687                           	opt callstack 0
   688  000011                     ?___aomod:
   689                           	opt callstack 0
   690  000011                     EUSART1_Write@txData:
   691                           	opt callstack 0
   692  000011                     i2c_set_address@targetAddr:
   693                           	opt callstack 0
   694  000011                     EUSART1_SetFramingErrorHandler@interruptHandler:
   695                           	opt callstack 0
   696  000011                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   697                           	opt callstack 0
   698  000011                     EUSART1_SetErrorHandler@interruptHandler:
   699                           	opt callstack 0
   700  000011                     EUSART1_SetTxInterruptHandler@interruptHandler:
   701                           	opt callstack 0
   702  000011                     EUSART1_SetRxInterruptHandler@interruptHandler:
   703                           	opt callstack 0
   704  000011                     TMR2_SetInterruptHandler@InterruptHandler:
   705                           	opt callstack 0
   706  000011                     strlen@s:
   707                           	opt callstack 0
   708  000011                     ___lldiv@dividend:
   709                           	opt callstack 0
   710  000011                     ___aodiv@dividend:
   711                           	opt callstack 0
   712  000011                     ___aomod@dividend:
   713                           	opt callstack 0
   714                           
   715                           ; 8 bytes @ 0x10
   716  000011                     	ds	1
   717  000012                     putch@txData:
   718                           	opt callstack 0
   719                           
   720                           ; 1 bytes @ 0x11
   721  000012                     	ds	1
   722  000013                     fputc@c:
   723                           	opt callstack 0
   724  000013                     strlen@a:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x12
   728  000013                     	ds	2
   729  000015                     fputc@fp:
   730                           	opt callstack 0
   731  000015                     ___lldiv@divisor:
   732                           	opt callstack 0
   733                           
   734                           ; 4 bytes @ 0x14
   735  000015                     	ds	2
   736  000017                     ??_fputc:
   737                           
   738                           ; 1 bytes @ 0x16
   739  000017                     	ds	2
   740  000019                     ___lldiv@quotient:
   741                           	opt callstack 0
   742  000019                     ___aodiv@divisor:
   743                           	opt callstack 0
   744  000019                     ___aomod@divisor:
   745                           	opt callstack 0
   746                           
   747                           ; 8 bytes @ 0x18
   748  000019                     	ds	3
   749  00001C                     fputs@s:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x1B
   753  00001C                     	ds	1
   754  00001D                     ___lldiv@counter:
   755                           	opt callstack 0
   756                           
   757                           ; 1 bytes @ 0x1C
   758  00001D                     	ds	1
   759  00001E                     fputs@fp:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x1D
   763  00001E                     	ds	2
   764  000020                     fputs@c:
   765                           	opt callstack 0
   766                           
   767                           ; 1 bytes @ 0x1F
   768  000020                     	ds	1
   769  000021                     ___aodiv@counter:
   770                           	opt callstack 0
   771  000021                     ___aomod@counter:
   772                           	opt callstack 0
   773  000021                     fputs@i:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x20
   777  000021                     	ds	1
   778  000022                     ___aodiv@sign:
   779                           	opt callstack 0
   780  000022                     ___aomod@sign:
   781                           	opt callstack 0
   782                           
   783                           ; 1 bytes @ 0x21
   784  000022                     	ds	1
   785  000023                     ?_abs:
   786                           	opt callstack 0
   787  000023                     ?_pad:
   788                           	opt callstack 0
   789  000023                     pad@fp:
   790                           	opt callstack 0
   791  000023                     abs@a:
   792                           	opt callstack 0
   793  000023                     ___aodiv@quotient:
   794                           	opt callstack 0
   795                           
   796                           ; 8 bytes @ 0x22
   797  000023                     	ds	2
   798  000025                     ??_abs:
   799  000025                     pad@buf:
   800                           	opt callstack 0
   801                           
   802                           ; 2 bytes @ 0x24
   803  000025                     	ds	2
   804  000027                     pad@p:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x26
   808  000027                     	ds	2
   809  000029                     ??_pad:
   810                           
   811                           ; 1 bytes @ 0x28
   812  000029                     	ds	1
   813  00002A                     pad@i:
   814                           	opt callstack 0
   815                           
   816                           ; 2 bytes @ 0x29
   817  00002A                     	ds	2
   818  00002C                     pad@w:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x2B
   822  00002C                     	ds	2
   823  00002E                     ?_dtoa:
   824                           	opt callstack 0
   825  00002E                     dtoa@fp:
   826                           	opt callstack 0
   827                           
   828                           ; 2 bytes @ 0x2D
   829  00002E                     	ds	2
   830  000030                     dtoa@d:
   831                           	opt callstack 0
   832                           
   833                           ; 8 bytes @ 0x2F
   834  000030                     	ds	8
   835  000038                     ?_vfpfcnvrt:
   836                           	opt callstack 0
   837  000038                     vfpfcnvrt@fp:
   838                           	opt callstack 0
   839                           
   840                           ; 2 bytes @ 0x37
   841  000038                     	ds	2
   842  00003A                     vfpfcnvrt@fmt:
   843                           	opt callstack 0
   844                           
   845                           ; 2 bytes @ 0x39
   846  00003A                     	ds	2
   847  00003C                     vfpfcnvrt@ap:
   848                           	opt callstack 0
   849                           
   850                           ; 2 bytes @ 0x3B
   851  00003C                     	ds	2
   852  00003E                     
   853                           ; 1 bytes @ 0x3D
   854  00003E                     	ds	1
   855  00003F                     
   856                           ; 1 bytes @ 0x3E
   857 ;;
   858 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   859 ;;
   860 ;; *************** function _main *****************
   861 ;; Defined at:
   862 ;;		line 62 in file "main.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  number          1   53[BANK0 ] char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:        1 bytes
   881 ;; Hardware stack levels required when called:   16
   882 ;; This function calls:
   883 ;;		_SYSTEM_Initialize
   884 ;;		_TMR2_SetInterruptHandler
   885 ;;		_printf
   886 ;;		_readTemperature
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text0
   893  001C62                     __ptext0:
   894                           	opt callstack 0
   895  001C62                     _main:
   896                           	opt callstack 15
   897                           
   898                           ;main.c: 65:     SYSTEM_Initialize();
   899                           
   900                           ;incstack = 0
   901  001C62  EC1A  F00F         	call	_SYSTEM_Initialize	;wreg free
   902                           
   903                           ;main.c: 72:     (INTCONbits.GIE = 1);
   904  001C66  8EF2               	bsf	4082,7,c	;volatile
   905                           
   906                           ;main.c: 78:     (INTCONbits.PEIE = 1);
   907  001C68  8CF2               	bsf	4082,6,c	;volatile
   908                           
   909                           ;main.c: 83:     TMR2_SetInterruptHandler(displayController);
   910  001C6A  0EBC               	movlw	low _displayController
   911  001C6C  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   912  001C6E  0E17               	movlw	high _displayController
   913  001C70  6E12               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   914  001C72  EC41  F00F         	call	_TMR2_SetInterruptHandler	;wreg free
   915  001C76                     l2868:
   916                           
   917                           ;main.c: 86:     {;main.c: 92:         int8_t number = readTemperature();
   918  001C76  ECA3  F00E         	call	_readTemperature	;wreg free
   919  001C7A  0100               	movlb	0	; () banked
   920  001C7C  6F95               	movwf	main@number& (0+255),b
   921                           
   922                           ; BSR set to: 0
   923                           ;main.c: 93:         printf("Temperaturen er: %d", number);
   924  001C7E  0E1F               	movlw	low STR_1
   925  001C80  6F8C               	movwf	printf@fmt& (0+255),b
   926  001C82  0E10               	movlw	high STR_1
   927  001C84  6F8D               	movwf	(printf@fmt+1)& (0+255),b
   928  001C86  5195               	movf	main@number& (0+255),w,b
   929  001C88  6F8E               	movwf	(?_printf+2)& (0+255),b
   930  001C8A  6B8F               	clrf	(?_printf+3)& (0+255),b
   931  001C8C  BF8E               	btfsc	(?_printf+2)& (0+255),7,b
   932  001C8E  078F               	decf	(?_printf+3)& (0+255),f,b
   933  001C90  ECB7  F00E         	call	_printf	;wreg free
   934  001C94  D7F0               	goto	l2868
   935  001C96                     __end_of_main:
   936                           	opt callstack 0
   937                           
   938 ;; *************** function _readTemperature *****************
   939 ;; Defined at:
   940 ;;		line 98 in file "main.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  result          1   52[BANK0 ] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      unsigned char 
   947 ;; Registers used:
   948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;Total ram usage:        1 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:   15
   961 ;; This function calls:
   962 ;;		_i2c_myinit
   963 ;;		_i2c_read
   964 ;;		_i2c_set_address
   965 ;;		_i2c_set_start_condition
   966 ;;		_i2c_set_stop_condition
   967 ;;		_i2c_wait
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text1
   974  001D46                     __ptext1:
   975                           	opt callstack 0
   976  001D46                     _readTemperature:
   977                           	opt callstack 15
   978                           
   979                           ;main.c: 99:     uint8_t result;;main.c: 101:     i2c_myinit();
   980                           
   981                           ;incstack = 0
   982  001D46  ECB4  F00D         	call	_i2c_myinit	;wreg free
   983                           
   984                           ;main.c: 102:     i2c_wait();
   985  001D4A  EC25  F00F         	call	_i2c_wait	;wreg free
   986                           
   987                           ;main.c: 103:     i2c_set_start_condition();
   988  001D4E  EC63  F00F         	call	_i2c_set_start_condition	;wreg free
   989                           
   990                           ;main.c: 104:     i2c_set_address(temperature_addr);
   991  001D52  0E48               	movlw	72
   992  001D54  EC37  F00F         	call	_i2c_set_address
   993                           
   994                           ;main.c: 105:     result = i2c_read();
   995  001D58  EC0C  F00F         	call	_i2c_read	;wreg free
   996  001D5C  0100               	movlb	0	; () banked
   997  001D5E  6F94               	movwf	readTemperature@result& (0+255),b
   998                           
   999                           ; BSR set to: 0
  1000                           ;main.c: 106:     i2c_wait();
  1001  001D60  EC25  F00F         	call	_i2c_wait	;wreg free
  1002                           
  1003                           ;main.c: 107:     i2c_set_stop_condition();
  1004  001D64  EC5F  F00F         	call	_i2c_set_stop_condition	;wreg free
  1005                           
  1006                           ;main.c: 109:     return result;
  1007  001D68  0100               	movlb	0	; () banked
  1008  001D6A  5194               	movf	readTemperature@result& (0+255),w,b
  1009                           
  1010                           ; BSR set to: 0
  1011  001D6C  0012               	return		;funcret
  1012  001D6E                     __end_of_readTemperature:
  1013                           	opt callstack 0
  1014                           
  1015 ;; *************** function _i2c_set_stop_condition *****************
  1016 ;; Defined at:
  1017 ;;		line 92 in file "i2c_lib.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		None
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    5
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_readTemperature
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text2
  1046  001EBE                     __ptext2:
  1047                           	opt callstack 0
  1048  001EBE                     _i2c_set_stop_condition:
  1049                           	opt callstack 24
  1050                           
  1051                           ;i2c_lib.c: 93:     SSP1CON2bits.PEN = 1;
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;incstack = 0
  1055  001EBE  84C5               	bsf	4037,2,c	;volatile
  1056  001EC0                     l399:
  1057  001EC0  A4C5               	btfss	4037,2,c	;volatile
  1058  001EC2  0012               	return	
  1059  001EC4  D7FD               	goto	l399
  1060  001EC6                     __end_of_i2c_set_stop_condition:
  1061                           	opt callstack 0
  1062                           
  1063 ;; *************** function _i2c_set_start_condition *****************
  1064 ;; Defined at:
  1065 ;;		line 87 in file "i2c_lib.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		None
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    5
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_readTemperature
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text3
  1094  001EC6                     __ptext3:
  1095                           	opt callstack 0
  1096  001EC6                     _i2c_set_start_condition:
  1097                           	opt callstack 24
  1098                           
  1099                           ;i2c_lib.c: 88:     SSP1CON2bits.SEN = 1;
  1100                           
  1101                           ;incstack = 0
  1102  001EC6  80C5               	bsf	4037,0,c	;volatile
  1103  001EC8                     l393:
  1104  001EC8  A0C5               	btfss	4037,0,c	;volatile
  1105  001ECA  0012               	return	
  1106  001ECC  D7FD               	goto	l393
  1107  001ECE                     __end_of_i2c_set_start_condition:
  1108                           	opt callstack 0
  1109                           
  1110 ;; *************** function _i2c_set_address *****************
  1111 ;; Defined at:
  1112 ;;		line 97 in file "i2c_lib.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  targetAddr      1    wreg     unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  targetAddr      1   16[COMRAM] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;Total ram usage:        1 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    5
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_readTemperature
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text4
  1141  001E6E                     __ptext4:
  1142                           	opt callstack 0
  1143  001E6E                     _i2c_set_address:
  1144                           	opt callstack 24
  1145                           
  1146                           ;incstack = 0
  1147                           ;i2c_set_address@targetAddr stored from wreg
  1148  001E6E  6E11               	movwf	i2c_set_address@targetAddr,c
  1149                           
  1150                           ;i2c_lib.c: 98:     SSP1ADD = targetAddr << 1;
  1151  001E70  5011               	movf	i2c_set_address@targetAddr,w,c
  1152  001E72  2411               	addwf	i2c_set_address@targetAddr,w,c
  1153  001E74  6EC8               	movwf	4040,c	;volatile
  1154  001E76  0012               	return		;funcret
  1155  001E78                     __end_of_i2c_set_address:
  1156                           	opt callstack 0
  1157                           
  1158 ;; *************** function _i2c_read *****************
  1159 ;; Defined at:
  1160 ;;		line 42 in file "i2c_lib.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  result          1    0        unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      unsigned char 
  1167 ;; Registers used:
  1168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;Total ram usage:        1 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:   14
  1181 ;; This function calls:
  1182 ;;		_i2c_wait
  1183 ;;		_printf
  1184 ;; This function is called by:
  1185 ;;		_readTemperature
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text5
  1190  001E18                     __ptext5:
  1191                           	opt callstack 0
  1192  001E18                     _i2c_read:
  1193                           	opt callstack 15
  1194                           
  1195                           ;i2c_lib.c: 45:     if( SSP1CON2bits.ACKSTAT == 0 ) {
  1196                           
  1197                           ;incstack = 0
  1198  001E18  BCC5               	btfsc	4037,6,c	;volatile
  1199  001E1A  D003               	goto	l2838
  1200                           
  1201                           ;i2c_lib.c: 47:         i2c_wait();
  1202  001E1C  EC25  F00F         	call	_i2c_wait	;wreg free
  1203                           
  1204                           ;i2c_lib.c: 48:     } else {
  1205  001E20  D007               	goto	l2840
  1206  001E22                     l2838:
  1207                           
  1208                           ;i2c_lib.c: 49:         printf("Fejl!!!\n\r");
  1209  001E22  0E44               	movlw	low STR_3
  1210  001E24  0100               	movlb	0	; () banked
  1211  001E26  6F8C               	movwf	printf@fmt& (0+255),b
  1212  001E28  0E10               	movlw	high STR_3
  1213  001E2A  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  1214  001E2C  ECB7  F00E         	call	_printf	;wreg free
  1215  001E30                     l2840:
  1216                           
  1217                           ;i2c_lib.c: 52:     return result;
  1218  001E30  0E00               	movlw	0
  1219  001E32  0012               	return		;funcret
  1220  001E34                     __end_of_i2c_read:
  1221                           	opt callstack 0
  1222                           
  1223 ;; *************** function _i2c_wait *****************
  1224 ;; Defined at:
  1225 ;;		line 32 in file "i2c_lib.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;Total ram usage:        1 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    5
  1246 ;; This function calls:
  1247 ;;		Nothing
  1248 ;; This function is called by:
  1249 ;;		_readTemperature
  1250 ;;		_i2c_read
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text6
  1255  001E4A                     __ptext6:
  1256                           	opt callstack 0
  1257  001E4A                     _i2c_wait:
  1258                           	opt callstack 24
  1259                           
  1260                           ;i2c_lib.c: 34:     while ( (SSP1STAT & 0x04) || (SSP2CON2 & 0x1F) );
  1261                           
  1262                           ;incstack = 0
  1263  001E4A  B4C7               	btfsc	4039,2,c	;volatile
  1264  001E4C  D7FE               	goto	_i2c_wait
  1265  001E4E  CF6B F011          	movff	3947,??_i2c_wait	;volatile
  1266  001E52  0E1F               	movlw	31
  1267  001E54  1611               	andwf	??_i2c_wait,f,c
  1268  001E56  B4D8               	btfsc	status,2,c
  1269  001E58  0012               	return	
  1270  001E5A  D7F7               	goto	_i2c_wait
  1271  001E5C                     __end_of_i2c_wait:
  1272                           	opt callstack 0
  1273                           
  1274 ;; *************** function _i2c_myinit *****************
  1275 ;; Defined at:
  1276 ;;		line 9 in file "i2c_lib.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  SYS_FREQ        4    0        unsigned long 
  1281 ;;  i2c_clock       1    4[BANK1 ] unsigned char 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;Total ram usage:        5 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; Hardware stack levels required when called:   14
  1298 ;; This function calls:
  1299 ;;		___lldiv
  1300 ;;		_printf
  1301 ;; This function is called by:
  1302 ;;		_readTemperature
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text7
  1307  001B68                     __ptext7:
  1308                           	opt callstack 0
  1309  001B68                     _i2c_myinit:
  1310                           	opt callstack 15
  1311                           
  1312                           ;i2c_lib.c: 11:     TRISCbits.RC3 = 1;
  1313                           
  1314                           ;incstack = 0
  1315  001B68  8694               	bsf	3988,3,c	;volatile
  1316                           
  1317                           ;i2c_lib.c: 12:     ANSELCbits.ANSC3 = 1;
  1318  001B6A  010F               	movlb	15	; () banked
  1319  001B6C  873A               	bsf	58,3,b	;volatile
  1320                           
  1321                           ;i2c_lib.c: 14:     TRISCbits.RC4 = 1;
  1322  001B6E  8894               	bsf	3988,4,c	;volatile
  1323                           
  1324                           ;i2c_lib.c: 15:     ANSELCbits.ANSC4 = 1;
  1325  001B70  893A               	bsf	58,4,b	;volatile
  1326                           
  1327                           ; BSR set to: 15
  1328                           ;i2c_lib.c: 22:     uint8_t i2c_clock = (SYS_FREQ /(4 * 100000)) - 1;
  1329                           
  1330                           ; BSR set to: 15
  1331  001B72  0E00               	movlw	0
  1332  001B74  6E11               	movwf	___lldiv@dividend,c
  1333  001B76  0E90               	movlw	144
  1334  001B78  6E12               	movwf	___lldiv@dividend+1,c
  1335  001B7A  0ED0               	movlw	208
  1336  001B7C  6E13               	movwf	___lldiv@dividend+2,c
  1337  001B7E  0E03               	movlw	3
  1338  001B80  6E14               	movwf	___lldiv@dividend+3,c
  1339  001B82  0E80               	movlw	128
  1340  001B84  6E15               	movwf	___lldiv@divisor,c
  1341  001B86  0E1A               	movlw	26
  1342  001B88  6E16               	movwf	___lldiv@divisor+1,c
  1343  001B8A  0E06               	movlw	6
  1344  001B8C  6E17               	movwf	___lldiv@divisor+2,c
  1345  001B8E  0E00               	movlw	0
  1346  001B90  6E18               	movwf	___lldiv@divisor+3,c
  1347  001B92  EC69  F00C         	call	___lldiv	;wreg free
  1348  001B96  0411               	decf	?___lldiv,w,c
  1349  001B98  0101               	movlb	1	; () banked
  1350  001B9A  6FC4               	movwf	i2c_myinit@i2c_clock& (0+255),b
  1351                           
  1352                           ; BSR set to: 1
  1353                           ;i2c_lib.c: 23:     printf("I2C frekvens: %d", i2c_clock );
  1354  001B9C  0E33               	movlw	low STR_2
  1355  001B9E  0100               	movlb	0	; () banked
  1356  001BA0  6F8C               	movwf	printf@fmt& (0+255),b
  1357  001BA2  0E10               	movlw	high STR_2
  1358  001BA4  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  1359  001BA6  C1C4  F08E         	movff	i2c_myinit@i2c_clock,?_printf+2
  1360  001BAA  6B8F               	clrf	(?_printf+3)& (0+255),b
  1361  001BAC  ECB7  F00E         	call	_printf	;wreg free
  1362                           
  1363                           ;i2c_lib.c: 25:     SSP1ADD = i2c_clock;
  1364  001BB0  C1C4  FFC8         	movff	i2c_myinit@i2c_clock,4040	;volatile
  1365                           
  1366                           ;i2c_lib.c: 28:     SSP1CON1 = 0b01001000;
  1367  001BB4  0E48               	movlw	72
  1368  001BB6  6EC6               	movwf	4038,c	;volatile
  1369                           
  1370                           ;i2c_lib.c: 29:     SSP2CON2 = 0;
  1371  001BB8  0E00               	movlw	0
  1372  001BBA  6E6B               	movwf	3947,c	;volatile
  1373  001BBC  0012               	return		;funcret
  1374  001BBE                     __end_of_i2c_myinit:
  1375                           	opt callstack 0
  1376                           
  1377 ;; *************** function _printf *****************
  1378 ;; Defined at:
  1379 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  fmt             2   44[BANK0 ] PTR const unsigned char 
  1382 ;;		 -> STR_3(10), STR_2(17), STR_1(20), 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  ap              2   50[BANK0 ] PTR void [1]
  1385 ;;		 -> ?_printf(2), 
  1386 ;;  ret             2    0        int 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  2   44[BANK0 ] int 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1396 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;Total ram usage:        8 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:   13
  1403 ;; This function calls:
  1404 ;;		_vfprintf
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;;		_i2c_myinit
  1408 ;;		_i2c_read
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text8
  1413  001D6E                     __ptext8:
  1414                           	opt callstack 0
  1415  001D6E                     _printf:
  1416                           	opt callstack 15
  1417                           
  1418                           ;incstack = 0
  1419  001D6E  0E8E               	movlw	low (?_printf+2)
  1420  001D70  0100               	movlb	0	; () banked
  1421  001D72  6F92               	movwf	printf@ap& (0+255),b
  1422  001D74  0E00               	movlw	high (?_printf+2)
  1423  001D76  6F93               	movwf	(printf@ap+1)& (0+255),b
  1424                           
  1425                           ; BSR set to: 0
  1426  001D78  0E00               	movlw	0
  1427  001D7A  6F84               	movwf	vfprintf@fp& (0+255),b
  1428  001D7C  0E00               	movlw	0
  1429  001D7E  6F85               	movwf	(vfprintf@fp+1)& (0+255),b
  1430  001D80  C08C  F086         	movff	printf@fmt,vfprintf@fmt
  1431  001D84  C08D  F087         	movff	printf@fmt+1,vfprintf@fmt+1
  1432  001D88  0E92               	movlw	low printf@ap
  1433  001D8A  6F88               	movwf	vfprintf@ap& (0+255),b
  1434  001D8C  0E00               	movlw	high printf@ap
  1435  001D8E  6F89               	movwf	(vfprintf@ap+1)& (0+255),b
  1436  001D90  EC88  F00D         	call	_vfprintf	;wreg free
  1437  001D94  0012               	return		;funcret
  1438  001D96                     __end_of_printf:
  1439                           	opt callstack 0
  1440                           
  1441 ;; *************** function _vfprintf *****************
  1442 ;; Defined at:
  1443 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  1446 ;;		 -> NULL(0), 
  1447 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  1448 ;;		 -> STR_3(10), STR_2(17), STR_1(20), 
  1449 ;;  ap              2   40[BANK0 ] PTR PTR void 
  1450 ;;		 -> printf@ap(2), 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  cfmt            2   42[BANK0 ] PTR unsigned char 
  1453 ;;		 -> STR_3(10), STR_2(17), STR_1(20), 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2   36[BANK0 ] int 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1463 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;Total ram usage:        8 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:   12
  1470 ;; This function calls:
  1471 ;;		_vfpfcnvrt
  1472 ;; This function is called by:
  1473 ;;		_printf
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text9
  1478  001B10                     __ptext9:
  1479                           	opt callstack 0
  1480  001B10                     _vfprintf:
  1481                           	opt callstack 15
  1482                           
  1483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1484                           
  1485                           ;incstack = 0
  1486  001B10  C086  F08A         	movff	vfprintf@fmt,vfprintf@cfmt
  1487  001B14  C087  F08B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1488                           
  1489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1490  001B18  0E00               	movlw	0
  1491  001B1A  0100               	movlb	0	; () banked
  1492  001B1C  6FCC               	movwf	(_nout+1)& (0+255),b
  1493  001B1E  0E00               	movlw	0
  1494  001B20  6FCB               	movwf	_nout& (0+255),b
  1495                           
  1496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1497  001B22  D013               	goto	l2788
  1498  001B24                     l2786:
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1502  001B24  C084  F038         	movff	vfprintf@fp,vfpfcnvrt@fp
  1503  001B28  C085  F039         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1504  001B2C  0E8A               	movlw	low vfprintf@cfmt
  1505  001B2E  6E3A               	movwf	vfpfcnvrt@fmt,c
  1506  001B30  0E00               	movlw	high vfprintf@cfmt
  1507  001B32  6E3B               	movwf	vfpfcnvrt@fmt+1,c
  1508  001B34  C088  F03C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1509  001B38  C089  F03D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1510  001B3C  EC4B  F009         	call	_vfpfcnvrt	;wreg free
  1511  001B40  5038               	movf	?_vfpfcnvrt,w,c
  1512  001B42  0100               	movlb	0	; () banked
  1513  001B44  27CB               	addwf	_nout& (0+255),f,b
  1514  001B46  5039               	movf	?_vfpfcnvrt+1,w,c
  1515  001B48  23CC               	addwfc	(_nout+1)& (0+255),f,b
  1516  001B4A                     l2788:
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1520  001B4A  C08A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1521  001B4E  C08B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1522  001B52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1523  001B52  6AF8               	clrf	tblptru,c
  1524  001B54                     	endif
  1525  001B54                     	if	0	;tblptru may be non-zero
  1526  001B54                     	endif
  1527  001B54  0008               	tblrd		*
  1528  001B56  50F5               	movf	tablat,w,c
  1529  001B58  0900               	iorlw	0
  1530  001B5A  A4D8               	btfss	status,2,c
  1531  001B5C  D7E3               	goto	l2786
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1535  001B5E  C0CB  F084         	movff	_nout,?_vfprintf
  1536  001B62  C0CC  F085         	movff	_nout+1,?_vfprintf+1
  1537                           
  1538                           ; BSR set to: 0
  1539  001B66  0012               	return		;funcret
  1540  001B68                     __end_of_vfprintf:
  1541                           	opt callstack 0
  1542                           
  1543 ;; *************** function _vfpfcnvrt *****************
  1544 ;; Defined at:
  1545 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  fp              2   55[COMRAM] PTR struct _IO_FILE
  1548 ;;		 -> NULL(0), 
  1549 ;;  fmt             2   57[COMRAM] PTR PTR unsigned char 
  1550 ;;		 -> vfprintf@cfmt(2), 
  1551 ;;  ap              2   59[COMRAM] PTR PTR void 
  1552 ;;		 -> printf@ap(2), 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  ll              8   28[BANK0 ] long long 
  1555 ;;  llu             8    0        unsigned long long 
  1556 ;;  f               4    0        unsigned long long 
  1557 ;;  vp              3    0        PTR void 
  1558 ;;  ct              3    0        unsigned char [3]
  1559 ;;  cp              3    0        PTR unsigned char 
  1560 ;;  i               2    0        int 
  1561 ;;  done            2    0        int 
  1562 ;;  c               1    0        unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  2   55[COMRAM] int 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1572 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;Total ram usage:       16 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:   11
  1579 ;; This function calls:
  1580 ;;		_dtoa
  1581 ;;		_fputc
  1582 ;; This function is called by:
  1583 ;;		_vfprintf
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text10
  1588  001296                     __ptext10:
  1589                           	opt callstack 0
  1590  001296                     _vfpfcnvrt:
  1591                           	opt callstack 15
  1592                           
  1593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;incstack = 0
  1597  001296  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1598  00129A  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1599  00129E  CFDE FFF6          	movff	postinc2,tblptrl
  1600  0012A2  CFDD FFF7          	movff	postdec2,tblptrh
  1601  0012A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1602  0012A6  6AF8               	clrf	tblptru,c
  1603  0012A8                     	endif
  1604  0012A8                     	if	0	;tblptru may be non-zero
  1605  0012A8                     	endif
  1606  0012A8  0008               	tblrd		*
  1607  0012AA  50F5               	movf	tablat,w,c
  1608  0012AC  0A25               	xorlw	37
  1609  0012AE  A4D8               	btfss	status,2,c
  1610  0012B0  D09D               	goto	l2774
  1611                           
  1612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1613  0012B2  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1614  0012B6  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1615  0012BA  2ADE               	incf	postinc2,f,c
  1616  0012BC  0E00               	movlw	0
  1617  0012BE  22DD               	addwfc	postdec2,f,c
  1618                           
  1619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1620  0012C0  0E00               	movlw	0
  1621  0012C2  0100               	movlb	0	; () banked
  1622  0012C4  6FCE               	movwf	(_width+1)& (0+255),b
  1623  0012C6  0E00               	movlw	0
  1624  0012C8  6FCD               	movwf	_width& (0+255),b
  1625  0012CA  C0CD  F041         	movff	_width,_flags
  1626  0012CE  C0CE  F042         	movff	_width+1,_flags+1
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1630  0012D2  683F               	setf	_prec,c
  1631  0012D4  6840               	setf	_prec+1,c
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1635  0012D6  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1636  0012DA  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1637  0012DE  CFDE FFF6          	movff	postinc2,tblptrl
  1638  0012E2  CFDD FFF7          	movff	postdec2,tblptrh
  1639  0012E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1640  0012E6  6AF8               	clrf	tblptru,c
  1641  0012E8                     	endif
  1642  0012E8                     	if	0	;tblptru may be non-zero
  1643  0012E8                     	endif
  1644  0012E8  0008               	tblrd		*
  1645  0012EA  50F5               	movf	tablat,w,c
  1646  0012EC  0A64               	xorlw	100
  1647  0012EE  B4D8               	btfsc	status,2,c
  1648  0012F0  D00E               	goto	u2310
  1649                           
  1650                           ; BSR set to: 0
  1651  0012F2  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1652  0012F6  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1653  0012FA  CFDE FFF6          	movff	postinc2,tblptrl
  1654  0012FE  CFDD FFF7          	movff	postdec2,tblptrh
  1655  001302                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1656  001302  6AF8               	clrf	tblptru,c
  1657  001304                     	endif
  1658  001304                     	if	0	;tblptru may be non-zero
  1659  001304                     	endif
  1660  001304  0008               	tblrd		*
  1661  001306  50F5               	movf	tablat,w,c
  1662  001308  0A69               	xorlw	105
  1663  00130A  A4D8               	btfss	status,2,c
  1664  00130C  D03F               	goto	l2758
  1665  00130E                     u2310:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1669  00130E  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1670  001312  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1671  001316  2ADE               	incf	postinc2,f,c
  1672  001318  0E00               	movlw	0
  1673  00131A  22DD               	addwfc	postdec2,f,c
  1674                           
  1675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1676  00131C  C03C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1677  001320  C03D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1678  001324  CFDF F07A          	movff	indf2,??_vfpfcnvrt
  1679  001328  0E02               	movlw	2
  1680  00132A  26DE               	addwf	postinc2,f,c
  1681  00132C  CFDF F07B          	movff	indf2,??_vfpfcnvrt+1
  1682  001330  0E00               	movlw	0
  1683  001332  22DD               	addwfc	postdec2,f,c
  1684  001334  C07A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1685  001338  C07B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1686  00133C  CFDE F07C          	movff	postinc2,vfpfcnvrt@ll
  1687  001340  CFDD F07D          	movff	postdec2,vfpfcnvrt@ll+1
  1688  001344  0E00               	movlw	0
  1689  001346  BF7D               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1690  001348  0EFF               	movlw	-1
  1691  00134A  6F7E               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1692  00134C  6F7F               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1693  00134E  6F80               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1694  001350  6F81               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1695  001352  6F82               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1696  001354  6F83               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1700  001356  C038  F02E         	movff	vfpfcnvrt@fp,dtoa@fp
  1701  00135A  C039  F02F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1702  00135E  C07C  F030         	movff	vfpfcnvrt@ll,dtoa@d
  1703  001362  C07D  F031         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1704  001366  C07E  F032         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1705  00136A  C07F  F033         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1706  00136E  C080  F034         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1707  001372  C081  F035         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1708  001376  C082  F036         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1709  00137A  C083  F037         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1710  00137E  EC28  F008         	call	_dtoa	;wreg free
  1711  001382  C02E  F038         	movff	?_dtoa,?_vfpfcnvrt
  1712  001386  C02F  F039         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1713  00138A  0012               	return	
  1714  00138C                     l2758:
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1718  00138C  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1719  001390  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1720  001394  CFDE FFF6          	movff	postinc2,tblptrl
  1721  001398  CFDD FFF7          	movff	postdec2,tblptrh
  1722  00139C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1723  00139C  6AF8               	clrf	tblptru,c
  1724  00139E                     	endif
  1725  00139E                     	if	0	;tblptru may be non-zero
  1726  00139E                     	endif
  1727  00139E  0008               	tblrd		*
  1728  0013A0  50F5               	movf	tablat,w,c
  1729  0013A2  0A25               	xorlw	37
  1730  0013A4  A4D8               	btfss	status,2,c
  1731  0013A6  D016               	goto	l2768
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1735  0013A8  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1736  0013AC  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1737  0013B0  2ADE               	incf	postinc2,f,c
  1738  0013B2  0E00               	movlw	0
  1739  0013B4  22DD               	addwfc	postdec2,f,c
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1743  0013B6  0E00               	movlw	0
  1744  0013B8  6E14               	movwf	fputc@c+1,c
  1745  0013BA  0E25               	movlw	37
  1746  0013BC  6E13               	movwf	fputc@c,c
  1747  0013BE  C038  F015         	movff	vfpfcnvrt@fp,fputc@fp
  1748  0013C2  C039  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1749  0013C6  EC52  F00D         	call	_fputc	;wreg free
  1750  0013CA                     l2764:
  1751                           
  1752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1753  0013CA  0E00               	movlw	0
  1754  0013CC  6E39               	movwf	?_vfpfcnvrt+1,c
  1755  0013CE  0E01               	movlw	1
  1756  0013D0  6E38               	movwf	?_vfpfcnvrt,c
  1757  0013D2  0012               	return	
  1758  0013D4                     l2768:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1762  0013D4  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1763  0013D8  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1764  0013DC  2ADE               	incf	postinc2,f,c
  1765  0013DE  0E00               	movlw	0
  1766  0013E0  22DD               	addwfc	postdec2,f,c
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1770  0013E2  0E00               	movlw	0
  1771  0013E4  6E39               	movwf	?_vfpfcnvrt+1,c
  1772  0013E6  0E00               	movlw	0
  1773  0013E8  6E38               	movwf	?_vfpfcnvrt,c
  1774  0013EA  0012               	return	
  1775  0013EC                     l2774:
  1776                           
  1777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1778  0013EC  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1779  0013F0  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1780  0013F4  CFDE FFF6          	movff	postinc2,tblptrl
  1781  0013F8  CFDD FFF7          	movff	postdec2,tblptrh
  1782  0013FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1783  0013FC  6AF8               	clrf	tblptru,c
  1784  0013FE                     	endif
  1785  0013FE                     	if	0	;tblptru may be non-zero
  1786  0013FE                     	endif
  1787  0013FE  0008               	tblrd		*
  1788  001400  50F5               	movf	tablat,w,c
  1789  001402  6E13               	movwf	fputc@c,c
  1790  001404  6A14               	clrf	fputc@c+1,c
  1791  001406  C038  F015         	movff	vfpfcnvrt@fp,fputc@fp
  1792  00140A  C039  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1793  00140E  EC52  F00D         	call	_fputc	;wreg free
  1794                           
  1795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1796  001412  C03A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1797  001416  C03B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1798  00141A  2ADE               	incf	postinc2,f,c
  1799  00141C  0E00               	movlw	0
  1800  00141E  22DD               	addwfc	postdec2,f,c
  1801  001420  D7D4               	goto	l2764
  1802  001422                     __end_of_vfpfcnvrt:
  1803                           	opt callstack 0
  1804                           
  1805 ;; *************** function _dtoa *****************
  1806 ;; Defined at:
  1807 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  1810 ;;		 -> NULL(0), 
  1811 ;;  d               8   47[COMRAM] long long 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  n               8   16[BANK0 ] long long 
  1814 ;;  i               2   24[BANK0 ] int 
  1815 ;;  s               2   14[BANK0 ] int 
  1816 ;;  w               2   12[BANK0 ] int 
  1817 ;;  p               2   10[BANK0 ] int 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  2   45[COMRAM] int 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1827 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;Total ram usage:       36 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:   10
  1834 ;; This function calls:
  1835 ;;		___aodiv
  1836 ;;		___aomod
  1837 ;;		_abs
  1838 ;;		_pad
  1839 ;; This function is called by:
  1840 ;;		_vfpfcnvrt
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text11
  1845  001050                     __ptext11:
  1846                           	opt callstack 0
  1847  001050                     _dtoa:
  1848                           	opt callstack 15
  1849                           
  1850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1851                           
  1852                           ;incstack = 0
  1853  001050  C030  F070         	movff	dtoa@d,dtoa@n
  1854  001054  C031  F071         	movff	dtoa@d+1,dtoa@n+1
  1855  001058  C032  F072         	movff	dtoa@d+2,dtoa@n+2
  1856  00105C  C033  F073         	movff	dtoa@d+3,dtoa@n+3
  1857  001060  C034  F074         	movff	dtoa@d+4,dtoa@n+4
  1858  001064  C035  F075         	movff	dtoa@d+5,dtoa@n+5
  1859  001068  C036  F076         	movff	dtoa@d+6,dtoa@n+6
  1860  00106C  C037  F077         	movff	dtoa@d+7,dtoa@n+7
  1861                           
  1862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1863  001070  0100               	movlb	0	; () banked
  1864  001072  AF77               	btfss	(dtoa@n+7)& (0+255),7,b
  1865  001074  D002               	goto	u2140
  1866  001076  0E01               	movlw	1
  1867  001078  D001               	goto	u2150
  1868  00107A                     u2140:
  1869  00107A  0E00               	movlw	0
  1870  00107C                     u2150:
  1871  00107C  6F6E               	movwf	dtoa@s& (0+255),b
  1872  00107E  6B6F               	clrf	(dtoa@s+1)& (0+255),b
  1873                           
  1874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1875  001080  516E               	movf	dtoa@s& (0+255),w,b
  1876  001082  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  1877  001084  B4D8               	btfsc	status,2,c
  1878  001086  D010               	goto	l2684
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1882  001088  1F77               	comf	(dtoa@n+7)& (0+255),f,b
  1883  00108A  1F76               	comf	(dtoa@n+6)& (0+255),f,b
  1884  00108C  1F75               	comf	(dtoa@n+5)& (0+255),f,b
  1885  00108E  1F74               	comf	(dtoa@n+4)& (0+255),f,b
  1886  001090  1F73               	comf	(dtoa@n+3)& (0+255),f,b
  1887  001092  1F72               	comf	(dtoa@n+2)& (0+255),f,b
  1888  001094  1F71               	comf	(dtoa@n+1)& (0+255),f,b
  1889  001096  6D70               	negf	dtoa@n& (0+255),b
  1890  001098  0E00               	movlw	0
  1891  00109A  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
  1892  00109C  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
  1893  00109E  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
  1894  0010A0  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
  1895  0010A2  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
  1896  0010A4  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
  1897  0010A6  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
  1898  0010A8                     l2684:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1902  0010A8  AE40               	btfss	_prec+1,7,c
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1906  0010AA  9241               	bcf	_flags,1,c
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1910  0010AC  BE40               	btfsc	_prec+1,7,c
  1911  0010AE  D005               	goto	u2180
  1912  0010B0  5040               	movf	_prec+1,w,c
  1913  0010B2  E108               	bnz	l486
  1914  0010B4  043F               	decf	_prec,w,c
  1915  0010B6  B0D8               	btfsc	status,0,c
  1916  0010B8  D005               	goto	l486
  1917  0010BA                     u2180:
  1918                           
  1919                           ; BSR set to: 0
  1920  0010BA  0E00               	movlw	0
  1921  0010BC  6F6B               	movwf	(dtoa@p+1)& (0+255),b
  1922  0010BE  0E01               	movlw	1
  1923  0010C0  6F6A               	movwf	dtoa@p& (0+255),b
  1924  0010C2  D004               	goto	l488
  1925  0010C4                     l486:
  1926                           
  1927                           ; BSR set to: 0
  1928  0010C4  C03F  F06A         	movff	_prec,dtoa@p
  1929  0010C8  C040  F06B         	movff	_prec+1,dtoa@p+1
  1930  0010CC                     l488:
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1934  0010CC  C0CD  F06C         	movff	_width,dtoa@w
  1935  0010D0  C0CE  F06D         	movff	_width+1,dtoa@w+1
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1939  0010D4  516E               	movf	dtoa@s& (0+255),w,b
  1940  0010D6  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  1941  0010D8  A4D8               	btfss	status,2,c
  1942  0010DA  D002               	goto	u2200
  1943                           
  1944                           ; BSR set to: 0
  1945  0010DC  A441               	btfss	_flags,2,c
  1946  0010DE  D003               	goto	l2698
  1947  0010E0                     u2200:
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1951  0010E0  076C               	decf	dtoa@w& (0+255),f,b
  1952  0010E2  A0D8               	btfss	status,0,c
  1953  0010E4  076D               	decf	(dtoa@w+1)& (0+255),f,b
  1954  0010E6                     l2698:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1958  0010E6  0E00               	movlw	0
  1959  0010E8  6F79               	movwf	(dtoa@i+1)& (0+255),b
  1960  0010EA  0E1F               	movlw	31
  1961  0010EC  6F78               	movwf	dtoa@i& (0+255),b
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1965  0010EE  0E00               	movlw	0
  1966  0010F0  6FFE               	movwf	(_dbuf+31)& (0+255),b
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1969  0010F2  D07D               	goto	l2712
  1970  0010F4                     l2702:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1974  0010F4  0778               	decf	dtoa@i& (0+255),f,b
  1975  0010F6  A0D8               	btfss	status,0,c
  1976  0010F8  0779               	decf	(dtoa@i+1)& (0+255),f,b
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1980  0010FA  0EDF               	movlw	low _dbuf
  1981  0010FC  2578               	addwf	dtoa@i& (0+255),w,b
  1982  0010FE  6ED9               	movwf	fsr2l,c
  1983  001100  0E00               	movlw	high _dbuf
  1984  001102  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  1985  001104  6EDA               	movwf	fsr2h,c
  1986  001106  C070  F011         	movff	dtoa@n,___aomod@dividend
  1987  00110A  C071  F012         	movff	dtoa@n+1,___aomod@dividend+1
  1988  00110E  C072  F013         	movff	dtoa@n+2,___aomod@dividend+2
  1989  001112  C073  F014         	movff	dtoa@n+3,___aomod@dividend+3
  1990  001116  C074  F015         	movff	dtoa@n+4,___aomod@dividend+4
  1991  00111A  C075  F016         	movff	dtoa@n+5,___aomod@dividend+5
  1992  00111E  C076  F017         	movff	dtoa@n+6,___aomod@dividend+6
  1993  001122  C077  F018         	movff	dtoa@n+7,___aomod@dividend+7
  1994  001126  0E0A               	movlw	10
  1995  001128  6E19               	movwf	___aomod@divisor,c
  1996  00112A  0E00               	movlw	0
  1997  00112C  6E1A               	movwf	___aomod@divisor+1,c
  1998  00112E  0E00               	movlw	0
  1999  001130  6E1B               	movwf	___aomod@divisor+2,c
  2000  001132  0E00               	movlw	0
  2001  001134  6E1C               	movwf	___aomod@divisor+3,c
  2002  001136  0E00               	movlw	0
  2003  001138  6E1D               	movwf	___aomod@divisor+4,c
  2004  00113A  0E00               	movlw	0
  2005  00113C  6E1E               	movwf	___aomod@divisor+5,c
  2006  00113E  0E00               	movlw	0
  2007  001140  6E1F               	movwf	___aomod@divisor+6,c
  2008  001142  0E00               	movlw	0
  2009  001144  6E20               	movwf	___aomod@divisor+7,c
  2010  001146  ECB5  F00A         	call	___aomod	;wreg free
  2011  00114A  C011  F060         	movff	?___aomod,??_dtoa
  2012  00114E  C012  F061         	movff	?___aomod+1,??_dtoa+1
  2013  001152  C013  F062         	movff	?___aomod+2,??_dtoa+2
  2014  001156  C014  F063         	movff	?___aomod+3,??_dtoa+3
  2015  00115A  C015  F064         	movff	?___aomod+4,??_dtoa+4
  2016  00115E  C016  F065         	movff	?___aomod+5,??_dtoa+5
  2017  001162  C017  F066         	movff	?___aomod+6,??_dtoa+6
  2018  001166  C018  F067         	movff	?___aomod+7,??_dtoa+7
  2019  00116A  C060  F023         	movff	??_dtoa,abs@a
  2020  00116E  C062  F024         	movff	??_dtoa+2,abs@a+1
  2021  001172  EC4B  F00E         	call	_abs	;wreg free
  2022  001176  5023               	movf	?_abs,w,c
  2023  001178  0F30               	addlw	48
  2024  00117A  6EDF               	movwf	indf2,c
  2025                           
  2026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2027  00117C  0100               	movlb	0	; () banked
  2028  00117E  076A               	decf	dtoa@p& (0+255),f,b
  2029  001180  A0D8               	btfss	status,0,c
  2030  001182  076B               	decf	(dtoa@p+1)& (0+255),f,b
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2034  001184  076C               	decf	dtoa@w& (0+255),f,b
  2035  001186  A0D8               	btfss	status,0,c
  2036  001188  076D               	decf	(dtoa@w+1)& (0+255),f,b
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2040  00118A  C070  F011         	movff	dtoa@n,___aodiv@dividend
  2041  00118E  C071  F012         	movff	dtoa@n+1,___aodiv@dividend+1
  2042  001192  C072  F013         	movff	dtoa@n+2,___aodiv@dividend+2
  2043  001196  C073  F014         	movff	dtoa@n+3,___aodiv@dividend+3
  2044  00119A  C074  F015         	movff	dtoa@n+4,___aodiv@dividend+4
  2045  00119E  C075  F016         	movff	dtoa@n+5,___aodiv@dividend+5
  2046  0011A2  C076  F017         	movff	dtoa@n+6,___aodiv@dividend+6
  2047  0011A6  C077  F018         	movff	dtoa@n+7,___aodiv@dividend+7
  2048  0011AA  0E0A               	movlw	10
  2049  0011AC  6E19               	movwf	___aodiv@divisor,c
  2050  0011AE  0E00               	movlw	0
  2051  0011B0  6E1A               	movwf	___aodiv@divisor+1,c
  2052  0011B2  0E00               	movlw	0
  2053  0011B4  6E1B               	movwf	___aodiv@divisor+2,c
  2054  0011B6  0E00               	movlw	0
  2055  0011B8  6E1C               	movwf	___aodiv@divisor+3,c
  2056  0011BA  0E00               	movlw	0
  2057  0011BC  6E1D               	movwf	___aodiv@divisor+4,c
  2058  0011BE  0E00               	movlw	0
  2059  0011C0  6E1E               	movwf	___aodiv@divisor+5,c
  2060  0011C2  0E00               	movlw	0
  2061  0011C4  6E1F               	movwf	___aodiv@divisor+6,c
  2062  0011C6  0E00               	movlw	0
  2063  0011C8  6E20               	movwf	___aodiv@divisor+7,c
  2064  0011CA  EC11  F00A         	call	___aodiv	;wreg free
  2065  0011CE  C011  F070         	movff	?___aodiv,dtoa@n
  2066  0011D2  C012  F071         	movff	?___aodiv+1,dtoa@n+1
  2067  0011D6  C013  F072         	movff	?___aodiv+2,dtoa@n+2
  2068  0011DA  C014  F073         	movff	?___aodiv+3,dtoa@n+3
  2069  0011DE  C015  F074         	movff	?___aodiv+4,dtoa@n+4
  2070  0011E2  C016  F075         	movff	?___aodiv+5,dtoa@n+5
  2071  0011E6  C017  F076         	movff	?___aodiv+6,dtoa@n+6
  2072  0011EA  C018  F077         	movff	?___aodiv+7,dtoa@n+7
  2073  0011EE                     l2712:
  2074                           
  2075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2076  0011EE  0100               	movlb	0	; () banked
  2077  0011F0  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
  2078  0011F2  D01F               	goto	u2250
  2079  0011F4  5179               	movf	(dtoa@i+1)& (0+255),w,b
  2080  0011F6  E103               	bnz	u2210
  2081  0011F8  0578               	decf	dtoa@i& (0+255),w,b
  2082  0011FA  A0D8               	btfss	status,0,c
  2083  0011FC  D01A               	goto	u2250
  2084  0011FE                     u2210:
  2085                           
  2086                           ; BSR set to: 0
  2087  0011FE  5170               	movf	dtoa@n& (0+255),w,b
  2088  001200  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
  2089  001202  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
  2090  001204  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
  2091  001206  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
  2092  001208  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
  2093  00120A  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
  2094  00120C  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
  2095  00120E  A4D8               	btfss	status,2,c
  2096  001210  D771               	goto	l2702
  2097                           
  2098                           ; BSR set to: 0
  2099  001212  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
  2100  001214  D005               	goto	u2230
  2101  001216  516B               	movf	(dtoa@p+1)& (0+255),w,b
  2102  001218  E102               	bnz	u2231
  2103  00121A  056A               	decf	dtoa@p& (0+255),w,b
  2104  00121C  B0D8               	btfsc	status,0,c
  2105  00121E                     u2231:
  2106  00121E  D76A               	goto	l2702
  2107  001220                     u2230:
  2108                           
  2109                           ; BSR set to: 0
  2110  001220  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
  2111  001222  D007               	goto	u2250
  2112  001224  516D               	movf	(dtoa@w+1)& (0+255),w,b
  2113  001226  E103               	bnz	u2240
  2114  001228  056C               	decf	dtoa@w& (0+255),w,b
  2115  00122A  A0D8               	btfss	status,0,c
  2116  00122C  D002               	goto	u2250
  2117  00122E                     u2240:
  2118                           
  2119                           ; BSR set to: 0
  2120  00122E  B241               	btfsc	_flags,1,c
  2121  001230  D761               	goto	l2702
  2122  001232                     u2250:
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2126  001232  516E               	movf	dtoa@s& (0+255),w,b
  2127  001234  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  2128  001236  A4D8               	btfss	status,2,c
  2129  001238  D002               	goto	u2270
  2130                           
  2131                           ; BSR set to: 0
  2132  00123A  A441               	btfss	_flags,2,c
  2133  00123C  D017               	goto	l2736
  2134  00123E                     u2270:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2138  00123E  0778               	decf	dtoa@i& (0+255),f,b
  2139  001240  A0D8               	btfss	status,0,c
  2140  001242  0779               	decf	(dtoa@i+1)& (0+255),f,b
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2144  001244  516E               	movf	dtoa@s& (0+255),w,b
  2145  001246  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
  2146  001248  A4D8               	btfss	status,2,c
  2147  00124A  D004               	goto	l2732
  2148                           
  2149                           ; BSR set to: 0
  2150  00124C  0E00               	movlw	0
  2151  00124E  6F69               	movwf	(_dtoa$1089+1)& (0+255),b
  2152  001250  0E2B               	movlw	43
  2153  001252  D003               	goto	L1
  2154  001254                     l2732:
  2155                           
  2156                           ; BSR set to: 0
  2157  001254  0E00               	movlw	0
  2158  001256  6F69               	movwf	(_dtoa$1089+1)& (0+255),b
  2159  001258  0E2D               	movlw	45
  2160  00125A                     L1:
  2161  00125A  6F68               	movwf	_dtoa$1089& (0+255),b
  2162                           
  2163                           ; BSR set to: 0
  2164  00125C  0EDF               	movlw	low _dbuf
  2165  00125E  2578               	addwf	dtoa@i& (0+255),w,b
  2166  001260  6ED9               	movwf	fsr2l,c
  2167  001262  0E00               	movlw	high _dbuf
  2168  001264  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  2169  001266  6EDA               	movwf	fsr2h,c
  2170  001268  C068  FFDF         	movff	_dtoa$1089,indf2
  2171  00126C                     l2736:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2175  00126C  C02E  F023         	movff	dtoa@fp,pad@fp
  2176  001270  C02F  F024         	movff	dtoa@fp+1,pad@fp+1
  2177  001274  0EDF               	movlw	low _dbuf
  2178  001276  2578               	addwf	dtoa@i& (0+255),w,b
  2179  001278  6E25               	movwf	pad@buf,c
  2180  00127A  0E00               	movlw	high _dbuf
  2181  00127C  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
  2182  00127E  6E26               	movwf	pad@buf+1,c
  2183  001280  C06C  F027         	movff	dtoa@w,pad@p
  2184  001284  C06D  F028         	movff	dtoa@w+1,pad@p+1
  2185  001288  EC93  F00B         	call	_pad	;wreg free
  2186  00128C  C023  F02E         	movff	?_pad,?_dtoa
  2187  001290  C024  F02F         	movff	?_pad+1,?_dtoa+1
  2188  001294  0012               	return		;funcret
  2189  001296                     __end_of_dtoa:
  2190                           	opt callstack 0
  2191                           
  2192 ;; *************** function _pad *****************
  2193 ;; Defined at:
  2194 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  2197 ;;		 -> NULL(0), 
  2198 ;;  buf             2   36[COMRAM] PTR unsigned char 
  2199 ;;		 -> dbuf(32), 
  2200 ;;  p               2   38[COMRAM] int 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  w               2   43[COMRAM] int 
  2203 ;;  i               2   41[COMRAM] int 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  2   34[COMRAM] int 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2213 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;Total ram usage:       11 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    9
  2220 ;; This function calls:
  2221 ;;		_fputc
  2222 ;;		_fputs
  2223 ;;		_strlen
  2224 ;; This function is called by:
  2225 ;;		_dtoa
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text12
  2230  001726                     __ptext12:
  2231                           	opt callstack 0
  2232  001726                     _pad:
  2233                           	opt callstack 15
  2234                           
  2235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2236                           
  2237                           ;incstack = 0
  2238  001726  A041               	btfss	_flags,0,c
  2239  001728  D00A               	goto	l2576
  2240                           
  2241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2242  00172A  C025  F01C         	movff	pad@buf,fputs@s
  2243  00172E  C026  F01D         	movff	pad@buf+1,fputs@s+1
  2244  001732  C023  F01E         	movff	pad@fp,fputs@fp
  2245  001736  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  2246  00173A  ECDF  F00D         	call	_fputs	;wreg free
  2247  00173E                     l2576:
  2248                           
  2249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2250  00173E  BE28               	btfsc	pad@p+1,7,c
  2251  001740  D005               	goto	l2580
  2252  001742  C027  F02C         	movff	pad@p,pad@w
  2253  001746  C028  F02D         	movff	pad@p+1,pad@w+1
  2254  00174A  D004               	goto	l475
  2255  00174C                     l2580:
  2256  00174C  0E00               	movlw	0
  2257  00174E  6E2D               	movwf	pad@w+1,c
  2258  001750  0E00               	movlw	0
  2259  001752  6E2C               	movwf	pad@w,c
  2260  001754                     l475:
  2261                           
  2262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2263  001754  0E00               	movlw	0
  2264  001756  6E2B               	movwf	pad@i+1,c
  2265  001758  0E00               	movlw	0
  2266  00175A  6E2A               	movwf	pad@i,c
  2267                           
  2268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2269  00175C  D00C               	goto	l2586
  2270  00175E                     l2582:
  2271                           
  2272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2273  00175E  0E00               	movlw	0
  2274  001760  6E14               	movwf	fputc@c+1,c
  2275  001762  0E20               	movlw	32
  2276  001764  6E13               	movwf	fputc@c,c
  2277  001766  C023  F015         	movff	pad@fp,fputc@fp
  2278  00176A  C024  F016         	movff	pad@fp+1,fputc@fp+1
  2279  00176E  EC52  F00D         	call	_fputc	;wreg free
  2280                           
  2281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2282  001772  4A2A               	infsnz	pad@i,f,c
  2283  001774  2A2B               	incf	pad@i+1,f,c
  2284  001776                     l2586:
  2285                           
  2286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2287  001776  502C               	movf	pad@w,w,c
  2288  001778  5C2A               	subwf	pad@i,w,c
  2289  00177A  502B               	movf	pad@i+1,w,c
  2290  00177C  0A80               	xorlw	128
  2291  00177E  6E29               	movwf	??_pad& (0+255),c
  2292  001780  502D               	movf	pad@w+1,w,c
  2293  001782  0A80               	xorlw	128
  2294  001784  5829               	subwfb	??_pad& (0+255),w,c
  2295  001786  A0D8               	btfss	status,0,c
  2296  001788  D7EA               	goto	l2582
  2297                           
  2298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2299  00178A  B041               	btfsc	_flags,0,c
  2300  00178C  D00A               	goto	l2590
  2301                           
  2302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2303  00178E  C025  F01C         	movff	pad@buf,fputs@s
  2304  001792  C026  F01D         	movff	pad@buf+1,fputs@s+1
  2305  001796  C023  F01E         	movff	pad@fp,fputs@fp
  2306  00179A  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  2307  00179E  ECDF  F00D         	call	_fputs	;wreg free
  2308  0017A2                     l2590:
  2309                           
  2310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2311  0017A2  C025  F011         	movff	pad@buf,strlen@s
  2312  0017A6  C026  F012         	movff	pad@buf+1,strlen@s+1
  2313  0017AA  EC64  F00E         	call	_strlen	;wreg free
  2314  0017AE  502C               	movf	pad@w,w,c
  2315  0017B0  2411               	addwf	?_strlen,w,c
  2316  0017B2  6E23               	movwf	?_pad,c
  2317  0017B4  502D               	movf	pad@w+1,w,c
  2318  0017B6  2012               	addwfc	?_strlen+1,w,c
  2319  0017B8  6E24               	movwf	?_pad+1,c
  2320  0017BA  0012               	return		;funcret
  2321  0017BC                     __end_of_pad:
  2322                           	opt callstack 0
  2323                           
  2324 ;; *************** function _strlen *****************
  2325 ;; Defined at:
  2326 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  s               2   16[COMRAM] PTR const unsigned char 
  2329 ;;		 -> dbuf(32), 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  a               2   18[COMRAM] PTR const unsigned char 
  2332 ;;		 -> dbuf(32), 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  2   16[COMRAM] unsigned int 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;Total ram usage:        4 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    5
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_pad
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text13
  2357  001CC8                     __ptext13:
  2358                           	opt callstack 0
  2359  001CC8                     _strlen:
  2360                           	opt callstack 18
  2361                           
  2362                           ;incstack = 0
  2363  001CC8  C011  F013         	movff	strlen@s,strlen@a
  2364  001CCC  C012  F014         	movff	strlen@s+1,strlen@a+1
  2365  001CD0  D002               	goto	l2566
  2366  001CD2                     l2564:
  2367  001CD2  4A11               	infsnz	strlen@s,f,c
  2368  001CD4  2A12               	incf	strlen@s+1,f,c
  2369  001CD6                     l2566:
  2370  001CD6  C011  FFD9         	movff	strlen@s,fsr2l
  2371  001CDA  C012  FFDA         	movff	strlen@s+1,fsr2h
  2372  001CDE  50DF               	movf	indf2,w,c
  2373  001CE0  A4D8               	btfss	status,2,c
  2374  001CE2  D7F7               	goto	l2564
  2375  001CE4  5013               	movf	strlen@a,w,c
  2376  001CE6  5C11               	subwf	strlen@s,w,c
  2377  001CE8  6E11               	movwf	?_strlen,c
  2378  001CEA  5014               	movf	strlen@a+1,w,c
  2379  001CEC  5812               	subwfb	strlen@s+1,w,c
  2380  001CEE  6E12               	movwf	?_strlen+1,c
  2381  001CF0  0012               	return		;funcret
  2382  001CF2                     __end_of_strlen:
  2383                           	opt callstack 0
  2384                           
  2385 ;; *************** function _fputs *****************
  2386 ;; Defined at:
  2387 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  s               2   27[COMRAM] PTR const unsigned char 
  2390 ;;		 -> dbuf(32), 
  2391 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2392 ;;		 -> NULL(0), 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  i               2   32[COMRAM] int 
  2395 ;;  c               1   31[COMRAM] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  2   27[COMRAM] int 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;Total ram usage:        7 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    8
  2412 ;; This function calls:
  2413 ;;		_fputc
  2414 ;; This function is called by:
  2415 ;;		_pad
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text14
  2420  001BBE                     __ptext14:
  2421                           	opt callstack 0
  2422  001BBE                     _fputs:
  2423                           	opt callstack 15
  2424                           
  2425                           ;incstack = 0
  2426  001BBE  0E00               	movlw	0
  2427  001BC0  6E22               	movwf	fputs@i+1,c
  2428  001BC2  0E00               	movlw	0
  2429  001BC4  6E21               	movwf	fputs@i,c
  2430  001BC6  D00B               	goto	l2560
  2431  001BC8                     l2556:
  2432  001BC8  C020  F013         	movff	fputs@c,fputc@c
  2433  001BCC  6A14               	clrf	fputc@c+1,c
  2434  001BCE  C01E  F015         	movff	fputs@fp,fputc@fp
  2435  001BD2  C01F  F016         	movff	fputs@fp+1,fputc@fp+1
  2436  001BD6  EC52  F00D         	call	_fputc	;wreg free
  2437  001BDA  4A21               	infsnz	fputs@i,f,c
  2438  001BDC  2A22               	incf	fputs@i+1,f,c
  2439  001BDE                     l2560:
  2440  001BDE  5021               	movf	fputs@i,w,c
  2441  001BE0  241C               	addwf	fputs@s,w,c
  2442  001BE2  6ED9               	movwf	fsr2l,c
  2443  001BE4  5022               	movf	fputs@i+1,w,c
  2444  001BE6  201D               	addwfc	fputs@s+1,w,c
  2445  001BE8  6EDA               	movwf	fsr2h,c
  2446  001BEA  50DF               	movf	indf2,w,c
  2447  001BEC  6E20               	movwf	fputs@c,c
  2448  001BEE  5020               	movf	fputs@c,w,c
  2449  001BF0  B4D8               	btfsc	status,2,c
  2450  001BF2  0012               	return	
  2451  001BF4  D7E9               	goto	l2556
  2452  001BF6                     __end_of_fputs:
  2453                           	opt callstack 0
  2454                           
  2455 ;; *************** function _fputc *****************
  2456 ;; Defined at:
  2457 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  c               2   18[COMRAM] int 
  2460 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2461 ;;		 -> NULL(0), 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  2   18[COMRAM] int 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;Total ram usage:        9 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    7
  2480 ;; This function calls:
  2481 ;;		_putch
  2482 ;; This function is called by:
  2483 ;;		_pad
  2484 ;;		_vfpfcnvrt
  2485 ;;		_fputs
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text15
  2490  001AA4                     __ptext15:
  2491                           	opt callstack 0
  2492  001AA4                     _fputc:
  2493                           	opt callstack 18
  2494                           
  2495                           ;incstack = 0
  2496  001AA4  5015               	movf	fputc@fp,w,c
  2497  001AA6  1016               	iorwf	fputc@fp+1,w,c
  2498  001AA8  B4D8               	btfsc	status,2,c
  2499  001AAA  D004               	goto	u1910
  2500  001AAC  5015               	movf	fputc@fp,w,c
  2501  001AAE  1016               	iorwf	fputc@fp+1,w,c
  2502  001AB0  A4D8               	btfss	status,2,c
  2503  001AB2  D004               	goto	l2546
  2504  001AB4                     u1910:
  2505  001AB4  5013               	movf	fputc@c,w,c
  2506  001AB6  EC3C  F00F         	call	_putch
  2507  001ABA  0012               	return	
  2508  001ABC                     l2546:
  2509  001ABC  EE20 F004          	lfsr	2,4
  2510  001AC0  5015               	movf	fputc@fp,w,c
  2511  001AC2  26D9               	addwf	fsr2l,f,c
  2512  001AC4  5016               	movf	fputc@fp+1,w,c
  2513  001AC6  22DA               	addwfc	fsr2h,f,c
  2514  001AC8  50DE               	movf	postinc2,w,c
  2515  001ACA  10DE               	iorwf	postinc2,w,c
  2516  001ACC  B4D8               	btfsc	status,2,c
  2517  001ACE  D016               	goto	u1930
  2518  001AD0  EE20 F004          	lfsr	2,4
  2519  001AD4  5015               	movf	fputc@fp,w,c
  2520  001AD6  26D9               	addwf	fsr2l,f,c
  2521  001AD8  5016               	movf	fputc@fp+1,w,c
  2522  001ADA  22DA               	addwfc	fsr2h,f,c
  2523  001ADC  EE10 F002          	lfsr	1,2
  2524  001AE0  5015               	movf	fputc@fp,w,c
  2525  001AE2  26E1               	addwf	fsr1l,f,c
  2526  001AE4  5016               	movf	fputc@fp+1,w,c
  2527  001AE6  22E2               	addwfc	fsr1h,f,c
  2528  001AE8  50DE               	movf	postinc2,w,c
  2529  001AEA  5CE6               	subwf	postinc1,w,c
  2530  001AEC  50E6               	movf	postinc1,w,c
  2531  001AEE  0A80               	xorlw	128
  2532  001AF0  6E1B               	movwf	(??_fputc+4)& (0+255),c
  2533  001AF2  50DE               	movf	postinc2,w,c
  2534  001AF4  0A80               	xorlw	128
  2535  001AF6  581B               	subwfb	(??_fputc+4)& (0+255),w,c
  2536  001AF8  B0D8               	btfsc	status,0,c
  2537  001AFA  0012               	return	
  2538  001AFC                     u1930:
  2539  001AFC  EE20 F002          	lfsr	2,2
  2540  001B00  5015               	movf	fputc@fp,w,c
  2541  001B02  26D9               	addwf	fsr2l,f,c
  2542  001B04  5016               	movf	fputc@fp+1,w,c
  2543  001B06  22DA               	addwfc	fsr2h,f,c
  2544  001B08  2ADE               	incf	postinc2,f,c
  2545  001B0A  0E00               	movlw	0
  2546  001B0C  22DD               	addwfc	postdec2,f,c
  2547  001B0E  0012               	return		;funcret
  2548  001B10                     __end_of_fputc:
  2549                           	opt callstack 0
  2550                           
  2551 ;; *************** function _putch *****************
  2552 ;; Defined at:
  2553 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  txData          1    wreg     unsigned char 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  txData          1   17[COMRAM] unsigned char 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      void 
  2560 ;; Registers used:
  2561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;Total ram usage:        1 bytes
  2572 ;; Hardware stack levels used:    1
  2573 ;; Hardware stack levels required when called:    6
  2574 ;; This function calls:
  2575 ;;		_EUSART1_Write
  2576 ;; This function is called by:
  2577 ;;		_fputc
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text16
  2582  001E78                     __ptext16:
  2583                           	opt callstack 0
  2584  001E78                     _putch:
  2585                           	opt callstack 18
  2586                           
  2587                           ;incstack = 0
  2588                           ;putch@txData stored from wreg
  2589  001E78  6E12               	movwf	putch@txData,c
  2590                           
  2591                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  2592  001E7A  5012               	movf	putch@txData,w,c
  2593  001E7C  ECFB  F00D         	call	_EUSART1_Write
  2594  001E80  0012               	return		;funcret
  2595  001E82                     __end_of_putch:
  2596                           	opt callstack 0
  2597                           
  2598 ;; *************** function _EUSART1_Write *****************
  2599 ;; Defined at:
  2600 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  txData          1    wreg     unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  txData          1   16[COMRAM] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;Total ram usage:        1 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    5
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_putch
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text17
  2629  001BF6                     __ptext17:
  2630                           	opt callstack 0
  2631  001BF6                     _EUSART1_Write:
  2632                           	opt callstack 18
  2633                           
  2634                           ;incstack = 0
  2635                           ;EUSART1_Write@txData stored from wreg
  2636  001BF6  6E11               	movwf	EUSART1_Write@txData,c
  2637  001BF8                     
  2638                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  2639                           
  2640                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  2641  001BF8  5049               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  2642  001BFA  B4D8               	btfsc	status,2,c
  2643  001BFC  D7FD               	goto	l2520
  2644                           
  2645                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  2646  001BFE  B89D               	btfsc	3997,4,c	;volatile
  2647  001C00  D003               	goto	l100
  2648                           
  2649                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  2650  001C02  C011  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2651                           
  2652                           ;mcc_generated_files/eusart1.c: 182:     }
  2653  001C06  D010               	goto	l2536
  2654  001C08                     l100:
  2655                           
  2656                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  2657  001C08  989D               	bcf	3997,4,c	;volatile
  2658                           
  2659                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  2660  001C0A  0E80               	movlw	low _eusart1TxBuffer
  2661  001C0C  244B               	addwf	_eusart1TxHead,w,c	;volatile
  2662  001C0E  6ED9               	movwf	fsr2l,c
  2663  001C10  6ADA               	clrf	fsr2h,c
  2664  001C12  0E01               	movlw	high _eusart1TxBuffer
  2665  001C14  22DA               	addwfc	fsr2h,f,c
  2666  001C16  C011  FFDF         	movff	EUSART1_Write@txData,indf2
  2667  001C1A  2A4B               	incf	_eusart1TxHead,f,c	;volatile
  2668                           
  2669                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  2670  001C1C  0E3F               	movlw	63
  2671  001C1E  644B               	cpfsgt	_eusart1TxHead,c	;volatile
  2672  001C20  D002               	goto	l2534
  2673                           
  2674                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2675  001C22  0E00               	movlw	0
  2676  001C24  6E4B               	movwf	_eusart1TxHead,c	;volatile
  2677  001C26                     l2534:
  2678                           
  2679                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2680  001C26  0649               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  2681  001C28                     l2536:
  2682                           
  2683                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  2684  001C28  889D               	bsf	3997,4,c	;volatile
  2685  001C2A  0012               	return		;funcret
  2686  001C2C                     __end_of_EUSART1_Write:
  2687                           	opt callstack 0
  2688                           
  2689 ;; *************** function _abs *****************
  2690 ;; Defined at:
  2691 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  a               2   34[COMRAM] int 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  2   34[COMRAM] int 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:        4 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    5
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_dtoa
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text18
  2720  001C96                     __ptext18:
  2721                           	opt callstack 0
  2722  001C96                     _abs:
  2723                           	opt callstack 19
  2724                           
  2725                           ;incstack = 0
  2726  001C96  BE24               	btfsc	abs@a+1,7,c
  2727  001C98  D005               	goto	u2000
  2728  001C9A  5024               	movf	abs@a+1,w,c
  2729  001C9C  E110               	bnz	l1198
  2730  001C9E  0423               	decf	abs@a,w,c
  2731  001CA0  B0D8               	btfsc	status,0,c
  2732  001CA2  D00D               	goto	l1198
  2733  001CA4                     u2000:
  2734  001CA4  C023  F025         	movff	abs@a,??_abs
  2735  001CA8  C024  F026         	movff	abs@a+1,??_abs+1
  2736  001CAC  1E25               	comf	??_abs,f,c
  2737  001CAE  1E26               	comf	??_abs+1,f,c
  2738  001CB0  4A25               	infsnz	??_abs,f,c
  2739  001CB2  2A26               	incf	??_abs+1,f,c
  2740  001CB4  C025  F023         	movff	??_abs,?_abs
  2741  001CB8  C026  F024         	movff	??_abs+1,?_abs+1
  2742  001CBC  0012               	return	
  2743  001CBE                     l1198:
  2744  001CBE  C023  F023         	movff	abs@a,?_abs
  2745  001CC2  C024  F024         	movff	abs@a+1,?_abs+1
  2746  001CC6  0012               	return		;funcret
  2747  001CC8                     __end_of_abs:
  2748                           	opt callstack 0
  2749                           
  2750 ;; *************** function ___aomod *****************
  2751 ;; Defined at:
  2752 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  dividend        8   16[COMRAM] long long 
  2755 ;;  divisor         8   24[COMRAM] long long 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  sign            1   33[COMRAM] unsigned char 
  2758 ;;  counter         1   32[COMRAM] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  8   16[COMRAM] long long 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2768 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;Total ram usage:       18 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    5
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_dtoa
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text19
  2783  00156A                     __ptext19:
  2784                           	opt callstack 0
  2785  00156A                     ___aomod:
  2786                           	opt callstack 19
  2787                           
  2788                           ;incstack = 0
  2789  00156A  0E00               	movlw	0
  2790  00156C  6E22               	movwf	___aomod@sign,c
  2791  00156E  AE18               	btfss	___aomod@dividend+7,7,c
  2792  001570  D012               	goto	l2650
  2793  001572  1E18               	comf	___aomod@dividend+7,f,c
  2794  001574  1E17               	comf	___aomod@dividend+6,f,c
  2795  001576  1E16               	comf	___aomod@dividend+5,f,c
  2796  001578  1E15               	comf	___aomod@dividend+4,f,c
  2797  00157A  1E14               	comf	___aomod@dividend+3,f,c
  2798  00157C  1E13               	comf	___aomod@dividend+2,f,c
  2799  00157E  1E12               	comf	___aomod@dividend+1,f,c
  2800  001580  6C11               	negf	___aomod@dividend,c
  2801  001582  0E00               	movlw	0
  2802  001584  2212               	addwfc	___aomod@dividend+1,f,c
  2803  001586  2213               	addwfc	___aomod@dividend+2,f,c
  2804  001588  2214               	addwfc	___aomod@dividend+3,f,c
  2805  00158A  2215               	addwfc	___aomod@dividend+4,f,c
  2806  00158C  2216               	addwfc	___aomod@dividend+5,f,c
  2807  00158E  2217               	addwfc	___aomod@dividend+6,f,c
  2808  001590  2218               	addwfc	___aomod@dividend+7,f,c
  2809  001592  0E01               	movlw	1
  2810  001594  6E22               	movwf	___aomod@sign,c
  2811  001596                     l2650:
  2812  001596  AE20               	btfss	___aomod@divisor+7,7,c
  2813  001598  D010               	goto	l2654
  2814  00159A  1E20               	comf	___aomod@divisor+7,f,c
  2815  00159C  1E1F               	comf	___aomod@divisor+6,f,c
  2816  00159E  1E1E               	comf	___aomod@divisor+5,f,c
  2817  0015A0  1E1D               	comf	___aomod@divisor+4,f,c
  2818  0015A2  1E1C               	comf	___aomod@divisor+3,f,c
  2819  0015A4  1E1B               	comf	___aomod@divisor+2,f,c
  2820  0015A6  1E1A               	comf	___aomod@divisor+1,f,c
  2821  0015A8  6C19               	negf	___aomod@divisor,c
  2822  0015AA  0E00               	movlw	0
  2823  0015AC  221A               	addwfc	___aomod@divisor+1,f,c
  2824  0015AE  221B               	addwfc	___aomod@divisor+2,f,c
  2825  0015B0  221C               	addwfc	___aomod@divisor+3,f,c
  2826  0015B2  221D               	addwfc	___aomod@divisor+4,f,c
  2827  0015B4  221E               	addwfc	___aomod@divisor+5,f,c
  2828  0015B6  221F               	addwfc	___aomod@divisor+6,f,c
  2829  0015B8  2220               	addwfc	___aomod@divisor+7,f,c
  2830  0015BA                     l2654:
  2831  0015BA  5019               	movf	___aomod@divisor,w,c
  2832  0015BC  101A               	iorwf	___aomod@divisor+1,w,c
  2833  0015BE  101B               	iorwf	___aomod@divisor+2,w,c
  2834  0015C0  101C               	iorwf	___aomod@divisor+3,w,c
  2835  0015C2  101D               	iorwf	___aomod@divisor+4,w,c
  2836  0015C4  101E               	iorwf	___aomod@divisor+5,w,c
  2837  0015C6  101F               	iorwf	___aomod@divisor+6,w,c
  2838  0015C8  1020               	iorwf	___aomod@divisor+7,w,c
  2839  0015CA  B4D8               	btfsc	status,2,c
  2840  0015CC  D03C               	goto	l2670
  2841  0015CE  0E01               	movlw	1
  2842  0015D0  6E21               	movwf	___aomod@counter,c
  2843  0015D2  D00A               	goto	l2660
  2844  0015D4                     l2658:
  2845  0015D4  90D8               	bcf	status,0,c
  2846  0015D6  3619               	rlcf	___aomod@divisor,f,c
  2847  0015D8  361A               	rlcf	___aomod@divisor+1,f,c
  2848  0015DA  361B               	rlcf	___aomod@divisor+2,f,c
  2849  0015DC  361C               	rlcf	___aomod@divisor+3,f,c
  2850  0015DE  361D               	rlcf	___aomod@divisor+4,f,c
  2851  0015E0  361E               	rlcf	___aomod@divisor+5,f,c
  2852  0015E2  361F               	rlcf	___aomod@divisor+6,f,c
  2853  0015E4  3620               	rlcf	___aomod@divisor+7,f,c
  2854  0015E6  2A21               	incf	___aomod@counter,f,c
  2855  0015E8                     l2660:
  2856  0015E8  AE20               	btfss	___aomod@divisor+7,7,c
  2857  0015EA  D7F4               	goto	l2658
  2858  0015EC                     u2110:
  2859  0015EC  5019               	movf	___aomod@divisor,w,c
  2860  0015EE  5C11               	subwf	___aomod@dividend,w,c
  2861  0015F0  501A               	movf	___aomod@divisor+1,w,c
  2862  0015F2  5812               	subwfb	___aomod@dividend+1,w,c
  2863  0015F4  501B               	movf	___aomod@divisor+2,w,c
  2864  0015F6  5813               	subwfb	___aomod@dividend+2,w,c
  2865  0015F8  501C               	movf	___aomod@divisor+3,w,c
  2866  0015FA  5814               	subwfb	___aomod@dividend+3,w,c
  2867  0015FC  501D               	movf	___aomod@divisor+4,w,c
  2868  0015FE  5815               	subwfb	___aomod@dividend+4,w,c
  2869  001600  501E               	movf	___aomod@divisor+5,w,c
  2870  001602  5816               	subwfb	___aomod@dividend+5,w,c
  2871  001604  501F               	movf	___aomod@divisor+6,w,c
  2872  001606  5817               	subwfb	___aomod@dividend+6,w,c
  2873  001608  5020               	movf	___aomod@divisor+7,w,c
  2874  00160A  5818               	subwfb	___aomod@dividend+7,w,c
  2875  00160C  A0D8               	btfss	status,0,c
  2876  00160E  D010               	goto	l2666
  2877  001610  5019               	movf	___aomod@divisor,w,c
  2878  001612  5E11               	subwf	___aomod@dividend,f,c
  2879  001614  501A               	movf	___aomod@divisor+1,w,c
  2880  001616  5A12               	subwfb	___aomod@dividend+1,f,c
  2881  001618  501B               	movf	___aomod@divisor+2,w,c
  2882  00161A  5A13               	subwfb	___aomod@dividend+2,f,c
  2883  00161C  501C               	movf	___aomod@divisor+3,w,c
  2884  00161E  5A14               	subwfb	___aomod@dividend+3,f,c
  2885  001620  501D               	movf	___aomod@divisor+4,w,c
  2886  001622  5A15               	subwfb	___aomod@dividend+4,f,c
  2887  001624  501E               	movf	___aomod@divisor+5,w,c
  2888  001626  5A16               	subwfb	___aomod@dividend+5,f,c
  2889  001628  501F               	movf	___aomod@divisor+6,w,c
  2890  00162A  5A17               	subwfb	___aomod@dividend+6,f,c
  2891  00162C  5020               	movf	___aomod@divisor+7,w,c
  2892  00162E  5A18               	subwfb	___aomod@dividend+7,f,c
  2893  001630                     l2666:
  2894  001630  90D8               	bcf	status,0,c
  2895  001632  3220               	rrcf	___aomod@divisor+7,f,c
  2896  001634  321F               	rrcf	___aomod@divisor+6,f,c
  2897  001636  321E               	rrcf	___aomod@divisor+5,f,c
  2898  001638  321D               	rrcf	___aomod@divisor+4,f,c
  2899  00163A  321C               	rrcf	___aomod@divisor+3,f,c
  2900  00163C  321B               	rrcf	___aomod@divisor+2,f,c
  2901  00163E  321A               	rrcf	___aomod@divisor+1,f,c
  2902  001640  3219               	rrcf	___aomod@divisor,f,c
  2903  001642  2E21               	decfsz	___aomod@counter,f,c
  2904  001644  D7D3               	goto	u2110
  2905  001646                     l2670:
  2906  001646  5022               	movf	___aomod@sign,w,c
  2907  001648  B4D8               	btfsc	status,2,c
  2908  00164A  D010               	goto	l2674
  2909  00164C  1E18               	comf	___aomod@dividend+7,f,c
  2910  00164E  1E17               	comf	___aomod@dividend+6,f,c
  2911  001650  1E16               	comf	___aomod@dividend+5,f,c
  2912  001652  1E15               	comf	___aomod@dividend+4,f,c
  2913  001654  1E14               	comf	___aomod@dividend+3,f,c
  2914  001656  1E13               	comf	___aomod@dividend+2,f,c
  2915  001658  1E12               	comf	___aomod@dividend+1,f,c
  2916  00165A  6C11               	negf	___aomod@dividend,c
  2917  00165C  0E00               	movlw	0
  2918  00165E  2212               	addwfc	___aomod@dividend+1,f,c
  2919  001660  2213               	addwfc	___aomod@dividend+2,f,c
  2920  001662  2214               	addwfc	___aomod@dividend+3,f,c
  2921  001664  2215               	addwfc	___aomod@dividend+4,f,c
  2922  001666  2216               	addwfc	___aomod@dividend+5,f,c
  2923  001668  2217               	addwfc	___aomod@dividend+6,f,c
  2924  00166A  2218               	addwfc	___aomod@dividend+7,f,c
  2925  00166C                     l2674:
  2926  00166C  C011  F011         	movff	___aomod@dividend,?___aomod
  2927  001670  C012  F012         	movff	___aomod@dividend+1,?___aomod+1
  2928  001674  C013  F013         	movff	___aomod@dividend+2,?___aomod+2
  2929  001678  C014  F014         	movff	___aomod@dividend+3,?___aomod+3
  2930  00167C  C015  F015         	movff	___aomod@dividend+4,?___aomod+4
  2931  001680  C016  F016         	movff	___aomod@dividend+5,?___aomod+5
  2932  001684  C017  F017         	movff	___aomod@dividend+6,?___aomod+6
  2933  001688  C018  F018         	movff	___aomod@dividend+7,?___aomod+7
  2934  00168C  0012               	return		;funcret
  2935  00168E                     __end_of___aomod:
  2936                           	opt callstack 0
  2937                           
  2938 ;; *************** function ___aodiv *****************
  2939 ;; Defined at:
  2940 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  dividend        8   16[COMRAM] long long 
  2943 ;;  divisor         8   24[COMRAM] long long 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  quotient        8   34[COMRAM] long long 
  2946 ;;  sign            1   33[COMRAM] unsigned char 
  2947 ;;  counter         1   32[COMRAM] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  8   16[COMRAM] long long 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:       26 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    5
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_dtoa
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text20
  2972  001422                     __ptext20:
  2973                           	opt callstack 0
  2974  001422                     ___aodiv:
  2975                           	opt callstack 19
  2976                           
  2977                           ;incstack = 0
  2978  001422  0E00               	movlw	0
  2979  001424  6E22               	movwf	___aodiv@sign,c
  2980  001426  AE20               	btfss	___aodiv@divisor+7,7,c
  2981  001428  D012               	goto	l2606
  2982  00142A  1E20               	comf	___aodiv@divisor+7,f,c
  2983  00142C  1E1F               	comf	___aodiv@divisor+6,f,c
  2984  00142E  1E1E               	comf	___aodiv@divisor+5,f,c
  2985  001430  1E1D               	comf	___aodiv@divisor+4,f,c
  2986  001432  1E1C               	comf	___aodiv@divisor+3,f,c
  2987  001434  1E1B               	comf	___aodiv@divisor+2,f,c
  2988  001436  1E1A               	comf	___aodiv@divisor+1,f,c
  2989  001438  6C19               	negf	___aodiv@divisor,c
  2990  00143A  0E00               	movlw	0
  2991  00143C  221A               	addwfc	___aodiv@divisor+1,f,c
  2992  00143E  221B               	addwfc	___aodiv@divisor+2,f,c
  2993  001440  221C               	addwfc	___aodiv@divisor+3,f,c
  2994  001442  221D               	addwfc	___aodiv@divisor+4,f,c
  2995  001444  221E               	addwfc	___aodiv@divisor+5,f,c
  2996  001446  221F               	addwfc	___aodiv@divisor+6,f,c
  2997  001448  2220               	addwfc	___aodiv@divisor+7,f,c
  2998  00144A  0E01               	movlw	1
  2999  00144C  6E22               	movwf	___aodiv@sign,c
  3000  00144E                     l2606:
  3001  00144E  AE18               	btfss	___aodiv@dividend+7,7,c
  3002  001450  D012               	goto	l2612
  3003  001452  1E18               	comf	___aodiv@dividend+7,f,c
  3004  001454  1E17               	comf	___aodiv@dividend+6,f,c
  3005  001456  1E16               	comf	___aodiv@dividend+5,f,c
  3006  001458  1E15               	comf	___aodiv@dividend+4,f,c
  3007  00145A  1E14               	comf	___aodiv@dividend+3,f,c
  3008  00145C  1E13               	comf	___aodiv@dividend+2,f,c
  3009  00145E  1E12               	comf	___aodiv@dividend+1,f,c
  3010  001460  6C11               	negf	___aodiv@dividend,c
  3011  001462  0E00               	movlw	0
  3012  001464  2212               	addwfc	___aodiv@dividend+1,f,c
  3013  001466  2213               	addwfc	___aodiv@dividend+2,f,c
  3014  001468  2214               	addwfc	___aodiv@dividend+3,f,c
  3015  00146A  2215               	addwfc	___aodiv@dividend+4,f,c
  3016  00146C  2216               	addwfc	___aodiv@dividend+5,f,c
  3017  00146E  2217               	addwfc	___aodiv@dividend+6,f,c
  3018  001470  2218               	addwfc	___aodiv@dividend+7,f,c
  3019  001472  0E01               	movlw	1
  3020  001474  1A22               	xorwf	___aodiv@sign,f,c
  3021  001476                     l2612:
  3022  001476  EE20  F023         	lfsr	2,___aodiv@quotient
  3023  00147A  0E07               	movlw	7
  3024  00147C                     u2031:
  3025  00147C  6ADE               	clrf	postinc2,c
  3026  00147E  06E8               	decf	wreg,f,c
  3027  001480  E2FD               	bc	u2031
  3028  001482  5019               	movf	___aodiv@divisor,w,c
  3029  001484  101A               	iorwf	___aodiv@divisor+1,w,c
  3030  001486  101B               	iorwf	___aodiv@divisor+2,w,c
  3031  001488  101C               	iorwf	___aodiv@divisor+3,w,c
  3032  00148A  101D               	iorwf	___aodiv@divisor+4,w,c
  3033  00148C  101E               	iorwf	___aodiv@divisor+5,w,c
  3034  00148E  101F               	iorwf	___aodiv@divisor+6,w,c
  3035  001490  1020               	iorwf	___aodiv@divisor+7,w,c
  3036  001492  B4D8               	btfsc	status,2,c
  3037  001494  D046               	goto	l2634
  3038  001496  0E01               	movlw	1
  3039  001498  6E21               	movwf	___aodiv@counter,c
  3040  00149A  D00A               	goto	l2620
  3041  00149C                     l2618:
  3042  00149C  90D8               	bcf	status,0,c
  3043  00149E  3619               	rlcf	___aodiv@divisor,f,c
  3044  0014A0  361A               	rlcf	___aodiv@divisor+1,f,c
  3045  0014A2  361B               	rlcf	___aodiv@divisor+2,f,c
  3046  0014A4  361C               	rlcf	___aodiv@divisor+3,f,c
  3047  0014A6  361D               	rlcf	___aodiv@divisor+4,f,c
  3048  0014A8  361E               	rlcf	___aodiv@divisor+5,f,c
  3049  0014AA  361F               	rlcf	___aodiv@divisor+6,f,c
  3050  0014AC  3620               	rlcf	___aodiv@divisor+7,f,c
  3051  0014AE  2A21               	incf	___aodiv@counter,f,c
  3052  0014B0                     l2620:
  3053  0014B0  AE20               	btfss	___aodiv@divisor+7,7,c
  3054  0014B2  D7F4               	goto	l2618
  3055  0014B4                     u2050:
  3056  0014B4  90D8               	bcf	status,0,c
  3057  0014B6  3623               	rlcf	___aodiv@quotient,f,c
  3058  0014B8  3624               	rlcf	___aodiv@quotient+1,f,c
  3059  0014BA  3625               	rlcf	___aodiv@quotient+2,f,c
  3060  0014BC  3626               	rlcf	___aodiv@quotient+3,f,c
  3061  0014BE  3627               	rlcf	___aodiv@quotient+4,f,c
  3062  0014C0  3628               	rlcf	___aodiv@quotient+5,f,c
  3063  0014C2  3629               	rlcf	___aodiv@quotient+6,f,c
  3064  0014C4  362A               	rlcf	___aodiv@quotient+7,f,c
  3065  0014C6  5019               	movf	___aodiv@divisor,w,c
  3066  0014C8  5C11               	subwf	___aodiv@dividend,w,c
  3067  0014CA  501A               	movf	___aodiv@divisor+1,w,c
  3068  0014CC  5812               	subwfb	___aodiv@dividend+1,w,c
  3069  0014CE  501B               	movf	___aodiv@divisor+2,w,c
  3070  0014D0  5813               	subwfb	___aodiv@dividend+2,w,c
  3071  0014D2  501C               	movf	___aodiv@divisor+3,w,c
  3072  0014D4  5814               	subwfb	___aodiv@dividend+3,w,c
  3073  0014D6  501D               	movf	___aodiv@divisor+4,w,c
  3074  0014D8  5815               	subwfb	___aodiv@dividend+4,w,c
  3075  0014DA  501E               	movf	___aodiv@divisor+5,w,c
  3076  0014DC  5816               	subwfb	___aodiv@dividend+5,w,c
  3077  0014DE  501F               	movf	___aodiv@divisor+6,w,c
  3078  0014E0  5817               	subwfb	___aodiv@dividend+6,w,c
  3079  0014E2  5020               	movf	___aodiv@divisor+7,w,c
  3080  0014E4  5818               	subwfb	___aodiv@dividend+7,w,c
  3081  0014E6  A0D8               	btfss	status,0,c
  3082  0014E8  D011               	goto	l2630
  3083  0014EA  5019               	movf	___aodiv@divisor,w,c
  3084  0014EC  5E11               	subwf	___aodiv@dividend,f,c
  3085  0014EE  501A               	movf	___aodiv@divisor+1,w,c
  3086  0014F0  5A12               	subwfb	___aodiv@dividend+1,f,c
  3087  0014F2  501B               	movf	___aodiv@divisor+2,w,c
  3088  0014F4  5A13               	subwfb	___aodiv@dividend+2,f,c
  3089  0014F6  501C               	movf	___aodiv@divisor+3,w,c
  3090  0014F8  5A14               	subwfb	___aodiv@dividend+3,f,c
  3091  0014FA  501D               	movf	___aodiv@divisor+4,w,c
  3092  0014FC  5A15               	subwfb	___aodiv@dividend+4,f,c
  3093  0014FE  501E               	movf	___aodiv@divisor+5,w,c
  3094  001500  5A16               	subwfb	___aodiv@dividend+5,f,c
  3095  001502  501F               	movf	___aodiv@divisor+6,w,c
  3096  001504  5A17               	subwfb	___aodiv@dividend+6,f,c
  3097  001506  5020               	movf	___aodiv@divisor+7,w,c
  3098  001508  5A18               	subwfb	___aodiv@dividend+7,f,c
  3099  00150A  8023               	bsf	___aodiv@quotient,0,c
  3100  00150C                     l2630:
  3101  00150C  90D8               	bcf	status,0,c
  3102  00150E  3220               	rrcf	___aodiv@divisor+7,f,c
  3103  001510  321F               	rrcf	___aodiv@divisor+6,f,c
  3104  001512  321E               	rrcf	___aodiv@divisor+5,f,c
  3105  001514  321D               	rrcf	___aodiv@divisor+4,f,c
  3106  001516  321C               	rrcf	___aodiv@divisor+3,f,c
  3107  001518  321B               	rrcf	___aodiv@divisor+2,f,c
  3108  00151A  321A               	rrcf	___aodiv@divisor+1,f,c
  3109  00151C  3219               	rrcf	___aodiv@divisor,f,c
  3110  00151E  2E21               	decfsz	___aodiv@counter,f,c
  3111  001520  D7C9               	goto	u2050
  3112  001522                     l2634:
  3113  001522  5022               	movf	___aodiv@sign,w,c
  3114  001524  B4D8               	btfsc	status,2,c
  3115  001526  D010               	goto	l2638
  3116  001528  1E2A               	comf	___aodiv@quotient+7,f,c
  3117  00152A  1E29               	comf	___aodiv@quotient+6,f,c
  3118  00152C  1E28               	comf	___aodiv@quotient+5,f,c
  3119  00152E  1E27               	comf	___aodiv@quotient+4,f,c
  3120  001530  1E26               	comf	___aodiv@quotient+3,f,c
  3121  001532  1E25               	comf	___aodiv@quotient+2,f,c
  3122  001534  1E24               	comf	___aodiv@quotient+1,f,c
  3123  001536  6C23               	negf	___aodiv@quotient,c
  3124  001538  0E00               	movlw	0
  3125  00153A  2224               	addwfc	___aodiv@quotient+1,f,c
  3126  00153C  2225               	addwfc	___aodiv@quotient+2,f,c
  3127  00153E  2226               	addwfc	___aodiv@quotient+3,f,c
  3128  001540  2227               	addwfc	___aodiv@quotient+4,f,c
  3129  001542  2228               	addwfc	___aodiv@quotient+5,f,c
  3130  001544  2229               	addwfc	___aodiv@quotient+6,f,c
  3131  001546  222A               	addwfc	___aodiv@quotient+7,f,c
  3132  001548                     l2638:
  3133  001548  C023  F011         	movff	___aodiv@quotient,?___aodiv
  3134  00154C  C024  F012         	movff	___aodiv@quotient+1,?___aodiv+1
  3135  001550  C025  F013         	movff	___aodiv@quotient+2,?___aodiv+2
  3136  001554  C026  F014         	movff	___aodiv@quotient+3,?___aodiv+3
  3137  001558  C027  F015         	movff	___aodiv@quotient+4,?___aodiv+4
  3138  00155C  C028  F016         	movff	___aodiv@quotient+5,?___aodiv+5
  3139  001560  C029  F017         	movff	___aodiv@quotient+6,?___aodiv+6
  3140  001564  C02A  F018         	movff	___aodiv@quotient+7,?___aodiv+7
  3141  001568  0012               	return		;funcret
  3142  00156A                     __end_of___aodiv:
  3143                           	opt callstack 0
  3144                           
  3145 ;; *************** function ___lldiv *****************
  3146 ;; Defined at:
  3147 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  dividend        4   16[COMRAM] unsigned long 
  3150 ;;  divisor         4   20[COMRAM] unsigned long 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  quotient        4   24[COMRAM] unsigned long 
  3153 ;;  counter         1   28[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  4   16[COMRAM] unsigned long 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3163 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;Total ram usage:       13 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    5
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_i2c_myinit
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text21
  3178  0018D2                     __ptext21:
  3179                           	opt callstack 0
  3180  0018D2                     ___lldiv:
  3181                           	opt callstack 23
  3182                           
  3183                           ;incstack = 0
  3184  0018D2  0E00               	movlw	0
  3185  0018D4  6E19               	movwf	___lldiv@quotient,c
  3186  0018D6  0E00               	movlw	0
  3187  0018D8  6E1A               	movwf	___lldiv@quotient+1,c
  3188  0018DA  0E00               	movlw	0
  3189  0018DC  6E1B               	movwf	___lldiv@quotient+2,c
  3190  0018DE  0E00               	movlw	0
  3191  0018E0  6E1C               	movwf	___lldiv@quotient+3,c
  3192  0018E2  5015               	movf	___lldiv@divisor,w,c
  3193  0018E4  1016               	iorwf	___lldiv@divisor+1,w,c
  3194  0018E6  1017               	iorwf	___lldiv@divisor+2,w,c
  3195  0018E8  1018               	iorwf	___lldiv@divisor+3,w,c
  3196  0018EA  B4D8               	btfsc	status,2,c
  3197  0018EC  D02A               	goto	l550
  3198  0018EE  0E01               	movlw	1
  3199  0018F0  6E1D               	movwf	___lldiv@counter,c
  3200  0018F2  D006               	goto	l2804
  3201  0018F4                     l2802:
  3202  0018F4  90D8               	bcf	status,0,c
  3203  0018F6  3615               	rlcf	___lldiv@divisor,f,c
  3204  0018F8  3616               	rlcf	___lldiv@divisor+1,f,c
  3205  0018FA  3617               	rlcf	___lldiv@divisor+2,f,c
  3206  0018FC  3618               	rlcf	___lldiv@divisor+3,f,c
  3207  0018FE  2A1D               	incf	___lldiv@counter,f,c
  3208  001900                     l2804:
  3209  001900  AE18               	btfss	___lldiv@divisor+3,7,c
  3210  001902  D7F8               	goto	l2802
  3211  001904                     u2350:
  3212  001904  90D8               	bcf	status,0,c
  3213  001906  3619               	rlcf	___lldiv@quotient,f,c
  3214  001908  361A               	rlcf	___lldiv@quotient+1,f,c
  3215  00190A  361B               	rlcf	___lldiv@quotient+2,f,c
  3216  00190C  361C               	rlcf	___lldiv@quotient+3,f,c
  3217  00190E  5015               	movf	___lldiv@divisor,w,c
  3218  001910  5C11               	subwf	___lldiv@dividend,w,c
  3219  001912  5016               	movf	___lldiv@divisor+1,w,c
  3220  001914  5812               	subwfb	___lldiv@dividend+1,w,c
  3221  001916  5017               	movf	___lldiv@divisor+2,w,c
  3222  001918  5813               	subwfb	___lldiv@dividend+2,w,c
  3223  00191A  5018               	movf	___lldiv@divisor+3,w,c
  3224  00191C  5814               	subwfb	___lldiv@dividend+3,w,c
  3225  00191E  A0D8               	btfss	status,0,c
  3226  001920  D009               	goto	l2814
  3227  001922  5015               	movf	___lldiv@divisor,w,c
  3228  001924  5E11               	subwf	___lldiv@dividend,f,c
  3229  001926  5016               	movf	___lldiv@divisor+1,w,c
  3230  001928  5A12               	subwfb	___lldiv@dividend+1,f,c
  3231  00192A  5017               	movf	___lldiv@divisor+2,w,c
  3232  00192C  5A13               	subwfb	___lldiv@dividend+2,f,c
  3233  00192E  5018               	movf	___lldiv@divisor+3,w,c
  3234  001930  5A14               	subwfb	___lldiv@dividend+3,f,c
  3235  001932  8019               	bsf	___lldiv@quotient,0,c
  3236  001934                     l2814:
  3237  001934  90D8               	bcf	status,0,c
  3238  001936  3218               	rrcf	___lldiv@divisor+3,f,c
  3239  001938  3217               	rrcf	___lldiv@divisor+2,f,c
  3240  00193A  3216               	rrcf	___lldiv@divisor+1,f,c
  3241  00193C  3215               	rrcf	___lldiv@divisor,f,c
  3242  00193E  2E1D               	decfsz	___lldiv@counter,f,c
  3243  001940  D7E1               	goto	u2350
  3244  001942                     l550:
  3245  001942  C019  F011         	movff	___lldiv@quotient,?___lldiv
  3246  001946  C01A  F012         	movff	___lldiv@quotient+1,?___lldiv+1
  3247  00194A  C01B  F013         	movff	___lldiv@quotient+2,?___lldiv+2
  3248  00194E  C01C  F014         	movff	___lldiv@quotient+3,?___lldiv+3
  3249  001952  0012               	return		;funcret
  3250  001954                     __end_of___lldiv:
  3251                           	opt callstack 0
  3252                           
  3253 ;; *************** function _SYSTEM_Initialize *****************
  3254 ;; Defined at:
  3255 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    7
  3276 ;; This function calls:
  3277 ;;		_EUSART1_Initialize
  3278 ;;		_INTERRUPT_Initialize
  3279 ;;		_OSCILLATOR_Initialize
  3280 ;;		_PIN_MANAGER_Initialize
  3281 ;;		_TMR2_Initialize
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text22
  3288  001E34                     __ptext22:
  3289                           	opt callstack 0
  3290  001E34                     _SYSTEM_Initialize:
  3291                           	opt callstack 23
  3292                           
  3293                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3294                           
  3295                           ;incstack = 0
  3296  001E34  EC6D  F00F         	call	_INTERRUPT_Initialize	;wreg free
  3297                           
  3298                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3299  001E38  EC79  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
  3300                           
  3301                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3302  001E3C  EC2E  F00F         	call	_OSCILLATOR_Initialize	;wreg free
  3303                           
  3304                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  3305  001E40  ECFD  F00E         	call	_TMR2_Initialize	;wreg free
  3306                           
  3307                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  3308  001E44  ECAA  F00C         	call	_EUSART1_Initialize	;wreg free
  3309  001E48  0012               	return		;funcret
  3310  001E4A                     __end_of_SYSTEM_Initialize:
  3311                           	opt callstack 0
  3312                           
  3313 ;; *************** function _TMR2_Initialize *****************
  3314 ;; Defined at:
  3315 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;		None
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;Total ram usage:        0 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    6
  3336 ;; This function calls:
  3337 ;;		_TMR2_SetInterruptHandler
  3338 ;; This function is called by:
  3339 ;;		_SYSTEM_Initialize
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text23
  3344  001DFA                     __ptext23:
  3345                           	opt callstack 0
  3346  001DFA                     _TMR2_Initialize:
  3347                           	opt callstack 23
  3348                           
  3349                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  3350                           
  3351                           ;incstack = 0
  3352  001DFA  0E63               	movlw	99
  3353  001DFC  6EBB               	movwf	4027,c	;volatile
  3354                           
  3355                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3356  001DFE  0E00               	movlw	0
  3357  001E00  6EBC               	movwf	4028,c	;volatile
  3358                           
  3359                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3360  001E02  929E               	bcf	3998,1,c	;volatile
  3361                           
  3362                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3363  001E04  829D               	bsf	3997,1,c	;volatile
  3364                           
  3365                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3366  001E06  0EE2               	movlw	low _TMR2_DefaultInterruptHandler
  3367  001E08  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  3368  001E0A  0E1E               	movlw	high _TMR2_DefaultInterruptHandler
  3369  001E0C  6E12               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  3370  001E0E  EC41  F00F         	call	_TMR2_SetInterruptHandler	;wreg free
  3371                           
  3372                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4E;
  3373  001E12  0E4E               	movlw	78
  3374  001E14  6EBA               	movwf	4026,c	;volatile
  3375  001E16  0012               	return		;funcret
  3376  001E18                     __end_of_TMR2_Initialize:
  3377                           	opt callstack 0
  3378                           
  3379 ;; *************** function _TMR2_SetInterruptHandler *****************
  3380 ;; Defined at:
  3381 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  3384 ;;		 -> displayController(1), TMR2_DefaultInterruptHandler(1), 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;Total ram usage:        2 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    5
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_TMR2_Initialize
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text24
  3412  001E82                     __ptext24:
  3413                           	opt callstack 0
  3414  001E82                     _TMR2_SetInterruptHandler:
  3415                           	opt callstack 25
  3416                           
  3417                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  3418                           
  3419                           ;incstack = 0
  3420  001E82  C011  F0D3         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  3421  001E86  C012  F0D4         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  3422  001E8A  0012               	return		;funcret
  3423  001E8C                     __end_of_TMR2_SetInterruptHandler:
  3424                           	opt callstack 0
  3425                           
  3426 ;; *************** function _PIN_MANAGER_Initialize *****************
  3427 ;; Defined at:
  3428 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;Total ram usage:        0 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    5
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_SYSTEM_Initialize
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text25
  3457  001CF2                     __ptext25:
  3458                           	opt callstack 0
  3459  001CF2                     _PIN_MANAGER_Initialize:
  3460                           	opt callstack 24
  3461                           
  3462                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3463                           
  3464                           ;incstack = 0
  3465  001CF2  0E00               	movlw	0
  3466  001CF4  6E89               	movwf	3977,c	;volatile
  3467                           
  3468                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3469  001CF6  0E00               	movlw	0
  3470  001CF8  6E8A               	movwf	3978,c	;volatile
  3471                           
  3472                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3473  001CFA  0E00               	movlw	0
  3474  001CFC  6E8B               	movwf	3979,c	;volatile
  3475                           
  3476                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  3477  001CFE  6892               	setf	3986,c	;volatile
  3478                           
  3479                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  3480  001D00  6893               	setf	3987,c	;volatile
  3481                           
  3482                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3483  001D02  0EBF               	movlw	191
  3484  001D04  6E94               	movwf	3988,c	;volatile
  3485                           
  3486                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3487  001D06  0E3C               	movlw	60
  3488  001D08  010F               	movlb	15	; () banked
  3489  001D0A  6F3A               	movwf	58,b	;volatile
  3490                           
  3491                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  3492  001D0C  0E3F               	movlw	63
  3493  001D0E  6F39               	movwf	57,b	;volatile
  3494                           
  3495                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3496  001D10  0E2F               	movlw	47
  3497  001D12  6F38               	movwf	56,b	;volatile
  3498                           
  3499                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3500  001D14  0E00               	movlw	0
  3501  001D16  6E61               	movwf	3937,c	;volatile
  3502                           
  3503                           ; BSR set to: 15
  3504                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3505  001D18  8EF1               	bsf	4081,7,c	;volatile
  3506                           
  3507                           ; BSR set to: 15
  3508  001D1A  0012               	return		;funcret
  3509  001D1C                     __end_of_PIN_MANAGER_Initialize:
  3510                           	opt callstack 0
  3511                           
  3512 ;; *************** function _OSCILLATOR_Initialize *****************
  3513 ;; Defined at:
  3514 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    5
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_SYSTEM_Initialize
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text26
  3543  001E5C                     __ptext26:
  3544                           	opt callstack 0
  3545  001E5C                     _OSCILLATOR_Initialize:
  3546                           	opt callstack 24
  3547                           
  3548                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  3549                           
  3550                           ; BSR set to: 15
  3551                           ;incstack = 0
  3552  001E5C  0E70               	movlw	112
  3553  001E5E  6ED3               	movwf	4051,c	;volatile
  3554                           
  3555                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
  3556  001E60  0E04               	movlw	4
  3557  001E62  6ED2               	movwf	4050,c	;volatile
  3558                           
  3559                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x40;
  3560  001E64  0E40               	movlw	64
  3561  001E66  6E9B               	movwf	3995,c	;volatile
  3562  001E68                     l174:
  3563                           
  3564                           ;mcc_generated_files/mcc.c: 69:     while(PLLRDY == 0)
  3565  001E68  BED2               	btfsc	4050,7,c	;volatile
  3566  001E6A  0012               	return	
  3567  001E6C  D7FD               	goto	l174
  3568  001E6E                     __end_of_OSCILLATOR_Initialize:
  3569                           	opt callstack 0
  3570                           
  3571 ;; *************** function _INTERRUPT_Initialize *****************
  3572 ;; Defined at:
  3573 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		None
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;Total ram usage:        0 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    5
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_SYSTEM_Initialize
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text27
  3602  001EDA                     __ptext27:
  3603                           	opt callstack 0
  3604  001EDA                     _INTERRUPT_Initialize:
  3605                           	opt callstack 24
  3606                           
  3607                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3608                           
  3609                           ;incstack = 0
  3610  001EDA  9ED0               	bcf	4048,7,c	;volatile
  3611  001EDC  0012               	return		;funcret
  3612  001EDE                     __end_of_INTERRUPT_Initialize:
  3613                           	opt callstack 0
  3614                           
  3615 ;; *************** function _EUSART1_Initialize *****************
  3616 ;; Defined at:
  3617 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;Total ram usage:        0 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    6
  3638 ;; This function calls:
  3639 ;;		_EUSART1_SetErrorHandler
  3640 ;;		_EUSART1_SetFramingErrorHandler
  3641 ;;		_EUSART1_SetOverrunErrorHandler
  3642 ;;		_EUSART1_SetRxInterruptHandler
  3643 ;;		_EUSART1_SetTxInterruptHandler
  3644 ;; This function is called by:
  3645 ;;		_SYSTEM_Initialize
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text28
  3650  001954                     __ptext28:
  3651                           	opt callstack 0
  3652  001954                     _EUSART1_Initialize:
  3653                           	opt callstack 23
  3654                           
  3655                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  3656                           
  3657                           ;incstack = 0
  3658  001954  9A9D               	bcf	3997,5,c	;volatile
  3659                           
  3660                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3661  001956  0E8E               	movlw	low _EUSART1_Receive_ISR
  3662  001958  6E11               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  3663  00195A  0E16               	movlw	high _EUSART1_Receive_ISR
  3664  00195C  6E12               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  3665  00195E  EC4B  F00F         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3666                           
  3667                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  3668  001962  989D               	bcf	3997,4,c	;volatile
  3669                           
  3670                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  3671  001964  0E1C               	movlw	low _EUSART1_Transmit_ISR
  3672  001966  6E11               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  3673  001968  0E1D               	movlw	high _EUSART1_Transmit_ISR
  3674  00196A  6E12               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  3675  00196C  EC46  F00F         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3676                           
  3677                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  3678  001970  0E08               	movlw	8
  3679  001972  6EB8               	movwf	4024,c	;volatile
  3680                           
  3681                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  3682  001974  0E90               	movlw	144
  3683  001976  6EAB               	movwf	4011,c	;volatile
  3684                           
  3685                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  3686  001978  0E24               	movlw	36
  3687  00197A  6EAC               	movwf	4012,c	;volatile
  3688                           
  3689                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x15;
  3690  00197C  0E15               	movlw	21
  3691  00197E  6EAF               	movwf	4015,c	;volatile
  3692                           
  3693                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x01;
  3694  001980  0E01               	movlw	1
  3695  001982  6EB0               	movwf	4016,c	;volatile
  3696                           
  3697                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3698  001984  0EE4               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3699  001986  6E11               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  3700  001988  0E1E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3701  00198A  6E12               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  3702  00198C  EC55  F00F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3703                           
  3704                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3705  001990  0ECE               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3706  001992  6E11               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  3707  001994  0E1E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3708  001996  6E12               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  3709  001998  EC50  F00F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3710                           
  3711                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3712  00199C  0ED4               	movlw	low _EUSART1_DefaultErrorHandler
  3713  00199E  6E11               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  3714  0019A0  0E1E               	movlw	high _EUSART1_DefaultErrorHandler
  3715  0019A2  6E12               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  3716  0019A4  EC5A  F00F         	call	_EUSART1_SetErrorHandler	;wreg free
  3717                           
  3718                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3719  0019A8  0E00               	movlw	0
  3720  0019AA  6E45               	movwf	_eusart1RxLastError,c	;volatile
  3721                           
  3722                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3723  0019AC  0E00               	movlw	0
  3724  0019AE  6E4B               	movwf	_eusart1TxHead,c	;volatile
  3725                           
  3726                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3727  0019B0  0E00               	movlw	0
  3728  0019B2  6E4A               	movwf	_eusart1TxTail,c	;volatile
  3729                           
  3730                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3731  0019B4  0E40               	movlw	64
  3732  0019B6  6E49               	movwf	_eusart1TxBufferRemaining,c	;volatile
  3733                           
  3734                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3735  0019B8  0E00               	movlw	0
  3736  0019BA  6E48               	movwf	_eusart1RxHead,c	;volatile
  3737                           
  3738                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3739  0019BC  0E00               	movlw	0
  3740  0019BE  6E47               	movwf	_eusart1RxTail,c	;volatile
  3741                           
  3742                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3743  0019C0  0E00               	movlw	0
  3744  0019C2  6E46               	movwf	_eusart1RxCount,c	;volatile
  3745                           
  3746                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  3747  0019C4  8A9D               	bsf	3997,5,c	;volatile
  3748  0019C6  0012               	return		;funcret
  3749  0019C8                     __end_of_EUSART1_Initialize:
  3750                           	opt callstack 0
  3751                           
  3752 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3753 ;; Defined at:
  3754 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3757 ;;		 -> EUSART1_Transmit_ISR(1), 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      void 
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;Total ram usage:        2 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    5
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_EUSART1_Initialize
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text29
  3784  001E8C                     __ptext29:
  3785                           	opt callstack 0
  3786  001E8C                     _EUSART1_SetTxInterruptHandler:
  3787                           	opt callstack 23
  3788                           
  3789                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3790                           
  3791                           ;incstack = 0
  3792  001E8C  C011  F0DD         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3793  001E90  C012  F0DE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3794  001E94  0012               	return		;funcret
  3795  001E96                     __end_of_EUSART1_SetTxInterruptHandler:
  3796                           	opt callstack 0
  3797                           
  3798 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3799 ;; Defined at:
  3800 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3803 ;;		 -> EUSART1_Receive_ISR(1), 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;Total ram usage:        2 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    5
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_EUSART1_Initialize
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text30
  3830  001E96                     __ptext30:
  3831                           	opt callstack 0
  3832  001E96                     _EUSART1_SetRxInterruptHandler:
  3833                           	opt callstack 23
  3834                           
  3835                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3836                           
  3837                           ;incstack = 0
  3838  001E96  C011  F0DB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3839  001E9A  C012  F0DC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3840  001E9E  0012               	return		;funcret
  3841  001EA0                     __end_of_EUSART1_SetRxInterruptHandler:
  3842                           	opt callstack 0
  3843                           
  3844 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3845 ;; Defined at:
  3846 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3849 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;Total ram usage:        2 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    5
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_EUSART1_Initialize
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text31
  3876  001EA0                     __ptext31:
  3877                           	opt callstack 0
  3878  001EA0                     _EUSART1_SetOverrunErrorHandler:
  3879                           	opt callstack 23
  3880                           
  3881                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  3882                           
  3883                           ;incstack = 0
  3884  001EA0  C011  F0D7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3885  001EA4  C012  F0D8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3886  001EA8  0012               	return		;funcret
  3887  001EAA                     __end_of_EUSART1_SetOverrunErrorHandler:
  3888                           	opt callstack 0
  3889                           
  3890 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3891 ;; Defined at:
  3892 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3895 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;Total ram usage:        2 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    5
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_EUSART1_Initialize
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text32
  3922  001EAA                     __ptext32:
  3923                           	opt callstack 0
  3924  001EAA                     _EUSART1_SetFramingErrorHandler:
  3925                           	opt callstack 23
  3926                           
  3927                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  3928                           
  3929                           ;incstack = 0
  3930  001EAA  C011  F0D9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3931  001EAE  C012  F0DA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3932  001EB2  0012               	return		;funcret
  3933  001EB4                     __end_of_EUSART1_SetFramingErrorHandler:
  3934                           	opt callstack 0
  3935                           
  3936 ;; *************** function _EUSART1_SetErrorHandler *****************
  3937 ;; Defined at:
  3938 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  3941 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;Total ram usage:        2 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    5
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_EUSART1_Initialize
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text33
  3968  001EB4                     __ptext33:
  3969                           	opt callstack 0
  3970  001EB4                     _EUSART1_SetErrorHandler:
  3971                           	opt callstack 23
  3972                           
  3973                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  3974                           
  3975                           ;incstack = 0
  3976  001EB4  C011  F0D5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3977  001EB8  C012  F0D6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3978  001EBC  0012               	return		;funcret
  3979  001EBE                     __end_of_EUSART1_SetErrorHandler:
  3980                           	opt callstack 0
  3981                           
  3982 ;; *************** function _INTERRUPT_InterruptManager *****************
  3983 ;; Defined at:
  3984 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;Total ram usage:        8 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    4
  4005 ;; This function calls:
  4006 ;;		Absolute function
  4007 ;;		_EUSART1_Receive_ISR
  4008 ;;		_EUSART1_Transmit_ISR
  4009 ;;		_TMR2_ISR
  4010 ;; This function is called by:
  4011 ;;		Interrupt level 2
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	intcode
  4016  000008                     __pintcode:
  4017                           	opt callstack 0
  4018  000008                     _INTERRUPT_InterruptManager:
  4019                           	opt callstack 15
  4020                           
  4021                           ;incstack = 0
  4022  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4023  00000A  CFFA F009          	movff	pclath,??_INTERRUPT_InterruptManager
  4024  00000E  CFFB F00A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4025  000012  CFD9 F00B          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  4026  000016  CFDA F00C          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  4027  00001A  CFF6 F00D          	movff	tblptrl,??_INTERRUPT_InterruptManager+4
  4028  00001E  CFF7 F00E          	movff	tblptrh,??_INTERRUPT_InterruptManager+5
  4029  000022  CFF8 F00F          	movff	tblptru,??_INTERRUPT_InterruptManager+6
  4030  000026  CFF5 F010          	movff	tablat,??_INTERRUPT_InterruptManager+7
  4031                           
  4032                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  4033  00002A  ACF2               	btfss	4082,6,c	;volatile
  4034  00002C  D020               	goto	i2l231
  4035                           
  4036                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  4037  00002E  B89D               	btfsc	3997,4,c	;volatile
  4038  000030  A89E               	btfss	3998,4,c	;volatile
  4039  000032  D009               	goto	i2l230
  4040                           
  4041                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  4042  000034  D801               	call	i2u181_48
  4043  000036  D01B               	goto	i2l231
  4044  000038                     i2u181_48:
  4045  000038  0005               	push	
  4046  00003A  6EFA               	movwf	pclath,c
  4047  00003C  0100               	movlb	0	; () banked
  4048  00003E  51DD               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  4049  000040  6EFD               	movwf	tosl,c
  4050  000042  51DE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  4051  000044  D00B               	goto	L2
  4052  000046                     i2l230:
  4053  000046  BA9D               	btfsc	3997,5,c	;volatile
  4054  000048  AA9E               	btfss	3998,5,c	;volatile
  4055  00004A  D00C               	goto	i2l232
  4056                           
  4057                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  4058  00004C  D801               	call	i2u184_48
  4059  00004E  D00F               	goto	i2l231
  4060  000050                     i2u184_48:
  4061  000050  0005               	push	
  4062  000052  6EFA               	movwf	pclath,c
  4063  000054  0100               	movlb	0	; () banked
  4064  000056  51DB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  4065  000058  6EFD               	movwf	tosl,c
  4066  00005A  51DC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  4067  00005C                     L2:
  4068  00005C  6EFE               	movwf	tosh,c
  4069  00005E  6AFF               	clrf	tosu,c
  4070  000060  50FA               	movf	pclath,w,c
  4071  000062  0012               	return		;indir
  4072  000064                     i2l232:
  4073  000064  B29D               	btfsc	3997,1,c	;volatile
  4074  000066  A29E               	btfss	3998,1,c	;volatile
  4075  000068  D002               	goto	i2l231
  4076                           
  4077                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR2_ISR();
  4078  00006A  ECCB  F00E         	call	_TMR2_ISR	;wreg free
  4079  00006E                     i2l231:
  4080                           
  4081                           ;mcc_generated_files/interrupt_manager.c: 79:     }
  4082  00006E  C010  FFF5         	movff	??_INTERRUPT_InterruptManager+7,tablat
  4083  000072  C00F  FFF8         	movff	??_INTERRUPT_InterruptManager+6,tblptru
  4084  000076  C00E  FFF7         	movff	??_INTERRUPT_InterruptManager+5,tblptrh
  4085  00007A  C00D  FFF6         	movff	??_INTERRUPT_InterruptManager+4,tblptrl
  4086  00007E  C00C  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  4087  000082  C00B  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  4088  000086  C00A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4089  00008A  C009  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4090  00008E  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4091  000090  0011               	retfie		f
  4092  000092                     __end_of_INTERRUPT_InterruptManager:
  4093                           	opt callstack 0
  4094                           
  4095 ;; *************** function _TMR2_ISR *****************
  4096 ;; Defined at:
  4097 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;Total ram usage:        0 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    3
  4118 ;; This function calls:
  4119 ;;		_TMR2_CallBack
  4120 ;; This function is called by:
  4121 ;;		_INTERRUPT_InterruptManager
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text35
  4126  001D96                     __ptext35:
  4127                           	opt callstack 0
  4128  001D96                     _TMR2_ISR:
  4129                           	opt callstack 15
  4130                           
  4131                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  4132                           
  4133                           ;incstack = 0
  4134  001D96  929E               	bcf	3998,1,c	;volatile
  4135                           
  4136                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 10)
  4137  001D98  0100               	movlb	0	; () banked
  4138  001D9A  4BD1               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
  4139  001D9C  2BD2               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  4140  001D9E  51D2               	movf	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  4141  001DA0  E104               	bnz	i2u177_40
  4142  001DA2  0E0A               	movlw	10
  4143  001DA4  5DD1               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
  4144  001DA6  A0D8               	btfss	status,0,c
  4145  001DA8  0012               	return	
  4146  001DAA                     i2u177_40:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  4150  001DAA  ECDD  F00E         	call	_TMR2_CallBack	;wreg free
  4151                           
  4152                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  4153  001DAE  0E00               	movlw	0
  4154  001DB0  0100               	movlb	0	; () banked
  4155  001DB2  6FD2               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
  4156  001DB4  0E00               	movlw	0
  4157  001DB6  6FD1               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
  4158                           
  4159                           ; BSR set to: 0
  4160  001DB8  0012               	return		;funcret
  4161  001DBA                     __end_of_TMR2_ISR:
  4162                           	opt callstack 0
  4163                           
  4164 ;; *************** function _TMR2_CallBack *****************
  4165 ;; Defined at:
  4166 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;		None
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;Total ram usage:        0 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    2
  4187 ;; This function calls:
  4188 ;;		Absolute function
  4189 ;;		_TMR2_DefaultInterruptHandler
  4190 ;;		_displayController
  4191 ;; This function is called by:
  4192 ;;		_TMR2_ISR
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text36
  4197  001DBA                     __ptext36:
  4198                           	opt callstack 0
  4199  001DBA                     _TMR2_CallBack:
  4200                           	opt callstack 15
  4201                           
  4202                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;incstack = 0
  4206  001DBA  0100               	movlb	0	; () banked
  4207  001DBC  51D3               	movf	_TMR2_InterruptHandler& (0+255),w,b
  4208  001DBE  11D4               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  4209  001DC0  B4D8               	btfsc	status,2,c
  4210  001DC2  0012               	return	
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  4214  001DC4  D801               	call	i2u163_48
  4215  001DC6  0012               	return	
  4216  001DC8                     i2u163_48:
  4217  001DC8  0005               	push	
  4218  001DCA  6EFA               	movwf	pclath,c
  4219  001DCC  51D3               	movf	_TMR2_InterruptHandler& (0+255),w,b
  4220  001DCE  6EFD               	movwf	tosl,c
  4221  001DD0  51D4               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  4222  001DD2  6EFE               	movwf	tosh,c
  4223  001DD4  6AFF               	clrf	tosu,c
  4224  001DD6  50FA               	movf	pclath,w,c
  4225  001DD8  0012               	return		;indir
  4226  001DDA                     __end_of_TMR2_CallBack:
  4227                           	opt callstack 0
  4228                           
  4229 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4230 ;; Defined at:
  4231 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		None
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_TMR2_Initialize
  4255 ;;		_TMR2_CallBack
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text37
  4260  001EE2                     __ptext37:
  4261                           	opt callstack 0
  4262  001EE2                     _TMR2_DefaultInterruptHandler:
  4263                           	opt callstack 16
  4264                           
  4265                           ;incstack = 0
  4266  001EE2  0012               	return		;funcret
  4267  001EE4                     __end_of_TMR2_DefaultInterruptHandler:
  4268                           	opt callstack 0
  4269                           
  4270 ;; *************** function _displayController *****************
  4271 ;; Defined at:
  4272 ;;		line 112 in file "main.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;Total ram usage:        0 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    1
  4293 ;; This function calls:
  4294 ;;		___awdiv
  4295 ;;		___awmod
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;;		_TMR2_CallBack
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text38
  4303  0017BC                     __ptext38:
  4304                           	opt callstack 0
  4305  0017BC                     _displayController:
  4306                           	opt callstack 15
  4307                           
  4308                           ;main.c: 114:     if(number > 9)
  4309                           
  4310                           ;incstack = 0
  4311  0017BC  0E09               	movlw	9
  4312  0017BE  644C               	cpfsgt	_number,c
  4313  0017C0  D017               	goto	i2l353
  4314                           
  4315                           ;main.c: 115:     {;main.c: 116:         decimal_1 = number / 10;
  4316  0017C2  C04C  F001         	movff	_number,___awdiv@dividend
  4317  0017C6  6A02               	clrf	___awdiv@dividend+1,c
  4318  0017C8  0E00               	movlw	0
  4319  0017CA  6E04               	movwf	___awdiv@divisor+1,c
  4320  0017CC  0E0A               	movlw	10
  4321  0017CE  6E03               	movwf	___awdiv@divisor,c
  4322  0017D0  EC27  F00C         	call	___awdiv	;wreg free
  4323  0017D4  5001               	movf	?___awdiv,w,c
  4324  0017D6  6E44               	movwf	_decimal_1,c
  4325                           
  4326                           ;main.c: 117:         decimal_2 = number % 10;
  4327  0017D8  C04C  F001         	movff	_number,___awmod@dividend
  4328  0017DC  6A02               	clrf	___awmod@dividend+1,c
  4329  0017DE  0E00               	movlw	0
  4330  0017E0  6E04               	movwf	___awmod@divisor+1,c
  4331  0017E2  0E0A               	movlw	10
  4332  0017E4  6E03               	movwf	___awmod@divisor,c
  4333  0017E6  ECE4  F00C         	call	___awmod	;wreg free
  4334  0017EA  5001               	movf	?___awmod,w,c
  4335  0017EC  6E43               	movwf	_decimal_2,c
  4336                           
  4337                           ;main.c: 118:     }
  4338  0017EE  D004               	goto	i2l2278
  4339  0017F0                     i2l353:
  4340                           
  4341                           ;main.c: 120:     {;main.c: 121:         decimal_2 = number;
  4342  0017F0  C04C  F043         	movff	_number,_decimal_2
  4343                           
  4344                           ;main.c: 122:         decimal_1 = empty;
  4345  0017F4  C0C6  F044         	movff	_empty,_decimal_1
  4346  0017F8                     i2l2278:
  4347                           
  4348                           ;main.c: 125:     if(flipflop == 0)
  4349  0017F8  0100               	movlb	0	; () banked
  4350  0017FA  51CF               	movf	_flipflop& (0+255),w,b
  4351  0017FC  11D0               	iorwf	(_flipflop+1)& (0+255),w,b
  4352  0017FE  A4D8               	btfss	status,2,c
  4353  001800  D013               	goto	i2l2286
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;main.c: 126:     {;main.c: 127:         PORTC = 0b00000010;
  4357  001802  0E02               	movlw	2
  4358  001804  6E82               	movwf	3970,c	;volatile
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;main.c: 128:         PORTA = get7seg[decimal_1];
  4362  001806  0E13               	movlw	low _get7seg
  4363  001808  2444               	addwf	_decimal_1,w,c
  4364  00180A  6EF6               	movwf	tblptrl,c
  4365  00180C  6AF7               	clrf	tblptrh,c
  4366  00180E  0E10               	movlw	high _get7seg
  4367  001810  22F7               	addwfc	tblptrh,f,c
  4368  001812                     	if	1	;There are 3 active tblptr bytes
  4369  001812  6AF8               	clrf	tblptru,c
  4370  001814  0E00               	movlw	low (__mediumconst shr (0+16))
  4371  001816  22F8               	addwfc	tblptru,f,c
  4372  001818                     	endif
  4373  001818  0008               	tblrd		*
  4374  00181A  CFF5 FF80          	movff	tablat,3968	;volatile
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;main.c: 129:         flipflop = 1;
  4378  00181E  0E00               	movlw	0
  4379  001820  6FD0               	movwf	(_flipflop+1)& (0+255),b
  4380  001822  0E01               	movlw	1
  4381  001824  6FCF               	movwf	_flipflop& (0+255),b
  4382                           
  4383                           ;main.c: 130:     }
  4384  001826  0012               	return	
  4385  001828                     i2l2286:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;main.c: 132:     {;main.c: 133:         PORTC = 0b00000001;
  4389  001828  0E01               	movlw	1
  4390  00182A  6E82               	movwf	3970,c	;volatile
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;main.c: 134:         PORTA = get7seg[decimal_2];
  4394  00182C  0E13               	movlw	low _get7seg
  4395  00182E  2443               	addwf	_decimal_2,w,c
  4396  001830  6EF6               	movwf	tblptrl,c
  4397  001832  6AF7               	clrf	tblptrh,c
  4398  001834  0E10               	movlw	high _get7seg
  4399  001836  22F7               	addwfc	tblptrh,f,c
  4400  001838                     	if	1	;There are 3 active tblptr bytes
  4401  001838  6AF8               	clrf	tblptru,c
  4402  00183A  0E00               	movlw	low (__mediumconst shr (0+16))
  4403  00183C  22F8               	addwfc	tblptru,f,c
  4404  00183E                     	endif
  4405  00183E  0008               	tblrd		*
  4406  001840  CFF5 FF80          	movff	tablat,3968	;volatile
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;main.c: 135:         flipflop = 0;
  4410  001844  0E00               	movlw	0
  4411  001846  6FD0               	movwf	(_flipflop+1)& (0+255),b
  4412  001848  0E00               	movlw	0
  4413  00184A  6FCF               	movwf	_flipflop& (0+255),b
  4414                           
  4415                           ; BSR set to: 0
  4416  00184C  0012               	return		;funcret
  4417  00184E                     __end_of_displayController:
  4418                           	opt callstack 0
  4419                           
  4420 ;; *************** function ___awmod *****************
  4421 ;; Defined at:
  4422 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  dividend        2    0[COMRAM] int 
  4425 ;;  divisor         2    2[COMRAM] int 
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  sign            1    5[COMRAM] unsigned char 
  4428 ;;  counter         1    4[COMRAM] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  2    0[COMRAM] int 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;Total ram usage:        6 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_displayController
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text39
  4452  0019C8                     __ptext39:
  4453                           	opt callstack 0
  4454  0019C8                     ___awmod:
  4455                           	opt callstack 15
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;incstack = 0
  4459  0019C8  0E00               	movlw	0
  4460  0019CA  6E06               	movwf	___awmod@sign,c
  4461  0019CC  AE02               	btfss	___awmod@dividend+1,7,c
  4462  0019CE  D006               	goto	i2l2214
  4463  0019D0  6C01               	negf	___awmod@dividend,c
  4464  0019D2  1E02               	comf	___awmod@dividend+1,f,c
  4465  0019D4  B0D8               	btfsc	status,0,c
  4466  0019D6  2A02               	incf	___awmod@dividend+1,f,c
  4467  0019D8  0E01               	movlw	1
  4468  0019DA  6E06               	movwf	___awmod@sign,c
  4469  0019DC                     i2l2214:
  4470  0019DC  AE04               	btfss	___awmod@divisor+1,7,c
  4471  0019DE  D004               	goto	i2l2218
  4472  0019E0  6C03               	negf	___awmod@divisor,c
  4473  0019E2  1E04               	comf	___awmod@divisor+1,f,c
  4474  0019E4  B0D8               	btfsc	status,0,c
  4475  0019E6  2A04               	incf	___awmod@divisor+1,f,c
  4476  0019E8                     i2l2218:
  4477  0019E8  5003               	movf	___awmod@divisor,w,c
  4478  0019EA  1004               	iorwf	___awmod@divisor+1,w,c
  4479  0019EC  B4D8               	btfsc	status,2,c
  4480  0019EE  D018               	goto	i2l2234
  4481  0019F0  0E01               	movlw	1
  4482  0019F2  6E05               	movwf	___awmod@counter,c
  4483  0019F4  D004               	goto	i2l2224
  4484  0019F6                     i2l2222:
  4485  0019F6  90D8               	bcf	status,0,c
  4486  0019F8  3603               	rlcf	___awmod@divisor,f,c
  4487  0019FA  3604               	rlcf	___awmod@divisor+1,f,c
  4488  0019FC  2A05               	incf	___awmod@counter,f,c
  4489  0019FE                     i2l2224:
  4490  0019FE  AE04               	btfss	___awmod@divisor+1,7,c
  4491  001A00  D7FA               	goto	i2l2222
  4492  001A02                     i2u150_40:
  4493  001A02  5003               	movf	___awmod@divisor,w,c
  4494  001A04  5C01               	subwf	___awmod@dividend,w,c
  4495  001A06  5004               	movf	___awmod@divisor+1,w,c
  4496  001A08  5802               	subwfb	___awmod@dividend+1,w,c
  4497  001A0A  A0D8               	btfss	status,0,c
  4498  001A0C  D004               	goto	i2l2230
  4499  001A0E  5003               	movf	___awmod@divisor,w,c
  4500  001A10  5E01               	subwf	___awmod@dividend,f,c
  4501  001A12  5004               	movf	___awmod@divisor+1,w,c
  4502  001A14  5A02               	subwfb	___awmod@dividend+1,f,c
  4503  001A16                     i2l2230:
  4504  001A16  90D8               	bcf	status,0,c
  4505  001A18  3204               	rrcf	___awmod@divisor+1,f,c
  4506  001A1A  3203               	rrcf	___awmod@divisor,f,c
  4507  001A1C  2E05               	decfsz	___awmod@counter,f,c
  4508  001A1E  D7F1               	goto	i2u150_40
  4509  001A20                     i2l2234:
  4510  001A20  5006               	movf	___awmod@sign,w,c
  4511  001A22  B4D8               	btfsc	status,2,c
  4512  001A24  D004               	goto	i2l2238
  4513  001A26  6C01               	negf	___awmod@dividend,c
  4514  001A28  1E02               	comf	___awmod@dividend+1,f,c
  4515  001A2A  B0D8               	btfsc	status,0,c
  4516  001A2C  2A02               	incf	___awmod@dividend+1,f,c
  4517  001A2E                     i2l2238:
  4518  001A2E  C001  F001         	movff	___awmod@dividend,?___awmod
  4519  001A32  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4520  001A36  0012               	return		;funcret
  4521  001A38                     __end_of___awmod:
  4522                           	opt callstack 0
  4523                           
  4524 ;; *************** function ___awdiv *****************
  4525 ;; Defined at:
  4526 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  dividend        2    0[COMRAM] int 
  4529 ;;  divisor         2    2[COMRAM] int 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  quotient        2    6[COMRAM] int 
  4532 ;;  sign            1    5[COMRAM] unsigned char 
  4533 ;;  counter         1    4[COMRAM] unsigned char 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  2    0[COMRAM] int 
  4536 ;; Registers used:
  4537 ;;		wreg, status,2, status,0
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;Total ram usage:        8 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_displayController
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text40
  4557  00184E                     __ptext40:
  4558                           	opt callstack 0
  4559  00184E                     ___awdiv:
  4560                           	opt callstack 15
  4561                           
  4562                           ;incstack = 0
  4563  00184E  0E00               	movlw	0
  4564  001850  6E06               	movwf	___awdiv@sign,c
  4565  001852  AE04               	btfss	___awdiv@divisor+1,7,c
  4566  001854  D006               	goto	i2l2170
  4567  001856  6C03               	negf	___awdiv@divisor,c
  4568  001858  1E04               	comf	___awdiv@divisor+1,f,c
  4569  00185A  B0D8               	btfsc	status,0,c
  4570  00185C  2A04               	incf	___awdiv@divisor+1,f,c
  4571  00185E  0E01               	movlw	1
  4572  001860  6E06               	movwf	___awdiv@sign,c
  4573  001862                     i2l2170:
  4574  001862  AE02               	btfss	___awdiv@dividend+1,7,c
  4575  001864  D006               	goto	i2l2176
  4576  001866  6C01               	negf	___awdiv@dividend,c
  4577  001868  1E02               	comf	___awdiv@dividend+1,f,c
  4578  00186A  B0D8               	btfsc	status,0,c
  4579  00186C  2A02               	incf	___awdiv@dividend+1,f,c
  4580  00186E  0E01               	movlw	1
  4581  001870  1A06               	xorwf	___awdiv@sign,f,c
  4582  001872                     i2l2176:
  4583  001872  0E00               	movlw	0
  4584  001874  6E08               	movwf	___awdiv@quotient+1,c
  4585  001876  0E00               	movlw	0
  4586  001878  6E07               	movwf	___awdiv@quotient,c
  4587  00187A  5003               	movf	___awdiv@divisor,w,c
  4588  00187C  1004               	iorwf	___awdiv@divisor+1,w,c
  4589  00187E  B4D8               	btfsc	status,2,c
  4590  001880  D01C               	goto	i2l2198
  4591  001882  0E01               	movlw	1
  4592  001884  6E05               	movwf	___awdiv@counter,c
  4593  001886  D004               	goto	i2l2184
  4594  001888                     i2l2182:
  4595  001888  90D8               	bcf	status,0,c
  4596  00188A  3603               	rlcf	___awdiv@divisor,f,c
  4597  00188C  3604               	rlcf	___awdiv@divisor+1,f,c
  4598  00188E  2A05               	incf	___awdiv@counter,f,c
  4599  001890                     i2l2184:
  4600  001890  AE04               	btfss	___awdiv@divisor+1,7,c
  4601  001892  D7FA               	goto	i2l2182
  4602  001894                     i2u144_40:
  4603  001894  90D8               	bcf	status,0,c
  4604  001896  3607               	rlcf	___awdiv@quotient,f,c
  4605  001898  3608               	rlcf	___awdiv@quotient+1,f,c
  4606  00189A  5003               	movf	___awdiv@divisor,w,c
  4607  00189C  5C01               	subwf	___awdiv@dividend,w,c
  4608  00189E  5004               	movf	___awdiv@divisor+1,w,c
  4609  0018A0  5802               	subwfb	___awdiv@dividend+1,w,c
  4610  0018A2  A0D8               	btfss	status,0,c
  4611  0018A4  D005               	goto	i2l2194
  4612  0018A6  5003               	movf	___awdiv@divisor,w,c
  4613  0018A8  5E01               	subwf	___awdiv@dividend,f,c
  4614  0018AA  5004               	movf	___awdiv@divisor+1,w,c
  4615  0018AC  5A02               	subwfb	___awdiv@dividend+1,f,c
  4616  0018AE  8007               	bsf	___awdiv@quotient,0,c
  4617  0018B0                     i2l2194:
  4618  0018B0  90D8               	bcf	status,0,c
  4619  0018B2  3204               	rrcf	___awdiv@divisor+1,f,c
  4620  0018B4  3203               	rrcf	___awdiv@divisor,f,c
  4621  0018B6  2E05               	decfsz	___awdiv@counter,f,c
  4622  0018B8  D7ED               	goto	i2u144_40
  4623  0018BA                     i2l2198:
  4624  0018BA  5006               	movf	___awdiv@sign,w,c
  4625  0018BC  B4D8               	btfsc	status,2,c
  4626  0018BE  D004               	goto	i2l2202
  4627  0018C0  6C07               	negf	___awdiv@quotient,c
  4628  0018C2  1E08               	comf	___awdiv@quotient+1,f,c
  4629  0018C4  B0D8               	btfsc	status,0,c
  4630  0018C6  2A08               	incf	___awdiv@quotient+1,f,c
  4631  0018C8                     i2l2202:
  4632  0018C8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4633  0018CC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4634  0018D0  0012               	return		;funcret
  4635  0018D2                     __end_of___awdiv:
  4636                           	opt callstack 0
  4637                           
  4638 ;; *************** function _EUSART1_Transmit_ISR *****************
  4639 ;; Defined at:
  4640 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;		None
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;		None
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      void 
  4647 ;; Registers used:
  4648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;Total ram usage:        0 bytes
  4659 ;; Hardware stack levels used:    1
  4660 ;; This function calls:
  4661 ;;		Nothing
  4662 ;; This function is called by:
  4663 ;;		_EUSART1_Initialize
  4664 ;;		_INTERRUPT_InterruptManager
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text41
  4669  001D1C                     __ptext41:
  4670                           	opt callstack 0
  4671  001D1C                     _EUSART1_Transmit_ISR:
  4672                           	opt callstack 18
  4673                           
  4674                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  4675                           
  4676                           ;incstack = 0
  4677  001D1C  0E40               	movlw	64
  4678  001D1E  6049               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  4679  001D20  D010               	goto	i2l112
  4680                           
  4681                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  4682  001D22  0E80               	movlw	low _eusart1TxBuffer
  4683  001D24  244A               	addwf	_eusart1TxTail,w,c	;volatile
  4684  001D26  6ED9               	movwf	fsr2l,c
  4685  001D28  6ADA               	clrf	fsr2h,c
  4686  001D2A  0E01               	movlw	high _eusart1TxBuffer
  4687  001D2C  22DA               	addwfc	fsr2h,f,c
  4688  001D2E  50DF               	movf	indf2,w,c
  4689  001D30  6EAD               	movwf	4013,c	;volatile
  4690  001D32  2A4A               	incf	_eusart1TxTail,f,c	;volatile
  4691                           
  4692                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  4693  001D34  0E3F               	movlw	63
  4694  001D36  644A               	cpfsgt	_eusart1TxTail,c	;volatile
  4695  001D38  D002               	goto	i2l2432
  4696                           
  4697                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  4698  001D3A  0E00               	movlw	0
  4699  001D3C  6E4A               	movwf	_eusart1TxTail,c	;volatile
  4700  001D3E                     i2l2432:
  4701                           
  4702                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  4703  001D3E  2A49               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  4704                           
  4705                           ;mcc_generated_files/eusart1.c: 218:     }
  4706  001D40  0012               	return	
  4707  001D42                     i2l112:
  4708                           
  4709                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  4710  001D42  989D               	bcf	3997,4,c	;volatile
  4711  001D44  0012               	return		;funcret
  4712  001D46                     __end_of_EUSART1_Transmit_ISR:
  4713                           	opt callstack 0
  4714                           
  4715 ;; *************** function _EUSART1_Receive_ISR *****************
  4716 ;; Defined at:
  4717 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;		None
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;		None
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      void 
  4724 ;; Registers used:
  4725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;Total ram usage:        0 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    2
  4738 ;; This function calls:
  4739 ;;		Absolute function
  4740 ;;		_EUSART1_DefaultErrorHandler
  4741 ;;		_EUSART1_DefaultFramingErrorHandler
  4742 ;;		_EUSART1_DefaultOverrunErrorHandler
  4743 ;;		_EUSART1_RxDataHandler
  4744 ;; This function is called by:
  4745 ;;		_EUSART1_Initialize
  4746 ;;		_INTERRUPT_InterruptManager
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text42
  4751  00168E                     __ptext42:
  4752                           	opt callstack 0
  4753  00168E                     _EUSART1_Receive_ISR:
  4754                           	opt callstack 16
  4755                           
  4756                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  4757                           
  4758                           ;incstack = 0
  4759  00168E  0E00               	movlw	low _eusart1RxStatusBuffer
  4760  001690  2448               	addwf	_eusart1RxHead,w,c	;volatile
  4761  001692  6ED9               	movwf	fsr2l,c
  4762  001694  6ADA               	clrf	fsr2h,c
  4763  001696  0E01               	movlw	high _eusart1RxStatusBuffer
  4764  001698  22DA               	addwfc	fsr2h,f,c
  4765  00169A  0E00               	movlw	0
  4766  00169C  6EDF               	movwf	indf2,c
  4767                           
  4768                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  4769  00169E  A4AB               	btfss	4011,2,c	;volatile
  4770  0016A0  D014               	goto	i2u172_49
  4771                           
  4772                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  4773  0016A2  0E00               	movlw	low _eusart1RxStatusBuffer
  4774  0016A4  2448               	addwf	_eusart1RxHead,w,c	;volatile
  4775  0016A6  6ED9               	movwf	fsr2l,c
  4776  0016A8  6ADA               	clrf	fsr2h,c
  4777  0016AA  0E01               	movlw	high _eusart1RxStatusBuffer
  4778  0016AC  22DA               	addwfc	fsr2h,f,c
  4779  0016AE  0101               	movlb	1	; () banked
  4780  0016B0  82DF               	bsf	indf2,1,c
  4781                           
  4782                           ; BSR set to: 1
  4783                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  4784  0016B2  D801               	call	i2u172_48
  4785  0016B4  D00A               	goto	i2u172_49
  4786  0016B6                     i2u172_48:
  4787  0016B6  0005               	push	
  4788  0016B8  6EFA               	movwf	pclath,c
  4789  0016BA  0100               	movlb	0	; () banked
  4790  0016BC  51D9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  4791  0016BE  6EFD               	movwf	tosl,c
  4792  0016C0  51DA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  4793  0016C2  6EFE               	movwf	tosh,c
  4794  0016C4  6AFF               	clrf	tosu,c
  4795  0016C6  50FA               	movf	pclath,w,c
  4796  0016C8  0012               	return		;indir
  4797  0016CA                     i2u172_49:
  4798                           
  4799                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  4800  0016CA  A2AB               	btfss	4011,1,c	;volatile
  4801  0016CC  D014               	goto	i2u174_49
  4802                           
  4803                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  4804  0016CE  0E00               	movlw	low _eusart1RxStatusBuffer
  4805  0016D0  2448               	addwf	_eusart1RxHead,w,c	;volatile
  4806  0016D2  6ED9               	movwf	fsr2l,c
  4807  0016D4  6ADA               	clrf	fsr2h,c
  4808  0016D6  0E01               	movlw	high _eusart1RxStatusBuffer
  4809  0016D8  22DA               	addwfc	fsr2h,f,c
  4810  0016DA  0101               	movlb	1	; () banked
  4811  0016DC  84DF               	bsf	indf2,2,c
  4812                           
  4813                           ; BSR set to: 1
  4814                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  4815  0016DE  D801               	call	i2u174_48
  4816  0016E0  D00A               	goto	i2u174_49
  4817  0016E2                     i2u174_48:
  4818  0016E2  0005               	push	
  4819  0016E4  6EFA               	movwf	pclath,c
  4820  0016E6  0100               	movlb	0	; () banked
  4821  0016E8  51D7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  4822  0016EA  6EFD               	movwf	tosl,c
  4823  0016EC  51D8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  4824  0016EE  6EFE               	movwf	tosh,c
  4825  0016F0  6AFF               	clrf	tosu,c
  4826  0016F2  50FA               	movf	pclath,w,c
  4827  0016F4  0012               	return		;indir
  4828  0016F6                     i2u174_49:
  4829                           
  4830                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  4831  0016F6  0E00               	movlw	low _eusart1RxStatusBuffer
  4832  0016F8  2448               	addwf	_eusart1RxHead,w,c	;volatile
  4833  0016FA  6ED9               	movwf	fsr2l,c
  4834  0016FC  6ADA               	clrf	fsr2h,c
  4835  0016FE  0E01               	movlw	high _eusart1RxStatusBuffer
  4836  001700  22DA               	addwfc	fsr2h,f,c
  4837  001702  50DF               	movf	indf2,w,c
  4838  001704  B4D8               	btfsc	status,2,c
  4839  001706  D00C               	goto	i2l2452
  4840                           
  4841                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  4842  001708  D801               	call	i2u176_48
  4843  00170A  0012               	return	
  4844  00170C                     i2u176_48:
  4845  00170C  0005               	push	
  4846  00170E  6EFA               	movwf	pclath,c
  4847  001710  0100               	movlb	0	; () banked
  4848  001712  51D5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  4849  001714  6EFD               	movwf	tosl,c
  4850  001716  51D6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  4851  001718  6EFE               	movwf	tosh,c
  4852  00171A  6AFF               	clrf	tosu,c
  4853  00171C  50FA               	movf	pclath,w,c
  4854  00171E  0012               	return		;indir
  4855  001720                     i2l2452:
  4856                           
  4857                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  4858  001720  ECED  F00E         	call	_EUSART1_RxDataHandler	;wreg free
  4859  001724  0012               	return		;funcret
  4860  001726                     __end_of_EUSART1_Receive_ISR:
  4861                           	opt callstack 0
  4862                           
  4863 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  4864 ;; Defined at:
  4865 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		None
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_EUSART1_Initialize
  4889 ;;		_EUSART1_Receive_ISR
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text43
  4894  001ECE                     __ptext43:
  4895                           	opt callstack 0
  4896  001ECE                     _EUSART1_DefaultOverrunErrorHandler:
  4897                           	opt callstack 17
  4898                           
  4899                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  4900                           
  4901                           ;incstack = 0
  4902  001ECE  98AB               	bcf	4011,4,c	;volatile
  4903                           
  4904                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  4905  001ED0  88AB               	bsf	4011,4,c	;volatile
  4906  001ED2  0012               	return		;funcret
  4907  001ED4                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  4908                           	opt callstack 0
  4909                           
  4910 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4911 ;; Defined at:
  4912 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		None
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;Total ram usage:        0 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_EUSART1_Initialize
  4936 ;;		_EUSART1_Receive_ISR
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text44
  4941  001EE4                     __ptext44:
  4942                           	opt callstack 0
  4943  001EE4                     _EUSART1_DefaultFramingErrorHandler:
  4944                           	opt callstack 17
  4945                           
  4946                           ;incstack = 0
  4947  001EE4  0012               	return		;funcret
  4948  001EE6                     __end_of_EUSART1_DefaultFramingErrorHandler:
  4949                           	opt callstack 0
  4950                           
  4951 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  4952 ;; Defined at:
  4953 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    1
  4974 ;; This function calls:
  4975 ;;		_EUSART1_RxDataHandler
  4976 ;; This function is called by:
  4977 ;;		_EUSART1_Initialize
  4978 ;;		_EUSART1_Receive_ISR
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text45
  4983  001ED4                     __ptext45:
  4984                           	opt callstack 0
  4985  001ED4                     _EUSART1_DefaultErrorHandler:
  4986                           	opt callstack 16
  4987                           
  4988                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  4989                           
  4990                           ;incstack = 0
  4991  001ED4  ECED  F00E         	call	_EUSART1_RxDataHandler	;wreg free
  4992  001ED8  0012               	return		;funcret
  4993  001EDA                     __end_of_EUSART1_DefaultErrorHandler:
  4994                           	opt callstack 0
  4995                           
  4996 ;; *************** function _EUSART1_RxDataHandler *****************
  4997 ;; Defined at:
  4998 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;Total ram usage:        0 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_EUSART1_Receive_ISR
  5022 ;;		_EUSART1_DefaultErrorHandler
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text46
  5027  001DDA                     __ptext46:
  5028                           	opt callstack 0
  5029  001DDA                     _EUSART1_RxDataHandler:
  5030                           	opt callstack 17
  5031                           
  5032                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  5033                           
  5034                           ;incstack = 0
  5035  001DDA  0E40               	movlw	low _eusart1RxBuffer
  5036  001DDC  2448               	addwf	_eusart1RxHead,w,c	;volatile
  5037  001DDE  6ED9               	movwf	fsr2l,c
  5038  001DE0  6ADA               	clrf	fsr2h,c
  5039  001DE2  0E01               	movlw	high _eusart1RxBuffer
  5040  001DE4  22DA               	addwfc	fsr2h,f,c
  5041  001DE6  CFAE FFDF          	movff	4014,indf2	;volatile
  5042  001DEA  2A48               	incf	_eusart1RxHead,f,c	;volatile
  5043                           
  5044                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  5045  001DEC  0E3F               	movlw	63
  5046  001DEE  6448               	cpfsgt	_eusart1RxHead,c	;volatile
  5047  001DF0  D002               	goto	i2l2260
  5048                           
  5049                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  5050  001DF2  0E00               	movlw	0
  5051  001DF4  6E48               	movwf	_eusart1RxHead,c	;volatile
  5052  001DF6                     i2l2260:
  5053                           
  5054                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  5055  001DF6  2A46               	incf	_eusart1RxCount,f,c	;volatile
  5056  001DF8  0012               	return		;funcret
  5057  001DFA                     __end_of_EUSART1_RxDataHandler:
  5058                           	opt callstack 0
  5059                           
  5060                           	psect	text47
  5061  000000                     __ptext47:
  5062                           	opt callstack 0
  5063                           
  5064                           	psect	rparam
  5065  0000                     
  5066                           	psect	temp
  5067  00004F                     btemp:
  5068                           	opt callstack 0
  5069  00004F                     	ds	1
  5070  0000                     int$flags	set	btemp
  5071  0000                     wtemp8	set	btemp+1
  5072  0000                     ttemp5	set	btemp+1
  5073  0000                     ttemp6	set	btemp+4
  5074  0000                     ttemp7	set	btemp+8
  5075                           tosu	equ	0xFFF
  5076                           tosh	equ	0xFFE
  5077                           tosl	equ	0xFFD
  5078                           stkptr	equ	0xFFC
  5079                           pclatu	equ	0xFFB
  5080                           pclath	equ	0xFFA
  5081                           pcl	equ	0xFF9
  5082                           tblptru	equ	0xFF8
  5083                           tblptrh	equ	0xFF7
  5084                           tblptrl	equ	0xFF6
  5085                           tablat	equ	0xFF5
  5086                           prodh	equ	0xFF4
  5087                           prodl	equ	0xFF3
  5088                           indf0	equ	0xFEF
  5089                           postinc0	equ	0xFEE
  5090                           postdec0	equ	0xFED
  5091                           preinc0	equ	0xFEC
  5092                           plusw0	equ	0xFEB
  5093                           fsr0h	equ	0xFEA
  5094                           fsr0l	equ	0xFE9
  5095                           wreg	equ	0xFE8
  5096                           indf1	equ	0xFE7
  5097                           postinc1	equ	0xFE6
  5098                           postdec1	equ	0xFE5
  5099                           preinc1	equ	0xFE4
  5100                           plusw1	equ	0xFE3
  5101                           fsr1h	equ	0xFE2
  5102                           fsr1l	equ	0xFE1
  5103                           bsr	equ	0xFE0
  5104                           indf2	equ	0xFDF
  5105                           postinc2	equ	0xFDE
  5106                           postdec2	equ	0xFDD
  5107                           preinc2	equ	0xFDC
  5108                           plusw2	equ	0xFDB
  5109                           fsr2h	equ	0xFDA
  5110                           fsr2l	equ	0xFD9
  5111                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    30
    Data        56
    BSS         257
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      78
    BANK0           160     54     159
    BANK1           256      5     197
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1550_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[10]), STR_2(CODE[17]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayController(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayController(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _readTemperature->_i2c_read
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _displayController->___awdiv

Critical Paths under _main in BANK0

    _main->_readTemperature
    _i2c_read->_printf
    _i2c_myinit->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _readTemperature->_i2c_myinit

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   26328
                                             53 BANK0      1     1      0
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                             _printf
                    _readTemperature
 ---------------------------------------------------------------------------------
 (1) _readTemperature                                      1     1      0   17174
                                             52 BANK0      1     1      0
                         _i2c_myinit
                           _i2c_read
                    _i2c_set_address
            _i2c_set_start_condition
             _i2c_set_stop_condition
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_set_stop_condition                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_set_start_condition                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_set_address                                      1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             1     1      0    8316
                                             61 COMRAM     1     1      0
                           _i2c_wait
                             _printf
 ---------------------------------------------------------------------------------
 (2) _i2c_wait                                             1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_myinit                                           5     5      0    8802
                                              0 BANK1      5     5      0
                            ___lldiv
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               8     4      4    8282
                                             44 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7931
                                             36 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    7458
                                             55 COMRAM     6     0      6
                                             26 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             45 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             34 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             27 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             18 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             17 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Write                                        1     1      0      62
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             34 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             16 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             16 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                             16 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          8     8      0     900
                                              8 COMRAM     8     8      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0     900
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR2_CallBack                                       0     0      0     900
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                  _displayController *
 ---------------------------------------------------------------------------------
 (15) _displayController                                   0     0      0     900
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (16) ___awmod                                             6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (15) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
   _readTemperature
     _i2c_myinit
       ___lldiv
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
     _i2c_read
       _i2c_wait
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
     _i2c_set_address
     _i2c_set_start_condition
     _i2c_set_stop_condition
     _i2c_wait

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _displayController *
         ___awdiv
         ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5      C5       7       77.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     36      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      4E       1       83.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B2      12        0.0%
DATA                 0      0     1B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Oct 06 12:54:12 2020

              __end_of_TMR2_SetInterruptHandler 1E8C                        _eusart1TxBufferRemaining 0049  
                                             _x 004E                       i2c_set_address@targetAddr 0011  
                                  ___awdiv@sign 0006                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l100 1C08                                             l174 1E68  
                                           l550 1942                                             l393 1EC8  
                                           l475 1754                                             l486 10C4  
                                           l399 1EC0                                             l488 10CC  
                                  __CFG_CPB$OFF 000000                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                             _abs 1C96  
                                           _pad 1726                                    ___awmod@sign 0006  
                               _TMR2_Initialize 1DFA                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          ?_abs 0023                                            l1198 1CBE  
                                          l2520 1BF8                                            l2620 14B0  
                                          l2612 1476                                            l2630 150C  
                                          l2606 144E                                            l2534 1C26  
                                          l2702 10F4                                            l2536 1C28  
                                          l2560 1BDE                                            l2712 11EE  
                                          l2802 18F4                                            l2618 149C  
                                          l2634 1522                                            l2650 1596  
                                          l2546 1ABC                                            l2804 1900  
                                          l2660 15E8                                            l2556 1BC8  
                                          l2564 1CD2                                            l2580 174C  
                                          l2732 1254                                            l2814 1934  
                                          l2638 1548                                            l2670 1646  
                                          l2654 15BA                                            l2566 1CD6  
                                          l2590 17A2                                            l2582 175E  
                                          l2576 173E                                            l2736 126C  
                                          l2840 1E30                                            l2674 166C  
                                          l2666 1630                                            l2658 15D4  
                                          l2586 1776                                            l2684 10A8  
                                          l2764 13CA                                            l2758 138C  
                                          l2774 13EC                                            l2838 1E22  
                                          ?_pad 0023                                            l2768 13D4  
                                          l2698 10E6                                            l2786 1B24  
                                          l2788 1B4A                                            l2868 1C76  
                                          STR_1 101F                                            STR_2 1033  
                                          STR_3 1044                                            u2000 1CA4  
                                          u2110 15EC                                            u2031 147C  
                                          u2200 10E0                                            u2050 14B4  
                                          u2210 11FE                                            u2140 107A  
                                          _LATA 000F89                                            u2230 1220  
                                          u2150 107C                                            u2310 130E  
                                          _LATB 000F8A                                            u2231 121E  
                                          _LATC 000F8B                                            u2240 122E  
                                          u2250 1232                                            u2180 10BA  
                                          u2350 1904                                            u2270 123E  
                                          u1910 1AB4                                            u1930 1AFC  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 1BF6                               ??_i2c_set_address 0011  
                                          abs@a 0023                                            _dbuf 00DF  
                                          _main 1C62                        ??_i2c_set_stop_condition 0011  
                                          _dtoa 1050                                            _prec 003F  
                                          _nout 00CB                                            pad@i 002A  
                                          pad@p 0027                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002C  
                                          fsr2l 000FD9                                            btemp 004F  
                                 __CFG_BORV$190 000000                                            start 0092  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                    __end_of_temperature_string 1013                                           ??_abs 0025  
                                         ??_pad 0029                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 1E6E                           _eusart1RxStatusBuffer 0100  
                               __end_of___aodiv 156A                                           ?_main 0001  
                                         ?_dtoa 002E                                 __end_of___aomod 168E  
                               __end_of___awdiv 18D2                                 __end_of___awmod 1A38  
                               __end_of___lldiv 1954                                 ___awdiv@divisor 0003  
                                         _T2CON 000FBA                                  __CFG_DEBUG$OFF 000000  
                                         i2l112 1D42                                           i2l230 0046  
                                         i2l231 006E                                           i2l232 0064  
                                         _AElig 00B6                                           i2l353 17F0  
                               ___awdiv@counter 0005                                    vfpfcnvrt@fmt 003A  
                                         _PORTA 000F80                                           _PORTC 000F82  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                       ??_i2c_set_start_condition 0011  
                               __end_of_get7seg 101F                                           _Aring 0096  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 1D1C                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR2_ISR 1DBA                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                         _aelig 00BE                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0041                                           _aring 009E  
                                         _empty 00C6                                           _fputc 1AA4  
                                         _fputs 1BBE                              __CFG_MCLRE$EXTMCLR 000000  
                                         pad@fp 0023                                           _width 00CD  
                                         _putch 1E78                                           dtoa@d 0030  
                                         dtoa@i 0078                                           dtoa@n 0070  
                                         dtoa@p 006A                                           dtoa@s 006E  
                                         dtoa@w 006C                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                         ttemp5 0050                                           ttemp6 0053  
                                         ttemp7 0057                                           status 000FD8  
                                         wtemp8 0050                                  __CFG_HFOFST$ON 000000  
    __end_of_EUSART1_DefaultFramingErrorHandler 1EE6     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 1EE4                                  __CFG_PBADEN$ON 000000  
                               __initialization 1A38                                      _i2c_myinit 1B68  
                    __end_of_EUSART1_Initialize 19C8                                    __end_of_main 1C96  
                                  __end_of_dtoa 1296                                __end_of_i2c_read 1E34  
                              __end_of_i2c_wait 1E5C                         __end_of_TMR2_Initialize 1E18  
                   ?_INTERRUPT_InterruptManager 0001                        _TMR2_SetInterruptHandler 1E82  
                                        ??_main 003F                                          ??_dtoa 0060  
                                 __activetblptr 000003                           ?_EUSART1_Transmit_ISR 0001  
                               _readTemperature 1D46                                          ?_fputc 0013  
                                        ?_fputs 001C                                ___awdiv@dividend 0001  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        i2l2202 18C8                                          i2l2230 1A16  
                                        i2l2222 19F6                                          i2l2214 19DC  
                                        i2l2224 19FE                                          i2l2170 1862  
                                        i2l2234 1A20                                          i2l2218 19E8  
                                        i2l2260 1DF6                                          i2l2182 1888  
                                        i2l2238 1A2E                                          i2l2432 1D3E  
                                        i2l2184 1890                                          i2l2176 1872  
                                        i2l2194 18B0                                          i2l2452 1720  
                                        i2l2198 18BA                                          i2l2286 1828  
                                        i2l2278 17F8                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                         readTemperature@result 0094                 __size_of_i2c_set_stop_condition 0008  
                                        _TXSTA1 000FAC                                  __CFG_XINST$OFF 000000  
                                        _Oslash 00A6                                    vfprintf@cfmt 008A  
                                     ??___aodiv 0021                                       ??___aomod 0021  
                                     ??___awdiv 0005                                  __CFG_STVREN$ON 000000  
                                     ??___awmod 0005                                          _degree 00C8  
                                     ??___lldiv 0019                        ?_EUSART1_SetErrorHandler 0011  
                                        clear_0 1A7C                                          clear_1 1A88  
                                        clear_2 1A94                                ___awdiv@quotient 0007  
                               ___awmod@divisor 0003                                          _number 004C  
                                        _oslash 00AE                                 ___awmod@counter 0005  
                                        _printf 1D6E                                          pad@buf 0025  
              ??_EUSART1_SetOverrunErrorHandler 0013                 ?_EUSART1_SetOverrunErrorHandler 0011  
                                        dtoa@fp 002E                                          _strlen 1CC8  
                                        fputc@c 0013                                          fputs@c 0020  
                                        fputs@i 0021                                    __pdataCOMRAM 004C  
                                        fputs@s 001C                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 1B68  
                               ??_EUSART1_Write 0011        TMR2_SetInterruptHandler@InterruptHandler 0011  
                               _eusart1RxBuffer 0140                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0180                               _SYSTEM_Initialize 1E34  
                                    __accesstop 0060                         __end_of__initialization 1A9A  
                         __end_of_TMR2_CallBack 1DDA                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 0020  
                 __end_of_EUSART1_RxDataHandler 1DFA                                  __pcstackCOMRAM 0001  
                                   ?_i2c_myinit 0001                                    __pidataBANK0 1C2C  
                           ??_SYSTEM_Initialize 0013                                       ?_TMR2_ISR 0001  
                                 __end_of_fputc 1B10                                   __end_of_fputs 1BF6  
                                 __end_of_putch 1E82                                ?_TMR2_Initialize 0001  
                       __end_of_readTemperature 1D6E                          _i2c_set_stop_condition 1EBE  
                        ??_EUSART1_Transmit_ISR 0001                                 _i2c_set_address 1E6E  
                   __end_of_EUSART1_Receive_ISR 1726                                         ??_fputc 0017  
                     __end_of_SYSTEM_Initialize 1E4A                                         ??_fputs 0020  
                                       ??_putch 0012                                   _eusart1RxHead 0048  
                                 _eusart1TxHead 004B                                   _eusart1RxTail 0047  
                                    __pbssBANK0 00CB                                      __pbssBANK1 0100  
                                 _eusart1TxTail 004A               _EUSART1_TxDefaultInterruptHandler 00DD  
               ??_EUSART1_SetRxInterruptHandler 0013                                 __CFG_PLLCFG$OFF 000000  
                                     ?_i2c_read 0001                                       ?_i2c_wait 0001  
               __end_of_EUSART1_SetErrorHandler 1EBE                              __CFG_CCP2MX$PORTC1 000000  
                                    ??_TMR2_ISR 0009                              __CFG_CCP3MX$PORTB5 000000  
                                       ?_printf 008C                                         ?_strlen 0011  
        __end_of_EUSART1_SetFramingErrorHandler 1EB4         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 1EAA                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 018C  
                                       _OSCTUNE 000F9B                              _temperature_string 1001  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                           __size_of_i2c_myinit 0056                                      ??_i2c_read 003E  
                                    ??_i2c_wait 0011                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 0000                                         __Lparam 0000  
                    ??_TMR2_SetInterruptHandler 0013                                         ___aodiv 1422  
                                       ___aomod 156A                                         ___awdiv 184E  
                                       ___awmod 19C8                                         ___lldiv 18D2  
                       __end_of_i2c_set_address 1E78                                       ?_vfprintf 0084  
                                  __psmallconst 1000                                         __pcinit 1A38  
                                       _get7seg 1013                                ?_readTemperature 0001  
                                       __ramtop 1000                                         __ptext0 1C62  
                                       __ptext1 1D46                                         __ptext2 1EBE  
                                       __ptext3 1EC6                                         __ptext4 1E6E  
                                       __ptext5 1E18                                         __ptext6 1E4A  
                                       __ptext7 1B68                                         __ptext8 1D6E  
                                       __ptext9 1B10                                 __size_of_printf 0028  
                               __size_of_strlen 002A                           _OSCILLATOR_Initialize 1E5C  
                                     _T2CONbits 000FBA                                    __size_of_abs 0032  
                                  __size_of_pad 0096                             i2c_myinit@i2c_clock 01C4  
                              ___awmod@dividend 0001                              _EUSART1_Initialize 1954  
                      ??_PIN_MANAGER_Initialize 0011                   ??_EUSART1_DefaultErrorHandler 0001  
                    __size_of_SYSTEM_Initialize 0016                            end_of_initialization 1A9A  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0015  
                   _EUSART1_OverrunErrorHandler 00D7                                         fputs@fp 001E  
                               ___lldiv@divisor 0015           __end_of_EUSART1_SetRxInterruptHandler 1EA0  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 1E96  
                               ___lldiv@counter 001D                               __end_of_vfpfcnvrt 1422  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                      ??_vfprintf 003E  
                          ??_EUSART1_Initialize 0013                                         strlen@a 0013  
                                       strlen@s 0011                        ?_i2c_set_start_condition 0001  
                                     _TRISCbits 000F94                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0011                               _displayController 17BC  
                                    main@number 0095                              ?_displayController 0001  
          __size_of_EUSART1_DefaultErrorHandler 0006                                    ??_i2c_myinit 003E  
                  __end_of_INTERRUPT_Initialize 1EDE                         ?_i2c_set_stop_condition 0001  
          __end_of_TMR2_DefaultInterruptHandler 1EE4           __size_of_TMR2_DefaultInterruptHandler 0002  
                  _TMR2_DefaultInterruptHandler 1EE2                                ?_i2c_set_address 0001  
                           ??_displayController 0009                                     vfpfcnvrt@ap 003C  
                                   vfpfcnvrt@fp 0038                                     vfpfcnvrt@ll 007C  
                                 __pidataCOMRAM 1EDE                               __size_of_TMR2_ISR 0024  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 1D96  
                                __end_of_strlen 1CF2                             start_initialization 1A38  
               __size_of_PIN_MANAGER_Initialize 002A                                     __end_of_abs 1CC8  
                                   __end_of_pad 17BC   EUSART1_SetRxInterruptHandler@interruptHandler 0011  
 EUSART1_SetTxInterruptHandler@interruptHandler 0011                                     putch@txData 0012  
                            __end_of_i2c_myinit 1BBE                           __end_of_EUSART1_Write 1C2C  
                     __end_of_displayController 184E                                _temperature_addr 00CA  
                             __size_of_i2c_read 001C                               __size_of_i2c_wait 0012  
                                   vfprintf@fmt 0086                  __end_of_i2c_set_stop_condition 1EC6  
               __end_of_i2c_set_start_condition 1ECE                           _EUSART1_RxDataHandler 1DDA  
                ?_EUSART1_SetRxInterruptHandler 0011                                     __pdataBANK0 0096  
                 ?_TMR2_DefaultInterruptHandler 0001                                        ??_printf 003E  
                                      ??_strlen 0013                                  _eusart1RxCount 0046  
                        __size_of_TMR2_CallBack 0020                                     __pbssCOMRAM 003F  
             _EUSART1_RxDefaultInterruptHandler 00DB                   __size_of_EUSART1_Transmit_ISR 002A  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 01C0  
                              ___aodiv@dividend 0011                        __size_of_TMR2_Initialize 001E  
               ??_EUSART1_SetTxInterruptHandler 0013                ??_EUSART1_SetFramingErrorHandler 0013  
               ?_EUSART1_SetFramingErrorHandler 0011                    __size_of_EUSART1_Receive_ISR 0098  
                                     _decimal_1 0044                                       _decimal_2 0043  
                        _PIN_MANAGER_Initialize 1CF2                                       _dtoa$1089 0068  
                                     __pintcode 0008                                        ?___aodiv 0011  
                                      ?___aomod 0011                                        ?___awdiv 0001  
                              ___aodiv@quotient 0023                                        ?___awmod 0001  
                                      ?___lldiv 0011                    ??_INTERRUPT_InterruptManager 0009  
                              __CFG_PRICLKEN$ON 000000                                       _display_1 004D  
                                     _display_2 00C9                               __size_of_vfprintf 0058  
                                   __smallconst 1000                                        _BAUDCON1 000FB8  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1ED4     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 1ECE                            _EUSART1_ErrorHandler 00D5  
                       _EUSART1_SetErrorHandler 1EB4                                  __size_of_fputc 006C  
                                __size_of_fputs 0038                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 1EDA                      __size_of_displayController 0092  
       EUSART1_SetErrorHandler@interruptHandler 0011                                   _TMR2_CallBack 1DBA  
                                      _PIE1bits 000F9D                                        i2u150_40 1A02  
           __size_of_INTERRUPT_InterruptManager 008A                                        i2u144_40 1894  
                                      i2u163_48 1DC8                                        i2u172_48 16B6  
                                      i2u172_49 16CA                                        i2u181_48 0038  
                                      i2u174_48 16E2                                        i2u174_49 16F6  
                                      i2u176_48 170C                                        i2u177_40 1DAA  
                                      i2u184_48 0050                                        _PIR1bits 000F9E  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                              __CFG_WDTPS$32768 000000                                        _SSP1CON1 000FC6  
                                      _SSP2CON2 000F6B                                        _TMR2_ISR 1D96  
                                      _SSP1STAT 000FC7                                       _vfpfcnvrt 1296  
                ??_TMR2_DefaultInterruptHandler 0001               __size_of_TMR2_SetInterruptHandler 000A  
                     ?_TMR2_SetInterruptHandler 0011                        __size_of_readTemperature 0028  
                                   _INTCON2bits 000FF1                                       copy_data0 1A4C  
                         ?_INTERRUPT_Initialize 0001                __size_of_i2c_set_start_condition 0008  
                                      _i2c_read 1E18                                        _i2c_wait 1E4A  
                             ??_TMR2_Initialize 0013                                  ?_TMR2_CallBack 0001  
         __end_of_EUSART1_SetTxInterruptHandler 1E96          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 1E8C                                        __Hrparam 0000  
                                    vfprintf@ap 0088                                        __Lrparam 0000  
                                    vfprintf@fp 0084                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0011  
                              __size_of___aodiv 0148                                __size_of___aomod 0124  
                              __size_of___awdiv 0084                                __size_of___awmod 0070  
                              __size_of___lldiv 0082                     __size_of_EUSART1_Initialize 0074  
                                    ?_vfpfcnvrt 0038                                 ___aodiv@divisor 0019  
                               ___aodiv@counter 0021                                      _ANSELCbits 000F3A  
                     ??_EUSART1_SetErrorHandler 0013             __end_of_EUSART1_DefaultErrorHandler 1EDA  
                   _EUSART1_DefaultErrorHandler 1ED4                                        __ptext10 1296  
                                      __ptext11 1050                                        __ptext20 1422  
                                      __ptext12 1726                                        __ptext21 18D2  
                                      __ptext13 1CC8                                        __ptext30 1E96  
                                      __ptext22 1E34                                        __ptext14 1BBE  
                                      __ptext31 1EA0                                        __ptext23 1DFA  
                                      __ptext15 1AA4                                        __ptext40 184E  
                                      __ptext32 1EAA                                        __ptext24 1E82  
                                      __ptext16 1E78                                        __ptext41 1D1C  
                                      __ptext33 1EB4                                        __ptext25 1CF2  
                                      __ptext17 1BF6                                        __ptext42 168E  
                                      __ptext26 1E5C                                        __ptext18 1C96  
                                      __ptext43 1ECE                                        __ptext35 1D96  
                                      __ptext27 1EDA                                        __ptext19 156A  
                                      __ptext44 1EE4                                        __ptext36 1DBA  
                                      __ptext28 1954                                        __ptext45 1ED4  
                                      __ptext37 1EE2                                        __ptext29 1E8C  
                                      __ptext46 1DDA                                        __ptext38 17BC  
                                      __ptext47 0000                                        __ptext39 19C8  
                                  _SSP1CON2bits 000FC5                                        _flipflop 00CF  
                                 __size_of_main 0034                                   __size_of_dtoa 0246  
EUSART1_SetOverrunErrorHandler@interruptHandler 0011                                        int$flags 004F  
                                      _vfprintf 1B10              __end_of_INTERRUPT_InterruptManager 0092  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 008C  
                   _EUSART1_FramingErrorHandler 00D9                             _EUSART1_Receive_ISR 168E  
                              ___aomod@dividend 0011                                      _INTCONbits 000FF2  
                      __size_of_i2c_set_address 000A                          ??_INTERRUPT_Initialize 0011  
                                      intlevel2 0000                                 ??_TMR2_CallBack 0009  
                          ?_EUSART1_Receive_ISR 0001                                ___lldiv@dividend 0011  
                       ?_PIN_MANAGER_Initialize 0001                               ??_readTemperature 003F  
        __end_of_EUSART1_SetOverrunErrorHandler 1EAA         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1EA0                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 1D46                                        printf@ap 0092  
EUSART1_SetFramingErrorHandler@interruptHandler 0011                  ?_EUSART1_SetTxInterruptHandler 0011  
                               ___aomod@divisor 0019                                     ??_vfpfcnvrt 007A  
                               ___aomod@counter 0021                          __size_of_EUSART1_Write 0036  
                            _eusart1RxLastError 0045                                ___lldiv@quotient 0019  
                         TMR2_ISR@CountCallBack 00D1                               __CFG_T3CMX$PORTC0 000000  
                       _i2c_set_start_condition 1EC6                                    ___aodiv@sign 0022  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 1D1C  
                             __CFG_FOSC$INTIO67 000000                           _TMR2_InterruptHandler 00D3  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0022  
