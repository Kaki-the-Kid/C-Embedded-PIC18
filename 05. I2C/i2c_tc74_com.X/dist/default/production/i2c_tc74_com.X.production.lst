

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 19:27:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.32
    64                           ; Generated 02/02/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F26K22 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	smallconst
   100  001000                     __psmallconst:
   101                           	callstack 0
   102  001000  00                 	db	0
   103  001001  48                 	db	72
   104  001002                     __end_of_tempaddrTC74:
   105                           	callstack 0
   106  0000                     _ANSELCbits	set	3898
   107  0000                     _ANSELA	set	3896
   108  0000                     _ANSELB	set	3897
   109  0000                     _ANSELC	set	3898
   110  0000                     _SSP1STATbits	set	4039
   111  0000                     _SSP1BUF	set	4041
   112  0000                     _SSP1CON2bits	set	4037
   113  0000                     _SSP1STAT	set	4039
   114  0000                     _SSP1CON2	set	4037
   115  0000                     _SSP1CON1	set	4038
   116  0000                     _SSP1ADD	set	4040
   117  0000                     _TRISCbits	set	3988
   118  0000                     _PIR1bits	set	3998
   119  0000                     _RCONbits	set	4048
   120  0000                     _RCREG1	set	4014
   121  0000                     _RCSTA1bits	set	4011
   122  0000                     _TXREG1	set	4013
   123  0000                     _TXSTA1bits	set	4012
   124  0000                     _SPBRGH1	set	4016
   125  0000                     _SPBRG1	set	4015
   126  0000                     _TXSTA1	set	4012
   127  0000                     _RCSTA1	set	4011
   128  0000                     _BAUDCON1	set	4024
   129  0000                     _PIE1bits	set	3997
   130  0000                     _INTCONbits	set	4082
   131  0000                     _INTCON2bits	set	4081
   132  0000                     _WPUB	set	3937
   133  0000                     _TRISC	set	3988
   134  0000                     _TRISB	set	3987
   135  0000                     _TRISA	set	3986
   136  0000                     _LATC	set	3979
   137  0000                     _LATB	set	3978
   138  0000                     _LATA	set	3977
   139  0000                     _OSCTUNE	set	3995
   140  0000                     _OSCCON2	set	4050
   141  0000                     _OSCCON	set	4051
   142  0000                     _PLLRDY	set	32407
   143  001002                     
   144                           ; BSR set to: 0
   145  001002  4E                 	db	78	;'N'
   146  001003  41                 	db	65	;'A'
   147  001004  43                 	db	67	;'C'
   148  001005  4B                 	db	75	;'K'
   149  001006  20                 	db	32
   150  001007  2D                 	db	45
   151  001008  20                 	db	32
   152  001009  46                 	db	70	;'F'
   153  00100A  65                 	db	101	;'e'
   154  00100B  6A                 	db	106	;'j'
   155  00100C  6C                 	db	108	;'l'
   156  00100D  20                 	db	32
   157  00100E  69                 	db	105	;'i'
   158  00100F  20                 	db	32
   159  001010  73                 	db	115	;'s'
   160  001011  6B                 	db	107	;'k'
   161  001012  72                 	db	114	;'r'
   162  001013  69                 	db	105	;'i'
   163  001014  76                 	db	118	;'v'
   164  001015  6E                 	db	110	;'n'
   165  001016  69                 	db	105	;'i'
   166  001017  6E                 	db	110	;'n'
   167  001018  67                 	db	103	;'g'
   168  001019  20                 	db	32
   169  00101A  61                 	db	97	;'a'
   170  00101B  66                 	db	102	;'f'
   171  00101C  20                 	db	32
   172  00101D  64                 	db	100	;'d'
   173  00101E  61                 	db	97	;'a'
   174  00101F  74                 	db	116	;'t'
   175  001020  61                 	db	97	;'a'
   176  001021  0D                 	db	13
   177  001022  0A                 	db	10
   178  001023  00                 	db	0
   179  001024                     
   180                           ; BSR set to: 0
   181  001024  41                 	db	65	;'A'
   182  001025  43                 	db	67	;'C'
   183  001026  4B                 	db	75	;'K'
   184  001027  20                 	db	32
   185  001028  2D                 	db	45
   186  001029  20                 	db	32
   187  00102A  53                 	db	83	;'S'
   188  00102B  6B                 	db	107	;'k'
   189  00102C  72                 	db	114	;'r'
   190  00102D  65                 	db	101	;'e'
   191  00102E  76                 	db	118	;'v'
   192  00102F  20                 	db	32
   193  001030  64                 	db	100	;'d'
   194  001031  61                 	db	97	;'a'
   195  001032  74                 	db	116	;'t'
   196  001033  61                 	db	97	;'a'
   197  001034  3A                 	db	58	;':'
   198  001035  20                 	db	32
   199  001036  25                 	db	37
   200  001037  23                 	db	35
   201  001038  30                 	db	48	;'0'
   202  001039  32                 	db	50	;'2'
   203  00103A  58                 	db	88	;'X'
   204  00103B  20                 	db	32
   205  00103C  2D                 	db	45
   206  00103D  20                 	db	32
   207  00103E  25                 	db	37
   208  00103F  63                 	db	99	;'c'
   209  001040  0A                 	db	10
   210  001041  0D                 	db	13
   211  001042  00                 	db	0
   212  001043                     STR_1:
   213                           
   214                           ; BSR set to: 0
   215  001043  52                 	db	82	;'R'
   216  001044  65                 	db	101	;'e'
   217  001045  74                 	db	116	;'t'
   218  001046  75                 	db	117	;'u'
   219  001047  72                 	db	114	;'r'
   220  001048  6E                 	db	110	;'n'
   221  001049  20                 	db	32
   222  00104A  76                 	db	118	;'v'
   223  00104B  61                 	db	97	;'a'
   224  00104C  6C                 	db	108	;'l'
   225  00104D  75                 	db	117	;'u'
   226  00104E  65                 	db	101	;'e'
   227  00104F  20                 	db	32
   228  001050  66                 	db	102	;'f'
   229  001051  72                 	db	114	;'r'
   230  001052  6F                 	db	111	;'o'
   231  001053  6D                 	db	109	;'m'
   232  001054  20                 	db	32
   233  001055  54                 	db	84	;'T'
   234  001056  43                 	db	67	;'C'
   235  001057  37                 	db	55	;'7'
   236  001058  34                 	db	52	;'4'
   237  001059  3A                 	db	58	;':'
   238  00105A  20                 	db	32
   239  00105B  25                 	db	37
   240  00105C  32                 	db	50	;'2'
   241  00105D  64                 	db	100	;'d'
   242  00105E  0D                 	db	13
   243  00105F  0A                 	db	10
   244  001060  00                 	db	0
   245  001061                     
   246                           ; BSR set to: 0
   247  001061  4B                 	db	75	;'K'
   248  001062  75                 	db	117	;'u'
   249  001063  6E                 	db	110	;'n'
   250  001064  6E                 	db	110	;'n'
   251  001065  65                 	db	101	;'e'
   252  001066  20                 	db	32
   253  001067  69                 	db	105	;'i'
   254  001068  6B                 	db	107	;'k'
   255  001069  6B                 	db	107	;'k'
   256  00106A  65                 	db	101	;'e'
   257  00106B  20                 	db	32
   258  00106C  66                 	db	102	;'f'
   259  00106D  69                 	db	105	;'i'
   260  00106E  6E                 	db	110	;'n'
   261  00106F  64                 	db	100	;'d'
   262  001070  65                 	db	101	;'e'
   263  001071  20                 	db	32
   264  001072  65                 	db	101	;'e'
   265  001073  6E                 	db	110	;'n'
   266  001074  68                 	db	104	;'h'
   267  001075  65                 	db	101	;'e'
   268  001076  64                 	db	100	;'d'
   269  001077  0D                 	db	13
   270  001078  0A                 	db	10
   271  001079  00                 	db	0
   272  00107A                     
   273                           ; BSR set to: 0
   274  00107A  4E                 	db	78	;'N'
   275  00107B  41                 	db	65	;'A'
   276  00107C  43                 	db	67	;'C'
   277  00107D  4B                 	db	75	;'K'
   278  00107E  20                 	db	32
   279  00107F  2D                 	db	45
   280  001080  20                 	db	32
   281  001081  67                 	db	103	;'g'
   282  001082  65                 	db	101	;'e'
   283  001083  6E                 	db	110	;'n'
   284  001084  73                 	db	115	;'s'
   285  001085  65                 	db	101	;'e'
   286  001086  6E                 	db	110	;'n'
   287  001087  64                 	db	100	;'d'
   288  001088  65                 	db	101	;'e'
   289  001089  72                 	db	114	;'r'
   290  00108A  0D                 	db	13
   291  00108B  0A                 	db	10
   292  00108C  00                 	db	0
   293  00108D  00                 	db	0	; dummy byte at the end
   294  0000                     
   295                           ; #config settings
   296                           
   297                           	psect	cinit
   298  0027A6                     __pcinit:
   299                           	callstack 0
   300  0027A6                     start_initialization:
   301                           	callstack 0
   302  0027A6                     __initialization:
   303                           	callstack 0
   304                           
   305                           ; Clear objects allocated to BANK1 (128 bytes)
   306  0027A6  EE01  F000         	lfsr	0,__pbssBANK1
   307  0027AA  0E80               	movlw	128
   308  0027AC                     clear_0:
   309  0027AC  6AEE               	clrf	postinc0,c
   310  0027AE  06E8               	decf	wreg,f,c
   311  0027B0  E1FD               	bnz	clear_0
   312                           
   313                           ; Clear objects allocated to BANK0 (121 bytes)
   314  0027B2  EE00  F060         	lfsr	0,__pbssBANK0
   315  0027B6  0E79               	movlw	121
   316  0027B8                     clear_1:
   317  0027B8  6AEE               	clrf	postinc0,c
   318  0027BA  06E8               	decf	wreg,f,c
   319  0027BC  E1FD               	bnz	clear_1
   320                           
   321                           ; Clear objects allocated to COMRAM (4 bytes)
   322  0027BE  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   323  0027C0  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   324  0027C2  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   325  0027C4  6A57               	clrf	__pbssCOMRAM& (0+255),c
   326  0027C6                     end_of_initialization:
   327                           	callstack 0
   328  0027C6                     __end_of__initialization:
   329                           	callstack 0
   330  0027C6  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   331  0027C8  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   332  0027CA  0100               	movlb	0
   333  0027CC  EF87  F013         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssCOMRAM
   336  000057                     __pbssCOMRAM:
   337                           	callstack 0
   338  000057                     _flags:
   339                           	callstack 0
   340  000057                     	ds	2
   341  000059                     _eusart1RxTail:
   342                           	callstack 0
   343  000059                     	ds	1
   344  00005A                     _eusart1RxHead:
   345                           	callstack 0
   346  00005A                     	ds	1
   347                           
   348                           	psect	bssBANK0
   349  000060                     __pbssBANK0:
   350                           	callstack 0
   351  000060                     _eusart1RxStatusBuffer:
   352                           	callstack 0
   353  000060                     	ds	64
   354  0000A0                     _nout:
   355                           	callstack 0
   356  0000A0                     	ds	2
   357  0000A2                     _width:
   358                           	callstack 0
   359  0000A2                     	ds	2
   360  0000A4                     _prec:
   361                           	callstack 0
   362  0000A4                     	ds	2
   363  0000A6                     _EUSART1_ErrorHandler:
   364                           	callstack 0
   365  0000A6                     	ds	2
   366  0000A8                     _EUSART1_OverrunErrorHandler:
   367                           	callstack 0
   368  0000A8                     	ds	2
   369  0000AA                     _EUSART1_FramingErrorHandler:
   370                           	callstack 0
   371  0000AA                     	ds	2
   372  0000AC                     _EUSART1_RxDefaultInterruptHandler:
   373                           	callstack 0
   374  0000AC                     	ds	2
   375  0000AE                     _EUSART1_TxDefaultInterruptHandler:
   376                           	callstack 0
   377  0000AE                     	ds	2
   378  0000B0                     _eusart1RxLastError:
   379                           	callstack 0
   380  0000B0                     	ds	1
   381  0000B1                     _eusart1RxCount:
   382                           	callstack 0
   383  0000B1                     	ds	1
   384  0000B2                     _eusart1TxBufferRemaining:
   385                           	callstack 0
   386  0000B2                     	ds	1
   387  0000B3                     _eusart1TxTail:
   388                           	callstack 0
   389  0000B3                     	ds	1
   390  0000B4                     _eusart1TxHead:
   391                           	callstack 0
   392  0000B4                     	ds	1
   393  0000B5                     _dbuf:
   394                           	callstack 0
   395  0000B5                     	ds	32
   396  0000D5                     _data_out:
   397                           	callstack 0
   398  0000D5                     	ds	4
   399                           
   400                           	psect	bssBANK1
   401  000100                     __pbssBANK1:
   402                           	callstack 0
   403  000100                     _eusart1RxBuffer:
   404                           	callstack 0
   405  000100                     	ds	64
   406  000140                     _eusart1TxBuffer:
   407                           	callstack 0
   408  000140                     	ds	64
   409                           
   410                           	psect	cstackBANK0
   411  0000D9                     __pcstackBANK0:
   412                           	callstack 0
   413  0000D9                     vfpfcnvrt@ll:
   414                           	callstack 0
   415                           
   416                           ; 8 bytes @ 0x0
   417  0000D9                     	ds	8
   418  0000E1                     vfpfcnvrt@llu:
   419                           	callstack 0
   420                           
   421                           ; 8 bytes @ 0x8
   422  0000E1                     	ds	8
   423  0000E9                     vfpfcnvrt@done:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x10
   427  0000E9                     	ds	2
   428  0000EB                     _vfpfcnvrt$1630:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x12
   432  0000EB                     	ds	2
   433  0000ED                     vfpfcnvrt@c:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x14
   437  0000ED                     	ds	1
   438  0000EE                     ?_vfprintf:
   439                           	callstack 0
   440  0000EE                     vfprintf@fp:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x15
   444  0000EE                     	ds	2
   445  0000F0                     vfprintf@fmt:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x17
   449  0000F0                     	ds	2
   450  0000F2                     vfprintf@ap:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x19
   454  0000F2                     	ds	2
   455  0000F4                     ?_printf:
   456                           	callstack 0
   457  0000F4                     printf@fmt:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x1B
   461  0000F4                     	ds	6
   462  0000FA                     ??_main:
   463                           
   464                           ; 1 bytes @ 0x21
   465  0000FA                     	ds	2
   466                           
   467                           	psect	cstackCOMRAM
   468  000001                     __pcstackCOMRAM:
   469                           	callstack 0
   470  000001                     ??_INTERRUPT_InterruptManager:
   471  000001                     
   472                           ; 1 bytes @ 0x0
   473  000001                     	ds	4
   474  000005                     ?_strlen:
   475                           	callstack 0
   476  000005                     ?_isupper:
   477                           	callstack 0
   478  000005                     ?_isalpha:
   479                           	callstack 0
   480  000005                     ?_isdigit:
   481                           	callstack 0
   482  000005                     ?_isspace:
   483                           	callstack 0
   484  000005                     ?_islower:
   485                           	callstack 0
   486  000005                     ?___wmul:
   487                           	callstack 0
   488  000005                     ?___aodiv:
   489                           	callstack 0
   490  000005                     ?___aomod:
   491                           	callstack 0
   492  000005                     EUSART1_Write@txData:
   493                           	callstack 0
   494  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   495                           	callstack 0
   496  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   497                           	callstack 0
   498  000005                     EUSART1_SetErrorHandler@interruptHandler:
   499                           	callstack 0
   500  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
   501                           	callstack 0
   502  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   503                           	callstack 0
   504  000005                     i2c_read_serial@data_out:
   505                           	callstack 0
   506  000005                     ___wmul@multiplier:
   507                           	callstack 0
   508  000005                     isalpha@c:
   509                           	callstack 0
   510  000005                     isdigit@c:
   511                           	callstack 0
   512  000005                     isspace@c:
   513                           	callstack 0
   514  000005                     isupper@c:
   515                           	callstack 0
   516  000005                     strlen@s:
   517                           	callstack 0
   518  000005                     islower@c:
   519                           	callstack 0
   520  000005                     ___aodiv@dividend:
   521                           	callstack 0
   522  000005                     ___aomod@dividend:
   523                           	callstack 0
   524                           
   525                           ; 8 bytes @ 0x4
   526  000005                     	ds	1
   527  000006                     putch@txData:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x5
   531  000006                     	ds	1
   532  000007                     ??_isupper:
   533  000007                     ??_isalpha:
   534  000007                     ??_isdigit:
   535  000007                     ??_isspace:
   536  000007                     ??_islower:
   537  000007                     i2c_read_serial@length:
   538                           	callstack 0
   539  000007                     ___wmul@multiplicand:
   540                           	callstack 0
   541  000007                     fputc@c:
   542                           	callstack 0
   543  000007                     strlen@a:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x6
   547  000007                     	ds	1
   548  000008                     ??_i2c_read_serial:
   549                           
   550                           ; 1 bytes @ 0x7
   551  000008                     	ds	1
   552  000009                     ___wmul@product:
   553                           	callstack 0
   554  000009                     fputc@fp:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x8
   558  000009                     	ds	2
   559  00000B                     ??_fputc:
   560  00000B                     ?_toupper:
   561                           	callstack 0
   562  00000B                     _isspace$1679:
   563                           	callstack 0
   564  00000B                     toupper@c:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0xA
   568  00000B                     	ds	1
   569  00000C                     ?_atoi:
   570                           	callstack 0
   571  00000C                     atoi@s:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0xB
   575  00000C                     	ds	1
   576  00000D                     ??_toupper:
   577  00000D                     ___aodiv@divisor:
   578                           	callstack 0
   579  00000D                     ___aomod@divisor:
   580                           	callstack 0
   581                           
   582                           ; 8 bytes @ 0xC
   583  00000D                     	ds	1
   584  00000E                     ??_atoi:
   585  00000E                     i2c_read_serial@addr:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0xD
   589  00000E                     	ds	1
   590  00000F                     i2c_read_serial@targetAddr:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0xE
   594  00000F                     	ds	1
   595  000010                     ?_ctoa:
   596                           	callstack 0
   597  000010                     i2c_read_serial@i:
   598                           	callstack 0
   599  000010                     ctoa@fp:
   600                           	callstack 0
   601  000010                     fputs@s:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0xF
   605  000010                     	ds	1
   606  000011                     _toupper$1728:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x10
   610  000011                     	ds	1
   611  000012                     ctoa@c:
   612                           	callstack 0
   613  000012                     atoi@neg:
   614                           	callstack 0
   615  000012                     fputs@fp:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x11
   619  000012                     	ds	1
   620  000013                     ??_ctoa:
   621                           
   622                           ; 1 bytes @ 0x12
   623  000013                     	ds	1
   624  000014                     fputs@c:
   625                           	callstack 0
   626  000014                     ctoa@l:
   627                           	callstack 0
   628  000014                     _atoi$1652:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x13
   632  000014                     	ds	1
   633  000015                     ___aodiv@counter:
   634                           	callstack 0
   635  000015                     ___aomod@counter:
   636                           	callstack 0
   637  000015                     fputs@i:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x14
   641  000015                     	ds	1
   642  000016                     ___aodiv@sign:
   643                           	callstack 0
   644  000016                     ___aomod@sign:
   645                           	callstack 0
   646  000016                     ctoa@w:
   647                           	callstack 0
   648  000016                     _atoi$1654:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x15
   652  000016                     	ds	1
   653  000017                     ?_abs:
   654                           	callstack 0
   655  000017                     ?_pad:
   656                           	callstack 0
   657  000017                     pad@fp:
   658                           	callstack 0
   659  000017                     abs@a:
   660                           	callstack 0
   661  000017                     ___aodiv@quotient:
   662                           	callstack 0
   663                           
   664                           ; 8 bytes @ 0x16
   665  000017                     	ds	1
   666  000018                     _atoi$1653:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x17
   670  000018                     	ds	1
   671  000019                     ??_abs:
   672  000019                     pad@buf:
   673                           	callstack 0
   674  000019                     atoi@n:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x18
   678  000019                     	ds	2
   679  00001B                     pad@p:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x1A
   683  00001B                     	ds	2
   684  00001D                     ??_pad:
   685                           
   686                           ; 1 bytes @ 0x1C
   687  00001D                     	ds	1
   688  00001E                     pad@i:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x1D
   692  00001E                     	ds	2
   693  000020                     pad@w:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x1F
   697  000020                     	ds	2
   698  000022                     ?_dtoa:
   699                           	callstack 0
   700  000022                     ?_xtoa:
   701                           	callstack 0
   702  000022                     dtoa@fp:
   703                           	callstack 0
   704  000022                     xtoa@fp:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x21
   708  000022                     	ds	2
   709  000024                     dtoa@d:
   710                           	callstack 0
   711  000024                     xtoa@d:
   712                           	callstack 0
   713                           
   714                           ; 8 bytes @ 0x23
   715  000024                     	ds	8
   716  00002C                     ??_dtoa:
   717  00002C                     xtoa@x:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x2B
   721  00002C                     	ds	1
   722  00002D                     ??_xtoa:
   723                           
   724                           ; 1 bytes @ 0x2C
   725  00002D                     	ds	7
   726  000034                     _dtoa$1604:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x33
   730  000034                     	ds	1
   731  000035                     _xtoa$1615:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x34
   735  000035                     	ds	1
   736  000036                     dtoa@p:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x35
   740  000036                     	ds	1
   741  000037                     _xtoa$1616:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x36
   745  000037                     	ds	1
   746  000038                     dtoa@w:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x37
   750  000038                     	ds	1
   751  000039                     xtoa@p:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x38
   755  000039                     	ds	1
   756  00003A                     dtoa@s:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x39
   760  00003A                     	ds	1
   761  00003B                     xtoa@w:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x3A
   765  00003B                     	ds	1
   766  00003C                     dtoa@n:
   767                           	callstack 0
   768                           
   769                           ; 8 bytes @ 0x3B
   770  00003C                     	ds	1
   771  00003D                     xtoa@n:
   772                           	callstack 0
   773                           
   774                           ; 8 bytes @ 0x3C
   775  00003D                     	ds	7
   776  000044                     dtoa@i:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x43
   780  000044                     	ds	1
   781  000045                     xtoa@i:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x44
   785  000045                     	ds	2
   786  000047                     xtoa@c:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x46
   790  000047                     	ds	2
   791  000049                     ?_vfpfcnvrt:
   792                           	callstack 0
   793  000049                     vfpfcnvrt@fp:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x48
   797  000049                     	ds	2
   798  00004B                     vfpfcnvrt@fmt:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x4A
   802  00004B                     	ds	2
   803  00004D                     vfpfcnvrt@ap:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x4C
   807  00004D                     	ds	2
   808  00004F                     ??_vfpfcnvrt:
   809                           
   810                           ; 1 bytes @ 0x4E
   811  00004F                     	ds	4
   812  000053                     vfprintf@cfmt:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x52
   816  000053                     	ds	2
   817  000055                     printf@ap:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x54
   821  000055                     	ds	2
   822  000057                     
   823                           ; 1 bytes @ 0x56
   824 ;;
   825 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   826 ;;
   827 ;; *************** function _main *****************
   828 ;; Defined at:
   829 ;;		line 18 in file "main.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;Total ram usage:        2 bytes
   848 ;; Hardware stack levels required when called: 14
   849 ;; This function calls:
   850 ;;		_EUSART1_Initialize
   851 ;;		_SYSTEM_Initialize
   852 ;;		_getReadingTC74
   853 ;;		_i2c_init
   854 ;; This function is called by:
   855 ;;		Startup code after reset
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text0
   860  00270E                     __ptext0:
   861                           	callstack 0
   862  00270E                     _main:
   863                           	callstack 17
   864  00270E                     
   865                           ;main.c: 21:     SYSTEM_Initialize();
   866  00270E  EC52  F014         	call	_SYSTEM_Initialize	;wreg free
   867                           
   868                           ;main.c: 22:     EUSART1_Initialize();
   869  002712  ECC1  F011         	call	_EUSART1_Initialize	;wreg free
   870  002716                     
   871                           ;main.c: 23:     INTCONbits.GIE = 1;
   872  002716  8EF2               	bsf	242,7,c	;volatile
   873  002718                     
   874                           ;main.c: 24:     INTCONbits.PEIE = 1;
   875  002718  8CF2               	bsf	242,6,c	;volatile
   876  00271A                     
   877                           ;main.c: 28:     i2c_init();
   878  00271A  EC46  F014         	call	_i2c_init	;wreg free
   879  00271E                     l3417:
   880                           
   881                           ;main.c: 31:     {;main.c: 32:         getReadingTC74();
   882  00271E  ECFD  F013         	call	_getReadingTC74	;wreg free
   883  002722                     
   884                           ;main.c: 33:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   885  002722  0E52               	movlw	82
   886  002724  0100               	movlb	0	; () banked
   887  002726  6FFB               	movwf	(??_main+1)& (0+255),b
   888  002728  0E2B               	movlw	43
   889  00272A  6FFA               	movwf	??_main& (0+255),b
   890  00272C  0E00               	movlw	0
   891  00272E                     u3887:
   892  00272E  2EE8               	decfsz	wreg,f,c
   893  002730  D7FE               	bra	u3887
   894  002732  2FFA               	decfsz	??_main& (0+255),f,b
   895  002734  D7FC               	bra	u3887
   896  002736  2FFB               	decfsz	(??_main+1)& (0+255),f,b
   897  002738  D7FA               	bra	u3887
   898  00273A  F000               	nop	
   899  00273C  EF8F  F013         	goto	l3417
   900  002740  EF58  F000         	goto	start
   901  002744                     __end_of_main:
   902                           	callstack 0
   903                           
   904 ;; *************** function _i2c_init *****************
   905 ;; Defined at:
   906 ;;		line 47 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 4
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text1
   935  00288C                     __ptext1:
   936                           	callstack 0
   937  00288C                     _i2c_init:
   938                           	callstack 26
   939  00288C                     
   940                           ;main.c: 48:     TRISCbits.RC3=1;
   941  00288C  8694               	bsf	148,3,c	;volatile
   942                           
   943                           ;main.c: 49:     TRISCbits.RC4=1;
   944  00288E  8894               	bsf	148,4,c	;volatile
   945                           
   946                           ;main.c: 51:     ANSELCbits.ANSC3 = 0;
   947  002890  010F               	movlb	15	; () banked
   948  002892  973A               	bcf	58,3,b	;volatile
   949                           
   950                           ;main.c: 52:     ANSELCbits.ANSC4 = 0;
   951  002894  993A               	bcf	58,4,b	;volatile
   952  002896                     
   953                           ; BSR set to: 15
   954                           ;main.c: 56:     SSP1ADD = 0x9F;
   955  002896  0E9F               	movlw	159
   956  002898  6EC8               	movwf	200,c	;volatile
   957                           
   958                           ;main.c: 57:     SSP1CON1 = 0x28;
   959  00289A  0E28               	movlw	40
   960  00289C  6EC6               	movwf	198,c	;volatile
   961                           
   962                           ;main.c: 58:     SSP1CON2 = 0;
   963  00289E  0E00               	movlw	0
   964  0028A0  6EC5               	movwf	197,c	;volatile
   965  0028A2                     
   966                           ; BSR set to: 15
   967  0028A2  0012               	return		;funcret
   968  0028A4                     __end_of_i2c_init:
   969                           	callstack 0
   970                           
   971 ;; *************** function _getReadingTC74 *****************
   972 ;; Defined at:
   973 ;;		line 38 in file "main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; Hardware stack levels required when called: 13
   994 ;; This function calls:
   995 ;;		_i2c_read_serial
   996 ;;		_printf
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text2
  1003  0027FA                     __ptext2:
  1004                           	callstack 0
  1005  0027FA                     _getReadingTC74:
  1006                           	callstack 17
  1007  0027FA                     
  1008                           ;main.c: 41:     i2c_read_serial(tempaddrTC74, data_out, 1);
  1009  0027FA  0ED5               	movlw	low _data_out
  1010  0027FC  6E05               	movwf	i2c_read_serial@data_out^0,c
  1011  0027FE  0E00               	movlw	high _data_out
  1012  002800  6E06               	movwf	(i2c_read_serial@data_out+1)^0,c
  1013  002802  0E01               	movlw	1
  1014  002804  6E07               	movwf	i2c_read_serial@length^0,c
  1015  002806  0E48               	movlw	72
  1016  002808  ECD0  F00F         	call	_i2c_read_serial
  1017  00280C                     
  1018                           ;main.c: 43:     printf("Return value from TC74: %2d\r\n", data_out[0]);
  1019  00280C  0E43               	movlw	low STR_1
  1020  00280E  0100               	movlb	0	; () banked
  1021  002810  6FF4               	movwf	printf@fmt& (0+255),b
  1022  002812  0E10               	movlw	high STR_1
  1023  002814  6FF5               	movwf	(printf@fmt+1)& (0+255),b
  1024  002816  C0D5  F0F6         	movff	_data_out,?_printf+2
  1025  00281A  6BF7               	clrf	(?_printf+3)& (0+255),b
  1026  00281C  EC11  F014         	call	_printf	;wreg free
  1027  002820  0012               	return		;funcret
  1028  002822                     __end_of_getReadingTC74:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _printf *****************
  1032 ;; Defined at:
  1033 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  1036 ;;		 -> STR_5(25), STR_4(34), STR_3(31), STR_2(19), 
  1037 ;;		 -> STR_1(30), 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  ap              2   84[COMRAM] PTR void [1]
  1040 ;;		 -> ?_printf(2), 
  1041 ;;  ret             2    0        int 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  2   27[BANK0 ] int 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1051 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;Total ram usage:        8 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 12
  1058 ;; This function calls:
  1059 ;;		_vfprintf
  1060 ;; This function is called by:
  1061 ;;		_getReadingTC74
  1062 ;;		_i2c_write_serial
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text3
  1067  002822                     __ptext3:
  1068                           	callstack 0
  1069  002822                     _printf:
  1070                           	callstack 17
  1071  002822  0EF6               	movlw	low (?_printf+2)
  1072  002824  6E55               	movwf	printf@ap^0,c
  1073  002826  0E00               	movlw	high (?_printf+2)
  1074  002828  6E56               	movwf	(printf@ap+1)^0,c
  1075  00282A  0E00               	movlw	0
  1076  00282C  0100               	movlb	0	; () banked
  1077  00282E  6FEE               	movwf	vfprintf@fp& (0+255),b
  1078  002830  0E00               	movlw	0
  1079  002832  6FEF               	movwf	(vfprintf@fp+1)& (0+255),b
  1080  002834  C0F4  F0F0         	movff	printf@fmt,vfprintf@fmt
  1081  002838  C0F5  F0F1         	movff	printf@fmt+1,vfprintf@fmt+1
  1082  00283C  0E55               	movlw	low printf@ap
  1083  00283E  6FF2               	movwf	vfprintf@ap& (0+255),b
  1084  002840  0E00               	movlw	high printf@ap
  1085  002842  6FF3               	movwf	(vfprintf@ap+1)& (0+255),b
  1086  002844  ECFC  F011         	call	_vfprintf	;wreg free
  1087  002848  0012               	return		;funcret
  1088  00284A                     __end_of_printf:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _vfprintf *****************
  1092 ;; Defined at:
  1093 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  1096 ;;		 -> NULL(0), 
  1097 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  1098 ;;		 -> STR_5(25), STR_4(34), STR_3(31), STR_2(19), 
  1099 ;;		 -> STR_1(30), 
  1100 ;;  ap              2   25[BANK0 ] PTR PTR void 
  1101 ;;		 -> printf@ap(2), 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  1104 ;;		 -> STR_5(25), STR_4(34), STR_3(31), STR_2(19), 
  1105 ;;		 -> STR_1(30), 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  2   21[BANK0 ] int 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1115 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;Total ram usage:        8 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; Hardware stack levels required when called: 11
  1122 ;; This function calls:
  1123 ;;		_vfpfcnvrt
  1124 ;; This function is called by:
  1125 ;;		_printf
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text4
  1130  0023F8                     __ptext4:
  1131                           	callstack 0
  1132  0023F8                     _vfprintf:
  1133                           	callstack 17
  1134  0023F8                     
  1135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1136  0023F8  C0F0  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  1137  0023FC  C0F1  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1138  002400                     
  1139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1140  002400  0E00               	movlw	0
  1141  002402  0100               	movlb	0	; () banked
  1142  002404  6FA1               	movwf	(_nout+1)& (0+255),b
  1143  002406  0E00               	movlw	0
  1144  002408  6FA0               	movwf	_nout& (0+255),b
  1145                           
  1146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1147  00240A  EF1A  F012         	goto	l3397
  1148  00240E                     l3395:
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1152  00240E  C0EE  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  1153  002412  C0EF  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1154  002416  0E53               	movlw	low vfprintf@cfmt
  1155  002418  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  1156  00241A  0E00               	movlw	high vfprintf@cfmt
  1157  00241C  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1158  00241E  C0F2  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1159  002422  C0F3  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1160  002426  EC47  F008         	call	_vfpfcnvrt	;wreg free
  1161  00242A  5049               	movf	?_vfpfcnvrt^0,w,c
  1162  00242C  0100               	movlb	0	; () banked
  1163  00242E  27A0               	addwf	_nout& (0+255),f,b
  1164  002430  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  1165  002432  23A1               	addwfc	(_nout+1)& (0+255),f,b
  1166  002434                     l3397:
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1170  002434  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  1171  002438  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1172  00243C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1173  00243C  6AF8               	clrf	tblptru,c
  1174  00243E                     	endif
  1175  00243E                     	if	0	;tblptru may be non-zero
  1176  00243E                     	endif
  1177  00243E  0008               	tblrd		*
  1178  002440  50F5               	movf	tablat,w,c
  1179  002442  0900               	iorlw	0
  1180  002444  A4D8               	btfss	status,2,c
  1181  002446  EF27  F012         	goto	u3761
  1182  00244A  EF29  F012         	goto	u3760
  1183  00244E                     u3761:
  1184  00244E  EF07  F012         	goto	l3395
  1185  002452                     u3760:
  1186  002452                     
  1187                           ; BSR set to: 0
  1188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1189  002452  C0A0  F0EE         	movff	_nout,?_vfprintf
  1190  002456  C0A1  F0EF         	movff	_nout+1,?_vfprintf+1
  1191  00245A                     
  1192                           ; BSR set to: 0
  1193  00245A  0012               	return		;funcret
  1194  00245C                     __end_of_vfprintf:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _vfpfcnvrt *****************
  1198 ;; Defined at:
  1199 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  1202 ;;		 -> NULL(0), 
  1203 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  1204 ;;		 -> vfprintf@cfmt(2), 
  1205 ;;  ap              2   76[COMRAM] PTR PTR void 
  1206 ;;		 -> printf@ap(2), 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  llu             8    8[BANK0 ] unsigned long long 
  1209 ;;  ll              8    0[BANK0 ] long long 
  1210 ;;  f               4    0        long long 
  1211 ;;  vp              3    0        PTR void 
  1212 ;;  ct              3    0        unsigned char [3]
  1213 ;;  cp              3    0        PTR unsigned char 
  1214 ;;  done            2   16[BANK0 ] int 
  1215 ;;  i               2    0        int 
  1216 ;;  c               1   20[BANK0 ] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  2   72[COMRAM] int 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1226 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1227 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Totals:        10      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;Total ram usage:       31 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 10
  1233 ;; This function calls:
  1234 ;;		_atoi
  1235 ;;		_ctoa
  1236 ;;		_dtoa
  1237 ;;		_fputc
  1238 ;;		_isdigit
  1239 ;;		_xtoa
  1240 ;; This function is called by:
  1241 ;;		_vfprintf
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text5
  1246  00108E                     __ptext5:
  1247                           	callstack 0
  1248  00108E                     _vfpfcnvrt:
  1249                           	callstack 17
  1250  00108E                     
  1251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1252  00108E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1253  001092  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1254  001096  CFDE FFF6          	movff	postinc2,tblptrl
  1255  00109A  CFDD FFF7          	movff	postdec2,tblptrh
  1256  00109E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1257  00109E  6AF8               	clrf	tblptru,c
  1258  0010A0                     	endif
  1259  0010A0                     	if	0	;tblptru may be non-zero
  1260  0010A0                     	endif
  1261  0010A0  0008               	tblrd		*
  1262  0010A2  50F5               	movf	tablat,w,c
  1263  0010A4  0A25               	xorlw	37
  1264  0010A6  A4D8               	btfss	status,2,c
  1265  0010A8  EF58  F008         	goto	u3621
  1266  0010AC  EF5A  F008         	goto	u3620
  1267  0010B0                     u3621:
  1268  0010B0  EF97  F00A         	goto	l3373
  1269  0010B4                     u3620:
  1270  0010B4                     
  1271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1272  0010B4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1273  0010B8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1274  0010BC  2ADE               	incf	postinc2,f,c
  1275  0010BE  0E00               	movlw	0
  1276  0010C0  22DD               	addwfc	postdec2,f,c
  1277  0010C2                     
  1278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1279  0010C2  0E00               	movlw	0
  1280  0010C4  0100               	movlb	0	; () banked
  1281  0010C6  6FA3               	movwf	(_width+1)& (0+255),b
  1282  0010C8  0E00               	movlw	0
  1283  0010CA  6FA2               	movwf	_width& (0+255),b
  1284  0010CC  C0A2  F057         	movff	_width,_flags
  1285  0010D0  C0A3  F058         	movff	_width+1,_flags+1
  1286  0010D4                     
  1287                           ; BSR set to: 0
  1288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1289  0010D4  69A4               	setf	_prec& (0+255),b
  1290  0010D6  69A5               	setf	(_prec+1)& (0+255),b
  1291  0010D8                     
  1292                           ; BSR set to: 0
  1293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1294  0010D8  0E00               	movlw	0
  1295  0010DA  6FEA               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1296  0010DC  0E00               	movlw	0
  1297  0010DE  6FE9               	movwf	vfpfcnvrt@done& (0+255),b
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1300  0010E0  EFB9  F008         	goto	l3303
  1301  0010E4                     l3277:
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1305  0010E4  8057               	bsf	_flags^0,0,c
  1306  0010E6                     l3279:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1310  0010E6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1311  0010EA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1312  0010EE  2ADE               	incf	postinc2,f,c
  1313  0010F0  0E00               	movlw	0
  1314  0010F2  22DD               	addwfc	postdec2,f,c
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1317  0010F4  EFB9  F008         	goto	l3303
  1318  0010F8                     l3281:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1322  0010F8  8257               	bsf	_flags^0,1,c
  1323  0010FA  EF73  F008         	goto	l3279
  1324  0010FE                     l3285:
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1328  0010FE  8457               	bsf	_flags^0,2,c
  1329  001100  EF73  F008         	goto	l3279
  1330  001104                     l3289:
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1334  001104  8657               	bsf	_flags^0,3,c
  1335  001106  EF73  F008         	goto	l3279
  1336  00110A                     l3293:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1340  00110A  8857               	bsf	_flags^0,4,c
  1341  00110C  EF73  F008         	goto	l3279
  1342  001110                     l3297:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1346  001110  0E00               	movlw	0
  1347  001112  6FEA               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1348  001114  0E01               	movlw	1
  1349  001116  6FE9               	movwf	vfpfcnvrt@done& (0+255),b
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1352  001118  EFB9  F008         	goto	l3303
  1353  00111C                     l3301:
  1354                           
  1355                           ; BSR set to: 0
  1356  00111C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1357  001120  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1358  001124  CFDE FFF6          	movff	postinc2,tblptrl
  1359  001128  CFDD FFF7          	movff	postdec2,tblptrh
  1360  00112C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1361  00112C  6AF8               	clrf	tblptru,c
  1362  00112E                     	endif
  1363  00112E                     	if	0	;tblptru may be non-zero
  1364  00112E                     	endif
  1365  00112E  0008               	tblrd		*
  1366  001130  50F5               	movf	tablat,w,c
  1367  001132  6E4F               	movwf	??_vfpfcnvrt^0,c
  1368  001134  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  1369                           
  1370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1371                           ; Switch size 1, requested type "simple"
  1372                           ; Number of cases is 1, Range of values is 0 to 0
  1373                           ; switch strategies available:
  1374                           ; Name         Instructions Cycles
  1375                           ; simple_byte            4     3 (average)
  1376                           ;	Chosen strategy is simple_byte
  1377  001136  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  1378  001138  0A00               	xorlw	0	; case 0
  1379  00113A  B4D8               	btfsc	status,2,c
  1380  00113C  EFA2  F008         	goto	l3519
  1381  001140  EF88  F008         	goto	l3297
  1382  001144                     l3519:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ; Switch size 1, requested type "simple"
  1386                           ; Number of cases is 5, Range of values is 32 to 48
  1387                           ; switch strategies available:
  1388                           ; Name         Instructions Cycles
  1389                           ; simple_byte           16     9 (average)
  1390                           ;	Chosen strategy is simple_byte
  1391  001144  504F               	movf	??_vfpfcnvrt^0,w,c
  1392  001146  0A20               	xorlw	32	; case 32
  1393  001148  B4D8               	btfsc	status,2,c
  1394  00114A  EF82  F008         	goto	l3289
  1395  00114E  0A03               	xorlw	3	; case 35
  1396  001150  B4D8               	btfsc	status,2,c
  1397  001152  EF85  F008         	goto	l3293
  1398  001156  0A08               	xorlw	8	; case 43
  1399  001158  B4D8               	btfsc	status,2,c
  1400  00115A  EF7F  F008         	goto	l3285
  1401  00115E  0A06               	xorlw	6	; case 45
  1402  001160  B4D8               	btfsc	status,2,c
  1403  001162  EF72  F008         	goto	l3277
  1404  001166  0A1D               	xorlw	29	; case 48
  1405  001168  B4D8               	btfsc	status,2,c
  1406  00116A  EF7C  F008         	goto	l3281
  1407  00116E  EF88  F008         	goto	l3297
  1408  001172                     l3303:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1412  001172  51E9               	movf	vfpfcnvrt@done& (0+255),w,b
  1413  001174  11EA               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1414  001176  B4D8               	btfsc	status,2,c
  1415  001178  EFC0  F008         	goto	u3631
  1416  00117C  EFC2  F008         	goto	u3630
  1417  001180                     u3631:
  1418  001180  EF8E  F008         	goto	l3301
  1419  001184                     u3630:
  1420  001184                     
  1421                           ; BSR set to: 0
  1422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1423  001184  A057               	btfss	_flags^0,0,c
  1424  001186  EFC7  F008         	goto	u3641
  1425  00118A  EFC9  F008         	goto	u3640
  1426  00118E                     u3641:
  1427  00118E  EFCA  F008         	goto	l3307
  1428  001192                     u3640:
  1429  001192                     
  1430                           ; BSR set to: 0
  1431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1432  001192  9257               	bcf	_flags^0,1,c
  1433  001194                     l3307:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1437  001194  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1438  001198  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1439  00119C  CFDE FFF6          	movff	postinc2,tblptrl
  1440  0011A0  CFDD FFF7          	movff	postdec2,tblptrh
  1441  0011A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1442  0011A4  6AF8               	clrf	tblptru,c
  1443  0011A6                     	endif
  1444  0011A6                     	if	0	;tblptru may be non-zero
  1445  0011A6                     	endif
  1446  0011A6  0008               	tblrd		*
  1447  0011A8  50F5               	movf	tablat,w,c
  1448  0011AA  0A2A               	xorlw	42
  1449  0011AC  A4D8               	btfss	status,2,c
  1450  0011AE  EFDB  F008         	goto	u3651
  1451  0011B2  EFDD  F008         	goto	u3650
  1452  0011B6                     u3651:
  1453  0011B6  EF06  F009         	goto	l3315
  1454  0011BA                     u3650:
  1455  0011BA                     
  1456                           ; BSR set to: 0
  1457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1458  0011BA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1459  0011BE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1460  0011C2  2ADE               	incf	postinc2,f,c
  1461  0011C4  0E00               	movlw	0
  1462  0011C6  22DD               	addwfc	postdec2,f,c
  1463                           
  1464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1465  0011C8  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1466  0011CC  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1467  0011D0  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  1468  0011D4  0E02               	movlw	2
  1469  0011D6  26DE               	addwf	postinc2,f,c
  1470  0011D8  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  1471  0011DC  0E00               	movlw	0
  1472  0011DE  22DD               	addwfc	postdec2,f,c
  1473  0011E0  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1474  0011E4  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1475  0011E8  CFDE F0A2          	movff	postinc2,_width
  1476  0011EC  CFDD F0A3          	movff	postdec2,_width+1
  1477  0011F0                     
  1478                           ; BSR set to: 0
  1479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1480  0011F0  BFA3               	btfsc	(_width+1)& (0+255),7,b
  1481  0011F2  EFFF  F008         	goto	u3660
  1482  0011F6  EFFD  F008         	goto	u3661
  1483  0011FA                     u3661:
  1484  0011FA  EF4B  F009         	goto	l3325
  1485  0011FE                     u3660:
  1486  0011FE                     
  1487                           ; BSR set to: 0
  1488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1489  0011FE  8057               	bsf	_flags^0,0,c
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1492  001200  6DA2               	negf	_width& (0+255),b
  1493  001202  1FA3               	comf	(_width+1)& (0+255),f,b
  1494  001204  B0D8               	btfsc	status,0,c
  1495  001206  2BA3               	incf	(_width+1)& (0+255),f,b
  1496  001208  EF4B  F009         	goto	l3325
  1497  00120C                     l3315:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1501  00120C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1502  001210  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1503  001214  CFDE F00C          	movff	postinc2,atoi@s
  1504  001218  CFDD F00D          	movff	postdec2,atoi@s+1
  1505  00121C  EC8D  F00D         	call	_atoi	;wreg free
  1506  001220  C00C  F0A2         	movff	?_atoi,_width
  1507  001224  C00D  F0A3         	movff	?_atoi+1,_width+1
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1510  001228  EF1D  F009         	goto	l3319
  1511  00122C                     l3317:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1515  00122C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1516  001230  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1517  001234  2ADE               	incf	postinc2,f,c
  1518  001236  0E00               	movlw	0
  1519  001238  22DD               	addwfc	postdec2,f,c
  1520  00123A                     l3319:
  1521  00123A  0ED0               	movlw	208
  1522  00123C  6E4F               	movwf	??_vfpfcnvrt^0,c
  1523  00123E  0EFF               	movlw	255
  1524  001240  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  1525  001242  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1526  001246  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1527  00124A  CFDE FFF6          	movff	postinc2,tblptrl
  1528  00124E  CFDD FFF7          	movff	postdec2,tblptrh
  1529  001252                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1530  001252  6AF8               	clrf	tblptru,c
  1531  001254                     	endif
  1532  001254                     	if	0	;tblptru may be non-zero
  1533  001254                     	endif
  1534  001254  0008               	tblrd		*
  1535  001256  50F5               	movf	tablat,w,c
  1536  001258  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  1537  00125A  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  1538  00125C  504F               	movf	??_vfpfcnvrt^0,w,c
  1539  00125E  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1540  001260  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  1541  001262  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1542  001264  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  1543  001266  E10A               	bnz	u3670
  1544  001268  0E0A               	movlw	10
  1545  00126A  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1546  00126C  A0D8               	btfss	status,0,c
  1547  00126E  EF3B  F009         	goto	u3671
  1548  001272  EF3E  F009         	goto	u3670
  1549  001276                     u3671:
  1550  001276  0E01               	movlw	1
  1551  001278  EF3F  F009         	goto	u3680
  1552  00127C                     u3670:
  1553  00127C  0E00               	movlw	0
  1554  00127E                     u3680:
  1555  00127E  0100               	movlb	0	; () banked
  1556  001280  6FEB               	movwf	_vfpfcnvrt$1630& (0+255),b
  1557  001282  6BEC               	clrf	(_vfpfcnvrt$1630+1)& (0+255),b
  1558  001284                     
  1559                           ; BSR set to: 0
  1560  001284  51EB               	movf	_vfpfcnvrt$1630& (0+255),w,b
  1561  001286  11EC               	iorwf	(_vfpfcnvrt$1630+1)& (0+255),w,b
  1562  001288  A4D8               	btfss	status,2,c
  1563  00128A  EF49  F009         	goto	u3691
  1564  00128E  EF4B  F009         	goto	u3690
  1565  001292                     u3691:
  1566  001292  EF16  F009         	goto	l3317
  1567  001296                     u3690:
  1568  001296                     l3325:
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  1572  001296  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1573  00129A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1574  00129E  CFDE FFF6          	movff	postinc2,tblptrl
  1575  0012A2  CFDD FFF7          	movff	postdec2,tblptrh
  1576  0012A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1577  0012A6  6AF8               	clrf	tblptru,c
  1578  0012A8                     	endif
  1579  0012A8                     	if	0	;tblptru may be non-zero
  1580  0012A8                     	endif
  1581  0012A8  0008               	tblrd		*
  1582  0012AA  50F5               	movf	tablat,w,c
  1583  0012AC  0A63               	xorlw	99
  1584  0012AE  A4D8               	btfss	status,2,c
  1585  0012B0  EF5C  F009         	goto	u3701
  1586  0012B4  EF5E  F009         	goto	u3700
  1587  0012B8                     u3701:
  1588  0012B8  EF85  F009         	goto	l3333
  1589  0012BC                     u3700:
  1590  0012BC                     
  1591                           ; BSR set to: 0
  1592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  1593  0012BC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1594  0012C0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1595  0012C4  2ADE               	incf	postinc2,f,c
  1596  0012C6  0E00               	movlw	0
  1597  0012C8  22DD               	addwfc	postdec2,f,c
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1600  0012CA  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1601  0012CE  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1602  0012D2  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  1603  0012D6  0E02               	movlw	2
  1604  0012D8  26DE               	addwf	postinc2,f,c
  1605  0012DA  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  1606  0012DE  0E00               	movlw	0
  1607  0012E0  22DD               	addwfc	postdec2,f,c
  1608  0012E2  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1609  0012E6  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1610  0012EA  50DF               	movf	indf2,w,c
  1611  0012EC  6FED               	movwf	vfpfcnvrt@c& (0+255),b
  1612  0012EE                     
  1613                           ; BSR set to: 0
  1614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  1615  0012EE  C049  F010         	movff	vfpfcnvrt@fp,ctoa@fp
  1616  0012F2  C04A  F011         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1617  0012F6  C0ED  F012         	movff	vfpfcnvrt@c,ctoa@c
  1618  0012FA  EC4C  F010         	call	_ctoa	;wreg free
  1619  0012FE  C010  F049         	movff	?_ctoa,?_vfpfcnvrt
  1620  001302  C011  F04A         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1621  001306  EFB3  F00A         	goto	l1163
  1622  00130A                     l3333:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1626  00130A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1627  00130E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1628  001312  CFDE FFF6          	movff	postinc2,tblptrl
  1629  001316  CFDD FFF7          	movff	postdec2,tblptrh
  1630  00131A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1631  00131A  6AF8               	clrf	tblptru,c
  1632  00131C                     	endif
  1633  00131C                     	if	0	;tblptru may be non-zero
  1634  00131C                     	endif
  1635  00131C  0008               	tblrd		*
  1636  00131E  50F5               	movf	tablat,w,c
  1637  001320  0A64               	xorlw	100
  1638  001322  B4D8               	btfsc	status,2,c
  1639  001324  EF96  F009         	goto	u3711
  1640  001328  EF98  F009         	goto	u3710
  1641  00132C                     u3711:
  1642  00132C  EFAB  F009         	goto	l3337
  1643  001330                     u3710:
  1644  001330                     
  1645                           ; BSR set to: 0
  1646  001330  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1647  001334  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1648  001338  CFDE FFF6          	movff	postinc2,tblptrl
  1649  00133C  CFDD FFF7          	movff	postdec2,tblptrh
  1650  001340                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1651  001340  6AF8               	clrf	tblptru,c
  1652  001342                     	endif
  1653  001342                     	if	0	;tblptru may be non-zero
  1654  001342                     	endif
  1655  001342  0008               	tblrd		*
  1656  001344  50F5               	movf	tablat,w,c
  1657  001346  0A69               	xorlw	105
  1658  001348  A4D8               	btfss	status,2,c
  1659  00134A  EFA9  F009         	goto	u3721
  1660  00134E  EFAB  F009         	goto	u3720
  1661  001352                     u3721:
  1662  001352  EFEB  F009         	goto	l3343
  1663  001356                     u3720:
  1664  001356                     l3337:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1668  001356  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1669  00135A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1670  00135E  2ADE               	incf	postinc2,f,c
  1671  001360  0E00               	movlw	0
  1672  001362  22DD               	addwfc	postdec2,f,c
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1675  001364  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1676  001368  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1677  00136C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  1678  001370  0E02               	movlw	2
  1679  001372  26DE               	addwf	postinc2,f,c
  1680  001374  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  1681  001378  0E00               	movlw	0
  1682  00137A  22DD               	addwfc	postdec2,f,c
  1683  00137C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1684  001380  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1685  001384  CFDE F0D9          	movff	postinc2,vfpfcnvrt@ll
  1686  001388  CFDD F0DA          	movff	postdec2,vfpfcnvrt@ll+1
  1687  00138C  0E00               	movlw	0
  1688  00138E  BFDA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1689  001390  0EFF               	movlw	-1
  1690  001392  6FDB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1691  001394  6FDC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1692  001396  6FDD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1693  001398  6FDE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1694  00139A  6FDF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1695  00139C  6FE0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1696  00139E                     
  1697                           ; BSR set to: 0
  1698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1699  00139E  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  1700  0013A2  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1701  0013A6  C0D9  F024         	movff	vfpfcnvrt@ll,dtoa@d
  1702  0013AA  C0DA  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1703  0013AE  C0DB  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1704  0013B2  C0DC  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1705  0013B6  C0DD  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1706  0013BA  C0DE  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1707  0013BE  C0DF  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1708  0013C2  C0E0  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1709  0013C6  ECB4  F00A         	call	_dtoa	;wreg free
  1710  0013CA  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  1711  0013CE  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1712  0013D2  EFB3  F00A         	goto	l1163
  1713  0013D6                     l3343:
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1717  0013D6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1718  0013DA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1719  0013DE  CFDE FFF6          	movff	postinc2,tblptrl
  1720  0013E2  CFDD FFF7          	movff	postdec2,tblptrh
  1721  0013E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1722  0013E6  6AF8               	clrf	tblptru,c
  1723  0013E8                     	endif
  1724  0013E8                     	if	0	;tblptru may be non-zero
  1725  0013E8                     	endif
  1726  0013E8  0008               	tblrd		*
  1727  0013EA  50F5               	movf	tablat,w,c
  1728  0013EC  0A78               	xorlw	120
  1729  0013EE  B4D8               	btfsc	status,2,c
  1730  0013F0  EFFC  F009         	goto	u3731
  1731  0013F4  EFFE  F009         	goto	u3730
  1732  0013F8                     u3731:
  1733  0013F8  EF11  F00A         	goto	l3347
  1734  0013FC                     u3730:
  1735  0013FC                     
  1736                           ; BSR set to: 0
  1737  0013FC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1738  001400  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1739  001404  CFDE FFF6          	movff	postinc2,tblptrl
  1740  001408  CFDD FFF7          	movff	postdec2,tblptrh
  1741  00140C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1742  00140C  6AF8               	clrf	tblptru,c
  1743  00140E                     	endif
  1744  00140E                     	if	0	;tblptru may be non-zero
  1745  00140E                     	endif
  1746  00140E  0008               	tblrd		*
  1747  001410  50F5               	movf	tablat,w,c
  1748  001412  0A58               	xorlw	88
  1749  001414  A4D8               	btfss	status,2,c
  1750  001416  EF0F  F00A         	goto	u3741
  1751  00141A  EF11  F00A         	goto	u3740
  1752  00141E                     u3741:
  1753  00141E  EF60  F00A         	goto	l3357
  1754  001422                     u3740:
  1755  001422                     l3347:
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1759  001422  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1760  001426  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1761  00142A  CFDE FFF6          	movff	postinc2,tblptrl
  1762  00142E  CFDD FFF7          	movff	postdec2,tblptrh
  1763  001432                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1764  001432  6AF8               	clrf	tblptru,c
  1765  001434                     	endif
  1766  001434                     	if	0	;tblptru may be non-zero
  1767  001434                     	endif
  1768  001434  0008               	tblrd		*
  1769  001436  CFF5 F0ED          	movff	tablat,vfpfcnvrt@c
  1770  00143A                     
  1771                           ; BSR set to: 0
  1772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1773  00143A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1774  00143E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1775  001442  2ADE               	incf	postinc2,f,c
  1776  001444  0E00               	movlw	0
  1777  001446  22DD               	addwfc	postdec2,f,c
  1778  001448                     
  1779                           ; BSR set to: 0
  1780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1781  001448  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1782  00144C  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1783  001450  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  1784  001454  0E02               	movlw	2
  1785  001456  26DE               	addwf	postinc2,f,c
  1786  001458  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  1787  00145C  0E00               	movlw	0
  1788  00145E  22DD               	addwfc	postdec2,f,c
  1789  001460  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1790  001464  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1791  001468  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  1792  00146C  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  1793  001470  C051  F0E1         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1794  001474  C052  F0E2         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1795  001478  6BE3               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1796  00147A  6BE4               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1797  00147C  6BE5               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1798  00147E  6BE6               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1799  001480  6BE7               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1800  001482  6BE8               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1801  001484                     
  1802                           ; BSR set to: 0
  1803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1804  001484  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  1805  001488  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1806  00148C  C0E1  F024         	movff	vfpfcnvrt@llu,xtoa@d
  1807  001490  C0E2  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1808  001494  C0E3  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1809  001498  C0E4  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1810  00149C  C0E5  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1811  0014A0  C0E6  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1812  0014A4  C0E7  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1813  0014A8  C0E8  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1814  0014AC  C0ED  F02C         	movff	vfpfcnvrt@c,xtoa@x
  1815  0014B0  EC23  F00C         	call	_xtoa	;wreg free
  1816  0014B4  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  1817  0014B8  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1818  0014BC  EFB3  F00A         	goto	l1163
  1819  0014C0                     l3357:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1823  0014C0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1824  0014C4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1825  0014C8  CFDE FFF6          	movff	postinc2,tblptrl
  1826  0014CC  CFDD FFF7          	movff	postdec2,tblptrh
  1827  0014D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1828  0014D0  6AF8               	clrf	tblptru,c
  1829  0014D2                     	endif
  1830  0014D2                     	if	0	;tblptru may be non-zero
  1831  0014D2                     	endif
  1832  0014D2  0008               	tblrd		*
  1833  0014D4  50F5               	movf	tablat,w,c
  1834  0014D6  0A25               	xorlw	37
  1835  0014D8  A4D8               	btfss	status,2,c
  1836  0014DA  EF71  F00A         	goto	u3751
  1837  0014DE  EF73  F00A         	goto	u3750
  1838  0014E2                     u3751:
  1839  0014E2  EF8A  F00A         	goto	l3367
  1840  0014E6                     u3750:
  1841  0014E6                     
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1844  0014E6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1845  0014EA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1846  0014EE  2ADE               	incf	postinc2,f,c
  1847  0014F0  0E00               	movlw	0
  1848  0014F2  22DD               	addwfc	postdec2,f,c
  1849  0014F4                     
  1850                           ; BSR set to: 0
  1851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1852  0014F4  0E00               	movlw	0
  1853  0014F6  6E08               	movwf	(fputc@c+1)^0,c
  1854  0014F8  0E25               	movlw	37
  1855  0014FA  6E07               	movwf	fputc@c^0,c
  1856  0014FC  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1857  001500  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1858  001504  EC76  F011         	call	_fputc	;wreg free
  1859  001508                     l3363:
  1860                           
  1861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1862  001508  0E00               	movlw	0
  1863  00150A  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  1864  00150C  0E01               	movlw	1
  1865  00150E  6E49               	movwf	?_vfpfcnvrt^0,c
  1866  001510  EFB3  F00A         	goto	l1163
  1867  001514                     l3367:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1871  001514  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1872  001518  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1873  00151C  2ADE               	incf	postinc2,f,c
  1874  00151E  0E00               	movlw	0
  1875  001520  22DD               	addwfc	postdec2,f,c
  1876  001522                     
  1877                           ; BSR set to: 0
  1878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1879  001522  0E00               	movlw	0
  1880  001524  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  1881  001526  0E00               	movlw	0
  1882  001528  6E49               	movwf	?_vfpfcnvrt^0,c
  1883  00152A  EFB3  F00A         	goto	l1163
  1884  00152E                     l3373:
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1887  00152E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1888  001532  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1889  001536  CFDE FFF6          	movff	postinc2,tblptrl
  1890  00153A  CFDD FFF7          	movff	postdec2,tblptrh
  1891  00153E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1892  00153E  6AF8               	clrf	tblptru,c
  1893  001540                     	endif
  1894  001540                     	if	0	;tblptru may be non-zero
  1895  001540                     	endif
  1896  001540  0008               	tblrd		*
  1897  001542  50F5               	movf	tablat,w,c
  1898  001544  6E07               	movwf	fputc@c^0,c
  1899  001546  6A08               	clrf	(fputc@c+1)^0,c
  1900  001548  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1901  00154C  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1902  001550  EC76  F011         	call	_fputc	;wreg free
  1903  001554                     
  1904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1905  001554  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1906  001558  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1907  00155C  2ADE               	incf	postinc2,f,c
  1908  00155E  0E00               	movlw	0
  1909  001560  22DD               	addwfc	postdec2,f,c
  1910  001562  EF84  F00A         	goto	l3363
  1911  001566                     l1163:
  1912  001566  0012               	return		;funcret
  1913  001568                     __end_of_vfpfcnvrt:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _xtoa *****************
  1917 ;; Defined at:
  1918 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1921 ;;		 -> NULL(0), 
  1922 ;;  d               8   35[COMRAM] unsigned long long 
  1923 ;;  x               1   43[COMRAM] unsigned char 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  n               8   60[COMRAM] unsigned long long 
  1926 ;;  c               2   70[COMRAM] int 
  1927 ;;  i               2   68[COMRAM] int 
  1928 ;;  w               2   58[COMRAM] int 
  1929 ;;  p               2   56[COMRAM] int 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  2   33[COMRAM] int 
  1932 ;; Registers used:
  1933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1939 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;Total ram usage:       39 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 9
  1946 ;; This function calls:
  1947 ;;		_isalpha
  1948 ;;		_isupper
  1949 ;;		_pad
  1950 ;;		_toupper
  1951 ;; This function is called by:
  1952 ;;		_vfpfcnvrt
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text6
  1957  001846                     __ptext6:
  1958                           	callstack 0
  1959  001846                     _xtoa:
  1960                           	callstack 17
  1961  001846                     
  1962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1963  001846  0100               	movlb	0	; () banked
  1964  001848  BFA5               	btfsc	(_prec+1)& (0+255),7,b
  1965  00184A  EF29  F00C         	goto	u3381
  1966  00184E  EF2B  F00C         	goto	u3380
  1967  001852                     u3381:
  1968  001852  EF2C  F00C         	goto	l3163
  1969  001856                     u3380:
  1970  001856                     
  1971                           ; BSR set to: 0
  1972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1973  001856  9257               	bcf	_flags^0,1,c
  1974  001858                     l3163:
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1978  001858  BFA5               	btfsc	(_prec+1)& (0+255),7,b
  1979  00185A  EF39  F00C         	goto	u3390
  1980  00185E  51A5               	movf	(_prec+1)& (0+255),w,b
  1981  001860  E106               	bnz	u3391
  1982  001862  05A4               	decf	_prec& (0+255),w,b
  1983  001864  B0D8               	btfsc	status,0,c
  1984  001866  EF37  F00C         	goto	u3391
  1985  00186A  EF39  F00C         	goto	u3390
  1986  00186E                     u3391:
  1987  00186E  EF3F  F00C         	goto	l1111
  1988  001872                     u3390:
  1989  001872                     
  1990                           ; BSR set to: 0
  1991  001872  0E00               	movlw	0
  1992  001874  6E3A               	movwf	(xtoa@p+1)^0,c
  1993  001876  0E01               	movlw	1
  1994  001878  6E39               	movwf	xtoa@p^0,c
  1995  00187A  EF43  F00C         	goto	l1113
  1996  00187E                     l1111:
  1997                           
  1998                           ; BSR set to: 0
  1999  00187E  C0A4  F039         	movff	_prec,xtoa@p
  2000  001882  C0A5  F03A         	movff	_prec+1,xtoa@p+1
  2001  001886                     l1113:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  2005  001886  C0A2  F03B         	movff	_width,xtoa@w
  2006  00188A  C0A3  F03C         	movff	_width+1,xtoa@w+1
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2009  00188E  A857               	btfss	_flags^0,4,c
  2010  001890  EF4C  F00C         	goto	u3401
  2011  001894  EF4E  F00C         	goto	u3400
  2012  001898                     u3401:
  2013  001898  EF52  F00C         	goto	l3169
  2014  00189C                     u3400:
  2015  00189C                     
  2016                           ; BSR set to: 0
  2017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  2018  00189C  0EFE               	movlw	254
  2019  00189E  263B               	addwf	xtoa@w^0,f,c
  2020  0018A0  0EFF               	movlw	255
  2021  0018A2  223C               	addwfc	(xtoa@w+1)^0,f,c
  2022  0018A4                     l3169:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  2026  0018A4  C024  F03D         	movff	xtoa@d,xtoa@n
  2027  0018A8  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  2028  0018AC  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  2029  0018B0  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  2030  0018B4  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  2031  0018B8  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  2032  0018BC  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  2033  0018C0  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  2034  0018C4                     
  2035                           ; BSR set to: 0
  2036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  2037  0018C4  0E00               	movlw	0
  2038  0018C6  6E46               	movwf	(xtoa@i+1)^0,c
  2039  0018C8  0E1F               	movlw	31
  2040  0018CA  6E45               	movwf	xtoa@i^0,c
  2041  0018CC                     
  2042                           ; BSR set to: 0
  2043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  2044  0018CC  0E00               	movlw	0
  2045  0018CE  6FD4               	movwf	(_dbuf+31)& (0+255),b
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2048  0018D0  EF1D  F00D         	goto	l3205
  2049  0018D4                     l3175:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  2052  0018D4  0645               	decf	xtoa@i^0,f,c
  2053  0018D6  A0D8               	btfss	status,0,c
  2054  0018D8  0646               	decf	(xtoa@i+1)^0,f,c
  2055  0018DA                     
  2056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  2057  0018DA  0E0F               	movlw	15
  2058  0018DC  143D               	andwf	xtoa@n^0,w,c
  2059  0018DE  6E47               	movwf	xtoa@c^0,c
  2060  0018E0  6A48               	clrf	(xtoa@c+1)^0,c
  2061  0018E2                     
  2062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2063  0018E2  BE48               	btfsc	(xtoa@c+1)^0,7,c
  2064  0018E4  EF7D  F00C         	goto	u3411
  2065  0018E8  5048               	movf	(xtoa@c+1)^0,w,c
  2066  0018EA  E109               	bnz	u3410
  2067  0018EC  0E0A               	movlw	10
  2068  0018EE  5C47               	subwf	xtoa@c^0,w,c
  2069  0018F0  A0D8               	btfss	status,0,c
  2070  0018F2  EF7D  F00C         	goto	u3411
  2071  0018F6  EF7F  F00C         	goto	u3410
  2072  0018FA                     u3411:
  2073  0018FA  EF87  F00C         	goto	l3183
  2074  0018FE                     u3410:
  2075  0018FE  0E57               	movlw	87
  2076  001900  2447               	addwf	xtoa@c^0,w,c
  2077  001902  6E47               	movwf	xtoa@c^0,c
  2078  001904  0E00               	movlw	0
  2079  001906  2048               	addwfc	(xtoa@c+1)^0,w,c
  2080  001908  6E48               	movwf	(xtoa@c+1)^0,c
  2081  00190A  EF8D  F00C         	goto	l1120
  2082  00190E                     l3183:
  2083  00190E  0E30               	movlw	48
  2084  001910  2447               	addwf	xtoa@c^0,w,c
  2085  001912  6E47               	movwf	xtoa@c^0,c
  2086  001914  0E00               	movlw	0
  2087  001916  2048               	addwfc	(xtoa@c+1)^0,w,c
  2088  001918  6E48               	movwf	(xtoa@c+1)^0,c
  2089  00191A                     l1120:
  2090  00191A  0EBF               	movlw	191
  2091  00191C  6E2D               	movwf	??_xtoa^0,c
  2092  00191E  0EFF               	movlw	255
  2093  001920  6E2E               	movwf	(??_xtoa+1)^0,c
  2094  001922  502C               	movf	xtoa@x^0,w,c
  2095  001924  6E2F               	movwf	(??_xtoa+2)^0,c
  2096  001926  6A30               	clrf	(??_xtoa+3)^0,c
  2097  001928  502D               	movf	??_xtoa^0,w,c
  2098  00192A  262F               	addwf	(??_xtoa+2)^0,f,c
  2099  00192C  502E               	movf	(??_xtoa+1)^0,w,c
  2100  00192E  2230               	addwfc	(??_xtoa+3)^0,f,c
  2101  001930  5030               	movf	(??_xtoa+3)^0,w,c
  2102  001932  E10A               	bnz	u3420
  2103  001934  0E1A               	movlw	26
  2104  001936  5C2F               	subwf	(??_xtoa+2)^0,w,c
  2105  001938  A0D8               	btfss	status,0,c
  2106  00193A  EFA1  F00C         	goto	u3421
  2107  00193E  EFA4  F00C         	goto	u3420
  2108  001942                     u3421:
  2109  001942  0E01               	movlw	1
  2110  001944  EFA5  F00C         	goto	u3430
  2111  001948                     u3420:
  2112  001948  0E00               	movlw	0
  2113  00194A                     u3430:
  2114  00194A  6E35               	movwf	_xtoa$1615^0,c
  2115  00194C  6A36               	clrf	(_xtoa$1615+1)^0,c
  2116  00194E  5035               	movf	_xtoa$1615^0,w,c
  2117  001950  1036               	iorwf	(_xtoa$1615+1)^0,w,c
  2118  001952  B4D8               	btfsc	status,2,c
  2119  001954  EFAE  F00C         	goto	u3441
  2120  001958  EFB0  F00C         	goto	u3440
  2121  00195C                     u3441:
  2122  00195C  EFE0  F00C         	goto	l3197
  2123  001960                     u3440:
  2124  001960  0E9F               	movlw	159
  2125  001962  6E2D               	movwf	??_xtoa^0,c
  2126  001964  0EFF               	movlw	255
  2127  001966  6E2E               	movwf	(??_xtoa+1)^0,c
  2128  001968  0E20               	movlw	32
  2129  00196A  1047               	iorwf	xtoa@c^0,w,c
  2130  00196C  6E2F               	movwf	(??_xtoa+2)^0,c
  2131  00196E  0E00               	movlw	0
  2132  001970  1048               	iorwf	(xtoa@c+1)^0,w,c
  2133  001972  6E30               	movwf	(??_xtoa+3)^0,c
  2134  001974  502D               	movf	??_xtoa^0,w,c
  2135  001976  262F               	addwf	(??_xtoa+2)^0,f,c
  2136  001978  502E               	movf	(??_xtoa+1)^0,w,c
  2137  00197A  2230               	addwfc	(??_xtoa+3)^0,f,c
  2138  00197C  5030               	movf	(??_xtoa+3)^0,w,c
  2139  00197E  E10A               	bnz	u3450
  2140  001980  0E1A               	movlw	26
  2141  001982  5C2F               	subwf	(??_xtoa+2)^0,w,c
  2142  001984  A0D8               	btfss	status,0,c
  2143  001986  EFC7  F00C         	goto	u3451
  2144  00198A  EFCA  F00C         	goto	u3450
  2145  00198E                     u3451:
  2146  00198E  0E01               	movlw	1
  2147  001990  EFCB  F00C         	goto	u3460
  2148  001994                     u3450:
  2149  001994  0E00               	movlw	0
  2150  001996                     u3460:
  2151  001996  6E37               	movwf	_xtoa$1616^0,c
  2152  001998  6A38               	clrf	(_xtoa$1616+1)^0,c
  2153  00199A  5037               	movf	_xtoa$1616^0,w,c
  2154  00199C  1038               	iorwf	(_xtoa$1616+1)^0,w,c
  2155  00199E  B4D8               	btfsc	status,2,c
  2156  0019A0  EFD4  F00C         	goto	u3471
  2157  0019A4  EFD6  F00C         	goto	u3470
  2158  0019A8                     u3471:
  2159  0019A8  EFE0  F00C         	goto	l3197
  2160  0019AC                     u3470:
  2161  0019AC                     
  2162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2163  0019AC  C047  F00B         	movff	xtoa@c,toupper@c
  2164  0019B0  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  2165  0019B4  EC2E  F012         	call	_toupper	;wreg free
  2166  0019B8  C00B  F047         	movff	?_toupper,xtoa@c
  2167  0019BC  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  2168  0019C0                     l3197:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2171  0019C0  0EB5               	movlw	low _dbuf
  2172  0019C2  2445               	addwf	xtoa@i^0,w,c
  2173  0019C4  6ED9               	movwf	fsr2l,c
  2174  0019C6  0E00               	movlw	high _dbuf
  2175  0019C8  2046               	addwfc	(xtoa@i+1)^0,w,c
  2176  0019CA  6EDA               	movwf	fsr2h,c
  2177  0019CC  C047  FFDF         	movff	xtoa@c,indf2
  2178  0019D0                     
  2179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  2180  0019D0  0639               	decf	xtoa@p^0,f,c
  2181  0019D2  A0D8               	btfss	status,0,c
  2182  0019D4  063A               	decf	(xtoa@p+1)^0,f,c
  2183  0019D6                     
  2184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  2185  0019D6  063B               	decf	xtoa@w^0,f,c
  2186  0019D8  A0D8               	btfss	status,0,c
  2187  0019DA  063C               	decf	(xtoa@w+1)^0,f,c
  2188  0019DC                     
  2189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2190  0019DC  C03D  F02D         	movff	xtoa@n,??_xtoa
  2191  0019E0  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  2192  0019E4  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  2193  0019E8  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  2194  0019EC  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  2195  0019F0  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  2196  0019F4  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  2197  0019F8  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  2198  0019FC  0E05               	movlw	5
  2199  0019FE  EF0A  F00D         	goto	u3480
  2200  001A02                     u3485:
  2201  001A02  90D8               	bcf	status,0,c
  2202  001A04  3234               	rrcf	(??_xtoa+7)^0,f,c
  2203  001A06  3233               	rrcf	(??_xtoa+6)^0,f,c
  2204  001A08  3232               	rrcf	(??_xtoa+5)^0,f,c
  2205  001A0A  3231               	rrcf	(??_xtoa+4)^0,f,c
  2206  001A0C  3230               	rrcf	(??_xtoa+3)^0,f,c
  2207  001A0E  322F               	rrcf	(??_xtoa+2)^0,f,c
  2208  001A10  322E               	rrcf	(??_xtoa+1)^0,f,c
  2209  001A12  322D               	rrcf	??_xtoa^0,f,c
  2210  001A14                     u3480:
  2211  001A14  2EE8               	decfsz	wreg,f,c
  2212  001A16  EF01  F00D         	goto	u3485
  2213  001A1A  C02D  F03D         	movff	??_xtoa,xtoa@n
  2214  001A1E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  2215  001A22  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  2216  001A26  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  2217  001A2A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  2218  001A2E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  2219  001A32  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  2220  001A36  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  2221  001A3A                     l3205:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2224  001A3A  BE46               	btfsc	(xtoa@i+1)^0,7,c
  2225  001A3C  EF29  F00D         	goto	u3491
  2226  001A40  5046               	movf	(xtoa@i+1)^0,w,c
  2227  001A42  E109               	bnz	u3490
  2228  001A44  0E02               	movlw	2
  2229  001A46  5C45               	subwf	xtoa@i^0,w,c
  2230  001A48  A0D8               	btfss	status,0,c
  2231  001A4A  EF29  F00D         	goto	u3491
  2232  001A4E  EF2B  F00D         	goto	u3490
  2233  001A52                     u3491:
  2234  001A52  EF5B  F00D         	goto	l1134
  2235  001A56                     u3490:
  2236  001A56  503D               	movf	xtoa@n^0,w,c
  2237  001A58  103E               	iorwf	(xtoa@n+1)^0,w,c
  2238  001A5A  103F               	iorwf	(xtoa@n+2)^0,w,c
  2239  001A5C  1040               	iorwf	(xtoa@n+3)^0,w,c
  2240  001A5E  1041               	iorwf	(xtoa@n+4)^0,w,c
  2241  001A60  1042               	iorwf	(xtoa@n+5)^0,w,c
  2242  001A62  1043               	iorwf	(xtoa@n+6)^0,w,c
  2243  001A64  1044               	iorwf	(xtoa@n+7)^0,w,c
  2244  001A66  A4D8               	btfss	status,2,c
  2245  001A68  EF38  F00D         	goto	u3501
  2246  001A6C  EF3A  F00D         	goto	u3500
  2247  001A70                     u3501:
  2248  001A70  EF6A  F00C         	goto	l3175
  2249  001A74                     u3500:
  2250  001A74  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  2251  001A76  EF47  F00D         	goto	u3510
  2252  001A7A  503A               	movf	(xtoa@p+1)^0,w,c
  2253  001A7C  E106               	bnz	u3511
  2254  001A7E  0439               	decf	xtoa@p^0,w,c
  2255  001A80  B0D8               	btfsc	status,0,c
  2256  001A82  EF45  F00D         	goto	u3511
  2257  001A86  EF47  F00D         	goto	u3510
  2258  001A8A                     u3511:
  2259  001A8A  EF6A  F00C         	goto	l3175
  2260  001A8E                     u3510:
  2261  001A8E  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  2262  001A90  EF52  F00D         	goto	u3521
  2263  001A94  503C               	movf	(xtoa@w+1)^0,w,c
  2264  001A96  E108               	bnz	u3520
  2265  001A98  043B               	decf	xtoa@w^0,w,c
  2266  001A9A  A0D8               	btfss	status,0,c
  2267  001A9C  EF52  F00D         	goto	u3521
  2268  001AA0  EF54  F00D         	goto	u3520
  2269  001AA4                     u3521:
  2270  001AA4  EF5B  F00D         	goto	l1134
  2271  001AA8                     u3520:
  2272  001AA8  B257               	btfsc	_flags^0,1,c
  2273  001AAA  EF59  F00D         	goto	u3531
  2274  001AAE  EF5B  F00D         	goto	u3530
  2275  001AB2                     u3531:
  2276  001AB2  EF6A  F00C         	goto	l3175
  2277  001AB6                     u3530:
  2278  001AB6                     l1134:
  2279                           
  2280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2281  001AB6  A857               	btfss	_flags^0,4,c
  2282  001AB8  EF60  F00D         	goto	u3541
  2283  001ABC  EF62  F00D         	goto	u3540
  2284  001AC0                     u3541:
  2285  001AC0  EF78  F00D         	goto	l3221
  2286  001AC4                     u3540:
  2287  001AC4                     
  2288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  2289  001AC4  0645               	decf	xtoa@i^0,f,c
  2290  001AC6  A0D8               	btfss	status,0,c
  2291  001AC8  0646               	decf	(xtoa@i+1)^0,f,c
  2292  001ACA                     
  2293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2294  001ACA  0EB5               	movlw	low _dbuf
  2295  001ACC  2445               	addwf	xtoa@i^0,w,c
  2296  001ACE  6ED9               	movwf	fsr2l,c
  2297  001AD0  0E00               	movlw	high _dbuf
  2298  001AD2  2046               	addwfc	(xtoa@i+1)^0,w,c
  2299  001AD4  6EDA               	movwf	fsr2h,c
  2300  001AD6  C02C  FFDF         	movff	xtoa@x,indf2
  2301  001ADA                     
  2302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  2303  001ADA  0645               	decf	xtoa@i^0,f,c
  2304  001ADC  A0D8               	btfss	status,0,c
  2305  001ADE  0646               	decf	(xtoa@i+1)^0,f,c
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2308  001AE0  0EB5               	movlw	low _dbuf
  2309  001AE2  2445               	addwf	xtoa@i^0,w,c
  2310  001AE4  6ED9               	movwf	fsr2l,c
  2311  001AE6  0E00               	movlw	high _dbuf
  2312  001AE8  2046               	addwfc	(xtoa@i+1)^0,w,c
  2313  001AEA  6EDA               	movwf	fsr2h,c
  2314  001AEC  0E30               	movlw	48
  2315  001AEE  6EDF               	movwf	indf2,c
  2316  001AF0                     l3221:
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2319  001AF0  C022  F017         	movff	xtoa@fp,pad@fp
  2320  001AF4  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  2321  001AF8  0EB5               	movlw	low _dbuf
  2322  001AFA  2445               	addwf	xtoa@i^0,w,c
  2323  001AFC  6E19               	movwf	pad@buf^0,c
  2324  001AFE  0E00               	movlw	high _dbuf
  2325  001B00  2046               	addwfc	(xtoa@i+1)^0,w,c
  2326  001B02  6E1A               	movwf	(pad@buf+1)^0,c
  2327  001B04  C03B  F01B         	movff	xtoa@w,pad@p
  2328  001B08  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  2329  001B0C  ECB7  F010         	call	_pad	;wreg free
  2330  001B10  C017  F022         	movff	?_pad,?_xtoa
  2331  001B14  C018  F023         	movff	?_pad+1,?_xtoa+1
  2332  001B18  0012               	return		;funcret
  2333  001B1A                     __end_of_xtoa:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _toupper *****************
  2337 ;; Defined at:
  2338 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  c               2   10[COMRAM] int 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  2   10[COMRAM] int 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;Total ram usage:        8 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 5
  2359 ;; This function calls:
  2360 ;;		_islower
  2361 ;; This function is called by:
  2362 ;;		_xtoa
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text7
  2367  00245C                     __ptext7:
  2368                           	callstack 0
  2369  00245C                     _toupper:
  2370                           	callstack 20
  2371  00245C  0E9F               	movlw	159
  2372  00245E  6E0D               	movwf	??_toupper^0,c
  2373  002460  0EFF               	movlw	255
  2374  002462  6E0E               	movwf	(??_toupper+1)^0,c
  2375  002464  C00B  F00F         	movff	toupper@c,??_toupper+2
  2376  002468  C00C  F010         	movff	toupper@c+1,??_toupper+3
  2377  00246C  500D               	movf	??_toupper^0,w,c
  2378  00246E  260F               	addwf	(??_toupper+2)^0,f,c
  2379  002470  500E               	movf	(??_toupper+1)^0,w,c
  2380  002472  2210               	addwfc	(??_toupper+3)^0,f,c
  2381  002474  5010               	movf	(??_toupper+3)^0,w,c
  2382  002476  E10A               	bnz	u3110
  2383  002478  0E1A               	movlw	26
  2384  00247A  5C0F               	subwf	(??_toupper+2)^0,w,c
  2385  00247C  A0D8               	btfss	status,0,c
  2386  00247E  EF43  F012         	goto	u3111
  2387  002482  EF46  F012         	goto	u3110
  2388  002486                     u3111:
  2389  002486  0E01               	movlw	1
  2390  002488  EF47  F012         	goto	u3120
  2391  00248C                     u3110:
  2392  00248C  0E00               	movlw	0
  2393  00248E                     u3120:
  2394  00248E  6E11               	movwf	_toupper$1728^0,c
  2395  002490  6A12               	clrf	(_toupper$1728+1)^0,c
  2396  002492  5011               	movf	_toupper$1728^0,w,c
  2397  002494  1012               	iorwf	(_toupper$1728+1)^0,w,c
  2398  002496  B4D8               	btfsc	status,2,c
  2399  002498  EF50  F012         	goto	u3131
  2400  00249C  EF52  F012         	goto	u3130
  2401  0024A0                     u3131:
  2402  0024A0  EF58  F012         	goto	l1271
  2403  0024A4                     u3130:
  2404  0024A4  0E5F               	movlw	95
  2405  0024A6  140B               	andwf	toupper@c^0,w,c
  2406  0024A8  6E0B               	movwf	?_toupper^0,c
  2407  0024AA  6A0C               	clrf	(?_toupper+1)^0,c
  2408  0024AC  EF5C  F012         	goto	l1276
  2409  0024B0                     l1271:
  2410  0024B0  C00B  F00B         	movff	toupper@c,?_toupper
  2411  0024B4  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  2412  0024B8                     l1276:
  2413  0024B8  0012               	return		;funcret
  2414  0024BA                     __end_of_toupper:
  2415                           	callstack 0
  2416                           
  2417 ;; *************** function _islower *****************
  2418 ;; Defined at:
  2419 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  c               2    4[COMRAM] int 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  2    4[COMRAM] int 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;Total ram usage:        6 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; Hardware stack levels required when called: 4
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_toupper
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text8
  2448  002666                     __ptext8:
  2449                           	callstack 0
  2450  002666                     _islower:
  2451                           	callstack 20
  2452  002666  0E9F               	movlw	159
  2453  002668  6E07               	movwf	??_islower^0,c
  2454  00266A  0EFF               	movlw	255
  2455  00266C  6E08               	movwf	(??_islower+1)^0,c
  2456  00266E  C005  F009         	movff	islower@c,??_islower+2
  2457  002672  C006  F00A         	movff	islower@c+1,??_islower+3
  2458  002676  5007               	movf	??_islower^0,w,c
  2459  002678  2609               	addwf	(??_islower+2)^0,f,c
  2460  00267A  5008               	movf	(??_islower+1)^0,w,c
  2461  00267C  220A               	addwfc	(??_islower+3)^0,f,c
  2462  00267E  500A               	movf	(??_islower+3)^0,w,c
  2463  002680  E10A               	bnz	u2870
  2464  002682  0E1A               	movlw	26
  2465  002684  5C09               	subwf	(??_islower+2)^0,w,c
  2466  002686  A0D8               	btfss	status,0,c
  2467  002688  EF48  F013         	goto	u2871
  2468  00268C  EF4B  F013         	goto	u2870
  2469  002690                     u2871:
  2470  002690  0E01               	movlw	1
  2471  002692  EF4C  F013         	goto	u2880
  2472  002696                     u2870:
  2473  002696  0E00               	movlw	0
  2474  002698                     u2880:
  2475  002698  6E05               	movwf	?_islower^0,c
  2476  00269A  6A06               	clrf	(?_islower+1)^0,c
  2477  00269C  0012               	return		;funcret
  2478  00269E                     __end_of_islower:
  2479                           	callstack 0
  2480                           
  2481 ;; *************** function _isupper *****************
  2482 ;; Defined at:
  2483 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  c               2    4[COMRAM] int 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  2    4[COMRAM] int 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;Total ram usage:        6 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 4
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_xtoa
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text9
  2512  00269E                     __ptext9:
  2513                           	callstack 0
  2514  00269E                     _isupper:
  2515                           	callstack 21
  2516  00269E  0EBF               	movlw	191
  2517  0026A0  6E07               	movwf	??_isupper^0,c
  2518  0026A2  0EFF               	movlw	255
  2519  0026A4  6E08               	movwf	(??_isupper+1)^0,c
  2520  0026A6  C005  F009         	movff	isupper@c,??_isupper+2
  2521  0026AA  C006  F00A         	movff	isupper@c+1,??_isupper+3
  2522  0026AE  5007               	movf	??_isupper^0,w,c
  2523  0026B0  2609               	addwf	(??_isupper+2)^0,f,c
  2524  0026B2  5008               	movf	(??_isupper+1)^0,w,c
  2525  0026B4  220A               	addwfc	(??_isupper+3)^0,f,c
  2526  0026B6  500A               	movf	(??_isupper+3)^0,w,c
  2527  0026B8  E10A               	bnz	u3070
  2528  0026BA  0E1A               	movlw	26
  2529  0026BC  5C09               	subwf	(??_isupper+2)^0,w,c
  2530  0026BE  A0D8               	btfss	status,0,c
  2531  0026C0  EF64  F013         	goto	u3071
  2532  0026C4  EF67  F013         	goto	u3070
  2533  0026C8                     u3071:
  2534  0026C8  0E01               	movlw	1
  2535  0026CA  EF68  F013         	goto	u3080
  2536  0026CE                     u3070:
  2537  0026CE  0E00               	movlw	0
  2538  0026D0                     u3080:
  2539  0026D0  6E05               	movwf	?_isupper^0,c
  2540  0026D2  6A06               	clrf	(?_isupper+1)^0,c
  2541  0026D4  0012               	return		;funcret
  2542  0026D6                     __end_of_isupper:
  2543                           	callstack 0
  2544                           
  2545 ;; *************** function _isalpha *****************
  2546 ;; Defined at:
  2547 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  c               2    4[COMRAM] int 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  2    4[COMRAM] int 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;Total ram usage:        6 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 4
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_xtoa
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text10
  2576  00262A                     __ptext10:
  2577                           	callstack 0
  2578  00262A                     _isalpha:
  2579                           	callstack 21
  2580  00262A  0E9F               	movlw	159
  2581  00262C  6E07               	movwf	??_isalpha^0,c
  2582  00262E  0EFF               	movlw	255
  2583  002630  6E08               	movwf	(??_isalpha+1)^0,c
  2584  002632  0E20               	movlw	32
  2585  002634  1005               	iorwf	isalpha@c^0,w,c
  2586  002636  6E09               	movwf	(??_isalpha+2)^0,c
  2587  002638  0E00               	movlw	0
  2588  00263A  1006               	iorwf	(isalpha@c+1)^0,w,c
  2589  00263C  6E0A               	movwf	(??_isalpha+3)^0,c
  2590  00263E  5007               	movf	??_isalpha^0,w,c
  2591  002640  2609               	addwf	(??_isalpha+2)^0,f,c
  2592  002642  5008               	movf	(??_isalpha+1)^0,w,c
  2593  002644  220A               	addwfc	(??_isalpha+3)^0,f,c
  2594  002646  500A               	movf	(??_isalpha+3)^0,w,c
  2595  002648  E10A               	bnz	u3090
  2596  00264A  0E1A               	movlw	26
  2597  00264C  5C09               	subwf	(??_isalpha+2)^0,w,c
  2598  00264E  A0D8               	btfss	status,0,c
  2599  002650  EF2C  F013         	goto	u3091
  2600  002654  EF2F  F013         	goto	u3090
  2601  002658                     u3091:
  2602  002658  0E01               	movlw	1
  2603  00265A  EF30  F013         	goto	u3100
  2604  00265E                     u3090:
  2605  00265E  0E00               	movlw	0
  2606  002660                     u3100:
  2607  002660  6E05               	movwf	?_isalpha^0,c
  2608  002662  6A06               	clrf	(?_isalpha+1)^0,c
  2609  002664  0012               	return		;funcret
  2610  002666                     __end_of_isalpha:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _dtoa *****************
  2614 ;; Defined at:
  2615 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  2618 ;;		 -> NULL(0), 
  2619 ;;  d               8   35[COMRAM] long long 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  n               8   59[COMRAM] long long 
  2622 ;;  i               2   67[COMRAM] int 
  2623 ;;  s               2   57[COMRAM] int 
  2624 ;;  w               2   55[COMRAM] int 
  2625 ;;  p               2   53[COMRAM] int 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  2   33[COMRAM] int 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2635 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;Total ram usage:       36 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 9
  2642 ;; This function calls:
  2643 ;;		___aodiv
  2644 ;;		___aomod
  2645 ;;		_abs
  2646 ;;		_pad
  2647 ;; This function is called by:
  2648 ;;		_vfpfcnvrt
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text11
  2653  001568                     __ptext11:
  2654                           	callstack 0
  2655  001568                     _dtoa:
  2656                           	callstack 17
  2657  001568                     
  2658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2659  001568  C024  F03C         	movff	dtoa@d,dtoa@n
  2660  00156C  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  2661  001570  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  2662  001574  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  2663  001578  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  2664  00157C  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  2665  001580  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  2666  001584  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  2667  001588                     
  2668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2669  001588  BE43               	btfsc	(dtoa@n+7)^0,7,c
  2670  00158A  EFC9  F00A         	goto	u3231
  2671  00158E  EFCC  F00A         	goto	u3230
  2672  001592                     u3231:
  2673  001592  0E01               	movlw	1
  2674  001594  EFCD  F00A         	goto	u3240
  2675  001598                     u3230:
  2676  001598  0E00               	movlw	0
  2677  00159A                     u3240:
  2678  00159A  6E3A               	movwf	dtoa@s^0,c
  2679  00159C  6A3B               	clrf	(dtoa@s+1)^0,c
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2682  00159E  503A               	movf	dtoa@s^0,w,c
  2683  0015A0  103B               	iorwf	(dtoa@s+1)^0,w,c
  2684  0015A2  B4D8               	btfsc	status,2,c
  2685  0015A4  EFD6  F00A         	goto	u3251
  2686  0015A8  EFD8  F00A         	goto	u3250
  2687  0015AC                     u3251:
  2688  0015AC  EFE8  F00A         	goto	l3103
  2689  0015B0                     u3250:
  2690  0015B0                     
  2691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2692  0015B0  1E43               	comf	(dtoa@n+7)^0,f,c
  2693  0015B2  1E42               	comf	(dtoa@n+6)^0,f,c
  2694  0015B4  1E41               	comf	(dtoa@n+5)^0,f,c
  2695  0015B6  1E40               	comf	(dtoa@n+4)^0,f,c
  2696  0015B8  1E3F               	comf	(dtoa@n+3)^0,f,c
  2697  0015BA  1E3E               	comf	(dtoa@n+2)^0,f,c
  2698  0015BC  1E3D               	comf	(dtoa@n+1)^0,f,c
  2699  0015BE  6C3C               	negf	dtoa@n^0,c
  2700  0015C0  0E00               	movlw	0
  2701  0015C2  223D               	addwfc	(dtoa@n+1)^0,f,c
  2702  0015C4  223E               	addwfc	(dtoa@n+2)^0,f,c
  2703  0015C6  223F               	addwfc	(dtoa@n+3)^0,f,c
  2704  0015C8  2240               	addwfc	(dtoa@n+4)^0,f,c
  2705  0015CA  2241               	addwfc	(dtoa@n+5)^0,f,c
  2706  0015CC  2242               	addwfc	(dtoa@n+6)^0,f,c
  2707  0015CE  2243               	addwfc	(dtoa@n+7)^0,f,c
  2708  0015D0                     l3103:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2711  0015D0  0100               	movlb	0	; () banked
  2712  0015D2  BFA5               	btfsc	(_prec+1)& (0+255),7,b
  2713  0015D4  EFEE  F00A         	goto	u3261
  2714  0015D8  EFF0  F00A         	goto	u3260
  2715  0015DC                     u3261:
  2716  0015DC  EFF1  F00A         	goto	l3107
  2717  0015E0                     u3260:
  2718  0015E0                     
  2719                           ; BSR set to: 0
  2720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2721  0015E0  9257               	bcf	_flags^0,1,c
  2722  0015E2                     l3107:
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2726  0015E2  BFA5               	btfsc	(_prec+1)& (0+255),7,b
  2727  0015E4  EFFE  F00A         	goto	u3270
  2728  0015E8  51A5               	movf	(_prec+1)& (0+255),w,b
  2729  0015EA  E106               	bnz	u3271
  2730  0015EC  05A4               	decf	_prec& (0+255),w,b
  2731  0015EE  B0D8               	btfsc	status,0,c
  2732  0015F0  EFFC  F00A         	goto	u3271
  2733  0015F4  EFFE  F00A         	goto	u3270
  2734  0015F8                     u3271:
  2735  0015F8  EF04  F00B         	goto	l1086
  2736  0015FC                     u3270:
  2737  0015FC                     
  2738                           ; BSR set to: 0
  2739  0015FC  0E00               	movlw	0
  2740  0015FE  6E37               	movwf	(dtoa@p+1)^0,c
  2741  001600  0E01               	movlw	1
  2742  001602  6E36               	movwf	dtoa@p^0,c
  2743  001604  EF08  F00B         	goto	l1088
  2744  001608                     l1086:
  2745                           
  2746                           ; BSR set to: 0
  2747  001608  C0A4  F036         	movff	_prec,dtoa@p
  2748  00160C  C0A5  F037         	movff	_prec+1,dtoa@p+1
  2749  001610                     l1088:
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2753  001610  C0A2  F038         	movff	_width,dtoa@w
  2754  001614  C0A3  F039         	movff	_width+1,dtoa@w+1
  2755  001618                     
  2756                           ; BSR set to: 0
  2757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2758  001618  503A               	movf	dtoa@s^0,w,c
  2759  00161A  103B               	iorwf	(dtoa@s+1)^0,w,c
  2760  00161C  A4D8               	btfss	status,2,c
  2761  00161E  EF13  F00B         	goto	u3281
  2762  001622  EF15  F00B         	goto	u3280
  2763  001626                     u3281:
  2764  001626  EF1C  F00B         	goto	l3115
  2765  00162A                     u3280:
  2766  00162A                     
  2767                           ; BSR set to: 0
  2768  00162A  A457               	btfss	_flags^0,2,c
  2769  00162C  EF1A  F00B         	goto	u3291
  2770  001630  EF1C  F00B         	goto	u3290
  2771  001634                     u3291:
  2772  001634  EF1F  F00B         	goto	l3117
  2773  001638                     u3290:
  2774  001638                     l3115:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2778  001638  0638               	decf	dtoa@w^0,f,c
  2779  00163A  A0D8               	btfss	status,0,c
  2780  00163C  0639               	decf	(dtoa@w+1)^0,f,c
  2781  00163E                     l3117:
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2785  00163E  0E00               	movlw	0
  2786  001640  6E45               	movwf	(dtoa@i+1)^0,c
  2787  001642  0E1F               	movlw	31
  2788  001644  6E44               	movwf	dtoa@i^0,c
  2789  001646                     
  2790                           ; BSR set to: 0
  2791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2792  001646  0E00               	movlw	0
  2793  001648  6FD4               	movwf	(_dbuf+31)& (0+255),b
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2796  00164A  EFA3  F00B         	goto	l3131
  2797  00164E                     l3121:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2800  00164E  0644               	decf	dtoa@i^0,f,c
  2801  001650  A0D8               	btfss	status,0,c
  2802  001652  0645               	decf	(dtoa@i+1)^0,f,c
  2803  001654                     
  2804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2805  001654  0EB5               	movlw	low _dbuf
  2806  001656  2444               	addwf	dtoa@i^0,w,c
  2807  001658  6ED9               	movwf	fsr2l,c
  2808  00165A  0E00               	movlw	high _dbuf
  2809  00165C  2045               	addwfc	(dtoa@i+1)^0,w,c
  2810  00165E  6EDA               	movwf	fsr2h,c
  2811  001660  C03C  F005         	movff	dtoa@n,___aomod@dividend
  2812  001664  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  2813  001668  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  2814  00166C  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  2815  001670  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  2816  001674  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  2817  001678  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  2818  00167C  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  2819  001680  0E0A               	movlw	10
  2820  001682  6E0D               	movwf	___aomod@divisor^0,c
  2821  001684  0E00               	movlw	0
  2822  001686  6E0E               	movwf	(___aomod@divisor+1)^0,c
  2823  001688  0E00               	movlw	0
  2824  00168A  6E0F               	movwf	(___aomod@divisor+2)^0,c
  2825  00168C  0E00               	movlw	0
  2826  00168E  6E10               	movwf	(___aomod@divisor+3)^0,c
  2827  001690  0E00               	movlw	0
  2828  001692  6E11               	movwf	(___aomod@divisor+4)^0,c
  2829  001694  0E00               	movlw	0
  2830  001696  6E12               	movwf	(___aomod@divisor+5)^0,c
  2831  001698  0E00               	movlw	0
  2832  00169A  6E13               	movwf	(___aomod@divisor+6)^0,c
  2833  00169C  0E00               	movlw	0
  2834  00169E  6E14               	movwf	(___aomod@divisor+7)^0,c
  2835  0016A0  EC1E  F00F         	call	___aomod	;wreg free
  2836  0016A4  C005  F02C         	movff	?___aomod,??_dtoa
  2837  0016A8  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  2838  0016AC  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  2839  0016B0  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  2840  0016B4  C009  F030         	movff	?___aomod+4,??_dtoa+4
  2841  0016B8  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  2842  0016BC  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  2843  0016C0  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  2844  0016C4  C02C  F017         	movff	??_dtoa,abs@a
  2845  0016C8  C02E  F018         	movff	??_dtoa+2,abs@a+1
  2846  0016CC  ECF5  F012         	call	_abs	;wreg free
  2847  0016D0  5017               	movf	?_abs^0,w,c
  2848  0016D2  0F30               	addlw	48
  2849  0016D4  6EDF               	movwf	indf2,c
  2850  0016D6                     
  2851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2852  0016D6  0636               	decf	dtoa@p^0,f,c
  2853  0016D8  A0D8               	btfss	status,0,c
  2854  0016DA  0637               	decf	(dtoa@p+1)^0,f,c
  2855  0016DC                     
  2856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2857  0016DC  0638               	decf	dtoa@w^0,f,c
  2858  0016DE  A0D8               	btfss	status,0,c
  2859  0016E0  0639               	decf	(dtoa@w+1)^0,f,c
  2860  0016E2                     
  2861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2862  0016E2  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  2863  0016E6  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  2864  0016EA  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  2865  0016EE  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  2866  0016F2  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  2867  0016F6  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  2868  0016FA  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  2869  0016FE  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  2870  001702  0E0A               	movlw	10
  2871  001704  6E0D               	movwf	___aodiv@divisor^0,c
  2872  001706  0E00               	movlw	0
  2873  001708  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  2874  00170A  0E00               	movlw	0
  2875  00170C  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  2876  00170E  0E00               	movlw	0
  2877  001710  6E10               	movwf	(___aodiv@divisor+3)^0,c
  2878  001712  0E00               	movlw	0
  2879  001714  6E11               	movwf	(___aodiv@divisor+4)^0,c
  2880  001716  0E00               	movlw	0
  2881  001718  6E12               	movwf	(___aodiv@divisor+5)^0,c
  2882  00171A  0E00               	movlw	0
  2883  00171C  6E13               	movwf	(___aodiv@divisor+6)^0,c
  2884  00171E  0E00               	movlw	0
  2885  001720  6E14               	movwf	(___aodiv@divisor+7)^0,c
  2886  001722  EC5A  F00E         	call	___aodiv	;wreg free
  2887  001726  C005  F03C         	movff	?___aodiv,dtoa@n
  2888  00172A  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  2889  00172E  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  2890  001732  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  2891  001736  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  2892  00173A  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  2893  00173E  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  2894  001742  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  2895  001746                     l3131:
  2896                           
  2897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2898  001746  BE45               	btfsc	(dtoa@i+1)^0,7,c
  2899  001748  EFAE  F00B         	goto	u3301
  2900  00174C  5045               	movf	(dtoa@i+1)^0,w,c
  2901  00174E  E108               	bnz	u3300
  2902  001750  0444               	decf	dtoa@i^0,w,c
  2903  001752  A0D8               	btfss	status,0,c
  2904  001754  EFAE  F00B         	goto	u3301
  2905  001758  EFB0  F00B         	goto	u3300
  2906  00175C                     u3301:
  2907  00175C  EFE0  F00B         	goto	l3141
  2908  001760                     u3300:
  2909  001760  503C               	movf	dtoa@n^0,w,c
  2910  001762  103D               	iorwf	(dtoa@n+1)^0,w,c
  2911  001764  103E               	iorwf	(dtoa@n+2)^0,w,c
  2912  001766  103F               	iorwf	(dtoa@n+3)^0,w,c
  2913  001768  1040               	iorwf	(dtoa@n+4)^0,w,c
  2914  00176A  1041               	iorwf	(dtoa@n+5)^0,w,c
  2915  00176C  1042               	iorwf	(dtoa@n+6)^0,w,c
  2916  00176E  1043               	iorwf	(dtoa@n+7)^0,w,c
  2917  001770  A4D8               	btfss	status,2,c
  2918  001772  EFBD  F00B         	goto	u3311
  2919  001776  EFBF  F00B         	goto	u3310
  2920  00177A                     u3311:
  2921  00177A  EF27  F00B         	goto	l3121
  2922  00177E                     u3310:
  2923  00177E  BE37               	btfsc	(dtoa@p+1)^0,7,c
  2924  001780  EFCC  F00B         	goto	u3320
  2925  001784  5037               	movf	(dtoa@p+1)^0,w,c
  2926  001786  E106               	bnz	u3321
  2927  001788  0436               	decf	dtoa@p^0,w,c
  2928  00178A  B0D8               	btfsc	status,0,c
  2929  00178C  EFCA  F00B         	goto	u3321
  2930  001790  EFCC  F00B         	goto	u3320
  2931  001794                     u3321:
  2932  001794  EF27  F00B         	goto	l3121
  2933  001798                     u3320:
  2934  001798  BE39               	btfsc	(dtoa@w+1)^0,7,c
  2935  00179A  EFD7  F00B         	goto	u3331
  2936  00179E  5039               	movf	(dtoa@w+1)^0,w,c
  2937  0017A0  E108               	bnz	u3330
  2938  0017A2  0438               	decf	dtoa@w^0,w,c
  2939  0017A4  A0D8               	btfss	status,0,c
  2940  0017A6  EFD7  F00B         	goto	u3331
  2941  0017AA  EFD9  F00B         	goto	u3330
  2942  0017AE                     u3331:
  2943  0017AE  EFE0  F00B         	goto	l3141
  2944  0017B2                     u3330:
  2945  0017B2  B257               	btfsc	_flags^0,1,c
  2946  0017B4  EFDE  F00B         	goto	u3341
  2947  0017B8  EFE0  F00B         	goto	u3340
  2948  0017BC                     u3341:
  2949  0017BC  EF27  F00B         	goto	l3121
  2950  0017C0                     u3340:
  2951  0017C0                     l3141:
  2952                           
  2953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2954  0017C0  503A               	movf	dtoa@s^0,w,c
  2955  0017C2  103B               	iorwf	(dtoa@s+1)^0,w,c
  2956  0017C4  A4D8               	btfss	status,2,c
  2957  0017C6  EFE7  F00B         	goto	u3351
  2958  0017CA  EFE9  F00B         	goto	u3350
  2959  0017CE                     u3351:
  2960  0017CE  EFF0  F00B         	goto	l3145
  2961  0017D2                     u3350:
  2962  0017D2  A457               	btfss	_flags^0,2,c
  2963  0017D4  EFEE  F00B         	goto	u3361
  2964  0017D8  EFF0  F00B         	goto	u3360
  2965  0017DC                     u3361:
  2966  0017DC  EF0E  F00C         	goto	l3155
  2967  0017E0                     u3360:
  2968  0017E0                     l3145:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2971  0017E0  0644               	decf	dtoa@i^0,f,c
  2972  0017E2  A0D8               	btfss	status,0,c
  2973  0017E4  0645               	decf	(dtoa@i+1)^0,f,c
  2974  0017E6                     
  2975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2976  0017E6  503A               	movf	dtoa@s^0,w,c
  2977  0017E8  103B               	iorwf	(dtoa@s+1)^0,w,c
  2978  0017EA  A4D8               	btfss	status,2,c
  2979  0017EC  EFFA  F00B         	goto	u3371
  2980  0017F0  EFFC  F00B         	goto	u3370
  2981  0017F4                     u3371:
  2982  0017F4  EF02  F00C         	goto	l3151
  2983  0017F8                     u3370:
  2984  0017F8  0E00               	movlw	0
  2985  0017FA  6E35               	movwf	(_dtoa$1604+1)^0,c
  2986  0017FC  0E2B               	movlw	43
  2987  0017FE  6E34               	movwf	_dtoa$1604^0,c
  2988  001800  EF06  F00C         	goto	l3153
  2989  001804                     l3151:
  2990  001804  0E00               	movlw	0
  2991  001806  6E35               	movwf	(_dtoa$1604+1)^0,c
  2992  001808  0E2D               	movlw	45
  2993  00180A  6E34               	movwf	_dtoa$1604^0,c
  2994  00180C                     l3153:
  2995  00180C  0EB5               	movlw	low _dbuf
  2996  00180E  2444               	addwf	dtoa@i^0,w,c
  2997  001810  6ED9               	movwf	fsr2l,c
  2998  001812  0E00               	movlw	high _dbuf
  2999  001814  2045               	addwfc	(dtoa@i+1)^0,w,c
  3000  001816  6EDA               	movwf	fsr2h,c
  3001  001818  C034  FFDF         	movff	_dtoa$1604,indf2
  3002  00181C                     l3155:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3005  00181C  C022  F017         	movff	dtoa@fp,pad@fp
  3006  001820  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  3007  001824  0EB5               	movlw	low _dbuf
  3008  001826  2444               	addwf	dtoa@i^0,w,c
  3009  001828  6E19               	movwf	pad@buf^0,c
  3010  00182A  0E00               	movlw	high _dbuf
  3011  00182C  2045               	addwfc	(dtoa@i+1)^0,w,c
  3012  00182E  6E1A               	movwf	(pad@buf+1)^0,c
  3013  001830  C038  F01B         	movff	dtoa@w,pad@p
  3014  001834  C039  F01C         	movff	dtoa@w+1,pad@p+1
  3015  001838  ECB7  F010         	call	_pad	;wreg free
  3016  00183C  C017  F022         	movff	?_pad,?_dtoa
  3017  001840  C018  F023         	movff	?_pad+1,?_dtoa+1
  3018  001844  0012               	return		;funcret
  3019  001846                     __end_of_dtoa:
  3020                           	callstack 0
  3021                           
  3022 ;; *************** function _pad *****************
  3023 ;; Defined at:
  3024 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3027 ;;		 -> NULL(0), 
  3028 ;;  buf             2   24[COMRAM] PTR unsigned char 
  3029 ;;		 -> dbuf(32), 
  3030 ;;  p               2   26[COMRAM] int 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  w               2   31[COMRAM] int 
  3033 ;;  i               2   29[COMRAM] int 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  2   22[COMRAM] int 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3043 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;Total ram usage:       11 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 8
  3050 ;; This function calls:
  3051 ;;		_fputc
  3052 ;;		_fputs
  3053 ;;		_strlen
  3054 ;; This function is called by:
  3055 ;;		_dtoa
  3056 ;;		_xtoa
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text12
  3061  00216E                     __ptext12:
  3062                           	callstack 0
  3063  00216E                     _pad:
  3064                           	callstack 17
  3065  00216E                     
  3066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3067  00216E  A057               	btfss	_flags^0,0,c
  3068  002170  EFBC  F010         	goto	u3021
  3069  002174  EFBE  F010         	goto	u3020
  3070  002178                     u3021:
  3071  002178  EFC8  F010         	goto	l3013
  3072  00217C                     u3020:
  3073  00217C                     
  3074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3075  00217C  C019  F010         	movff	pad@buf,fputs@s
  3076  002180  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3077  002184  C017  F012         	movff	pad@fp,fputs@fp
  3078  002188  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3079  00218C  ECB2  F012         	call	_fputs	;wreg free
  3080  002190                     l3013:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3083  002190  BE1C               	btfsc	(pad@p+1)^0,7,c
  3084  002192  EFCD  F010         	goto	u3031
  3085  002196  EFCF  F010         	goto	u3030
  3086  00219A                     u3031:
  3087  00219A  EFD5  F010         	goto	l3017
  3088  00219E                     u3030:
  3089  00219E  C01B  F020         	movff	pad@p,pad@w
  3090  0021A2  C01C  F021         	movff	pad@p+1,pad@w+1
  3091  0021A6  EFD9  F010         	goto	l1059
  3092  0021AA                     l3017:
  3093  0021AA  0E00               	movlw	0
  3094  0021AC  6E21               	movwf	(pad@w+1)^0,c
  3095  0021AE  0E00               	movlw	0
  3096  0021B0  6E20               	movwf	pad@w^0,c
  3097  0021B2                     l1059:
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3100  0021B2  0E00               	movlw	0
  3101  0021B4  6E1F               	movwf	(pad@i+1)^0,c
  3102  0021B6  0E00               	movlw	0
  3103  0021B8  6E1E               	movwf	pad@i^0,c
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3106  0021BA  EFEB  F010         	goto	l3023
  3107  0021BE                     l3019:
  3108                           
  3109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3110  0021BE  0E00               	movlw	0
  3111  0021C0  6E08               	movwf	(fputc@c+1)^0,c
  3112  0021C2  0E20               	movlw	32
  3113  0021C4  6E07               	movwf	fputc@c^0,c
  3114  0021C6  C017  F009         	movff	pad@fp,fputc@fp
  3115  0021CA  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  3116  0021CE  EC76  F011         	call	_fputc	;wreg free
  3117  0021D2                     
  3118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3119  0021D2  4A1E               	infsnz	pad@i^0,f,c
  3120  0021D4  2A1F               	incf	(pad@i+1)^0,f,c
  3121  0021D6                     l3023:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3124  0021D6  5020               	movf	pad@w^0,w,c
  3125  0021D8  5C1E               	subwf	pad@i^0,w,c
  3126  0021DA  501F               	movf	(pad@i+1)^0,w,c
  3127  0021DC  0A80               	xorlw	128
  3128  0021DE  6E1D               	movwf	??_pad^0,c
  3129  0021E0  5021               	movf	(pad@w+1)^0,w,c
  3130  0021E2  0A80               	xorlw	128
  3131  0021E4  581D               	subwfb	??_pad^0,w,c
  3132  0021E6  A0D8               	btfss	status,0,c
  3133  0021E8  EFF8  F010         	goto	u3041
  3134  0021EC  EFFA  F010         	goto	u3040
  3135  0021F0                     u3041:
  3136  0021F0  EFDF  F010         	goto	l3019
  3137  0021F4                     u3040:
  3138  0021F4                     
  3139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3140  0021F4  B057               	btfsc	_flags^0,0,c
  3141  0021F6  EFFF  F010         	goto	u3051
  3142  0021FA  EF01  F011         	goto	u3050
  3143  0021FE                     u3051:
  3144  0021FE  EF0B  F011         	goto	l3027
  3145  002202                     u3050:
  3146  002202                     
  3147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3148  002202  C019  F010         	movff	pad@buf,fputs@s
  3149  002206  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3150  00220A  C017  F012         	movff	pad@fp,fputs@fp
  3151  00220E  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3152  002212  ECB2  F012         	call	_fputs	;wreg free
  3153  002216                     l3027:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3156  002216  C019  F005         	movff	pad@buf,strlen@s
  3157  00221A  C01A  F006         	movff	pad@buf+1,strlen@s+1
  3158  00221E  ECA2  F013         	call	_strlen	;wreg free
  3159  002222  5020               	movf	pad@w^0,w,c
  3160  002224  2405               	addwf	?_strlen^0,w,c
  3161  002226  6E17               	movwf	?_pad^0,c
  3162  002228  5021               	movf	(pad@w+1)^0,w,c
  3163  00222A  2006               	addwfc	(?_strlen+1)^0,w,c
  3164  00222C  6E18               	movwf	(?_pad+1)^0,c
  3165  00222E  0012               	return		;funcret
  3166  002230                     __end_of_pad:
  3167                           	callstack 0
  3168                           
  3169 ;; *************** function _strlen *****************
  3170 ;; Defined at:
  3171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3174 ;;		 -> dbuf(32), 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  a               2    6[COMRAM] PTR const unsigned char 
  3177 ;;		 -> dbuf(32), 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  2    4[COMRAM] unsigned int 
  3180 ;; Registers used:
  3181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;Total ram usage:        4 bytes
  3192 ;; Hardware stack levels used: 1
  3193 ;; Hardware stack levels required when called: 4
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_pad
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text13
  3202  002744                     __ptext13:
  3203                           	callstack 0
  3204  002744                     _strlen:
  3205                           	callstack 20
  3206  002744  C005  F007         	movff	strlen@s,strlen@a
  3207  002748  C006  F008         	movff	strlen@s+1,strlen@a+1
  3208  00274C  EFAA  F013         	goto	l2913
  3209  002750                     l2911:
  3210  002750  4A05               	infsnz	strlen@s^0,f,c
  3211  002752  2A06               	incf	(strlen@s+1)^0,f,c
  3212  002754                     l2913:
  3213  002754  C005  FFD9         	movff	strlen@s,fsr2l
  3214  002758  C006  FFDA         	movff	strlen@s+1,fsr2h
  3215  00275C  50DF               	movf	indf2,w,c
  3216  00275E  A4D8               	btfss	status,2,c
  3217  002760  EFB4  F013         	goto	u2861
  3218  002764  EFB6  F013         	goto	u2860
  3219  002768                     u2861:
  3220  002768  EFA8  F013         	goto	l2911
  3221  00276C                     u2860:
  3222  00276C  5007               	movf	strlen@a^0,w,c
  3223  00276E  5C05               	subwf	strlen@s^0,w,c
  3224  002770  6E05               	movwf	?_strlen^0,c
  3225  002772  5008               	movf	(strlen@a+1)^0,w,c
  3226  002774  5806               	subwfb	(strlen@s+1)^0,w,c
  3227  002776  6E06               	movwf	(?_strlen+1)^0,c
  3228  002778  0012               	return		;funcret
  3229  00277A                     __end_of_strlen:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function _fputs *****************
  3233 ;; Defined at:
  3234 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  s               2   15[COMRAM] PTR const unsigned char 
  3237 ;;		 -> dbuf(32), 
  3238 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3239 ;;		 -> NULL(0), 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  i               2   20[COMRAM] int 
  3242 ;;  c               1   19[COMRAM] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2   15[COMRAM] int 
  3245 ;; Registers used:
  3246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3252 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;Total ram usage:        7 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 7
  3259 ;; This function calls:
  3260 ;;		_fputc
  3261 ;; This function is called by:
  3262 ;;		_pad
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text14
  3267  002564                     __ptext14:
  3268                           	callstack 0
  3269  002564                     _fputs:
  3270                           	callstack 17
  3271  002564  0E00               	movlw	0
  3272  002566  6E16               	movwf	(fputs@i+1)^0,c
  3273  002568  0E00               	movlw	0
  3274  00256A  6E15               	movwf	fputs@i^0,c
  3275  00256C  EFC3  F012         	goto	l2907
  3276  002570                     l2903:
  3277  002570  C014  F007         	movff	fputs@c,fputc@c
  3278  002574  6A08               	clrf	(fputc@c+1)^0,c
  3279  002576  C012  F009         	movff	fputs@fp,fputc@fp
  3280  00257A  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  3281  00257E  EC76  F011         	call	_fputc	;wreg free
  3282  002582  4A15               	infsnz	fputs@i^0,f,c
  3283  002584  2A16               	incf	(fputs@i+1)^0,f,c
  3284  002586                     l2907:
  3285  002586  5015               	movf	fputs@i^0,w,c
  3286  002588  2410               	addwf	fputs@s^0,w,c
  3287  00258A  6ED9               	movwf	fsr2l,c
  3288  00258C  5016               	movf	(fputs@i+1)^0,w,c
  3289  00258E  2011               	addwfc	(fputs@s+1)^0,w,c
  3290  002590  6EDA               	movwf	fsr2h,c
  3291  002592  50DF               	movf	indf2,w,c
  3292  002594  6E14               	movwf	fputs@c^0,c
  3293  002596  5014               	movf	fputs@c^0,w,c
  3294  002598  A4D8               	btfss	status,2,c
  3295  00259A  EFD1  F012         	goto	u2851
  3296  00259E  EFD3  F012         	goto	u2850
  3297  0025A2                     u2851:
  3298  0025A2  EFB8  F012         	goto	l2903
  3299  0025A6                     u2850:
  3300  0025A6  0012               	return		;funcret
  3301  0025A8                     __end_of_fputs:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _abs *****************
  3305 ;; Defined at:
  3306 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  a               2   22[COMRAM] int 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  2   22[COMRAM] int 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;Total ram usage:        4 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 4
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_dtoa
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text15
  3335  0025EA                     __ptext15:
  3336                           	callstack 0
  3337  0025EA                     _abs:
  3338                           	callstack 21
  3339  0025EA  BE18               	btfsc	(abs@a+1)^0,7,c
  3340  0025EC  EF02  F013         	goto	u3060
  3341  0025F0  5018               	movf	(abs@a+1)^0,w,c
  3342  0025F2  E106               	bnz	u3061
  3343  0025F4  0417               	decf	abs@a^0,w,c
  3344  0025F6  B0D8               	btfsc	status,0,c
  3345  0025F8  EF00  F013         	goto	u3061
  3346  0025FC  EF02  F013         	goto	u3060
  3347  002600                     u3061:
  3348  002600  EF10  F013         	goto	l1180
  3349  002604                     u3060:
  3350  002604  C017  F019         	movff	abs@a,??_abs
  3351  002608  C018  F01A         	movff	abs@a+1,??_abs+1
  3352  00260C  1E19               	comf	??_abs^0,f,c
  3353  00260E  1E1A               	comf	(??_abs+1)^0,f,c
  3354  002610  4A19               	infsnz	??_abs^0,f,c
  3355  002612  2A1A               	incf	(??_abs+1)^0,f,c
  3356  002614  C019  F017         	movff	??_abs,?_abs
  3357  002618  C01A  F018         	movff	??_abs+1,?_abs+1
  3358  00261C  EF14  F013         	goto	l1183
  3359  002620                     l1180:
  3360  002620  C017  F017         	movff	abs@a,?_abs
  3361  002624  C018  F018         	movff	abs@a+1,?_abs+1
  3362  002628                     l1183:
  3363  002628  0012               	return		;funcret
  3364  00262A                     __end_of_abs:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function ___aomod *****************
  3368 ;; Defined at:
  3369 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  dividend        8    4[COMRAM] long long 
  3372 ;;  divisor         8   12[COMRAM] long long 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  sign            1   21[COMRAM] unsigned char 
  3375 ;;  counter         1   20[COMRAM] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  8    4[COMRAM] long long 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3385 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;Total ram usage:       18 bytes
  3390 ;; Hardware stack levels used: 1
  3391 ;; Hardware stack levels required when called: 4
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_dtoa
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text16
  3400  001E3C                     __ptext16:
  3401                           	callstack 0
  3402  001E3C                     ___aomod:
  3403                           	callstack 21
  3404  001E3C  0E00               	movlw	0
  3405  001E3E  6E16               	movwf	___aomod@sign^0,c
  3406  001E40  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  3407  001E42  EF27  F00F         	goto	u2960
  3408  001E46  EF25  F00F         	goto	u2961
  3409  001E4A                     u2961:
  3410  001E4A  EF39  F00F         	goto	l2981
  3411  001E4E                     u2960:
  3412  001E4E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3413  001E50  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3414  001E52  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3415  001E54  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3416  001E56  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3417  001E58  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3418  001E5A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3419  001E5C  6C05               	negf	___aomod@dividend^0,c
  3420  001E5E  0E00               	movlw	0
  3421  001E60  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3422  001E62  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3423  001E64  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3424  001E66  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3425  001E68  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3426  001E6A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3427  001E6C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3428  001E6E  0E01               	movlw	1
  3429  001E70  6E16               	movwf	___aomod@sign^0,c
  3430  001E72                     l2981:
  3431  001E72  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  3432  001E74  EF40  F00F         	goto	u2970
  3433  001E78  EF3E  F00F         	goto	u2971
  3434  001E7C                     u2971:
  3435  001E7C  EF50  F00F         	goto	l2985
  3436  001E80                     u2970:
  3437  001E80  1E14               	comf	(___aomod@divisor+7)^0,f,c
  3438  001E82  1E13               	comf	(___aomod@divisor+6)^0,f,c
  3439  001E84  1E12               	comf	(___aomod@divisor+5)^0,f,c
  3440  001E86  1E11               	comf	(___aomod@divisor+4)^0,f,c
  3441  001E88  1E10               	comf	(___aomod@divisor+3)^0,f,c
  3442  001E8A  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  3443  001E8C  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  3444  001E8E  6C0D               	negf	___aomod@divisor^0,c
  3445  001E90  0E00               	movlw	0
  3446  001E92  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  3447  001E94  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  3448  001E96  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  3449  001E98  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  3450  001E9A  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  3451  001E9C  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  3452  001E9E  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  3453  001EA0                     l2985:
  3454  001EA0  500D               	movf	___aomod@divisor^0,w,c
  3455  001EA2  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  3456  001EA4  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  3457  001EA6  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  3458  001EA8  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  3459  001EAA  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  3460  001EAC  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  3461  001EAE  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  3462  001EB0  B4D8               	btfsc	status,2,c
  3463  001EB2  EF5D  F00F         	goto	u2981
  3464  001EB6  EF5F  F00F         	goto	u2980
  3465  001EBA                     u2981:
  3466  001EBA  EFA7  F00F         	goto	l3001
  3467  001EBE                     u2980:
  3468  001EBE  0E01               	movlw	1
  3469  001EC0  6E15               	movwf	___aomod@counter^0,c
  3470  001EC2  EF6D  F00F         	goto	l2991
  3471  001EC6                     l2989:
  3472  001EC6  90D8               	bcf	status,0,c
  3473  001EC8  360D               	rlcf	___aomod@divisor^0,f,c
  3474  001ECA  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  3475  001ECC  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  3476  001ECE  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  3477  001ED0  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  3478  001ED2  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  3479  001ED4  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  3480  001ED6  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  3481  001ED8  2A15               	incf	___aomod@counter^0,f,c
  3482  001EDA                     l2991:
  3483  001EDA  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  3484  001EDC  EF72  F00F         	goto	u2991
  3485  001EE0  EF74  F00F         	goto	u2990
  3486  001EE4                     u2991:
  3487  001EE4  EF63  F00F         	goto	l2989
  3488  001EE8                     u2990:
  3489  001EE8                     l2993:
  3490  001EE8  500D               	movf	___aomod@divisor^0,w,c
  3491  001EEA  5C05               	subwf	___aomod@dividend^0,w,c
  3492  001EEC  500E               	movf	(___aomod@divisor+1)^0,w,c
  3493  001EEE  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  3494  001EF0  500F               	movf	(___aomod@divisor+2)^0,w,c
  3495  001EF2  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  3496  001EF4  5010               	movf	(___aomod@divisor+3)^0,w,c
  3497  001EF6  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  3498  001EF8  5011               	movf	(___aomod@divisor+4)^0,w,c
  3499  001EFA  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  3500  001EFC  5012               	movf	(___aomod@divisor+5)^0,w,c
  3501  001EFE  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  3502  001F00  5013               	movf	(___aomod@divisor+6)^0,w,c
  3503  001F02  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  3504  001F04  5014               	movf	(___aomod@divisor+7)^0,w,c
  3505  001F06  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  3506  001F08  A0D8               	btfss	status,0,c
  3507  001F0A  EF89  F00F         	goto	u3001
  3508  001F0E  EF8B  F00F         	goto	u3000
  3509  001F12                     u3001:
  3510  001F12  EF9B  F00F         	goto	l2997
  3511  001F16                     u3000:
  3512  001F16  500D               	movf	___aomod@divisor^0,w,c
  3513  001F18  5E05               	subwf	___aomod@dividend^0,f,c
  3514  001F1A  500E               	movf	(___aomod@divisor+1)^0,w,c
  3515  001F1C  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  3516  001F1E  500F               	movf	(___aomod@divisor+2)^0,w,c
  3517  001F20  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  3518  001F22  5010               	movf	(___aomod@divisor+3)^0,w,c
  3519  001F24  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  3520  001F26  5011               	movf	(___aomod@divisor+4)^0,w,c
  3521  001F28  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  3522  001F2A  5012               	movf	(___aomod@divisor+5)^0,w,c
  3523  001F2C  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  3524  001F2E  5013               	movf	(___aomod@divisor+6)^0,w,c
  3525  001F30  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  3526  001F32  5014               	movf	(___aomod@divisor+7)^0,w,c
  3527  001F34  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  3528  001F36                     l2997:
  3529  001F36  90D8               	bcf	status,0,c
  3530  001F38  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  3531  001F3A  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  3532  001F3C  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  3533  001F3E  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  3534  001F40  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  3535  001F42  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  3536  001F44  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  3537  001F46  320D               	rrcf	___aomod@divisor^0,f,c
  3538  001F48  2E15               	decfsz	___aomod@counter^0,f,c
  3539  001F4A  EF74  F00F         	goto	l2993
  3540  001F4E                     l3001:
  3541  001F4E  5016               	movf	___aomod@sign^0,w,c
  3542  001F50  B4D8               	btfsc	status,2,c
  3543  001F52  EFAD  F00F         	goto	u3011
  3544  001F56  EFAF  F00F         	goto	u3010
  3545  001F5A                     u3011:
  3546  001F5A  EFBF  F00F         	goto	l3005
  3547  001F5E                     u3010:
  3548  001F5E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  3549  001F60  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  3550  001F62  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  3551  001F64  1E09               	comf	(___aomod@dividend+4)^0,f,c
  3552  001F66  1E08               	comf	(___aomod@dividend+3)^0,f,c
  3553  001F68  1E07               	comf	(___aomod@dividend+2)^0,f,c
  3554  001F6A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  3555  001F6C  6C05               	negf	___aomod@dividend^0,c
  3556  001F6E  0E00               	movlw	0
  3557  001F70  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  3558  001F72  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  3559  001F74  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  3560  001F76  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  3561  001F78  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  3562  001F7A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  3563  001F7C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  3564  001F7E                     l3005:
  3565  001F7E  C005  F005         	movff	___aomod@dividend,?___aomod
  3566  001F82  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  3567  001F86  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  3568  001F8A  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  3569  001F8E  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  3570  001F92  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  3571  001F96  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  3572  001F9A  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  3573  001F9E  0012               	return		;funcret
  3574  001FA0                     __end_of___aomod:
  3575                           	callstack 0
  3576                           
  3577 ;; *************** function ___aodiv *****************
  3578 ;; Defined at:
  3579 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  dividend        8    4[COMRAM] long long 
  3582 ;;  divisor         8   12[COMRAM] long long 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  quotient        8   22[COMRAM] long long 
  3585 ;;  sign            1   21[COMRAM] unsigned char 
  3586 ;;  counter         1   20[COMRAM] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  8    4[COMRAM] long long 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3596 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;Total ram usage:       26 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 4
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_dtoa
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text17
  3611  001CB4                     __ptext17:
  3612                           	callstack 0
  3613  001CB4                     ___aodiv:
  3614                           	callstack 21
  3615  001CB4  0E00               	movlw	0
  3616  001CB6  6E16               	movwf	___aodiv@sign^0,c
  3617  001CB8  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  3618  001CBA  EF63  F00E         	goto	u2890
  3619  001CBE  EF61  F00E         	goto	u2891
  3620  001CC2                     u2891:
  3621  001CC2  EF75  F00E         	goto	l2937
  3622  001CC6                     u2890:
  3623  001CC6  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  3624  001CC8  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  3625  001CCA  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  3626  001CCC  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  3627  001CCE  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  3628  001CD0  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  3629  001CD2  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  3630  001CD4  6C0D               	negf	___aodiv@divisor^0,c
  3631  001CD6  0E00               	movlw	0
  3632  001CD8  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  3633  001CDA  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  3634  001CDC  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  3635  001CDE  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  3636  001CE0  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  3637  001CE2  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  3638  001CE4  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  3639  001CE6  0E01               	movlw	1
  3640  001CE8  6E16               	movwf	___aodiv@sign^0,c
  3641  001CEA                     l2937:
  3642  001CEA  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  3643  001CEC  EF7C  F00E         	goto	u2900
  3644  001CF0  EF7A  F00E         	goto	u2901
  3645  001CF4                     u2901:
  3646  001CF4  EF8E  F00E         	goto	l2943
  3647  001CF8                     u2900:
  3648  001CF8  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  3649  001CFA  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  3650  001CFC  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  3651  001CFE  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  3652  001D00  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  3653  001D02  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  3654  001D04  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  3655  001D06  6C05               	negf	___aodiv@dividend^0,c
  3656  001D08  0E00               	movlw	0
  3657  001D0A  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  3658  001D0C  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  3659  001D0E  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  3660  001D10  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  3661  001D12  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  3662  001D14  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  3663  001D16  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  3664  001D18  0E01               	movlw	1
  3665  001D1A  1A16               	xorwf	___aodiv@sign^0,f,c
  3666  001D1C                     l2943:
  3667  001D1C  EE20  F017         	lfsr	2,___aodiv@quotient
  3668  001D20  0E07               	movlw	7
  3669  001D22                     u2911:
  3670  001D22  6ADE               	clrf	postinc2,c
  3671  001D24  06E8               	decf	wreg,f,c
  3672  001D26  E2FD               	bc	u2911
  3673  001D28  500D               	movf	___aodiv@divisor^0,w,c
  3674  001D2A  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  3675  001D2C  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  3676  001D2E  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  3677  001D30  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  3678  001D32  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  3679  001D34  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  3680  001D36  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  3681  001D38  B4D8               	btfsc	status,2,c
  3682  001D3A  EFA1  F00E         	goto	u2921
  3683  001D3E  EFA3  F00E         	goto	u2920
  3684  001D42                     u2921:
  3685  001D42  EFF5  F00E         	goto	l2965
  3686  001D46                     u2920:
  3687  001D46  0E01               	movlw	1
  3688  001D48  6E15               	movwf	___aodiv@counter^0,c
  3689  001D4A  EFB1  F00E         	goto	l2951
  3690  001D4E                     l2949:
  3691  001D4E  90D8               	bcf	status,0,c
  3692  001D50  360D               	rlcf	___aodiv@divisor^0,f,c
  3693  001D52  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  3694  001D54  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  3695  001D56  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  3696  001D58  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  3697  001D5A  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  3698  001D5C  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  3699  001D5E  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  3700  001D60  2A15               	incf	___aodiv@counter^0,f,c
  3701  001D62                     l2951:
  3702  001D62  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  3703  001D64  EFB6  F00E         	goto	u2931
  3704  001D68  EFB8  F00E         	goto	u2930
  3705  001D6C                     u2931:
  3706  001D6C  EFA7  F00E         	goto	l2949
  3707  001D70                     u2930:
  3708  001D70                     l2953:
  3709  001D70  90D8               	bcf	status,0,c
  3710  001D72  3617               	rlcf	___aodiv@quotient^0,f,c
  3711  001D74  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  3712  001D76  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  3713  001D78  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  3714  001D7A  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  3715  001D7C  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  3716  001D7E  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  3717  001D80  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  3718  001D82  500D               	movf	___aodiv@divisor^0,w,c
  3719  001D84  5C05               	subwf	___aodiv@dividend^0,w,c
  3720  001D86  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3721  001D88  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  3722  001D8A  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3723  001D8C  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  3724  001D8E  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3725  001D90  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  3726  001D92  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3727  001D94  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  3728  001D96  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3729  001D98  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  3730  001D9A  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3731  001D9C  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  3732  001D9E  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3733  001DA0  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  3734  001DA2  A0D8               	btfss	status,0,c
  3735  001DA4  EFD6  F00E         	goto	u2941
  3736  001DA8  EFD8  F00E         	goto	u2940
  3737  001DAC                     u2941:
  3738  001DAC  EFE9  F00E         	goto	l2961
  3739  001DB0                     u2940:
  3740  001DB0  500D               	movf	___aodiv@divisor^0,w,c
  3741  001DB2  5E05               	subwf	___aodiv@dividend^0,f,c
  3742  001DB4  500E               	movf	(___aodiv@divisor+1)^0,w,c
  3743  001DB6  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  3744  001DB8  500F               	movf	(___aodiv@divisor+2)^0,w,c
  3745  001DBA  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  3746  001DBC  5010               	movf	(___aodiv@divisor+3)^0,w,c
  3747  001DBE  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  3748  001DC0  5011               	movf	(___aodiv@divisor+4)^0,w,c
  3749  001DC2  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  3750  001DC4  5012               	movf	(___aodiv@divisor+5)^0,w,c
  3751  001DC6  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  3752  001DC8  5013               	movf	(___aodiv@divisor+6)^0,w,c
  3753  001DCA  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  3754  001DCC  5014               	movf	(___aodiv@divisor+7)^0,w,c
  3755  001DCE  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  3756  001DD0  8017               	bsf	___aodiv@quotient^0,0,c
  3757  001DD2                     l2961:
  3758  001DD2  90D8               	bcf	status,0,c
  3759  001DD4  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  3760  001DD6  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  3761  001DD8  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  3762  001DDA  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  3763  001DDC  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  3764  001DDE  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  3765  001DE0  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  3766  001DE2  320D               	rrcf	___aodiv@divisor^0,f,c
  3767  001DE4  2E15               	decfsz	___aodiv@counter^0,f,c
  3768  001DE6  EFB8  F00E         	goto	l2953
  3769  001DEA                     l2965:
  3770  001DEA  5016               	movf	___aodiv@sign^0,w,c
  3771  001DEC  B4D8               	btfsc	status,2,c
  3772  001DEE  EFFB  F00E         	goto	u2951
  3773  001DF2  EFFD  F00E         	goto	u2950
  3774  001DF6                     u2951:
  3775  001DF6  EF0D  F00F         	goto	l2969
  3776  001DFA                     u2950:
  3777  001DFA  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  3778  001DFC  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  3779  001DFE  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  3780  001E00  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  3781  001E02  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  3782  001E04  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  3783  001E06  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  3784  001E08  6C17               	negf	___aodiv@quotient^0,c
  3785  001E0A  0E00               	movlw	0
  3786  001E0C  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  3787  001E0E  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  3788  001E10  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  3789  001E12  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  3790  001E14  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  3791  001E16  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  3792  001E18  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  3793  001E1A                     l2969:
  3794  001E1A  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3795  001E1E  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3796  001E22  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3797  001E26  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3798  001E2A  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3799  001E2E  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3800  001E32  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3801  001E36  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3802  001E3A  0012               	return		;funcret
  3803  001E3C                     __end_of___aodiv:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _ctoa *****************
  3807 ;; Defined at:
  3808 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3811 ;;		 -> NULL(0), 
  3812 ;;  c               1   17[COMRAM] unsigned char 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  w               2   21[COMRAM] int 
  3815 ;;  l               2   19[COMRAM] int 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2   15[COMRAM] int 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3825 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;Total ram usage:        8 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 7
  3832 ;; This function calls:
  3833 ;;		_fputc
  3834 ;; This function is called by:
  3835 ;;		_vfpfcnvrt
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text18
  3840  002098                     __ptext18:
  3841                           	callstack 0
  3842  002098                     _ctoa:
  3843                           	callstack 19
  3844  002098                     
  3845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3846  002098  0100               	movlb	0	; () banked
  3847  00209A  51A2               	movf	_width& (0+255),w,b
  3848  00209C  11A3               	iorwf	(_width+1)& (0+255),w,b
  3849  00209E  A4D8               	btfss	status,2,c
  3850  0020A0  EF54  F010         	goto	u3181
  3851  0020A4  EF56  F010         	goto	u3180
  3852  0020A8                     u3181:
  3853  0020A8  EF5C  F010         	goto	l3073
  3854  0020AC                     u3180:
  3855  0020AC                     
  3856                           ; BSR set to: 0
  3857  0020AC  C0A2  F016         	movff	_width,ctoa@w
  3858  0020B0  C0A3  F017         	movff	_width+1,ctoa@w+1
  3859  0020B4  EF62  F010         	goto	l3075
  3860  0020B8                     l3073:
  3861                           
  3862                           ; BSR set to: 0
  3863  0020B8  0EFF               	movlw	255
  3864  0020BA  25A2               	addwf	_width& (0+255),w,b
  3865  0020BC  6E16               	movwf	ctoa@w^0,c
  3866  0020BE  0EFF               	movlw	255
  3867  0020C0  21A3               	addwfc	(_width+1)& (0+255),w,b
  3868  0020C2  6E17               	movwf	(ctoa@w+1)^0,c
  3869  0020C4                     l3075:
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3873  0020C4  A057               	btfss	_flags^0,0,c
  3874  0020C6  EF67  F010         	goto	u3191
  3875  0020CA  EF69  F010         	goto	u3190
  3876  0020CE                     u3191:
  3877  0020CE  EF72  F010         	goto	l3079
  3878  0020D2                     u3190:
  3879  0020D2                     
  3880                           ; BSR set to: 0
  3881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3882  0020D2  C012  F007         	movff	ctoa@c,fputc@c
  3883  0020D6  6A08               	clrf	(fputc@c+1)^0,c
  3884  0020D8  C010  F009         	movff	ctoa@fp,fputc@fp
  3885  0020DC  C011  F00A         	movff	ctoa@fp+1,fputc@fp+1
  3886  0020E0  EC76  F011         	call	_fputc	;wreg free
  3887  0020E4                     l3079:
  3888                           
  3889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3890  0020E4  BE17               	btfsc	(ctoa@w+1)^0,7,c
  3891  0020E6  EF77  F010         	goto	u3201
  3892  0020EA  EF79  F010         	goto	u3200
  3893  0020EE                     u3201:
  3894  0020EE  EF7B  F010         	goto	l3083
  3895  0020F2                     u3200:
  3896  0020F2  EF7F  F010         	goto	l1075
  3897  0020F6                     l3083:
  3898  0020F6  0E00               	movlw	0
  3899  0020F8  6E17               	movwf	(ctoa@w+1)^0,c
  3900  0020FA  0E00               	movlw	0
  3901  0020FC  6E16               	movwf	ctoa@w^0,c
  3902  0020FE                     l1075:
  3903                           
  3904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3905  0020FE  0E00               	movlw	0
  3906  002100  6E15               	movwf	(ctoa@l+1)^0,c
  3907  002102  0E00               	movlw	0
  3908  002104  6E14               	movwf	ctoa@l^0,c
  3909                           
  3910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3911  002106  EF91  F010         	goto	l3089
  3912  00210A                     l3085:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3915  00210A  0E00               	movlw	0
  3916  00210C  6E08               	movwf	(fputc@c+1)^0,c
  3917  00210E  0E20               	movlw	32
  3918  002110  6E07               	movwf	fputc@c^0,c
  3919  002112  C010  F009         	movff	ctoa@fp,fputc@fp
  3920  002116  C011  F00A         	movff	ctoa@fp+1,fputc@fp+1
  3921  00211A  EC76  F011         	call	_fputc	;wreg free
  3922  00211E                     
  3923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3924  00211E  4A14               	infsnz	ctoa@l^0,f,c
  3925  002120  2A15               	incf	(ctoa@l+1)^0,f,c
  3926  002122                     l3089:
  3927                           
  3928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3929  002122  5016               	movf	ctoa@w^0,w,c
  3930  002124  5C14               	subwf	ctoa@l^0,w,c
  3931  002126  5015               	movf	(ctoa@l+1)^0,w,c
  3932  002128  0A80               	xorlw	128
  3933  00212A  6E13               	movwf	??_ctoa^0,c
  3934  00212C  5017               	movf	(ctoa@w+1)^0,w,c
  3935  00212E  0A80               	xorlw	128
  3936  002130  5813               	subwfb	??_ctoa^0,w,c
  3937  002132  A0D8               	btfss	status,0,c
  3938  002134  EF9E  F010         	goto	u3211
  3939  002138  EFA0  F010         	goto	u3210
  3940  00213C                     u3211:
  3941  00213C  EF85  F010         	goto	l3085
  3942  002140                     u3210:
  3943  002140                     
  3944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3945  002140  B057               	btfsc	_flags^0,0,c
  3946  002142  EFA5  F010         	goto	u3221
  3947  002146  EFA7  F010         	goto	u3220
  3948  00214A                     u3221:
  3949  00214A  EFB0  F010         	goto	l3093
  3950  00214E                     u3220:
  3951  00214E                     
  3952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3953  00214E  C012  F007         	movff	ctoa@c,fputc@c
  3954  002152  6A08               	clrf	(fputc@c+1)^0,c
  3955  002154  C010  F009         	movff	ctoa@fp,fputc@fp
  3956  002158  C011  F00A         	movff	ctoa@fp+1,fputc@fp+1
  3957  00215C  EC76  F011         	call	_fputc	;wreg free
  3958  002160                     l3093:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3961  002160  0E01               	movlw	1
  3962  002162  2414               	addwf	ctoa@l^0,w,c
  3963  002164  6E10               	movwf	?_ctoa^0,c
  3964  002166  0E00               	movlw	0
  3965  002168  2015               	addwfc	(ctoa@l+1)^0,w,c
  3966  00216A  6E11               	movwf	(?_ctoa+1)^0,c
  3967  00216C  0012               	return		;funcret
  3968  00216E                     __end_of_ctoa:
  3969                           	callstack 0
  3970                           
  3971 ;; *************** function _fputc *****************
  3972 ;; Defined at:
  3973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  c               2    6[COMRAM] int 
  3976 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  3977 ;;		 -> NULL(0), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  2    6[COMRAM] int 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;Total ram usage:        9 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 6
  3996 ;; This function calls:
  3997 ;;		_putch
  3998 ;; This function is called by:
  3999 ;;		_pad
  4000 ;;		_ctoa
  4001 ;;		_vfpfcnvrt
  4002 ;;		_fputs
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text19
  4007  0022EC                     __ptext19:
  4008                           	callstack 0
  4009  0022EC                     _fputc:
  4010                           	callstack 17
  4011  0022EC  5009               	movf	fputc@fp^0,w,c
  4012  0022EE  100A               	iorwf	(fputc@fp+1)^0,w,c
  4013  0022F0  B4D8               	btfsc	status,2,c
  4014  0022F2  EF7D  F011         	goto	u2811
  4015  0022F6  EF7F  F011         	goto	u2810
  4016  0022FA                     u2811:
  4017  0022FA  EF88  F011         	goto	l2891
  4018  0022FE                     u2810:
  4019  0022FE  5009               	movf	fputc@fp^0,w,c
  4020  002300  100A               	iorwf	(fputc@fp+1)^0,w,c
  4021  002302  A4D8               	btfss	status,2,c
  4022  002304  EF86  F011         	goto	u2821
  4023  002308  EF88  F011         	goto	u2820
  4024  00230C                     u2821:
  4025  00230C  EF8D  F011         	goto	l2893
  4026  002310                     u2820:
  4027  002310                     l2891:
  4028  002310  5007               	movf	fputc@c^0,w,c
  4029  002312  EC5B  F014         	call	_putch
  4030  002316  EFC0  F011         	goto	l1252
  4031  00231A                     l2893:
  4032  00231A  EE20 F004          	lfsr	2,4
  4033  00231E  5009               	movf	fputc@fp^0,w,c
  4034  002320  26D9               	addwf	fsr2l,f,c
  4035  002322  500A               	movf	(fputc@fp+1)^0,w,c
  4036  002324  22DA               	addwfc	fsr2h,f,c
  4037  002326  50DE               	movf	postinc2,w,c
  4038  002328  10DE               	iorwf	postinc2,w,c
  4039  00232A  B4D8               	btfsc	status,2,c
  4040  00232C  EF9A  F011         	goto	u2831
  4041  002330  EF9C  F011         	goto	u2830
  4042  002334                     u2831:
  4043  002334  EFB7  F011         	goto	l2897
  4044  002338                     u2830:
  4045  002338  EE20 F004          	lfsr	2,4
  4046  00233C  5009               	movf	fputc@fp^0,w,c
  4047  00233E  26D9               	addwf	fsr2l,f,c
  4048  002340  500A               	movf	(fputc@fp+1)^0,w,c
  4049  002342  22DA               	addwfc	fsr2h,f,c
  4050  002344  EE10 F002          	lfsr	1,2
  4051  002348  5009               	movf	fputc@fp^0,w,c
  4052  00234A  26E1               	addwf	fsr1l,f,c
  4053  00234C  500A               	movf	(fputc@fp+1)^0,w,c
  4054  00234E  22E2               	addwfc	fsr1h,f,c
  4055  002350  50DE               	movf	postinc2,w,c
  4056  002352  5CE6               	subwf	postinc1,w,c
  4057  002354  50E6               	movf	postinc1,w,c
  4058  002356  0A80               	xorlw	128
  4059  002358  6E0F               	movwf	(??_fputc+4)^0,c
  4060  00235A  50DE               	movf	postinc2,w,c
  4061  00235C  0A80               	xorlw	128
  4062  00235E  580F               	subwfb	(??_fputc+4)^0,w,c
  4063  002360  B0D8               	btfsc	status,0,c
  4064  002362  EFB5  F011         	goto	u2841
  4065  002366  EFB7  F011         	goto	u2840
  4066  00236A                     u2841:
  4067  00236A  EFC0  F011         	goto	l1252
  4068  00236E                     u2840:
  4069  00236E                     l2897:
  4070  00236E  EE20 F002          	lfsr	2,2
  4071  002372  5009               	movf	fputc@fp^0,w,c
  4072  002374  26D9               	addwf	fsr2l,f,c
  4073  002376  500A               	movf	(fputc@fp+1)^0,w,c
  4074  002378  22DA               	addwfc	fsr2h,f,c
  4075  00237A  2ADE               	incf	postinc2,f,c
  4076  00237C  0E00               	movlw	0
  4077  00237E  22DD               	addwfc	postdec2,f,c
  4078  002380                     l1252:
  4079  002380  0012               	return		;funcret
  4080  002382                     __end_of_fputc:
  4081                           	callstack 0
  4082                           
  4083 ;; *************** function _putch *****************
  4084 ;; Defined at:
  4085 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  txData          1    wreg     unsigned char 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  txData          1    5[COMRAM] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;Total ram usage:        1 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; Hardware stack levels required when called: 5
  4106 ;; This function calls:
  4107 ;;		_EUSART1_Write
  4108 ;; This function is called by:
  4109 ;;		_fputc
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text20
  4114  0028B6                     __ptext20:
  4115                           	callstack 0
  4116  0028B6                     _putch:
  4117                           	callstack 17
  4118                           
  4119                           ;incstack = 0
  4120                           ;putch@txData stored from wreg
  4121  0028B6  6E06               	movwf	putch@txData^0,c
  4122  0028B8                     
  4123                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  4124  0028B8  5006               	movf	putch@txData^0,w,c
  4125  0028BA  EC5D  F012         	call	_EUSART1_Write
  4126  0028BE  0012               	return		;funcret
  4127  0028C0                     __end_of_putch:
  4128                           	callstack 0
  4129                           
  4130 ;; *************** function _EUSART1_Write *****************
  4131 ;; Defined at:
  4132 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  txData          1    wreg     unsigned char 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  txData          1    4[COMRAM] unsigned char 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;Total ram usage:        1 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; Hardware stack levels required when called: 4
  4153 ;; This function calls:
  4154 ;;		Nothing
  4155 ;; This function is called by:
  4156 ;;		_putch
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text21
  4161  0024BA                     __ptext21:
  4162                           	callstack 0
  4163  0024BA                     _EUSART1_Write:
  4164                           	callstack 17
  4165                           
  4166                           ;incstack = 0
  4167                           ;EUSART1_Write@txData stored from wreg
  4168  0024BA  6E05               	movwf	EUSART1_Write@txData^0,c
  4169  0024BC                     l2869:
  4170                           
  4171                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  4172  0024BC  0100               	movlb	0	; () banked
  4173  0024BE  51B2               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  4174  0024C0  B4D8               	btfsc	status,2,c
  4175  0024C2  EF65  F012         	goto	u2781
  4176  0024C6  EF67  F012         	goto	u2780
  4177  0024CA                     u2781:
  4178  0024CA  EF5E  F012         	goto	l2869
  4179  0024CE                     u2780:
  4180  0024CE                     
  4181                           ; BSR set to: 0
  4182                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  4183  0024CE  B89D               	btfsc	157,4,c	;volatile
  4184  0024D0  EF6C  F012         	goto	u2791
  4185  0024D4  EF6E  F012         	goto	u2790
  4186  0024D8                     u2791:
  4187  0024D8  EF72  F012         	goto	l155
  4188  0024DC                     u2790:
  4189  0024DC                     
  4190                           ; BSR set to: 0
  4191                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  4192  0024DC  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4193                           
  4194                           ;mcc_generated_files/eusart1.c: 182:     }
  4195  0024E0  EF87  F012         	goto	l2883
  4196  0024E4                     l155:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  4200  0024E4  989D               	bcf	157,4,c	;volatile
  4201  0024E6                     
  4202                           ; BSR set to: 0
  4203                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  4204  0024E6  0E40               	movlw	low _eusart1TxBuffer
  4205  0024E8  25B4               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  4206  0024EA  6ED9               	movwf	fsr2l,c
  4207  0024EC  6ADA               	clrf	fsr2h,c
  4208  0024EE  0E01               	movlw	high _eusart1TxBuffer
  4209  0024F0  22DA               	addwfc	fsr2h,f,c
  4210  0024F2  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  4211  0024F6                     
  4212                           ; BSR set to: 0
  4213  0024F6  2BB4               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  4214  0024F8                     
  4215                           ; BSR set to: 0
  4216                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  4217  0024F8  0E3F               	movlw	63
  4218  0024FA  65B4               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  4219  0024FC  EF82  F012         	goto	u2801
  4220  002500  EF84  F012         	goto	u2800
  4221  002504                     u2801:
  4222  002504  EF86  F012         	goto	l2881
  4223  002508                     u2800:
  4224  002508                     
  4225                           ; BSR set to: 0
  4226                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  4227  002508  0E00               	movlw	0
  4228  00250A  6FB4               	movwf	_eusart1TxHead& (0+255),b	;volatile
  4229  00250C                     l2881:
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  4233  00250C  07B2               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  4234  00250E                     l2883:
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  4238  00250E  889D               	bsf	157,4,c	;volatile
  4239  002510                     
  4240                           ; BSR set to: 0
  4241  002510  0012               	return		;funcret
  4242  002512                     __end_of_EUSART1_Write:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function _atoi *****************
  4246 ;; Defined at:
  4247 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4250 ;;		 -> STR_5(25), STR_4(34), STR_3(31), STR_2(19), 
  4251 ;;		 -> STR_1(30), 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  n               2   24[COMRAM] int 
  4254 ;;  neg             2   17[COMRAM] int 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  2   11[COMRAM] int 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;Total ram usage:       15 bytes
  4269 ;; Hardware stack levels used: 1
  4270 ;; Hardware stack levels required when called: 5
  4271 ;; This function calls:
  4272 ;;		___wmul
  4273 ;;		_isdigit
  4274 ;;		_isspace
  4275 ;; This function is called by:
  4276 ;;		_vfpfcnvrt
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text22
  4281  001B1A                     __ptext22:
  4282                           	callstack 0
  4283  001B1A                     _atoi:
  4284                           	callstack 21
  4285  001B1A  0E00               	movlw	0
  4286  001B1C  6E1A               	movwf	(atoi@n+1)^0,c
  4287  001B1E  0E00               	movlw	0
  4288  001B20  6E19               	movwf	atoi@n^0,c
  4289  001B22  0E00               	movlw	0
  4290  001B24  6E13               	movwf	(atoi@neg+1)^0,c
  4291  001B26  0E00               	movlw	0
  4292  001B28  6E12               	movwf	atoi@neg^0,c
  4293  001B2A  EF99  F00D         	goto	l3229
  4294  001B2E                     l3227:
  4295  001B2E  4A0C               	infsnz	atoi@s^0,f,c
  4296  001B30  2A0D               	incf	(atoi@s+1)^0,f,c
  4297  001B32                     l3229:
  4298  001B32  0E01               	movlw	1
  4299  001B34  6E18               	movwf	_atoi$1653^0,c
  4300  001B36  C00C  FFF6         	movff	atoi@s,tblptrl
  4301  001B3A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4302  001B3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4303  001B3E  6AF8               	clrf	tblptru,c
  4304  001B40                     	endif
  4305  001B40                     	if	0	;tblptru may be non-zero
  4306  001B40                     	endif
  4307  001B40  0008               	tblrd		*
  4308  001B42  50F5               	movf	tablat,w,c
  4309  001B44  0A20               	xorlw	32
  4310  001B46  B4D8               	btfsc	status,2,c
  4311  001B48  EFA8  F00D         	goto	u3551
  4312  001B4C  EFAA  F00D         	goto	u3550
  4313  001B50                     u3551:
  4314  001B50  EFC8  F00D         	goto	l3237
  4315  001B54                     u3550:
  4316  001B54  0EF7               	movlw	247
  4317  001B56  6E0E               	movwf	??_atoi^0,c
  4318  001B58  0EFF               	movlw	255
  4319  001B5A  6E0F               	movwf	(??_atoi+1)^0,c
  4320  001B5C  C00C  FFF6         	movff	atoi@s,tblptrl
  4321  001B60  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4322  001B64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4323  001B64  6AF8               	clrf	tblptru,c
  4324  001B66                     	endif
  4325  001B66                     	if	0	;tblptru may be non-zero
  4326  001B66                     	endif
  4327  001B66  0008               	tblrd		*
  4328  001B68  50F5               	movf	tablat,w,c
  4329  001B6A  6E10               	movwf	(??_atoi+2)^0,c
  4330  001B6C  6A11               	clrf	(??_atoi+3)^0,c
  4331  001B6E  500E               	movf	??_atoi^0,w,c
  4332  001B70  2610               	addwf	(??_atoi+2)^0,f,c
  4333  001B72  500F               	movf	(??_atoi+1)^0,w,c
  4334  001B74  2211               	addwfc	(??_atoi+3)^0,f,c
  4335  001B76  5011               	movf	(??_atoi+3)^0,w,c
  4336  001B78  E109               	bnz	u3560
  4337  001B7A  0E05               	movlw	5
  4338  001B7C  5C10               	subwf	(??_atoi+2)^0,w,c
  4339  001B7E  A0D8               	btfss	status,0,c
  4340  001B80  EFC4  F00D         	goto	u3561
  4341  001B84  EFC6  F00D         	goto	u3560
  4342  001B88                     u3561:
  4343  001B88  EFC8  F00D         	goto	l3237
  4344  001B8C                     u3560:
  4345  001B8C  0E00               	movlw	0
  4346  001B8E  6E18               	movwf	_atoi$1653^0,c
  4347  001B90                     l3237:
  4348  001B90  C018  F014         	movff	_atoi$1653,_atoi$1652
  4349  001B94  6A15               	clrf	(_atoi$1652+1)^0,c
  4350  001B96  5014               	movf	_atoi$1652^0,w,c
  4351  001B98  1015               	iorwf	(_atoi$1652+1)^0,w,c
  4352  001B9A  A4D8               	btfss	status,2,c
  4353  001B9C  EFD2  F00D         	goto	u3571
  4354  001BA0  EFD4  F00D         	goto	u3570
  4355  001BA4                     u3571:
  4356  001BA4  EF97  F00D         	goto	l3227
  4357  001BA8                     u3570:
  4358  001BA8  EFDE  F00D         	goto	l3247
  4359  001BAC                     l3243:
  4360  001BAC  0E00               	movlw	0
  4361  001BAE  6E13               	movwf	(atoi@neg+1)^0,c
  4362  001BB0  0E01               	movlw	1
  4363  001BB2  6E12               	movwf	atoi@neg^0,c
  4364  001BB4                     l3245:
  4365  001BB4  4A0C               	infsnz	atoi@s^0,f,c
  4366  001BB6  2A0D               	incf	(atoi@s+1)^0,f,c
  4367  001BB8  EF15  F00E         	goto	l3253
  4368  001BBC                     l3247:
  4369  001BBC  C00C  FFF6         	movff	atoi@s,tblptrl
  4370  001BC0  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4371  001BC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4372  001BC4  6AF8               	clrf	tblptru,c
  4373  001BC6                     	endif
  4374  001BC6                     	if	0	;tblptru may be non-zero
  4375  001BC6                     	endif
  4376  001BC6  0008               	tblrd		*
  4377  001BC8  50F5               	movf	tablat,w,c
  4378  001BCA  6E0E               	movwf	??_atoi^0,c
  4379  001BCC  6A0F               	clrf	(??_atoi+1)^0,c
  4380                           
  4381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4382                           ; Switch size 1, requested type "simple"
  4383                           ; Number of cases is 1, Range of values is 0 to 0
  4384                           ; switch strategies available:
  4385                           ; Name         Instructions Cycles
  4386                           ; simple_byte            4     3 (average)
  4387                           ;	Chosen strategy is simple_byte
  4388  001BCE  500F               	movf	(??_atoi+1)^0,w,c
  4389  001BD0  0A00               	xorlw	0	; case 0
  4390  001BD2  B4D8               	btfsc	status,2,c
  4391  001BD4  EFEE  F00D         	goto	l3521
  4392  001BD8  EF15  F00E         	goto	l3253
  4393  001BDC                     l3521:
  4394                           
  4395                           ; Switch size 1, requested type "simple"
  4396                           ; Number of cases is 2, Range of values is 43 to 45
  4397                           ; switch strategies available:
  4398                           ; Name         Instructions Cycles
  4399                           ; simple_byte            7     4 (average)
  4400                           ;	Chosen strategy is simple_byte
  4401  001BDC  500E               	movf	??_atoi^0,w,c
  4402  001BDE  0A2B               	xorlw	43	; case 43
  4403  001BE0  B4D8               	btfsc	status,2,c
  4404  001BE2  EFDA  F00D         	goto	l3245
  4405  001BE6  0A06               	xorlw	6	; case 45
  4406  001BE8  B4D8               	btfsc	status,2,c
  4407  001BEA  EFD6  F00D         	goto	l3243
  4408  001BEE  EF15  F00E         	goto	l3253
  4409  001BF2                     l3249:
  4410  001BF2  C019  F005         	movff	atoi@n,___wmul@multiplier
  4411  001BF6  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  4412  001BFA  0E00               	movlw	0
  4413  001BFC  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4414  001BFE  0E0A               	movlw	10
  4415  001C00  6E07               	movwf	___wmul@multiplicand^0,c
  4416  001C02  EC25  F014         	call	___wmul	;wreg free
  4417  001C06  C00C  FFF6         	movff	atoi@s,tblptrl
  4418  001C0A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4419  001C0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4420  001C0E  6AF8               	clrf	tblptru,c
  4421  001C10                     	endif
  4422  001C10                     	if	0	;tblptru may be non-zero
  4423  001C10                     	endif
  4424  001C10  0008               	tblrd		*
  4425  001C12  50F5               	movf	tablat,w,c
  4426  001C14  5E05               	subwf	?___wmul^0,f,c
  4427  001C16  0E00               	movlw	0
  4428  001C18  5A06               	subwfb	(?___wmul+1)^0,f,c
  4429  001C1A  0E30               	movlw	48
  4430  001C1C  2405               	addwf	?___wmul^0,w,c
  4431  001C1E  6E19               	movwf	atoi@n^0,c
  4432  001C20  0E00               	movlw	0
  4433  001C22  2006               	addwfc	(?___wmul+1)^0,w,c
  4434  001C24  6E1A               	movwf	(atoi@n+1)^0,c
  4435  001C26  EFDA  F00D         	goto	l3245
  4436  001C2A                     l3253:
  4437  001C2A  0ED0               	movlw	208
  4438  001C2C  6E0E               	movwf	??_atoi^0,c
  4439  001C2E  0EFF               	movlw	255
  4440  001C30  6E0F               	movwf	(??_atoi+1)^0,c
  4441  001C32  C00C  FFF6         	movff	atoi@s,tblptrl
  4442  001C36  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4443  001C3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4444  001C3A  6AF8               	clrf	tblptru,c
  4445  001C3C                     	endif
  4446  001C3C                     	if	0	;tblptru may be non-zero
  4447  001C3C                     	endif
  4448  001C3C  0008               	tblrd		*
  4449  001C3E  50F5               	movf	tablat,w,c
  4450  001C40  6E10               	movwf	(??_atoi+2)^0,c
  4451  001C42  6A11               	clrf	(??_atoi+3)^0,c
  4452  001C44  500E               	movf	??_atoi^0,w,c
  4453  001C46  2610               	addwf	(??_atoi+2)^0,f,c
  4454  001C48  500F               	movf	(??_atoi+1)^0,w,c
  4455  001C4A  2211               	addwfc	(??_atoi+3)^0,f,c
  4456  001C4C  5011               	movf	(??_atoi+3)^0,w,c
  4457  001C4E  E10A               	bnz	u3580
  4458  001C50  0E0A               	movlw	10
  4459  001C52  5C10               	subwf	(??_atoi+2)^0,w,c
  4460  001C54  A0D8               	btfss	status,0,c
  4461  001C56  EF2F  F00E         	goto	u3581
  4462  001C5A  EF32  F00E         	goto	u3580
  4463  001C5E                     u3581:
  4464  001C5E  0E01               	movlw	1
  4465  001C60  EF33  F00E         	goto	u3590
  4466  001C64                     u3580:
  4467  001C64  0E00               	movlw	0
  4468  001C66                     u3590:
  4469  001C66  6E16               	movwf	_atoi$1654^0,c
  4470  001C68  6A17               	clrf	(_atoi$1654+1)^0,c
  4471  001C6A  5016               	movf	_atoi$1654^0,w,c
  4472  001C6C  1017               	iorwf	(_atoi$1654+1)^0,w,c
  4473  001C6E  A4D8               	btfss	status,2,c
  4474  001C70  EF3C  F00E         	goto	u3601
  4475  001C74  EF3E  F00E         	goto	u3600
  4476  001C78                     u3601:
  4477  001C78  EFF9  F00D         	goto	l3249
  4478  001C7C                     u3600:
  4479  001C7C  5012               	movf	atoi@neg^0,w,c
  4480  001C7E  1013               	iorwf	(atoi@neg+1)^0,w,c
  4481  001C80  A4D8               	btfss	status,2,c
  4482  001C82  EF45  F00E         	goto	u3611
  4483  001C86  EF47  F00E         	goto	u3610
  4484  001C8A                     u3611:
  4485  001C8A  EF55  F00E         	goto	l1211
  4486  001C8E                     u3610:
  4487  001C8E  C019  F00E         	movff	atoi@n,??_atoi
  4488  001C92  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  4489  001C96  1E0E               	comf	??_atoi^0,f,c
  4490  001C98  1E0F               	comf	(??_atoi+1)^0,f,c
  4491  001C9A  4A0E               	infsnz	??_atoi^0,f,c
  4492  001C9C  2A0F               	incf	(??_atoi+1)^0,f,c
  4493  001C9E  C00E  F00C         	movff	??_atoi,?_atoi
  4494  001CA2  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  4495  001CA6  EF59  F00E         	goto	l1214
  4496  001CAA                     l1211:
  4497  001CAA  C019  F00C         	movff	atoi@n,?_atoi
  4498  001CAE  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  4499  001CB2                     l1214:
  4500  001CB2  0012               	return		;funcret
  4501  001CB4                     __end_of_atoi:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _isspace *****************
  4505 ;; Defined at:
  4506 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  c               2    4[COMRAM] int 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  2    4[COMRAM] int 
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;Total ram usage:        7 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 4
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_atoi
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text23
  4535  002512                     __ptext23:
  4536                           	callstack 0
  4537  002512                     _isspace:
  4538                           	callstack 21
  4539  002512  0E01               	movlw	1
  4540  002514  6E0B               	movwf	_isspace$1679^0,c
  4541  002516  0E20               	movlw	32
  4542  002518  1805               	xorwf	isspace@c^0,w,c
  4543  00251A  1006               	iorwf	(isspace@c+1)^0,w,c
  4544  00251C  B4D8               	btfsc	status,2,c
  4545  00251E  EF93  F012         	goto	u3161
  4546  002522  EF95  F012         	goto	u3160
  4547  002526                     u3161:
  4548  002526  EFAE  F012         	goto	l3065
  4549  00252A                     u3160:
  4550  00252A  0EF7               	movlw	247
  4551  00252C  6E07               	movwf	??_isspace^0,c
  4552  00252E  0EFF               	movlw	255
  4553  002530  6E08               	movwf	(??_isspace+1)^0,c
  4554  002532  C005  F009         	movff	isspace@c,??_isspace+2
  4555  002536  C006  F00A         	movff	isspace@c+1,??_isspace+3
  4556  00253A  5007               	movf	??_isspace^0,w,c
  4557  00253C  2609               	addwf	(??_isspace+2)^0,f,c
  4558  00253E  5008               	movf	(??_isspace+1)^0,w,c
  4559  002540  220A               	addwfc	(??_isspace+3)^0,f,c
  4560  002542  500A               	movf	(??_isspace+3)^0,w,c
  4561  002544  E109               	bnz	u3170
  4562  002546  0E05               	movlw	5
  4563  002548  5C09               	subwf	(??_isspace+2)^0,w,c
  4564  00254A  A0D8               	btfss	status,0,c
  4565  00254C  EFAA  F012         	goto	u3171
  4566  002550  EFAC  F012         	goto	u3170
  4567  002554                     u3171:
  4568  002554  EFAE  F012         	goto	l3065
  4569  002558                     u3170:
  4570  002558  0E00               	movlw	0
  4571  00255A  6E0B               	movwf	_isspace$1679^0,c
  4572  00255C                     l3065:
  4573  00255C  C00B  F005         	movff	_isspace$1679,?_isspace
  4574  002560  6A06               	clrf	(?_isspace+1)^0,c
  4575  002562  0012               	return		;funcret
  4576  002564                     __end_of_isspace:
  4577                           	callstack 0
  4578                           
  4579 ;; *************** function _isdigit *****************
  4580 ;; Defined at:
  4581 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  c               2    4[COMRAM] int 
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;		None
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  2    4[COMRAM] int 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;Total ram usage:        6 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; Hardware stack levels required when called: 4
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_vfpfcnvrt
  4606 ;;		_atoi
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text24
  4611  0026D6                     __ptext24:
  4612                           	callstack 0
  4613  0026D6                     _isdigit:
  4614                           	callstack 22
  4615  0026D6  0ED0               	movlw	208
  4616  0026D8  6E07               	movwf	??_isdigit^0,c
  4617  0026DA  0EFF               	movlw	255
  4618  0026DC  6E08               	movwf	(??_isdigit+1)^0,c
  4619  0026DE  C005  F009         	movff	isdigit@c,??_isdigit+2
  4620  0026E2  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  4621  0026E6  5007               	movf	??_isdigit^0,w,c
  4622  0026E8  2609               	addwf	(??_isdigit+2)^0,f,c
  4623  0026EA  5008               	movf	(??_isdigit+1)^0,w,c
  4624  0026EC  220A               	addwfc	(??_isdigit+3)^0,f,c
  4625  0026EE  500A               	movf	(??_isdigit+3)^0,w,c
  4626  0026F0  E10A               	bnz	u3140
  4627  0026F2  0E0A               	movlw	10
  4628  0026F4  5C09               	subwf	(??_isdigit+2)^0,w,c
  4629  0026F6  A0D8               	btfss	status,0,c
  4630  0026F8  EF80  F013         	goto	u3141
  4631  0026FC  EF83  F013         	goto	u3140
  4632  002700                     u3141:
  4633  002700  0E01               	movlw	1
  4634  002702  EF84  F013         	goto	u3150
  4635  002706                     u3140:
  4636  002706  0E00               	movlw	0
  4637  002708                     u3150:
  4638  002708  6E05               	movwf	?_isdigit^0,c
  4639  00270A  6A06               	clrf	(?_isdigit+1)^0,c
  4640  00270C  0012               	return		;funcret
  4641  00270E                     __end_of_isdigit:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function ___wmul *****************
  4645 ;; Defined at:
  4646 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  multiplier      2    4[COMRAM] unsigned int 
  4649 ;;  multiplicand    2    6[COMRAM] unsigned int 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  product         2    8[COMRAM] unsigned int 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  2    4[COMRAM] unsigned int 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, prodl, prodh
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;Total ram usage:        6 bytes
  4666 ;; Hardware stack levels used: 1
  4667 ;; Hardware stack levels required when called: 4
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_atoi
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text25
  4676  00284A                     __ptext25:
  4677                           	callstack 0
  4678  00284A                     ___wmul:
  4679                           	callstack 21
  4680  00284A  5005               	movf	___wmul@multiplier^0,w,c
  4681  00284C  0207               	mulwf	___wmul@multiplicand^0,c
  4682  00284E  CFF3 F009          	movff	prodl,___wmul@product
  4683  002852  CFF4 F00A          	movff	prodh,___wmul@product+1
  4684  002856  5005               	movf	___wmul@multiplier^0,w,c
  4685  002858  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  4686  00285A  50F3               	movf	243,w,c
  4687  00285C  260A               	addwf	(___wmul@product+1)^0,f,c
  4688  00285E  5006               	movf	(___wmul@multiplier+1)^0,w,c
  4689  002860  0207               	mulwf	___wmul@multiplicand^0,c
  4690  002862  50F3               	movf	243,w,c
  4691  002864  260A               	addwf	(___wmul@product+1)^0,f,c
  4692  002866  C009  F005         	movff	___wmul@product,?___wmul
  4693  00286A  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  4694  00286E  0012               	return		;funcret
  4695  002870                     __end_of___wmul:
  4696                           	callstack 0
  4697                           
  4698 ;; *************** function _i2c_read_serial *****************
  4699 ;; Defined at:
  4700 ;;		line 107 in file "main.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  addr            1    wreg     unsigned char 
  4703 ;;  data_out        2    4[COMRAM] PTR unsigned char 
  4704 ;;		 -> data_out(4), 
  4705 ;;  length          1    6[COMRAM] unsigned char 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  addr            1   13[COMRAM] unsigned char 
  4708 ;;  i               1   15[COMRAM] unsigned char 
  4709 ;;  targetAddr      1   14[COMRAM] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4719 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;Total ram usage:       12 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 4
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_getReadingTC74
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text26
  4734  001FA0                     __ptext26:
  4735                           	callstack 0
  4736  001FA0                     _i2c_read_serial:
  4737                           	callstack 25
  4738                           
  4739                           ;incstack = 0
  4740                           ;i2c_read_serial@addr stored from wreg
  4741  001FA0  6E0E               	movwf	i2c_read_serial@addr^0,c
  4742  001FA2                     
  4743                           ;main.c: 108:     uint8_t targetAddr = (addr<<1)+1;
  4744  001FA2  500E               	movf	i2c_read_serial@addr^0,w,c
  4745  001FA4  0D02               	mullw	2
  4746  001FA6  28F3               	incf	243,w,c
  4747  001FA8  6E0F               	movwf	i2c_read_serial@targetAddr^0,c
  4748  001FAA                     l316:
  4749  001FAA  B4C7               	btfsc	199,2,c	;volatile
  4750  001FAC  EFDA  F00F         	goto	u2401
  4751  001FB0  EFDC  F00F         	goto	u2400
  4752  001FB4                     u2401:
  4753  001FB4  EFD5  F00F         	goto	l316
  4754  001FB8                     u2400:
  4755  001FB8  CFC5 F008          	movff	4037,??_i2c_read_serial	;volatile
  4756  001FBC  0E1F               	movlw	31
  4757  001FBE  1608               	andwf	??_i2c_read_serial^0,f,c
  4758  001FC0  A4D8               	btfss	status,2,c
  4759  001FC2  EFE5  F00F         	goto	u2411
  4760  001FC6  EFE7  F00F         	goto	u2410
  4761  001FCA                     u2411:
  4762  001FCA  EFD5  F00F         	goto	l316
  4763  001FCE                     u2410:
  4764  001FCE                     
  4765                           ;main.c: 121:     SSP1CON2bits.SEN = 1;
  4766  001FCE  80C5               	bsf	197,0,c	;volatile
  4767  001FD0                     l319:
  4768  001FD0  B0C5               	btfsc	197,0,c	;volatile
  4769  001FD2  EFED  F00F         	goto	u2421
  4770  001FD6  EFEF  F00F         	goto	u2420
  4771  001FDA                     u2421:
  4772  001FDA  EFE8  F00F         	goto	l319
  4773  001FDE                     u2420:
  4774  001FDE                     
  4775                           ;main.c: 127:     SSP1BUF = targetAddr;
  4776  001FDE  C00F  FFC9         	movff	i2c_read_serial@targetAddr,4041	;volatile
  4777  001FE2                     l322:
  4778  001FE2  B4C7               	btfsc	199,2,c	;volatile
  4779  001FE4  EFF6  F00F         	goto	u2431
  4780  001FE8  EFF8  F00F         	goto	u2430
  4781  001FEC                     u2431:
  4782  001FEC  EFF1  F00F         	goto	l322
  4783  001FF0                     u2430:
  4784  001FF0                     
  4785                           ;main.c: 133:     if(SSP1CON2bits.ACKSTAT == 0) {
  4786  001FF0  BCC5               	btfsc	197,6,c	;volatile
  4787  001FF2  EFFD  F00F         	goto	u2441
  4788  001FF6  EFFF  F00F         	goto	u2440
  4789  001FFA                     u2441:
  4790  001FFA  EF4B  F010         	goto	l341
  4791  001FFE                     u2440:
  4792  001FFE                     
  4793                           ;main.c: 138:         for (uint8_t i=0; i < length ; i++) {
  4794  001FFE  0E00               	movlw	0
  4795  002000  6E10               	movwf	i2c_read_serial@i^0,c
  4796  002002  EF3A  F010         	goto	l2667
  4797  002006                     l327:
  4798                           
  4799                           ;main.c: 139:             SSP1CON2bits.RCEN = 1;
  4800  002006  86C5               	bsf	197,3,c	;volatile
  4801  002008                     l328:
  4802  002008  B6C5               	btfsc	197,3,c	;volatile
  4803  00200A  EF09  F010         	goto	u2451
  4804  00200E  EF0B  F010         	goto	u2450
  4805  002012                     u2451:
  4806  002012  EF04  F010         	goto	l328
  4807  002016                     u2450:
  4808  002016                     
  4809                           ;main.c: 142:             data_out[i] = SSP1BUF;
  4810  002016  5010               	movf	i2c_read_serial@i^0,w,c
  4811  002018  2405               	addwf	i2c_read_serial@data_out^0,w,c
  4812  00201A  6ED9               	movwf	fsr2l,c
  4813  00201C  0E00               	movlw	0
  4814  00201E  2006               	addwfc	(i2c_read_serial@data_out+1)^0,w,c
  4815  002020  6EDA               	movwf	fsr2h,c
  4816  002022  CFC9 FFDF          	movff	4041,indf2	;volatile
  4817  002026                     
  4818                           ;main.c: 146:             if( i != length -1)
  4819  002026  5010               	movf	i2c_read_serial@i^0,w,c
  4820  002028  6E08               	movwf	??_i2c_read_serial^0,c
  4821  00202A  6A09               	clrf	(??_i2c_read_serial+1)^0,c
  4822  00202C  0EFF               	movlw	255
  4823  00202E  6E0A               	movwf	(??_i2c_read_serial+2)^0,c
  4824  002030  0EFF               	movlw	255
  4825  002032  6E0B               	movwf	(??_i2c_read_serial+3)^0,c
  4826  002034  5007               	movf	i2c_read_serial@length^0,w,c
  4827  002036  6E0C               	movwf	(??_i2c_read_serial+4)^0,c
  4828  002038  6A0D               	clrf	(??_i2c_read_serial+5)^0,c
  4829  00203A  500A               	movf	(??_i2c_read_serial+2)^0,w,c
  4830  00203C  260C               	addwf	(??_i2c_read_serial+4)^0,f,c
  4831  00203E  500B               	movf	(??_i2c_read_serial+3)^0,w,c
  4832  002040  220D               	addwfc	(??_i2c_read_serial+5)^0,f,c
  4833  002042  5008               	movf	??_i2c_read_serial^0,w,c
  4834  002044  180C               	xorwf	(??_i2c_read_serial+4)^0,w,c
  4835  002046  E109               	bnz	u2460
  4836  002048  5009               	movf	(??_i2c_read_serial+1)^0,w,c
  4837  00204A  180D               	xorwf	(??_i2c_read_serial+5)^0,w,c
  4838  00204C  B4D8               	btfsc	status,2,c
  4839  00204E  EF2B  F010         	goto	u2461
  4840  002052  EF2D  F010         	goto	u2460
  4841  002056                     u2461:
  4842  002056  EF30  F010         	goto	l331
  4843  00205A                     u2460:
  4844  00205A                     
  4845                           ;main.c: 147:                 SSP1CON2bits.ACKDT = 0;
  4846  00205A  9AC5               	bcf	197,5,c	;volatile
  4847  00205C  EF31  F010         	goto	l332
  4848  002060                     l331:
  4849                           
  4850                           ;main.c: 149:                 SSP1CON2bits.ACKDT = 1;
  4851  002060  8AC5               	bsf	197,5,c	;volatile
  4852  002062                     l332:
  4853                           
  4854                           ;main.c: 151:             SSP1CON2bits.ACKEN = 1;
  4855  002062  88C5               	bsf	197,4,c	;volatile
  4856  002064                     l333:
  4857  002064  B8C5               	btfsc	197,4,c	;volatile
  4858  002066  EF37  F010         	goto	u2471
  4859  00206A  EF39  F010         	goto	u2470
  4860  00206E                     u2471:
  4861  00206E  EF32  F010         	goto	l333
  4862  002072                     u2470:
  4863  002072                     
  4864                           ;main.c: 157:         }
  4865  002072  2A10               	incf	i2c_read_serial@i^0,f,c
  4866  002074                     l2667:
  4867  002074  5007               	movf	i2c_read_serial@length^0,w,c
  4868  002076  5C10               	subwf	i2c_read_serial@i^0,w,c
  4869  002078  A0D8               	btfss	status,0,c
  4870  00207A  EF41  F010         	goto	u2481
  4871  00207E  EF43  F010         	goto	u2480
  4872  002082                     u2481:
  4873  002082  EF03  F010         	goto	l327
  4874  002086                     u2480:
  4875  002086                     
  4876                           ;main.c: 165:         SSP1CON2bits.PEN = 1;
  4877  002086  84C5               	bsf	197,2,c	;volatile
  4878  002088                     l337:
  4879  002088  B4C5               	btfsc	197,2,c	;volatile
  4880  00208A  EF49  F010         	goto	u2491
  4881  00208E  EF4B  F010         	goto	u2490
  4882  002092                     u2491:
  4883  002092  EF44  F010         	goto	l337
  4884  002096                     u2490:
  4885  002096                     l341:
  4886  002096  0012               	return		;funcret
  4887  002098                     __end_of_i2c_read_serial:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _SYSTEM_Initialize *****************
  4891 ;; Defined at:
  4892 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;		None
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;Total ram usage:        0 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 6
  4913 ;; This function calls:
  4914 ;;		_EUSART1_Initialize
  4915 ;;		_INTERRUPT_Initialize
  4916 ;;		_OSCILLATOR_Initialize
  4917 ;;		_PIN_MANAGER_Initialize
  4918 ;; This function is called by:
  4919 ;;		_main
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text27
  4924  0028A4                     __ptext27:
  4925                           	callstack 0
  4926  0028A4                     _SYSTEM_Initialize:
  4927                           	callstack 24
  4928  0028A4                     
  4929                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4930  0028A4  EC7F  F014         	call	_INTERRUPT_Initialize	;wreg free
  4931  0028A8                     
  4932                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4933  0028A8  ECE8  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  4934  0028AC                     
  4935                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4936  0028AC  EC38  F014         	call	_OSCILLATOR_Initialize	;wreg free
  4937  0028B0                     
  4938                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  4939  0028B0  ECC1  F011         	call	_EUSART1_Initialize	;wreg free
  4940  0028B4  0012               	return		;funcret
  4941  0028B6                     __end_of_SYSTEM_Initialize:
  4942                           	callstack 0
  4943                           
  4944 ;; *************** function _PIN_MANAGER_Initialize *****************
  4945 ;; Defined at:
  4946 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;Total ram usage:        0 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; Hardware stack levels required when called: 4
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_SYSTEM_Initialize
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text28
  4975  0027D0                     __ptext28:
  4976                           	callstack 0
  4977  0027D0                     _PIN_MANAGER_Initialize:
  4978                           	callstack 25
  4979  0027D0                     
  4980                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4981  0027D0  0E00               	movlw	0
  4982  0027D2  6E89               	movwf	137,c	;volatile
  4983                           
  4984                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4985  0027D4  0E00               	movlw	0
  4986  0027D6  6E8A               	movwf	138,c	;volatile
  4987                           
  4988                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4989  0027D8  0E00               	movlw	0
  4990  0027DA  6E8B               	movwf	139,c	;volatile
  4991  0027DC                     
  4992                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  4993  0027DC  6892               	setf	146,c	;volatile
  4994  0027DE                     
  4995                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4996  0027DE  6893               	setf	147,c	;volatile
  4997                           
  4998                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4999  0027E0  0EBF               	movlw	191
  5000  0027E2  6E94               	movwf	148,c	;volatile
  5001                           
  5002                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5003  0027E4  0E3C               	movlw	60
  5004  0027E6  010F               	movlb	15	; () banked
  5005  0027E8  6F3A               	movwf	58,b	;volatile
  5006                           
  5007                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  5008  0027EA  0E3F               	movlw	63
  5009  0027EC  6F39               	movwf	57,b	;volatile
  5010                           
  5011                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5012  0027EE  0E2F               	movlw	47
  5013  0027F0  6F38               	movwf	56,b	;volatile
  5014                           
  5015                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5016  0027F2  0E00               	movlw	0
  5017  0027F4  6E61               	movwf	97,c	;volatile
  5018  0027F6                     
  5019                           ; BSR set to: 15
  5020                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5021  0027F6  8EF1               	bsf	241,7,c	;volatile
  5022  0027F8                     
  5023                           ; BSR set to: 15
  5024  0027F8  0012               	return		;funcret
  5025  0027FA                     __end_of_PIN_MANAGER_Initialize:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _OSCILLATOR_Initialize *****************
  5029 ;; Defined at:
  5030 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 4
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_SYSTEM_Initialize
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text29
  5059  002870                     __ptext29:
  5060                           	callstack 0
  5061  002870                     _OSCILLATOR_Initialize:
  5062                           	callstack 25
  5063  002870                     
  5064                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  5065  002870  0E70               	movlw	112
  5066  002872  6ED3               	movwf	211,c	;volatile
  5067                           
  5068                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  5069  002874  0E04               	movlw	4
  5070  002876  6ED2               	movwf	210,c	;volatile
  5071                           
  5072                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
  5073  002878  0E40               	movlw	64
  5074  00287A  6E9B               	movwf	155,c	;volatile
  5075  00287C                     l22:
  5076                           
  5077                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
  5078  00287C  AED2               	btfss	4050,7,c	;volatile
  5079  00287E  EF43  F014         	goto	u1011
  5080  002882  EF45  F014         	goto	u1010
  5081  002886                     u1011:
  5082  002886  EF3E  F014         	goto	l22
  5083  00288A                     u1010:
  5084  00288A  0012               	return		;funcret
  5085  00288C                     __end_of_OSCILLATOR_Initialize:
  5086                           	callstack 0
  5087                           
  5088 ;; *************** function _INTERRUPT_Initialize *****************
  5089 ;; Defined at:
  5090 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		None
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;Total ram usage:        0 bytes
  5109 ;; Hardware stack levels used: 1
  5110 ;; Hardware stack levels required when called: 4
  5111 ;; This function calls:
  5112 ;;		Nothing
  5113 ;; This function is called by:
  5114 ;;		_SYSTEM_Initialize
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text30
  5119  0028FE                     __ptext30:
  5120                           	callstack 0
  5121  0028FE                     _INTERRUPT_Initialize:
  5122                           	callstack 25
  5123  0028FE                     
  5124                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5125  0028FE  9ED0               	bcf	208,7,c	;volatile
  5126  002900  0012               	return		;funcret
  5127  002902                     __end_of_INTERRUPT_Initialize:
  5128                           	callstack 0
  5129                           
  5130 ;; *************** function _EUSART1_Initialize *****************
  5131 ;; Defined at:
  5132 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;Total ram usage:        0 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 5
  5153 ;; This function calls:
  5154 ;;		_EUSART1_SetErrorHandler
  5155 ;;		_EUSART1_SetFramingErrorHandler
  5156 ;;		_EUSART1_SetOverrunErrorHandler
  5157 ;;		_EUSART1_SetRxInterruptHandler
  5158 ;;		_EUSART1_SetTxInterruptHandler
  5159 ;; This function is called by:
  5160 ;;		_SYSTEM_Initialize
  5161 ;;		_main
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text31
  5166  002382                     __ptext31:
  5167                           	callstack 0
  5168  002382                     _EUSART1_Initialize:
  5169                           	callstack 24
  5170  002382                     
  5171                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  5172  002382  9A9D               	bcf	157,5,c	;volatile
  5173  002384                     
  5174                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  5175  002384  0E30               	movlw	low _EUSART1_Receive_ISR
  5176  002386  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  5177  002388  0E22               	movlw	high _EUSART1_Receive_ISR
  5178  00238A  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  5179  00238C  EC65  F014         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  5180  002390                     
  5181                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  5182  002390  989D               	bcf	157,4,c	;volatile
  5183                           
  5184                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  5185  002392  0EA8               	movlw	low _EUSART1_Transmit_ISR
  5186  002394  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  5187  002396  0E25               	movlw	high _EUSART1_Transmit_ISR
  5188  002398  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  5189  00239A  EC60  F014         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  5190  00239E                     
  5191                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  5192  00239E  0E08               	movlw	8
  5193  0023A0  6EB8               	movwf	184,c	;volatile
  5194  0023A2                     
  5195                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  5196  0023A2  0E90               	movlw	144
  5197  0023A4  6EAB               	movwf	171,c	;volatile
  5198  0023A6                     
  5199                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  5200  0023A6  0E24               	movlw	36
  5201  0023A8  6EAC               	movwf	172,c	;volatile
  5202  0023AA                     
  5203                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
  5204  0023AA  0E8A               	movlw	138
  5205  0023AC  6EAF               	movwf	175,c	;volatile
  5206  0023AE                     
  5207                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  5208  0023AE  0E00               	movlw	0
  5209  0023B0  6EB0               	movwf	176,c	;volatile
  5210  0023B2                     
  5211                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  5212  0023B2  0E02               	movlw	low _EUSART1_DefaultFramingErrorHandler
  5213  0023B4  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5214  0023B6  0E29               	movlw	high _EUSART1_DefaultFramingErrorHandler
  5215  0023B8  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5216  0023BA  EC6F  F014         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5217  0023BE                     
  5218                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  5219  0023BE  0EF2               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  5220  0023C0  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5221  0023C2  0E28               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  5222  0023C4  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5223  0023C6  EC6A  F014         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5224  0023CA                     
  5225                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  5226  0023CA  0EF8               	movlw	low _EUSART1_DefaultErrorHandler
  5227  0023CC  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5228  0023CE  0E28               	movlw	high _EUSART1_DefaultErrorHandler
  5229  0023D0  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5230  0023D2  EC74  F014         	call	_EUSART1_SetErrorHandler	;wreg free
  5231                           
  5232                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  5233  0023D6  0E00               	movlw	0
  5234  0023D8  0100               	movlb	0	; () banked
  5235  0023DA  6FB0               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5236                           
  5237                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  5238  0023DC  0E00               	movlw	0
  5239  0023DE  6FB4               	movwf	_eusart1TxHead& (0+255),b	;volatile
  5240                           
  5241                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  5242  0023E0  0E00               	movlw	0
  5243  0023E2  6FB3               	movwf	_eusart1TxTail& (0+255),b	;volatile
  5244                           
  5245                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  5246  0023E4  0E40               	movlw	64
  5247  0023E6  6FB2               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  5248                           
  5249                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  5250  0023E8  0E00               	movlw	0
  5251  0023EA  6E5A               	movwf	_eusart1RxHead^0,c	;volatile
  5252                           
  5253                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  5254  0023EC  0E00               	movlw	0
  5255  0023EE  6E59               	movwf	_eusart1RxTail^0,c	;volatile
  5256                           
  5257                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  5258  0023F0  0E00               	movlw	0
  5259  0023F2  6FB1               	movwf	_eusart1RxCount& (0+255),b	;volatile
  5260  0023F4                     
  5261                           ; BSR set to: 0
  5262                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  5263  0023F4  8A9D               	bsf	157,5,c	;volatile
  5264  0023F6                     
  5265                           ; BSR set to: 0
  5266  0023F6  0012               	return		;funcret
  5267  0023F8                     __end_of_EUSART1_Initialize:
  5268                           	callstack 0
  5269                           
  5270 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  5271 ;; Defined at:
  5272 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5275 ;;		 -> EUSART1_Transmit_ISR(1), 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;Total ram usage:        2 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 4
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_EUSART1_Initialize
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text32
  5302  0028C0                     __ptext32:
  5303                           	callstack 0
  5304  0028C0                     _EUSART1_SetTxInterruptHandler:
  5305                           	callstack 24
  5306  0028C0                     
  5307                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  5308  0028C0  C005  F0AE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  5309  0028C4  C006  F0AF         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  5310  0028C8  0012               	return		;funcret
  5311  0028CA                     __end_of_EUSART1_SetTxInterruptHandler:
  5312                           	callstack 0
  5313                           
  5314 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  5315 ;; Defined at:
  5316 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5319 ;;		 -> EUSART1_Receive_ISR(1), 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;		None
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      void 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;Total ram usage:        2 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; Hardware stack levels required when called: 4
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_EUSART1_Initialize
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text33
  5346  0028CA                     __ptext33:
  5347                           	callstack 0
  5348  0028CA                     _EUSART1_SetRxInterruptHandler:
  5349                           	callstack 24
  5350  0028CA                     
  5351                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  5352  0028CA  C005  F0AC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  5353  0028CE  C006  F0AD         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  5354  0028D2  0012               	return		;funcret
  5355  0028D4                     __end_of_EUSART1_SetRxInterruptHandler:
  5356                           	callstack 0
  5357                           
  5358 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5359 ;; Defined at:
  5360 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5363 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;Total ram usage:        2 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 4
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_EUSART1_Initialize
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text34
  5390  0028D4                     __ptext34:
  5391                           	callstack 0
  5392  0028D4                     _EUSART1_SetOverrunErrorHandler:
  5393                           	callstack 24
  5394  0028D4                     
  5395                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  5396  0028D4  C005  F0A8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5397  0028D8  C006  F0A9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5398  0028DC  0012               	return		;funcret
  5399  0028DE                     __end_of_EUSART1_SetOverrunErrorHandler:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5403 ;; Defined at:
  5404 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5407 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;Total ram usage:        2 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 4
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_EUSART1_Initialize
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text35
  5434  0028DE                     __ptext35:
  5435                           	callstack 0
  5436  0028DE                     _EUSART1_SetFramingErrorHandler:
  5437                           	callstack 24
  5438  0028DE                     
  5439                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  5440  0028DE  C005  F0AA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5441  0028E2  C006  F0AB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5442  0028E6  0012               	return		;funcret
  5443  0028E8                     __end_of_EUSART1_SetFramingErrorHandler:
  5444                           	callstack 0
  5445                           
  5446 ;; *************** function _EUSART1_SetErrorHandler *****************
  5447 ;; Defined at:
  5448 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5451 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;		None
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  1    wreg      void 
  5456 ;; Registers used:
  5457 ;;		wreg, status,2, status,0
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;Total ram usage:        2 bytes
  5468 ;; Hardware stack levels used: 1
  5469 ;; Hardware stack levels required when called: 4
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		_EUSART1_Initialize
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text36
  5478  0028E8                     __ptext36:
  5479                           	callstack 0
  5480  0028E8                     _EUSART1_SetErrorHandler:
  5481                           	callstack 24
  5482  0028E8                     
  5483                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  5484  0028E8  C005  F0A6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5485  0028EC  C006  F0A7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5486  0028F0  0012               	return		;funcret
  5487  0028F2                     __end_of_EUSART1_SetErrorHandler:
  5488                           	callstack 0
  5489                           
  5490 ;; *************** function _INTERRUPT_InterruptManager *****************
  5491 ;; Defined at:
  5492 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;Total ram usage:        4 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 3
  5513 ;; This function calls:
  5514 ;;		Absolute function
  5515 ;;		_EUSART1_Receive_ISR
  5516 ;;		_EUSART1_Transmit_ISR
  5517 ;; This function is called by:
  5518 ;;		Interrupt level 2
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	intcode
  5523  000008                     __pintcode:
  5524                           	callstack 0
  5525  000008                     _INTERRUPT_InterruptManager:
  5526                           	callstack 17
  5527                           
  5528                           ;incstack = 0
  5529  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5530  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  5531  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5532  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5533  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5534  00001A                     
  5535                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  5536  00001A  ACF2               	btfss	242,6,c	;volatile
  5537  00001C  EF12  F000         	goto	i2u260_41
  5538  000020  EF14  F000         	goto	i2u260_40
  5539  000024                     i2u260_41:
  5540  000024  EF4E  F000         	goto	i2l231
  5541  000028                     i2u260_40:
  5542  000028                     
  5543                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5544  000028  A89D               	btfss	157,4,c	;volatile
  5545  00002A  EF19  F000         	goto	i2u261_41
  5546  00002E  EF1B  F000         	goto	i2u261_40
  5547  000032                     i2u261_41:
  5548  000032  EF31  F000         	goto	i2l226
  5549  000036                     i2u261_40:
  5550  000036  A89E               	btfss	158,4,c	;volatile
  5551  000038  EF20  F000         	goto	i2u262_41
  5552  00003C  EF22  F000         	goto	i2u262_40
  5553  000040                     i2u262_41:
  5554  000040  EF31  F000         	goto	i2l226
  5555  000044                     i2u262_40:
  5556  000044                     
  5557                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  5558  000044  D802               	call	i2u263_48
  5559  000046  EF2F  F000         	goto	i2u263_49
  5560  00004A                     i2u263_48:
  5561  00004A  0005               	push	
  5562  00004C  6EFA               	movwf	pclath,c
  5563  00004E  0100               	movlb	0	; () banked
  5564  000050  51AE               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  5565  000052  6EFD               	movwf	tosl,c
  5566  000054  51AF               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  5567  000056  6EFE               	movwf	tosh,c
  5568  000058  6AFF               	clrf	tosu,c
  5569  00005A  50FA               	movf	pclath,w,c
  5570  00005C  0012               	return		;indir
  5571  00005E                     i2u263_49:
  5572                           
  5573                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  5574  00005E  EF4E  F000         	goto	i2l231
  5575  000062                     i2l226:
  5576  000062  AA9D               	btfss	157,5,c	;volatile
  5577  000064  EF36  F000         	goto	i2u264_41
  5578  000068  EF38  F000         	goto	i2u264_40
  5579  00006C                     i2u264_41:
  5580  00006C  EF4E  F000         	goto	i2l227
  5581  000070                     i2u264_40:
  5582  000070  AA9E               	btfss	158,5,c	;volatile
  5583  000072  EF3D  F000         	goto	i2u265_41
  5584  000076  EF3F  F000         	goto	i2u265_40
  5585  00007A                     i2u265_41:
  5586  00007A  EF4E  F000         	goto	i2l227
  5587  00007E                     i2u265_40:
  5588  00007E                     
  5589                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  5590  00007E  D802               	call	i2u266_48
  5591  000080  EF4C  F000         	goto	i2u266_49
  5592  000084                     i2u266_48:
  5593  000084  0005               	push	
  5594  000086  6EFA               	movwf	pclath,c
  5595  000088  0100               	movlb	0	; () banked
  5596  00008A  51AC               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  5597  00008C  6EFD               	movwf	tosl,c
  5598  00008E  51AD               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  5599  000090  6EFE               	movwf	tosh,c
  5600  000092  6AFF               	clrf	tosu,c
  5601  000094  50FA               	movf	pclath,w,c
  5602  000096  0012               	return		;indir
  5603  000098                     i2u266_49:
  5604                           
  5605                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  5606  000098  EF4E  F000         	goto	i2l231
  5607  00009C                     i2l227:
  5608  00009C                     i2l231:
  5609  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5610  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5611  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5612  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5613  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5614  0000AE  0011               	retfie		f
  5615  0000B0                     __end_of_INTERRUPT_InterruptManager:
  5616                           	callstack 0
  5617                           
  5618 ;; *************** function _EUSART1_Transmit_ISR *****************
  5619 ;; Defined at:
  5620 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;Total ram usage:        0 bytes
  5639 ;; Hardware stack levels used: 1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_EUSART1_Initialize
  5644 ;;		_INTERRUPT_InterruptManager
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text38
  5649  0025A8                     __ptext38:
  5650                           	callstack 0
  5651  0025A8                     _EUSART1_Transmit_ISR:
  5652                           	callstack 19
  5653  0025A8                     
  5654                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  5655  0025A8  0E40               	movlw	64
  5656  0025AA  0100               	movlb	0	; () banked
  5657  0025AC  61B2               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  5658  0025AE  EFDB  F012         	goto	i2u252_41
  5659  0025B2  EFDD  F012         	goto	i2u252_40
  5660  0025B6                     i2u252_41:
  5661  0025B6  EFF3  F012         	goto	i2l167
  5662  0025BA                     i2u252_40:
  5663  0025BA                     
  5664                           ; BSR set to: 0
  5665                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  5666  0025BA  0E40               	movlw	low _eusart1TxBuffer
  5667  0025BC  25B3               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  5668  0025BE  6ED9               	movwf	fsr2l,c
  5669  0025C0  6ADA               	clrf	fsr2h,c
  5670  0025C2  0E01               	movlw	high _eusart1TxBuffer
  5671  0025C4  22DA               	addwfc	fsr2h,f,c
  5672  0025C6  50DF               	movf	indf2,w,c
  5673  0025C8  6EAD               	movwf	173,c	;volatile
  5674  0025CA                     
  5675                           ; BSR set to: 0
  5676  0025CA  2BB3               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  5677  0025CC                     
  5678                           ; BSR set to: 0
  5679                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  5680  0025CC  0E3F               	movlw	63
  5681  0025CE  65B3               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  5682  0025D0  EFEC  F012         	goto	i2u253_41
  5683  0025D4  EFEE  F012         	goto	i2u253_40
  5684  0025D8                     i2u253_41:
  5685  0025D8  EFF0  F012         	goto	i2l2715
  5686  0025DC                     i2u253_40:
  5687  0025DC                     
  5688                           ; BSR set to: 0
  5689                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  5690  0025DC  0E00               	movlw	0
  5691  0025DE  6FB3               	movwf	_eusart1TxTail& (0+255),b	;volatile
  5692  0025E0                     i2l2715:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  5696  0025E0  2BB2               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  5697                           
  5698                           ;mcc_generated_files/eusart1.c: 218:     }
  5699  0025E2  EFF4  F012         	goto	i2l170
  5700  0025E6                     i2l167:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  5704  0025E6  989D               	bcf	157,4,c	;volatile
  5705  0025E8                     i2l170:
  5706                           
  5707                           ; BSR set to: 0
  5708  0025E8  0012               	return		;funcret
  5709  0025EA                     __end_of_EUSART1_Transmit_ISR:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function _EUSART1_Receive_ISR *****************
  5713 ;; Defined at:
  5714 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;		None
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;Total ram usage:        0 bytes
  5733 ;; Hardware stack levels used: 1
  5734 ;; Hardware stack levels required when called: 2
  5735 ;; This function calls:
  5736 ;;		Absolute function
  5737 ;;		_EUSART1_DefaultErrorHandler
  5738 ;;		_EUSART1_DefaultFramingErrorHandler
  5739 ;;		_EUSART1_DefaultOverrunErrorHandler
  5740 ;;		_EUSART1_RxDataHandler
  5741 ;; This function is called by:
  5742 ;;		_EUSART1_Initialize
  5743 ;;		_INTERRUPT_InterruptManager
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text39
  5748  002230                     __ptext39:
  5749                           	callstack 0
  5750  002230                     _EUSART1_Receive_ISR:
  5751                           	callstack 17
  5752  002230                     
  5753                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  5754  002230  0E60               	movlw	low _eusart1RxStatusBuffer
  5755  002232  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  5756  002234  6ED9               	movwf	fsr2l,c
  5757  002236  6ADA               	clrf	fsr2h,c
  5758  002238  0E00               	movlw	high _eusart1RxStatusBuffer
  5759  00223A  22DA               	addwfc	fsr2h,f,c
  5760  00223C  0E00               	movlw	0
  5761  00223E  6EDF               	movwf	indf2,c
  5762  002240                     
  5763                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  5764  002240  A4AB               	btfss	171,2,c	;volatile
  5765  002242  EF25  F011         	goto	i2u254_41
  5766  002246  EF27  F011         	goto	i2u254_40
  5767  00224A                     i2u254_41:
  5768  00224A  EF3B  F011         	goto	i2l2725
  5769  00224E                     i2u254_40:
  5770  00224E                     
  5771                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  5772  00224E  0E60               	movlw	low _eusart1RxStatusBuffer
  5773  002250  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  5774  002252  6ED9               	movwf	fsr2l,c
  5775  002254  6ADA               	clrf	fsr2h,c
  5776  002256  0E00               	movlw	high _eusart1RxStatusBuffer
  5777  002258  22DA               	addwfc	fsr2h,f,c
  5778  00225A  0100               	movlb	0	; () banked
  5779  00225C  82DF               	bsf	indf2,1,c
  5780  00225E                     
  5781                           ; BSR set to: 0
  5782                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  5783  00225E  D802               	call	i2u255_48
  5784  002260  EF3B  F011         	goto	i2u255_49
  5785  002264                     i2u255_48:
  5786  002264  0005               	push	
  5787  002266  6EFA               	movwf	pclath,c
  5788  002268  51AA               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  5789  00226A  6EFD               	movwf	tosl,c
  5790  00226C  51AB               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  5791  00226E  6EFE               	movwf	tosh,c
  5792  002270  6AFF               	clrf	tosu,c
  5793  002272  50FA               	movf	pclath,w,c
  5794  002274  0012               	return		;indir
  5795  002276                     i2u255_49:
  5796  002276                     i2l2725:
  5797                           
  5798                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  5799  002276  A2AB               	btfss	171,1,c	;volatile
  5800  002278  EF40  F011         	goto	i2u256_41
  5801  00227C  EF42  F011         	goto	i2u256_40
  5802  002280                     i2u256_41:
  5803  002280  EF56  F011         	goto	i2l2731
  5804  002284                     i2u256_40:
  5805  002284                     
  5806                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  5807  002284  0E60               	movlw	low _eusart1RxStatusBuffer
  5808  002286  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  5809  002288  6ED9               	movwf	fsr2l,c
  5810  00228A  6ADA               	clrf	fsr2h,c
  5811  00228C  0E00               	movlw	high _eusart1RxStatusBuffer
  5812  00228E  22DA               	addwfc	fsr2h,f,c
  5813  002290  0100               	movlb	0	; () banked
  5814  002292  84DF               	bsf	indf2,2,c
  5815  002294                     
  5816                           ; BSR set to: 0
  5817                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  5818  002294  D802               	call	i2u257_48
  5819  002296  EF56  F011         	goto	i2u257_49
  5820  00229A                     i2u257_48:
  5821  00229A  0005               	push	
  5822  00229C  6EFA               	movwf	pclath,c
  5823  00229E  51A8               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  5824  0022A0  6EFD               	movwf	tosl,c
  5825  0022A2  51A9               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  5826  0022A4  6EFE               	movwf	tosh,c
  5827  0022A6  6AFF               	clrf	tosu,c
  5828  0022A8  50FA               	movf	pclath,w,c
  5829  0022AA  0012               	return		;indir
  5830  0022AC                     i2u257_49:
  5831  0022AC                     i2l2731:
  5832                           
  5833                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  5834  0022AC  0E60               	movlw	low _eusart1RxStatusBuffer
  5835  0022AE  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  5836  0022B0  6ED9               	movwf	fsr2l,c
  5837  0022B2  6ADA               	clrf	fsr2h,c
  5838  0022B4  0E00               	movlw	high _eusart1RxStatusBuffer
  5839  0022B6  22DA               	addwfc	fsr2h,f,c
  5840  0022B8  50DF               	movf	indf2,w,c
  5841  0022BA  B4D8               	btfsc	status,2,c
  5842  0022BC  EF62  F011         	goto	i2u258_41
  5843  0022C0  EF64  F011         	goto	i2u258_40
  5844  0022C4                     i2u258_41:
  5845  0022C4  EF73  F011         	goto	i2l2735
  5846  0022C8                     i2u258_40:
  5847  0022C8                     
  5848                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  5849  0022C8  D802               	call	i2u259_48
  5850  0022CA  EF71  F011         	goto	i2u259_49
  5851  0022CE                     i2u259_48:
  5852  0022CE  0005               	push	
  5853  0022D0  6EFA               	movwf	pclath,c
  5854  0022D2  0100               	movlb	0	; () banked
  5855  0022D4  51A6               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  5856  0022D6  6EFD               	movwf	tosl,c
  5857  0022D8  51A7               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  5858  0022DA  6EFE               	movwf	tosh,c
  5859  0022DC  6AFF               	clrf	tosu,c
  5860  0022DE  50FA               	movf	pclath,w,c
  5861  0022E0  0012               	return		;indir
  5862  0022E2                     i2u259_49:
  5863                           
  5864                           ;mcc_generated_files/eusart1.c: 242:     } else {
  5865  0022E2  EF75  F011         	goto	i2l177
  5866  0022E6                     i2l2735:
  5867                           
  5868                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  5869  0022E6  ECBD  F013         	call	_EUSART1_RxDataHandler	;wreg free
  5870  0022EA                     i2l177:
  5871  0022EA  0012               	return		;funcret
  5872  0022EC                     __end_of_EUSART1_Receive_ISR:
  5873                           	callstack 0
  5874                           
  5875 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  5876 ;; Defined at:
  5877 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;		None
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;		None
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		None
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;Total ram usage:        0 bytes
  5896 ;; Hardware stack levels used: 1
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_EUSART1_Initialize
  5901 ;;		_EUSART1_Receive_ISR
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text40
  5906  0028F2                     __ptext40:
  5907                           	callstack 0
  5908  0028F2                     _EUSART1_DefaultOverrunErrorHandler:
  5909                           	callstack 18
  5910  0028F2                     
  5911                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  5912  0028F2  98AB               	bcf	171,4,c	;volatile
  5913                           
  5914                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  5915  0028F4  88AB               	bsf	171,4,c	;volatile
  5916  0028F6  0012               	return		;funcret
  5917  0028F8                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  5918                           	callstack 0
  5919                           
  5920 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  5921 ;; Defined at:
  5922 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;		None
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		None
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;Total ram usage:        0 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_EUSART1_Initialize
  5946 ;;		_EUSART1_Receive_ISR
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text41
  5951  002902                     __ptext41:
  5952                           	callstack 0
  5953  002902                     _EUSART1_DefaultFramingErrorHandler:
  5954                           	callstack 18
  5955  002902  0012               	return		;funcret
  5956  002904                     __end_of_EUSART1_DefaultFramingErrorHandler:
  5957                           	callstack 0
  5958                           
  5959 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  5960 ;; Defined at:
  5961 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;		None
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;Total ram usage:        0 bytes
  5980 ;; Hardware stack levels used: 1
  5981 ;; Hardware stack levels required when called: 1
  5982 ;; This function calls:
  5983 ;;		_EUSART1_RxDataHandler
  5984 ;; This function is called by:
  5985 ;;		_EUSART1_Initialize
  5986 ;;		_EUSART1_Receive_ISR
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text42
  5991  0028F8                     __ptext42:
  5992                           	callstack 0
  5993  0028F8                     _EUSART1_DefaultErrorHandler:
  5994                           	callstack 17
  5995  0028F8                     
  5996                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  5997  0028F8  ECBD  F013         	call	_EUSART1_RxDataHandler	;wreg free
  5998  0028FC  0012               	return		;funcret
  5999  0028FE                     __end_of_EUSART1_DefaultErrorHandler:
  6000                           	callstack 0
  6001                           
  6002 ;; *************** function _EUSART1_RxDataHandler *****************
  6003 ;; Defined at:
  6004 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;Total ram usage:        0 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_EUSART1_Receive_ISR
  6028 ;;		_EUSART1_DefaultErrorHandler
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text43
  6033  00277A                     __ptext43:
  6034                           	callstack 0
  6035  00277A                     _EUSART1_RxDataHandler:
  6036                           	callstack 18
  6037  00277A                     
  6038                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6039  00277A  0E00               	movlw	low _eusart1RxBuffer
  6040  00277C  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  6041  00277E  6ED9               	movwf	fsr2l,c
  6042  002780  6ADA               	clrf	fsr2h,c
  6043  002782  0E01               	movlw	high _eusart1RxBuffer
  6044  002784  22DA               	addwfc	fsr2h,f,c
  6045  002786  CFAE FFDF          	movff	4014,indf2	;volatile
  6046  00278A  2A5A               	incf	_eusart1RxHead^0,f,c	;volatile
  6047  00278C                     
  6048                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6049  00278C  0E3F               	movlw	63
  6050  00278E  645A               	cpfsgt	_eusart1RxHead^0,c	;volatile
  6051  002790  EFCC  F013         	goto	i2u238_41
  6052  002794  EFCE  F013         	goto	i2u238_40
  6053  002798                     i2u238_41:
  6054  002798  EFD0  F013         	goto	i2l2615
  6055  00279C                     i2u238_40:
  6056  00279C                     
  6057                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  6058  00279C  0E00               	movlw	0
  6059  00279E  6E5A               	movwf	_eusart1RxHead^0,c	;volatile
  6060  0027A0                     i2l2615:
  6061                           
  6062                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  6063  0027A0  0100               	movlb	0	; () banked
  6064  0027A2  2BB1               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  6065  0027A4                     
  6066                           ; BSR set to: 0
  6067  0027A4  0012               	return		;funcret
  6068  0027A6                     __end_of_EUSART1_RxDataHandler:
  6069                           	callstack 0
  6070                           
  6071                           	psect	text44
  6072  000000                     __ptext44:
  6073                           	callstack 0
  6074  000000                     
  6075                           	psect	rparam
  6076  0000                     
  6077                           	psect	temp
  6078  00005B                     btemp:
  6079                           	callstack 0
  6080  00005B                     	ds	1
  6081  0000                     int$flags	set	btemp
  6082  0000                     wtemp8	set	btemp+1
  6083  0000                     ttemp5	set	btemp+1
  6084  0000                     ttemp6	set	btemp+4
  6085  0000                     ttemp7	set	btemp+8
  6086                           
  6087                           	psect	idloc
  6088                           
  6089                           ;Config register IDLOC0 @ 0x200000
  6090                           ;	unspecified, using default values
  6091  200000                     	org	2097152
  6092  200000  FF                 	db	255
  6093                           
  6094                           ;Config register IDLOC1 @ 0x200001
  6095                           ;	unspecified, using default values
  6096  200001                     	org	2097153
  6097  200001  FF                 	db	255
  6098                           
  6099                           ;Config register IDLOC2 @ 0x200002
  6100                           ;	unspecified, using default values
  6101  200002                     	org	2097154
  6102  200002  FF                 	db	255
  6103                           
  6104                           ;Config register IDLOC3 @ 0x200003
  6105                           ;	unspecified, using default values
  6106  200003                     	org	2097155
  6107  200003  FF                 	db	255
  6108                           
  6109                           ;Config register IDLOC4 @ 0x200004
  6110                           ;	unspecified, using default values
  6111  200004                     	org	2097156
  6112  200004  FF                 	db	255
  6113                           
  6114                           ;Config register IDLOC5 @ 0x200005
  6115                           ;	unspecified, using default values
  6116  200005                     	org	2097157
  6117  200005  FF                 	db	255
  6118                           
  6119                           ;Config register IDLOC6 @ 0x200006
  6120                           ;	unspecified, using default values
  6121  200006                     	org	2097158
  6122  200006  FF                 	db	255
  6123                           
  6124                           ;Config register IDLOC7 @ 0x200007
  6125                           ;	unspecified, using default values
  6126  200007                     	org	2097159
  6127  200007  FF                 	db	255
  6128                           
  6129                           	psect	config
  6130                           
  6131                           ; Padding undefined space
  6132  300000                     	org	3145728
  6133  300000  FF                 	db	255
  6134                           
  6135                           ;Config register CONFIG1H @ 0x300001
  6136                           ;	Oscillator Selection bits
  6137                           ;	FOSC = INTIO67, Internal oscillator block
  6138                           ;	4X PLL Enable
  6139                           ;	PLLCFG = OFF, Oscillator used directly
  6140                           ;	Primary clock enable bit
  6141                           ;	PRICLKEN = ON, Primary clock enabled
  6142                           ;	Fail-Safe Clock Monitor Enable bit
  6143                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6144                           ;	Internal/External Oscillator Switchover bit
  6145                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6146  300001                     	org	3145729
  6147  300001  28                 	db	40
  6148                           
  6149                           ;Config register CONFIG2L @ 0x300002
  6150                           ;	Power-up Timer Enable bit
  6151                           ;	PWRTEN = OFF, Power up timer disabled
  6152                           ;	Brown-out Reset Enable bits
  6153                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6154                           ;	Brown Out Reset Voltage bits
  6155                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6156  300002                     	org	3145730
  6157  300002  1F                 	db	31
  6158                           
  6159                           ;Config register CONFIG2H @ 0x300003
  6160                           ;	Watchdog Timer Enable bits
  6161                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6162                           ;	Watchdog Timer Postscale Select bits
  6163                           ;	WDTPS = 32768, 1:32768
  6164  300003                     	org	3145731
  6165  300003  3C                 	db	60
  6166                           
  6167                           ; Padding undefined space
  6168  300004                     	org	3145732
  6169  300004  FF                 	db	255
  6170                           
  6171                           ;Config register CONFIG3H @ 0x300005
  6172                           ;	CCP2 MUX bit
  6173                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6174                           ;	PORTB A/D Enable bit
  6175                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6176                           ;	P3A/CCP3 Mux bit
  6177                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6178                           ;	HFINTOSC Fast Start-up
  6179                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6180                           ;	Timer3 Clock input mux bit
  6181                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6182                           ;	ECCP2 B output mux bit
  6183                           ;	P2BMX = PORTB5, P2B is on RB5
  6184                           ;	MCLR Pin Enable bit
  6185                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6186  300005                     	org	3145733
  6187  300005  BF                 	db	191
  6188                           
  6189                           ;Config register CONFIG4L @ 0x300006
  6190                           ;	Stack Full/Underflow Reset Enable bit
  6191                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6192                           ;	Single-Supply ICSP Enable bit
  6193                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6194                           ;	Extended Instruction Set Enable bit
  6195                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6196                           ;	Background Debug
  6197                           ;	DEBUG = OFF, Disabled
  6198  300006                     	org	3145734
  6199  300006  85                 	db	133
  6200                           
  6201                           ; Padding undefined space
  6202  300007                     	org	3145735
  6203  300007  FF                 	db	255
  6204                           
  6205                           ;Config register CONFIG5L @ 0x300008
  6206                           ;	Code Protection Block 0
  6207                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6208                           ;	Code Protection Block 1
  6209                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6210                           ;	Code Protection Block 2
  6211                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6212                           ;	Code Protection Block 3
  6213                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6214  300008                     	org	3145736
  6215  300008  0F                 	db	15
  6216                           
  6217                           ;Config register CONFIG5H @ 0x300009
  6218                           ;	Boot Block Code Protection bit
  6219                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6220                           ;	Data EEPROM Code Protection bit
  6221                           ;	CPD = OFF, Data EEPROM not code-protected
  6222  300009                     	org	3145737
  6223  300009  C0                 	db	192
  6224                           
  6225                           ;Config register CONFIG6L @ 0x30000A
  6226                           ;	Write Protection Block 0
  6227                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6228                           ;	Write Protection Block 1
  6229                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6230                           ;	Write Protection Block 2
  6231                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6232                           ;	Write Protection Block 3
  6233                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6234  30000A                     	org	3145738
  6235  30000A  0F                 	db	15
  6236                           
  6237                           ;Config register CONFIG6H @ 0x30000B
  6238                           ;	Configuration Register Write Protection bit
  6239                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6240                           ;	Boot Block Write Protection bit
  6241                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6242                           ;	Data EEPROM Write Protection bit
  6243                           ;	WRTD = OFF, Data EEPROM not write-protected
  6244  30000B                     	org	3145739
  6245  30000B  E0                 	db	224
  6246                           
  6247                           ;Config register CONFIG7L @ 0x30000C
  6248                           ;	Table Read Protection Block 0
  6249                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6250                           ;	Table Read Protection Block 1
  6251                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6252                           ;	Table Read Protection Block 2
  6253                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6254                           ;	Table Read Protection Block 3
  6255                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6256  30000C                     	org	3145740
  6257  30000C  0F                 	db	15
  6258                           
  6259                           ;Config register CONFIG7H @ 0x30000D
  6260                           ;	Boot Block Table Read Protection bit
  6261                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6262  30000D                     	org	3145741
  6263  30000D  40                 	db	64
  6264                           tosu	equ	0xFFF
  6265                           tosh	equ	0xFFE
  6266                           tosl	equ	0xFFD
  6267                           stkptr	equ	0xFFC
  6268                           pclatu	equ	0xFFB
  6269                           pclath	equ	0xFFA
  6270                           pcl	equ	0xFF9
  6271                           tblptru	equ	0xFF8
  6272                           tblptrh	equ	0xFF7
  6273                           tblptrl	equ	0xFF6
  6274                           tablat	equ	0xFF5
  6275                           prodh	equ	0xFF4
  6276                           prodl	equ	0xFF3
  6277                           indf0	equ	0xFEF
  6278                           postinc0	equ	0xFEE
  6279                           postdec0	equ	0xFED
  6280                           preinc0	equ	0xFEC
  6281                           plusw0	equ	0xFEB
  6282                           fsr0h	equ	0xFEA
  6283                           fsr0l	equ	0xFE9
  6284                           wreg	equ	0xFE8
  6285                           indf1	equ	0xFE7
  6286                           postinc1	equ	0xFE6
  6287                           postdec1	equ	0xFE5
  6288                           preinc1	equ	0xFE4
  6289                           plusw1	equ	0xFE3
  6290                           fsr1h	equ	0xFE2
  6291                           fsr1l	equ	0xFE1
  6292                           bsr	equ	0xFE0
  6293                           indf2	equ	0xFDF
  6294                           postinc2	equ	0xFDE
  6295                           postdec2	equ	0xFDD
  6296                           preinc2	equ	0xFDC
  6297                           plusw2	equ	0xFDB
  6298                           fsr2h	equ	0xFDA
  6299                           fsr2l	equ	0xFD9
  6300                           status	equ	0xFD8

Data Sizes:
    Strings     139
    Constant    1
    Data        0
    BSS         253
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     35     156
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1510_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_5(CODE[25]), STR_4(CODE[34]), STR_3(CODE[31]), STR_2(CODE[19]), 
		 -> STR_1(CODE[30]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_5(CODE[25]), STR_4(CODE[34]), STR_3(CODE[31]), STR_2(CODE[19]), 
		 -> STR_1(CODE[30]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_5(CODE[25]), STR_4(CODE[34]), STR_3(CODE[31]), STR_2(CODE[19]), 
		 -> STR_1(CODE[30]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_5(CODE[25]), STR_4(CODE[34]), STR_3(CODE[31]), STR_2(CODE[19]), 
		 -> STR_1(CODE[30]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    i2c_read_serial@data_out	PTR unsigned char  size(2) Largest target is 4
		 -> data_out(BANK0[4]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _getReadingTC74->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _getReadingTC74->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   23545
                                             33 BANK0      2     2      0
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                     _getReadingTC74
                           _i2c_init
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getReadingTC74                                       0     0      0   22565
                    _i2c_read_serial
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   22234
                                             84 COMRAM     2     2      0
                                             27 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   21685
                                             82 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   21131
                                             72 COMRAM    10     4      6
                                              0 BANK0     21    21      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    6797
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7033
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4767
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    2051
                                             15 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1765
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     662
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _i2c_read_serial                                     12     9      3     331
                                              4 COMRAM    12     9      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _getReadingTC74
     _i2c_read_serial
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _i2c_init

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     23      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     176      12        0.0%
DATA                 0      0     176       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 19:27:15 2021

                      _eusart1TxBufferRemaining 00B2                                i2c_read_serial@i 0010  
                                            l22 287C                                              l25 288A  
                                            l19 28B4                                              l52 27F8  
                           ___wmul@multiplicand 0007                                             l202 28C8  
                                           l130 23F6                                             l220 2900  
                                           l205 28D2                                             l321 1FDE  
                                           l322 1FE2                                             l154 24CE  
                                           l331 2060                                             l155 24E4  
                                           l332 2062                                             l324 1FF0  
                                           l316 1FAA                                             l164 28BE  
                                           l333 2064                                             l341 2096  
                                           l318 1FCE                                             l158 2510  
                                           l327 2006                                             l319 1FD0  
                                           l336 2086                                             l328 2008  
                                           l344 286E                                             l280 2820  
                                           l193 28E6                                             l337 2088  
                                           l283 28A2                                             l196 28DC  
                                           l199 28F0                                             l471 1F9E  
                                           l458 1E3A                                             _abs 25EA  
                                           _pad 216E                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                       i2c_read_serial@data_out 0005                                            l1022 2848  
                                          l1111 187E                                            l1120 191A  
                                          l1113 1886                                            l1106 1844  
                                          l1211 1CAA                                            ?_abs 0017  
                                          l1214 1CB2                                            l1062 21F4  
                                          l1134 1AB6                                            l1150 1184  
                                          l1223 270C                                            l1231 2562  
                                          l1080 216C                                            l1064 222E  
                                          l1136 1B18                                            l3001 1F4E  
                                          l1217 2664                                            l1075 20FE  
                                          l3003 1F5E                                            l1059 21B2  
                                          l3011 217C                                            l1163 1566  
                                          l1252 2380                                            l1180 2620  
                                          l1260 25A6                                            l3005 1F7E  
                                          l3021 21D2                                            l3013 2190  
                                          l3101 15B0                                            l1237 26D4  
                                          l1078 2140                                            l1086 1608  
                                          l1183 2628                                            l3031 25EA  
                                          l3023 21D6                                            l3015 219E  
                                          l3111 1618                                            l3103 15D0  
                                          l1271 24B0                                            l1175 2452  
                                          l1088 1610                                            l1176 245A  
                                          l3033 2604                                            l3025 2202  
                                          l3017 21AA                                            l3009 216E  
                                          l3121 164E                                            l3113 162A  
                                          l3105 15E0                                            l3201 19D6  
                                          l1266 2778                                            l1282 269C  
                                          l3027 2216                                            l3019 21BE  
                                          l3123 1654                                            l3131 1746  
                                          l3115 1638                                            l3107 15E2  
                                          l3035 269E                                            l3043 245C  
                                          l3211 1A8E                                            l3203 19DC  
                                          l1276 24B8                                            l3053 26D6  
                                          l3061 252A                                            l3133 1760  
                                          l3141 17C0                                            l3125 16D6  
                                          l3117 163E                                            l3109 15FC  
                                          l3221 1AF0                                            l3213 1AA8  
                                          l3205 1A3A                                            l3301 111C  
                                          l3063 2558                                            l3231 1B36  
                                          l3071 20AC                                            l3151 1804  
                                          l3143 17D2                                            l3135 177E  
                                          l3127 16DC                                            l3119 1646  
                                          l3039 262A                                            l3047 2492  
                                          l3215 1AC4                                            l3207 1A56  
                                          l3311 11F0                                            l3303 1172  
                                          l2601 28DE                                            l3065 255C  
                                          l3057 2512                                            l3241 1B96  
                                          l3233 1B54                                            l3225 1B1A  
                                          l3073 20B8                                            l3153 180C  
                                          l3145 17E0                                            l3137 1798  
                                          l3129 16E2                                            l3049 24A4  
                                          l3217 1ACA                                            l3209 1A74  
                                          l3161 1856                                            l3313 11FE  
                                          l3305 1192                                            l3401 282A  
                                          l2603 28D4                                            l3059 2516  
                                          l3243 1BAC                                            l3235 1B8C  
                                          l3227 1B2E                                            l3091 214E  
                                          l3083 20F6                                            l3075 20C4  
                                          l3147 17E6                                            l3155 181C  
                                          l3139 17B2                                            l3219 1ADA  
                                          l3171 18C4                                            l3163 1858  
                                          l3323 1284                                            l3315 120C  
                                          l3307 1194                                            l3411 2716  
                                          l2605 28E8                                            l3261 1C8E  
                                          l3253 1C2A                                            l3245 1BB4  
                                          l3237 1B90                                            l3229 1B32  
                                          l3093 2160                                            l3085 210A  
                                          l3077 20D2                                            l3069 2098  
                                          l3149 17F8                                            l3181 18FE  
                                          l3173 18CC                                            l3165 1872  
                                          l3333 130A                                            l3317 122C  
                                          l3325 1296                                            l3309 11BA  
                                          l3405 27FA                                            l3413 2718  
                                          l2631 239E                                            l3247 1BBC  
                                          l3087 211E                                            l3079 20E4  
                                          l3183 190E                                            l3175 18D4  
                                          l3167 189C                                            l3159 1846  
                                          l3351 1448                                            l3343 13D6  
                                          l3335 1330                                            l3327 12BC  
                                          l3319 123A                                            l3271 10C2  
                                          l3407 280C                                            l3415 271A  
                                          l2641 23B2                                            l2633 23A2  
                                          l2625 2382                                            l1833 28FE  
                                          l1841 27F6                                            l3257 1C6A  
                                          l3249 1BF2                                            l3521 1BDC  
                                          l3089 2122                                            l3097 1568  
                                          l3193 199A                                            l3177 18DA  
                                          l3169 18A4                                            l3361 14F4  
                                          l3353 1484                                            l3345 13FC  
                                          l3337 1356                                            l3329 12EE  
                                          l3281 10F8                                            l3273 10D4  
                                          l3417 271E                                            l3409 270E  
                                          l2643 23BE                                            l2635 23A6  
                                          l2627 2384                                            l1843 2870  
                                          l1835 27D0                                            l3259 1C7C  
                                          l3099 1588                                            l3195 19AC  
                                          l3187 194E                                            l3179 18E2  
                                          l3363 1508                                            l3347 1422  
                                          l3339 139E                                            l3275 10D8  
                                          l3267 108E                                            l3419 2722  
                                          l2645 23CA                                            l2637 23AA  
                                          l2629 2390                                            l1837 27DC  
                                          l2661 2026                                            l2653 1FA2  
                                          l2901 2564                                            l3189 1960  
                                          l3197 19C0                                            l3349 143A  
                                          l3357 14C0                                            l3293 110A  
                                          l3285 10FE                                            l3277 10E4  
                                          l3269 10B4                                            l3373 152E  
                                          l2647 23F4                                            l2639 23AE  
                                          l1839 27DE                                            l2663 205A  
                                          l2655 1FB8                                            l2903 2570  
                                          l2911 2750                                            l3199 19D0  
                                          l3375 1554                                            l3359 14E6  
                                          l3367 1514                                            l3519 1144  
                                          l3279 10E6                                            l3391 23F8  
                                          l2681 28B0                                            l2665 2072  
                                          l2657 1FFE                                            l2905 2582  
                                          l2913 2754                                            l3369 1522  
                                          l3297 1110                                            l3289 1104  
                                          l3393 2400                                            l2675 28A4  
                                          l2659 2016                                            l2667 2074  
                                          l2923 284A                                            l2931 1CB8  
                                          l2907 2586                                            l2915 276C  
                                          l3395 240E                                            l2597 28CA  
                                          l2677 28A8                                            l2925 2866  
                                          l2941 1D18                                            l2933 1CC6  
                                          l2909 2744                                            l3397 2434  
                                          l1957 288C                                            ?_pad 0017  
                                          l2599 28C0                                            l2679 28AC  
                                          l2871 24DC                                            l2951 1D62  
                                          l2943 1D1C                                            l2935 1CE6  
                                          l2919 2666                                            l3399 2822  
                                          l1959 2896                                            l2881 250C  
                                          l2873 24E6                                            l2961 1DD2  
                                          l2953 1D70                                            l2945 1D28  
                                          l2937 1CEA                                            l2929 1CB4  
                                          l2875 24F6                                            l2883 250E  
                                          l2867 24BC                                            l2891 2310  
                                          l2963 1DE4                                            l2955 1D82  
                                          l2947 1D46                                            l2939 1CF8  
                                          l2877 24F8                                            l2869 24BC  
                                          l2885 28B8                                            l2893 231A  
                                          l2957 1DB0                                            l2949 1D4E  
                                          l2965 1DEA                                            l2981 1E72  
                                          l2973 1E3C                                            l2879 2508  
                                          l2895 2338                                            l2887 22EC  
                                          l2967 1DFA                                            l2959 1DD0  
                                          l2991 1EDA                                            l2983 1E80  
                                          l2975 1E40                                            l2897 236E  
                                          l2889 22FE                                            l2969 1E1A  
                                          l2993 1EE8                                            l2985 1EA0  
                                          l2977 1E4E                                            l2995 1F16  
                                          l2987 1EBE                                            l2979 1E6E  
                                          l2997 1F36                                            l2989 1EC6  
                                          l2999 1F48                                            STR_1 1043  
                                          STR_2 107A                                            STR_3 1024  
                                          STR_4 1002                                            STR_5 1061  
                                          u1010 288A                                            u1011 2886  
                                          u3000 1F16                                            u3001 1F12  
                                          u3010 1F5E                                            u3011 1F5A  
                                          u3020 217C                                            u3100 2660  
                                          u3021 2178                                            _LATA 000F89  
                                          u3030 219E                                            u3110 248C  
                                          _LATB 000F8A                                            u3031 219A  
                                          u3111 2486                                            _LATC 000F8B  
                                          u2400 1FB8                                            u3200 20F2  
                                          u3040 21F4                                            u3120 248E  
                                          u2401 1FB4                                            u3201 20EE  
                                          u3041 21F0                                            u2410 1FCE  
                                          u3210 2140                                            u3050 2202  
                                          u3130 24A4                                            u2411 1FCA  
                                          u3211 213C                                            u3051 21FE  
                                          u3131 24A0                                            u2420 1FDE  
                                          u3140 2706                                            u3220 214E  
                                          u3060 2604                                            u3300 1760  
                                          u2421 1FDA                                            u3141 2700  
                                          u3221 214A                                            u3061 2600  
                                          u3301 175C                                            u2430 1FF0  
                                          u3150 2708                                            u3310 177E  
                                          u3230 1598                                            u3070 26CE  
                                          u2431 1FEC                                            u3311 177A  
                                          u3231 1592                                            u3071 26C8  
                                          u2440 1FFE                                            u3160 252A  
                                          u3320 1798                                            u3240 159A  
                                          u3080 26D0                                            u3400 189C  
                                          u2441 1FFA                                            u3161 2526  
                                          u3321 1794                                            u3401 1898  
                                          u2450 2016                                            u3170 2558  
                                          u3330 17B2                                            u3250 15B0  
                                          u3090 265E                                            u3410 18FE  
                                          u2451 2012                                            u3171 2554  
                                          u3331 17AE                                            u3251 15AC  
                                          u3091 2658                                            u3411 18FA  
                                          u2460 205A                                            u3180 20AC  
                                          u3340 17C0                                            u3260 15E0  
                                          u3500 1A74                                            u3420 1948  
                                          u2461 2056                                            u3181 20A8  
                                          u3341 17BC                                            u3261 15DC  
                                          u3501 1A70                                            u3421 1942  
                                          u2470 2072                                            u3190 20D2  
                                          u3350 17D2                                            u3270 15FC  
                                          u3510 1A8E                                            u3430 194A  
                                          u2471 206E                                            u3191 20CE  
                                          u3351 17CE                                            u3271 15F8  
                                          u3511 1A8A                                            u2480 2086  
                                          u3600 1C7C                                            u2800 2508  
                                          u3360 17E0                                            u3280 162A  
                                          u3520 1AA8                                            u3440 1960  
                                          u2481 2082                                            u3601 1C78  
                                          u2801 2504                                            u3361 17DC  
                                          u3281 1626                                            u3521 1AA4  
                                          u3441 195C                                            u2490 2096  
                                          u3610 1C8E                                            u2810 22FE  
                                          u3370 17F8                                            u3290 1638  
                                          u3530 1AB6                                            u3450 1994  
                                          u2491 2092                                            u3611 1C8A  
                                          u2811 22FA                                            u3371 17F4  
                                          u3291 1634                                            u3531 1AB2  
                                          u3451 198E                                            u2820 2310  
                                          u2900 1CF8                                            u3540 1AC4  
                                          u3460 1996                                            u3380 1856  
                                          u3700 12BC                                            u3620 10B4  
                                          u2821 230C                                            u2901 1CF4  
                                          u3541 1AC0                                            u3381 1852  
                                          u3701 12B8                                            u3621 10B0  
                                          u3550 1B54                                            u2830 2338  
                                          u3470 19AC                                            u3390 1872  
                                          u3710 1330                                            u3630 1184  
                                          u3551 1B50                                            u2831 2334  
                                          u2911 1D22                                            u3471 19A8  
                                          u3391 186E                                            u3711 132C  
                                          u3631 1180                                            u3560 1B8C  
                                          u2840 236E                                            u2920 1D46  
                                          u3480 1A14                                            u3720 1356  
                                          u3640 1192                                            u3561 1B88  
                                          u2841 236A                                            u2921 1D42  
                                          u3721 1352                                            u3641 118E  
                                          u3570 1BA8                                            u2930 1D70  
                                          u2850 25A6                                            u3490 1A56  
                                          u3730 13FC                                            u3650 11BA  
                                          u3571 1BA4                                            u2931 1D6C  
                                          u2851 25A2                                            u3491 1A52  
                                          u3731 13F8                                            u3651 11B6  
                                          u3580 1C64                                            u2780 24CE  
                                          u2940 1DB0                                            u2860 276C  
                                          u3740 1422                                            u3660 11FE  
                                          u3581 1C5E                                            u2781 24CA  
                                          u2941 1DAC                                            u2861 2768  
                                          u3485 1A02                                            u3741 141E  
                                          u3661 11FA                                            u3590 1C66  
                                          u2790 24DC                                            u2950 1DFA  
                                          u2870 2696                                            u3750 14E6  
                                          u3670 127C                                            u2791 24D8  
                                          u2951 1DF6                                            u2871 2690  
                                          u3751 14E2                                            u3671 1276  
                                          u2960 1E4E                                            u2880 2698  
                                          u3680 127E                                            u3760 2452  
                                          u2961 1E4A                                            u3761 244E  
                                          u2890 1CC6                                            u2970 1E80  
                                          u3690 1296                                            u2891 1CC2  
                                          u2971 1E7C                                            u3691 1292  
                                          u2980 1EBE                                            u2981 1EBA  
                                          u2990 1EE8                                            u2991 1EE4  
                                          u3887 272E                                            _WPUB 000F61  
                                 _EUSART1_Write 24BA                                            abs@a 0017  
                                          _dbuf 00B5                                            _atoi 1B1A  
                                          _ctoa 2098                                            _main 270E  
                                          _dtoa 1568                                            _prec 00A4  
                                          _nout 00A0                                            pad@i 001E  
                                          pad@p 001B                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            btemp 005B  
                                          _xtoa 1846                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00B0  
                           i2c_read_serial@addr 000E                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                           ??_abs 0019  
                                         ??_pad 001D                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 288C                           _eusart1RxStatusBuffer 0060  
                               __end_of___aodiv 1E3C                                           ?_atoi 000C  
                                         ?_ctoa 0010                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 1FA0  
                                         ?_xtoa 0022                                           i2l231 009C  
                                         i2l170 25E8                                           i2l226 0062  
                                         i2l227 009C                                           i2l181 27A4  
                                         i2l190 28FC                                           i2l167 25E6  
                                         i2l184 2902                                           i2l177 22EA  
                                         i2l187 28F6                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00E1                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                          _EUSART1_Transmit_ISR 25A8                                           _flags 0057  
                                         _fputc 22EC                                 __end_of_isalpha 2666  
                                         _fputs 2564                                 __end_of_isdigit 270E  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 00A2  
                                         ctoa@c 0012                                           _putch 28B6  
                                         ctoa@l 0014                                           ctoa@w 0016  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                               __end_of_islower 269E                                 __end_of_isspace 2564  
                                ?_EUSART1_Write 0001                                 __end_of_isupper 26D6  
                                         pclath 000FFA                                           tablat 000FF5  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 24BA           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 2904     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 2902                                    _toupper$1728 0011  
                               __initialization 27A6                                    __end_of_atoi 1CB4  
                                  __end_of_ctoa 216E                      __end_of_EUSART1_Initialize 23F8  
                                  __end_of_main 2744                                    __end_of_dtoa 1846  
                                  __end_of_xtoa 1B1A                                __end_of_i2c_init 28A4  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_atoi 000E  
                                        ??_ctoa 0013                                          ??_main 00FA  
                                        ??_dtoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003                           ?_EUSART1_Transmit_ISR 0001  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        i2l2611 278C                                          i2l2613 279C  
                                        i2l2615 27A0                                          i2l2607 277A  
                                        i2l2711 25CC                                          i2l2609 278A  
                                        i2l2721 224E                                          i2l2713 25DC  
                                        i2l2705 25A8                                          i2l2651 28F8  
                                        i2l2731 22AC                                          i2l2723 225E  
                                        i2l2715 25E0                                          i2l2707 25BA  
                                        i2l2733 22C8                                          i2l2725 2276  
                                        i2l2717 2230                                          i2l2709 25CA  
                                        i2l2735 22E6                                          i2l2727 2284  
                                        i2l2719 2240                                          i2l2751 0044  
                                        i2l2649 28F2                                          i2l2729 2294  
                                        i2l2753 0070                                          i2l2745 001A  
                                        i2l2755 007E                                          i2l2747 0028  
                                        i2l2749 0036                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   vfpfcnvrt@done 00E9  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    vfprintf@cfmt 0053  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 284A                        ?_EUSART1_SetErrorHandler 0005  
                               _i2c_read_serial 1FA0                                          clear_0 27AC  
                                        clear_1 27B8                                          isa$std 000001  
                                        _printf 2822                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        ctoa@fp 0010                                          dtoa@fp 0022  
                                        _strlen 2744                                          fputc@c 0007  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_islower 0007  
                                  __mediumconst 0000                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 245C                                 ??_EUSART1_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0100  
                                     ??_toupper 000D                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0140                               _SYSTEM_Initialize 28A4  
                                    __accesstop 0060                         __end_of__initialization 27C6  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                __size_of_EUSART1_RxDataHandler 002C                           i2c_read_serial@length 0007  
                 __end_of_EUSART1_RxDataHandler 27A6                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 2382  
                                 __end_of_fputs 25A8                                   __end_of_putch 28C0  
                        ??_EUSART1_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 22EC  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 28B6  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 005A                                   _eusart1TxHead 00B4  
                                 _eusart1RxTail 0059                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                   _eusart1TxTail 00B3  
             _EUSART1_TxDefaultInterruptHandler 00AE                 ??_EUSART1_SetRxInterruptHandler 0007  
                                     ?_i2c_init 0001                         __size_of_getReadingTC74 0028  
                       __end_of_i2c_read_serial 2098                 __end_of_EUSART1_SetErrorHandler 28F2  
                                       ?___wmul 0005                                         ?_printf 00F4  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 28E8  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 28DE  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 04DA                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                                       _SSP1BUF 000FC9                                      ??_i2c_init 0005  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aodiv 1CB4                                         ___aomod 1E3C  
                               __size_of___wmul 0026                                       ?_vfprintf 00EE  
                                  __psmallconst 1000                                         __pcinit 27A6  
                                       __ramtop 1000                                         __ptext0 270E  
                                       __ptext1 288C                                         __ptext2 27FA  
                                       __ptext3 2822                                         __ptext4 23F8  
                                       __ptext5 108E                                         __ptext6 1846  
                                       __ptext7 245C                                         __ptext8 2666  
                                       __ptext9 269E                                 __size_of_printf 0028  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 2870  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 262A                                         _isdigit 26D6  
                            _EUSART1_Initialize 2382                                         _islower 2666  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 2512  
                                       _isupper 269E                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 0012  
                                       _toupper 245C                            end_of_initialization 27C6  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 00A8                                         fputs@fp 0012  
         __end_of_EUSART1_SetRxInterruptHandler 28D4          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 28CA                                ?_i2c_read_serial 0005  
                             __end_of_vfpfcnvrt 1568                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                                         strlen@a 0007  
                                       strlen@s 0005                                       _TRISCbits 000F94  
                       fp__EUSART1_Transmit_ISR 0000                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                  _getReadingTC74 27FA  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 2902  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 00D9                                  __end_of___wmul 2870  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 284A  
                                __end_of_strlen 277A                             start_initialization 27A6  
               __size_of_PIN_MANAGER_Initialize 002A                                     __end_of_abs 262A  
                                   __end_of_pad 2230   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005                                     putch@txData 0006  
                         __end_of_EUSART1_Write 2512                          __end_of_getReadingTC74 2822  
                        fp__EUSART1_Receive_ISR 0000                               __size_of_i2c_init 0018  
                                   vfprintf@fmt 00F0                                        ??___wmul 0009  
                         _EUSART1_RxDataHandler 277A                  ?_EUSART1_SetRxInterruptHandler 0005  
                                      ??_printf 0055                                        ??_strlen 0007  
                                _eusart1RxCount 00B1                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 00AC                   __size_of_EUSART1_Transmit_ISR 0042  
                                 __pcstackBANK0 00D9                                ___aodiv@dividend 0005  
                          __end_of_tempaddrTC74 1002                 ??_EUSART1_SetTxInterruptHandler 0007  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
                  __size_of_EUSART1_Receive_ISR 00BC                                 ?_getReadingTC74 0001  
                                     _atoi$1652 0014                                       _atoi$1653 0018  
                                     _atoi$1654 0016                          _PIN_MANAGER_Initialize 27D0  
                                     _dtoa$1604 0034                                       __pintcode 0008  
                                      ?___aodiv 0005                                        ?___aomod 0005  
                              ___aodiv@quotient 0017                    ??_INTERRUPT_InterruptManager 0001  
                             __size_of_vfprintf 0064                                     __smallconst 1000  
                                      _BAUDCON1 000FB8           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 28F8     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 28F2                                        ?_isalpha 0005  
                                      ?_isdigit 0005                            _EUSART1_ErrorHandler 00A6  
                                      ?_islower 0005                                        ?_isspace 0005  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 28E8  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 28FE                                  ___wmul@product 0009  
       EUSART1_SetErrorHandler@interruptHandler 0005                                        _PIE1bits 000F9D  
           __size_of_INTERRUPT_InterruptManager 00A8                                        i2u252_40 25BA  
                                      i2u260_40 0028                                        i2u252_41 25B6  
                                      i2u260_41 0024                                        i2u253_40 25DC  
                                      i2u261_40 0036                                        i2u253_41 25D8  
                                      i2u261_41 0032                                        i2u238_40 279C  
                                      i2u254_40 224E                                        i2u262_40 0044  
                                      i2u238_41 2798                                        i2u254_41 224A  
                                      i2u262_41 0040                                        i2u256_40 2284  
                                      i2u255_48 2264                                        i2u264_40 0070  
                                      i2u263_48 004A                                        i2u256_41 2280  
                                      i2u255_49 2276                                        i2u264_41 006C  
                                      i2u263_49 005E                                        i2u265_40 007E  
                                      i2u265_41 007A                                        _PIR1bits 000F9E  
                                      i2u258_40 22C8                                        i2u257_48 229A  
                                      i2u258_41 22C4                                        i2u257_49 22AC  
                                      i2u266_48 0084                                        i2u266_49 0098  
                                      i2u259_48 22CE                                        i2u259_49 22E2  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                                      _SSP1CON1 000FC6                                        _SSP1CON2 000FC5  
                                      _SSP1STAT 000FC7                                       _vfpfcnvrt 108E  
                                     _xtoa$1615 0035                                       _xtoa$1616 0037  
                             ___wmul@multiplier 0005                                    _isspace$1679 000B  
                                    vfpfcnvrt@c 00ED                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                                        _i2c_init 288C  
         __end_of_EUSART1_SetTxInterruptHandler 28CA          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 28C0                                        __Hrparam 0000  
                                    vfprintf@ap 00F2                                        __Lrparam 0000  
                                    vfprintf@fp 00EE                         ??_OSCILLATOR_Initialize 0005  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                   __size_of_EUSART1_Initialize 0076                                      ?_vfpfcnvrt 0049  
                      __size_of_i2c_read_serial 00F8                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                                      _ANSELCbits 000F3A  
                     ??_EUSART1_SetErrorHandler 0007             __end_of_EUSART1_DefaultErrorHandler 28FE  
                   _EUSART1_DefaultErrorHandler 28F8                                        _data_out 00D5  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 262A                                        __ptext11 1568  
                                      __ptext20 28B6                                        __ptext12 216E  
                                      __ptext21 24BA                                        __ptext13 2744  
                                      __ptext30 28FE                                        __ptext22 1B1A  
                                      __ptext14 2564                                        __ptext31 2382  
                                      __ptext23 2512                                        __ptext15 25EA  
                                      __ptext40 28F2                                        __ptext32 28C0  
                                      __ptext24 26D6                                        __ptext16 1E3C  
                                      __ptext41 2902                                        __ptext33 28CA  
                                      __ptext25 284A                                        __ptext17 1CB4  
                                      __ptext42 28F8                                        __ptext34 28D4  
                                      __ptext26 1FA0                                        __ptext18 2098  
                                      __ptext43 277A                                        __ptext35 28DE  
                                      __ptext27 28A4                                        __ptext19 22EC  
                                      __ptext44 0000                                        __ptext36 28E8  
                                      __ptext28 27D0                                        __ptext29 2870  
                                      __ptext38 25A8                                        __ptext39 2230  
                              __size_of_isupper 0038                                    _SSP1CON2bits 000FC5  
                              __size_of_toupper 005E                                   __size_of_atoi 019A  
                                 __size_of_ctoa 00D6                                   __size_of_main 0036  
                                 __size_of_dtoa 02DE                                   __size_of_xtoa 02D4  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        isa$xinst 000000  
                                      int$flags 005B                                        _vfprintf 23F8  
            __end_of_INTERRUPT_InterruptManager 00B0                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00F4                                    _tempaddrTC74 1001  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 00AA  
                           _EUSART1_Receive_ISR 2230                       i2c_read_serial@targetAddr 000F  
                              ___aomod@dividend 0005                                  _vfpfcnvrt$1630 00EB  
                                    _INTCONbits 000FF2                                        isalpha@c 0005  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                              ??_getReadingTC74 0057                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 28DE         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 28D4                                      _RCSTA1bits 000FAB  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 25EA  
                                      printf@ap 0055  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                                 ___aomod@divisor 000D  
                                   ??_vfpfcnvrt 004F                                 ___aomod@counter 0015  
                        __size_of_EUSART1_Write 0058                              _eusart1RxLastError 00B0  
                                      toupper@c 000B                               ??_i2c_read_serial 0008  
                                  ___aodiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 27FA                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016  
