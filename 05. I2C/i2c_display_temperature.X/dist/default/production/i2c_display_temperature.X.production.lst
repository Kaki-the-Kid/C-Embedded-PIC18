

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 12 09:32:58 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 2.05
    54                           ; Generated 20/12/2018 GMT
    55                           ; 
    56                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F26K22 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataBANK0
    89  001D3C                     __pidataBANK0:
    90                           	opt callstack 0
    91                           
    92                           ;initializer for _temp_string
    93  001D3C  40                 	db	64
    94  001D3D  54                 	db	84
    95  001D3E  65                 	db	101
    96  001D3F  6D                 	db	109
    97  001D40  70                 	db	112
    98  001D41  65                 	db	101
    99  001D42  72                 	db	114
   100  001D43  61                 	db	97
   101  001D44  74                 	db	116
   102  001D45  75                 	db	117
   103  001D46  72                 	db	114
   104  001D47  3A                 	db	58
   105  001D48  20                 	db	32
   106  001D49  00                 	db	0
   107                           
   108                           ;initializer for stoa@F1139
   109  001D4A  28                 	db	40
   110  001D4B  6E                 	db	110
   111  001D4C  75                 	db	117
   112  001D4D  6C                 	db	108
   113  001D4E  6C                 	db	108
   114  001D4F  29                 	db	41
   115  001D50  00                 	db	0
   116                           
   117                           ;initializer for _display_init
   118  001D51  00                 	db	0
   119  001D52  38                 	db	56
   120  001D53  0F                 	db	15
   121  001D54  06                 	db	6
   122                           
   123                           ;initializer for _debug
   124  001D55  01                 	db	1
   125                           
   126                           ;initializer for _temperature
   127  001D56  58                 	db	88
   128                           
   129                           ;initializer for _display_addr
   130  001D57  3C                 	db	60
   131                           
   132                           ;initializer for _temperature_addr
   133  001D58  48                 	db	72
   134  0000                     _ANSELCbits	set	3898
   135  0000                     _ANSELA	set	3896
   136  0000                     _ANSELB	set	3897
   137  0000                     _ANSELC	set	3898
   138  0000                     _SSP2CON2bits	set	3947
   139  0000                     _SSP1BUF	set	4041
   140  0000                     _SSP1CON2bits	set	4037
   141  0000                     _SSP1CON2	set	4037
   142  0000                     _SSP1STAT	set	4039
   143  0000                     _SSP1CON1	set	4038
   144  0000                     _SSP1ADD	set	4040
   145  0000                     _TRISCbits	set	3988
   146  0000                     _LATBbits	set	3978
   147  0000                     _PIR1bits	set	3998
   148  0000                     _RCONbits	set	4048
   149  0000                     _RCREG1	set	4014
   150  0000                     _RCSTA1bits	set	4011
   151  0000                     _TXREG1	set	4013
   152  0000                     _TXSTA1bits	set	4012
   153  0000                     _SPBRGH1	set	4016
   154  0000                     _SPBRG1	set	4015
   155  0000                     _TXSTA1	set	4012
   156  0000                     _RCSTA1	set	4011
   157  0000                     _BAUDCON1	set	4024
   158  0000                     _PIE1bits	set	3997
   159  0000                     _INTCONbits	set	4082
   160  0000                     _INTCON2bits	set	4081
   161  0000                     _WPUB	set	3937
   162  0000                     _TRISC	set	3988
   163  0000                     _TRISB	set	3987
   164  0000                     _TRISA	set	3986
   165  0000                     _LATC	set	3979
   166  0000                     _LATB	set	3978
   167  0000                     _LATA	set	3977
   168  0000                     _OSCTUNE	set	3995
   169  0000                     _OSCCON2	set	4050
   170  0000                     _OSCCON	set	4051
   171  0000                     _PLLRDY	set	32407
   172                           
   173                           	psect	smallconst
   174  001000                     __psmallconst:
   175                           	opt callstack 0
   176  001000  00                 	db	0
   177  001001                     
   178                           ; BSR set to: 0
   179  001001  4B                 	db	75	;'K'
   180  001002  75                 	db	117	;'u'
   181  001003  6E                 	db	110	;'n'
   182  001004  6E                 	db	110	;'n'
   183  001005  65                 	db	101	;'e'
   184  001006  20                 	db	32
   185  001007  69                 	db	105	;'i'
   186  001008  6B                 	db	107	;'k'
   187  001009  6B                 	db	107	;'k'
   188  00100A  65                 	db	101	;'e'
   189  00100B  20                 	db	32
   190  00100C  66                 	db	102	;'f'
   191  00100D  69                 	db	105	;'i'
   192  00100E  6E                 	db	110	;'n'
   193  00100F  64                 	db	100	;'d'
   194  001010  65                 	db	101	;'e'
   195  001011  20                 	db	32
   196  001012  65                 	db	101	;'e'
   197  001013  6E                 	db	110	;'n'
   198  001014  68                 	db	104	;'h'
   199  001015  65                 	db	101	;'e'
   200  001016  64                 	db	100	;'d'
   201  001017  2C                 	db	44
   202  001018  20                 	db	32
   203  001019  61                 	db	97	;'a'
   204  00101A  64                 	db	100	;'d'
   205  00101B  64                 	db	100	;'d'
   206  00101C  72                 	db	114	;'r'
   207  00101D  3A                 	db	58	;':'
   208  00101E  20                 	db	32
   209  00101F  25                 	db	37
   210  001020  73                 	db	115	;'s'
   211  001021  0A                 	db	10
   212  001022  0D                 	db	13
   213  001023  00                 	db	0
   214  001024                     STR_5:
   215                           
   216                           ; BSR set to: 0
   217  001024  0A                 	db	10
   218  001025  0D                 	db	13
   219  001026  53                 	db	83	;'S'
   220  001027  6B                 	db	107	;'k'
   221  001028  72                 	db	114	;'r'
   222  001029  69                 	db	105	;'i'
   223  00102A  76                 	db	118	;'v'
   224  00102B  65                 	db	101	;'e'
   225  00102C  72                 	db	114	;'r'
   226  00102D  3A                 	db	58	;':'
   227  00102E  20                 	db	32
   228  00102F  61                 	db	97	;'a'
   229  001030  64                 	db	100	;'d'
   230  001031  72                 	db	114	;'r'
   231  001032  65                 	db	101	;'e'
   232  001033  73                 	db	115	;'s'
   233  001034  73                 	db	115	;'s'
   234  001035  65                 	db	101	;'e'
   235  001036  3A                 	db	58	;':'
   236  001037  20                 	db	32
   237  001038  25                 	db	37
   238  001039  64                 	db	100	;'d'
   239  00103A  0A                 	db	10
   240  00103B  0D                 	db	13
   241  00103C  00                 	db	0
   242  00103D                     
   243                           ; BSR set to: 0
   244  00103D  68                 	db	104	;'h'
   245  00103E  61                 	db	97	;'a'
   246  00103F  6E                 	db	110	;'n'
   247  001040  64                 	db	100	;'d'
   248  001041  6C                 	db	108	;'l'
   249  001042  65                 	db	101	;'e'
   250  001043  55                 	db	85	;'U'
   251  001044  53                 	db	83	;'S'
   252  001045  42                 	db	66	;'B'
   253  001046  43                 	db	67	;'C'
   254  001047  6F                 	db	111	;'o'
   255  001048  6D                 	db	109	;'m'
   256  001049  6D                 	db	109	;'m'
   257  00104A  61                 	db	97	;'a'
   258  00104B  6E                 	db	110	;'n'
   259  00104C  64                 	db	100	;'d'
   260  00104D  28                 	db	40
   261  00104E  29                 	db	41
   262  00104F  0A                 	db	10
   263  001050  0D                 	db	13
   264  001051  00                 	db	0
   265  001052                     STR_4:
   266                           
   267                           ; BSR set to: 0
   268  001052  48                 	db	72	;'H'
   269  001053  61                 	db	97	;'a'
   270  001054  72                 	db	114	;'r'
   271  001055  20                 	db	32
   272  001056  73                 	db	115	;'s'
   273  001057  65                 	db	101	;'e'
   274  001058  6E                 	db	110	;'n'
   275  001059  64                 	db	100	;'d'
   276  00105A  74                 	db	116	;'t'
   277  00105B  20                 	db	32
   278  00105C  73                 	db	115	;'s'
   279  00105D  74                 	db	116	;'t'
   280  00105E  61                 	db	97	;'a'
   281  00105F  72                 	db	114	;'r'
   282  001060  74                 	db	116	;'t'
   283  001061  0A                 	db	10
   284  001062  0D                 	db	13
   285  001063  00                 	db	0
   286  001064                     STR_3:
   287                           
   288                           ; BSR set to: 0
   289  001064  42                 	db	66	;'B'
   290  001065  75                 	db	117	;'u'
   291  001066  73                 	db	115	;'s'
   292  001067  73                 	db	115	;'s'
   293  001068  65                 	db	101	;'e'
   294  001069  6E                 	db	110	;'n'
   295  00106A  65                 	db	101	;'e'
   296  00106B  72                 	db	114	;'r'
   297  00106C  20                 	db	32
   298  00106D  6B                 	db	107	;'k'
   299  00106E  6C                 	db	108	;'l'
   300  00106F  61                 	db	97	;'a'
   301  001070  72                 	db	114	;'r'
   302  001071  0A                 	db	10
   303  001072  0D                 	db	13
   304  001073  00                 	db	0
   305  001074                     STR_1:
   306                           
   307                           ; BSR set to: 0
   308  001074  44                 	db	68	;'D'
   309  001075  65                 	db	101	;'e'
   310  001076  62                 	db	98	;'b'
   311  001077  75                 	db	117	;'u'
   312  001078  67                 	db	103	;'g'
   313  001079  67                 	db	103	;'g'
   314  00107A  69                 	db	105	;'i'
   315  00107B  6E                 	db	110	;'n'
   316  00107C  67                 	db	103	;'g'
   317  00107D  0A                 	db	10
   318  00107E  0D                 	db	13
   319  00107F  00                 	db	0
   320  001080                     
   321                           ; BSR set to: 0
   322  001080  4C                 	db	76	;'L'
   323  001081  65                 	db	101	;'e'
   324  001082  64                 	db	100	;'d'
   325  001083  20                 	db	32
   326  001084  6F                 	db	111	;'o'
   327  001085  66                 	db	102	;'f'
   328  001086  66                 	db	102	;'f'
   329  001087  0D                 	db	13
   330  001088  0A                 	db	10
   331  001089  00                 	db	0
   332  00108A                     
   333                           ; BSR set to: 0
   334  00108A  4C                 	db	76	;'L'
   335  00108B  65                 	db	101	;'e'
   336  00108C  64                 	db	100	;'d'
   337  00108D  20                 	db	32
   338  00108E  6F                 	db	111	;'o'
   339  00108F  6E                 	db	110	;'n'
   340  001090  0D                 	db	13
   341  001091  0A                 	db	10
   342  001092  00                 	db	0
   343  001093                     STR_7:
   344                           
   345                           ; BSR set to: 0
   346  001093  73                 	db	115	;'s'
   347  001094  74                 	db	116	;'t'
   348  001095  61                 	db	97	;'a'
   349  001096  72                 	db	114	;'r'
   350  001097  74                 	db	116	;'t'
   351  001098  00                 	db	0
   352  001099                     STR_10:
   353                           
   354                           ; BSR set to: 0
   355  001099  73                 	db	115	;'s'
   356  00109A  74                 	db	116	;'t'
   357  00109B  6F                 	db	111	;'o'
   358  00109C  70                 	db	112	;'p'
   359  00109D  00                 	db	0
   360  00109E                     
   361                           ; BSR set to: 0
   362  00109E  3F                 	db	63	;'?'
   363  00109F  21                 	db	33
   364  0010A0  3F                 	db	63	;'?'
   365  0010A1  00                 	db	0
   366  0000                     
   367                           ; #config settings
   368  0010A2  00                 	db	0	; dummy byte at the end
   369  0000                     
   370                           	psect	cinit
   371  001B84                     __pcinit:
   372                           	opt callstack 0
   373  001B84                     start_initialization:
   374                           	opt callstack 0
   375  001B84                     __initialization:
   376                           	opt callstack 0
   377                           
   378                           ; Initialize objects allocated to BANK0 (29 bytes)
   379                           ; load TBLPTR registers with __pidataBANK0
   380  001B84  0E3C               	movlw	low __pidataBANK0
   381  001B86  6EF6               	movwf	tblptrl,c
   382  001B88  0E1D               	movlw	high __pidataBANK0
   383  001B8A  6EF7               	movwf	tblptrh,c
   384  001B8C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   385  001B8E  6EF8               	movwf	tblptru,c
   386  001B90  EE00  F0AC         	lfsr	0,__pdataBANK0
   387  001B94  EE10 F01D          	lfsr	1,29
   388  001B98                     copy_data0:
   389  001B98  0009               	tblrd		*+
   390  001B9A  CFF5 FFEE          	movff	tablat,postinc0
   391  001B9E  50E5               	movf	postdec1,w,c
   392  001BA0  50E1               	movf	fsr1l,w,c
   393  001BA2  E1FA               	bnz	copy_data0
   394                           
   395                           ; Clear objects allocated to BANK1 (192 bytes)
   396  001BA4  EE01  F000         	lfsr	0,__pbssBANK1
   397  001BA8  0EC0               	movlw	192
   398  001BAA                     clear_0:
   399  001BAA  6AEE               	clrf	postinc0,c
   400  001BAC  06E8               	decf	wreg,f,c
   401  001BAE  E1FD               	bnz	clear_0
   402                           
   403                           ; Clear objects allocated to BANK0 (76 bytes)
   404  001BB0  EE00  F060         	lfsr	0,__pbssBANK0
   405  001BB4  0E4C               	movlw	76
   406  001BB6                     clear_1:
   407  001BB6  6AEE               	clrf	postinc0,c
   408  001BB8  06E8               	decf	wreg,f,c
   409  001BBA  E1FD               	bnz	clear_1
   410                           
   411                           ; Clear objects allocated to COMRAM (4 bytes)
   412  001BBC  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   413  001BBE  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   414  001BC0  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   415  001BC2  6A57               	clrf	__pbssCOMRAM& (0+255),c
   416  001BC4                     end_of_initialization:
   417                           	opt callstack 0
   418  001BC4                     __end_of__initialization:
   419                           	opt callstack 0
   420  001BC4  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   421  001BC6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   422  001BC8  0100               	movlb	0
   423  001BCA  EF6F  F00D         	goto	_main	;jump to C main() function
   424                           
   425                           	psect	bssCOMRAM
   426  000057                     __pbssCOMRAM:
   427                           	opt callstack 0
   428  000057                     _flags:
   429                           	opt callstack 0
   430  000057                     	ds	2
   431  000059                     _eusart1RxTail:
   432                           	opt callstack 0
   433  000059                     	ds	1
   434  00005A                     _eusart1RxHead:
   435                           	opt callstack 0
   436  00005A                     	ds	1
   437                           
   438                           	psect	bssBANK0
   439  000060                     __pbssBANK0:
   440                           	opt callstack 0
   441  000060                     _nout:
   442                           	opt callstack 0
   443  000060                     	ds	2
   444  000062                     _width:
   445                           	opt callstack 0
   446  000062                     	ds	2
   447  000064                     _prec:
   448                           	opt callstack 0
   449  000064                     	ds	2
   450  000066                     _EUSART1_ErrorHandler:
   451                           	opt callstack 0
   452  000066                     	ds	2
   453  000068                     _EUSART1_OverrunErrorHandler:
   454                           	opt callstack 0
   455  000068                     	ds	2
   456  00006A                     _EUSART1_FramingErrorHandler:
   457                           	opt callstack 0
   458  00006A                     	ds	2
   459  00006C                     _EUSART1_RxDefaultInterruptHandler:
   460                           	opt callstack 0
   461  00006C                     	ds	2
   462  00006E                     _EUSART1_TxDefaultInterruptHandler:
   463                           	opt callstack 0
   464  00006E                     	ds	2
   465  000070                     _index:
   466                           	opt callstack 0
   467  000070                     	ds	1
   468  000071                     _tmp:
   469                           	opt callstack 0
   470  000071                     	ds	1
   471  000072                     _error:
   472                           	opt callstack 0
   473  000072                     	ds	1
   474  000073                     _eusart1RxLastError:
   475                           	opt callstack 0
   476  000073                     	ds	1
   477  000074                     _eusart1RxCount:
   478                           	opt callstack 0
   479  000074                     	ds	1
   480  000075                     _eusart1TxBufferRemaining:
   481                           	opt callstack 0
   482  000075                     	ds	1
   483  000076                     _eusart1TxTail:
   484                           	opt callstack 0
   485  000076                     	ds	1
   486  000077                     _eusart1TxHead:
   487                           	opt callstack 0
   488  000077                     	ds	1
   489  000078                     _dbuf:
   490                           	opt callstack 0
   491  000078                     	ds	32
   492  000098                     _string:
   493                           	opt callstack 0
   494  000098                     	ds	20
   495                           
   496                           	psect	dataBANK0
   497  0000AC                     __pdataBANK0:
   498                           	opt callstack 0
   499  0000AC                     _temp_string:
   500                           	opt callstack 0
   501  0000AC                     	ds	14
   502  0000BA                     stoa@F1139:
   503                           	opt callstack 0
   504  0000BA                     	ds	7
   505  0000C1                     _display_init:
   506                           	opt callstack 0
   507  0000C1                     	ds	4
   508  0000C5                     _debug:
   509                           	opt callstack 0
   510  0000C5                     	ds	1
   511  0000C6                     _temperature:
   512                           	opt callstack 0
   513  0000C6                     	ds	1
   514  0000C7                     _display_addr:
   515                           	opt callstack 0
   516  0000C7                     	ds	1
   517  0000C8                     _temperature_addr:
   518                           	opt callstack 0
   519  0000C8                     	ds	1
   520                           
   521                           	psect	bssBANK1
   522  000100                     __pbssBANK1:
   523                           	opt callstack 0
   524  000100                     _eusart1RxStatusBuffer:
   525                           	opt callstack 0
   526  000100                     	ds	64
   527  000140                     _eusart1RxBuffer:
   528                           	opt callstack 0
   529  000140                     	ds	64
   530  000180                     _eusart1TxBuffer:
   531                           	opt callstack 0
   532  000180                     	ds	64
   533                           
   534                           	psect	cstackBANK0
   535  0000C9                     __pcstackBANK0:
   536                           	opt callstack 0
   537  0000C9                     vfpfcnvrt@ll:
   538                           	opt callstack 0
   539                           
   540                           ; 8 bytes @ 0x0
   541  0000C9                     	ds	8
   542  0000D1                     vfpfcnvrt@cp:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x8
   546  0000D1                     	ds	2
   547  0000D3                     ?_vfprintf:
   548                           	opt callstack 0
   549  0000D3                     vfprintf@fp:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0xA
   553  0000D3                     	ds	2
   554  0000D5                     vfprintf@fmt:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0xC
   558  0000D5                     	ds	2
   559  0000D7                     vfprintf@ap:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0xE
   563  0000D7                     	ds	2
   564  0000D9                     ?_printf:
   565                           	opt callstack 0
   566  0000D9                     printf@fmt:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x10
   570  0000D9                     	ds	4
   571  0000DD                     i2c_write_serial@data:
   572                           	opt callstack 0
   573                           
   574                           ; 2 bytes @ 0x14
   575  0000DD                     	ds	2
   576  0000DF                     i2c_write_serial@length:
   577                           	opt callstack 0
   578                           
   579                           ; 1 bytes @ 0x16
   580  0000DF                     	ds	1
   581  0000E0                     ??_main:
   582                           
   583                           ; 1 bytes @ 0x17
   584  0000E0                     	ds	2
   585                           
   586                           	psect	cstackCOMRAM
   587  000001                     __pcstackCOMRAM:
   588                           	opt callstack 0
   589  000001                     ??_INTERRUPT_InterruptManager:
   590  000001                     
   591                           ; 1 bytes @ 0x0
   592  000001                     	ds	4
   593  000005                     ?_strlen:
   594                           	opt callstack 0
   595  000005                     ?___aodiv:
   596                           	opt callstack 0
   597  000005                     ?___aomod:
   598                           	opt callstack 0
   599  000005                     EUSART1_Write@txData:
   600                           	opt callstack 0
   601  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
   602                           	opt callstack 0
   603  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   604                           	opt callstack 0
   605  000005                     EUSART1_SetErrorHandler@interruptHandler:
   606                           	opt callstack 0
   607  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
   608                           	opt callstack 0
   609  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
   610                           	opt callstack 0
   611  000005                     strlen@s:
   612                           	opt callstack 0
   613  000005                     ___aodiv@dividend:
   614                           	opt callstack 0
   615  000005                     ___aomod@dividend:
   616                           	opt callstack 0
   617                           
   618                           ; 8 bytes @ 0x4
   619  000005                     	ds	1
   620  000006                     putch@txData:
   621                           	opt callstack 0
   622                           
   623                           ; 1 bytes @ 0x5
   624  000006                     	ds	1
   625  000007                     fputc@c:
   626                           	opt callstack 0
   627  000007                     strlen@a:
   628                           	opt callstack 0
   629                           
   630                           ; 2 bytes @ 0x6
   631  000007                     	ds	2
   632  000009                     fputc@fp:
   633                           	opt callstack 0
   634                           
   635                           ; 2 bytes @ 0x8
   636  000009                     	ds	2
   637  00000B                     ??_fputc:
   638                           
   639                           ; 1 bytes @ 0xA
   640  00000B                     	ds	2
   641  00000D                     ___aodiv@divisor:
   642                           	opt callstack 0
   643  00000D                     ___aomod@divisor:
   644                           	opt callstack 0
   645                           
   646                           ; 8 bytes @ 0xC
   647  00000D                     	ds	3
   648  000010                     ?_stoa:
   649                           	opt callstack 0
   650  000010                     stoa@fp:
   651                           	opt callstack 0
   652  000010                     fputs@s:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0xF
   656  000010                     	ds	2
   657  000012                     stoa@s:
   658                           	opt callstack 0
   659  000012                     fputs@fp:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0x11
   663  000012                     	ds	2
   664  000014                     ??_stoa:
   665  000014                     fputs@c:
   666                           	opt callstack 0
   667                           
   668                           ; 1 bytes @ 0x13
   669  000014                     	ds	1
   670  000015                     ___aodiv@counter:
   671                           	opt callstack 0
   672  000015                     ___aomod@counter:
   673                           	opt callstack 0
   674  000015                     fputs@i:
   675                           	opt callstack 0
   676  000015                     stoa@nuls:
   677                           	opt callstack 0
   678                           
   679                           ; 7 bytes @ 0x14
   680  000015                     	ds	1
   681  000016                     ___aodiv@sign:
   682                           	opt callstack 0
   683  000016                     ___aomod@sign:
   684                           	opt callstack 0
   685                           
   686                           ; 1 bytes @ 0x15
   687  000016                     	ds	1
   688  000017                     ?_abs:
   689                           	opt callstack 0
   690  000017                     ?_pad:
   691                           	opt callstack 0
   692  000017                     pad@fp:
   693                           	opt callstack 0
   694  000017                     abs@a:
   695                           	opt callstack 0
   696  000017                     ___aodiv@quotient:
   697                           	opt callstack 0
   698                           
   699                           ; 8 bytes @ 0x16
   700  000017                     	ds	2
   701  000019                     ??_abs:
   702  000019                     pad@buf:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0x18
   706  000019                     	ds	2
   707  00001B                     pad@p:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0x1A
   711  00001B                     	ds	1
   712  00001C                     stoa@i:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x1B
   716  00001C                     	ds	1
   717  00001D                     ??_pad:
   718                           
   719                           ; 1 bytes @ 0x1C
   720  00001D                     	ds	1
   721  00001E                     pad@i:
   722                           	opt callstack 0
   723  00001E                     stoa@w:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0x1D
   727  00001E                     	ds	2
   728  000020                     pad@w:
   729                           	opt callstack 0
   730  000020                     stoa@cp:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x1F
   734  000020                     	ds	2
   735  000022                     ?_dtoa:
   736                           	opt callstack 0
   737  000022                     dtoa@fp:
   738                           	opt callstack 0
   739  000022                     stoa@p:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x21
   743  000022                     	ds	2
   744  000024                     stoa@l:
   745                           	opt callstack 0
   746  000024                     dtoa@d:
   747                           	opt callstack 0
   748                           
   749                           ; 8 bytes @ 0x23
   750  000024                     	ds	8
   751  00002C                     ??_dtoa:
   752                           
   753                           ; 1 bytes @ 0x2B
   754  00002C                     	ds	8
   755  000034                     _dtoa$1077:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x33
   759  000034                     	ds	2
   760  000036                     dtoa@p:
   761                           	opt callstack 0
   762                           
   763                           ; 2 bytes @ 0x35
   764  000036                     	ds	2
   765  000038                     dtoa@w:
   766                           	opt callstack 0
   767                           
   768                           ; 2 bytes @ 0x37
   769  000038                     	ds	2
   770  00003A                     dtoa@s:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x39
   774  00003A                     	ds	2
   775  00003C                     dtoa@n:
   776                           	opt callstack 0
   777                           
   778                           ; 8 bytes @ 0x3B
   779  00003C                     	ds	8
   780  000044                     dtoa@i:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x43
   784  000044                     	ds	2
   785  000046                     ?_vfpfcnvrt:
   786                           	opt callstack 0
   787  000046                     vfpfcnvrt@fp:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0x45
   791  000046                     	ds	2
   792  000048                     vfpfcnvrt@fmt:
   793                           	opt callstack 0
   794                           
   795                           ; 2 bytes @ 0x47
   796  000048                     	ds	2
   797  00004A                     vfpfcnvrt@ap:
   798                           	opt callstack 0
   799                           
   800                           ; 2 bytes @ 0x49
   801  00004A                     	ds	2
   802  00004C                     ??_vfpfcnvrt:
   803                           
   804                           ; 1 bytes @ 0x4B
   805  00004C                     	ds	2
   806  00004E                     vfprintf@cfmt:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x4D
   810  00004E                     	ds	2
   811  000050                     
   812                           ; 1 bytes @ 0x4F
   813  000050                     	ds	2
   814  000052                     printf@ap:
   815                           	opt callstack 0
   816                           
   817                           ; 2 bytes @ 0x51
   818  000052                     	ds	2
   819  000054                     ??_i2c_write_serial:
   820                           
   821                           ; 1 bytes @ 0x53
   822  000054                     	ds	1
   823  000055                     i2c_write_serial@addr:
   824                           	opt callstack 0
   825                           
   826                           ; 1 bytes @ 0x54
   827  000055                     	ds	1
   828  000056                     i2c_write_serial@targetAddr:
   829                           	opt callstack 0
   830                           
   831                           ; 1 bytes @ 0x55
   832  000056                     	ds	1
   833                           
   834 ;;
   835 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   836 ;;
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 41 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;Total ram usage:        2 bytes
   858 ;; Hardware stack levels required when called:   14
   859 ;; This function calls:
   860 ;;		_EUSART1_Initialize
   861 ;;		_SYSTEM_Initialize
   862 ;;		_i2c_init
   863 ;;		_i2c_write_serial
   864 ;;		_printf
   865 ;; This function is called by:
   866 ;;		Startup code after reset
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text0
   871  001ADE                     __ptext0:
   872                           	opt callstack 0
   873  001ADE                     _main:
   874                           	opt callstack 17
   875                           
   876                           ;main.c: 44:     SYSTEM_Initialize();
   877                           
   878                           ;incstack = 0
   879  001ADE  ECB7  F00E         	call	_SYSTEM_Initialize	;wreg free
   880                           
   881                           ;main.c: 45:     (INTCONbits.GIE = 1);
   882  001AE2  8EF2               	bsf	4082,7,c	;volatile
   883                           
   884                           ;main.c: 46:     (INTCONbits.PEIE = 1);
   885  001AE4  8CF2               	bsf	4082,6,c	;volatile
   886                           
   887                           ;main.c: 47:     EUSART1_Initialize();
   888  001AE6  ECD2  F00C         	call	_EUSART1_Initialize	;wreg free
   889  001AEA  8A8A               	bsf	3978,5,c	;volatile
   890  001AEC                     l2676:
   891                           
   892                           ;main.c: 52:     {;main.c: 53:         i2c_init();
   893  001AEC  ECAD  F00E         	call	_i2c_init	;wreg free
   894                           
   895                           ;main.c: 60:         (debug)?printf("Debugging\n\r"):0;
   896  001AF0  0100               	movlb	0	; () banked
   897  001AF2  51C1               	movf	_display_init& (0+255),w,b
   898  001AF4  6FE0               	movwf	??_main& (0+255),b
   899  001AF6  6BE1               	clrf	(??_main+1)& (0+255),b
   900  001AF8  C0E0  F0DD         	movff	??_main,i2c_write_serial@data
   901  001AFC  C0E1  F0DE         	movff	??_main+1,i2c_write_serial@data+1
   902  001B00  0E04               	movlw	4
   903  001B02  6FDF               	movwf	i2c_write_serial@length& (0+255),b
   904  001B04  0E3C               	movlw	60
   905  001B06  EC9A  F00D         	call	_i2c_write_serial
   906  001B0A  0E74               	movlw	low STR_1
   907  001B0C  0100               	movlb	0	; () banked
   908  001B0E  6FD9               	movwf	printf@fmt& (0+255),b
   909  001B10  0E10               	movlw	high STR_1
   910  001B12  6FDA               	movwf	(printf@fmt+1)& (0+255),b
   911  001B14  EC79  F00E         	call	_printf	;wreg free
   912                           
   913                           ;main.c: 62:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   914  001B18  0E52               	movlw	82
   915  001B1A  0100               	movlb	0	; () banked
   916  001B1C  6FE1               	movwf	(??_main+1)& (0+255),b
   917  001B1E  0E2B               	movlw	43
   918  001B20  6FE0               	movwf	??_main& (0+255),b
   919  001B22  0E00               	movlw	0
   920  001B24                     u2727:
   921  001B24  2EE8               	decfsz	wreg,f,c
   922  001B26  D7FE               	bra	u2727
   923  001B28  2FE0               	decfsz	??_main& (0+255),f,b
   924  001B2A  D7FC               	bra	u2727
   925  001B2C  2FE1               	decfsz	(??_main+1)& (0+255),f,b
   926  001B2E  D7FA               	bra	u2727
   927  001B30  F000               	nop	
   928  001B32  D7DC               	goto	l2676
   929  001B34                     __end_of_main:
   930                           	opt callstack 0
   931                           
   932 ;; *************** function _i2c_write_serial *****************
   933 ;; Defined at:
   934 ;;		line 136 in file "main.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  addr            1    wreg     unsigned char 
   937 ;;  data            2   20[BANK0 ] PTR unsigned char 
   938 ;;		 -> RAM(3895), 
   939 ;;  length          1   22[BANK0 ] unsigned char 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  addr            1   84[COMRAM] unsigned char 
   942 ;;  targetAddr      1   85[COMRAM] unsigned char 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      unsigned char 
   945 ;; Registers used:
   946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   952 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;Total ram usage:        6 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:   13
   959 ;; This function calls:
   960 ;;		_printf
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text1
   967  001B34                     __ptext1:
   968                           	opt callstack 0
   969  001B34                     _i2c_write_serial:
   970                           	opt callstack 17
   971                           
   972                           ;incstack = 0
   973                           ;i2c_write_serial@addr stored from wreg
   974  001B34  6E55               	movwf	i2c_write_serial@addr,c
   975                           
   976                           ;main.c: 137:     uint8_t targetAddr = addr<<1;
   977  001B36  5055               	movf	i2c_write_serial@addr,w,c
   978  001B38  2455               	addwf	i2c_write_serial@addr,w,c
   979  001B3A  6E56               	movwf	i2c_write_serial@targetAddr,c
   980  001B3C                     l336:
   981  001B3C  B4C7               	btfsc	4039,2,c	;volatile
   982  001B3E  D7FE               	goto	l336
   983  001B40  CFC5 F054          	movff	4037,??_i2c_write_serial	;volatile
   984  001B44  0E1F               	movlw	31
   985  001B46  1654               	andwf	??_i2c_write_serial,f,c
   986  001B48  A4D8               	btfss	status,2,c
   987  001B4A  D7F8               	goto	l336
   988  001B4C  0E64               	movlw	low STR_3
   989  001B4E  0100               	movlb	0	; () banked
   990  001B50  6FD9               	movwf	printf@fmt& (0+255),b
   991  001B52  0E10               	movlw	high STR_3
   992  001B54  6FDA               	movwf	(printf@fmt+1)& (0+255),b
   993  001B56  EC79  F00E         	call	_printf	;wreg free
   994                           
   995                           ;main.c: 146:     (debug)?printf("Har sendt start\n\r"):0;
   996  001B5A  80C5               	bsf	4037,0,c	;volatile
   997  001B5C  0E52               	movlw	low STR_4
   998  001B5E  0100               	movlb	0	; () banked
   999  001B60  6FD9               	movwf	printf@fmt& (0+255),b
  1000  001B62  0E10               	movlw	high STR_4
  1001  001B64  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  1002  001B66  EC79  F00E         	call	_printf	;wreg free
  1003  001B6A  0E24               	movlw	low STR_5
  1004  001B6C  0100               	movlb	0	; () banked
  1005  001B6E  6FD9               	movwf	printf@fmt& (0+255),b
  1006  001B70  0E10               	movlw	high STR_5
  1007  001B72  6FDA               	movwf	(printf@fmt+1)& (0+255),b
  1008  001B74  C056  F0DB         	movff	i2c_write_serial@targetAddr,?_printf+2
  1009  001B78  6BDC               	clrf	(?_printf+3)& (0+255),b
  1010  001B7A  EC79  F00E         	call	_printf	;wreg free
  1011                           
  1012                           ;main.c: 149:     SSP1BUF = targetAddr;
  1013  001B7E  C056  FFC9         	movff	i2c_write_serial@targetAddr,4041	;volatile
  1014                           
  1015                           ;main.c: 162:     return 1;;	Return value of _i2c_write_serial is never used
  1016  001B82  0012               	return		;funcret
  1017  001B84                     __end_of_i2c_write_serial:
  1018                           	opt callstack 0
  1019                           
  1020 ;; *************** function _printf *****************
  1021 ;; Defined at:
  1022 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  fmt             2   16[BANK0 ] PTR const unsigned char 
  1025 ;;		 -> STR_13(4), STR_12(10), STR_9(9), STR_6(21), 
  1026 ;;		 -> STR_5(25), STR_4(18), STR_3(16), STR_2(35), 
  1027 ;;		 -> STR_1(12), 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  ap              2   81[COMRAM] PTR void [1]
  1030 ;;		 -> ?_printf(2), 
  1031 ;;  ret             2    0        int 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  2   16[BANK0 ] int 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1041 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;Total ram usage:        8 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:   12
  1048 ;; This function calls:
  1049 ;;		_vfprintf
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;;		_i2c_write_serial
  1053 ;;		_i2c_read_serial
  1054 ;;		_handleUSBCommand
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text2
  1059  001CF2                     __ptext2:
  1060                           	opt callstack 0
  1061  001CF2                     _printf:
  1062                           	opt callstack 18
  1063                           
  1064                           ;incstack = 0
  1065  001CF2  0EDB               	movlw	low (?_printf+2)
  1066  001CF4  6E52               	movwf	printf@ap,c
  1067  001CF6  0E00               	movlw	high (?_printf+2)
  1068  001CF8  6E53               	movwf	printf@ap+1,c
  1069  001CFA  0E00               	movlw	0
  1070  001CFC  0100               	movlb	0	; () banked
  1071  001CFE  6FD3               	movwf	vfprintf@fp& (0+255),b
  1072  001D00  0E00               	movlw	0
  1073  001D02  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
  1074  001D04  C0D9  F0D5         	movff	printf@fmt,vfprintf@fmt
  1075  001D08  C0DA  F0D6         	movff	printf@fmt+1,vfprintf@fmt+1
  1076  001D0C  0E52               	movlw	low printf@ap
  1077  001D0E  6FD7               	movwf	vfprintf@ap& (0+255),b
  1078  001D10  0E00               	movlw	high printf@ap
  1079  001D12  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  1080  001D14  EC43  F00D         	call	_vfprintf	;wreg free
  1081  001D18  0012               	return		;funcret
  1082  001D1A                     __end_of_printf:
  1083                           	opt callstack 0
  1084                           
  1085 ;; *************** function _vfprintf *****************
  1086 ;; Defined at:
  1087 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  1090 ;;		 -> NULL(0), 
  1091 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
  1092 ;;		 -> STR_13(4), STR_12(10), STR_9(9), STR_6(21), 
  1093 ;;		 -> STR_5(25), STR_4(18), STR_3(16), STR_2(35), 
  1094 ;;		 -> STR_1(12), 
  1095 ;;  ap              2   14[BANK0 ] PTR PTR void 
  1096 ;;		 -> printf@ap(2), 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1099 ;;		 -> STR_13(4), STR_12(10), STR_9(9), STR_6(21), 
  1100 ;;		 -> STR_5(25), STR_4(18), STR_3(16), STR_2(35), 
  1101 ;;		 -> STR_1(12), 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  2   10[BANK0 ] int 
  1104 ;; Registers used:
  1105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1111 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;Total ram usage:        8 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:   11
  1118 ;; This function calls:
  1119 ;;		_vfpfcnvrt
  1120 ;; This function is called by:
  1121 ;;		_printf
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text3
  1126  001A86                     __ptext3:
  1127                           	opt callstack 0
  1128  001A86                     _vfprintf:
  1129                           	opt callstack 18
  1130                           
  1131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1132                           
  1133                           ;incstack = 0
  1134  001A86  C0D5  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1135  001A8A  C0D6  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1136                           
  1137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1138  001A8E  0E00               	movlw	0
  1139  001A90  0100               	movlb	0	; () banked
  1140  001A92  6F61               	movwf	(_nout+1)& (0+255),b
  1141  001A94  0E00               	movlw	0
  1142  001A96  6F60               	movwf	_nout& (0+255),b
  1143                           
  1144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1145  001A98  D013               	goto	l2650
  1146  001A9A                     l2648:
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1150  001A9A  C0D3  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  1151  001A9E  C0D4  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1152  001AA2  0E4E               	movlw	low vfprintf@cfmt
  1153  001AA4  6E48               	movwf	vfpfcnvrt@fmt,c
  1154  001AA6  0E00               	movlw	high vfprintf@cfmt
  1155  001AA8  6E49               	movwf	vfpfcnvrt@fmt+1,c
  1156  001AAA  C0D7  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  1157  001AAE  C0D8  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1158  001AB2  EC73  F009         	call	_vfpfcnvrt	;wreg free
  1159  001AB6  5046               	movf	?_vfpfcnvrt,w,c
  1160  001AB8  0100               	movlb	0	; () banked
  1161  001ABA  2760               	addwf	_nout& (0+255),f,b
  1162  001ABC  5047               	movf	?_vfpfcnvrt+1,w,c
  1163  001ABE  2361               	addwfc	(_nout+1)& (0+255),f,b
  1164  001AC0                     l2650:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1168  001AC0  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1169  001AC4  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1170  001AC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1171  001AC8  6AF8               	clrf	tblptru,c
  1172  001ACA                     	endif
  1173  001ACA                     	if	0	;tblptru may be non-zero
  1174  001ACA                     	endif
  1175  001ACA  0008               	tblrd		*
  1176  001ACC  50F5               	movf	tablat,w,c
  1177  001ACE  0900               	iorlw	0
  1178  001AD0  A4D8               	btfss	status,2,c
  1179  001AD2  D7E3               	goto	l2648
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1183  001AD4  C060  F0D3         	movff	_nout,?_vfprintf
  1184  001AD8  C061  F0D4         	movff	_nout+1,?_vfprintf+1
  1185                           
  1186                           ; BSR set to: 0
  1187  001ADC  0012               	return		;funcret
  1188  001ADE                     __end_of_vfprintf:
  1189                           	opt callstack 0
  1190                           
  1191 ;; *************** function _vfpfcnvrt *****************
  1192 ;; Defined at:
  1193 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  1196 ;;		 -> NULL(0), 
  1197 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  1198 ;;		 -> vfprintf@cfmt(2), 
  1199 ;;  ap              2   73[COMRAM] PTR PTR void 
  1200 ;;		 -> printf@ap(2), 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  ll              8    0[BANK0 ] long long 
  1203 ;;  llu             8    0        unsigned long long 
  1204 ;;  f               4    0        unsigned long long 
  1205 ;;  vp              3    0        PTR void 
  1206 ;;  ct              3    0        unsigned char [3]
  1207 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  1208 ;;		 -> ?_printf(2), 
  1209 ;;  i               2    0        int 
  1210 ;;  done            2    0        int 
  1211 ;;  c               1    0        unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  2   69[COMRAM] int 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1221 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;Total ram usage:       18 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:   10
  1228 ;; This function calls:
  1229 ;;		_dtoa
  1230 ;;		_fputc
  1231 ;;		_stoa
  1232 ;; This function is called by:
  1233 ;;		_vfprintf
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text4
  1238  0012E6                     __ptext4:
  1239                           	opt callstack 0
  1240  0012E6                     _vfpfcnvrt:
  1241                           	opt callstack 18
  1242                           
  1243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;incstack = 0
  1247  0012E6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1248  0012EA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1249  0012EE  CFDE FFF6          	movff	postinc2,tblptrl
  1250  0012F2  CFDD FFF7          	movff	postdec2,tblptrh
  1251  0012F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1252  0012F6  6AF8               	clrf	tblptru,c
  1253  0012F8                     	endif
  1254  0012F8                     	if	0	;tblptru may be non-zero
  1255  0012F8                     	endif
  1256  0012F8  0008               	tblrd		*
  1257  0012FA  50F5               	movf	tablat,w,c
  1258  0012FC  0A25               	xorlw	37
  1259  0012FE  A4D8               	btfss	status,2,c
  1260  001300  D0D5               	goto	l2636
  1261                           
  1262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1263  001302  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1264  001306  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1265  00130A  2ADE               	incf	postinc2,f,c
  1266  00130C  0E00               	movlw	0
  1267  00130E  22DD               	addwfc	postdec2,f,c
  1268                           
  1269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1270  001310  0E00               	movlw	0
  1271  001312  0100               	movlb	0	; () banked
  1272  001314  6F63               	movwf	(_width+1)& (0+255),b
  1273  001316  0E00               	movlw	0
  1274  001318  6F62               	movwf	_width& (0+255),b
  1275  00131A  C062  F057         	movff	_width,_flags
  1276  00131E  C063  F058         	movff	_width+1,_flags+1
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1280  001322  6964               	setf	_prec& (0+255),b
  1281  001324  6965               	setf	(_prec+1)& (0+255),b
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1285  001326  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1286  00132A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1287  00132E  CFDE FFF6          	movff	postinc2,tblptrl
  1288  001332  CFDD FFF7          	movff	postdec2,tblptrh
  1289  001336                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1290  001336  6AF8               	clrf	tblptru,c
  1291  001338                     	endif
  1292  001338                     	if	0	;tblptru may be non-zero
  1293  001338                     	endif
  1294  001338  0008               	tblrd		*
  1295  00133A  50F5               	movf	tablat,w,c
  1296  00133C  0A64               	xorlw	100
  1297  00133E  B4D8               	btfsc	status,2,c
  1298  001340  D00E               	goto	u2500
  1299                           
  1300                           ; BSR set to: 0
  1301  001342  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1302  001346  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1303  00134A  CFDE FFF6          	movff	postinc2,tblptrl
  1304  00134E  CFDD FFF7          	movff	postdec2,tblptrh
  1305  001352                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1306  001352  6AF8               	clrf	tblptru,c
  1307  001354                     	endif
  1308  001354                     	if	0	;tblptru may be non-zero
  1309  001354                     	endif
  1310  001354  0008               	tblrd		*
  1311  001356  50F5               	movf	tablat,w,c
  1312  001358  0A69               	xorlw	105
  1313  00135A  A4D8               	btfss	status,2,c
  1314  00135C  D03F               	goto	l2612
  1315  00135E                     u2500:
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1319  00135E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1320  001362  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1321  001366  2ADE               	incf	postinc2,f,c
  1322  001368  0E00               	movlw	0
  1323  00136A  22DD               	addwfc	postdec2,f,c
  1324                           
  1325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1326  00136C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1327  001370  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1328  001374  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1329  001378  0E02               	movlw	2
  1330  00137A  26DE               	addwf	postinc2,f,c
  1331  00137C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1332  001380  0E00               	movlw	0
  1333  001382  22DD               	addwfc	postdec2,f,c
  1334  001384  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1335  001388  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1336  00138C  CFDE F0C9          	movff	postinc2,vfpfcnvrt@ll
  1337  001390  CFDD F0CA          	movff	postdec2,vfpfcnvrt@ll+1
  1338  001394  0E00               	movlw	0
  1339  001396  BFCA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1340  001398  0EFF               	movlw	-1
  1341  00139A  6FCB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1342  00139C  6FCC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1343  00139E  6FCD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1344  0013A0  6FCE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1345  0013A2  6FCF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1346  0013A4  6FD0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1350  0013A6  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  1351  0013AA  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1352  0013AE  C0C9  F024         	movff	vfpfcnvrt@ll,dtoa@d
  1353  0013B2  C0CA  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1354  0013B6  C0CB  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1355  0013BA  C0CC  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1356  0013BE  C0CD  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1357  0013C2  C0CE  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1358  0013C6  C0CF  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1359  0013CA  C0D0  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1360  0013CE  EC52  F008         	call	_dtoa	;wreg free
  1361  0013D2  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  1362  0013D6  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1363  0013DA  0012               	return	
  1364  0013DC                     l2612:
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  1368  0013DC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1369  0013E0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1370  0013E4  CFDE FFF6          	movff	postinc2,tblptrl
  1371  0013E8  CFDD FFF7          	movff	postdec2,tblptrh
  1372  0013EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1373  0013EC  6AF8               	clrf	tblptru,c
  1374  0013EE                     	endif
  1375  0013EE                     	if	0	;tblptru may be non-zero
  1376  0013EE                     	endif
  1377  0013EE  0008               	tblrd		*
  1378  0013F0  50F5               	movf	tablat,w,c
  1379  0013F2  0A73               	xorlw	115
  1380  0013F4  A4D8               	btfss	status,2,c
  1381  0013F6  D02A               	goto	l2620
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  1385  0013F8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1386  0013FC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1387  001400  2ADE               	incf	postinc2,f,c
  1388  001402  0E00               	movlw	0
  1389  001404  22DD               	addwfc	postdec2,f,c
  1390                           
  1391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  1392  001406  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1393  00140A  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1394  00140E  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1395  001412  0E02               	movlw	2
  1396  001414  26DE               	addwf	postinc2,f,c
  1397  001416  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1398  00141A  0E00               	movlw	0
  1399  00141C  22DD               	addwfc	postdec2,f,c
  1400  00141E  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1401  001422  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1402  001426  CFDE F0D1          	movff	postinc2,vfpfcnvrt@cp
  1403  00142A  CFDD F0D2          	movff	postdec2,vfpfcnvrt@cp+1
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  1407  00142E  C046  F010         	movff	vfpfcnvrt@fp,stoa@fp
  1408  001432  C047  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  1409  001436  C0D1  F012         	movff	vfpfcnvrt@cp,stoa@s
  1410  00143A  C0D2  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  1411  00143E  EC15  F00B         	call	_stoa	;wreg free
  1412  001442  C010  F046         	movff	?_stoa,?_vfpfcnvrt
  1413  001446  C011  F047         	movff	?_stoa+1,?_vfpfcnvrt+1
  1414  00144A  0012               	return	
  1415  00144C                     l2620:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1419  00144C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1420  001450  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1421  001454  CFDE FFF6          	movff	postinc2,tblptrl
  1422  001458  CFDD FFF7          	movff	postdec2,tblptrh
  1423  00145C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1424  00145C  6AF8               	clrf	tblptru,c
  1425  00145E                     	endif
  1426  00145E                     	if	0	;tblptru may be non-zero
  1427  00145E                     	endif
  1428  00145E  0008               	tblrd		*
  1429  001460  50F5               	movf	tablat,w,c
  1430  001462  0A25               	xorlw	37
  1431  001464  A4D8               	btfss	status,2,c
  1432  001466  D016               	goto	l2630
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1436  001468  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1437  00146C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1438  001470  2ADE               	incf	postinc2,f,c
  1439  001472  0E00               	movlw	0
  1440  001474  22DD               	addwfc	postdec2,f,c
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1444  001476  0E00               	movlw	0
  1445  001478  6E08               	movwf	fputc@c+1,c
  1446  00147A  0E25               	movlw	37
  1447  00147C  6E07               	movwf	fputc@c,c
  1448  00147E  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1449  001482  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1450  001486  EC0D  F00D         	call	_fputc	;wreg free
  1451  00148A                     l2626:
  1452                           
  1453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1454  00148A  0E00               	movlw	0
  1455  00148C  6E47               	movwf	?_vfpfcnvrt+1,c
  1456  00148E  0E01               	movlw	1
  1457  001490  6E46               	movwf	?_vfpfcnvrt,c
  1458  001492  0012               	return	
  1459  001494                     l2630:
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1463  001494  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1464  001498  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1465  00149C  2ADE               	incf	postinc2,f,c
  1466  00149E  0E00               	movlw	0
  1467  0014A0  22DD               	addwfc	postdec2,f,c
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1471  0014A2  0E00               	movlw	0
  1472  0014A4  6E47               	movwf	?_vfpfcnvrt+1,c
  1473  0014A6  0E00               	movlw	0
  1474  0014A8  6E46               	movwf	?_vfpfcnvrt,c
  1475  0014AA  0012               	return	
  1476  0014AC                     l2636:
  1477                           
  1478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1479  0014AC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1480  0014B0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1481  0014B4  CFDE FFF6          	movff	postinc2,tblptrl
  1482  0014B8  CFDD FFF7          	movff	postdec2,tblptrh
  1483  0014BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1484  0014BC  6AF8               	clrf	tblptru,c
  1485  0014BE                     	endif
  1486  0014BE                     	if	0	;tblptru may be non-zero
  1487  0014BE                     	endif
  1488  0014BE  0008               	tblrd		*
  1489  0014C0  50F5               	movf	tablat,w,c
  1490  0014C2  6E07               	movwf	fputc@c,c
  1491  0014C4  6A08               	clrf	fputc@c+1,c
  1492  0014C6  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1493  0014CA  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1494  0014CE  EC0D  F00D         	call	_fputc	;wreg free
  1495                           
  1496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1497  0014D2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1498  0014D6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1499  0014DA  2ADE               	incf	postinc2,f,c
  1500  0014DC  0E00               	movlw	0
  1501  0014DE  22DD               	addwfc	postdec2,f,c
  1502  0014E0  D7D4               	goto	l2626
  1503  0014E2                     __end_of_vfpfcnvrt:
  1504                           	opt callstack 0
  1505                           
  1506 ;; *************** function _stoa *****************
  1507 ;; Defined at:
  1508 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1511 ;;		 -> NULL(0), 
  1512 ;;  s               2   17[COMRAM] PTR unsigned char 
  1513 ;;		 -> ?_printf(2), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  nuls            7   20[COMRAM] unsigned char [7]
  1516 ;;  l               2   35[COMRAM] int 
  1517 ;;  p               2   33[COMRAM] int 
  1518 ;;  cp              2   31[COMRAM] PTR unsigned char 
  1519 ;;		 -> ?_printf(2), stoa@nuls(7), 
  1520 ;;  w               2   29[COMRAM] int 
  1521 ;;  i               2   27[COMRAM] int 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2   15[COMRAM] int 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;Total ram usage:       22 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    7
  1538 ;; This function calls:
  1539 ;;		_fputc
  1540 ;;		_strlen
  1541 ;; This function is called by:
  1542 ;;		_vfpfcnvrt
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text5
  1547  00162A                     __ptext5:
  1548                           	opt callstack 0
  1549  00162A                     _stoa:
  1550                           	opt callstack 20
  1551                           
  1552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  1553                           
  1554                           ;incstack = 0
  1555  00162A  EE20  F0BA         	lfsr	2,stoa@F1139
  1556  00162E  EE10  F015         	lfsr	1,stoa@nuls
  1557  001632  0E06               	movlw	6
  1558  001634                     u2391:
  1559  001634  CFDB FFE3          	movff	plusw2,plusw1
  1560  001638  06E8               	decf	wreg,f,c
  1561  00163A  E2FC               	bc	u2391
  1562                           
  1563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  1564  00163C  C012  F020         	movff	stoa@s,stoa@cp
  1565  001640  C013  F021         	movff	stoa@s+1,stoa@cp+1
  1566                           
  1567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  1568  001644  5020               	movf	stoa@cp,w,c
  1569  001646  1021               	iorwf	stoa@cp+1,w,c
  1570  001648  A4D8               	btfss	status,2,c
  1571  00164A  D004               	goto	l2560
  1572                           
  1573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  1574  00164C  0E15               	movlw	low stoa@nuls
  1575  00164E  6E20               	movwf	stoa@cp,c
  1576  001650  0E00               	movlw	high stoa@nuls
  1577  001652  6E21               	movwf	stoa@cp+1,c
  1578  001654                     l2560:
  1579                           
  1580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  1581  001654  C020  F005         	movff	stoa@cp,strlen@s
  1582  001658  C021  F006         	movff	stoa@cp+1,strlen@s+1
  1583  00165C  EC64  F00E         	call	_strlen	;wreg free
  1584  001660  C005  F024         	movff	?_strlen,stoa@l
  1585  001664  C006  F025         	movff	?_strlen+1,stoa@l+1
  1586                           
  1587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  1588  001668  C064  F022         	movff	_prec,stoa@p
  1589  00166C  C065  F023         	movff	_prec+1,stoa@p+1
  1590                           
  1591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  1592  001670  BE23               	btfsc	stoa@p+1,7,c
  1593  001672  D00E               	goto	l443
  1594  001674  5024               	movf	stoa@l,w,c
  1595  001676  5C22               	subwf	stoa@p,w,c
  1596  001678  5023               	movf	stoa@p+1,w,c
  1597  00167A  0A80               	xorlw	128
  1598  00167C  6E14               	movwf	??_stoa& (0+255),c
  1599  00167E  5025               	movf	stoa@l+1,w,c
  1600  001680  0A80               	xorlw	128
  1601  001682  5814               	subwfb	??_stoa& (0+255),w,c
  1602  001684  B0D8               	btfsc	status,0,c
  1603  001686  D004               	goto	l443
  1604  001688  C022  F024         	movff	stoa@p,stoa@l
  1605  00168C  C023  F025         	movff	stoa@p+1,stoa@l+1
  1606  001690                     l443:
  1607                           
  1608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  1609  001690  C024  F022         	movff	stoa@l,stoa@p
  1610  001694  C025  F023         	movff	stoa@l+1,stoa@p+1
  1611                           
  1612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  1613  001698  C062  F01E         	movff	_width,stoa@w
  1614  00169C  C063  F01F         	movff	_width+1,stoa@w+1
  1615                           
  1616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  1617  0016A0  A057               	btfss	_flags,0,c
  1618  0016A2  D00D               	goto	l2574
  1619  0016A4  D016               	goto	u2440
  1620  0016A6                     l2570:
  1621                           
  1622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  1623  0016A6  0E00               	movlw	0
  1624  0016A8  6E08               	movwf	fputc@c+1,c
  1625  0016AA  0E20               	movlw	32
  1626  0016AC  6E07               	movwf	fputc@c,c
  1627  0016AE  C010  F009         	movff	stoa@fp,fputc@fp
  1628  0016B2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  1629  0016B6  EC0D  F00D         	call	_fputc	;wreg free
  1630                           
  1631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  1632  0016BA  4A24               	infsnz	stoa@l,f,c
  1633  0016BC  2A25               	incf	stoa@l+1,f,c
  1634  0016BE                     l2574:
  1635                           
  1636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  1637  0016BE  501E               	movf	stoa@w,w,c
  1638  0016C0  5C24               	subwf	stoa@l,w,c
  1639  0016C2  5025               	movf	stoa@l+1,w,c
  1640  0016C4  0A80               	xorlw	128
  1641  0016C6  6E14               	movwf	??_stoa& (0+255),c
  1642  0016C8  501F               	movf	stoa@w+1,w,c
  1643  0016CA  0A80               	xorlw	128
  1644  0016CC  5814               	subwfb	??_stoa& (0+255),w,c
  1645  0016CE  A0D8               	btfss	status,0,c
  1646  0016D0  D7EA               	goto	l2570
  1647  0016D2                     u2440:
  1648                           
  1649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  1650  0016D2  0E00               	movlw	0
  1651  0016D4  6E1D               	movwf	stoa@i+1,c
  1652  0016D6  0E00               	movlw	0
  1653  0016D8  6E1C               	movwf	stoa@i,c
  1654                           
  1655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  1656  0016DA  D013               	goto	l2584
  1657  0016DC                     l2578:
  1658                           
  1659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  1660  0016DC  C020  FFD9         	movff	stoa@cp,fsr2l
  1661  0016E0  C021  FFDA         	movff	stoa@cp+1,fsr2h
  1662  0016E4  50DF               	movf	indf2,w,c
  1663  0016E6  6E14               	movwf	??_stoa& (0+255),c
  1664  0016E8  5014               	movf	??_stoa,w,c
  1665  0016EA  6E07               	movwf	fputc@c,c
  1666  0016EC  6A08               	clrf	fputc@c+1,c
  1667  0016EE  C010  F009         	movff	stoa@fp,fputc@fp
  1668  0016F2  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  1669  0016F6  EC0D  F00D         	call	_fputc	;wreg free
  1670                           
  1671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  1672  0016FA  4A20               	infsnz	stoa@cp,f,c
  1673  0016FC  2A21               	incf	stoa@cp+1,f,c
  1674                           
  1675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  1676  0016FE  4A1C               	infsnz	stoa@i,f,c
  1677  001700  2A1D               	incf	stoa@i+1,f,c
  1678  001702                     l2584:
  1679                           
  1680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  1681  001702  5022               	movf	stoa@p,w,c
  1682  001704  5C1C               	subwf	stoa@i,w,c
  1683  001706  501D               	movf	stoa@i+1,w,c
  1684  001708  0A80               	xorlw	128
  1685  00170A  6E14               	movwf	??_stoa& (0+255),c
  1686  00170C  5023               	movf	stoa@p+1,w,c
  1687  00170E  0A80               	xorlw	128
  1688  001710  5814               	subwfb	??_stoa& (0+255),w,c
  1689  001712  A0D8               	btfss	status,0,c
  1690  001714  D7E3               	goto	l2578
  1691                           
  1692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  1693  001716  B057               	btfsc	_flags,0,c
  1694  001718  D00D               	goto	l2592
  1695  00171A  D016               	goto	u2470
  1696  00171C                     l2588:
  1697                           
  1698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  1699  00171C  0E00               	movlw	0
  1700  00171E  6E08               	movwf	fputc@c+1,c
  1701  001720  0E20               	movlw	32
  1702  001722  6E07               	movwf	fputc@c,c
  1703  001724  C010  F009         	movff	stoa@fp,fputc@fp
  1704  001728  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  1705  00172C  EC0D  F00D         	call	_fputc	;wreg free
  1706                           
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  1708  001730  4A24               	infsnz	stoa@l,f,c
  1709  001732  2A25               	incf	stoa@l+1,f,c
  1710  001734                     l2592:
  1711                           
  1712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  1713  001734  501E               	movf	stoa@w,w,c
  1714  001736  5C24               	subwf	stoa@l,w,c
  1715  001738  5025               	movf	stoa@l+1,w,c
  1716  00173A  0A80               	xorlw	128
  1717  00173C  6E14               	movwf	??_stoa& (0+255),c
  1718  00173E  501F               	movf	stoa@w+1,w,c
  1719  001740  0A80               	xorlw	128
  1720  001742  5814               	subwfb	??_stoa& (0+255),w,c
  1721  001744  A0D8               	btfss	status,0,c
  1722  001746  D7EA               	goto	l2588
  1723  001748                     u2470:
  1724                           
  1725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  1726                           
  1727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  1728  001748  C024  F010         	movff	stoa@l,?_stoa
  1729  00174C  C025  F011         	movff	stoa@l+1,?_stoa+1
  1730  001750  0012               	return		;funcret
  1731  001752                     __end_of_stoa:
  1732                           	opt callstack 0
  1733                           
  1734 ;; *************** function _dtoa *****************
  1735 ;; Defined at:
  1736 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1739 ;;		 -> NULL(0), 
  1740 ;;  d               8   35[COMRAM] long long 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  n               8   59[COMRAM] long long 
  1743 ;;  i               2   67[COMRAM] int 
  1744 ;;  s               2   57[COMRAM] int 
  1745 ;;  w               2   55[COMRAM] int 
  1746 ;;  p               2   53[COMRAM] int 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  2   33[COMRAM] int 
  1749 ;; Registers used:
  1750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:       36 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    9
  1763 ;; This function calls:
  1764 ;;		___aodiv
  1765 ;;		___aomod
  1766 ;;		_abs
  1767 ;;		_pad
  1768 ;; This function is called by:
  1769 ;;		_vfpfcnvrt
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text6
  1774  0010A4                     __ptext6:
  1775                           	opt callstack 0
  1776  0010A4                     _dtoa:
  1777                           	opt callstack 18
  1778                           
  1779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1780                           
  1781                           ;incstack = 0
  1782  0010A4  C024  F03C         	movff	dtoa@d,dtoa@n
  1783  0010A8  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  1784  0010AC  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  1785  0010B0  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  1786  0010B4  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  1787  0010B8  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  1788  0010BC  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  1789  0010C0  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  1790                           
  1791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1792  0010C4  AE43               	btfss	dtoa@n+7,7,c
  1793  0010C6  D002               	goto	u2240
  1794  0010C8  0E01               	movlw	1
  1795  0010CA  D001               	goto	u2250
  1796  0010CC                     u2240:
  1797  0010CC  0E00               	movlw	0
  1798  0010CE                     u2250:
  1799  0010CE  6E3A               	movwf	dtoa@s,c
  1800  0010D0  6A3B               	clrf	dtoa@s+1,c
  1801                           
  1802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1803  0010D2  503A               	movf	dtoa@s,w,c
  1804  0010D4  103B               	iorwf	dtoa@s+1,w,c
  1805  0010D6  B4D8               	btfsc	status,2,c
  1806  0010D8  D010               	goto	l2496
  1807                           
  1808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1809  0010DA  1E43               	comf	dtoa@n+7,f,c
  1810  0010DC  1E42               	comf	dtoa@n+6,f,c
  1811  0010DE  1E41               	comf	dtoa@n+5,f,c
  1812  0010E0  1E40               	comf	dtoa@n+4,f,c
  1813  0010E2  1E3F               	comf	dtoa@n+3,f,c
  1814  0010E4  1E3E               	comf	dtoa@n+2,f,c
  1815  0010E6  1E3D               	comf	dtoa@n+1,f,c
  1816  0010E8  6C3C               	negf	dtoa@n,c
  1817  0010EA  0E00               	movlw	0
  1818  0010EC  223D               	addwfc	dtoa@n+1,f,c
  1819  0010EE  223E               	addwfc	dtoa@n+2,f,c
  1820  0010F0  223F               	addwfc	dtoa@n+3,f,c
  1821  0010F2  2240               	addwfc	dtoa@n+4,f,c
  1822  0010F4  2241               	addwfc	dtoa@n+5,f,c
  1823  0010F6  2242               	addwfc	dtoa@n+6,f,c
  1824  0010F8  2243               	addwfc	dtoa@n+7,f,c
  1825  0010FA                     l2496:
  1826                           
  1827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1828  0010FA  0100               	movlb	0	; () banked
  1829  0010FC  AF65               	btfss	(_prec+1)& (0+255),7,b
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1833  0010FE  9257               	bcf	_flags,1,c
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1837  001100  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1838  001102  D005               	goto	u2280
  1839  001104  5165               	movf	(_prec+1)& (0+255),w,b
  1840  001106  E108               	bnz	l414
  1841  001108  0564               	decf	_prec& (0+255),w,b
  1842  00110A  B0D8               	btfsc	status,0,c
  1843  00110C  D005               	goto	l414
  1844  00110E                     u2280:
  1845                           
  1846                           ; BSR set to: 0
  1847  00110E  0E00               	movlw	0
  1848  001110  6E37               	movwf	dtoa@p+1,c
  1849  001112  0E01               	movlw	1
  1850  001114  6E36               	movwf	dtoa@p,c
  1851  001116  D004               	goto	l416
  1852  001118                     l414:
  1853                           
  1854                           ; BSR set to: 0
  1855  001118  C064  F036         	movff	_prec,dtoa@p
  1856  00111C  C065  F037         	movff	_prec+1,dtoa@p+1
  1857  001120                     l416:
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1861  001120  C062  F038         	movff	_width,dtoa@w
  1862  001124  C063  F039         	movff	_width+1,dtoa@w+1
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1866  001128  503A               	movf	dtoa@s,w,c
  1867  00112A  103B               	iorwf	dtoa@s+1,w,c
  1868  00112C  A4D8               	btfss	status,2,c
  1869  00112E  D002               	goto	u2300
  1870                           
  1871                           ; BSR set to: 0
  1872  001130  A457               	btfss	_flags,2,c
  1873  001132  D003               	goto	l2510
  1874  001134                     u2300:
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1878  001134  0638               	decf	dtoa@w,f,c
  1879  001136  A0D8               	btfss	status,0,c
  1880  001138  0639               	decf	dtoa@w+1,f,c
  1881  00113A                     l2510:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1885  00113A  0E00               	movlw	0
  1886  00113C  6E45               	movwf	dtoa@i+1,c
  1887  00113E  0E1F               	movlw	31
  1888  001140  6E44               	movwf	dtoa@i,c
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1892  001142  0E00               	movlw	0
  1893  001144  6F97               	movwf	(_dbuf+31)& (0+255),b
  1894                           
  1895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1896  001146  D07C               	goto	l2524
  1897  001148                     l2514:
  1898                           
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1900  001148  0644               	decf	dtoa@i,f,c
  1901  00114A  A0D8               	btfss	status,0,c
  1902  00114C  0645               	decf	dtoa@i+1,f,c
  1903                           
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1905  00114E  0E78               	movlw	low _dbuf
  1906  001150  2444               	addwf	dtoa@i,w,c
  1907  001152  6ED9               	movwf	fsr2l,c
  1908  001154  0E00               	movlw	high _dbuf
  1909  001156  2045               	addwfc	dtoa@i+1,w,c
  1910  001158  6EDA               	movwf	fsr2h,c
  1911  00115A  C03C  F005         	movff	dtoa@n,___aomod@dividend
  1912  00115E  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1913  001162  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1914  001166  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1915  00116A  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1916  00116E  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1917  001172  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1918  001176  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1919  00117A  0E0A               	movlw	10
  1920  00117C  6E0D               	movwf	___aomod@divisor,c
  1921  00117E  0E00               	movlw	0
  1922  001180  6E0E               	movwf	___aomod@divisor+1,c
  1923  001182  0E00               	movlw	0
  1924  001184  6E0F               	movwf	___aomod@divisor+2,c
  1925  001186  0E00               	movlw	0
  1926  001188  6E10               	movwf	___aomod@divisor+3,c
  1927  00118A  0E00               	movlw	0
  1928  00118C  6E11               	movwf	___aomod@divisor+4,c
  1929  00118E  0E00               	movlw	0
  1930  001190  6E12               	movwf	___aomod@divisor+5,c
  1931  001192  0E00               	movlw	0
  1932  001194  6E13               	movwf	___aomod@divisor+6,c
  1933  001196  0E00               	movlw	0
  1934  001198  6E14               	movwf	___aomod@divisor+7,c
  1935  00119A  ECA9  F00B         	call	___aomod	;wreg free
  1936  00119E  C005  F02C         	movff	?___aomod,??_dtoa
  1937  0011A2  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  1938  0011A6  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  1939  0011AA  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  1940  0011AE  C009  F030         	movff	?___aomod+4,??_dtoa+4
  1941  0011B2  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  1942  0011B6  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  1943  0011BA  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  1944  0011BE  C02C  F017         	movff	??_dtoa,abs@a
  1945  0011C2  C02E  F018         	movff	??_dtoa+2,abs@a+1
  1946  0011C6  EC1F  F00E         	call	_abs	;wreg free
  1947  0011CA  5017               	movf	?_abs,w,c
  1948  0011CC  0F30               	addlw	48
  1949  0011CE  6EDF               	movwf	indf2,c
  1950                           
  1951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1952  0011D0  0636               	decf	dtoa@p,f,c
  1953  0011D2  A0D8               	btfss	status,0,c
  1954  0011D4  0637               	decf	dtoa@p+1,f,c
  1955                           
  1956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1957  0011D6  0638               	decf	dtoa@w,f,c
  1958  0011D8  A0D8               	btfss	status,0,c
  1959  0011DA  0639               	decf	dtoa@w+1,f,c
  1960                           
  1961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1962  0011DC  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  1963  0011E0  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1964  0011E4  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1965  0011E8  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1966  0011EC  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1967  0011F0  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1968  0011F4  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1969  0011F8  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1970  0011FC  0E0A               	movlw	10
  1971  0011FE  6E0D               	movwf	___aodiv@divisor,c
  1972  001200  0E00               	movlw	0
  1973  001202  6E0E               	movwf	___aodiv@divisor+1,c
  1974  001204  0E00               	movlw	0
  1975  001206  6E0F               	movwf	___aodiv@divisor+2,c
  1976  001208  0E00               	movlw	0
  1977  00120A  6E10               	movwf	___aodiv@divisor+3,c
  1978  00120C  0E00               	movlw	0
  1979  00120E  6E11               	movwf	___aodiv@divisor+4,c
  1980  001210  0E00               	movlw	0
  1981  001212  6E12               	movwf	___aodiv@divisor+5,c
  1982  001214  0E00               	movlw	0
  1983  001216  6E13               	movwf	___aodiv@divisor+6,c
  1984  001218  0E00               	movlw	0
  1985  00121A  6E14               	movwf	___aodiv@divisor+7,c
  1986  00121C  EC71  F00A         	call	___aodiv	;wreg free
  1987  001220  C005  F03C         	movff	?___aodiv,dtoa@n
  1988  001224  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  1989  001228  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  1990  00122C  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  1991  001230  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  1992  001234  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  1993  001238  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  1994  00123C  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  1995  001240                     l2524:
  1996                           
  1997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1998  001240  BE45               	btfsc	dtoa@i+1,7,c
  1999  001242  D01F               	goto	u2350
  2000  001244  5045               	movf	dtoa@i+1,w,c
  2001  001246  E103               	bnz	u2310
  2002  001248  0444               	decf	dtoa@i,w,c
  2003  00124A  A0D8               	btfss	status,0,c
  2004  00124C  D01A               	goto	u2350
  2005  00124E                     u2310:
  2006  00124E  503C               	movf	dtoa@n,w,c
  2007  001250  103D               	iorwf	dtoa@n+1,w,c
  2008  001252  103E               	iorwf	dtoa@n+2,w,c
  2009  001254  103F               	iorwf	dtoa@n+3,w,c
  2010  001256  1040               	iorwf	dtoa@n+4,w,c
  2011  001258  1041               	iorwf	dtoa@n+5,w,c
  2012  00125A  1042               	iorwf	dtoa@n+6,w,c
  2013  00125C  1043               	iorwf	dtoa@n+7,w,c
  2014  00125E  A4D8               	btfss	status,2,c
  2015  001260  D773               	goto	l2514
  2016  001262  BE37               	btfsc	dtoa@p+1,7,c
  2017  001264  D005               	goto	u2330
  2018  001266  5037               	movf	dtoa@p+1,w,c
  2019  001268  E102               	bnz	u2331
  2020  00126A  0436               	decf	dtoa@p,w,c
  2021  00126C  B0D8               	btfsc	status,0,c
  2022  00126E                     u2331:
  2023  00126E  D76C               	goto	l2514
  2024  001270                     u2330:
  2025  001270  BE39               	btfsc	dtoa@w+1,7,c
  2026  001272  D007               	goto	u2350
  2027  001274  5039               	movf	dtoa@w+1,w,c
  2028  001276  E103               	bnz	u2340
  2029  001278  0438               	decf	dtoa@w,w,c
  2030  00127A  A0D8               	btfss	status,0,c
  2031  00127C  D002               	goto	u2350
  2032  00127E                     u2340:
  2033  00127E  B257               	btfsc	_flags,1,c
  2034  001280  D763               	goto	l2514
  2035  001282                     u2350:
  2036                           
  2037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2038  001282  503A               	movf	dtoa@s,w,c
  2039  001284  103B               	iorwf	dtoa@s+1,w,c
  2040  001286  A4D8               	btfss	status,2,c
  2041  001288  D002               	goto	u2370
  2042  00128A  A457               	btfss	_flags,2,c
  2043  00128C  D017               	goto	l2548
  2044  00128E                     u2370:
  2045                           
  2046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2047  00128E  0644               	decf	dtoa@i,f,c
  2048  001290  A0D8               	btfss	status,0,c
  2049  001292  0645               	decf	dtoa@i+1,f,c
  2050                           
  2051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2052  001294  503A               	movf	dtoa@s,w,c
  2053  001296  103B               	iorwf	dtoa@s+1,w,c
  2054  001298  A4D8               	btfss	status,2,c
  2055  00129A  D004               	goto	l2544
  2056  00129C  0E00               	movlw	0
  2057  00129E  6E35               	movwf	_dtoa$1077+1,c
  2058  0012A0  0E2B               	movlw	43
  2059  0012A2  D003               	goto	L1
  2060  0012A4                     l2544:
  2061  0012A4  0E00               	movlw	0
  2062  0012A6  6E35               	movwf	_dtoa$1077+1,c
  2063  0012A8  0E2D               	movlw	45
  2064  0012AA                     L1:
  2065  0012AA  6E34               	movwf	_dtoa$1077,c
  2066  0012AC  0E78               	movlw	low _dbuf
  2067  0012AE  2444               	addwf	dtoa@i,w,c
  2068  0012B0  6ED9               	movwf	fsr2l,c
  2069  0012B2  0E00               	movlw	high _dbuf
  2070  0012B4  2045               	addwfc	dtoa@i+1,w,c
  2071  0012B6  6EDA               	movwf	fsr2h,c
  2072  0012B8  C034  FFDF         	movff	_dtoa$1077,indf2
  2073  0012BC                     l2548:
  2074                           
  2075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2076  0012BC  C022  F017         	movff	dtoa@fp,pad@fp
  2077  0012C0  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  2078  0012C4  0E78               	movlw	low _dbuf
  2079  0012C6  2444               	addwf	dtoa@i,w,c
  2080  0012C8  6E19               	movwf	pad@buf,c
  2081  0012CA  0E00               	movlw	high _dbuf
  2082  0012CC  2045               	addwfc	dtoa@i+1,w,c
  2083  0012CE  6E1A               	movwf	pad@buf+1,c
  2084  0012D0  C038  F01B         	movff	dtoa@w,pad@p
  2085  0012D4  C039  F01C         	movff	dtoa@w+1,pad@p+1
  2086  0012D8  EC87  F00C         	call	_pad	;wreg free
  2087  0012DC  C017  F022         	movff	?_pad,?_dtoa
  2088  0012E0  C018  F023         	movff	?_pad+1,?_dtoa+1
  2089  0012E4  0012               	return		;funcret
  2090  0012E6                     __end_of_dtoa:
  2091                           	opt callstack 0
  2092                           
  2093 ;; *************** function _pad *****************
  2094 ;; Defined at:
  2095 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  2098 ;;		 -> NULL(0), 
  2099 ;;  buf             2   24[COMRAM] PTR unsigned char 
  2100 ;;		 -> dbuf(32), 
  2101 ;;  p               2   26[COMRAM] int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  w               2   31[COMRAM] int 
  2104 ;;  i               2   29[COMRAM] int 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  2   22[COMRAM] int 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2114 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;Total ram usage:       11 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    8
  2121 ;; This function calls:
  2122 ;;		_fputc
  2123 ;;		_fputs
  2124 ;;		_strlen
  2125 ;; This function is called by:
  2126 ;;		_dtoa
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text7
  2131  00190E                     __ptext7:
  2132                           	opt callstack 0
  2133  00190E                     _pad:
  2134                           	opt callstack 18
  2135                           
  2136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2137                           
  2138                           ;incstack = 0
  2139  00190E  A057               	btfss	_flags,0,c
  2140  001910  D00A               	goto	l2388
  2141                           
  2142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2143  001912  C019  F010         	movff	pad@buf,fputs@s
  2144  001916  C01A  F011         	movff	pad@buf+1,fputs@s+1
  2145  00191A  C017  F012         	movff	pad@fp,fputs@fp
  2146  00191E  C018  F013         	movff	pad@fp+1,fputs@fp+1
  2147  001922  ECE7  F00D         	call	_fputs	;wreg free
  2148  001926                     l2388:
  2149                           
  2150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2151  001926  BE1C               	btfsc	pad@p+1,7,c
  2152  001928  D005               	goto	l2392
  2153  00192A  C01B  F020         	movff	pad@p,pad@w
  2154  00192E  C01C  F021         	movff	pad@p+1,pad@w+1
  2155  001932  D004               	goto	l403
  2156  001934                     l2392:
  2157  001934  0E00               	movlw	0
  2158  001936  6E21               	movwf	pad@w+1,c
  2159  001938  0E00               	movlw	0
  2160  00193A  6E20               	movwf	pad@w,c
  2161  00193C                     l403:
  2162                           
  2163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2164  00193C  0E00               	movlw	0
  2165  00193E  6E1F               	movwf	pad@i+1,c
  2166  001940  0E00               	movlw	0
  2167  001942  6E1E               	movwf	pad@i,c
  2168                           
  2169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2170  001944  D00C               	goto	l2398
  2171  001946                     l2394:
  2172                           
  2173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2174  001946  0E00               	movlw	0
  2175  001948  6E08               	movwf	fputc@c+1,c
  2176  00194A  0E20               	movlw	32
  2177  00194C  6E07               	movwf	fputc@c,c
  2178  00194E  C017  F009         	movff	pad@fp,fputc@fp
  2179  001952  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  2180  001956  EC0D  F00D         	call	_fputc	;wreg free
  2181                           
  2182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2183  00195A  4A1E               	infsnz	pad@i,f,c
  2184  00195C  2A1F               	incf	pad@i+1,f,c
  2185  00195E                     l2398:
  2186                           
  2187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2188  00195E  5020               	movf	pad@w,w,c
  2189  001960  5C1E               	subwf	pad@i,w,c
  2190  001962  501F               	movf	pad@i+1,w,c
  2191  001964  0A80               	xorlw	128
  2192  001966  6E1D               	movwf	??_pad& (0+255),c
  2193  001968  5021               	movf	pad@w+1,w,c
  2194  00196A  0A80               	xorlw	128
  2195  00196C  581D               	subwfb	??_pad& (0+255),w,c
  2196  00196E  A0D8               	btfss	status,0,c
  2197  001970  D7EA               	goto	l2394
  2198                           
  2199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2200  001972  B057               	btfsc	_flags,0,c
  2201  001974  D00A               	goto	l2402
  2202                           
  2203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2204  001976  C019  F010         	movff	pad@buf,fputs@s
  2205  00197A  C01A  F011         	movff	pad@buf+1,fputs@s+1
  2206  00197E  C017  F012         	movff	pad@fp,fputs@fp
  2207  001982  C018  F013         	movff	pad@fp+1,fputs@fp+1
  2208  001986  ECE7  F00D         	call	_fputs	;wreg free
  2209  00198A                     l2402:
  2210                           
  2211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2212  00198A  C019  F005         	movff	pad@buf,strlen@s
  2213  00198E  C01A  F006         	movff	pad@buf+1,strlen@s+1
  2214  001992  EC64  F00E         	call	_strlen	;wreg free
  2215  001996  5020               	movf	pad@w,w,c
  2216  001998  2405               	addwf	?_strlen,w,c
  2217  00199A  6E17               	movwf	?_pad,c
  2218  00199C  5021               	movf	pad@w+1,w,c
  2219  00199E  2006               	addwfc	?_strlen+1,w,c
  2220  0019A0  6E18               	movwf	?_pad+1,c
  2221  0019A2  0012               	return		;funcret
  2222  0019A4                     __end_of_pad:
  2223                           	opt callstack 0
  2224                           
  2225 ;; *************** function _strlen *****************
  2226 ;; Defined at:
  2227 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2230 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  a               2    6[COMRAM] PTR const unsigned char 
  2233 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  2    4[COMRAM] unsigned int 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;Total ram usage:        4 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    4
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_pad
  2254 ;;		_stoa
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text8
  2259  001CC8                     __ptext8:
  2260                           	opt callstack 0
  2261  001CC8                     _strlen:
  2262                           	opt callstack 22
  2263                           
  2264                           ;incstack = 0
  2265  001CC8  C005  F007         	movff	strlen@s,strlen@a
  2266  001CCC  C006  F008         	movff	strlen@s+1,strlen@a+1
  2267  001CD0  D002               	goto	l2378
  2268  001CD2                     l2376:
  2269  001CD2  4A05               	infsnz	strlen@s,f,c
  2270  001CD4  2A06               	incf	strlen@s+1,f,c
  2271  001CD6                     l2378:
  2272  001CD6  C005  FFD9         	movff	strlen@s,fsr2l
  2273  001CDA  C006  FFDA         	movff	strlen@s+1,fsr2h
  2274  001CDE  50DF               	movf	indf2,w,c
  2275  001CE0  A4D8               	btfss	status,2,c
  2276  001CE2  D7F7               	goto	l2376
  2277  001CE4  5007               	movf	strlen@a,w,c
  2278  001CE6  5C05               	subwf	strlen@s,w,c
  2279  001CE8  6E05               	movwf	?_strlen,c
  2280  001CEA  5008               	movf	strlen@a+1,w,c
  2281  001CEC  5806               	subwfb	strlen@s+1,w,c
  2282  001CEE  6E06               	movwf	?_strlen+1,c
  2283  001CF0  0012               	return		;funcret
  2284  001CF2                     __end_of_strlen:
  2285                           	opt callstack 0
  2286                           
  2287 ;; *************** function _fputs *****************
  2288 ;; Defined at:
  2289 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2292 ;;		 -> dbuf(32), 
  2293 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2294 ;;		 -> NULL(0), 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  i               2   20[COMRAM] int 
  2297 ;;  c               1   19[COMRAM] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  2   15[COMRAM] int 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;Total ram usage:        7 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    7
  2314 ;; This function calls:
  2315 ;;		_fputc
  2316 ;; This function is called by:
  2317 ;;		_pad
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text9
  2322  001BCE                     __ptext9:
  2323                           	opt callstack 0
  2324  001BCE                     _fputs:
  2325                           	opt callstack 18
  2326                           
  2327                           ;incstack = 0
  2328  001BCE  0E00               	movlw	0
  2329  001BD0  6E16               	movwf	fputs@i+1,c
  2330  001BD2  0E00               	movlw	0
  2331  001BD4  6E15               	movwf	fputs@i,c
  2332  001BD6  D00B               	goto	l2372
  2333  001BD8                     l2368:
  2334  001BD8  C014  F007         	movff	fputs@c,fputc@c
  2335  001BDC  6A08               	clrf	fputc@c+1,c
  2336  001BDE  C012  F009         	movff	fputs@fp,fputc@fp
  2337  001BE2  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  2338  001BE6  EC0D  F00D         	call	_fputc	;wreg free
  2339  001BEA  4A15               	infsnz	fputs@i,f,c
  2340  001BEC  2A16               	incf	fputs@i+1,f,c
  2341  001BEE                     l2372:
  2342  001BEE  5015               	movf	fputs@i,w,c
  2343  001BF0  2410               	addwf	fputs@s,w,c
  2344  001BF2  6ED9               	movwf	fsr2l,c
  2345  001BF4  5016               	movf	fputs@i+1,w,c
  2346  001BF6  2011               	addwfc	fputs@s+1,w,c
  2347  001BF8  6EDA               	movwf	fsr2h,c
  2348  001BFA  50DF               	movf	indf2,w,c
  2349  001BFC  6E14               	movwf	fputs@c,c
  2350  001BFE  5014               	movf	fputs@c,w,c
  2351  001C00  B4D8               	btfsc	status,2,c
  2352  001C02  0012               	return	
  2353  001C04  D7E9               	goto	l2368
  2354  001C06                     __end_of_fputs:
  2355                           	opt callstack 0
  2356                           
  2357 ;; *************** function _fputc *****************
  2358 ;; Defined at:
  2359 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  c               2    6[COMRAM] int 
  2362 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  2363 ;;		 -> NULL(0), 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  2    6[COMRAM] int 
  2368 ;; Registers used:
  2369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;Total ram usage:        9 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    6
  2382 ;; This function calls:
  2383 ;;		_putch
  2384 ;; This function is called by:
  2385 ;;		_pad
  2386 ;;		_stoa
  2387 ;;		_vfpfcnvrt
  2388 ;;		_fputs
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text10
  2393  001A1A                     __ptext10:
  2394                           	opt callstack 0
  2395  001A1A                     _fputc:
  2396                           	opt callstack 20
  2397                           
  2398                           ;incstack = 0
  2399  001A1A  5009               	movf	fputc@fp,w,c
  2400  001A1C  100A               	iorwf	fputc@fp+1,w,c
  2401  001A1E  B4D8               	btfsc	status,2,c
  2402  001A20  D004               	goto	u2010
  2403  001A22  5009               	movf	fputc@fp,w,c
  2404  001A24  100A               	iorwf	fputc@fp+1,w,c
  2405  001A26  A4D8               	btfss	status,2,c
  2406  001A28  D004               	goto	l2358
  2407  001A2A                     u2010:
  2408  001A2A  5007               	movf	fputc@c,w,c
  2409  001A2C  ECC9  F00E         	call	_putch
  2410  001A30  0012               	return	
  2411  001A32                     l2358:
  2412  001A32  EE20 F004          	lfsr	2,4
  2413  001A36  5009               	movf	fputc@fp,w,c
  2414  001A38  26D9               	addwf	fsr2l,f,c
  2415  001A3A  500A               	movf	fputc@fp+1,w,c
  2416  001A3C  22DA               	addwfc	fsr2h,f,c
  2417  001A3E  50DE               	movf	postinc2,w,c
  2418  001A40  10DE               	iorwf	postinc2,w,c
  2419  001A42  B4D8               	btfsc	status,2,c
  2420  001A44  D016               	goto	u2030
  2421  001A46  EE20 F004          	lfsr	2,4
  2422  001A4A  5009               	movf	fputc@fp,w,c
  2423  001A4C  26D9               	addwf	fsr2l,f,c
  2424  001A4E  500A               	movf	fputc@fp+1,w,c
  2425  001A50  22DA               	addwfc	fsr2h,f,c
  2426  001A52  EE10 F002          	lfsr	1,2
  2427  001A56  5009               	movf	fputc@fp,w,c
  2428  001A58  26E1               	addwf	fsr1l,f,c
  2429  001A5A  500A               	movf	fputc@fp+1,w,c
  2430  001A5C  22E2               	addwfc	fsr1h,f,c
  2431  001A5E  50DE               	movf	postinc2,w,c
  2432  001A60  5CE6               	subwf	postinc1,w,c
  2433  001A62  50E6               	movf	postinc1,w,c
  2434  001A64  0A80               	xorlw	128
  2435  001A66  6E0F               	movwf	(??_fputc+4)& (0+255),c
  2436  001A68  50DE               	movf	postinc2,w,c
  2437  001A6A  0A80               	xorlw	128
  2438  001A6C  580F               	subwfb	(??_fputc+4)& (0+255),w,c
  2439  001A6E  B0D8               	btfsc	status,0,c
  2440  001A70  0012               	return	
  2441  001A72                     u2030:
  2442  001A72  EE20 F002          	lfsr	2,2
  2443  001A76  5009               	movf	fputc@fp,w,c
  2444  001A78  26D9               	addwf	fsr2l,f,c
  2445  001A7A  500A               	movf	fputc@fp+1,w,c
  2446  001A7C  22DA               	addwfc	fsr2h,f,c
  2447  001A7E  2ADE               	incf	postinc2,f,c
  2448  001A80  0E00               	movlw	0
  2449  001A82  22DD               	addwfc	postdec2,f,c
  2450  001A84  0012               	return		;funcret
  2451  001A86                     __end_of_fputc:
  2452                           	opt callstack 0
  2453                           
  2454 ;; *************** function _putch *****************
  2455 ;; Defined at:
  2456 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  txData          1    wreg     unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  txData          1    5[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:        1 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    5
  2477 ;; This function calls:
  2478 ;;		_EUSART1_Write
  2479 ;; This function is called by:
  2480 ;;		_fputc
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text11
  2485  001D92                     __ptext11:
  2486                           	opt callstack 0
  2487  001D92                     _putch:
  2488                           	opt callstack 20
  2489                           
  2490                           ;incstack = 0
  2491                           ;putch@txData stored from wreg
  2492  001D92  6E06               	movwf	putch@txData,c
  2493                           
  2494                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  2495  001D94  5006               	movf	putch@txData,w,c
  2496  001D96  EC03  F00E         	call	_EUSART1_Write
  2497  001D9A  0012               	return		;funcret
  2498  001D9C                     __end_of_putch:
  2499                           	opt callstack 0
  2500                           
  2501 ;; *************** function _EUSART1_Write *****************
  2502 ;; Defined at:
  2503 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  txData          1    wreg     unsigned char 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  txData          1    4[COMRAM] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;Total ram usage:        1 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    4
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_putch
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text12
  2532  001C06                     __ptext12:
  2533                           	opt callstack 0
  2534  001C06                     _EUSART1_Write:
  2535                           	opt callstack 20
  2536                           
  2537                           ;incstack = 0
  2538                           ;EUSART1_Write@txData stored from wreg
  2539  001C06  6E05               	movwf	EUSART1_Write@txData,c
  2540  001C08                     
  2541                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  2542                           
  2543                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  2544  001C08  0100               	movlb	0	; () banked
  2545  001C0A  5175               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  2546  001C0C  B4D8               	btfsc	status,2,c
  2547  001C0E  D7FC               	goto	l2332
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  2551  001C10  B89D               	btfsc	3997,4,c	;volatile
  2552  001C12  D003               	goto	l155
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  2556  001C14  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2557                           
  2558                           ;mcc_generated_files/eusart1.c: 182:     }
  2559  001C18  D010               	goto	l2348
  2560  001C1A                     l155:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  2564  001C1A  989D               	bcf	3997,4,c	;volatile
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  2568  001C1C  0E80               	movlw	low _eusart1TxBuffer
  2569  001C1E  2577               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  2570  001C20  6ED9               	movwf	fsr2l,c
  2571  001C22  6ADA               	clrf	fsr2h,c
  2572  001C24  0E01               	movlw	high _eusart1TxBuffer
  2573  001C26  22DA               	addwfc	fsr2h,f,c
  2574  001C28  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  2575                           
  2576                           ; BSR set to: 0
  2577  001C2C  2B77               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  2581  001C2E  0E3F               	movlw	63
  2582  001C30  6577               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  2583  001C32  D002               	goto	l2346
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2587  001C34  0E00               	movlw	0
  2588  001C36  6F77               	movwf	_eusart1TxHead& (0+255),b	;volatile
  2589  001C38                     l2346:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2593  001C38  0775               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  2594  001C3A                     l2348:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  2598  001C3A  889D               	bsf	3997,4,c	;volatile
  2599                           
  2600                           ; BSR set to: 0
  2601  001C3C  0012               	return		;funcret
  2602  001C3E                     __end_of_EUSART1_Write:
  2603                           	opt callstack 0
  2604                           
  2605 ;; *************** function _abs *****************
  2606 ;; Defined at:
  2607 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  a               2   22[COMRAM] int 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  2   22[COMRAM] int 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;Total ram usage:        4 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    4
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_dtoa
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text13
  2636  001C3E                     __ptext13:
  2637                           	opt callstack 0
  2638  001C3E                     _abs:
  2639                           	opt callstack 22
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;incstack = 0
  2643  001C3E  BE18               	btfsc	abs@a+1,7,c
  2644  001C40  D005               	goto	u2100
  2645  001C42  5018               	movf	abs@a+1,w,c
  2646  001C44  E110               	bnz	l1150
  2647  001C46  0417               	decf	abs@a,w,c
  2648  001C48  B0D8               	btfsc	status,0,c
  2649  001C4A  D00D               	goto	l1150
  2650  001C4C                     u2100:
  2651  001C4C  C017  F019         	movff	abs@a,??_abs
  2652  001C50  C018  F01A         	movff	abs@a+1,??_abs+1
  2653  001C54  1E19               	comf	??_abs,f,c
  2654  001C56  1E1A               	comf	??_abs+1,f,c
  2655  001C58  4A19               	infsnz	??_abs,f,c
  2656  001C5A  2A1A               	incf	??_abs+1,f,c
  2657  001C5C  C019  F017         	movff	??_abs,?_abs
  2658  001C60  C01A  F018         	movff	??_abs+1,?_abs+1
  2659  001C64  0012               	return	
  2660  001C66                     l1150:
  2661  001C66  C017  F017         	movff	abs@a,?_abs
  2662  001C6A  C018  F018         	movff	abs@a+1,?_abs+1
  2663  001C6E  0012               	return		;funcret
  2664  001C70                     __end_of_abs:
  2665                           	opt callstack 0
  2666                           
  2667 ;; *************** function ___aomod *****************
  2668 ;; Defined at:
  2669 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  dividend        8    4[COMRAM] long long 
  2672 ;;  divisor         8   12[COMRAM] long long 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  sign            1   21[COMRAM] unsigned char 
  2675 ;;  counter         1   20[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  8    4[COMRAM] long long 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2685 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;Total ram usage:       18 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    4
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_dtoa
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text14
  2700  001752                     __ptext14:
  2701                           	opt callstack 0
  2702  001752                     ___aomod:
  2703                           	opt callstack 22
  2704                           
  2705                           ;incstack = 0
  2706  001752  0E00               	movlw	0
  2707  001754  6E16               	movwf	___aomod@sign,c
  2708  001756  AE0C               	btfss	___aomod@dividend+7,7,c
  2709  001758  D012               	goto	l2462
  2710  00175A  1E0C               	comf	___aomod@dividend+7,f,c
  2711  00175C  1E0B               	comf	___aomod@dividend+6,f,c
  2712  00175E  1E0A               	comf	___aomod@dividend+5,f,c
  2713  001760  1E09               	comf	___aomod@dividend+4,f,c
  2714  001762  1E08               	comf	___aomod@dividend+3,f,c
  2715  001764  1E07               	comf	___aomod@dividend+2,f,c
  2716  001766  1E06               	comf	___aomod@dividend+1,f,c
  2717  001768  6C05               	negf	___aomod@dividend,c
  2718  00176A  0E00               	movlw	0
  2719  00176C  2206               	addwfc	___aomod@dividend+1,f,c
  2720  00176E  2207               	addwfc	___aomod@dividend+2,f,c
  2721  001770  2208               	addwfc	___aomod@dividend+3,f,c
  2722  001772  2209               	addwfc	___aomod@dividend+4,f,c
  2723  001774  220A               	addwfc	___aomod@dividend+5,f,c
  2724  001776  220B               	addwfc	___aomod@dividend+6,f,c
  2725  001778  220C               	addwfc	___aomod@dividend+7,f,c
  2726  00177A  0E01               	movlw	1
  2727  00177C  6E16               	movwf	___aomod@sign,c
  2728  00177E                     l2462:
  2729  00177E  AE14               	btfss	___aomod@divisor+7,7,c
  2730  001780  D010               	goto	l2466
  2731  001782  1E14               	comf	___aomod@divisor+7,f,c
  2732  001784  1E13               	comf	___aomod@divisor+6,f,c
  2733  001786  1E12               	comf	___aomod@divisor+5,f,c
  2734  001788  1E11               	comf	___aomod@divisor+4,f,c
  2735  00178A  1E10               	comf	___aomod@divisor+3,f,c
  2736  00178C  1E0F               	comf	___aomod@divisor+2,f,c
  2737  00178E  1E0E               	comf	___aomod@divisor+1,f,c
  2738  001790  6C0D               	negf	___aomod@divisor,c
  2739  001792  0E00               	movlw	0
  2740  001794  220E               	addwfc	___aomod@divisor+1,f,c
  2741  001796  220F               	addwfc	___aomod@divisor+2,f,c
  2742  001798  2210               	addwfc	___aomod@divisor+3,f,c
  2743  00179A  2211               	addwfc	___aomod@divisor+4,f,c
  2744  00179C  2212               	addwfc	___aomod@divisor+5,f,c
  2745  00179E  2213               	addwfc	___aomod@divisor+6,f,c
  2746  0017A0  2214               	addwfc	___aomod@divisor+7,f,c
  2747  0017A2                     l2466:
  2748  0017A2  500D               	movf	___aomod@divisor,w,c
  2749  0017A4  100E               	iorwf	___aomod@divisor+1,w,c
  2750  0017A6  100F               	iorwf	___aomod@divisor+2,w,c
  2751  0017A8  1010               	iorwf	___aomod@divisor+3,w,c
  2752  0017AA  1011               	iorwf	___aomod@divisor+4,w,c
  2753  0017AC  1012               	iorwf	___aomod@divisor+5,w,c
  2754  0017AE  1013               	iorwf	___aomod@divisor+6,w,c
  2755  0017B0  1014               	iorwf	___aomod@divisor+7,w,c
  2756  0017B2  B4D8               	btfsc	status,2,c
  2757  0017B4  D03C               	goto	l2482
  2758  0017B6  0E01               	movlw	1
  2759  0017B8  6E15               	movwf	___aomod@counter,c
  2760  0017BA  D00A               	goto	l2472
  2761  0017BC                     l2470:
  2762  0017BC  90D8               	bcf	status,0,c
  2763  0017BE  360D               	rlcf	___aomod@divisor,f,c
  2764  0017C0  360E               	rlcf	___aomod@divisor+1,f,c
  2765  0017C2  360F               	rlcf	___aomod@divisor+2,f,c
  2766  0017C4  3610               	rlcf	___aomod@divisor+3,f,c
  2767  0017C6  3611               	rlcf	___aomod@divisor+4,f,c
  2768  0017C8  3612               	rlcf	___aomod@divisor+5,f,c
  2769  0017CA  3613               	rlcf	___aomod@divisor+6,f,c
  2770  0017CC  3614               	rlcf	___aomod@divisor+7,f,c
  2771  0017CE  2A15               	incf	___aomod@counter,f,c
  2772  0017D0                     l2472:
  2773  0017D0  AE14               	btfss	___aomod@divisor+7,7,c
  2774  0017D2  D7F4               	goto	l2470
  2775  0017D4                     u2210:
  2776  0017D4  500D               	movf	___aomod@divisor,w,c
  2777  0017D6  5C05               	subwf	___aomod@dividend,w,c
  2778  0017D8  500E               	movf	___aomod@divisor+1,w,c
  2779  0017DA  5806               	subwfb	___aomod@dividend+1,w,c
  2780  0017DC  500F               	movf	___aomod@divisor+2,w,c
  2781  0017DE  5807               	subwfb	___aomod@dividend+2,w,c
  2782  0017E0  5010               	movf	___aomod@divisor+3,w,c
  2783  0017E2  5808               	subwfb	___aomod@dividend+3,w,c
  2784  0017E4  5011               	movf	___aomod@divisor+4,w,c
  2785  0017E6  5809               	subwfb	___aomod@dividend+4,w,c
  2786  0017E8  5012               	movf	___aomod@divisor+5,w,c
  2787  0017EA  580A               	subwfb	___aomod@dividend+5,w,c
  2788  0017EC  5013               	movf	___aomod@divisor+6,w,c
  2789  0017EE  580B               	subwfb	___aomod@dividend+6,w,c
  2790  0017F0  5014               	movf	___aomod@divisor+7,w,c
  2791  0017F2  580C               	subwfb	___aomod@dividend+7,w,c
  2792  0017F4  A0D8               	btfss	status,0,c
  2793  0017F6  D010               	goto	l2478
  2794  0017F8  500D               	movf	___aomod@divisor,w,c
  2795  0017FA  5E05               	subwf	___aomod@dividend,f,c
  2796  0017FC  500E               	movf	___aomod@divisor+1,w,c
  2797  0017FE  5A06               	subwfb	___aomod@dividend+1,f,c
  2798  001800  500F               	movf	___aomod@divisor+2,w,c
  2799  001802  5A07               	subwfb	___aomod@dividend+2,f,c
  2800  001804  5010               	movf	___aomod@divisor+3,w,c
  2801  001806  5A08               	subwfb	___aomod@dividend+3,f,c
  2802  001808  5011               	movf	___aomod@divisor+4,w,c
  2803  00180A  5A09               	subwfb	___aomod@dividend+4,f,c
  2804  00180C  5012               	movf	___aomod@divisor+5,w,c
  2805  00180E  5A0A               	subwfb	___aomod@dividend+5,f,c
  2806  001810  5013               	movf	___aomod@divisor+6,w,c
  2807  001812  5A0B               	subwfb	___aomod@dividend+6,f,c
  2808  001814  5014               	movf	___aomod@divisor+7,w,c
  2809  001816  5A0C               	subwfb	___aomod@dividend+7,f,c
  2810  001818                     l2478:
  2811  001818  90D8               	bcf	status,0,c
  2812  00181A  3214               	rrcf	___aomod@divisor+7,f,c
  2813  00181C  3213               	rrcf	___aomod@divisor+6,f,c
  2814  00181E  3212               	rrcf	___aomod@divisor+5,f,c
  2815  001820  3211               	rrcf	___aomod@divisor+4,f,c
  2816  001822  3210               	rrcf	___aomod@divisor+3,f,c
  2817  001824  320F               	rrcf	___aomod@divisor+2,f,c
  2818  001826  320E               	rrcf	___aomod@divisor+1,f,c
  2819  001828  320D               	rrcf	___aomod@divisor,f,c
  2820  00182A  2E15               	decfsz	___aomod@counter,f,c
  2821  00182C  D7D3               	goto	u2210
  2822  00182E                     l2482:
  2823  00182E  5016               	movf	___aomod@sign,w,c
  2824  001830  B4D8               	btfsc	status,2,c
  2825  001832  D010               	goto	l2486
  2826  001834  1E0C               	comf	___aomod@dividend+7,f,c
  2827  001836  1E0B               	comf	___aomod@dividend+6,f,c
  2828  001838  1E0A               	comf	___aomod@dividend+5,f,c
  2829  00183A  1E09               	comf	___aomod@dividend+4,f,c
  2830  00183C  1E08               	comf	___aomod@dividend+3,f,c
  2831  00183E  1E07               	comf	___aomod@dividend+2,f,c
  2832  001840  1E06               	comf	___aomod@dividend+1,f,c
  2833  001842  6C05               	negf	___aomod@dividend,c
  2834  001844  0E00               	movlw	0
  2835  001846  2206               	addwfc	___aomod@dividend+1,f,c
  2836  001848  2207               	addwfc	___aomod@dividend+2,f,c
  2837  00184A  2208               	addwfc	___aomod@dividend+3,f,c
  2838  00184C  2209               	addwfc	___aomod@dividend+4,f,c
  2839  00184E  220A               	addwfc	___aomod@dividend+5,f,c
  2840  001850  220B               	addwfc	___aomod@dividend+6,f,c
  2841  001852  220C               	addwfc	___aomod@dividend+7,f,c
  2842  001854                     l2486:
  2843  001854  C005  F005         	movff	___aomod@dividend,?___aomod
  2844  001858  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2845  00185C  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2846  001860  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2847  001864  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2848  001868  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2849  00186C  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2850  001870  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2851  001874  0012               	return		;funcret
  2852  001876                     __end_of___aomod:
  2853                           	opt callstack 0
  2854                           
  2855 ;; *************** function ___aodiv *****************
  2856 ;; Defined at:
  2857 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  dividend        8    4[COMRAM] long long 
  2860 ;;  divisor         8   12[COMRAM] long long 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  quotient        8   22[COMRAM] long long 
  2863 ;;  sign            1   21[COMRAM] unsigned char 
  2864 ;;  counter         1   20[COMRAM] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  8    4[COMRAM] long long 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2874 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;Total ram usage:       26 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    4
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_dtoa
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text15
  2889  0014E2                     __ptext15:
  2890                           	opt callstack 0
  2891  0014E2                     ___aodiv:
  2892                           	opt callstack 22
  2893                           
  2894                           ;incstack = 0
  2895  0014E2  0E00               	movlw	0
  2896  0014E4  6E16               	movwf	___aodiv@sign,c
  2897  0014E6  AE14               	btfss	___aodiv@divisor+7,7,c
  2898  0014E8  D012               	goto	l2418
  2899  0014EA  1E14               	comf	___aodiv@divisor+7,f,c
  2900  0014EC  1E13               	comf	___aodiv@divisor+6,f,c
  2901  0014EE  1E12               	comf	___aodiv@divisor+5,f,c
  2902  0014F0  1E11               	comf	___aodiv@divisor+4,f,c
  2903  0014F2  1E10               	comf	___aodiv@divisor+3,f,c
  2904  0014F4  1E0F               	comf	___aodiv@divisor+2,f,c
  2905  0014F6  1E0E               	comf	___aodiv@divisor+1,f,c
  2906  0014F8  6C0D               	negf	___aodiv@divisor,c
  2907  0014FA  0E00               	movlw	0
  2908  0014FC  220E               	addwfc	___aodiv@divisor+1,f,c
  2909  0014FE  220F               	addwfc	___aodiv@divisor+2,f,c
  2910  001500  2210               	addwfc	___aodiv@divisor+3,f,c
  2911  001502  2211               	addwfc	___aodiv@divisor+4,f,c
  2912  001504  2212               	addwfc	___aodiv@divisor+5,f,c
  2913  001506  2213               	addwfc	___aodiv@divisor+6,f,c
  2914  001508  2214               	addwfc	___aodiv@divisor+7,f,c
  2915  00150A  0E01               	movlw	1
  2916  00150C  6E16               	movwf	___aodiv@sign,c
  2917  00150E                     l2418:
  2918  00150E  AE0C               	btfss	___aodiv@dividend+7,7,c
  2919  001510  D012               	goto	l2424
  2920  001512  1E0C               	comf	___aodiv@dividend+7,f,c
  2921  001514  1E0B               	comf	___aodiv@dividend+6,f,c
  2922  001516  1E0A               	comf	___aodiv@dividend+5,f,c
  2923  001518  1E09               	comf	___aodiv@dividend+4,f,c
  2924  00151A  1E08               	comf	___aodiv@dividend+3,f,c
  2925  00151C  1E07               	comf	___aodiv@dividend+2,f,c
  2926  00151E  1E06               	comf	___aodiv@dividend+1,f,c
  2927  001520  6C05               	negf	___aodiv@dividend,c
  2928  001522  0E00               	movlw	0
  2929  001524  2206               	addwfc	___aodiv@dividend+1,f,c
  2930  001526  2207               	addwfc	___aodiv@dividend+2,f,c
  2931  001528  2208               	addwfc	___aodiv@dividend+3,f,c
  2932  00152A  2209               	addwfc	___aodiv@dividend+4,f,c
  2933  00152C  220A               	addwfc	___aodiv@dividend+5,f,c
  2934  00152E  220B               	addwfc	___aodiv@dividend+6,f,c
  2935  001530  220C               	addwfc	___aodiv@dividend+7,f,c
  2936  001532  0E01               	movlw	1
  2937  001534  1A16               	xorwf	___aodiv@sign,f,c
  2938  001536                     l2424:
  2939  001536  EE20  F017         	lfsr	2,___aodiv@quotient
  2940  00153A  0E07               	movlw	7
  2941  00153C                     u2131:
  2942  00153C  6ADE               	clrf	postinc2,c
  2943  00153E  06E8               	decf	wreg,f,c
  2944  001540  E2FD               	bc	u2131
  2945  001542  500D               	movf	___aodiv@divisor,w,c
  2946  001544  100E               	iorwf	___aodiv@divisor+1,w,c
  2947  001546  100F               	iorwf	___aodiv@divisor+2,w,c
  2948  001548  1010               	iorwf	___aodiv@divisor+3,w,c
  2949  00154A  1011               	iorwf	___aodiv@divisor+4,w,c
  2950  00154C  1012               	iorwf	___aodiv@divisor+5,w,c
  2951  00154E  1013               	iorwf	___aodiv@divisor+6,w,c
  2952  001550  1014               	iorwf	___aodiv@divisor+7,w,c
  2953  001552  B4D8               	btfsc	status,2,c
  2954  001554  D046               	goto	l2446
  2955  001556  0E01               	movlw	1
  2956  001558  6E15               	movwf	___aodiv@counter,c
  2957  00155A  D00A               	goto	l2432
  2958  00155C                     l2430:
  2959  00155C  90D8               	bcf	status,0,c
  2960  00155E  360D               	rlcf	___aodiv@divisor,f,c
  2961  001560  360E               	rlcf	___aodiv@divisor+1,f,c
  2962  001562  360F               	rlcf	___aodiv@divisor+2,f,c
  2963  001564  3610               	rlcf	___aodiv@divisor+3,f,c
  2964  001566  3611               	rlcf	___aodiv@divisor+4,f,c
  2965  001568  3612               	rlcf	___aodiv@divisor+5,f,c
  2966  00156A  3613               	rlcf	___aodiv@divisor+6,f,c
  2967  00156C  3614               	rlcf	___aodiv@divisor+7,f,c
  2968  00156E  2A15               	incf	___aodiv@counter,f,c
  2969  001570                     l2432:
  2970  001570  AE14               	btfss	___aodiv@divisor+7,7,c
  2971  001572  D7F4               	goto	l2430
  2972  001574                     u2150:
  2973  001574  90D8               	bcf	status,0,c
  2974  001576  3617               	rlcf	___aodiv@quotient,f,c
  2975  001578  3618               	rlcf	___aodiv@quotient+1,f,c
  2976  00157A  3619               	rlcf	___aodiv@quotient+2,f,c
  2977  00157C  361A               	rlcf	___aodiv@quotient+3,f,c
  2978  00157E  361B               	rlcf	___aodiv@quotient+4,f,c
  2979  001580  361C               	rlcf	___aodiv@quotient+5,f,c
  2980  001582  361D               	rlcf	___aodiv@quotient+6,f,c
  2981  001584  361E               	rlcf	___aodiv@quotient+7,f,c
  2982  001586  500D               	movf	___aodiv@divisor,w,c
  2983  001588  5C05               	subwf	___aodiv@dividend,w,c
  2984  00158A  500E               	movf	___aodiv@divisor+1,w,c
  2985  00158C  5806               	subwfb	___aodiv@dividend+1,w,c
  2986  00158E  500F               	movf	___aodiv@divisor+2,w,c
  2987  001590  5807               	subwfb	___aodiv@dividend+2,w,c
  2988  001592  5010               	movf	___aodiv@divisor+3,w,c
  2989  001594  5808               	subwfb	___aodiv@dividend+3,w,c
  2990  001596  5011               	movf	___aodiv@divisor+4,w,c
  2991  001598  5809               	subwfb	___aodiv@dividend+4,w,c
  2992  00159A  5012               	movf	___aodiv@divisor+5,w,c
  2993  00159C  580A               	subwfb	___aodiv@dividend+5,w,c
  2994  00159E  5013               	movf	___aodiv@divisor+6,w,c
  2995  0015A0  580B               	subwfb	___aodiv@dividend+6,w,c
  2996  0015A2  5014               	movf	___aodiv@divisor+7,w,c
  2997  0015A4  580C               	subwfb	___aodiv@dividend+7,w,c
  2998  0015A6  A0D8               	btfss	status,0,c
  2999  0015A8  D011               	goto	l2442
  3000  0015AA  500D               	movf	___aodiv@divisor,w,c
  3001  0015AC  5E05               	subwf	___aodiv@dividend,f,c
  3002  0015AE  500E               	movf	___aodiv@divisor+1,w,c
  3003  0015B0  5A06               	subwfb	___aodiv@dividend+1,f,c
  3004  0015B2  500F               	movf	___aodiv@divisor+2,w,c
  3005  0015B4  5A07               	subwfb	___aodiv@dividend+2,f,c
  3006  0015B6  5010               	movf	___aodiv@divisor+3,w,c
  3007  0015B8  5A08               	subwfb	___aodiv@dividend+3,f,c
  3008  0015BA  5011               	movf	___aodiv@divisor+4,w,c
  3009  0015BC  5A09               	subwfb	___aodiv@dividend+4,f,c
  3010  0015BE  5012               	movf	___aodiv@divisor+5,w,c
  3011  0015C0  5A0A               	subwfb	___aodiv@dividend+5,f,c
  3012  0015C2  5013               	movf	___aodiv@divisor+6,w,c
  3013  0015C4  5A0B               	subwfb	___aodiv@dividend+6,f,c
  3014  0015C6  5014               	movf	___aodiv@divisor+7,w,c
  3015  0015C8  5A0C               	subwfb	___aodiv@dividend+7,f,c
  3016  0015CA  8017               	bsf	___aodiv@quotient,0,c
  3017  0015CC                     l2442:
  3018  0015CC  90D8               	bcf	status,0,c
  3019  0015CE  3214               	rrcf	___aodiv@divisor+7,f,c
  3020  0015D0  3213               	rrcf	___aodiv@divisor+6,f,c
  3021  0015D2  3212               	rrcf	___aodiv@divisor+5,f,c
  3022  0015D4  3211               	rrcf	___aodiv@divisor+4,f,c
  3023  0015D6  3210               	rrcf	___aodiv@divisor+3,f,c
  3024  0015D8  320F               	rrcf	___aodiv@divisor+2,f,c
  3025  0015DA  320E               	rrcf	___aodiv@divisor+1,f,c
  3026  0015DC  320D               	rrcf	___aodiv@divisor,f,c
  3027  0015DE  2E15               	decfsz	___aodiv@counter,f,c
  3028  0015E0  D7C9               	goto	u2150
  3029  0015E2                     l2446:
  3030  0015E2  5016               	movf	___aodiv@sign,w,c
  3031  0015E4  B4D8               	btfsc	status,2,c
  3032  0015E6  D010               	goto	l2450
  3033  0015E8  1E1E               	comf	___aodiv@quotient+7,f,c
  3034  0015EA  1E1D               	comf	___aodiv@quotient+6,f,c
  3035  0015EC  1E1C               	comf	___aodiv@quotient+5,f,c
  3036  0015EE  1E1B               	comf	___aodiv@quotient+4,f,c
  3037  0015F0  1E1A               	comf	___aodiv@quotient+3,f,c
  3038  0015F2  1E19               	comf	___aodiv@quotient+2,f,c
  3039  0015F4  1E18               	comf	___aodiv@quotient+1,f,c
  3040  0015F6  6C17               	negf	___aodiv@quotient,c
  3041  0015F8  0E00               	movlw	0
  3042  0015FA  2218               	addwfc	___aodiv@quotient+1,f,c
  3043  0015FC  2219               	addwfc	___aodiv@quotient+2,f,c
  3044  0015FE  221A               	addwfc	___aodiv@quotient+3,f,c
  3045  001600  221B               	addwfc	___aodiv@quotient+4,f,c
  3046  001602  221C               	addwfc	___aodiv@quotient+5,f,c
  3047  001604  221D               	addwfc	___aodiv@quotient+6,f,c
  3048  001606  221E               	addwfc	___aodiv@quotient+7,f,c
  3049  001608                     l2450:
  3050  001608  C017  F005         	movff	___aodiv@quotient,?___aodiv
  3051  00160C  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  3052  001610  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  3053  001614  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  3054  001618  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  3055  00161C  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  3056  001620  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  3057  001624  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  3058  001628  0012               	return		;funcret
  3059  00162A                     __end_of___aodiv:
  3060                           	opt callstack 0
  3061                           
  3062 ;; *************** function _i2c_init *****************
  3063 ;; Defined at:
  3064 ;;		line 89 in file "main.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  i2c_clock       1    0        unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;Total ram usage:        1 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    4
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           	psect	text16
  3093  001D5A                     __ptext16:
  3094                           	opt callstack 0
  3095  001D5A                     _i2c_init:
  3096                           	opt callstack 26
  3097                           
  3098                           ;main.c: 90:     TRISCbits.RC3=1;
  3099                           
  3100                           ;incstack = 0
  3101  001D5A  8694               	bsf	3988,3,c	;volatile
  3102                           
  3103                           ;main.c: 91:     TRISCbits.RC4=1;
  3104  001D5C  8894               	bsf	3988,4,c	;volatile
  3105                           
  3106                           ;main.c: 93:     ANSELCbits.ANSC3 = 0;
  3107  001D5E  010F               	movlb	15	; () banked
  3108  001D60  973A               	bcf	58,3,b	;volatile
  3109                           
  3110                           ;main.c: 94:     ANSELCbits.ANSC4 = 0;
  3111  001D62  993A               	bcf	58,4,b	;volatile
  3112                           
  3113                           ; BSR set to: 15
  3114                           ;main.c: 98:     SSP1ADD = 0x9F;
  3115  001D64  0E9F               	movlw	159
  3116  001D66  6EC8               	movwf	4040,c	;volatile
  3117                           
  3118                           ;main.c: 99:     SSP1CON1 = 0x28;
  3119  001D68  0E28               	movlw	40
  3120  001D6A  6EC6               	movwf	4038,c	;volatile
  3121                           
  3122                           ; BSR set to: 15
  3123  001D6C  0012               	return		;funcret
  3124  001D6E                     __end_of_i2c_init:
  3125                           	opt callstack 0
  3126                           
  3127 ;; *************** function _SYSTEM_Initialize *****************
  3128 ;; Defined at:
  3129 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    6
  3150 ;; This function calls:
  3151 ;;		_EUSART1_Initialize
  3152 ;;		_INTERRUPT_Initialize
  3153 ;;		_OSCILLATOR_Initialize
  3154 ;;		_PIN_MANAGER_Initialize
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text17
  3161  001D6E                     __ptext17:
  3162                           	opt callstack 0
  3163  001D6E                     _SYSTEM_Initialize:
  3164                           	opt callstack 24
  3165                           
  3166                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3167                           
  3168                           ; BSR set to: 15
  3169                           ;incstack = 0
  3170  001D6E  ECED  F00E         	call	_INTERRUPT_Initialize	;wreg free
  3171                           
  3172                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3173  001D72  EC38  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
  3174                           
  3175                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3176  001D76  ECC0  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  3177                           
  3178                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  3179  001D7A  ECD2  F00C         	call	_EUSART1_Initialize	;wreg free
  3180  001D7E  0012               	return		;funcret
  3181  001D80                     __end_of_SYSTEM_Initialize:
  3182                           	opt callstack 0
  3183                           
  3184 ;; *************** function _PIN_MANAGER_Initialize *****************
  3185 ;; Defined at:
  3186 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg, status,2
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;Total ram usage:        0 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:    4
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_SYSTEM_Initialize
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text18
  3215  001C70                     __ptext18:
  3216                           	opt callstack 0
  3217  001C70                     _PIN_MANAGER_Initialize:
  3218                           	opt callstack 25
  3219                           
  3220                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3221                           
  3222                           ;incstack = 0
  3223  001C70  0E00               	movlw	0
  3224  001C72  6E89               	movwf	3977,c	;volatile
  3225                           
  3226                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3227  001C74  0E00               	movlw	0
  3228  001C76  6E8A               	movwf	3978,c	;volatile
  3229                           
  3230                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3231  001C78  0E00               	movlw	0
  3232  001C7A  6E8B               	movwf	3979,c	;volatile
  3233                           
  3234                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  3235  001C7C  6892               	setf	3986,c	;volatile
  3236                           
  3237                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  3238  001C7E  0EDF               	movlw	223
  3239  001C80  6E93               	movwf	3987,c	;volatile
  3240                           
  3241                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3242  001C82  0EBF               	movlw	191
  3243  001C84  6E94               	movwf	3988,c	;volatile
  3244                           
  3245                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3246  001C86  0E3C               	movlw	60
  3247  001C88  010F               	movlb	15	; () banked
  3248  001C8A  6F3A               	movwf	58,b	;volatile
  3249                           
  3250                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x1F;
  3251  001C8C  0E1F               	movlw	31
  3252  001C8E  6F39               	movwf	57,b	;volatile
  3253                           
  3254                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3255  001C90  0E2F               	movlw	47
  3256  001C92  6F38               	movwf	56,b	;volatile
  3257                           
  3258                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3259  001C94  0E00               	movlw	0
  3260  001C96  6E61               	movwf	3937,c	;volatile
  3261                           
  3262                           ; BSR set to: 15
  3263                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3264  001C98  8EF1               	bsf	4081,7,c	;volatile
  3265                           
  3266                           ; BSR set to: 15
  3267  001C9A  0012               	return		;funcret
  3268  001C9C                     __end_of_PIN_MANAGER_Initialize:
  3269                           	opt callstack 0
  3270                           
  3271 ;; *************** function _OSCILLATOR_Initialize *****************
  3272 ;; Defined at:
  3273 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;		None
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;		None
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;Total ram usage:        0 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    4
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		_SYSTEM_Initialize
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text19
  3302  001D80                     __ptext19:
  3303                           	opt callstack 0
  3304  001D80                     _OSCILLATOR_Initialize:
  3305                           	opt callstack 25
  3306                           
  3307                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  3308                           
  3309                           ; BSR set to: 15
  3310                           ;incstack = 0
  3311  001D80  0E70               	movlw	112
  3312  001D82  6ED3               	movwf	4051,c	;volatile
  3313                           
  3314                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  3315  001D84  0E04               	movlw	4
  3316  001D86  6ED2               	movwf	4050,c	;volatile
  3317                           
  3318                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
  3319  001D88  0E40               	movlw	64
  3320  001D8A  6E9B               	movwf	3995,c	;volatile
  3321  001D8C                     l22:
  3322                           
  3323                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
  3324  001D8C  BED2               	btfsc	4050,7,c	;volatile
  3325  001D8E  0012               	return	
  3326  001D90  D7FD               	goto	l22
  3327  001D92                     __end_of_OSCILLATOR_Initialize:
  3328                           	opt callstack 0
  3329                           
  3330 ;; *************** function _INTERRUPT_Initialize *****************
  3331 ;; Defined at:
  3332 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		None
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    4
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_SYSTEM_Initialize
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text20
  3361  001DDA                     __ptext20:
  3362                           	opt callstack 0
  3363  001DDA                     _INTERRUPT_Initialize:
  3364                           	opt callstack 25
  3365                           
  3366                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3367                           
  3368                           ;incstack = 0
  3369  001DDA  9ED0               	bcf	4048,7,c	;volatile
  3370  001DDC  0012               	return		;funcret
  3371  001DDE                     __end_of_INTERRUPT_Initialize:
  3372                           	opt callstack 0
  3373                           
  3374 ;; *************** function _EUSART1_Initialize *****************
  3375 ;; Defined at:
  3376 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    5
  3397 ;; This function calls:
  3398 ;;		_EUSART1_SetErrorHandler
  3399 ;;		_EUSART1_SetFramingErrorHandler
  3400 ;;		_EUSART1_SetOverrunErrorHandler
  3401 ;;		_EUSART1_SetRxInterruptHandler
  3402 ;;		_EUSART1_SetTxInterruptHandler
  3403 ;; This function is called by:
  3404 ;;		_SYSTEM_Initialize
  3405 ;;		_main
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text21
  3410  0019A4                     __ptext21:
  3411                           	opt callstack 0
  3412  0019A4                     _EUSART1_Initialize:
  3413                           	opt callstack 24
  3414                           
  3415                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  3416                           
  3417                           ;incstack = 0
  3418  0019A4  9A9D               	bcf	3997,5,c	;volatile
  3419                           
  3420                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3421  0019A6  0E76               	movlw	low _EUSART1_Receive_ISR
  3422  0019A8  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  3423  0019AA  0E18               	movlw	high _EUSART1_Receive_ISR
  3424  0019AC  6E06               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  3425  0019AE  ECD3  F00E         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  3426                           
  3427                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  3428  0019B2  989D               	bcf	3997,4,c	;volatile
  3429                           
  3430                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  3431  0019B4  0E9C               	movlw	low _EUSART1_Transmit_ISR
  3432  0019B6  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  3433  0019B8  0E1C               	movlw	high _EUSART1_Transmit_ISR
  3434  0019BA  6E06               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  3435  0019BC  ECCE  F00E         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  3436                           
  3437                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  3438  0019C0  0E08               	movlw	8
  3439  0019C2  6EB8               	movwf	4024,c	;volatile
  3440                           
  3441                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  3442  0019C4  0E90               	movlw	144
  3443  0019C6  6EAB               	movwf	4011,c	;volatile
  3444                           
  3445                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  3446  0019C8  0E24               	movlw	36
  3447  0019CA  6EAC               	movwf	4012,c	;volatile
  3448                           
  3449                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x82;
  3450  0019CC  0E82               	movlw	130
  3451  0019CE  6EAF               	movwf	4015,c	;volatile
  3452                           
  3453                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x06;
  3454  0019D0  0E06               	movlw	6
  3455  0019D2  6EB0               	movwf	4016,c	;volatile
  3456                           
  3457                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3458  0019D4  0EDE               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3459  0019D6  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  3460  0019D8  0E1D               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3461  0019DA  6E06               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  3462  0019DC  ECDD  F00E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3463                           
  3464                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3465  0019E0  0ECE               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3466  0019E2  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  3467  0019E4  0E1D               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3468  0019E6  6E06               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  3469  0019E8  ECD8  F00E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3470                           
  3471                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3472  0019EC  0ED4               	movlw	low _EUSART1_DefaultErrorHandler
  3473  0019EE  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  3474  0019F0  0E1D               	movlw	high _EUSART1_DefaultErrorHandler
  3475  0019F2  6E06               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  3476  0019F4  ECE2  F00E         	call	_EUSART1_SetErrorHandler	;wreg free
  3477                           
  3478                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3479  0019F8  0E00               	movlw	0
  3480  0019FA  0100               	movlb	0	; () banked
  3481  0019FC  6F73               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3482                           
  3483                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3484  0019FE  0E00               	movlw	0
  3485  001A00  6F77               	movwf	_eusart1TxHead& (0+255),b	;volatile
  3486                           
  3487                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3488  001A02  0E00               	movlw	0
  3489  001A04  6F76               	movwf	_eusart1TxTail& (0+255),b	;volatile
  3490                           
  3491                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3492  001A06  0E40               	movlw	64
  3493  001A08  6F75               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3494                           
  3495                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3496  001A0A  0E00               	movlw	0
  3497  001A0C  6E5A               	movwf	_eusart1RxHead,c	;volatile
  3498                           
  3499                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3500  001A0E  0E00               	movlw	0
  3501  001A10  6E59               	movwf	_eusart1RxTail,c	;volatile
  3502                           
  3503                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3504  001A12  0E00               	movlw	0
  3505  001A14  6F74               	movwf	_eusart1RxCount& (0+255),b	;volatile
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  3509  001A16  8A9D               	bsf	3997,5,c	;volatile
  3510                           
  3511                           ; BSR set to: 0
  3512  001A18  0012               	return		;funcret
  3513  001A1A                     __end_of_EUSART1_Initialize:
  3514                           	opt callstack 0
  3515                           
  3516 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3517 ;; Defined at:
  3518 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3521 ;;		 -> EUSART1_Transmit_ISR(1), 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;Total ram usage:        2 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    4
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_EUSART1_Initialize
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text22
  3548  001D9C                     __ptext22:
  3549                           	opt callstack 0
  3550  001D9C                     _EUSART1_SetTxInterruptHandler:
  3551                           	opt callstack 24
  3552                           
  3553                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;incstack = 0
  3557  001D9C  C005  F06E         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  3558  001DA0  C006  F06F         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  3559  001DA4  0012               	return		;funcret
  3560  001DA6                     __end_of_EUSART1_SetTxInterruptHandler:
  3561                           	opt callstack 0
  3562                           
  3563 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3564 ;; Defined at:
  3565 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3568 ;;		 -> EUSART1_Receive_ISR(1), 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;Total ram usage:        2 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    4
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_EUSART1_Initialize
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text23
  3595  001DA6                     __ptext23:
  3596                           	opt callstack 0
  3597  001DA6                     _EUSART1_SetRxInterruptHandler:
  3598                           	opt callstack 24
  3599                           
  3600                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3601                           
  3602                           ;incstack = 0
  3603  001DA6  C005  F06C         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  3604  001DAA  C006  F06D         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  3605  001DAE  0012               	return		;funcret
  3606  001DB0                     __end_of_EUSART1_SetRxInterruptHandler:
  3607                           	opt callstack 0
  3608                           
  3609 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3610 ;; Defined at:
  3611 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3614 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;Total ram usage:        2 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    4
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_EUSART1_Initialize
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text24
  3641  001DB0                     __ptext24:
  3642                           	opt callstack 0
  3643  001DB0                     _EUSART1_SetOverrunErrorHandler:
  3644                           	opt callstack 24
  3645                           
  3646                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  3647                           
  3648                           ;incstack = 0
  3649  001DB0  C005  F068         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3650  001DB4  C006  F069         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3651  001DB8  0012               	return		;funcret
  3652  001DBA                     __end_of_EUSART1_SetOverrunErrorHandler:
  3653                           	opt callstack 0
  3654                           
  3655 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3656 ;; Defined at:
  3657 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3660 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;Total ram usage:        2 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    4
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_EUSART1_Initialize
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text25
  3687  001DBA                     __ptext25:
  3688                           	opt callstack 0
  3689  001DBA                     _EUSART1_SetFramingErrorHandler:
  3690                           	opt callstack 24
  3691                           
  3692                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  3693                           
  3694                           ;incstack = 0
  3695  001DBA  C005  F06A         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3696  001DBE  C006  F06B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3697  001DC2  0012               	return		;funcret
  3698  001DC4                     __end_of_EUSART1_SetFramingErrorHandler:
  3699                           	opt callstack 0
  3700                           
  3701 ;; *************** function _EUSART1_SetErrorHandler *****************
  3702 ;; Defined at:
  3703 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3706 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    4
  3725 ;; This function calls:
  3726 ;;		Nothing
  3727 ;; This function is called by:
  3728 ;;		_EUSART1_Initialize
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text26
  3733  001DC4                     __ptext26:
  3734                           	opt callstack 0
  3735  001DC4                     _EUSART1_SetErrorHandler:
  3736                           	opt callstack 24
  3737                           
  3738                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  3739                           
  3740                           ;incstack = 0
  3741  001DC4  C005  F066         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3742  001DC8  C006  F067         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3743  001DCC  0012               	return		;funcret
  3744  001DCE                     __end_of_EUSART1_SetErrorHandler:
  3745                           	opt callstack 0
  3746                           
  3747 ;; *************** function _INTERRUPT_InterruptManager *****************
  3748 ;; Defined at:
  3749 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;Total ram usage:        4 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    3
  3770 ;; This function calls:
  3771 ;;		Absolute function
  3772 ;;		_EUSART1_Receive_ISR
  3773 ;;		_EUSART1_Transmit_ISR
  3774 ;; This function is called by:
  3775 ;;		Interrupt level 2
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	intcode
  3780  000008                     __pintcode:
  3781                           	opt callstack 0
  3782  000008                     _INTERRUPT_InterruptManager:
  3783                           	opt callstack 17
  3784                           
  3785                           ;incstack = 0
  3786  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3787  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3788  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3789  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3790  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3791                           
  3792                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  3793  00001A  ACF2               	btfss	4082,6,c	;volatile
  3794  00001C  D01B               	goto	i2u178_49
  3795                           
  3796                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  3797  00001E  B89D               	btfsc	3997,4,c	;volatile
  3798  000020  A89E               	btfss	3998,4,c	;volatile
  3799  000022  D009               	goto	i2l226
  3800                           
  3801                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  3802  000024  D801               	call	i2u175_48
  3803  000026  D016               	goto	i2u178_49
  3804  000028                     i2u175_48:
  3805  000028  0005               	push	
  3806  00002A  6EFA               	movwf	pclath,c
  3807  00002C  0100               	movlb	0	; () banked
  3808  00002E  516E               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  3809  000030  6EFD               	movwf	tosl,c
  3810  000032  516F               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  3811  000034  D00B               	goto	L2
  3812  000036                     i2l226:
  3813  000036  BA9D               	btfsc	3997,5,c	;volatile
  3814  000038  AA9E               	btfss	3998,5,c	;volatile
  3815  00003A  D00C               	goto	i2u178_49
  3816                           
  3817                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  3818  00003C  D801               	call	i2u178_48
  3819  00003E  D00A               	goto	i2u178_49
  3820  000040                     i2u178_48:
  3821  000040  0005               	push	
  3822  000042  6EFA               	movwf	pclath,c
  3823  000044  0100               	movlb	0	; () banked
  3824  000046  516C               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  3825  000048  6EFD               	movwf	tosl,c
  3826  00004A  516D               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  3827  00004C                     L2:
  3828  00004C  6EFE               	movwf	tosh,c
  3829  00004E  6AFF               	clrf	tosu,c
  3830  000050  50FA               	movf	pclath,w,c
  3831  000052  0012               	return		;indir
  3832  000054                     i2u178_49:
  3833                           
  3834                           ;mcc_generated_files/interrupt_manager.c: 75:     }
  3835                           
  3836                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  3837  000054  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3838  000058  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3839  00005C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3840  000060  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3841  000064  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3842  000066  0011               	retfie		f
  3843  000068                     __end_of_INTERRUPT_InterruptManager:
  3844                           	opt callstack 0
  3845                           
  3846 ;; *************** function _EUSART1_Transmit_ISR *****************
  3847 ;; Defined at:
  3848 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_EUSART1_Initialize
  3872 ;;		_INTERRUPT_InterruptManager
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text28
  3877  001C9C                     __ptext28:
  3878                           	opt callstack 0
  3879  001C9C                     _EUSART1_Transmit_ISR:
  3880                           	opt callstack 19
  3881                           
  3882                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  3883                           
  3884                           ;incstack = 0
  3885  001C9C  0E40               	movlw	64
  3886  001C9E  0100               	movlb	0	; () banked
  3887  001CA0  6175               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  3888  001CA2  D010               	goto	i2l167
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  3892  001CA4  0E80               	movlw	low _eusart1TxBuffer
  3893  001CA6  2576               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  3894  001CA8  6ED9               	movwf	fsr2l,c
  3895  001CAA  6ADA               	clrf	fsr2h,c
  3896  001CAC  0E01               	movlw	high _eusart1TxBuffer
  3897  001CAE  22DA               	addwfc	fsr2h,f,c
  3898  001CB0  50DF               	movf	indf2,w,c
  3899  001CB2  6EAD               	movwf	4013,c	;volatile
  3900                           
  3901                           ; BSR set to: 0
  3902  001CB4  2B76               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  3906  001CB6  0E3F               	movlw	63
  3907  001CB8  6576               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  3908  001CBA  D002               	goto	i2l2194
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  3912  001CBC  0E00               	movlw	0
  3913  001CBE  6F76               	movwf	_eusart1TxTail& (0+255),b	;volatile
  3914  001CC0                     i2l2194:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  3918  001CC0  2B75               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  3919                           
  3920                           ;mcc_generated_files/eusart1.c: 218:     }
  3921  001CC2  0012               	return	
  3922  001CC4                     i2l167:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  3926  001CC4  989D               	bcf	3997,4,c	;volatile
  3927                           
  3928                           ; BSR set to: 0
  3929  001CC6  0012               	return		;funcret
  3930  001CC8                     __end_of_EUSART1_Transmit_ISR:
  3931                           	opt callstack 0
  3932                           
  3933 ;; *************** function _EUSART1_Receive_ISR *****************
  3934 ;; Defined at:
  3935 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;Total ram usage:        0 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    2
  3956 ;; This function calls:
  3957 ;;		Absolute function
  3958 ;;		_EUSART1_DefaultErrorHandler
  3959 ;;		_EUSART1_DefaultFramingErrorHandler
  3960 ;;		_EUSART1_DefaultOverrunErrorHandler
  3961 ;;		_EUSART1_RxDataHandler
  3962 ;; This function is called by:
  3963 ;;		_EUSART1_Initialize
  3964 ;;		_INTERRUPT_InterruptManager
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text29
  3969  001876                     __ptext29:
  3970                           	opt callstack 0
  3971  001876                     _EUSART1_Receive_ISR:
  3972                           	opt callstack 17
  3973                           
  3974                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;incstack = 0
  3978  001876  0E00               	movlw	low _eusart1RxStatusBuffer
  3979  001878  245A               	addwf	_eusart1RxHead,w,c	;volatile
  3980  00187A  6ED9               	movwf	fsr2l,c
  3981  00187C  6ADA               	clrf	fsr2h,c
  3982  00187E  0E01               	movlw	high _eusart1RxStatusBuffer
  3983  001880  22DA               	addwfc	fsr2h,f,c
  3984  001882  0E00               	movlw	0
  3985  001884  6EDF               	movwf	indf2,c
  3986                           
  3987                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  3988  001886  A4AB               	btfss	4011,2,c	;volatile
  3989  001888  D014               	goto	i2u163_49
  3990                           
  3991                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  3992  00188A  0E00               	movlw	low _eusart1RxStatusBuffer
  3993  00188C  245A               	addwf	_eusart1RxHead,w,c	;volatile
  3994  00188E  6ED9               	movwf	fsr2l,c
  3995  001890  6ADA               	clrf	fsr2h,c
  3996  001892  0E01               	movlw	high _eusart1RxStatusBuffer
  3997  001894  22DA               	addwfc	fsr2h,f,c
  3998  001896  0101               	movlb	1	; () banked
  3999  001898  82DF               	bsf	indf2,1,c
  4000                           
  4001                           ; BSR set to: 1
  4002                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  4003  00189A  D801               	call	i2u163_48
  4004  00189C  D00A               	goto	i2u163_49
  4005  00189E                     i2u163_48:
  4006  00189E  0005               	push	
  4007  0018A0  6EFA               	movwf	pclath,c
  4008  0018A2  0100               	movlb	0	; () banked
  4009  0018A4  516A               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  4010  0018A6  6EFD               	movwf	tosl,c
  4011  0018A8  516B               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  4012  0018AA  6EFE               	movwf	tosh,c
  4013  0018AC  6AFF               	clrf	tosu,c
  4014  0018AE  50FA               	movf	pclath,w,c
  4015  0018B0  0012               	return		;indir
  4016  0018B2                     i2u163_49:
  4017                           
  4018                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  4019  0018B2  A2AB               	btfss	4011,1,c	;volatile
  4020  0018B4  D014               	goto	i2u165_49
  4021                           
  4022                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  4023  0018B6  0E00               	movlw	low _eusart1RxStatusBuffer
  4024  0018B8  245A               	addwf	_eusart1RxHead,w,c	;volatile
  4025  0018BA  6ED9               	movwf	fsr2l,c
  4026  0018BC  6ADA               	clrf	fsr2h,c
  4027  0018BE  0E01               	movlw	high _eusart1RxStatusBuffer
  4028  0018C0  22DA               	addwfc	fsr2h,f,c
  4029  0018C2  0101               	movlb	1	; () banked
  4030  0018C4  84DF               	bsf	indf2,2,c
  4031                           
  4032                           ; BSR set to: 1
  4033                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  4034  0018C6  D801               	call	i2u165_48
  4035  0018C8  D00A               	goto	i2u165_49
  4036  0018CA                     i2u165_48:
  4037  0018CA  0005               	push	
  4038  0018CC  6EFA               	movwf	pclath,c
  4039  0018CE  0100               	movlb	0	; () banked
  4040  0018D0  5168               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  4041  0018D2  6EFD               	movwf	tosl,c
  4042  0018D4  5169               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  4043  0018D6  6EFE               	movwf	tosh,c
  4044  0018D8  6AFF               	clrf	tosu,c
  4045  0018DA  50FA               	movf	pclath,w,c
  4046  0018DC  0012               	return		;indir
  4047  0018DE                     i2u165_49:
  4048                           
  4049                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  4050  0018DE  0E00               	movlw	low _eusart1RxStatusBuffer
  4051  0018E0  245A               	addwf	_eusart1RxHead,w,c	;volatile
  4052  0018E2  6ED9               	movwf	fsr2l,c
  4053  0018E4  6ADA               	clrf	fsr2h,c
  4054  0018E6  0E01               	movlw	high _eusart1RxStatusBuffer
  4055  0018E8  22DA               	addwfc	fsr2h,f,c
  4056  0018EA  50DF               	movf	indf2,w,c
  4057  0018EC  B4D8               	btfsc	status,2,c
  4058  0018EE  D00C               	goto	i2l2214
  4059                           
  4060                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  4061  0018F0  D801               	call	i2u167_48
  4062  0018F2  0012               	return	
  4063  0018F4                     i2u167_48:
  4064  0018F4  0005               	push	
  4065  0018F6  6EFA               	movwf	pclath,c
  4066  0018F8  0100               	movlb	0	; () banked
  4067  0018FA  5166               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  4068  0018FC  6EFD               	movwf	tosl,c
  4069  0018FE  5167               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  4070  001900  6EFE               	movwf	tosh,c
  4071  001902  6AFF               	clrf	tosu,c
  4072  001904  50FA               	movf	pclath,w,c
  4073  001906  0012               	return		;indir
  4074  001908                     i2l2214:
  4075                           
  4076                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  4077  001908  EC8D  F00E         	call	_EUSART1_RxDataHandler	;wreg free
  4078  00190C  0012               	return		;funcret
  4079  00190E                     __end_of_EUSART1_Receive_ISR:
  4080                           	opt callstack 0
  4081                           
  4082 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  4083 ;; Defined at:
  4084 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		None
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_EUSART1_Initialize
  4108 ;;		_EUSART1_Receive_ISR
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text30
  4113  001DCE                     __ptext30:
  4114                           	opt callstack 0
  4115  001DCE                     _EUSART1_DefaultOverrunErrorHandler:
  4116                           	opt callstack 18
  4117                           
  4118                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  4119                           
  4120                           ;incstack = 0
  4121  001DCE  98AB               	bcf	4011,4,c	;volatile
  4122                           
  4123                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  4124  001DD0  88AB               	bsf	4011,4,c	;volatile
  4125  001DD2  0012               	return		;funcret
  4126  001DD4                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  4127                           	opt callstack 0
  4128                           
  4129 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4130 ;; Defined at:
  4131 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		None
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_EUSART1_Initialize
  4155 ;;		_EUSART1_Receive_ISR
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text31
  4160  001DDE                     __ptext31:
  4161                           	opt callstack 0
  4162  001DDE                     _EUSART1_DefaultFramingErrorHandler:
  4163                           	opt callstack 18
  4164                           
  4165                           ;incstack = 0
  4166  001DDE  0012               	return		;funcret
  4167  001DE0                     __end_of_EUSART1_DefaultFramingErrorHandler:
  4168                           	opt callstack 0
  4169                           
  4170 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  4171 ;; Defined at:
  4172 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    1
  4193 ;; This function calls:
  4194 ;;		_EUSART1_RxDataHandler
  4195 ;; This function is called by:
  4196 ;;		_EUSART1_Initialize
  4197 ;;		_EUSART1_Receive_ISR
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text32
  4202  001DD4                     __ptext32:
  4203                           	opt callstack 0
  4204  001DD4                     _EUSART1_DefaultErrorHandler:
  4205                           	opt callstack 17
  4206                           
  4207                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  4208                           
  4209                           ;incstack = 0
  4210  001DD4  EC8D  F00E         	call	_EUSART1_RxDataHandler	;wreg free
  4211  001DD8  0012               	return		;funcret
  4212  001DDA                     __end_of_EUSART1_DefaultErrorHandler:
  4213                           	opt callstack 0
  4214                           
  4215 ;; *************** function _EUSART1_RxDataHandler *****************
  4216 ;; Defined at:
  4217 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;Total ram usage:        0 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_EUSART1_Receive_ISR
  4241 ;;		_EUSART1_DefaultErrorHandler
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text33
  4246  001D1A                     __ptext33:
  4247                           	opt callstack 0
  4248  001D1A                     _EUSART1_RxDataHandler:
  4249                           	opt callstack 18
  4250                           
  4251                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  4252                           
  4253                           ;incstack = 0
  4254  001D1A  0E40               	movlw	low _eusart1RxBuffer
  4255  001D1C  245A               	addwf	_eusart1RxHead,w,c	;volatile
  4256  001D1E  6ED9               	movwf	fsr2l,c
  4257  001D20  6ADA               	clrf	fsr2h,c
  4258  001D22  0E01               	movlw	high _eusart1RxBuffer
  4259  001D24  22DA               	addwfc	fsr2h,f,c
  4260  001D26  CFAE FFDF          	movff	4014,indf2	;volatile
  4261  001D2A  2A5A               	incf	_eusart1RxHead,f,c	;volatile
  4262                           
  4263                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4264  001D2C  0E3F               	movlw	63
  4265  001D2E  645A               	cpfsgt	_eusart1RxHead,c	;volatile
  4266  001D30  D002               	goto	i2l2096
  4267                           
  4268                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  4269  001D32  0E00               	movlw	0
  4270  001D34  6E5A               	movwf	_eusart1RxHead,c	;volatile
  4271  001D36                     i2l2096:
  4272                           
  4273                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  4274  001D36  0100               	movlb	0	; () banked
  4275  001D38  2B74               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  4276                           
  4277                           ; BSR set to: 0
  4278  001D3A  0012               	return		;funcret
  4279  001D3C                     __end_of_EUSART1_RxDataHandler:
  4280                           	opt callstack 0
  4281                           
  4282                           	psect	text34
  4283  000000                     __ptext34:
  4284                           	opt callstack 0
  4285                           
  4286                           	psect	rparam
  4287  0000                     
  4288                           	psect	temp
  4289  00005B                     btemp:
  4290                           	opt callstack 0
  4291  00005B                     	ds	1
  4292  0000                     int$flags	set	btemp
  4293  0000                     wtemp8	set	btemp+1
  4294  0000                     ttemp5	set	btemp+1
  4295  0000                     ttemp6	set	btemp+4
  4296  0000                     ttemp7	set	btemp+8
  4297                           tosu	equ	0xFFF
  4298                           tosh	equ	0xFFE
  4299                           tosl	equ	0xFFD
  4300                           stkptr	equ	0xFFC
  4301                           pclatu	equ	0xFFB
  4302                           pclath	equ	0xFFA
  4303                           pcl	equ	0xFF9
  4304                           tblptru	equ	0xFF8
  4305                           tblptrh	equ	0xFF7
  4306                           tblptrl	equ	0xFF6
  4307                           tablat	equ	0xFF5
  4308                           prodh	equ	0xFF4
  4309                           prodl	equ	0xFF3
  4310                           indf0	equ	0xFEF
  4311                           postinc0	equ	0xFEE
  4312                           postdec0	equ	0xFED
  4313                           preinc0	equ	0xFEC
  4314                           plusw0	equ	0xFEB
  4315                           fsr0h	equ	0xFEA
  4316                           fsr0l	equ	0xFE9
  4317                           wreg	equ	0xFE8
  4318                           indf1	equ	0xFE7
  4319                           postinc1	equ	0xFE6
  4320                           postdec1	equ	0xFE5
  4321                           preinc1	equ	0xFE4
  4322                           plusw1	equ	0xFE3
  4323                           fsr1h	equ	0xFE2
  4324                           fsr1l	equ	0xFE1
  4325                           bsr	equ	0xFE0
  4326                           indf2	equ	0xFDF
  4327                           postinc2	equ	0xFDE
  4328                           postdec2	equ	0xFDD
  4329                           preinc2	equ	0xFDC
  4330                           plusw2	equ	0xFDB
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8


Data Sizes:
    Strings     161
    Constant    0
    Data        29
    BSS         272
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     25     130
    BANK1           256      0     192
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    i2c_write_serial@data	PTR unsigned char  size(2) Largest target is 3895
		 -> RAM(DATA[3895]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_13(CODE[4]), STR_12(CODE[10]), STR_9(CODE[9]), STR_6(CODE[21]), 
		 -> STR_5(CODE[25]), STR_4(CODE[18]), STR_3(CODE[16]), STR_2(CODE[35]), 
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1559_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_13(CODE[4]), STR_12(CODE[10]), STR_9(CODE[9]), STR_6(CODE[21]), 
		 -> STR_5(CODE[25]), STR_4(CODE[18]), STR_3(CODE[16]), STR_2(CODE[35]), 
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 35
		 -> STR_13(CODE[4]), STR_12(CODE[10]), STR_9(CODE[9]), STR_6(CODE[21]), 
		 -> STR_5(CODE[25]), STR_4(CODE[18]), STR_3(CODE[16]), STR_2(CODE[35]), 
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_i2c_write_serial
    _i2c_write_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_i2c_write_serial
    _i2c_write_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   28131
                                             23 BANK0      2     2      0
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                           _i2c_init
                   _i2c_write_serial
                             _printf
 ---------------------------------------------------------------------------------
 (1) _i2c_write_serial                                     6     3      3   13713
                                             83 COMRAM     3     3      0
                                             20 BANK0      3     0      3
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   13437
                                             79 COMRAM     4     4      0
                                             16 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12540
                                             77 COMRAM     2     2      0
                                             10 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6   12058
                                             69 COMRAM     8     2      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2732
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6853
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4587
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1577
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0       1
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _i2c_init
   _i2c_write_serial
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C0       7       75.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      82       5       81.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19C      12        0.0%
DATA                 0      0     19C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 12 09:32:58 2020

                      _eusart1TxBufferRemaining 0075                                              l22 1D8C  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                           l155 1C1A                                             l403 193C  
                                           l414 1118                                             l416 1120  
                                           l336 1B3C                                             l443 1690  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                                           _abs 1C3E                                             _pad 190E  
                                           _tmp 0071                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  __CFG_LVP$OFF 000000                                            ?_abs 0017  
                                          l1150 1C66                                            l2402 198A  
                                          l2332 1C08                                            l2430 155C  
                                          l2510 113A                                            l2432 1570  
                                          l2424 1536                                            l2450 1608  
                                          l2442 15CC                                            l2418 150E  
                                          l2346 1C38                                            l2514 1148  
                                          l2348 1C3A                                            l2372 1BEE  
                                          l2524 1240                                            l2620 144C  
                                          l2612 13DC                                            l2446 15E2  
                                          l2470 17BC                                            l2462 177E  
                                          l2358 1A32                                            l2630 1494  
                                          l2472 17D0                                            l2368 1BD8  
                                          l2376 1CD2                                            l2392 1934  
                                          l2544 12A4                                            l2560 1654  
                                          l2482 182E                                            l2466 17A2  
                                          l2378 1CD6                                            l2394 1946  
                                          l2570 16A6                                            l2626 148A  
                                          l2650 1AC0                                            l2388 1926  
                                          l2548 12BC                                            l2636 14AC  
                                          l2486 1854                                            l2478 1818  
                                          l2398 195E                                            l2574 16BE  
                                          l2496 10FA                                            l2592 1734  
                                          l2584 1702                                            l2648 1A9A  
                                          l2578 16DC                                            l2588 171C  
                                          l2676 1AEC                                            ?_pad 0017  
                                          STR_1 1074                                            STR_2 1001  
                                          STR_3 1064                                            STR_4 1052  
                                          STR_5 1024                                            STR_6 103D  
                                          STR_7 1093                                            STR_9 108A  
                                          u2010 1A2A                                            u2100 1C4C  
                                          u2030 1A72                                            u2210 17D4  
                                          u2131 153C                                            u2300 1134  
                                          _LATA 000F89                                            u2150 1574  
                                          u2310 124E                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u2240 10CC  
                                          u2330 1270                                            u2250 10CE  
                                          u2331 126E                                            u2340 127E  
                                          u2500 135E                                            u2350 1282  
                                          u2280 110E                                            u2440 16D2  
                                          u2370 128E                                            u2470 1748  
                                          u2391 1634                                            u2727 1B24  
                                          _WPUB 000F61                                   _EUSART1_Write 1C06  
                                          abs@a 0017                                            _dbuf 0078  
                                          _main 1ADE                                            _dtoa 10A4  
                                          _prec 0064                                            _nout 0060  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 162A                                            btemp 005B  
                                 __CFG_BORV$190 000000                                            start 0068  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 1D92  
                         _eusart1RxStatusBuffer 0100                                 __end_of___aodiv 162A  
                                         ?_main 0001                                           ?_dtoa 0022  
                               __end_of___aomod 1876                                           STR_10 1099  
                                         STR_12 1080                                           STR_13 109E  
                                         ?_stoa 0010                                  __CFG_DEBUG$OFF 000000  
                                         i2l226 0036                                           i2l167 1CC4  
                                  vfpfcnvrt@fmt 0048                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 1C9C                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                                         _debug 00C5                                           _flags 0057  
                                         _index 0070                                           _error 0072  
                                         _fputc 1A1A                                           _fputs 1BCE  
                            __CFG_MCLRE$EXTMCLR 000000                                           pad@fp 0017  
                                         _width 0062                                           _putch 1D92  
                                         dtoa@d 0024                                           dtoa@i 0044  
                                         dtoa@n 003C                                           dtoa@p 0036  
                                         dtoa@s 003A                                           dtoa@w 0038  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         tablat 000FF5                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 001C  
                                         stoa@l 0024                                           stoa@p 0022  
                                         stoa@s 0012                                           stoa@w 001E  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                  __CFG_HFOFST$ON 000000  
    __end_of_EUSART1_DefaultFramingErrorHandler 1DE0     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 1DDE                                  __CFG_PBADEN$ON 000000  
                               __initialization 1B84                      __end_of_EUSART1_Initialize 1A1A  
                                  __end_of_main 1B34                                    __end_of_dtoa 12E6  
                                  __end_of_stoa 1752                                __end_of_i2c_init 1D6E  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 00E0  
                                        ??_dtoa 002C                                          ??_stoa 0014  
                                 __activetblptr 000003                           ?_EUSART1_Transmit_ISR 0001  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        i2l2214 1908                        __end_of_i2c_write_serial 1B84  
                                        i2l2096 1D36                                          i2l2194 1CC0  
                                __CFG_WDTEN$OFF 000000                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 004E  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                __CFG_STVREN$ON 000000                        ?_EUSART1_SetErrorHandler 0005  
                                        clear_0 1BAA                                          clear_1 1BB6  
                                        _printf 1CF2                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        dtoa@fp 0022                                          _string 0098  
                                        _strlen 1CC8                                          fputc@c 0007  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                          stoa@cp 0020  
                                        stoa@fp 0010                                __end_of_vfprintf 1ADE  
                               ??_EUSART1_Write 0005                                 _eusart1RxBuffer 0140  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 0180  
                             _SYSTEM_Initialize 1D6E                                      __accesstop 0060  
                       __end_of__initialization 1BC4                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 0022  
                 __end_of_EUSART1_RxDataHandler 1D3C                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 1D3C                             ??_SYSTEM_Initialize 0007  
                                 __end_of_fputc 1A86                                   __end_of_fputs 1C06  
                                 __end_of_putch 1D9C                          ??_EUSART1_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 190E                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 1D80                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 005A  
                                 _eusart1TxHead 0077                                   _eusart1RxTail 0059  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                 _eusart1TxTail 0076               _EUSART1_TxDefaultInterruptHandler 006E  
               ??_EUSART1_SetRxInterruptHandler 0007                                 __CFG_PLLCFG$OFF 000000  
                                     ?_i2c_init 0001                 __end_of_EUSART1_SetErrorHandler 1DCE  
                            __CFG_CCP2MX$PORTC1 000000                              __CFG_CCP3MX$PORTB5 000000  
                        i2c_write_serial@length 00DF                                         ?_printf 00D9  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 1DC4  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 1DBA  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 01FC                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                                       _SSP1BUF 000FC9                                      ??_i2c_init 0005  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 14E2  
                                       ___aomod 1752                                       ?_vfprintf 00D3  
                                  __psmallconst 1000                                         __pcinit 1B84  
                                       __ramtop 1000                                         __ptext0 1ADE  
                                       __ptext1 1B34                                         __ptext2 1CF2  
                                       __ptext3 1A86                                         __ptext4 12E6  
                                       __ptext5 162A                                         __ptext6 10A4  
                                       __ptext7 190E                                         __ptext8 1CC8  
                                       __ptext9 1BCE                                 __size_of_printf 0028  
                               __size_of_strlen 002A                           _OSCILLATOR_Initialize 1D80  
                                  __size_of_abs 0032                                    __size_of_pad 0096  
                            _EUSART1_Initialize 19A4                        ??_PIN_MANAGER_Initialize 0005  
                 ??_EUSART1_DefaultErrorHandler 0001                      __size_of_SYSTEM_Initialize 0012  
                          end_of_initialization 1BC4                             ?_EUSART1_Initialize 0001  
                             ?_i2c_write_serial 00DD                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 0068                                         fputs@fp 0012  
                            ??_i2c_write_serial 0054           __end_of_EUSART1_SetRxInterruptHandler 1DB0  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 1DA6  
                             __end_of_vfpfcnvrt 14E2                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                                    ??_vfprintf 004E                            ??_EUSART1_Initialize 0007  
                                       strlen@a 0007                                         strlen@s 0005  
                                  _display_addr 00C7                                    _display_init 00C1  
                                     _TRISCbits 000F94                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005            __size_of_EUSART1_DefaultErrorHandler 0006  
                  __end_of_INTERRUPT_Initialize 1DDE                                     vfpfcnvrt@ap 004A  
                                   vfpfcnvrt@cp 00D1                                     vfpfcnvrt@fp 0046  
                                   vfpfcnvrt@ll 00C9                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 1D1A                                  __end_of_strlen 1CF2  
                           start_initialization 1B84                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 1C70                                     __end_of_pad 19A4  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART1_Write 1C3E  
                              _temperature_addr 00C8                               __size_of_i2c_init 0014  
                                   vfprintf@fmt 00D5                           _EUSART1_RxDataHandler 1D1A  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00AC  
                                      ??_printf 0050                                        ??_strlen 0007  
                                _eusart1RxCount 0074                                     __pbssCOMRAM 0057  
             _EUSART1_RxDefaultInterruptHandler 006C                   __size_of_EUSART1_Transmit_ISR 002C  
                                 __pcstackBANK0 00C9                                ___aodiv@dividend 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                    __size_of_EUSART1_Receive_ISR 0098  
                        _PIN_MANAGER_Initialize 1C70                                       _dtoa$1077 0034  
                                     __pintcode 0008                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                  ??_INTERRUPT_InterruptManager 0001                                __CFG_PRICLKEN$ON 000000  
                             __size_of_vfprintf 0058                                     __smallconst 1000  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 1DD4  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 1DCE  
                          _EUSART1_ErrorHandler 0066                         _EUSART1_SetErrorHandler 1DC4  
                                __size_of_fputc 006C                                  __size_of_fputs 0038  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 1DDA  
       EUSART1_SetErrorHandler@interruptHandler 0005                                        _LATBbits 000F8A  
                                      _PIE1bits 000F9D             __size_of_INTERRUPT_InterruptManager 0060  
                                      i2u163_48 189E                                        i2u163_49 18B2  
                                      i2u165_48 18CA                                        i2u165_49 18DE  
                                      i2u167_48 18F4                                        i2u175_48 0028  
                                      _PIR1bits 000F9E                                        i2u178_48 0040  
                                      i2u178_49 0054                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                      _SSP1CON1 000FC6                                        _SSP1CON2 000FC5  
                                      _SSP1STAT 000FC7                       __size_of_i2c_write_serial 0050  
                                     _vfpfcnvrt 12E6                      i2c_write_serial@targetAddr 0056  
                                   _INTCON2bits 000FF1                                       copy_data0 1B98  
                         ?_INTERRUPT_Initialize 0001                                        _i2c_init 1D5A  
         __end_of_EUSART1_SetTxInterruptHandler 1DA6          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 1D9C                                        __Hrparam 0000  
                                    vfprintf@ap 00D7                                        __Lrparam 0000  
                                    vfprintf@fp 00D3                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0005  
                              __size_of___aodiv 0148                                __size_of___aomod 0124  
                   __size_of_EUSART1_Initialize 0076                                      ?_vfpfcnvrt 0046  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                                    _ANSELCbits 000F3A                       ??_EUSART1_SetErrorHandler 0007  
           __end_of_EUSART1_DefaultErrorHandler 1DDA                     _EUSART1_DefaultErrorHandler 1DD4  
                          i2c_write_serial@addr 0055                            i2c_write_serial@data 00DD  
                                      __ptext10 1A1A                                        __ptext11 1D92  
                                      __ptext20 1DDA                                        __ptext12 1C06  
                                      __ptext21 19A4                                        __ptext13 1C3E  
                                      __ptext30 1DCE                                        __ptext22 1D9C  
                                      __ptext14 1752                                        __ptext31 1DDE  
                                      __ptext23 1DA6                                        __ptext15 14E2  
                                      __ptext32 1DD4                                        __ptext24 1DB0  
                                      __ptext16 1D5A                                        __ptext33 1D1A  
                                      __ptext25 1DBA                                        __ptext17 1D6E  
                                      __ptext34 0000                                        __ptext26 1DC4  
                                      __ptext18 1C70                                        __ptext19 1D80  
                                      __ptext28 1C9C                                        __ptext29 1876  
                                  _SSP1CON2bits 000FC5                                    _SSP2CON2bits 000F6B  
                                 __size_of_main 0056                                   __size_of_dtoa 0242  
                                 __size_of_stoa 0128                                       stoa@F1139 00BA  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        int$flags 005B  
                                      _vfprintf 1A86              __end_of_INTERRUPT_InterruptManager 0068  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00D9  
                   _EUSART1_FramingErrorHandler 006A                             _EUSART1_Receive_ISR 1876  
                              ___aomod@dividend 0005                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 0005                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1DBA         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1DB0                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 1CC8                                        printf@ap 0052  
EUSART1_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                               ___aomod@divisor 000D                                _i2c_write_serial 1B34  
                                   ??_vfpfcnvrt 004C                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 0038  
                            _eusart1RxLastError 0073                                     _temp_string 00AC  
                                   _temperature 00C6                               __CFG_T3CMX$PORTC0 000000  
                                  ___aodiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 1C9C                               __CFG_FOSC$INTIO67 000000  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
