

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Oct 02 11:02:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           ; Version 2.05
    67                           ; Generated 20/12/2018 GMT
    68                           ; 
    69                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F26K22 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataBANK0
   102  0014D4                     __pidataBANK0:
   103                           	opt callstack 0
   104                           
   105                           ;initializer for _display_init
   106  0014D4  00                 	db	0
   107  0014D5  38                 	db	56
   108  0014D6  0C                 	db	12
   109  0014D7  06                 	db	6
   110                           
   111                           ;initializer for _degree_pos
   112  0014D8  00                 	db	0
   113  0014D9  8A                 	db	138
   114                           
   115                           ;initializer for _shift_line
   116  0014DA  00                 	db	0
   117  0014DB  C0                 	db	192
   118                           
   119                           ;initializer for _first_line
   120  0014DC  00                 	db	0
   121  0014DD  80                 	db	128
   122                           
   123                           ;initializer for _eeprom_addr
   124  0014DE  50                 	db	80
   125                           
   126                           ;initializer for _display_addr
   127  0014DF  3C                 	db	60
   128                           
   129                           ;initializer for _tempaddrTC74
   130  0014E0  48                 	db	72
   131                           
   132                           ;initializer for _temperature_addr
   133  0014E1  27                 	db	39
   134                           
   135                           ;initializer for _precission
   136  0014E2  01                 	db	1
   137                           
   138                           ;initializer for _moist_pos
   139  0014E3  00                 	db	0
   140  0014E4  C6                 	db	198
   141                           
   142                           ;initializer for _temp_pos
   143  0014E5  00                 	db	0
   144  0014E6  84                 	db	132
   145                           
   146                           ;initializer for _minus
   147  0014E7  40                 	db	64
   148  0014E8  2D                 	db	45
   149                           
   150                           	psect	idataBANK1
   151  001276                     __pidataBANK1:
   152                           	opt callstack 0
   153                           
   154                           ;initializer for _moist_string
   155  001276  40                 	db	64
   156  001277  4D                 	db	77
   157  001278  6F                 	db	111
   158  001279  69                 	db	105
   159  00127A  73                 	db	115
   160  00127B  74                 	db	116
   161  00127C  3A                 	db	58
   162  00127D  78                 	db	120
   163  00127E  78                 	db	120
   164  00127F  78                 	db	120
   165  001280  25                 	db	37
   166  001281  20                 	db	32
   167  001282  20                 	db	32
   168  001283  20                 	db	32
   169  001284  20                 	db	32
   170  001285  20                 	db	32
   171  001286  20                 	db	32
   172  001287  00                 	db	0
   173                           
   174                           ;initializer for _temp_string
   175  001288  40                 	db	64
   176  001289  54                 	db	84
   177  00128A  6D                 	db	109
   178  00128B  70                 	db	112
   179  00128C  3A                 	db	58
   180  00128D  78                 	db	120
   181  00128E  78                 	db	120
   182  00128F  2C                 	db	44
   183  001290  78                 	db	120
   184  001291  6F                 	db	111
   185  001292  20                 	db	32
   186  001293  20                 	db	32
   187  001294  20                 	db	32
   188  001295  20                 	db	32
   189  001296  20                 	db	32
   190  001297  20                 	db	32
   191  001298  20                 	db	32
   192  001299  00                 	db	0
   193                           
   194                           ;initializer for _eeprom_write
   195  00129A  00                 	db	0
   196  00129B  00                 	db	0
   197  00129C  01                 	db	1
   198  00129D  02                 	db	2
   199  00129E  03                 	db	3
   200  00129F  04                 	db	4
   201  0012A0  05                 	db	5
   202  0012A1  06                 	db	6
   203  0012A2  07                 	db	7
   204  0012A3  08                 	db	8
   205  0012A4  09                 	db	9
   206  0012A5  0A                 	db	10
   207  0012A6  0B                 	db	11
   208  0012A7  0C                 	db	12
   209  0012A8  0D                 	db	13
   210  0012A9  0E                 	db	14
   211  0012AA  0F                 	db	15
   212  0000                     _ANSELA	set	3896
   213  0000                     _ANSELB	set	3897
   214  0000                     _ANSELC	set	3898
   215  0000                     _ANSELCbits	set	3898
   216  0000                     _PIR1bits	set	3998
   217  0000                     _RCONbits	set	4048
   218  0000                     _RCREG1	set	4014
   219  0000                     _RCSTA1bits	set	4011
   220  0000                     _TXREG1	set	4013
   221  0000                     _TXSTA1bits	set	4012
   222  0000                     _SPBRGH1	set	4016
   223  0000                     _SPBRG1	set	4015
   224  0000                     _TXSTA1	set	4012
   225  0000                     _RCSTA1	set	4011
   226  0000                     _BAUDCON1	set	4024
   227  0000                     _PIE1bits	set	3997
   228  0000                     _INTCON2bits	set	4081
   229  0000                     _WPUB	set	3937
   230  0000                     _TRISC	set	3988
   231  0000                     _TRISB	set	3987
   232  0000                     _TRISA	set	3986
   233  0000                     _LATC	set	3979
   234  0000                     _LATB	set	3978
   235  0000                     _LATA	set	3977
   236  0000                     _OSCTUNE	set	3995
   237  0000                     _OSCCON2	set	4050
   238  0000                     _OSCCON	set	4051
   239  0000                     _SSP1STATbits	set	4039
   240  0000                     _SSP1BUF	set	4041
   241  0000                     _SSP1CON2bits	set	4037
   242  0000                     _SSP1STAT	set	4039
   243  0000                     _SSP1CON2	set	4037
   244  0000                     _SSP1CON1	set	4038
   245  0000                     _SSP1ADD	set	4040
   246  0000                     _TRISCbits	set	3988
   247  0000                     _INTCONbits	set	4082
   248  0000                     _PLLRDY	set	32407
   249                           
   250                           	psect	mediumconst
   251  00FE30                     __pmediumconst:
   252                           	opt callstack 0
   253  00FE30  00                 	db	0
   254  00FE31                     STR_16:
   255                           
   256                           ; BSR set to: 0
   257  00FE31  0D                 	db	13
   258  00FE32  0A                 	db	10
   259  00FE33  2A                 	db	42
   260  00FE34  2A                 	db	42
   261  00FE35  2A                 	db	42
   262  00FE36  2A                 	db	42
   263  00FE37  2A                 	db	42
   264  00FE38  2A                 	db	42
   265  00FE39  2A                 	db	42
   266  00FE3A  2A                 	db	42
   267  00FE3B  2A                 	db	42
   268  00FE3C  2A                 	db	42
   269  00FE3D  2A                 	db	42
   270  00FE3E  52                 	db	82	;'R'
   271  00FE3F  45                 	db	69	;'E'
   272  00FE40  41                 	db	65	;'A'
   273  00FE41  44                 	db	68	;'D'
   274  00FE42  2A                 	db	42
   275  00FE43  2A                 	db	42
   276  00FE44  2A                 	db	42
   277  00FE45  2A                 	db	42
   278  00FE46  2A                 	db	42
   279  00FE47  2A                 	db	42
   280  00FE48  2A                 	db	42
   281  00FE49  2A                 	db	42
   282  00FE4A  2A                 	db	42
   283  00FE4B  2A                 	db	42
   284  00FE4C  2A                 	db	42
   285  00FE4D  2A                 	db	42
   286  00FE4E  2A                 	db	42
   287  00FE4F  2A                 	db	42
   288  00FE50  2A                 	db	42
   289  00FE51  2A                 	db	42
   290  00FE52  2A                 	db	42
   291  00FE53  0A                 	db	10
   292  00FE54  0D                 	db	13
   293  00FE55  00                 	db	0
   294  00FE56                     
   295                           ; BSR set to: 0
   296  00FE56  0A                 	db	10
   297  00FE57  0D                 	db	13
   298  00FE58  2A                 	db	42
   299  00FE59  2A                 	db	42
   300  00FE5A  2A                 	db	42
   301  00FE5B  2A                 	db	42
   302  00FE5C  2A                 	db	42
   303  00FE5D  2A                 	db	42
   304  00FE5E  2A                 	db	42
   305  00FE5F  2A                 	db	42
   306  00FE60  2A                 	db	42
   307  00FE61  2A                 	db	42
   308  00FE62  2A                 	db	42
   309  00FE63  57                 	db	87	;'W'
   310  00FE64  52                 	db	82	;'R'
   311  00FE65  49                 	db	73	;'I'
   312  00FE66  54                 	db	84	;'T'
   313  00FE67  45                 	db	69	;'E'
   314  00FE68  2A                 	db	42
   315  00FE69  2A                 	db	42
   316  00FE6A  2A                 	db	42
   317  00FE6B  2A                 	db	42
   318  00FE6C  2A                 	db	42
   319  00FE6D  2A                 	db	42
   320  00FE6E  2A                 	db	42
   321  00FE6F  2A                 	db	42
   322  00FE70  2A                 	db	42
   323  00FE71  2A                 	db	42
   324  00FE72  2A                 	db	42
   325  00FE73  2A                 	db	42
   326  00FE74  2A                 	db	42
   327  00FE75  2A                 	db	42
   328  00FE76  2A                 	db	42
   329  00FE77  2A                 	db	42
   330  00FE78  0A                 	db	10
   331  00FE79  0D                 	db	13
   332  00FE7A  00                 	db	0
   333  00FE7B                     STR_15:
   334                           
   335                           ; BSR set to: 0
   336  00FE7B  2A                 	db	42
   337  00FE7C  2A                 	db	42
   338  00FE7D  2A                 	db	42
   339  00FE7E  2A                 	db	42
   340  00FE7F  2A                 	db	42
   341  00FE80  2A                 	db	42
   342  00FE81  2A                 	db	42
   343  00FE82  2A                 	db	42
   344  00FE83  2A                 	db	42
   345  00FE84  2A                 	db	42
   346  00FE85  2A                 	db	42
   347  00FE86  2A                 	db	42
   348  00FE87  2A                 	db	42
   349  00FE88  2A                 	db	42
   350  00FE89  2A                 	db	42
   351  00FE8A  2A                 	db	42
   352  00FE8B  2A                 	db	42
   353  00FE8C  2A                 	db	42
   354  00FE8D  2A                 	db	42
   355  00FE8E  2A                 	db	42
   356  00FE8F  2A                 	db	42
   357  00FE90  2A                 	db	42
   358  00FE91  2A                 	db	42
   359  00FE92  2A                 	db	42
   360  00FE93  2A                 	db	42
   361  00FE94  2A                 	db	42
   362  00FE95  2A                 	db	42
   363  00FE96  2A                 	db	42
   364  00FE97  2A                 	db	42
   365  00FE98  2A                 	db	42
   366  00FE99  2A                 	db	42
   367  00FE9A  2A                 	db	42
   368  00FE9B  0A                 	db	10
   369  00FE9C  0D                 	db	13
   370  00FE9D  00                 	db	0
   371  00FE9E                     
   372                           ; BSR set to: 0
   373  00FE9E  4E                 	db	78	;'N'
   374  00FE9F  41                 	db	65	;'A'
   375  00FEA0  43                 	db	67	;'C'
   376  00FEA1  4B                 	db	75	;'K'
   377  00FEA2  20                 	db	32
   378  00FEA3  2D                 	db	45
   379  00FEA4  20                 	db	32
   380  00FEA5  46                 	db	70	;'F'
   381  00FEA6  65                 	db	101	;'e'
   382  00FEA7  6A                 	db	106	;'j'
   383  00FEA8  6C                 	db	108	;'l'
   384  00FEA9  20                 	db	32
   385  00FEAA  69                 	db	105	;'i'
   386  00FEAB  20                 	db	32
   387  00FEAC  73                 	db	115	;'s'
   388  00FEAD  6B                 	db	107	;'k'
   389  00FEAE  72                 	db	114	;'r'
   390  00FEAF  69                 	db	105	;'i'
   391  00FEB0  76                 	db	118	;'v'
   392  00FEB1  6E                 	db	110	;'n'
   393  00FEB2  69                 	db	105	;'i'
   394  00FEB3  6E                 	db	110	;'n'
   395  00FEB4  67                 	db	103	;'g'
   396  00FEB5  20                 	db	32
   397  00FEB6  61                 	db	97	;'a'
   398  00FEB7  66                 	db	102	;'f'
   399  00FEB8  20                 	db	32
   400  00FEB9  64                 	db	100	;'d'
   401  00FEBA  61                 	db	97	;'a'
   402  00FEBB  74                 	db	116	;'t'
   403  00FEBC  61                 	db	97	;'a'
   404  00FEBD  0D                 	db	13
   405  00FEBE  0A                 	db	10
   406  00FEBF  00                 	db	0
   407  00FEC0                     STR_9:
   408                           
   409                           ; BSR set to: 0
   410  00FEC0  41                 	db	65	;'A'
   411  00FEC1  43                 	db	67	;'C'
   412  00FEC2  4B                 	db	75	;'K'
   413  00FEC3  20                 	db	32
   414  00FEC4  2D                 	db	45
   415  00FEC5  20                 	db	32
   416  00FEC6  53                 	db	83	;'S'
   417  00FEC7  6B                 	db	107	;'k'
   418  00FEC8  72                 	db	114	;'r'
   419  00FEC9  65                 	db	101	;'e'
   420  00FECA  76                 	db	118	;'v'
   421  00FECB  20                 	db	32
   422  00FECC  64                 	db	100	;'d'
   423  00FECD  61                 	db	97	;'a'
   424  00FECE  74                 	db	116	;'t'
   425  00FECF  61                 	db	97	;'a'
   426  00FED0  3A                 	db	58	;':'
   427  00FED1  20                 	db	32
   428  00FED2  25                 	db	37
   429  00FED3  23                 	db	35
   430  00FED4  30                 	db	48	;'0'
   431  00FED5  32                 	db	50	;'2'
   432  00FED6  58                 	db	88	;'X'
   433  00FED7  20                 	db	32
   434  00FED8  2D                 	db	45
   435  00FED9  20                 	db	32
   436  00FEDA  25                 	db	37
   437  00FEDB  63                 	db	99	;'c'
   438  00FEDC  0A                 	db	10
   439  00FEDD  0D                 	db	13
   440  00FEDE  00                 	db	0
   441  00FEDF                     
   442                           ; BSR set to: 0
   443  00FEDF  41                 	db	65	;'A'
   444  00FEE0  43                 	db	67	;'C'
   445  00FEE1  4B                 	db	75	;'K'
   446  00FEE2  20                 	db	32
   447  00FEE3  2D                 	db	45
   448  00FEE4  20                 	db	32
   449  00FEE5  53                 	db	83	;'S'
   450  00FEE6  6B                 	db	107	;'k'
   451  00FEE7  72                 	db	114	;'r'
   452  00FEE8  65                 	db	101	;'e'
   453  00FEE9  76                 	db	118	;'v'
   454  00FEEA  20                 	db	32
   455  00FEEB  61                 	db	97	;'a'
   456  00FEEC  64                 	db	100	;'d'
   457  00FEED  72                 	db	114	;'r'
   458  00FEEE  65                 	db	101	;'e'
   459  00FEEF  73                 	db	115	;'s'
   460  00FEF0  73                 	db	115	;'s'
   461  00FEF1  65                 	db	101	;'e'
   462  00FEF2  3A                 	db	58	;':'
   463  00FEF3  20                 	db	32
   464  00FEF4  25                 	db	37
   465  00FEF5  23                 	db	35
   466  00FEF6  30                 	db	48	;'0'
   467  00FEF7  32                 	db	50	;'2'
   468  00FEF8  58                 	db	88	;'X'
   469  00FEF9  0A                 	db	10
   470  00FEFA  0D                 	db	13
   471  00FEFB  00                 	db	0
   472  00FEFC                     STR_19:
   473                           
   474                           ; BSR set to: 0
   475  00FEFC  53                 	db	83	;'S'
   476  00FEFD  6B                 	db	107	;'k'
   477  00FEFE  72                 	db	114	;'r'
   478  00FEFF  69                 	db	105	;'i'
   479  00FF00  76                 	db	118	;'v'
   480  00FF01  65                 	db	101	;'e'
   481  00FF02  72                 	db	114	;'r'
   482  00FF03  3A                 	db	58	;':'
   483  00FF04  20                 	db	32
   484  00FF05  61                 	db	97	;'a'
   485  00FF06  64                 	db	100	;'d'
   486  00FF07  72                 	db	114	;'r'
   487  00FF08  65                 	db	101	;'e'
   488  00FF09  73                 	db	115	;'s'
   489  00FF0A  73                 	db	115	;'s'
   490  00FF0B  65                 	db	101	;'e'
   491  00FF0C  3A                 	db	58	;':'
   492  00FF0D  20                 	db	32
   493  00FF0E  25                 	db	37
   494  00FF0F  23                 	db	35
   495  00FF10  30                 	db	48	;'0'
   496  00FF11  32                 	db	50	;'2'
   497  00FF12  58                 	db	88	;'X'
   498  00FF13  0A                 	db	10
   499  00FF14  0D                 	db	13
   500  00FF15  00                 	db	0
   501  00FF16                     STR_14:
   502                           
   503                           ; BSR set to: 0
   504  00FF16  4B                 	db	75	;'K'
   505  00FF17  75                 	db	117	;'u'
   506  00FF18  6E                 	db	110	;'n'
   507  00FF19  6E                 	db	110	;'n'
   508  00FF1A  65                 	db	101	;'e'
   509  00FF1B  20                 	db	32
   510  00FF1C  69                 	db	105	;'i'
   511  00FF1D  6B                 	db	107	;'k'
   512  00FF1E  6B                 	db	107	;'k'
   513  00FF1F  65                 	db	101	;'e'
   514  00FF20  20                 	db	32
   515  00FF21  66                 	db	102	;'f'
   516  00FF22  69                 	db	105	;'i'
   517  00FF23  6E                 	db	110	;'n'
   518  00FF24  64                 	db	100	;'d'
   519  00FF25  65                 	db	101	;'e'
   520  00FF26  20                 	db	32
   521  00FF27  65                 	db	101	;'e'
   522  00FF28  6E                 	db	110	;'n'
   523  00FF29  68                 	db	104	;'h'
   524  00FF2A  65                 	db	101	;'e'
   525  00FF2B  64                 	db	100	;'d'
   526  00FF2C  0D                 	db	13
   527  00FF2D  0A                 	db	10
   528  00FF2E  00                 	db	0
   529  00FF2F                     STR_25:
   530                           
   531                           ; BSR set to: 0
   532  00FF2F  52                 	db	82	;'R'
   533  00FF30  65                 	db	101	;'e'
   534  00FF31  74                 	db	116	;'t'
   535  00FF32  75                 	db	117	;'u'
   536  00FF33  72                 	db	114	;'r'
   537  00FF34  20                 	db	32
   538  00FF35  66                 	db	102	;'f'
   539  00FF36  72                 	db	114	;'r'
   540  00FF37  61                 	db	97	;'a'
   541  00FF38  20                 	db	32
   542  00FF39  54                 	db	84	;'T'
   543  00FF3A  43                 	db	67	;'C'
   544  00FF3B  37                 	db	55	;'7'
   545  00FF3C  34                 	db	52	;'4'
   546  00FF3D  3A                 	db	58	;':'
   547  00FF3E  20                 	db	32
   548  00FF3F  25                 	db	37
   549  00FF40  32                 	db	50	;'2'
   550  00FF41  64                 	db	100	;'d'
   551  00FF42  0D                 	db	13
   552  00FF43  0A                 	db	10
   553  00FF44  00                 	db	0
   554  00FF45                     
   555                           ; BSR set to: 0
   556  00FF45  4E                 	db	78	;'N'
   557  00FF46  41                 	db	65	;'A'
   558  00FF47  43                 	db	67	;'C'
   559  00FF48  4B                 	db	75	;'K'
   560  00FF49  20                 	db	32
   561  00FF4A  2D                 	db	45
   562  00FF4B  20                 	db	32
   563  00FF4C  67                 	db	103	;'g'
   564  00FF4D  65                 	db	101	;'e'
   565  00FF4E  6E                 	db	110	;'n'
   566  00FF4F  73                 	db	115	;'s'
   567  00FF50  65                 	db	101	;'e'
   568  00FF51  6E                 	db	110	;'n'
   569  00FF52  64                 	db	100	;'d'
   570  00FF53  65                 	db	101	;'e'
   571  00FF54  72                 	db	114	;'r'
   572  00FF55  0D                 	db	13
   573  00FF56  0A                 	db	10
   574  00FF57  00                 	db	0
   575  00FF58                     
   576                           ; BSR set to: 0
   577  00FF58  41                 	db	65	;'A'
   578  00FF59  64                 	db	100	;'d'
   579  00FF5A  64                 	db	100	;'d'
   580  00FF5B  72                 	db	114	;'r'
   581  00FF5C  65                 	db	101	;'e'
   582  00FF5D  73                 	db	115	;'s'
   583  00FF5E  73                 	db	115	;'s'
   584  00FF5F  65                 	db	101	;'e'
   585  00FF60  3A                 	db	58	;':'
   586  00FF61  20                 	db	32
   587  00FF62  25                 	db	37
   588  00FF63  23                 	db	35
   589  00FF64  30                 	db	48	;'0'
   590  00FF65  32                 	db	50	;'2'
   591  00FF66  58                 	db	88	;'X'
   592  00FF67  0D                 	db	13
   593  00FF68  0A                 	db	10
   594  00FF69  00                 	db	0
   595  00FF6A                     STR_2:
   596                           
   597                           ; BSR set to: 0
   598  00FF6A  53                 	db	83	;'S'
   599  00FF6B  74                 	db	116	;'t'
   600  00FF6C  61                 	db	97	;'a'
   601  00FF6D  72                 	db	114	;'r'
   602  00FF6E  74                 	db	116	;'t'
   603  00FF6F  20                 	db	32
   604  00FF70  70                 	db	112	;'p'
   605  00FF71  61                 	db	97	;'a'
   606  00FF72  20                 	db	32
   607  00FF73  6D                 	db	109	;'m'
   608  00FF74  61                 	db	97	;'a'
   609  00FF75  6C                 	db	108	;'l'
   610  00FF76  69                 	db	105	;'i'
   611  00FF77  6E                 	db	110	;'n'
   612  00FF78  67                 	db	103	;'g'
   613  00FF79  0D                 	db	13
   614  00FF7A  0A                 	db	10
   615  00FF7B  00                 	db	0
   616  00FF7C                     STR_1:
   617                           
   618                           ; BSR set to: 0
   619  00FF7C  4F                 	db	79	;'O'
   620  00FF7D  67                 	db	103	;'g'
   621  00FF7E  20                 	db	32
   622  00FF7F  6C                 	db	108	;'l'
   623  00FF80  E6                 	db	-26
   624  00FF81  73                 	db	115	;'s'
   625  00FF82  20                 	db	32
   626  00FF83  64                 	db	100	;'d'
   627  00FF84  65                 	db	101	;'e'
   628  00FF85  6D                 	db	109	;'m'
   629  00FF86  20                 	db	32
   630  00FF87  69                 	db	105	;'i'
   631  00FF88  67                 	db	103	;'g'
   632  00FF89  65                 	db	101	;'e'
   633  00FF8A  6E                 	db	110	;'n'
   634  00FF8B  0D                 	db	13
   635  00FF8C  0A                 	db	10
   636  00FF8D  00                 	db	0
   637  00FF8E                     STR_5:
   638                           
   639                           ; BSR set to: 0
   640  00FF8E  48                 	db	72	;'H'
   641  00FF8F  61                 	db	97	;'a'
   642  00FF90  72                 	db	114	;'r'
   643  00FF91  20                 	db	32
   644  00FF92  73                 	db	115	;'s'
   645  00FF93  65                 	db	101	;'e'
   646  00FF94  6E                 	db	110	;'n'
   647  00FF95  64                 	db	100	;'d'
   648  00FF96  74                 	db	116	;'t'
   649  00FF97  20                 	db	32
   650  00FF98  73                 	db	115	;'s'
   651  00FF99  74                 	db	116	;'t'
   652  00FF9A  61                 	db	97	;'a'
   653  00FF9B  72                 	db	114	;'r'
   654  00FF9C  74                 	db	116	;'t'
   655  00FF9D  0A                 	db	10
   656  00FF9E  0D                 	db	13
   657  00FF9F  00                 	db	0
   658  00FFA0                     STR_22:
   659                           
   660                           ; BSR set to: 0
   661  00FFA0  48                 	db	72	;'H'
   662  00FFA1  61                 	db	97	;'a'
   663  00FFA2  72                 	db	114	;'r'
   664  00FFA3  20                 	db	32
   665  00FFA4  73                 	db	115	;'s'
   666  00FFA5  65                 	db	101	;'e'
   667  00FFA6  6E                 	db	110	;'n'
   668  00FFA7  64                 	db	100	;'d'
   669  00FFA8  74                 	db	116	;'t'
   670  00FFA9  20                 	db	32
   671  00FFAA  73                 	db	115	;'s'
   672  00FFAB  74                 	db	116	;'t'
   673  00FFAC  6F                 	db	111	;'o'
   674  00FFAD  70                 	db	112	;'p'
   675  00FFAE  0D                 	db	13
   676  00FFAF  0A                 	db	10
   677  00FFB0  00                 	db	0
   678  00FFB1                     
   679                           ; BSR set to: 0
   680  00FFB1  48                 	db	72	;'H'
   681  00FFB2  61                 	db	97	;'a'
   682  00FFB3  72                 	db	114	;'r'
   683  00FFB4  20                 	db	32
   684  00FFB5  73                 	db	115	;'s'
   685  00FFB6  65                 	db	101	;'e'
   686  00FFB7  6E                 	db	110	;'n'
   687  00FFB8  64                 	db	100	;'d'
   688  00FFB9  74                 	db	116	;'t'
   689  00FFBA  20                 	db	32
   690  00FFBB  73                 	db	115	;'s'
   691  00FFBC  74                 	db	116	;'t'
   692  00FFBD  6F                 	db	111	;'o'
   693  00FFBE  70                 	db	112	;'p'
   694  00FFBF  0A                 	db	10
   695  00FFC0  0D                 	db	13
   696  00FFC1  00                 	db	0
   697  00FFC2                     STR_4:
   698                           
   699                           ; BSR set to: 0
   700  00FFC2  42                 	db	66	;'B'
   701  00FFC3  75                 	db	117	;'u'
   702  00FFC4  73                 	db	115	;'s'
   703  00FFC5  73                 	db	115	;'s'
   704  00FFC6  65                 	db	101	;'e'
   705  00FFC7  6E                 	db	110	;'n'
   706  00FFC8  20                 	db	32
   707  00FFC9  65                 	db	101	;'e'
   708  00FFCA  72                 	db	114	;'r'
   709  00FFCB  20                 	db	32
   710  00FFCC  6B                 	db	107	;'k'
   711  00FFCD  6C                 	db	108	;'l'
   712  00FFCE  61                 	db	97	;'a'
   713  00FFCF  72                 	db	114	;'r'
   714  00FFD0  0A                 	db	10
   715  00FFD1  0D                 	db	13
   716  00FFD2  00                 	db	0
   717  00FFD3                     STR_21:
   718                           
   719                           ; BSR set to: 0
   720  00FFD3  4C                 	db	76	;'L'
   721  00FFD4  61                 	db	97	;'a'
   722  00FFD5  65                 	db	101	;'e'
   723  00FFD6  73                 	db	115	;'s'
   724  00FFD7  74                 	db	116	;'t'
   725  00FFD8  65                 	db	101	;'e'
   726  00FFD9  3A                 	db	58	;':'
   727  00FFDA  20                 	db	32
   728  00FFDB  30                 	db	48	;'0'
   729  00FFDC  78                 	db	120	;'x'
   730  00FFDD  25                 	db	37
   731  00FFDE  32                 	db	50	;'2'
   732  00FFDF  58                 	db	88	;'X'
   733  00FFE0  0A                 	db	10
   734  00FFE1  0D                 	db	13
   735  00FFE2  00                 	db	0
   736  00FFE3                     
   737                           ; BSR set to: 0
   738  00FFE3  44                 	db	68	;'D'
   739  00FFE4  61                 	db	97	;'a'
   740  00FFE5  74                 	db	116	;'t'
   741  00FFE6  61                 	db	97	;'a'
   742  00FFE7  3A                 	db	58	;':'
   743  00FFE8  20                 	db	32
   744  00FFE9  25                 	db	37
   745  00FFEA  23                 	db	35
   746  00FFEB  30                 	db	48	;'0'
   747  00FFEC  32                 	db	50	;'2'
   748  00FFED  58                 	db	88	;'X'
   749  00FFEE  0D                 	db	13
   750  00FFEF  0A                 	db	10
   751  00FFF0  00                 	db	0
   752  00FFF1                     STR_20:
   753                           
   754                           ; BSR set to: 0
   755  00FFF1  4D                 	db	77	;'M'
   756  00FFF2  6F                 	db	111	;'o'
   757  00FFF3  64                 	db	100	;'d'
   758  00FFF4  74                 	db	116	;'t'
   759  00FFF5  6F                 	db	111	;'o'
   760  00FFF6  67                 	db	103	;'g'
   761  00FFF7  20                 	db	32
   762  00FFF8  41                 	db	65	;'A'
   763  00FFF9  43                 	db	67	;'C'
   764  00FFFA  4B                 	db	75	;'K'
   765  00FFFB  0D                 	db	13
   766  00FFFC  0A                 	db	10
   767  00FFFD  00                 	db	0
   768  0000                     
   769                           ; #config settings
   770  00FFFE  00                 	db	0	; dummy byte at the end
   771  0000                     
   772                           	psect	cinit
   773  000F1E                     __pcinit:
   774                           	opt callstack 0
   775  000F1E                     start_initialization:
   776                           	opt callstack 0
   777  000F1E                     __initialization:
   778                           	opt callstack 0
   779                           
   780                           ; Initialize objects allocated to BANK1 (53 bytes)
   781                           ; load TBLPTR registers with __pidataBANK1
   782  000F1E  0E76               	movlw	low __pidataBANK1
   783  000F20  6EF6               	movwf	tblptrl,c
   784  000F22  0E12               	movlw	high __pidataBANK1
   785  000F24  6EF7               	movwf	tblptrh,c
   786  000F26  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   787  000F28  6EF8               	movwf	tblptru,c
   788  000F2A  EE01  F0C0         	lfsr	0,__pdataBANK1
   789  000F2E  EE10 F035          	lfsr	1,53
   790  000F32                     copy_data0:
   791  000F32  0009               	tblrd		*+
   792  000F34  CFF5 FFEE          	movff	tablat,postinc0
   793  000F38  50E5               	movf	postdec1,w,c
   794  000F3A  50E1               	movf	fsr1l,w,c
   795  000F3C  E1FA               	bnz	copy_data0
   796                           
   797                           ; Initialize objects allocated to BANK0 (21 bytes)
   798                           ; load TBLPTR registers with __pidataBANK0
   799  000F3E  0ED4               	movlw	low __pidataBANK0
   800  000F40  6EF6               	movwf	tblptrl,c
   801  000F42  0E14               	movlw	high __pidataBANK0
   802  000F44  6EF7               	movwf	tblptrh,c
   803  000F46  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   804  000F48  6EF8               	movwf	tblptru,c
   805  000F4A  EE00  F0DF         	lfsr	0,__pdataBANK0
   806  000F4E  EE10 F015          	lfsr	1,21
   807  000F52                     copy_data1:
   808  000F52  0009               	tblrd		*+
   809  000F54  CFF5 FFEE          	movff	tablat,postinc0
   810  000F58  50E5               	movf	postdec1,w,c
   811  000F5A  50E1               	movf	fsr1l,w,c
   812  000F5C  E1FA               	bnz	copy_data1
   813                           
   814                           ; Clear objects allocated to BANK2 (128 bytes)
   815  000F5E  EE02  F000         	lfsr	0,__pbssBANK2
   816  000F62  0E80               	movlw	128
   817  000F64                     clear_0:
   818  000F64  6AEE               	clrf	postinc0,c
   819  000F66  06E8               	decf	wreg,f,c
   820  000F68  E1FD               	bnz	clear_0
   821                           
   822                           ; Clear objects allocated to BANK1 (192 bytes)
   823  000F6A  EE01  F000         	lfsr	0,__pbssBANK1
   824  000F6E  0EC0               	movlw	192
   825  000F70                     clear_1:
   826  000F70  6AEE               	clrf	postinc0,c
   827  000F72  06E8               	decf	wreg,f,c
   828  000F74  E1FD               	bnz	clear_1
   829                           
   830                           ; Clear objects allocated to BANK0 (78 bytes)
   831  000F76  EE00  F060         	lfsr	0,__pbssBANK0
   832  000F7A  0E4E               	movlw	78
   833  000F7C                     clear_2:
   834  000F7C  6AEE               	clrf	postinc0,c
   835  000F7E  06E8               	decf	wreg,f,c
   836  000F80  E1FD               	bnz	clear_2
   837                           
   838                           ; Clear objects allocated to COMRAM (4 bytes)
   839  000F82  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   840  000F84  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   841  000F86  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   842  000F88  6A57               	clrf	__pbssCOMRAM& (0+255),c
   843  000F8A                     end_of_initialization:
   844                           	opt callstack 0
   845  000F8A                     __end_of__initialization:
   846                           	opt callstack 0
   847  000F8A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   848  000F8C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   849  000F8E  0100               	movlb	0
   850  000F90  EF3B  F008         	goto	_main	;jump to C main() function
   851                           
   852                           	psect	bssCOMRAM
   853  000057                     __pbssCOMRAM:
   854                           	opt callstack 0
   855  000057                     _flags:
   856                           	opt callstack 0
   857  000057                     	ds	2
   858  000059                     _eusart1RxTail:
   859                           	opt callstack 0
   860  000059                     	ds	1
   861  00005A                     _eusart1RxHead:
   862                           	opt callstack 0
   863  00005A                     	ds	1
   864                           
   865                           	psect	bssBANK0
   866  000060                     __pbssBANK0:
   867                           	opt callstack 0
   868  000060                     	ds	4
   869  000064                     _nout:
   870                           	opt callstack 0
   871  000064                     	ds	2
   872  000066                     _width:
   873                           	opt callstack 0
   874  000066                     	ds	2
   875  000068                     _prec:
   876                           	opt callstack 0
   877  000068                     	ds	2
   878  00006A                     _EUSART1_ErrorHandler:
   879                           	opt callstack 0
   880  00006A                     	ds	2
   881  00006C                     _EUSART1_OverrunErrorHandler:
   882                           	opt callstack 0
   883  00006C                     	ds	2
   884  00006E                     _EUSART1_FramingErrorHandler:
   885                           	opt callstack 0
   886  00006E                     	ds	2
   887  000070                     _EUSART1_RxDefaultInterruptHandler:
   888                           	opt callstack 0
   889  000070                     	ds	2
   890  000072                     _EUSART1_TxDefaultInterruptHandler:
   891                           	opt callstack 0
   892  000072                     	ds	2
   893  000074                     _eeprom_addr0000:
   894                           	opt callstack 0
   895  000074                     	ds	2
   896  000076                     _eusart1RxLastError:
   897                           	opt callstack 0
   898  000076                     	ds	1
   899  000077                     _eusart1RxCount:
   900                           	opt callstack 0
   901  000077                     	ds	1
   902  000078                     _eusart1TxBufferRemaining:
   903                           	opt callstack 0
   904  000078                     	ds	1
   905  000079                     _eusart1TxTail:
   906                           	opt callstack 0
   907  000079                     	ds	1
   908  00007A                     _eusart1TxHead:
   909                           	opt callstack 0
   910  00007A                     	ds	1
   911  00007B                     _dbuf:
   912                           	opt callstack 0
   913  00007B                     	ds	32
   914  00009B                     _tmp_string:
   915                           	opt callstack 0
   916  00009B                     	ds	15
   917  0000AA                     _data_out:
   918                           	opt callstack 0
   919  0000AA                     	ds	4
   920                           
   921                           	psect	dataBANK0
   922  0000DF                     __pdataBANK0:
   923                           	opt callstack 0
   924  0000DF                     _display_init:
   925                           	opt callstack 0
   926  0000DF                     	ds	4
   927  0000E3                     _degree_pos:
   928                           	opt callstack 0
   929  0000E3                     	ds	2
   930  0000E5                     _shift_line:
   931                           	opt callstack 0
   932  0000E5                     	ds	2
   933  0000E7                     _first_line:
   934                           	opt callstack 0
   935  0000E7                     	ds	2
   936  0000E9                     _eeprom_addr:
   937                           	opt callstack 0
   938  0000E9                     	ds	1
   939  0000EA                     _display_addr:
   940                           	opt callstack 0
   941  0000EA                     	ds	1
   942  0000EB                     _tempaddrTC74:
   943                           	opt callstack 0
   944  0000EB                     	ds	1
   945  0000EC                     _temperature_addr:
   946                           	opt callstack 0
   947  0000EC                     	ds	1
   948  0000ED                     _precission:
   949                           	opt callstack 0
   950  0000ED                     	ds	1
   951  0000EE                     _moist_pos:
   952                           	opt callstack 0
   953  0000EE                     	ds	2
   954  0000F0                     _temp_pos:
   955                           	opt callstack 0
   956  0000F0                     	ds	2
   957  0000F2                     _minus:
   958                           	opt callstack 0
   959  0000F2                     	ds	2
   960                           
   961                           	psect	bssBANK1
   962  000100                     __pbssBANK1:
   963                           	opt callstack 0
   964  000100                     _eusart1RxStatusBuffer:
   965                           	opt callstack 0
   966  000100                     	ds	64
   967  000140                     _eusart1RxBuffer:
   968                           	opt callstack 0
   969  000140                     	ds	64
   970  000180                     _eusart1TxBuffer:
   971                           	opt callstack 0
   972  000180                     	ds	64
   973                           
   974                           	psect	dataBANK1
   975  0001C0                     __pdataBANK1:
   976                           	opt callstack 0
   977  0001C0                     _moist_string:
   978                           	opt callstack 0
   979  0001C0                     	ds	18
   980  0001D2                     _temp_string:
   981                           	opt callstack 0
   982  0001D2                     	ds	18
   983  0001E4                     _eeprom_write:
   984                           	opt callstack 0
   985  0001E4                     	ds	17
   986                           
   987                           	psect	bssBANK2
   988  000200                     __pbssBANK2:
   989                           	opt callstack 0
   990  000200                     _eeprom_buffer:
   991                           	opt callstack 0
   992  000200                     	ds	128
   993                           
   994                           	psect	cstackBANK0
   995  0000AE                     __pcstackBANK0:
   996                           	opt callstack 0
   997  0000AE                     vfpfcnvrt@ll:
   998                           	opt callstack 0
   999                           
  1000                           ; 8 bytes @ 0x0
  1001  0000AE                     	ds	8
  1002  0000B6                     vfpfcnvrt@llu:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 8 bytes @ 0x8
  1006  0000B6                     	ds	8
  1007  0000BE                     vfpfcnvrt@done:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x10
  1011  0000BE                     	ds	2
  1012  0000C0                     _vfpfcnvrt$1225:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x12
  1016  0000C0                     	ds	2
  1017  0000C2                     vfpfcnvrt@c:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x14
  1021  0000C2                     	ds	1
  1022  0000C3                     ?_vfprintf:
  1023                           	opt callstack 0
  1024  0000C3                     vfprintf@fp:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x15
  1028  0000C3                     	ds	2
  1029  0000C5                     vfprintf@fmt:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x17
  1033  0000C5                     	ds	2
  1034  0000C7                     vfprintf@ap:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x19
  1038  0000C7                     	ds	2
  1039  0000C9                     ?_printf:
  1040                           	opt callstack 0
  1041  0000C9                     printf@fmt:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x1B
  1045  0000C9                     	ds	8
  1046  0000D1                     printf@ap:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x23
  1050  0000D1                     	ds	2
  1051  0000D3                     i2c_read_serial@data_out:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x25
  1055  0000D3                     	ds	2
  1056  0000D5                     i2c_read_serial@length:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x27
  1060  0000D5                     	ds	1
  1061  0000D6                     ??_i2c_read_serial:
  1062                           
  1063                           ; 1 bytes @ 0x28
  1064  0000D6                     	ds	6
  1065  0000DC                     i2c_read_serial@addr:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x2E
  1069  0000DC                     	ds	1
  1070  0000DD                     i2c_read_serial@targetAddr:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x2F
  1074  0000DD                     	ds	1
  1075  0000DE                     i2c_read_serial@i:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x30
  1079  0000DE                     	ds	1
  1080                           
  1081                           	psect	cstackCOMRAM
  1082  000001                     __pcstackCOMRAM:
  1083                           	opt callstack 0
  1084  000001                     ??_INTERRUPT_InterruptManager:
  1085                           
  1086                           ; 1 bytes @ 0x0
  1087  000001                     	ds	4
  1088  000005                     ?_strlen:
  1089                           	opt callstack 0
  1090  000005                     ?_isupper:
  1091                           	opt callstack 0
  1092  000005                     ?_isalpha:
  1093                           	opt callstack 0
  1094  000005                     ?_isdigit:
  1095                           	opt callstack 0
  1096  000005                     ?_isspace:
  1097                           	opt callstack 0
  1098  000005                     ?_islower:
  1099                           	opt callstack 0
  1100  000005                     ?___wmul:
  1101                           	opt callstack 0
  1102  000005                     ?___aodiv:
  1103                           	opt callstack 0
  1104  000005                     ?___aomod:
  1105                           	opt callstack 0
  1106  000005                     EUSART1_Write@txData:
  1107                           	opt callstack 0
  1108  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1109                           	opt callstack 0
  1110  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1111                           	opt callstack 0
  1112  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1113                           	opt callstack 0
  1114  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1115                           	opt callstack 0
  1116  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1117                           	opt callstack 0
  1118  000005                     ___wmul@multiplier:
  1119                           	opt callstack 0
  1120  000005                     isalpha@c:
  1121                           	opt callstack 0
  1122  000005                     isdigit@c:
  1123                           	opt callstack 0
  1124  000005                     isspace@c:
  1125                           	opt callstack 0
  1126  000005                     isupper@c:
  1127                           	opt callstack 0
  1128  000005                     strlen@s:
  1129                           	opt callstack 0
  1130  000005                     islower@c:
  1131                           	opt callstack 0
  1132  000005                     ___aodiv@dividend:
  1133                           	opt callstack 0
  1134  000005                     ___aomod@dividend:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 8 bytes @ 0x4
  1138  000005                     	ds	1
  1139  000006                     putch@txData:
  1140                           	opt callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x5
  1143  000006                     	ds	1
  1144  000007                     ??_isupper:
  1145  000007                     ??_isalpha:
  1146  000007                     ??_isdigit:
  1147  000007                     ??_isspace:
  1148  000007                     ??_islower:
  1149  000007                     ___wmul@multiplicand:
  1150                           	opt callstack 0
  1151  000007                     fputc@c:
  1152                           	opt callstack 0
  1153  000007                     strlen@a:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x6
  1157  000007                     	ds	2
  1158  000009                     ___wmul@product:
  1159                           	opt callstack 0
  1160  000009                     fputc@fp:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x8
  1164  000009                     	ds	2
  1165  00000B                     ??_fputc:
  1166  00000B                     ?_toupper:
  1167                           	opt callstack 0
  1168  00000B                     _isspace$1711:
  1169                           	opt callstack 0
  1170  00000B                     toupper@c:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 2 bytes @ 0xA
  1174  00000B                     	ds	1
  1175  00000C                     ?_atoi:
  1176                           	opt callstack 0
  1177  00000C                     atoi@s:
  1178                           	opt callstack 0
  1179                           
  1180                           ; 2 bytes @ 0xB
  1181  00000C                     	ds	1
  1182  00000D                     ??_toupper:
  1183  00000D                     ___aodiv@divisor:
  1184                           	opt callstack 0
  1185  00000D                     ___aomod@divisor:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 8 bytes @ 0xC
  1189  00000D                     	ds	1
  1190  00000E                     ??_atoi:
  1191                           
  1192                           ; 1 bytes @ 0xD
  1193  00000E                     	ds	2
  1194  000010                     fputs@s:
  1195                           	opt callstack 0
  1196                           
  1197                           ; 2 bytes @ 0xF
  1198  000010                     	ds	1
  1199  000011                     _toupper$1775:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x10
  1203  000011                     	ds	1
  1204  000012                     atoi@neg:
  1205                           	opt callstack 0
  1206  000012                     fputs@fp:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x11
  1210  000012                     	ds	2
  1211  000014                     fputs@c:
  1212                           	opt callstack 0
  1213  000014                     _atoi$1684:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x13
  1217  000014                     	ds	1
  1218  000015                     ___aodiv@counter:
  1219                           	opt callstack 0
  1220  000015                     ___aomod@counter:
  1221                           	opt callstack 0
  1222  000015                     fputs@i:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x14
  1226  000015                     	ds	1
  1227  000016                     ___aodiv@sign:
  1228                           	opt callstack 0
  1229  000016                     ___aomod@sign:
  1230                           	opt callstack 0
  1231  000016                     _atoi$1686:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x15
  1235  000016                     	ds	1
  1236  000017                     ?_abs:
  1237                           	opt callstack 0
  1238  000017                     ?_pad:
  1239                           	opt callstack 0
  1240  000017                     pad@fp:
  1241                           	opt callstack 0
  1242  000017                     abs@a:
  1243                           	opt callstack 0
  1244  000017                     ___aodiv@quotient:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 8 bytes @ 0x16
  1248  000017                     	ds	1
  1249  000018                     _atoi$1685:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 1 bytes @ 0x17
  1253  000018                     	ds	1
  1254  000019                     ??_abs:
  1255  000019                     pad@buf:
  1256                           	opt callstack 0
  1257  000019                     atoi@n:
  1258                           	opt callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x18
  1261  000019                     	ds	2
  1262  00001B                     pad@p:
  1263                           	opt callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x1A
  1266  00001B                     	ds	2
  1267  00001D                     ??_pad:
  1268                           
  1269                           ; 1 bytes @ 0x1C
  1270  00001D                     	ds	1
  1271  00001E                     pad@i:
  1272                           	opt callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x1D
  1275  00001E                     	ds	2
  1276  000020                     pad@w:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x1F
  1280  000020                     	ds	2
  1281  000022                     ?_ctoa:
  1282                           	opt callstack 0
  1283  000022                     ?_dtoa:
  1284                           	opt callstack 0
  1285  000022                     ?_xtoa:
  1286                           	opt callstack 0
  1287  000022                     ctoa@fp:
  1288                           	opt callstack 0
  1289  000022                     dtoa@fp:
  1290                           	opt callstack 0
  1291  000022                     xtoa@fp:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x21
  1295  000022                     	ds	2
  1296  000024                     ctoa@c:
  1297                           	opt callstack 0
  1298  000024                     dtoa@d:
  1299                           	opt callstack 0
  1300  000024                     xtoa@d:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 8 bytes @ 0x23
  1304  000024                     	ds	1
  1305  000025                     ctoa@w:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x24
  1309  000025                     	ds	7
  1310  00002C                     ??_dtoa:
  1311  00002C                     xtoa@x:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x2B
  1315  00002C                     	ds	1
  1316  00002D                     ??_xtoa:
  1317                           
  1318                           ; 1 bytes @ 0x2C
  1319  00002D                     	ds	7
  1320  000034                     _dtoa$1200:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x33
  1324  000034                     	ds	1
  1325  000035                     _xtoa$1210:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x34
  1329  000035                     	ds	1
  1330  000036                     dtoa@p:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x35
  1334  000036                     	ds	1
  1335  000037                     _xtoa$1211:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x36
  1339  000037                     	ds	1
  1340  000038                     dtoa@w:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x37
  1344  000038                     	ds	1
  1345  000039                     xtoa@p:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x38
  1349  000039                     	ds	1
  1350  00003A                     dtoa@s:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x39
  1354  00003A                     	ds	1
  1355  00003B                     xtoa@w:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x3A
  1359  00003B                     	ds	1
  1360  00003C                     dtoa@n:
  1361                           	opt callstack 0
  1362                           
  1363                           ; 8 bytes @ 0x3B
  1364  00003C                     	ds	1
  1365  00003D                     xtoa@n:
  1366                           	opt callstack 0
  1367                           
  1368                           ; 8 bytes @ 0x3C
  1369  00003D                     	ds	7
  1370  000044                     dtoa@i:
  1371                           	opt callstack 0
  1372                           
  1373                           ; 2 bytes @ 0x43
  1374  000044                     	ds	1
  1375  000045                     xtoa@i:
  1376                           	opt callstack 0
  1377                           
  1378                           ; 2 bytes @ 0x44
  1379  000045                     	ds	2
  1380  000047                     xtoa@c:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x46
  1384  000047                     	ds	2
  1385  000049                     ?_vfpfcnvrt:
  1386                           	opt callstack 0
  1387  000049                     vfpfcnvrt@fp:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x48
  1391  000049                     	ds	2
  1392  00004B                     vfpfcnvrt@fmt:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x4A
  1396  00004B                     	ds	2
  1397  00004D                     vfpfcnvrt@ap:
  1398                           	opt callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x4C
  1401  00004D                     	ds	2
  1402  00004F                     ??_vfpfcnvrt:
  1403                           
  1404                           ; 1 bytes @ 0x4E
  1405  00004F                     	ds	4
  1406  000053                     vfprintf@cfmt:
  1407                           	opt callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x52
  1410  000053                     	ds	2
  1411  000055                     ??_main:
  1412                           
  1413                           ; 1 bytes @ 0x54
  1414  000055                     	ds	2
  1415                           
  1416 ;;
  1417 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1418 ;;
  1419 ;; *************** function _main *****************
  1420 ;; Defined at:
  1421 ;;		line 64 in file "main.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;Total ram usage:        2 bytes
  1440 ;; Hardware stack levels required when called:   15
  1441 ;; This function calls:
  1442 ;;		_EUSART1_Initialize
  1443 ;;		_SYSTEM_Initialize
  1444 ;;		_getReadingTC74
  1445 ;;		_i2c_init
  1446 ;;		_printf
  1447 ;; This function is called by:
  1448 ;;		Startup code after reset
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text0
  1453  001076                     __ptext0:
  1454                           	opt callstack 0
  1455  001076                     _main:
  1456                           	opt callstack 16
  1457                           
  1458                           ;main.c: 67:     SYSTEM_Initialize();
  1459                           
  1460                           ;incstack = 0
  1461  001076  EC75  F00A         	call	_SYSTEM_Initialize	;wreg free
  1462                           
  1463                           ;main.c: 68:     EUSART1_Initialize();
  1464  00107A  ECCA  F007         	call	_EUSART1_Initialize	;wreg free
  1465                           
  1466                           ;main.c: 69:     INTCONbits.GIE = 1;
  1467  00107E  8EF2               	bsf	4082,7,c	;volatile
  1468                           
  1469                           ;main.c: 70:     INTCONbits.PEIE = 1;
  1470  001080  8CF2               	bsf	4082,6,c	;volatile
  1471                           
  1472                           ;main.c: 74:     i2c_init();
  1473  001082  EC5E  F00A         	call	_i2c_init	;wreg free
  1474                           
  1475                           ;main.c: 84:     _delay((unsigned long)((200)*(64000000/4000.0)));
  1476  001086  0E11               	movlw	17
  1477  001088  6E56               	movwf	(??_main+1)& (0+255),c
  1478  00108A  0E3C               	movlw	60
  1479  00108C  6E55               	movwf	??_main& (0+255),c
  1480  00108E  0ECB               	movlw	203
  1481  001090                     u3487:
  1482  001090  2EE8               	decfsz	wreg,f,c
  1483  001092  D7FE               	bra	u3487
  1484  001094  2E55               	decfsz	??_main& (0+255),f,c
  1485  001096  D7FC               	bra	u3487
  1486  001098  2E56               	decfsz	(??_main+1)& (0+255),f,c
  1487  00109A  D7FA               	bra	u3487
  1488  00109C  F000               	nop	
  1489                           
  1490                           ;main.c: 93:         printf("Og læs dem igen\r\n");
  1491  00109E  0E7C               	movlw	low STR_1
  1492  0010A0  0100               	movlb	0	; () banked
  1493  0010A2  6FC9               	movwf	printf@fmt& (0+255),b
  1494  0010A4  0EFF               	movlw	high STR_1
  1495  0010A6  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1496  0010A8  EC26  F00A         	call	_printf	;wreg free
  1497  0010AC                     l3555:
  1498                           
  1499                           ;main.c: 101:     {;main.c: 102:         printf("Start pa maling\r\n");
  1500  0010AC  0E6A               	movlw	low STR_2
  1501  0010AE  0100               	movlb	0	; () banked
  1502  0010B0  6FC9               	movwf	printf@fmt& (0+255),b
  1503  0010B2  0EFF               	movlw	high STR_2
  1504  0010B4  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1505  0010B6  EC26  F00A         	call	_printf	;wreg free
  1506                           
  1507                           ;main.c: 103:         getReadingTC74();
  1508  0010BA  ECE7  F009         	call	_getReadingTC74	;wreg free
  1509                           
  1510                           ;main.c: 104:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1511  0010BE  0E52               	movlw	82
  1512  0010C0  6E56               	movwf	(??_main+1)& (0+255),c
  1513  0010C2  0E2B               	movlw	43
  1514  0010C4  6E55               	movwf	??_main& (0+255),c
  1515  0010C6  0E00               	movlw	0
  1516  0010C8                     u3497:
  1517  0010C8  2EE8               	decfsz	wreg,f,c
  1518  0010CA  D7FE               	bra	u3497
  1519  0010CC  2E55               	decfsz	??_main& (0+255),f,c
  1520  0010CE  D7FC               	bra	u3497
  1521  0010D0  2E56               	decfsz	(??_main+1)& (0+255),f,c
  1522  0010D2  D7FA               	bra	u3497
  1523  0010D4  D000               	nop2	
  1524  0010D6  D7EA               	goto	l3555
  1525  0010D8                     __end_of_main:
  1526                           	opt callstack 0
  1527                           
  1528 ;; *************** function _i2c_init *****************
  1529 ;; Defined at:
  1530 ;;		line 109 in file "main.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    4
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text1
  1559  0014BC                     __ptext1:
  1560                           	opt callstack 0
  1561  0014BC                     _i2c_init:
  1562                           	opt callstack 26
  1563                           
  1564                           ;main.c: 110:     TRISCbits.RC3=1;
  1565                           
  1566                           ;incstack = 0
  1567  0014BC  8694               	bsf	3988,3,c	;volatile
  1568                           
  1569                           ;main.c: 111:     TRISCbits.RC4=1;
  1570  0014BE  8894               	bsf	3988,4,c	;volatile
  1571                           
  1572                           ;main.c: 113:     ANSELCbits.ANSC3 = 0;
  1573  0014C0  010F               	movlb	15	; () banked
  1574  0014C2  973A               	bcf	58,3,b	;volatile
  1575                           
  1576                           ;main.c: 114:     ANSELCbits.ANSC4 = 0;
  1577  0014C4  993A               	bcf	58,4,b	;volatile
  1578                           
  1579                           ; BSR set to: 15
  1580                           ;main.c: 118:     SSP1ADD = 0x9F;
  1581  0014C6  0E9F               	movlw	159
  1582  0014C8  6EC8               	movwf	4040,c	;volatile
  1583                           
  1584                           ;main.c: 119:     SSP1CON1 = 0x28;
  1585  0014CA  0E28               	movlw	40
  1586  0014CC  6EC6               	movwf	4038,c	;volatile
  1587                           
  1588                           ;main.c: 120:     SSP1CON2 = 0;
  1589  0014CE  0E00               	movlw	0
  1590  0014D0  6EC5               	movwf	4037,c	;volatile
  1591                           
  1592                           ; BSR set to: 15
  1593  0014D2  0012               	return		;funcret
  1594  0014D4                     __end_of_i2c_init:
  1595                           	opt callstack 0
  1596                           
  1597 ;; *************** function _getReadingTC74 *****************
  1598 ;; Defined at:
  1599 ;;		line 408 in file "main.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;Total ram usage:        0 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:   14
  1620 ;; This function calls:
  1621 ;;		_i2c_read_serial
  1622 ;;		_printf
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text2
  1629  0013CE                     __ptext2:
  1630                           	opt callstack 0
  1631  0013CE                     _getReadingTC74:
  1632                           	opt callstack 16
  1633                           
  1634                           ;main.c: 411:     i2c_read_serial(tempaddrTC74, data_out, 1);
  1635                           
  1636                           ; BSR set to: 15
  1637                           ;incstack = 0
  1638  0013CE  0EAA               	movlw	low _data_out
  1639  0013D0  0100               	movlb	0	; () banked
  1640  0013D2  6FD3               	movwf	i2c_read_serial@data_out& (0+255),b
  1641  0013D4  0E00               	movlw	high _data_out
  1642  0013D6  6FD4               	movwf	(i2c_read_serial@data_out+1)& (0+255),b
  1643  0013D8  0E01               	movlw	1
  1644  0013DA  6FD5               	movwf	i2c_read_serial@length& (0+255),b
  1645  0013DC  0E48               	movlw	72
  1646  0013DE  ECC8  F005         	call	_i2c_read_serial
  1647                           
  1648                           ;main.c: 413:     printf("Retur fra TC74: %2d\r\n", data_out[0]);
  1649  0013E2  0E2F               	movlw	low STR_25
  1650  0013E4  0100               	movlb	0	; () banked
  1651  0013E6  6FC9               	movwf	printf@fmt& (0+255),b
  1652  0013E8  0EFF               	movlw	high STR_25
  1653  0013EA  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1654  0013EC  C0AA  F0CB         	movff	_data_out,?_printf+2
  1655  0013F0  6BCC               	clrf	(?_printf+3)& (0+255),b
  1656  0013F2  EC26  F00A         	call	_printf	;wreg free
  1657  0013F6  0012               	return		;funcret
  1658  0013F8                     __end_of_getReadingTC74:
  1659                           	opt callstack 0
  1660                           
  1661 ;; *************** function _i2c_read_serial *****************
  1662 ;; Defined at:
  1663 ;;		line 208 in file "main.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  addr            1    wreg     unsigned char 
  1666 ;;  data_out        2   37[BANK0 ] PTR unsigned char 
  1667 ;;		 -> data_out(4), 
  1668 ;;  length          1   39[BANK0 ] unsigned char 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  addr            1   46[BANK0 ] unsigned char 
  1671 ;;  i               1   48[BANK0 ] unsigned char 
  1672 ;;  targetAddr      1   47[BANK0 ] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1682 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;Total ram usage:       12 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:   13
  1689 ;; This function calls:
  1690 ;;		_printf
  1691 ;; This function is called by:
  1692 ;;		_getReadingTC74
  1693 ;;		_getReading
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text3
  1698  000B90                     __ptext3:
  1699                           	opt callstack 0
  1700  000B90                     _i2c_read_serial:
  1701                           	opt callstack 16
  1702                           
  1703                           ;incstack = 0
  1704                           ;i2c_read_serial@addr stored from wreg
  1705  000B90  0100               	movlb	0	; () banked
  1706  000B92  6FDC               	movwf	i2c_read_serial@addr& (0+255),b
  1707                           
  1708                           ;main.c: 209:     uint8_t targetAddr = (addr<<1)+1;
  1709  000B94  0100               	movlb	0	; () banked
  1710  000B96  51DC               	movf	i2c_read_serial@addr& (0+255),w,b
  1711  000B98  0D02               	mullw	2
  1712  000B9A  28F3               	incf	prodl,w,c
  1713  000B9C  6FDD               	movwf	i2c_read_serial@targetAddr& (0+255),b
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;main.c: 212:     printf("\r\n***********READ*****************\n\r");
  1717  000B9E  0E31               	movlw	low STR_16
  1718  000BA0  6FC9               	movwf	printf@fmt& (0+255),b
  1719  000BA2  0EFE               	movlw	high STR_16
  1720  000BA4  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1721  000BA6  EC26  F00A         	call	_printf	;wreg free
  1722  000BAA                     l114:
  1723  000BAA  B4C7               	btfsc	4039,2,c	;volatile
  1724  000BAC  D7FE               	goto	l114
  1725  000BAE  CFC5 F0D6          	movff	4037,??_i2c_read_serial	;volatile
  1726  000BB2  0E1F               	movlw	31
  1727  000BB4  0100               	movlb	0	; () banked
  1728  000BB6  17D6               	andwf	??_i2c_read_serial& (0+255),f,b
  1729  000BB8  A4D8               	btfss	status,2,c
  1730  000BBA  D7F7               	goto	l114
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;main.c: 218:     printf("Bussen er klar\n\r");
  1734  000BBC  0EC2               	movlw	low STR_4
  1735  000BBE  6FC9               	movwf	printf@fmt& (0+255),b
  1736  000BC0  0EFF               	movlw	high STR_4
  1737  000BC2  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1738  000BC4  EC26  F00A         	call	_printf	;wreg free
  1739                           
  1740                           ;main.c: 222:     SSP1CON2bits.SEN = 1;
  1741  000BC8  80C5               	bsf	4037,0,c	;volatile
  1742  000BCA                     l117:
  1743  000BCA  B0C5               	btfsc	4037,0,c	;volatile
  1744  000BCC  D7FE               	goto	l117
  1745                           
  1746                           ;main.c: 225:     printf("Har sendt start\n\r");
  1747  000BCE  0E8E               	movlw	low STR_5
  1748  000BD0  0100               	movlb	0	; () banked
  1749  000BD2  6FC9               	movwf	printf@fmt& (0+255),b
  1750  000BD4  0EFF               	movlw	high STR_5
  1751  000BD6  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1752  000BD8  EC26  F00A         	call	_printf	;wreg free
  1753                           
  1754                           ;main.c: 228:     SSP1BUF = targetAddr;
  1755  000BDC  C0DD  FFC9         	movff	i2c_read_serial@targetAddr,4041	;volatile
  1756  000BE0                     l120:
  1757  000BE0  B4C7               	btfsc	4039,2,c	;volatile
  1758  000BE2  D7FE               	goto	l120
  1759                           
  1760                           ;main.c: 231:     printf("Skriver: adresse: %#02X\n\r", targetAddr);
  1761  000BE4  0EFC               	movlw	low STR_19
  1762  000BE6  0100               	movlb	0	; () banked
  1763  000BE8  6FC9               	movwf	printf@fmt& (0+255),b
  1764  000BEA  0EFE               	movlw	high STR_19
  1765  000BEC  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1766  000BEE  C0DD  F0CB         	movff	i2c_read_serial@targetAddr,?_printf+2
  1767  000BF2  6BCC               	clrf	(?_printf+3)& (0+255),b
  1768  000BF4  EC26  F00A         	call	_printf	;wreg free
  1769                           
  1770                           ;main.c: 234:     if(SSP1CON2bits.ACKSTAT == 0) {
  1771  000BF8  BCC5               	btfsc	4037,6,c	;volatile
  1772  000BFA  D059               	goto	l3515
  1773                           
  1774                           ;main.c: 237:     printf("Modtog ACK\r\n");
  1775  000BFC  0EF1               	movlw	low STR_20
  1776  000BFE  0100               	movlb	0	; () banked
  1777  000C00  6FC9               	movwf	printf@fmt& (0+255),b
  1778  000C02  0EFF               	movlw	high STR_20
  1779  000C04  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1780  000C06  EC26  F00A         	call	_printf	;wreg free
  1781                           
  1782                           ;main.c: 239:         for (uint8_t i=0; i < length ; i++) {
  1783  000C0A  0E00               	movlw	0
  1784  000C0C  0100               	movlb	0	; () banked
  1785  000C0E  6FDE               	movwf	i2c_read_serial@i& (0+255),b
  1786  000C10  D03B               	goto	l3511
  1787  000C12                     l125:
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;main.c: 240:             SSP1CON2bits.RCEN = 1;
  1791  000C12  86C5               	bsf	4037,3,c	;volatile
  1792  000C14                     l126:
  1793  000C14  B6C5               	btfsc	4037,3,c	;volatile
  1794  000C16  D7FE               	goto	l126
  1795                           
  1796                           ;main.c: 243:             data_out[i] = SSP1BUF;
  1797  000C18  0100               	movlb	0	; () banked
  1798  000C1A  51DE               	movf	i2c_read_serial@i& (0+255),w,b
  1799  000C1C  25D3               	addwf	i2c_read_serial@data_out& (0+255),w,b
  1800  000C1E  6ED9               	movwf	fsr2l,c
  1801  000C20  0E00               	movlw	0
  1802  000C22  21D4               	addwfc	(i2c_read_serial@data_out+1)& (0+255),w,b
  1803  000C24  6EDA               	movwf	fsr2h,c
  1804  000C26  CFC9 FFDF          	movff	4041,indf2	;volatile
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;main.c: 247:             if( i != length -1)
  1808  000C2A  51DE               	movf	i2c_read_serial@i& (0+255),w,b
  1809  000C2C  6FD6               	movwf	??_i2c_read_serial& (0+255),b
  1810  000C2E  6BD7               	clrf	(??_i2c_read_serial+1)& (0+255),b
  1811  000C30  0EFF               	movlw	255
  1812  000C32  6FD8               	movwf	(??_i2c_read_serial+2)& (0+255),b
  1813  000C34  0EFF               	movlw	255
  1814  000C36  6FD9               	movwf	(??_i2c_read_serial+3)& (0+255),b
  1815  000C38  51D5               	movf	i2c_read_serial@length& (0+255),w,b
  1816  000C3A  6FDA               	movwf	(??_i2c_read_serial+4)& (0+255),b
  1817  000C3C  6BDB               	clrf	(??_i2c_read_serial+5)& (0+255),b
  1818  000C3E  51D8               	movf	(??_i2c_read_serial+2)& (0+255),w,b
  1819  000C40  27DA               	addwf	(??_i2c_read_serial+4)& (0+255),f,b
  1820  000C42  51D9               	movf	(??_i2c_read_serial+3)& (0+255),w,b
  1821  000C44  23DB               	addwfc	(??_i2c_read_serial+5)& (0+255),f,b
  1822  000C46  51D6               	movf	??_i2c_read_serial& (0+255),w,b
  1823  000C48  19DA               	xorwf	(??_i2c_read_serial+4)& (0+255),w,b
  1824  000C4A  E104               	bnz	u3350
  1825  000C4C  51D7               	movf	(??_i2c_read_serial+1)& (0+255),w,b
  1826  000C4E  19DB               	xorwf	(??_i2c_read_serial+5)& (0+255),w,b
  1827  000C50  B4D8               	btfsc	status,2,c
  1828  000C52  D002               	goto	l129
  1829  000C54                     u3350:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;main.c: 248:                 SSP1CON2bits.ACKDT = 0;
  1833  000C54  9AC5               	bcf	4037,5,c	;volatile
  1834  000C56  D001               	goto	l130
  1835  000C58                     l129:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;main.c: 250:                 SSP1CON2bits.ACKDT = 1;
  1839  000C58  8AC5               	bsf	4037,5,c	;volatile
  1840  000C5A                     l130:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;main.c: 252:             SSP1CON2bits.ACKEN = 1;
  1844  000C5A  88C5               	bsf	4037,4,c	;volatile
  1845  000C5C                     l131:
  1846  000C5C  B8C5               	btfsc	4037,4,c	;volatile
  1847  000C5E  D7FE               	goto	l131
  1848                           
  1849                           ;main.c: 256:             printf("Laeste: 0x%2X\n\r", data_out[i]);
  1850  000C60  0ED3               	movlw	low STR_21
  1851  000C62  0100               	movlb	0	; () banked
  1852  000C64  6FC9               	movwf	printf@fmt& (0+255),b
  1853  000C66  0EFF               	movlw	high STR_21
  1854  000C68  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1855  000C6A  51DE               	movf	i2c_read_serial@i& (0+255),w,b
  1856  000C6C  25D3               	addwf	i2c_read_serial@data_out& (0+255),w,b
  1857  000C6E  6ED9               	movwf	fsr2l,c
  1858  000C70  0E00               	movlw	0
  1859  000C72  21D4               	addwfc	(i2c_read_serial@data_out+1)& (0+255),w,b
  1860  000C74  6EDA               	movwf	fsr2h,c
  1861  000C76  50DF               	movf	indf2,w,c
  1862  000C78  6FD6               	movwf	??_i2c_read_serial& (0+255),b
  1863  000C7A  51D6               	movf	??_i2c_read_serial& (0+255),w,b
  1864  000C7C  6FCB               	movwf	(?_printf+2)& (0+255),b
  1865  000C7E  6BCC               	clrf	(?_printf+3)& (0+255),b
  1866  000C80  EC26  F00A         	call	_printf	;wreg free
  1867                           
  1868                           ;main.c: 258:         }
  1869  000C84  0100               	movlb	0	; () banked
  1870  000C86  2BDE               	incf	i2c_read_serial@i& (0+255),f,b
  1871  000C88                     l3511:
  1872                           
  1873                           ; BSR set to: 0
  1874  000C88  51D5               	movf	i2c_read_serial@length& (0+255),w,b
  1875  000C8A  5DDE               	subwf	i2c_read_serial@i& (0+255),w,b
  1876  000C8C  A0D8               	btfss	status,0,c
  1877  000C8E  D7C1               	goto	l125
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;main.c: 261:         SSP1CON2bits.ACKDT = 1;
  1881  000C90  8AC5               	bsf	4037,5,c	;volatile
  1882                           
  1883                           ;main.c: 262:         SSP1CON2bits.ACKEN = 1;
  1884  000C92  88C5               	bsf	4037,4,c	;volatile
  1885  000C94                     l135:
  1886  000C94  B8C5               	btfsc	4037,4,c	;volatile
  1887  000C96  D7FE               	goto	l135
  1888                           
  1889                           ;main.c: 266:         SSP1CON2bits.PEN = 1;
  1890  000C98  84C5               	bsf	4037,2,c	;volatile
  1891  000C9A                     l138:
  1892  000C9A  B4C5               	btfsc	4037,2,c	;volatile
  1893  000C9C  D7FE               	goto	l138
  1894                           
  1895                           ;main.c: 270:             printf("Har sendt stop\r\n");
  1896  000C9E  0EA0               	movlw	low STR_22
  1897  000CA0  0100               	movlb	0	; () banked
  1898  000CA2  6FC9               	movwf	printf@fmt& (0+255),b
  1899  000CA4  0EFF               	movlw	high STR_22
  1900  000CA6  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1901  000CA8  EC26  F00A         	call	_printf	;wreg free
  1902                           
  1903                           ;main.c: 272:     } else {
  1904  000CAC  D007               	goto	l141
  1905  000CAE                     l3515:
  1906                           
  1907                           ;main.c: 274:         printf("Kunne ikke finde enhed\r\n");
  1908  000CAE  0E16               	movlw	low STR_14
  1909  000CB0  0100               	movlb	0	; () banked
  1910  000CB2  6FC9               	movwf	printf@fmt& (0+255),b
  1911  000CB4  0EFF               	movlw	high STR_14
  1912  000CB6  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1913  000CB8  EC26  F00A         	call	_printf	;wreg free
  1914  000CBC                     l141:
  1915                           
  1916                           ;main.c: 278:     printf("********************************\n\r");
  1917  000CBC  0E7B               	movlw	low STR_15
  1918  000CBE  0100               	movlb	0	; () banked
  1919  000CC0  6FC9               	movwf	printf@fmt& (0+255),b
  1920  000CC2  0EFE               	movlw	high STR_15
  1921  000CC4  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1922  000CC6  EC26  F00A         	call	_printf	;wreg free
  1923  000CCA  0012               	return		;funcret
  1924  000CCC                     __end_of_i2c_read_serial:
  1925                           	opt callstack 0
  1926                           
  1927 ;; *************** function _printf *****************
  1928 ;; Defined at:
  1929 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  1932 ;;		 -> STR_25(22), STR_24(35), STR_23(25), STR_22(17), 
  1933 ;;		 -> STR_21(16), STR_20(13), STR_19(26), STR_18(18), 
  1934 ;;		 -> STR_17(17), STR_16(37), STR_15(35), STR_14(25), 
  1935 ;;		 -> STR_13(17), STR_12(34), STR_11(31), STR_10(19), 
  1936 ;;		 -> STR_9(31), STR_8(14), STR_7(29), STR_6(18), 
  1937 ;;		 -> STR_5(18), STR_4(17), STR_3(37), STR_2(18), 
  1938 ;;		 -> STR_1(18), 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  ap              2   35[BANK0 ] PTR void [1]
  1941 ;;		 -> ?_printf(2), 
  1942 ;;  ret             2    0        int 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  2   27[BANK0 ] int 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1952 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;Total ram usage:       10 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:   12
  1959 ;; This function calls:
  1960 ;;		_vfprintf
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;;		_i2c_read_serial
  1964 ;;		_getReadingTC74
  1965 ;;		_i2c_write_serial
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text4
  1970  00144C                     __ptext4:
  1971                           	opt callstack 0
  1972  00144C                     _printf:
  1973                           	opt callstack 18
  1974                           
  1975                           ;incstack = 0
  1976  00144C  0ECB               	movlw	low (?_printf+2)
  1977  00144E  0100               	movlb	0	; () banked
  1978  001450  6FD1               	movwf	printf@ap& (0+255),b
  1979  001452  0E00               	movlw	high (?_printf+2)
  1980  001454  6FD2               	movwf	(printf@ap+1)& (0+255),b
  1981                           
  1982                           ; BSR set to: 0
  1983  001456  0E00               	movlw	0
  1984  001458  6FC3               	movwf	vfprintf@fp& (0+255),b
  1985  00145A  0E00               	movlw	0
  1986  00145C  6FC4               	movwf	(vfprintf@fp+1)& (0+255),b
  1987  00145E  C0C9  F0C5         	movff	printf@fmt,vfprintf@fmt
  1988  001462  C0CA  F0C6         	movff	printf@fmt+1,vfprintf@fmt+1
  1989  001466  0ED1               	movlw	low printf@ap
  1990  001468  6FC7               	movwf	vfprintf@ap& (0+255),b
  1991  00146A  0E00               	movlw	high printf@ap
  1992  00146C  6FC8               	movwf	(vfprintf@ap+1)& (0+255),b
  1993  00146E  EC6C  F008         	call	_vfprintf	;wreg free
  1994  001472  0012               	return		;funcret
  1995  001474                     __end_of_printf:
  1996                           	opt callstack 0
  1997                           
  1998 ;; *************** function _vfprintf *****************
  1999 ;; Defined at:
  2000 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  2003 ;;		 -> NULL(0), 
  2004 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  2005 ;;		 -> STR_25(22), STR_24(35), STR_23(25), STR_22(17), 
  2006 ;;		 -> STR_21(16), STR_20(13), STR_19(26), STR_18(18), 
  2007 ;;		 -> STR_17(17), STR_16(37), STR_15(35), STR_14(25), 
  2008 ;;		 -> STR_13(17), STR_12(34), STR_11(31), STR_10(19), 
  2009 ;;		 -> STR_9(31), STR_8(14), STR_7(29), STR_6(18), 
  2010 ;;		 -> STR_5(18), STR_4(17), STR_3(37), STR_2(18), 
  2011 ;;		 -> STR_1(18), 
  2012 ;;  ap              2   25[BANK0 ] PTR PTR void 
  2013 ;;		 -> printf@ap(2), 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  2016 ;;		 -> STR_25(22), STR_24(35), STR_23(25), STR_22(17), 
  2017 ;;		 -> STR_21(16), STR_20(13), STR_19(26), STR_18(18), 
  2018 ;;		 -> STR_17(17), STR_16(37), STR_15(35), STR_14(25), 
  2019 ;;		 -> STR_13(17), STR_12(34), STR_11(31), STR_10(19), 
  2020 ;;		 -> STR_9(31), STR_8(14), STR_7(29), STR_6(18), 
  2021 ;;		 -> STR_5(18), STR_4(17), STR_3(37), STR_2(18), 
  2022 ;;		 -> STR_1(18), 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  2   21[BANK0 ] int 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2032 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;Total ram usage:        8 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:   11
  2039 ;; This function calls:
  2040 ;;		_vfpfcnvrt
  2041 ;; This function is called by:
  2042 ;;		_printf
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text5
  2047  0010D8                     __ptext5:
  2048                           	opt callstack 0
  2049  0010D8                     _vfprintf:
  2050                           	opt callstack 18
  2051                           
  2052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2053                           
  2054                           ;incstack = 0
  2055  0010D8  C0C5  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  2056  0010DC  C0C6  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2057                           
  2058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2059  0010E0  0E00               	movlw	0
  2060  0010E2  0100               	movlb	0	; () banked
  2061  0010E4  6F65               	movwf	(_nout+1)& (0+255),b
  2062  0010E6  0E00               	movlw	0
  2063  0010E8  6F64               	movwf	_nout& (0+255),b
  2064                           
  2065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2066  0010EA  D013               	goto	l3427
  2067  0010EC                     l3425:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2071  0010EC  C0C3  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  2072  0010F0  C0C4  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2073  0010F4  0E53               	movlw	low vfprintf@cfmt
  2074  0010F6  6E4B               	movwf	vfpfcnvrt@fmt,c
  2075  0010F8  0E00               	movlw	high vfprintf@cfmt
  2076  0010FA  6E4C               	movwf	vfpfcnvrt@fmt+1,c
  2077  0010FC  C0C7  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2078  001100  C0C8  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2079  001104  EC36  F000         	call	_vfpfcnvrt	;wreg free
  2080  001108  5049               	movf	?_vfpfcnvrt,w,c
  2081  00110A  0100               	movlb	0	; () banked
  2082  00110C  2764               	addwf	_nout& (0+255),f,b
  2083  00110E  504A               	movf	?_vfpfcnvrt+1,w,c
  2084  001110  2365               	addwfc	(_nout+1)& (0+255),f,b
  2085  001112                     l3427:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2089  001112  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  2090  001116  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2091  00111A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2092  00111A  6AF8               	clrf	tblptru,c
  2093  00111C                     	endif
  2094  00111C                     	if	0	;tblptru may be non-zero
  2095  00111C                     	endif
  2096  00111C  0008               	tblrd		*
  2097  00111E  50F5               	movf	tablat,w,c
  2098  001120  0900               	iorlw	0
  2099  001122  A4D8               	btfss	status,2,c
  2100  001124  D7E3               	goto	l3425
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2104  001126  C064  F0C3         	movff	_nout,?_vfprintf
  2105  00112A  C065  F0C4         	movff	_nout+1,?_vfprintf+1
  2106                           
  2107                           ; BSR set to: 0
  2108  00112E  0012               	return		;funcret
  2109  001130                     __end_of_vfprintf:
  2110                           	opt callstack 0
  2111                           
  2112 ;; *************** function _vfpfcnvrt *****************
  2113 ;; Defined at:
  2114 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  2117 ;;		 -> NULL(0), 
  2118 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  2119 ;;		 -> vfprintf@cfmt(2), 
  2120 ;;  ap              2   76[COMRAM] PTR PTR void 
  2121 ;;		 -> printf@ap(2), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  llu             8    8[BANK0 ] unsigned long long 
  2124 ;;  ll              8    0[BANK0 ] long long 
  2125 ;;  f               4    0        long long 
  2126 ;;  vp              3    0        PTR void 
  2127 ;;  ct              3    0        unsigned char [3]
  2128 ;;  cp              3    0        PTR unsigned char 
  2129 ;;  done            2   16[BANK0 ] int 
  2130 ;;  i               2    0        int 
  2131 ;;  c               1   20[BANK0 ] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  2   72[COMRAM] int 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2141 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Totals:        10      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;Total ram usage:       31 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:   10
  2148 ;; This function calls:
  2149 ;;		_atoi
  2150 ;;		_ctoa
  2151 ;;		_dtoa
  2152 ;;		_fputc
  2153 ;;		_isdigit
  2154 ;;		_xtoa
  2155 ;; This function is called by:
  2156 ;;		_vfprintf
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text6
  2161  00006C                     __ptext6:
  2162                           	opt callstack 0
  2163  00006C                     _vfpfcnvrt:
  2164                           	opt callstack 18
  2165                           
  2166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;incstack = 0
  2170  00006C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2171  000070  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2172  000074  CFDE FFF6          	movff	postinc2,tblptrl
  2173  000078  CFDD FFF7          	movff	postdec2,tblptrh
  2174  00007C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2175  00007C  6AF8               	clrf	tblptru,c
  2176  00007E                     	endif
  2177  00007E                     	if	0	;tblptru may be non-zero
  2178  00007E                     	endif
  2179  00007E  0008               	tblrd		*
  2180  000080  50F5               	movf	tablat,w,c
  2181  000082  0A25               	xorlw	37
  2182  000084  A4D8               	btfss	status,2,c
  2183  000086  D1E9               	goto	l2769
  2184                           
  2185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2186  000088  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2187  00008C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2188  000090  2ADE               	incf	postinc2,f,c
  2189  000092  0E00               	movlw	0
  2190  000094  22DD               	addwfc	postdec2,f,c
  2191                           
  2192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2193  000096  0E00               	movlw	0
  2194  000098  0100               	movlb	0	; () banked
  2195  00009A  6F67               	movwf	(_width+1)& (0+255),b
  2196  00009C  0E00               	movlw	0
  2197  00009E  6F66               	movwf	_width& (0+255),b
  2198  0000A0  C066  F057         	movff	_width,_flags
  2199  0000A4  C067  F058         	movff	_width+1,_flags+1
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2203  0000A8  6968               	setf	_prec& (0+255),b
  2204  0000AA  6969               	setf	(_prec+1)& (0+255),b
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2208  0000AC  0E00               	movlw	0
  2209  0000AE  6FBF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2210  0000B0  0E00               	movlw	0
  2211  0000B2  D014               	goto	L1
  2212  0000B4                     l2673:
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2216  0000B4  8057               	bsf	_flags,0,c
  2217  0000B6                     l2675:
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2221  0000B6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2222  0000BA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2223  0000BE  2ADE               	incf	postinc2,f,c
  2224  0000C0  0E00               	movlw	0
  2225  0000C2  22DD               	addwfc	postdec2,f,c
  2226                           
  2227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2228  0000C4  D02F               	goto	l2699
  2229  0000C6                     l2677:
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2233  0000C6  8257               	bsf	_flags,1,c
  2234  0000C8  D7F6               	goto	l2675
  2235  0000CA                     l2681:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2239  0000CA  8457               	bsf	_flags,2,c
  2240  0000CC  D7F4               	goto	l2675
  2241  0000CE                     l2685:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2245  0000CE  8657               	bsf	_flags,3,c
  2246  0000D0  D7F2               	goto	l2675
  2247  0000D2                     l2689:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2251  0000D2  8857               	bsf	_flags,4,c
  2252  0000D4  D7F0               	goto	l2675
  2253  0000D6                     l2693:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2257  0000D6  0E00               	movlw	0
  2258  0000D8  6FBF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2259  0000DA  0E01               	movlw	1
  2260  0000DC                     L1:
  2261  0000DC  6FBE               	movwf	vfpfcnvrt@done& (0+255),b
  2262                           
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2264  0000DE  D022               	goto	l2699
  2265  0000E0                     l2697:
  2266                           
  2267                           ; BSR set to: 0
  2268  0000E0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2269  0000E4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2270  0000E8  CFDE FFF6          	movff	postinc2,tblptrl
  2271  0000EC  CFDD FFF7          	movff	postdec2,tblptrh
  2272  0000F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2273  0000F0  6AF8               	clrf	tblptru,c
  2274  0000F2                     	endif
  2275  0000F2                     	if	0	;tblptru may be non-zero
  2276  0000F2                     	endif
  2277  0000F2  0008               	tblrd		*
  2278  0000F4  50F5               	movf	tablat,w,c
  2279  0000F6  6E4F               	movwf	??_vfpfcnvrt& (0+255),c
  2280  0000F8  6A50               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2281                           
  2282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2283                           ; Switch size 1, requested type "simple"
  2284                           ; Number of cases is 1, Range of values is 0 to 0
  2285                           ; switch strategies available:
  2286                           ; Name         Instructions Cycles
  2287                           ; simple_byte            4     3 (average)
  2288                           ;	Chosen strategy is simple_byte
  2289  0000FA  5050               	movf	??_vfpfcnvrt+1,w,c
  2290  0000FC  0A00               	xorlw	0	; case 0
  2291  0000FE  A4D8               	btfss	status,2,c
  2292  000100  D7EA               	goto	l2693
  2293                           
  2294                           ; BSR set to: 0
  2295                           ; Switch size 1, requested type "simple"
  2296                           ; Number of cases is 5, Range of values is 32 to 48
  2297                           ; switch strategies available:
  2298                           ; Name         Instructions Cycles
  2299                           ; simple_byte           16     9 (average)
  2300                           ;	Chosen strategy is simple_byte
  2301  000102  504F               	movf	??_vfpfcnvrt,w,c
  2302  000104  0A20               	xorlw	32	; case 32
  2303  000106  B4D8               	btfsc	status,2,c
  2304  000108  D7E2               	goto	l2685
  2305  00010A  0A03               	xorlw	3	; case 35
  2306  00010C  B4D8               	btfsc	status,2,c
  2307  00010E  D7E1               	goto	l2689
  2308  000110  0A08               	xorlw	8	; case 43
  2309  000112  B4D8               	btfsc	status,2,c
  2310  000114  D7DA               	goto	l2681
  2311  000116  0A06               	xorlw	6	; case 45
  2312  000118  B4D8               	btfsc	status,2,c
  2313  00011A  D7CC               	goto	l2673
  2314  00011C  0A1D               	xorlw	29	; case 48
  2315  00011E  B4D8               	btfsc	status,2,c
  2316  000120  D7D2               	goto	l2677
  2317  000122  D7D9               	goto	l2693
  2318  000124                     l2699:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2322  000124  51BE               	movf	vfpfcnvrt@done& (0+255),w,b
  2323  000126  11BF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2324  000128  B4D8               	btfsc	status,2,c
  2325  00012A  D7DA               	goto	l2697
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2329  00012C  B057               	btfsc	_flags,0,c
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2333  00012E  9257               	bcf	_flags,1,c
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2337  000130  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2338  000134  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2339  000138  CFDE FFF6          	movff	postinc2,tblptrl
  2340  00013C  CFDD FFF7          	movff	postdec2,tblptrh
  2341  000140                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2342  000140  6AF8               	clrf	tblptru,c
  2343  000142                     	endif
  2344  000142                     	if	0	;tblptru may be non-zero
  2345  000142                     	endif
  2346  000142  0008               	tblrd		*
  2347  000144  50F5               	movf	tablat,w,c
  2348  000146  0A2A               	xorlw	42
  2349  000148  A4D8               	btfss	status,2,c
  2350  00014A  D023               	goto	l2711
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2354  00014C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2355  000150  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2356  000154  2ADE               	incf	postinc2,f,c
  2357  000156  0E00               	movlw	0
  2358  000158  22DD               	addwfc	postdec2,f,c
  2359                           
  2360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2361  00015A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2362  00015E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2363  000162  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2364  000166  0E02               	movlw	2
  2365  000168  26DE               	addwf	postinc2,f,c
  2366  00016A  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2367  00016E  0E00               	movlw	0
  2368  000170  22DD               	addwfc	postdec2,f,c
  2369  000172  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2370  000176  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2371  00017A  CFDE F066          	movff	postinc2,_width
  2372  00017E  CFDD F067          	movff	postdec2,_width+1
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2376  000182  AF67               	btfss	(_width+1)& (0+255),7,b
  2377  000184  D041               	goto	u2320
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2381  000186  8057               	bsf	_flags,0,c
  2382                           
  2383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2384  000188  6D66               	negf	_width& (0+255),b
  2385  00018A  1F67               	comf	(_width+1)& (0+255),f,b
  2386  00018C  B0D8               	btfsc	status,0,c
  2387  00018E  2B67               	incf	(_width+1)& (0+255),f,b
  2388  000190  D03B               	goto	u2320
  2389  000192                     l2711:
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2393  000192  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2394  000196  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2395  00019A  CFDE F00C          	movff	postinc2,atoi@s
  2396  00019E  CFDD F00D          	movff	postdec2,atoi@s+1
  2397  0001A2  EC7F  F004         	call	_atoi	;wreg free
  2398  0001A6  C00C  F066         	movff	?_atoi,_width
  2399  0001AA  C00D  F067         	movff	?_atoi+1,_width+1
  2400                           
  2401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2402  0001AE  D007               	goto	l2715
  2403  0001B0                     l2713:
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2407  0001B0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2408  0001B4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2409  0001B8  2ADE               	incf	postinc2,f,c
  2410  0001BA  0E00               	movlw	0
  2411  0001BC  22DD               	addwfc	postdec2,f,c
  2412  0001BE                     l2715:
  2413  0001BE  0ED0               	movlw	208
  2414  0001C0  6E4F               	movwf	??_vfpfcnvrt& (0+255),c
  2415  0001C2  0EFF               	movlw	255
  2416  0001C4  6E50               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2417  0001C6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2418  0001CA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2419  0001CE  CFDE FFF6          	movff	postinc2,tblptrl
  2420  0001D2  CFDD FFF7          	movff	postdec2,tblptrh
  2421  0001D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2422  0001D6  6AF8               	clrf	tblptru,c
  2423  0001D8                     	endif
  2424  0001D8                     	if	0	;tblptru may be non-zero
  2425  0001D8                     	endif
  2426  0001D8  0008               	tblrd		*
  2427  0001DA  50F5               	movf	tablat,w,c
  2428  0001DC  6E51               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2429  0001DE  6A52               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2430  0001E0  504F               	movf	??_vfpfcnvrt,w,c
  2431  0001E2  2651               	addwf	??_vfpfcnvrt+2,f,c
  2432  0001E4  5050               	movf	??_vfpfcnvrt+1,w,c
  2433  0001E6  2252               	addwfc	??_vfpfcnvrt+3,f,c
  2434  0001E8  5052               	movf	??_vfpfcnvrt+3,w,c
  2435  0001EA  E106               	bnz	u2300
  2436  0001EC  0E0A               	movlw	10
  2437  0001EE  5C51               	subwf	??_vfpfcnvrt+2,w,c
  2438  0001F0  B0D8               	btfsc	status,0,c
  2439  0001F2  D002               	goto	u2300
  2440  0001F4  0E01               	movlw	1
  2441  0001F6  D001               	goto	u2310
  2442  0001F8                     u2300:
  2443  0001F8  0E00               	movlw	0
  2444  0001FA                     u2310:
  2445  0001FA  0100               	movlb	0	; () banked
  2446  0001FC  6FC0               	movwf	_vfpfcnvrt$1225& (0+255),b
  2447  0001FE  6BC1               	clrf	(_vfpfcnvrt$1225+1)& (0+255),b
  2448                           
  2449                           ; BSR set to: 0
  2450  000200  51C0               	movf	_vfpfcnvrt$1225& (0+255),w,b
  2451  000202  11C1               	iorwf	(_vfpfcnvrt$1225+1)& (0+255),w,b
  2452  000204  A4D8               	btfss	status,2,c
  2453  000206  D7D4               	goto	l2713
  2454  000208                     u2320:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2458  000208  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2459  00020C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2460  000210  CFDE FFF6          	movff	postinc2,tblptrl
  2461  000214  CFDD FFF7          	movff	postdec2,tblptrh
  2462  000218                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2463  000218  6AF8               	clrf	tblptru,c
  2464  00021A                     	endif
  2465  00021A                     	if	0	;tblptru may be non-zero
  2466  00021A                     	endif
  2467  00021A  0008               	tblrd		*
  2468  00021C  50F5               	movf	tablat,w,c
  2469  00021E  0A63               	xorlw	99
  2470  000220  A4D8               	btfss	status,2,c
  2471  000222  D026               	goto	l2729
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2475  000224  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2476  000228  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2477  00022C  2ADE               	incf	postinc2,f,c
  2478  00022E  0E00               	movlw	0
  2479  000230  22DD               	addwfc	postdec2,f,c
  2480                           
  2481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2482  000232  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2483  000236  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2484  00023A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2485  00023E  0E02               	movlw	2
  2486  000240  26DE               	addwf	postinc2,f,c
  2487  000242  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2488  000246  0E00               	movlw	0
  2489  000248  22DD               	addwfc	postdec2,f,c
  2490  00024A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2491  00024E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2492  000252  50DF               	movf	indf2,w,c
  2493  000254  6FC2               	movwf	vfpfcnvrt@c& (0+255),b
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2497  000256  C049  F022         	movff	vfpfcnvrt@fp,ctoa@fp
  2498  00025A  C04A  F023         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2499  00025E  C0C2  F024         	movff	vfpfcnvrt@c,ctoa@c
  2500  000262  EC98  F008         	call	_ctoa	;wreg free
  2501  000266  C022  F049         	movff	?_ctoa,?_vfpfcnvrt
  2502  00026A  C023  F04A         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2503  00026E  0012               	return	
  2504  000270                     l2729:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2508  000270  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2509  000274  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2510  000278  CFDE FFF6          	movff	postinc2,tblptrl
  2511  00027C  CFDD FFF7          	movff	postdec2,tblptrh
  2512  000280                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2513  000280  6AF8               	clrf	tblptru,c
  2514  000282                     	endif
  2515  000282                     	if	0	;tblptru may be non-zero
  2516  000282                     	endif
  2517  000282  0008               	tblrd		*
  2518  000284  50F5               	movf	tablat,w,c
  2519  000286  0A64               	xorlw	100
  2520  000288  B4D8               	btfsc	status,2,c
  2521  00028A  D00E               	goto	u2350
  2522                           
  2523                           ; BSR set to: 0
  2524  00028C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2525  000290  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2526  000294  CFDE FFF6          	movff	postinc2,tblptrl
  2527  000298  CFDD FFF7          	movff	postdec2,tblptrh
  2528  00029C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2529  00029C  6AF8               	clrf	tblptru,c
  2530  00029E                     	endif
  2531  00029E                     	if	0	;tblptru may be non-zero
  2532  00029E                     	endif
  2533  00029E  0008               	tblrd		*
  2534  0002A0  50F5               	movf	tablat,w,c
  2535  0002A2  0A69               	xorlw	105
  2536  0002A4  A4D8               	btfss	status,2,c
  2537  0002A6  D03F               	goto	l2739
  2538  0002A8                     u2350:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2542  0002A8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2543  0002AC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2544  0002B0  2ADE               	incf	postinc2,f,c
  2545  0002B2  0E00               	movlw	0
  2546  0002B4  22DD               	addwfc	postdec2,f,c
  2547                           
  2548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2549  0002B6  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2550  0002BA  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2551  0002BE  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2552  0002C2  0E02               	movlw	2
  2553  0002C4  26DE               	addwf	postinc2,f,c
  2554  0002C6  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2555  0002CA  0E00               	movlw	0
  2556  0002CC  22DD               	addwfc	postdec2,f,c
  2557  0002CE  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2558  0002D2  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2559  0002D6  CFDE F0AE          	movff	postinc2,vfpfcnvrt@ll
  2560  0002DA  CFDD F0AF          	movff	postdec2,vfpfcnvrt@ll+1
  2561  0002DE  0E00               	movlw	0
  2562  0002E0  BFAF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2563  0002E2  0EFF               	movlw	-1
  2564  0002E4  6FB0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2565  0002E6  6FB1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2566  0002E8  6FB2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2567  0002EA  6FB3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2568  0002EC  6FB4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2569  0002EE  6FB5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2573  0002F0  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  2574  0002F4  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2575  0002F8  C0AE  F024         	movff	vfpfcnvrt@ll,dtoa@d
  2576  0002FC  C0AF  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2577  000300  C0B0  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2578  000304  C0B1  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2579  000308  C0B2  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2580  00030C  C0B3  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2581  000310  C0B4  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2582  000314  C0B5  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2583  000318  EC48  F002         	call	_dtoa	;wreg free
  2584  00031C  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  2585  000320  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2586  000324  0012               	return	
  2587  000326                     l2739:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2591  000326  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2592  00032A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2593  00032E  CFDE FFF6          	movff	postinc2,tblptrl
  2594  000332  CFDD FFF7          	movff	postdec2,tblptrh
  2595  000336                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2596  000336  6AF8               	clrf	tblptru,c
  2597  000338                     	endif
  2598  000338                     	if	0	;tblptru may be non-zero
  2599  000338                     	endif
  2600  000338  0008               	tblrd		*
  2601  00033A  50F5               	movf	tablat,w,c
  2602  00033C  0A78               	xorlw	120
  2603  00033E  B4D8               	btfsc	status,2,c
  2604  000340  D00E               	goto	u2370
  2605                           
  2606                           ; BSR set to: 0
  2607  000342  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2608  000346  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2609  00034A  CFDE FFF6          	movff	postinc2,tblptrl
  2610  00034E  CFDD FFF7          	movff	postdec2,tblptrh
  2611  000352                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2612  000352  6AF8               	clrf	tblptru,c
  2613  000354                     	endif
  2614  000354                     	if	0	;tblptru may be non-zero
  2615  000354                     	endif
  2616  000354  0008               	tblrd		*
  2617  000356  50F5               	movf	tablat,w,c
  2618  000358  0A58               	xorlw	88
  2619  00035A  A4D8               	btfss	status,2,c
  2620  00035C  D04E               	goto	l2753
  2621  00035E                     u2370:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  2625  00035E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2626  000362  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2627  000366  CFDE FFF6          	movff	postinc2,tblptrl
  2628  00036A  CFDD FFF7          	movff	postdec2,tblptrh
  2629  00036E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2630  00036E  6AF8               	clrf	tblptru,c
  2631  000370                     	endif
  2632  000370                     	if	0	;tblptru may be non-zero
  2633  000370                     	endif
  2634  000370  0008               	tblrd		*
  2635  000372  CFF5 F0C2          	movff	tablat,vfpfcnvrt@c
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  2639  000376  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2640  00037A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2641  00037E  2ADE               	incf	postinc2,f,c
  2642  000380  0E00               	movlw	0
  2643  000382  22DD               	addwfc	postdec2,f,c
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2647  000384  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2648  000388  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2649  00038C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2650  000390  0E02               	movlw	2
  2651  000392  26DE               	addwf	postinc2,f,c
  2652  000394  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2653  000398  0E00               	movlw	0
  2654  00039A  22DD               	addwfc	postdec2,f,c
  2655  00039C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2656  0003A0  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2657  0003A4  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  2658  0003A8  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  2659  0003AC  C051  F0B6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2660  0003B0  C052  F0B7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2661  0003B4  6BB8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2662  0003B6  6BB9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2663  0003B8  6BBA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2664  0003BA  6BBB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2665  0003BC  6BBC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2666  0003BE  6BBD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  2670  0003C0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  2671  0003C4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2672  0003C8  C0B6  F024         	movff	vfpfcnvrt@llu,xtoa@d
  2673  0003CC  C0B7  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2674  0003D0  C0B8  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2675  0003D4  C0B9  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2676  0003D8  C0BA  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2677  0003DC  C0BB  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2678  0003E0  C0BC  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2679  0003E4  C0BD  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2680  0003E8  C0C2  F02C         	movff	vfpfcnvrt@c,xtoa@x
  2681  0003EC  EC69  F003         	call	_xtoa	;wreg free
  2682  0003F0  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  2683  0003F4  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2684  0003F8  0012               	return	
  2685  0003FA                     l2753:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2689  0003FA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2690  0003FE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2691  000402  CFDE FFF6          	movff	postinc2,tblptrl
  2692  000406  CFDD FFF7          	movff	postdec2,tblptrh
  2693  00040A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2694  00040A  6AF8               	clrf	tblptru,c
  2695  00040C                     	endif
  2696  00040C                     	if	0	;tblptru may be non-zero
  2697  00040C                     	endif
  2698  00040C  0008               	tblrd		*
  2699  00040E  50F5               	movf	tablat,w,c
  2700  000410  0A25               	xorlw	37
  2701  000412  A4D8               	btfss	status,2,c
  2702  000414  D016               	goto	l2763
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2706  000416  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2707  00041A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2708  00041E  2ADE               	incf	postinc2,f,c
  2709  000420  0E00               	movlw	0
  2710  000422  22DD               	addwfc	postdec2,f,c
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2714  000424  0E00               	movlw	0
  2715  000426  6E08               	movwf	fputc@c+1,c
  2716  000428  0E25               	movlw	37
  2717  00042A  6E07               	movwf	fputc@c,c
  2718  00042C  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2719  000430  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2720  000434  EC05  F008         	call	_fputc	;wreg free
  2721  000438                     l2759:
  2722                           
  2723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2724  000438  0E00               	movlw	0
  2725  00043A  6E4A               	movwf	?_vfpfcnvrt+1,c
  2726  00043C  0E01               	movlw	1
  2727  00043E  6E49               	movwf	?_vfpfcnvrt,c
  2728  000440  0012               	return	
  2729  000442                     l2763:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2733  000442  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2734  000446  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2735  00044A  2ADE               	incf	postinc2,f,c
  2736  00044C  0E00               	movlw	0
  2737  00044E  22DD               	addwfc	postdec2,f,c
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2741  000450  0E00               	movlw	0
  2742  000452  6E4A               	movwf	?_vfpfcnvrt+1,c
  2743  000454  0E00               	movlw	0
  2744  000456  6E49               	movwf	?_vfpfcnvrt,c
  2745  000458  0012               	return	
  2746  00045A                     l2769:
  2747                           
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2749  00045A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2750  00045E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2751  000462  CFDE FFF6          	movff	postinc2,tblptrl
  2752  000466  CFDD FFF7          	movff	postdec2,tblptrh
  2753  00046A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2754  00046A  6AF8               	clrf	tblptru,c
  2755  00046C                     	endif
  2756  00046C                     	if	0	;tblptru may be non-zero
  2757  00046C                     	endif
  2758  00046C  0008               	tblrd		*
  2759  00046E  50F5               	movf	tablat,w,c
  2760  000470  6E07               	movwf	fputc@c,c
  2761  000472  6A08               	clrf	fputc@c+1,c
  2762  000474  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2763  000478  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2764  00047C  EC05  F008         	call	_fputc	;wreg free
  2765                           
  2766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2767  000480  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2768  000484  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2769  000488  2ADE               	incf	postinc2,f,c
  2770  00048A  0E00               	movlw	0
  2771  00048C  22DD               	addwfc	postdec2,f,c
  2772  00048E  D7D4               	goto	l2759
  2773  000490                     __end_of_vfpfcnvrt:
  2774                           	opt callstack 0
  2775                           
  2776 ;; *************** function _xtoa *****************
  2777 ;; Defined at:
  2778 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  2781 ;;		 -> NULL(0), 
  2782 ;;  d               8   35[COMRAM] unsigned long long 
  2783 ;;  x               1   43[COMRAM] unsigned char 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  n               8   60[COMRAM] unsigned long long 
  2786 ;;  c               2   70[COMRAM] int 
  2787 ;;  i               2   68[COMRAM] int 
  2788 ;;  w               2   58[COMRAM] int 
  2789 ;;  p               2   56[COMRAM] int 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  2   33[COMRAM] int 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2799 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;Total ram usage:       39 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    9
  2806 ;; This function calls:
  2807 ;;		_isalpha
  2808 ;;		_isupper
  2809 ;;		_pad
  2810 ;;		_toupper
  2811 ;; This function is called by:
  2812 ;;		_vfpfcnvrt
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text7
  2817  0006D2                     __ptext7:
  2818                           	opt callstack 0
  2819  0006D2                     _xtoa:
  2820                           	opt callstack 18
  2821                           
  2822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  2823                           
  2824                           ;incstack = 0
  2825  0006D2  0100               	movlb	0	; () banked
  2826  0006D4  AF69               	btfss	(_prec+1)& (0+255),7,b
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  2830  0006D6  9257               	bcf	_flags,1,c
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  2834  0006D8  BF69               	btfsc	(_prec+1)& (0+255),7,b
  2835  0006DA  D005               	goto	u2020
  2836  0006DC  5169               	movf	(_prec+1)& (0+255),w,b
  2837  0006DE  E108               	bnz	l478
  2838  0006E0  0568               	decf	_prec& (0+255),w,b
  2839  0006E2  B0D8               	btfsc	status,0,c
  2840  0006E4  D005               	goto	l478
  2841  0006E6                     u2020:
  2842                           
  2843                           ; BSR set to: 0
  2844  0006E6  0E00               	movlw	0
  2845  0006E8  6E3A               	movwf	xtoa@p+1,c
  2846  0006EA  0E01               	movlw	1
  2847  0006EC  6E39               	movwf	xtoa@p,c
  2848  0006EE  D004               	goto	l480
  2849  0006F0                     l478:
  2850                           
  2851                           ; BSR set to: 0
  2852  0006F0  C068  F039         	movff	_prec,xtoa@p
  2853  0006F4  C069  F03A         	movff	_prec+1,xtoa@p+1
  2854  0006F8                     l480:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  2858  0006F8  C066  F03B         	movff	_width,xtoa@w
  2859  0006FC  C067  F03C         	movff	_width+1,xtoa@w+1
  2860                           
  2861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  2862  000700  A857               	btfss	_flags,4,c
  2863  000702  D004               	goto	l2565
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  2867  000704  0EFE               	movlw	254
  2868  000706  263B               	addwf	xtoa@w,f,c
  2869  000708  0EFF               	movlw	255
  2870  00070A  223C               	addwfc	xtoa@w+1,f,c
  2871  00070C                     l2565:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  2875  00070C  C024  F03D         	movff	xtoa@d,xtoa@n
  2876  000710  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  2877  000714  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  2878  000718  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  2879  00071C  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  2880  000720  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  2881  000724  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  2882  000728  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  2886  00072C  0E00               	movlw	0
  2887  00072E  6E46               	movwf	xtoa@i+1,c
  2888  000730  0E1F               	movlw	31
  2889  000732  6E45               	movwf	xtoa@i,c
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  2893  000734  0E00               	movlw	0
  2894  000736  6F9A               	movwf	(_dbuf+31)& (0+255),b
  2895                           
  2896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2897  000738  D093               	goto	l2601
  2898  00073A                     l2571:
  2899                           
  2900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  2901  00073A  0645               	decf	xtoa@i,f,c
  2902  00073C  A0D8               	btfss	status,0,c
  2903  00073E  0646               	decf	xtoa@i+1,f,c
  2904                           
  2905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  2906  000740  0E0F               	movlw	15
  2907  000742  143D               	andwf	xtoa@n,w,c
  2908  000744  6E47               	movwf	xtoa@c,c
  2909  000746  6A48               	clrf	xtoa@c+1,c
  2910                           
  2911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  2912  000748  BE48               	btfsc	xtoa@c+1,7,c
  2913  00074A  D008               	goto	l2579
  2914  00074C  5048               	movf	xtoa@c+1,w,c
  2915  00074E  E104               	bnz	u2040
  2916  000750  0E0A               	movlw	10
  2917  000752  5C47               	subwf	xtoa@c,w,c
  2918  000754  A0D8               	btfss	status,0,c
  2919  000756  D002               	goto	l2579
  2920  000758                     u2040:
  2921  000758  0E57               	movlw	87
  2922  00075A  D001               	goto	L2
  2923  00075C                     l2579:
  2924  00075C  0E30               	movlw	48
  2925  00075E                     L2:
  2926  00075E  2447               	addwf	xtoa@c,w,c
  2927  000760  6E47               	movwf	xtoa@c,c
  2928  000762  0E00               	movlw	0
  2929  000764  2048               	addwfc	xtoa@c+1,w,c
  2930  000766  6E48               	movwf	xtoa@c+1,c
  2931                           
  2932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  2933  000768  0EBF               	movlw	191
  2934  00076A  6E2D               	movwf	??_xtoa& (0+255),c
  2935  00076C  0EFF               	movlw	255
  2936  00076E  6E2E               	movwf	(??_xtoa+1)& (0+255),c
  2937  000770  502C               	movf	xtoa@x,w,c
  2938  000772  6E2F               	movwf	(??_xtoa+2)& (0+255),c
  2939  000774  6A30               	clrf	(??_xtoa+3)& (0+255),c
  2940  000776  502D               	movf	??_xtoa,w,c
  2941  000778  262F               	addwf	??_xtoa+2,f,c
  2942  00077A  502E               	movf	??_xtoa+1,w,c
  2943  00077C  2230               	addwfc	??_xtoa+3,f,c
  2944  00077E  5030               	movf	??_xtoa+3,w,c
  2945  000780  E106               	bnz	u2050
  2946  000782  0E1A               	movlw	26
  2947  000784  5C2F               	subwf	??_xtoa+2,w,c
  2948  000786  B0D8               	btfsc	status,0,c
  2949  000788  D002               	goto	u2050
  2950  00078A  0E01               	movlw	1
  2951  00078C  D001               	goto	u2060
  2952  00078E                     u2050:
  2953  00078E  0E00               	movlw	0
  2954  000790                     u2060:
  2955  000790  6E35               	movwf	_xtoa$1210,c
  2956  000792  6A36               	clrf	_xtoa$1210+1,c
  2957  000794  5035               	movf	_xtoa$1210,w,c
  2958  000796  1036               	iorwf	_xtoa$1210+1,w,c
  2959  000798  B4D8               	btfsc	status,2,c
  2960  00079A  D027               	goto	l2593
  2961  00079C  0E9F               	movlw	159
  2962  00079E  6E2D               	movwf	??_xtoa& (0+255),c
  2963  0007A0  0EFF               	movlw	255
  2964  0007A2  6E2E               	movwf	(??_xtoa+1)& (0+255),c
  2965  0007A4  0E20               	movlw	32
  2966  0007A6  1047               	iorwf	xtoa@c,w,c
  2967  0007A8  6E2F               	movwf	(??_xtoa+2)& (0+255),c
  2968  0007AA  0E00               	movlw	0
  2969  0007AC  1048               	iorwf	xtoa@c+1,w,c
  2970  0007AE  6E30               	movwf	(??_xtoa+3)& (0+255),c
  2971  0007B0  502D               	movf	??_xtoa,w,c
  2972  0007B2  262F               	addwf	??_xtoa+2,f,c
  2973  0007B4  502E               	movf	??_xtoa+1,w,c
  2974  0007B6  2230               	addwfc	??_xtoa+3,f,c
  2975  0007B8  5030               	movf	??_xtoa+3,w,c
  2976  0007BA  E106               	bnz	u2080
  2977  0007BC  0E1A               	movlw	26
  2978  0007BE  5C2F               	subwf	??_xtoa+2,w,c
  2979  0007C0  B0D8               	btfsc	status,0,c
  2980  0007C2  D002               	goto	u2080
  2981  0007C4  0E01               	movlw	1
  2982  0007C6  D001               	goto	u2090
  2983  0007C8                     u2080:
  2984  0007C8  0E00               	movlw	0
  2985  0007CA                     u2090:
  2986  0007CA  6E37               	movwf	_xtoa$1211,c
  2987  0007CC  6A38               	clrf	_xtoa$1211+1,c
  2988  0007CE  5037               	movf	_xtoa$1211,w,c
  2989  0007D0  1038               	iorwf	_xtoa$1211+1,w,c
  2990  0007D2  B4D8               	btfsc	status,2,c
  2991  0007D4  D00A               	goto	l2593
  2992                           
  2993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  2994  0007D6  C047  F00B         	movff	xtoa@c,toupper@c
  2995  0007DA  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  2996  0007DE  ECBF  F008         	call	_toupper	;wreg free
  2997  0007E2  C00B  F047         	movff	?_toupper,xtoa@c
  2998  0007E6  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  2999  0007EA                     l2593:
  3000                           
  3001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  3002  0007EA  0E7B               	movlw	low _dbuf
  3003  0007EC  2445               	addwf	xtoa@i,w,c
  3004  0007EE  6ED9               	movwf	fsr2l,c
  3005  0007F0  0E00               	movlw	high _dbuf
  3006  0007F2  2046               	addwfc	xtoa@i+1,w,c
  3007  0007F4  6EDA               	movwf	fsr2h,c
  3008  0007F6  C047  FFDF         	movff	xtoa@c,indf2
  3009                           
  3010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  3011  0007FA  0639               	decf	xtoa@p,f,c
  3012  0007FC  A0D8               	btfss	status,0,c
  3013  0007FE  063A               	decf	xtoa@p+1,f,c
  3014                           
  3015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  3016  000800  063B               	decf	xtoa@w,f,c
  3017  000802  A0D8               	btfss	status,0,c
  3018  000804  063C               	decf	xtoa@w+1,f,c
  3019                           
  3020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  3021  000806  C03D  F02D         	movff	xtoa@n,??_xtoa
  3022  00080A  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  3023  00080E  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  3024  000812  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  3025  000816  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  3026  00081A  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  3027  00081E  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  3028  000822  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  3029  000826  0E05               	movlw	5
  3030  000828  D009               	goto	u2110
  3031  00082A                     u2115:
  3032  00082A  90D8               	bcf	status,0,c
  3033  00082C  3234               	rrcf	??_xtoa+7,f,c
  3034  00082E  3233               	rrcf	??_xtoa+6,f,c
  3035  000830  3232               	rrcf	??_xtoa+5,f,c
  3036  000832  3231               	rrcf	??_xtoa+4,f,c
  3037  000834  3230               	rrcf	??_xtoa+3,f,c
  3038  000836  322F               	rrcf	??_xtoa+2,f,c
  3039  000838  322E               	rrcf	??_xtoa+1,f,c
  3040  00083A  322D               	rrcf	??_xtoa,f,c
  3041  00083C                     u2110:
  3042  00083C  2EE8               	decfsz	wreg,f,c
  3043  00083E  D7F5               	goto	u2115
  3044  000840  C02D  F03D         	movff	??_xtoa,xtoa@n
  3045  000844  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  3046  000848  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  3047  00084C  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  3048  000850  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  3049  000854  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  3050  000858  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  3051  00085C  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  3052  000860                     l2601:
  3053                           
  3054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3055  000860  BE46               	btfsc	xtoa@i+1,7,c
  3056  000862  D020               	goto	u2160
  3057  000864  5046               	movf	xtoa@i+1,w,c
  3058  000866  E104               	bnz	u2120
  3059  000868  0E02               	movlw	2
  3060  00086A  5C45               	subwf	xtoa@i,w,c
  3061  00086C  A0D8               	btfss	status,0,c
  3062  00086E  D01A               	goto	u2160
  3063  000870                     u2120:
  3064  000870  503D               	movf	xtoa@n,w,c
  3065  000872  103E               	iorwf	xtoa@n+1,w,c
  3066  000874  103F               	iorwf	xtoa@n+2,w,c
  3067  000876  1040               	iorwf	xtoa@n+3,w,c
  3068  000878  1041               	iorwf	xtoa@n+4,w,c
  3069  00087A  1042               	iorwf	xtoa@n+5,w,c
  3070  00087C  1043               	iorwf	xtoa@n+6,w,c
  3071  00087E  1044               	iorwf	xtoa@n+7,w,c
  3072  000880  A4D8               	btfss	status,2,c
  3073  000882  D75B               	goto	l2571
  3074  000884  BE3A               	btfsc	xtoa@p+1,7,c
  3075  000886  D005               	goto	u2140
  3076  000888  503A               	movf	xtoa@p+1,w,c
  3077  00088A  E102               	bnz	u2141
  3078  00088C  0439               	decf	xtoa@p,w,c
  3079  00088E  B0D8               	btfsc	status,0,c
  3080  000890                     u2141:
  3081  000890  D754               	goto	l2571
  3082  000892                     u2140:
  3083  000892  BE3C               	btfsc	xtoa@w+1,7,c
  3084  000894  D007               	goto	u2160
  3085  000896  503C               	movf	xtoa@w+1,w,c
  3086  000898  E103               	bnz	u2150
  3087  00089A  043B               	decf	xtoa@w,w,c
  3088  00089C  A0D8               	btfss	status,0,c
  3089  00089E  D002               	goto	u2160
  3090  0008A0                     u2150:
  3091  0008A0  B257               	btfsc	_flags,1,c
  3092  0008A2  D74B               	goto	l2571
  3093  0008A4                     u2160:
  3094                           
  3095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  3096  0008A4  A857               	btfss	_flags,4,c
  3097  0008A6  D016               	goto	l2617
  3098                           
  3099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  3100  0008A8  0645               	decf	xtoa@i,f,c
  3101  0008AA  A0D8               	btfss	status,0,c
  3102  0008AC  0646               	decf	xtoa@i+1,f,c
  3103                           
  3104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  3105  0008AE  0E7B               	movlw	low _dbuf
  3106  0008B0  2445               	addwf	xtoa@i,w,c
  3107  0008B2  6ED9               	movwf	fsr2l,c
  3108  0008B4  0E00               	movlw	high _dbuf
  3109  0008B6  2046               	addwfc	xtoa@i+1,w,c
  3110  0008B8  6EDA               	movwf	fsr2h,c
  3111  0008BA  C02C  FFDF         	movff	xtoa@x,indf2
  3112                           
  3113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  3114  0008BE  0645               	decf	xtoa@i,f,c
  3115  0008C0  A0D8               	btfss	status,0,c
  3116  0008C2  0646               	decf	xtoa@i+1,f,c
  3117                           
  3118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  3119  0008C4  0E7B               	movlw	low _dbuf
  3120  0008C6  2445               	addwf	xtoa@i,w,c
  3121  0008C8  6ED9               	movwf	fsr2l,c
  3122  0008CA  0E00               	movlw	high _dbuf
  3123  0008CC  2046               	addwfc	xtoa@i+1,w,c
  3124  0008CE  6EDA               	movwf	fsr2h,c
  3125  0008D0  0E30               	movlw	48
  3126  0008D2  6EDF               	movwf	indf2,c
  3127  0008D4                     l2617:
  3128                           
  3129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  3130  0008D4  C022  F017         	movff	xtoa@fp,pad@fp
  3131  0008D8  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  3132  0008DC  0E7B               	movlw	low _dbuf
  3133  0008DE  2445               	addwf	xtoa@i,w,c
  3134  0008E0  6E19               	movwf	pad@buf,c
  3135  0008E2  0E00               	movlw	high _dbuf
  3136  0008E4  2046               	addwfc	xtoa@i+1,w,c
  3137  0008E6  6E1A               	movwf	pad@buf+1,c
  3138  0008E8  C03B  F01B         	movff	xtoa@w,pad@p
  3139  0008EC  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  3140  0008F0  EC44  F007         	call	_pad	;wreg free
  3141  0008F4  C017  F022         	movff	?_pad,?_xtoa
  3142  0008F8  C018  F023         	movff	?_pad+1,?_xtoa+1
  3143  0008FC  0012               	return		;funcret
  3144  0008FE                     __end_of_xtoa:
  3145                           	opt callstack 0
  3146                           
  3147 ;; *************** function _toupper *****************
  3148 ;; Defined at:
  3149 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  c               2   10[COMRAM] int 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  2   10[COMRAM] int 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;Total ram usage:        8 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    5
  3170 ;; This function calls:
  3171 ;;		_islower
  3172 ;; This function is called by:
  3173 ;;		_xtoa
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text8
  3178  00117E                     __ptext8:
  3179                           	opt callstack 0
  3180  00117E                     _toupper:
  3181                           	opt callstack 21
  3182                           
  3183                           ;incstack = 0
  3184  00117E  0E9F               	movlw	159
  3185  001180  6E0D               	movwf	??_toupper& (0+255),c
  3186  001182  0EFF               	movlw	255
  3187  001184  6E0E               	movwf	(??_toupper+1)& (0+255),c
  3188  001186  C00B  F00F         	movff	toupper@c,??_toupper+2
  3189  00118A  C00C  F010         	movff	toupper@c+1,??_toupper+3
  3190  00118E  500D               	movf	??_toupper,w,c
  3191  001190  260F               	addwf	??_toupper+2,f,c
  3192  001192  500E               	movf	??_toupper+1,w,c
  3193  001194  2210               	addwfc	??_toupper+3,f,c
  3194  001196  5010               	movf	??_toupper+3,w,c
  3195  001198  E106               	bnz	u1650
  3196  00119A  0E1A               	movlw	26
  3197  00119C  5C0F               	subwf	??_toupper+2,w,c
  3198  00119E  B0D8               	btfsc	status,0,c
  3199  0011A0  D002               	goto	u1650
  3200  0011A2  0E01               	movlw	1
  3201  0011A4  D001               	goto	u1660
  3202  0011A6                     u1650:
  3203  0011A6  0E00               	movlw	0
  3204  0011A8                     u1660:
  3205  0011A8  6E11               	movwf	_toupper$1775,c
  3206  0011AA  6A12               	clrf	_toupper$1775+1,c
  3207  0011AC  5011               	movf	_toupper$1775,w,c
  3208  0011AE  1012               	iorwf	_toupper$1775+1,w,c
  3209  0011B0  B4D8               	btfsc	status,2,c
  3210  0011B2  D005               	goto	l1319
  3211  0011B4  0E5F               	movlw	95
  3212  0011B6  140B               	andwf	toupper@c,w,c
  3213  0011B8  6E0B               	movwf	?_toupper,c
  3214  0011BA  6A0C               	clrf	?_toupper+1,c
  3215  0011BC  0012               	return	
  3216  0011BE                     l1319:
  3217  0011BE  C00B  F00B         	movff	toupper@c,?_toupper
  3218  0011C2  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  3219  0011C6  0012               	return		;funcret
  3220  0011C8                     __end_of_toupper:
  3221                           	opt callstack 0
  3222                           
  3223 ;; *************** function _islower *****************
  3224 ;; Defined at:
  3225 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  c               2    4[COMRAM] int 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  2    4[COMRAM] int 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;Total ram usage:        6 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    4
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_toupper
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text9
  3254  001312                     __ptext9:
  3255                           	opt callstack 0
  3256  001312                     _islower:
  3257                           	opt callstack 21
  3258                           
  3259                           ;incstack = 0
  3260  001312  0E9F               	movlw	159
  3261  001314  6E07               	movwf	??_islower& (0+255),c
  3262  001316  0EFF               	movlw	255
  3263  001318  6E08               	movwf	(??_islower+1)& (0+255),c
  3264  00131A  C005  F009         	movff	islower@c,??_islower+2
  3265  00131E  C006  F00A         	movff	islower@c+1,??_islower+3
  3266  001322  5007               	movf	??_islower,w,c
  3267  001324  2609               	addwf	??_islower+2,f,c
  3268  001326  5008               	movf	??_islower+1,w,c
  3269  001328  220A               	addwfc	??_islower+3,f,c
  3270  00132A  500A               	movf	??_islower+3,w,c
  3271  00132C  E106               	bnz	u1540
  3272  00132E  0E1A               	movlw	26
  3273  001330  5C09               	subwf	??_islower+2,w,c
  3274  001332  B0D8               	btfsc	status,0,c
  3275  001334  D002               	goto	u1540
  3276  001336  0E01               	movlw	1
  3277  001338  D001               	goto	u1550
  3278  00133A                     u1540:
  3279  00133A  0E00               	movlw	0
  3280  00133C                     u1550:
  3281  00133C  6E05               	movwf	?_islower,c
  3282  00133E  6A06               	clrf	?_islower+1,c
  3283  001340  0012               	return		;funcret
  3284  001342                     __end_of_islower:
  3285                           	opt callstack 0
  3286                           
  3287 ;; *************** function _isupper *****************
  3288 ;; Defined at:
  3289 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  c               2    4[COMRAM] int 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  2    4[COMRAM] int 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;Total ram usage:        6 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:    4
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_xtoa
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text10
  3318  001342                     __ptext10:
  3319                           	opt callstack 0
  3320  001342                     _isupper:
  3321                           	opt callstack 22
  3322                           
  3323                           ;incstack = 0
  3324  001342  0EBF               	movlw	191
  3325  001344  6E07               	movwf	??_isupper& (0+255),c
  3326  001346  0EFF               	movlw	255
  3327  001348  6E08               	movwf	(??_isupper+1)& (0+255),c
  3328  00134A  C005  F009         	movff	isupper@c,??_isupper+2
  3329  00134E  C006  F00A         	movff	isupper@c+1,??_isupper+3
  3330  001352  5007               	movf	??_isupper,w,c
  3331  001354  2609               	addwf	??_isupper+2,f,c
  3332  001356  5008               	movf	??_isupper+1,w,c
  3333  001358  220A               	addwfc	??_isupper+3,f,c
  3334  00135A  500A               	movf	??_isupper+3,w,c
  3335  00135C  E106               	bnz	u1610
  3336  00135E  0E1A               	movlw	26
  3337  001360  5C09               	subwf	??_isupper+2,w,c
  3338  001362  B0D8               	btfsc	status,0,c
  3339  001364  D002               	goto	u1610
  3340  001366  0E01               	movlw	1
  3341  001368  D001               	goto	u1620
  3342  00136A                     u1610:
  3343  00136A  0E00               	movlw	0
  3344  00136C                     u1620:
  3345  00136C  6E05               	movwf	?_isupper,c
  3346  00136E  6A06               	clrf	?_isupper+1,c
  3347  001370  0012               	return		;funcret
  3348  001372                     __end_of_isupper:
  3349                           	opt callstack 0
  3350                           
  3351 ;; *************** function _isalpha *****************
  3352 ;; Defined at:
  3353 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  c               2    4[COMRAM] int 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  2    4[COMRAM] int 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;Total ram usage:        6 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    4
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_xtoa
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text11
  3382  0012AC                     __ptext11:
  3383                           	opt callstack 0
  3384  0012AC                     _isalpha:
  3385                           	opt callstack 22
  3386                           
  3387                           ;incstack = 0
  3388  0012AC  0E9F               	movlw	159
  3389  0012AE  6E07               	movwf	??_isalpha& (0+255),c
  3390  0012B0  0EFF               	movlw	255
  3391  0012B2  6E08               	movwf	(??_isalpha+1)& (0+255),c
  3392  0012B4  0E20               	movlw	32
  3393  0012B6  1005               	iorwf	isalpha@c,w,c
  3394  0012B8  6E09               	movwf	(??_isalpha+2)& (0+255),c
  3395  0012BA  0E00               	movlw	0
  3396  0012BC  1006               	iorwf	isalpha@c+1,w,c
  3397  0012BE  6E0A               	movwf	(??_isalpha+3)& (0+255),c
  3398  0012C0  5007               	movf	??_isalpha,w,c
  3399  0012C2  2609               	addwf	??_isalpha+2,f,c
  3400  0012C4  5008               	movf	??_isalpha+1,w,c
  3401  0012C6  220A               	addwfc	??_isalpha+3,f,c
  3402  0012C8  500A               	movf	??_isalpha+3,w,c
  3403  0012CA  E106               	bnz	u1630
  3404  0012CC  0E1A               	movlw	26
  3405  0012CE  5C09               	subwf	??_isalpha+2,w,c
  3406  0012D0  B0D8               	btfsc	status,0,c
  3407  0012D2  D002               	goto	u1630
  3408  0012D4  0E01               	movlw	1
  3409  0012D6  D001               	goto	u1640
  3410  0012D8                     u1630:
  3411  0012D8  0E00               	movlw	0
  3412  0012DA                     u1640:
  3413  0012DA  6E05               	movwf	?_isalpha,c
  3414  0012DC  6A06               	clrf	?_isalpha+1,c
  3415  0012DE  0012               	return		;funcret
  3416  0012E0                     __end_of_isalpha:
  3417                           	opt callstack 0
  3418                           
  3419 ;; *************** function _dtoa *****************
  3420 ;; Defined at:
  3421 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3424 ;;		 -> NULL(0), 
  3425 ;;  d               8   35[COMRAM] long long 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  n               8   59[COMRAM] long long 
  3428 ;;  i               2   67[COMRAM] int 
  3429 ;;  s               2   57[COMRAM] int 
  3430 ;;  w               2   55[COMRAM] int 
  3431 ;;  p               2   53[COMRAM] int 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  2   33[COMRAM] int 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3441 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;Total ram usage:       36 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    9
  3448 ;; This function calls:
  3449 ;;		___aodiv
  3450 ;;		___aomod
  3451 ;;		_abs
  3452 ;;		_pad
  3453 ;; This function is called by:
  3454 ;;		_vfpfcnvrt
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text12
  3459  000490                     __ptext12:
  3460                           	opt callstack 0
  3461  000490                     _dtoa:
  3462                           	opt callstack 18
  3463                           
  3464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3465                           
  3466                           ;incstack = 0
  3467  000490  C024  F03C         	movff	dtoa@d,dtoa@n
  3468  000494  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  3469  000498  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  3470  00049C  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  3471  0004A0  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  3472  0004A4  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  3473  0004A8  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  3474  0004AC  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  3475                           
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3477  0004B0  AE43               	btfss	dtoa@n+7,7,c
  3478  0004B2  D002               	goto	u1860
  3479  0004B4  0E01               	movlw	1
  3480  0004B6  D001               	goto	u1870
  3481  0004B8                     u1860:
  3482  0004B8  0E00               	movlw	0
  3483  0004BA                     u1870:
  3484  0004BA  6E3A               	movwf	dtoa@s,c
  3485  0004BC  6A3B               	clrf	dtoa@s+1,c
  3486                           
  3487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3488  0004BE  503A               	movf	dtoa@s,w,c
  3489  0004C0  103B               	iorwf	dtoa@s+1,w,c
  3490  0004C2  B4D8               	btfsc	status,2,c
  3491  0004C4  D010               	goto	l2499
  3492                           
  3493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3494  0004C6  1E43               	comf	dtoa@n+7,f,c
  3495  0004C8  1E42               	comf	dtoa@n+6,f,c
  3496  0004CA  1E41               	comf	dtoa@n+5,f,c
  3497  0004CC  1E40               	comf	dtoa@n+4,f,c
  3498  0004CE  1E3F               	comf	dtoa@n+3,f,c
  3499  0004D0  1E3E               	comf	dtoa@n+2,f,c
  3500  0004D2  1E3D               	comf	dtoa@n+1,f,c
  3501  0004D4  6C3C               	negf	dtoa@n,c
  3502  0004D6  0E00               	movlw	0
  3503  0004D8  223D               	addwfc	dtoa@n+1,f,c
  3504  0004DA  223E               	addwfc	dtoa@n+2,f,c
  3505  0004DC  223F               	addwfc	dtoa@n+3,f,c
  3506  0004DE  2240               	addwfc	dtoa@n+4,f,c
  3507  0004E0  2241               	addwfc	dtoa@n+5,f,c
  3508  0004E2  2242               	addwfc	dtoa@n+6,f,c
  3509  0004E4  2243               	addwfc	dtoa@n+7,f,c
  3510  0004E6                     l2499:
  3511                           
  3512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3513  0004E6  0100               	movlb	0	; () banked
  3514  0004E8  AF69               	btfss	(_prec+1)& (0+255),7,b
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  3518  0004EA  9257               	bcf	_flags,1,c
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  3522  0004EC  BF69               	btfsc	(_prec+1)& (0+255),7,b
  3523  0004EE  D005               	goto	u1900
  3524  0004F0  5169               	movf	(_prec+1)& (0+255),w,b
  3525  0004F2  E108               	bnz	l453
  3526  0004F4  0568               	decf	_prec& (0+255),w,b
  3527  0004F6  B0D8               	btfsc	status,0,c
  3528  0004F8  D005               	goto	l453
  3529  0004FA                     u1900:
  3530                           
  3531                           ; BSR set to: 0
  3532  0004FA  0E00               	movlw	0
  3533  0004FC  6E37               	movwf	dtoa@p+1,c
  3534  0004FE  0E01               	movlw	1
  3535  000500  6E36               	movwf	dtoa@p,c
  3536  000502  D004               	goto	l455
  3537  000504                     l453:
  3538                           
  3539                           ; BSR set to: 0
  3540  000504  C068  F036         	movff	_prec,dtoa@p
  3541  000508  C069  F037         	movff	_prec+1,dtoa@p+1
  3542  00050C                     l455:
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  3546  00050C  C066  F038         	movff	_width,dtoa@w
  3547  000510  C067  F039         	movff	_width+1,dtoa@w+1
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  3551  000514  503A               	movf	dtoa@s,w,c
  3552  000516  103B               	iorwf	dtoa@s+1,w,c
  3553  000518  A4D8               	btfss	status,2,c
  3554  00051A  D002               	goto	u1920
  3555                           
  3556                           ; BSR set to: 0
  3557  00051C  A457               	btfss	_flags,2,c
  3558  00051E  D003               	goto	l2513
  3559  000520                     u1920:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  3563  000520  0638               	decf	dtoa@w,f,c
  3564  000522  A0D8               	btfss	status,0,c
  3565  000524  0639               	decf	dtoa@w+1,f,c
  3566  000526                     l2513:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  3570  000526  0E00               	movlw	0
  3571  000528  6E45               	movwf	dtoa@i+1,c
  3572  00052A  0E1F               	movlw	31
  3573  00052C  6E44               	movwf	dtoa@i,c
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  3577  00052E  0E00               	movlw	0
  3578  000530  6F9A               	movwf	(_dbuf+31)& (0+255),b
  3579                           
  3580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3581  000532  D07C               	goto	l2527
  3582  000534                     l2517:
  3583                           
  3584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  3585  000534  0644               	decf	dtoa@i,f,c
  3586  000536  A0D8               	btfss	status,0,c
  3587  000538  0645               	decf	dtoa@i+1,f,c
  3588                           
  3589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  3590  00053A  0E7B               	movlw	low _dbuf
  3591  00053C  2444               	addwf	dtoa@i,w,c
  3592  00053E  6ED9               	movwf	fsr2l,c
  3593  000540  0E00               	movlw	high _dbuf
  3594  000542  2045               	addwfc	dtoa@i+1,w,c
  3595  000544  6EDA               	movwf	fsr2h,c
  3596  000546  C03C  F005         	movff	dtoa@n,___aomod@dividend
  3597  00054A  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  3598  00054E  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  3599  000552  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  3600  000556  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  3601  00055A  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  3602  00055E  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  3603  000562  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  3604  000566  0E0A               	movlw	10
  3605  000568  6E0D               	movwf	___aomod@divisor,c
  3606  00056A  0E00               	movlw	0
  3607  00056C  6E0E               	movwf	___aomod@divisor+1,c
  3608  00056E  0E00               	movlw	0
  3609  000570  6E0F               	movwf	___aomod@divisor+2,c
  3610  000572  0E00               	movlw	0
  3611  000574  6E10               	movwf	___aomod@divisor+3,c
  3612  000576  0E00               	movlw	0
  3613  000578  6E11               	movwf	___aomod@divisor+4,c
  3614  00057A  0E00               	movlw	0
  3615  00057C  6E12               	movwf	___aomod@divisor+5,c
  3616  00057E  0E00               	movlw	0
  3617  000580  6E13               	movwf	___aomod@divisor+6,c
  3618  000582  0E00               	movlw	0
  3619  000584  6E14               	movwf	___aomod@divisor+7,c
  3620  000586  EC66  F006         	call	___aomod	;wreg free
  3621  00058A  C005  F02C         	movff	?___aomod,??_dtoa
  3622  00058E  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  3623  000592  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  3624  000596  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  3625  00059A  C009  F030         	movff	?___aomod+4,??_dtoa+4
  3626  00059E  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  3627  0005A2  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  3628  0005A6  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  3629  0005AA  C02C  F017         	movff	??_dtoa,abs@a
  3630  0005AE  C02E  F018         	movff	??_dtoa+2,abs@a+1
  3631  0005B2  EC70  F009         	call	_abs	;wreg free
  3632  0005B6  5017               	movf	?_abs,w,c
  3633  0005B8  0F30               	addlw	48
  3634  0005BA  6EDF               	movwf	indf2,c
  3635                           
  3636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  3637  0005BC  0636               	decf	dtoa@p,f,c
  3638  0005BE  A0D8               	btfss	status,0,c
  3639  0005C0  0637               	decf	dtoa@p+1,f,c
  3640                           
  3641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  3642  0005C2  0638               	decf	dtoa@w,f,c
  3643  0005C4  A0D8               	btfss	status,0,c
  3644  0005C6  0639               	decf	dtoa@w+1,f,c
  3645                           
  3646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  3647  0005C8  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  3648  0005CC  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  3649  0005D0  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  3650  0005D4  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  3651  0005D8  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  3652  0005DC  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  3653  0005E0  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  3654  0005E4  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  3655  0005E8  0E0A               	movlw	10
  3656  0005EA  6E0D               	movwf	___aodiv@divisor,c
  3657  0005EC  0E00               	movlw	0
  3658  0005EE  6E0E               	movwf	___aodiv@divisor+1,c
  3659  0005F0  0E00               	movlw	0
  3660  0005F2  6E0F               	movwf	___aodiv@divisor+2,c
  3661  0005F4  0E00               	movlw	0
  3662  0005F6  6E10               	movwf	___aodiv@divisor+3,c
  3663  0005F8  0E00               	movlw	0
  3664  0005FA  6E11               	movwf	___aodiv@divisor+4,c
  3665  0005FC  0E00               	movlw	0
  3666  0005FE  6E12               	movwf	___aodiv@divisor+5,c
  3667  000600  0E00               	movlw	0
  3668  000602  6E13               	movwf	___aodiv@divisor+6,c
  3669  000604  0E00               	movlw	0
  3670  000606  6E14               	movwf	___aodiv@divisor+7,c
  3671  000608  EC24  F005         	call	___aodiv	;wreg free
  3672  00060C  C005  F03C         	movff	?___aodiv,dtoa@n
  3673  000610  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  3674  000614  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  3675  000618  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  3676  00061C  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  3677  000620  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  3678  000624  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  3679  000628  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  3680  00062C                     l2527:
  3681                           
  3682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3683  00062C  BE45               	btfsc	dtoa@i+1,7,c
  3684  00062E  D01F               	goto	u1970
  3685  000630  5045               	movf	dtoa@i+1,w,c
  3686  000632  E103               	bnz	u1930
  3687  000634  0444               	decf	dtoa@i,w,c
  3688  000636  A0D8               	btfss	status,0,c
  3689  000638  D01A               	goto	u1970
  3690  00063A                     u1930:
  3691  00063A  503C               	movf	dtoa@n,w,c
  3692  00063C  103D               	iorwf	dtoa@n+1,w,c
  3693  00063E  103E               	iorwf	dtoa@n+2,w,c
  3694  000640  103F               	iorwf	dtoa@n+3,w,c
  3695  000642  1040               	iorwf	dtoa@n+4,w,c
  3696  000644  1041               	iorwf	dtoa@n+5,w,c
  3697  000646  1042               	iorwf	dtoa@n+6,w,c
  3698  000648  1043               	iorwf	dtoa@n+7,w,c
  3699  00064A  A4D8               	btfss	status,2,c
  3700  00064C  D773               	goto	l2517
  3701  00064E  BE37               	btfsc	dtoa@p+1,7,c
  3702  000650  D005               	goto	u1950
  3703  000652  5037               	movf	dtoa@p+1,w,c
  3704  000654  E102               	bnz	u1951
  3705  000656  0436               	decf	dtoa@p,w,c
  3706  000658  B0D8               	btfsc	status,0,c
  3707  00065A                     u1951:
  3708  00065A  D76C               	goto	l2517
  3709  00065C                     u1950:
  3710  00065C  BE39               	btfsc	dtoa@w+1,7,c
  3711  00065E  D007               	goto	u1970
  3712  000660  5039               	movf	dtoa@w+1,w,c
  3713  000662  E103               	bnz	u1960
  3714  000664  0438               	decf	dtoa@w,w,c
  3715  000666  A0D8               	btfss	status,0,c
  3716  000668  D002               	goto	u1970
  3717  00066A                     u1960:
  3718  00066A  B257               	btfsc	_flags,1,c
  3719  00066C  D763               	goto	l2517
  3720  00066E                     u1970:
  3721                           
  3722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  3723  00066E  503A               	movf	dtoa@s,w,c
  3724  000670  103B               	iorwf	dtoa@s+1,w,c
  3725  000672  A4D8               	btfss	status,2,c
  3726  000674  D002               	goto	u1990
  3727  000676  A457               	btfss	_flags,2,c
  3728  000678  D017               	goto	l2551
  3729  00067A                     u1990:
  3730                           
  3731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  3732  00067A  0644               	decf	dtoa@i,f,c
  3733  00067C  A0D8               	btfss	status,0,c
  3734  00067E  0645               	decf	dtoa@i+1,f,c
  3735                           
  3736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  3737  000680  503A               	movf	dtoa@s,w,c
  3738  000682  103B               	iorwf	dtoa@s+1,w,c
  3739  000684  A4D8               	btfss	status,2,c
  3740  000686  D004               	goto	l2547
  3741  000688  0E00               	movlw	0
  3742  00068A  6E35               	movwf	_dtoa$1200+1,c
  3743  00068C  0E2B               	movlw	43
  3744  00068E  D003               	goto	L3
  3745  000690                     l2547:
  3746  000690  0E00               	movlw	0
  3747  000692  6E35               	movwf	_dtoa$1200+1,c
  3748  000694  0E2D               	movlw	45
  3749  000696                     L3:
  3750  000696  6E34               	movwf	_dtoa$1200,c
  3751  000698  0E7B               	movlw	low _dbuf
  3752  00069A  2444               	addwf	dtoa@i,w,c
  3753  00069C  6ED9               	movwf	fsr2l,c
  3754  00069E  0E00               	movlw	high _dbuf
  3755  0006A0  2045               	addwfc	dtoa@i+1,w,c
  3756  0006A2  6EDA               	movwf	fsr2h,c
  3757  0006A4  C034  FFDF         	movff	_dtoa$1200,indf2
  3758  0006A8                     l2551:
  3759                           
  3760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  3761  0006A8  C022  F017         	movff	dtoa@fp,pad@fp
  3762  0006AC  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  3763  0006B0  0E7B               	movlw	low _dbuf
  3764  0006B2  2444               	addwf	dtoa@i,w,c
  3765  0006B4  6E19               	movwf	pad@buf,c
  3766  0006B6  0E00               	movlw	high _dbuf
  3767  0006B8  2045               	addwfc	dtoa@i+1,w,c
  3768  0006BA  6E1A               	movwf	pad@buf+1,c
  3769  0006BC  C038  F01B         	movff	dtoa@w,pad@p
  3770  0006C0  C039  F01C         	movff	dtoa@w+1,pad@p+1
  3771  0006C4  EC44  F007         	call	_pad	;wreg free
  3772  0006C8  C017  F022         	movff	?_pad,?_dtoa
  3773  0006CC  C018  F023         	movff	?_pad+1,?_dtoa+1
  3774  0006D0  0012               	return		;funcret
  3775  0006D2                     __end_of_dtoa:
  3776                           	opt callstack 0
  3777                           
  3778 ;; *************** function _abs *****************
  3779 ;; Defined at:
  3780 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  a               2   22[COMRAM] int 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  2   22[COMRAM] int 
  3787 ;; Registers used:
  3788 ;;		wreg, status,2, status,0
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;Total ram usage:        4 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    4
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_dtoa
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text13
  3809  0012E0                     __ptext13:
  3810                           	opt callstack 0
  3811  0012E0                     _abs:
  3812                           	opt callstack 22
  3813                           
  3814                           ;incstack = 0
  3815  0012E0  BE18               	btfsc	abs@a+1,7,c
  3816  0012E2  D005               	goto	u1600
  3817  0012E4  5018               	movf	abs@a+1,w,c
  3818  0012E6  E110               	bnz	l1221
  3819  0012E8  0417               	decf	abs@a,w,c
  3820  0012EA  B0D8               	btfsc	status,0,c
  3821  0012EC  D00D               	goto	l1221
  3822  0012EE                     u1600:
  3823  0012EE  C017  F019         	movff	abs@a,??_abs
  3824  0012F2  C018  F01A         	movff	abs@a+1,??_abs+1
  3825  0012F6  1E19               	comf	??_abs,f,c
  3826  0012F8  1E1A               	comf	??_abs+1,f,c
  3827  0012FA  4A19               	infsnz	??_abs,f,c
  3828  0012FC  2A1A               	incf	??_abs+1,f,c
  3829  0012FE  C019  F017         	movff	??_abs,?_abs
  3830  001302  C01A  F018         	movff	??_abs+1,?_abs+1
  3831  001306  0012               	return	
  3832  001308                     l1221:
  3833  001308  C017  F017         	movff	abs@a,?_abs
  3834  00130C  C018  F018         	movff	abs@a+1,?_abs+1
  3835  001310  0012               	return		;funcret
  3836  001312                     __end_of_abs:
  3837                           	opt callstack 0
  3838                           
  3839 ;; *************** function ___aomod *****************
  3840 ;; Defined at:
  3841 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  dividend        8    4[COMRAM] long long 
  3844 ;;  divisor         8   12[COMRAM] long long 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  sign            1   21[COMRAM] unsigned char 
  3847 ;;  counter         1   20[COMRAM] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  8    4[COMRAM] long long 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3857 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;Total ram usage:       18 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    4
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_dtoa
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           	psect	text14
  3872  000CCC                     __ptext14:
  3873                           	opt callstack 0
  3874  000CCC                     ___aomod:
  3875                           	opt callstack 22
  3876                           
  3877                           ;incstack = 0
  3878  000CCC  0E00               	movlw	0
  3879  000CCE  6E16               	movwf	___aomod@sign,c
  3880  000CD0  AE0C               	btfss	___aomod@dividend+7,7,c
  3881  000CD2  D012               	goto	l2439
  3882  000CD4  1E0C               	comf	___aomod@dividend+7,f,c
  3883  000CD6  1E0B               	comf	___aomod@dividend+6,f,c
  3884  000CD8  1E0A               	comf	___aomod@dividend+5,f,c
  3885  000CDA  1E09               	comf	___aomod@dividend+4,f,c
  3886  000CDC  1E08               	comf	___aomod@dividend+3,f,c
  3887  000CDE  1E07               	comf	___aomod@dividend+2,f,c
  3888  000CE0  1E06               	comf	___aomod@dividend+1,f,c
  3889  000CE2  6C05               	negf	___aomod@dividend,c
  3890  000CE4  0E00               	movlw	0
  3891  000CE6  2206               	addwfc	___aomod@dividend+1,f,c
  3892  000CE8  2207               	addwfc	___aomod@dividend+2,f,c
  3893  000CEA  2208               	addwfc	___aomod@dividend+3,f,c
  3894  000CEC  2209               	addwfc	___aomod@dividend+4,f,c
  3895  000CEE  220A               	addwfc	___aomod@dividend+5,f,c
  3896  000CF0  220B               	addwfc	___aomod@dividend+6,f,c
  3897  000CF2  220C               	addwfc	___aomod@dividend+7,f,c
  3898  000CF4  0E01               	movlw	1
  3899  000CF6  6E16               	movwf	___aomod@sign,c
  3900  000CF8                     l2439:
  3901  000CF8  AE14               	btfss	___aomod@divisor+7,7,c
  3902  000CFA  D010               	goto	l2443
  3903  000CFC  1E14               	comf	___aomod@divisor+7,f,c
  3904  000CFE  1E13               	comf	___aomod@divisor+6,f,c
  3905  000D00  1E12               	comf	___aomod@divisor+5,f,c
  3906  000D02  1E11               	comf	___aomod@divisor+4,f,c
  3907  000D04  1E10               	comf	___aomod@divisor+3,f,c
  3908  000D06  1E0F               	comf	___aomod@divisor+2,f,c
  3909  000D08  1E0E               	comf	___aomod@divisor+1,f,c
  3910  000D0A  6C0D               	negf	___aomod@divisor,c
  3911  000D0C  0E00               	movlw	0
  3912  000D0E  220E               	addwfc	___aomod@divisor+1,f,c
  3913  000D10  220F               	addwfc	___aomod@divisor+2,f,c
  3914  000D12  2210               	addwfc	___aomod@divisor+3,f,c
  3915  000D14  2211               	addwfc	___aomod@divisor+4,f,c
  3916  000D16  2212               	addwfc	___aomod@divisor+5,f,c
  3917  000D18  2213               	addwfc	___aomod@divisor+6,f,c
  3918  000D1A  2214               	addwfc	___aomod@divisor+7,f,c
  3919  000D1C                     l2443:
  3920  000D1C  500D               	movf	___aomod@divisor,w,c
  3921  000D1E  100E               	iorwf	___aomod@divisor+1,w,c
  3922  000D20  100F               	iorwf	___aomod@divisor+2,w,c
  3923  000D22  1010               	iorwf	___aomod@divisor+3,w,c
  3924  000D24  1011               	iorwf	___aomod@divisor+4,w,c
  3925  000D26  1012               	iorwf	___aomod@divisor+5,w,c
  3926  000D28  1013               	iorwf	___aomod@divisor+6,w,c
  3927  000D2A  1014               	iorwf	___aomod@divisor+7,w,c
  3928  000D2C  B4D8               	btfsc	status,2,c
  3929  000D2E  D03C               	goto	l2459
  3930  000D30  0E01               	movlw	1
  3931  000D32  6E15               	movwf	___aomod@counter,c
  3932  000D34  D00A               	goto	l2449
  3933  000D36                     l2447:
  3934  000D36  90D8               	bcf	status,0,c
  3935  000D38  360D               	rlcf	___aomod@divisor,f,c
  3936  000D3A  360E               	rlcf	___aomod@divisor+1,f,c
  3937  000D3C  360F               	rlcf	___aomod@divisor+2,f,c
  3938  000D3E  3610               	rlcf	___aomod@divisor+3,f,c
  3939  000D40  3611               	rlcf	___aomod@divisor+4,f,c
  3940  000D42  3612               	rlcf	___aomod@divisor+5,f,c
  3941  000D44  3613               	rlcf	___aomod@divisor+6,f,c
  3942  000D46  3614               	rlcf	___aomod@divisor+7,f,c
  3943  000D48  2A15               	incf	___aomod@counter,f,c
  3944  000D4A                     l2449:
  3945  000D4A  AE14               	btfss	___aomod@divisor+7,7,c
  3946  000D4C  D7F4               	goto	l2447
  3947  000D4E                     u1800:
  3948  000D4E  500D               	movf	___aomod@divisor,w,c
  3949  000D50  5C05               	subwf	___aomod@dividend,w,c
  3950  000D52  500E               	movf	___aomod@divisor+1,w,c
  3951  000D54  5806               	subwfb	___aomod@dividend+1,w,c
  3952  000D56  500F               	movf	___aomod@divisor+2,w,c
  3953  000D58  5807               	subwfb	___aomod@dividend+2,w,c
  3954  000D5A  5010               	movf	___aomod@divisor+3,w,c
  3955  000D5C  5808               	subwfb	___aomod@dividend+3,w,c
  3956  000D5E  5011               	movf	___aomod@divisor+4,w,c
  3957  000D60  5809               	subwfb	___aomod@dividend+4,w,c
  3958  000D62  5012               	movf	___aomod@divisor+5,w,c
  3959  000D64  580A               	subwfb	___aomod@dividend+5,w,c
  3960  000D66  5013               	movf	___aomod@divisor+6,w,c
  3961  000D68  580B               	subwfb	___aomod@dividend+6,w,c
  3962  000D6A  5014               	movf	___aomod@divisor+7,w,c
  3963  000D6C  580C               	subwfb	___aomod@dividend+7,w,c
  3964  000D6E  A0D8               	btfss	status,0,c
  3965  000D70  D010               	goto	l2455
  3966  000D72  500D               	movf	___aomod@divisor,w,c
  3967  000D74  5E05               	subwf	___aomod@dividend,f,c
  3968  000D76  500E               	movf	___aomod@divisor+1,w,c
  3969  000D78  5A06               	subwfb	___aomod@dividend+1,f,c
  3970  000D7A  500F               	movf	___aomod@divisor+2,w,c
  3971  000D7C  5A07               	subwfb	___aomod@dividend+2,f,c
  3972  000D7E  5010               	movf	___aomod@divisor+3,w,c
  3973  000D80  5A08               	subwfb	___aomod@dividend+3,f,c
  3974  000D82  5011               	movf	___aomod@divisor+4,w,c
  3975  000D84  5A09               	subwfb	___aomod@dividend+4,f,c
  3976  000D86  5012               	movf	___aomod@divisor+5,w,c
  3977  000D88  5A0A               	subwfb	___aomod@dividend+5,f,c
  3978  000D8A  5013               	movf	___aomod@divisor+6,w,c
  3979  000D8C  5A0B               	subwfb	___aomod@dividend+6,f,c
  3980  000D8E  5014               	movf	___aomod@divisor+7,w,c
  3981  000D90  5A0C               	subwfb	___aomod@dividend+7,f,c
  3982  000D92                     l2455:
  3983  000D92  90D8               	bcf	status,0,c
  3984  000D94  3214               	rrcf	___aomod@divisor+7,f,c
  3985  000D96  3213               	rrcf	___aomod@divisor+6,f,c
  3986  000D98  3212               	rrcf	___aomod@divisor+5,f,c
  3987  000D9A  3211               	rrcf	___aomod@divisor+4,f,c
  3988  000D9C  3210               	rrcf	___aomod@divisor+3,f,c
  3989  000D9E  320F               	rrcf	___aomod@divisor+2,f,c
  3990  000DA0  320E               	rrcf	___aomod@divisor+1,f,c
  3991  000DA2  320D               	rrcf	___aomod@divisor,f,c
  3992  000DA4  2E15               	decfsz	___aomod@counter,f,c
  3993  000DA6  D7D3               	goto	u1800
  3994  000DA8                     l2459:
  3995  000DA8  5016               	movf	___aomod@sign,w,c
  3996  000DAA  B4D8               	btfsc	status,2,c
  3997  000DAC  D010               	goto	l2463
  3998  000DAE  1E0C               	comf	___aomod@dividend+7,f,c
  3999  000DB0  1E0B               	comf	___aomod@dividend+6,f,c
  4000  000DB2  1E0A               	comf	___aomod@dividend+5,f,c
  4001  000DB4  1E09               	comf	___aomod@dividend+4,f,c
  4002  000DB6  1E08               	comf	___aomod@dividend+3,f,c
  4003  000DB8  1E07               	comf	___aomod@dividend+2,f,c
  4004  000DBA  1E06               	comf	___aomod@dividend+1,f,c
  4005  000DBC  6C05               	negf	___aomod@dividend,c
  4006  000DBE  0E00               	movlw	0
  4007  000DC0  2206               	addwfc	___aomod@dividend+1,f,c
  4008  000DC2  2207               	addwfc	___aomod@dividend+2,f,c
  4009  000DC4  2208               	addwfc	___aomod@dividend+3,f,c
  4010  000DC6  2209               	addwfc	___aomod@dividend+4,f,c
  4011  000DC8  220A               	addwfc	___aomod@dividend+5,f,c
  4012  000DCA  220B               	addwfc	___aomod@dividend+6,f,c
  4013  000DCC  220C               	addwfc	___aomod@dividend+7,f,c
  4014  000DCE                     l2463:
  4015  000DCE  C005  F005         	movff	___aomod@dividend,?___aomod
  4016  000DD2  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  4017  000DD6  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  4018  000DDA  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  4019  000DDE  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  4020  000DE2  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  4021  000DE6  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  4022  000DEA  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  4023  000DEE  0012               	return		;funcret
  4024  000DF0                     __end_of___aomod:
  4025                           	opt callstack 0
  4026                           
  4027 ;; *************** function ___aodiv *****************
  4028 ;; Defined at:
  4029 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  dividend        8    4[COMRAM] long long 
  4032 ;;  divisor         8   12[COMRAM] long long 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  quotient        8   22[COMRAM] long long 
  4035 ;;  sign            1   21[COMRAM] unsigned char 
  4036 ;;  counter         1   20[COMRAM] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  8    4[COMRAM] long long 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4046 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;Total ram usage:       26 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    4
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_dtoa
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text15
  4061  000A48                     __ptext15:
  4062                           	opt callstack 0
  4063  000A48                     ___aodiv:
  4064                           	opt callstack 22
  4065                           
  4066                           ;incstack = 0
  4067  000A48  0E00               	movlw	0
  4068  000A4A  6E16               	movwf	___aodiv@sign,c
  4069  000A4C  AE14               	btfss	___aodiv@divisor+7,7,c
  4070  000A4E  D012               	goto	l2395
  4071  000A50  1E14               	comf	___aodiv@divisor+7,f,c
  4072  000A52  1E13               	comf	___aodiv@divisor+6,f,c
  4073  000A54  1E12               	comf	___aodiv@divisor+5,f,c
  4074  000A56  1E11               	comf	___aodiv@divisor+4,f,c
  4075  000A58  1E10               	comf	___aodiv@divisor+3,f,c
  4076  000A5A  1E0F               	comf	___aodiv@divisor+2,f,c
  4077  000A5C  1E0E               	comf	___aodiv@divisor+1,f,c
  4078  000A5E  6C0D               	negf	___aodiv@divisor,c
  4079  000A60  0E00               	movlw	0
  4080  000A62  220E               	addwfc	___aodiv@divisor+1,f,c
  4081  000A64  220F               	addwfc	___aodiv@divisor+2,f,c
  4082  000A66  2210               	addwfc	___aodiv@divisor+3,f,c
  4083  000A68  2211               	addwfc	___aodiv@divisor+4,f,c
  4084  000A6A  2212               	addwfc	___aodiv@divisor+5,f,c
  4085  000A6C  2213               	addwfc	___aodiv@divisor+6,f,c
  4086  000A6E  2214               	addwfc	___aodiv@divisor+7,f,c
  4087  000A70  0E01               	movlw	1
  4088  000A72  6E16               	movwf	___aodiv@sign,c
  4089  000A74                     l2395:
  4090  000A74  AE0C               	btfss	___aodiv@dividend+7,7,c
  4091  000A76  D012               	goto	l2401
  4092  000A78  1E0C               	comf	___aodiv@dividend+7,f,c
  4093  000A7A  1E0B               	comf	___aodiv@dividend+6,f,c
  4094  000A7C  1E0A               	comf	___aodiv@dividend+5,f,c
  4095  000A7E  1E09               	comf	___aodiv@dividend+4,f,c
  4096  000A80  1E08               	comf	___aodiv@dividend+3,f,c
  4097  000A82  1E07               	comf	___aodiv@dividend+2,f,c
  4098  000A84  1E06               	comf	___aodiv@dividend+1,f,c
  4099  000A86  6C05               	negf	___aodiv@dividend,c
  4100  000A88  0E00               	movlw	0
  4101  000A8A  2206               	addwfc	___aodiv@dividend+1,f,c
  4102  000A8C  2207               	addwfc	___aodiv@dividend+2,f,c
  4103  000A8E  2208               	addwfc	___aodiv@dividend+3,f,c
  4104  000A90  2209               	addwfc	___aodiv@dividend+4,f,c
  4105  000A92  220A               	addwfc	___aodiv@dividend+5,f,c
  4106  000A94  220B               	addwfc	___aodiv@dividend+6,f,c
  4107  000A96  220C               	addwfc	___aodiv@dividend+7,f,c
  4108  000A98  0E01               	movlw	1
  4109  000A9A  1A16               	xorwf	___aodiv@sign,f,c
  4110  000A9C                     l2401:
  4111  000A9C  EE20  F017         	lfsr	2,___aodiv@quotient
  4112  000AA0  0E07               	movlw	7
  4113  000AA2                     u1721:
  4114  000AA2  6ADE               	clrf	postinc2,c
  4115  000AA4  06E8               	decf	wreg,f,c
  4116  000AA6  E2FD               	bc	u1721
  4117  000AA8  500D               	movf	___aodiv@divisor,w,c
  4118  000AAA  100E               	iorwf	___aodiv@divisor+1,w,c
  4119  000AAC  100F               	iorwf	___aodiv@divisor+2,w,c
  4120  000AAE  1010               	iorwf	___aodiv@divisor+3,w,c
  4121  000AB0  1011               	iorwf	___aodiv@divisor+4,w,c
  4122  000AB2  1012               	iorwf	___aodiv@divisor+5,w,c
  4123  000AB4  1013               	iorwf	___aodiv@divisor+6,w,c
  4124  000AB6  1014               	iorwf	___aodiv@divisor+7,w,c
  4125  000AB8  B4D8               	btfsc	status,2,c
  4126  000ABA  D046               	goto	l2423
  4127  000ABC  0E01               	movlw	1
  4128  000ABE  6E15               	movwf	___aodiv@counter,c
  4129  000AC0  D00A               	goto	l2409
  4130  000AC2                     l2407:
  4131  000AC2  90D8               	bcf	status,0,c
  4132  000AC4  360D               	rlcf	___aodiv@divisor,f,c
  4133  000AC6  360E               	rlcf	___aodiv@divisor+1,f,c
  4134  000AC8  360F               	rlcf	___aodiv@divisor+2,f,c
  4135  000ACA  3610               	rlcf	___aodiv@divisor+3,f,c
  4136  000ACC  3611               	rlcf	___aodiv@divisor+4,f,c
  4137  000ACE  3612               	rlcf	___aodiv@divisor+5,f,c
  4138  000AD0  3613               	rlcf	___aodiv@divisor+6,f,c
  4139  000AD2  3614               	rlcf	___aodiv@divisor+7,f,c
  4140  000AD4  2A15               	incf	___aodiv@counter,f,c
  4141  000AD6                     l2409:
  4142  000AD6  AE14               	btfss	___aodiv@divisor+7,7,c
  4143  000AD8  D7F4               	goto	l2407
  4144  000ADA                     u1740:
  4145  000ADA  90D8               	bcf	status,0,c
  4146  000ADC  3617               	rlcf	___aodiv@quotient,f,c
  4147  000ADE  3618               	rlcf	___aodiv@quotient+1,f,c
  4148  000AE0  3619               	rlcf	___aodiv@quotient+2,f,c
  4149  000AE2  361A               	rlcf	___aodiv@quotient+3,f,c
  4150  000AE4  361B               	rlcf	___aodiv@quotient+4,f,c
  4151  000AE6  361C               	rlcf	___aodiv@quotient+5,f,c
  4152  000AE8  361D               	rlcf	___aodiv@quotient+6,f,c
  4153  000AEA  361E               	rlcf	___aodiv@quotient+7,f,c
  4154  000AEC  500D               	movf	___aodiv@divisor,w,c
  4155  000AEE  5C05               	subwf	___aodiv@dividend,w,c
  4156  000AF0  500E               	movf	___aodiv@divisor+1,w,c
  4157  000AF2  5806               	subwfb	___aodiv@dividend+1,w,c
  4158  000AF4  500F               	movf	___aodiv@divisor+2,w,c
  4159  000AF6  5807               	subwfb	___aodiv@dividend+2,w,c
  4160  000AF8  5010               	movf	___aodiv@divisor+3,w,c
  4161  000AFA  5808               	subwfb	___aodiv@dividend+3,w,c
  4162  000AFC  5011               	movf	___aodiv@divisor+4,w,c
  4163  000AFE  5809               	subwfb	___aodiv@dividend+4,w,c
  4164  000B00  5012               	movf	___aodiv@divisor+5,w,c
  4165  000B02  580A               	subwfb	___aodiv@dividend+5,w,c
  4166  000B04  5013               	movf	___aodiv@divisor+6,w,c
  4167  000B06  580B               	subwfb	___aodiv@dividend+6,w,c
  4168  000B08  5014               	movf	___aodiv@divisor+7,w,c
  4169  000B0A  580C               	subwfb	___aodiv@dividend+7,w,c
  4170  000B0C  A0D8               	btfss	status,0,c
  4171  000B0E  D011               	goto	l2419
  4172  000B10  500D               	movf	___aodiv@divisor,w,c
  4173  000B12  5E05               	subwf	___aodiv@dividend,f,c
  4174  000B14  500E               	movf	___aodiv@divisor+1,w,c
  4175  000B16  5A06               	subwfb	___aodiv@dividend+1,f,c
  4176  000B18  500F               	movf	___aodiv@divisor+2,w,c
  4177  000B1A  5A07               	subwfb	___aodiv@dividend+2,f,c
  4178  000B1C  5010               	movf	___aodiv@divisor+3,w,c
  4179  000B1E  5A08               	subwfb	___aodiv@dividend+3,f,c
  4180  000B20  5011               	movf	___aodiv@divisor+4,w,c
  4181  000B22  5A09               	subwfb	___aodiv@dividend+4,f,c
  4182  000B24  5012               	movf	___aodiv@divisor+5,w,c
  4183  000B26  5A0A               	subwfb	___aodiv@dividend+5,f,c
  4184  000B28  5013               	movf	___aodiv@divisor+6,w,c
  4185  000B2A  5A0B               	subwfb	___aodiv@dividend+6,f,c
  4186  000B2C  5014               	movf	___aodiv@divisor+7,w,c
  4187  000B2E  5A0C               	subwfb	___aodiv@dividend+7,f,c
  4188  000B30  8017               	bsf	___aodiv@quotient,0,c
  4189  000B32                     l2419:
  4190  000B32  90D8               	bcf	status,0,c
  4191  000B34  3214               	rrcf	___aodiv@divisor+7,f,c
  4192  000B36  3213               	rrcf	___aodiv@divisor+6,f,c
  4193  000B38  3212               	rrcf	___aodiv@divisor+5,f,c
  4194  000B3A  3211               	rrcf	___aodiv@divisor+4,f,c
  4195  000B3C  3210               	rrcf	___aodiv@divisor+3,f,c
  4196  000B3E  320F               	rrcf	___aodiv@divisor+2,f,c
  4197  000B40  320E               	rrcf	___aodiv@divisor+1,f,c
  4198  000B42  320D               	rrcf	___aodiv@divisor,f,c
  4199  000B44  2E15               	decfsz	___aodiv@counter,f,c
  4200  000B46  D7C9               	goto	u1740
  4201  000B48                     l2423:
  4202  000B48  5016               	movf	___aodiv@sign,w,c
  4203  000B4A  B4D8               	btfsc	status,2,c
  4204  000B4C  D010               	goto	l2427
  4205  000B4E  1E1E               	comf	___aodiv@quotient+7,f,c
  4206  000B50  1E1D               	comf	___aodiv@quotient+6,f,c
  4207  000B52  1E1C               	comf	___aodiv@quotient+5,f,c
  4208  000B54  1E1B               	comf	___aodiv@quotient+4,f,c
  4209  000B56  1E1A               	comf	___aodiv@quotient+3,f,c
  4210  000B58  1E19               	comf	___aodiv@quotient+2,f,c
  4211  000B5A  1E18               	comf	___aodiv@quotient+1,f,c
  4212  000B5C  6C17               	negf	___aodiv@quotient,c
  4213  000B5E  0E00               	movlw	0
  4214  000B60  2218               	addwfc	___aodiv@quotient+1,f,c
  4215  000B62  2219               	addwfc	___aodiv@quotient+2,f,c
  4216  000B64  221A               	addwfc	___aodiv@quotient+3,f,c
  4217  000B66  221B               	addwfc	___aodiv@quotient+4,f,c
  4218  000B68  221C               	addwfc	___aodiv@quotient+5,f,c
  4219  000B6A  221D               	addwfc	___aodiv@quotient+6,f,c
  4220  000B6C  221E               	addwfc	___aodiv@quotient+7,f,c
  4221  000B6E                     l2427:
  4222  000B6E  C017  F005         	movff	___aodiv@quotient,?___aodiv
  4223  000B72  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  4224  000B76  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  4225  000B7A  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  4226  000B7E  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  4227  000B82  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  4228  000B86  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  4229  000B8A  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  4230  000B8E  0012               	return		;funcret
  4231  000B90                     __end_of___aodiv:
  4232                           	opt callstack 0
  4233                           
  4234 ;; *************** function _ctoa *****************
  4235 ;; Defined at:
  4236 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4239 ;;		 -> NULL(0), 
  4240 ;;  c               1   35[COMRAM] unsigned char 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  w               2   36[COMRAM] int 
  4243 ;;  l               2    0        int 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  2   33[COMRAM] int 
  4246 ;; Registers used:
  4247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4253 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;Total ram usage:        5 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    9
  4260 ;; This function calls:
  4261 ;;		_pad
  4262 ;; This function is called by:
  4263 ;;		_vfpfcnvrt
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text16
  4268  001130                     __ptext16:
  4269                           	opt callstack 0
  4270  001130                     _ctoa:
  4271                           	opt callstack 18
  4272                           
  4273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  4274                           
  4275                           ;incstack = 0
  4276  001130  0100               	movlb	0	; () banked
  4277  001132  5166               	movf	_width& (0+255),w,b
  4278  001134  1167               	iorwf	(_width+1)& (0+255),w,b
  4279  001136  A4D8               	btfss	status,2,c
  4280  001138  D005               	goto	l2483
  4281                           
  4282                           ; BSR set to: 0
  4283  00113A  C066  F025         	movff	_width,ctoa@w
  4284  00113E  C067  F026         	movff	_width+1,ctoa@w+1
  4285  001142  D006               	goto	l2485
  4286  001144                     l2483:
  4287                           
  4288                           ; BSR set to: 0
  4289  001144  0EFF               	movlw	255
  4290  001146  2566               	addwf	_width& (0+255),w,b
  4291  001148  6E25               	movwf	ctoa@w,c
  4292  00114A  0EFF               	movlw	255
  4293  00114C  2167               	addwfc	(_width+1)& (0+255),w,b
  4294  00114E  6E26               	movwf	ctoa@w+1,c
  4295  001150                     l2485:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  4299  001150  C024  F07B         	movff	ctoa@c,_dbuf
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  4303  001154  0E00               	movlw	0
  4304  001156  6F7C               	movwf	(_dbuf+1)& (0+255),b
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  4308  001158  C022  F017         	movff	ctoa@fp,pad@fp
  4309  00115C  C023  F018         	movff	ctoa@fp+1,pad@fp+1
  4310  001160  0E7B               	movlw	low _dbuf
  4311  001162  6E19               	movwf	pad@buf,c
  4312  001164  0E00               	movlw	high _dbuf
  4313  001166  6E1A               	movwf	pad@buf+1,c
  4314  001168  C025  F01B         	movff	ctoa@w,pad@p
  4315  00116C  C026  F01C         	movff	ctoa@w+1,pad@p+1
  4316  001170  EC44  F007         	call	_pad	;wreg free
  4317  001174  C017  F022         	movff	?_pad,?_ctoa
  4318  001178  C018  F023         	movff	?_pad+1,?_ctoa+1
  4319  00117C  0012               	return		;funcret
  4320  00117E                     __end_of_ctoa:
  4321                           	opt callstack 0
  4322                           
  4323 ;; *************** function _pad *****************
  4324 ;; Defined at:
  4325 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4328 ;;		 -> NULL(0), 
  4329 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4330 ;;		 -> dbuf(32), 
  4331 ;;  p               2   26[COMRAM] int 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  w               2   31[COMRAM] int 
  4334 ;;  i               2   29[COMRAM] int 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  2   22[COMRAM] int 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4344 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;Total ram usage:       11 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    8
  4351 ;; This function calls:
  4352 ;;		_fputc
  4353 ;;		_fputs
  4354 ;;		_strlen
  4355 ;; This function is called by:
  4356 ;;		_ctoa
  4357 ;;		_dtoa
  4358 ;;		_xtoa
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text17
  4363  000E88                     __ptext17:
  4364                           	opt callstack 0
  4365  000E88                     _pad:
  4366                           	opt callstack 18
  4367                           
  4368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4369                           
  4370                           ;incstack = 0
  4371  000E88  A057               	btfss	_flags,0,c
  4372  000E8A  D00A               	goto	l2337
  4373                           
  4374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4375  000E8C  C019  F010         	movff	pad@buf,fputs@s
  4376  000E90  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4377  000E94  C017  F012         	movff	pad@fp,fputs@fp
  4378  000E98  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4379  000E9C  EC03  F009         	call	_fputs	;wreg free
  4380  000EA0                     l2337:
  4381                           
  4382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4383  000EA0  BE1C               	btfsc	pad@p+1,7,c
  4384  000EA2  D005               	goto	l2341
  4385  000EA4  C01B  F020         	movff	pad@p,pad@w
  4386  000EA8  C01C  F021         	movff	pad@p+1,pad@w+1
  4387  000EAC  D004               	goto	l435
  4388  000EAE                     l2341:
  4389  000EAE  0E00               	movlw	0
  4390  000EB0  6E21               	movwf	pad@w+1,c
  4391  000EB2  0E00               	movlw	0
  4392  000EB4  6E20               	movwf	pad@w,c
  4393  000EB6                     l435:
  4394                           
  4395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4396  000EB6  0E00               	movlw	0
  4397  000EB8  6E1F               	movwf	pad@i+1,c
  4398  000EBA  0E00               	movlw	0
  4399  000EBC  6E1E               	movwf	pad@i,c
  4400                           
  4401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4402  000EBE  D00C               	goto	l2347
  4403  000EC0                     l2343:
  4404                           
  4405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4406  000EC0  0E00               	movlw	0
  4407  000EC2  6E08               	movwf	fputc@c+1,c
  4408  000EC4  0E20               	movlw	32
  4409  000EC6  6E07               	movwf	fputc@c,c
  4410  000EC8  C017  F009         	movff	pad@fp,fputc@fp
  4411  000ECC  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4412  000ED0  EC05  F008         	call	_fputc	;wreg free
  4413                           
  4414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4415  000ED4  4A1E               	infsnz	pad@i,f,c
  4416  000ED6  2A1F               	incf	pad@i+1,f,c
  4417  000ED8                     l2347:
  4418                           
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4420  000ED8  5020               	movf	pad@w,w,c
  4421  000EDA  5C1E               	subwf	pad@i,w,c
  4422  000EDC  501F               	movf	pad@i+1,w,c
  4423  000EDE  0A80               	xorlw	128
  4424  000EE0  6E1D               	movwf	??_pad& (0+255),c
  4425  000EE2  5021               	movf	pad@w+1,w,c
  4426  000EE4  0A80               	xorlw	128
  4427  000EE6  581D               	subwfb	??_pad& (0+255),w,c
  4428  000EE8  A0D8               	btfss	status,0,c
  4429  000EEA  D7EA               	goto	l2343
  4430                           
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4432  000EEC  B057               	btfsc	_flags,0,c
  4433  000EEE  D00A               	goto	l2351
  4434                           
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4436  000EF0  C019  F010         	movff	pad@buf,fputs@s
  4437  000EF4  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4438  000EF8  C017  F012         	movff	pad@fp,fputs@fp
  4439  000EFC  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4440  000F00  EC03  F009         	call	_fputs	;wreg free
  4441  000F04                     l2351:
  4442                           
  4443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4444  000F04  C019  F005         	movff	pad@buf,strlen@s
  4445  000F08  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4446  000F0C  ECFC  F009         	call	_strlen	;wreg free
  4447  000F10  5020               	movf	pad@w,w,c
  4448  000F12  2405               	addwf	?_strlen,w,c
  4449  000F14  6E17               	movwf	?_pad,c
  4450  000F16  5021               	movf	pad@w+1,w,c
  4451  000F18  2006               	addwfc	?_strlen+1,w,c
  4452  000F1A  6E18               	movwf	?_pad+1,c
  4453  000F1C  0012               	return		;funcret
  4454  000F1E                     __end_of_pad:
  4455                           	opt callstack 0
  4456                           
  4457 ;; *************** function _strlen *****************
  4458 ;; Defined at:
  4459 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4462 ;;		 -> dbuf(32), 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4465 ;;		 -> dbuf(32), 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    4[COMRAM] unsigned int 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;Total ram usage:        4 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    4
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_pad
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text18
  4490  0013F8                     __ptext18:
  4491                           	opt callstack 0
  4492  0013F8                     _strlen:
  4493                           	opt callstack 21
  4494                           
  4495                           ;incstack = 0
  4496  0013F8  C005  F007         	movff	strlen@s,strlen@a
  4497  0013FC  C006  F008         	movff	strlen@s+1,strlen@a+1
  4498  001400  D002               	goto	l2323
  4499  001402                     l2321:
  4500  001402  4A05               	infsnz	strlen@s,f,c
  4501  001404  2A06               	incf	strlen@s+1,f,c
  4502  001406                     l2323:
  4503  001406  C005  FFD9         	movff	strlen@s,fsr2l
  4504  00140A  C006  FFDA         	movff	strlen@s+1,fsr2h
  4505  00140E  50DF               	movf	indf2,w,c
  4506  001410  A4D8               	btfss	status,2,c
  4507  001412  D7F7               	goto	l2321
  4508  001414  5007               	movf	strlen@a,w,c
  4509  001416  5C05               	subwf	strlen@s,w,c
  4510  001418  6E05               	movwf	?_strlen,c
  4511  00141A  5008               	movf	strlen@a+1,w,c
  4512  00141C  5806               	subwfb	strlen@s+1,w,c
  4513  00141E  6E06               	movwf	?_strlen+1,c
  4514  001420  0012               	return		;funcret
  4515  001422                     __end_of_strlen:
  4516                           	opt callstack 0
  4517                           
  4518 ;; *************** function _fputs *****************
  4519 ;; Defined at:
  4520 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4523 ;;		 -> dbuf(32), 
  4524 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4525 ;;		 -> NULL(0), 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  i               2   20[COMRAM] int 
  4528 ;;  c               1   19[COMRAM] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  2   15[COMRAM] int 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;Total ram usage:        7 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    7
  4545 ;; This function calls:
  4546 ;;		_fputc
  4547 ;; This function is called by:
  4548 ;;		_pad
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text19
  4553  001206                     __ptext19:
  4554                           	opt callstack 0
  4555  001206                     _fputs:
  4556                           	opt callstack 18
  4557                           
  4558                           ;incstack = 0
  4559  001206  0E00               	movlw	0
  4560  001208  6E16               	movwf	fputs@i+1,c
  4561  00120A  0E00               	movlw	0
  4562  00120C  6E15               	movwf	fputs@i,c
  4563  00120E  D00B               	goto	l2317
  4564  001210                     l2313:
  4565  001210  C014  F007         	movff	fputs@c,fputc@c
  4566  001214  6A08               	clrf	fputc@c+1,c
  4567  001216  C012  F009         	movff	fputs@fp,fputc@fp
  4568  00121A  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4569  00121E  EC05  F008         	call	_fputc	;wreg free
  4570  001222  4A15               	infsnz	fputs@i,f,c
  4571  001224  2A16               	incf	fputs@i+1,f,c
  4572  001226                     l2317:
  4573  001226  5015               	movf	fputs@i,w,c
  4574  001228  2410               	addwf	fputs@s,w,c
  4575  00122A  6ED9               	movwf	fsr2l,c
  4576  00122C  5016               	movf	fputs@i+1,w,c
  4577  00122E  2011               	addwfc	fputs@s+1,w,c
  4578  001230  6EDA               	movwf	fsr2h,c
  4579  001232  50DF               	movf	indf2,w,c
  4580  001234  6E14               	movwf	fputs@c,c
  4581  001236  5014               	movf	fputs@c,w,c
  4582  001238  B4D8               	btfsc	status,2,c
  4583  00123A  0012               	return	
  4584  00123C  D7E9               	goto	l2313
  4585  00123E                     __end_of_fputs:
  4586                           	opt callstack 0
  4587                           
  4588 ;; *************** function _fputc *****************
  4589 ;; Defined at:
  4590 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  c               2    6[COMRAM] int 
  4593 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4594 ;;		 -> NULL(0), 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;		None
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  2    6[COMRAM] int 
  4599 ;; Registers used:
  4600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;Total ram usage:        9 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:    6
  4613 ;; This function calls:
  4614 ;;		_putch
  4615 ;; This function is called by:
  4616 ;;		_pad
  4617 ;;		_vfpfcnvrt
  4618 ;;		_fputs
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text20
  4623  00100A                     __ptext20:
  4624                           	opt callstack 0
  4625  00100A                     _fputc:
  4626                           	opt callstack 18
  4627                           
  4628                           ;incstack = 0
  4629  00100A  5009               	movf	fputc@fp,w,c
  4630  00100C  100A               	iorwf	fputc@fp+1,w,c
  4631  00100E  B4D8               	btfsc	status,2,c
  4632  001010  D004               	goto	u1490
  4633  001012  5009               	movf	fputc@fp,w,c
  4634  001014  100A               	iorwf	fputc@fp+1,w,c
  4635  001016  A4D8               	btfss	status,2,c
  4636  001018  D004               	goto	l2303
  4637  00101A                     u1490:
  4638  00101A  5007               	movf	fputc@c,w,c
  4639  00101C  EC87  F00A         	call	_putch
  4640  001020  0012               	return	
  4641  001022                     l2303:
  4642  001022  EE20 F004          	lfsr	2,4
  4643  001026  5009               	movf	fputc@fp,w,c
  4644  001028  26D9               	addwf	fsr2l,f,c
  4645  00102A  500A               	movf	fputc@fp+1,w,c
  4646  00102C  22DA               	addwfc	fsr2h,f,c
  4647  00102E  50DE               	movf	postinc2,w,c
  4648  001030  10DE               	iorwf	postinc2,w,c
  4649  001032  B4D8               	btfsc	status,2,c
  4650  001034  D016               	goto	u1510
  4651  001036  EE20 F004          	lfsr	2,4
  4652  00103A  5009               	movf	fputc@fp,w,c
  4653  00103C  26D9               	addwf	fsr2l,f,c
  4654  00103E  500A               	movf	fputc@fp+1,w,c
  4655  001040  22DA               	addwfc	fsr2h,f,c
  4656  001042  EE10 F002          	lfsr	1,2
  4657  001046  5009               	movf	fputc@fp,w,c
  4658  001048  26E1               	addwf	fsr1l,f,c
  4659  00104A  500A               	movf	fputc@fp+1,w,c
  4660  00104C  22E2               	addwfc	fsr1h,f,c
  4661  00104E  50DE               	movf	postinc2,w,c
  4662  001050  5CE6               	subwf	postinc1,w,c
  4663  001052  50E6               	movf	postinc1,w,c
  4664  001054  0A80               	xorlw	128
  4665  001056  6E0F               	movwf	(??_fputc+4)& (0+255),c
  4666  001058  50DE               	movf	postinc2,w,c
  4667  00105A  0A80               	xorlw	128
  4668  00105C  580F               	subwfb	(??_fputc+4)& (0+255),w,c
  4669  00105E  B0D8               	btfsc	status,0,c
  4670  001060  0012               	return	
  4671  001062                     u1510:
  4672  001062  EE20 F002          	lfsr	2,2
  4673  001066  5009               	movf	fputc@fp,w,c
  4674  001068  26D9               	addwf	fsr2l,f,c
  4675  00106A  500A               	movf	fputc@fp+1,w,c
  4676  00106C  22DA               	addwfc	fsr2h,f,c
  4677  00106E  2ADE               	incf	postinc2,f,c
  4678  001070  0E00               	movlw	0
  4679  001072  22DD               	addwfc	postdec2,f,c
  4680  001074  0012               	return		;funcret
  4681  001076                     __end_of_fputc:
  4682                           	opt callstack 0
  4683                           
  4684 ;; *************** function _putch *****************
  4685 ;; Defined at:
  4686 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  txData          1    wreg     unsigned char 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  txData          1    5[COMRAM] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      void 
  4693 ;; Registers used:
  4694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;Total ram usage:        1 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    5
  4707 ;; This function calls:
  4708 ;;		_EUSART1_Write
  4709 ;; This function is called by:
  4710 ;;		_fputc
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text21
  4715  00150E                     __ptext21:
  4716                           	opt callstack 0
  4717  00150E                     _putch:
  4718                           	opt callstack 18
  4719                           
  4720                           ;incstack = 0
  4721                           ;putch@txData stored from wreg
  4722  00150E  6E06               	movwf	putch@txData,c
  4723                           
  4724                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  4725  001510  5006               	movf	putch@txData,w,c
  4726  001512  EC1F  F009         	call	_EUSART1_Write
  4727  001516  0012               	return		;funcret
  4728  001518                     __end_of_putch:
  4729                           	opt callstack 0
  4730                           
  4731 ;; *************** function _EUSART1_Write *****************
  4732 ;; Defined at:
  4733 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  txData          1    wreg     unsigned char 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  txData          1    4[COMRAM] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      void 
  4740 ;; Registers used:
  4741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;Total ram usage:        1 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    4
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_putch
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text22
  4762  00123E                     __ptext22:
  4763                           	opt callstack 0
  4764  00123E                     _EUSART1_Write:
  4765                           	opt callstack 18
  4766                           
  4767                           ;incstack = 0
  4768                           ;EUSART1_Write@txData stored from wreg
  4769  00123E  6E05               	movwf	EUSART1_Write@txData,c
  4770  001240                     
  4771                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  4772                           
  4773                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  4774  001240  0100               	movlb	0	; () banked
  4775  001242  5178               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  4776  001244  B4D8               	btfsc	status,2,c
  4777  001246  D7FC               	goto	l2277
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  4781  001248  B89D               	btfsc	3997,4,c	;volatile
  4782  00124A  D003               	goto	l322
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  4786  00124C  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4787                           
  4788                           ;mcc_generated_files/eusart1.c: 182:     }
  4789  001250  D010               	goto	l2293
  4790  001252                     l322:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  4794  001252  989D               	bcf	3997,4,c	;volatile
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  4798  001254  0E80               	movlw	low _eusart1TxBuffer
  4799  001256  257A               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  4800  001258  6ED9               	movwf	fsr2l,c
  4801  00125A  6ADA               	clrf	fsr2h,c
  4802  00125C  0E01               	movlw	high _eusart1TxBuffer
  4803  00125E  22DA               	addwfc	fsr2h,f,c
  4804  001260  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  4805                           
  4806                           ; BSR set to: 0
  4807  001264  2B7A               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  4811  001266  0E3F               	movlw	63
  4812  001268  657A               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  4813  00126A  D002               	goto	l2291
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  4817  00126C  0E00               	movlw	0
  4818  00126E  6F7A               	movwf	_eusart1TxHead& (0+255),b	;volatile
  4819  001270                     l2291:
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  4823  001270  0778               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  4824  001272                     l2293:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  4828  001272  889D               	bsf	3997,4,c	;volatile
  4829                           
  4830                           ; BSR set to: 0
  4831  001274  0012               	return		;funcret
  4832  001276                     __end_of_EUSART1_Write:
  4833                           	opt callstack 0
  4834                           
  4835 ;; *************** function _atoi *****************
  4836 ;; Defined at:
  4837 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4840 ;;		 -> STR_25(22), STR_24(35), STR_23(25), STR_22(17), 
  4841 ;;		 -> STR_21(16), STR_20(13), STR_19(26), STR_18(18), 
  4842 ;;		 -> STR_17(17), STR_16(37), STR_15(35), STR_14(25), 
  4843 ;;		 -> STR_13(17), STR_12(34), STR_11(31), STR_10(19), 
  4844 ;;		 -> STR_9(31), STR_8(14), STR_7(29), STR_6(18), 
  4845 ;;		 -> STR_5(18), STR_4(17), STR_3(37), STR_2(18), 
  4846 ;;		 -> STR_1(18), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  n               2   24[COMRAM] int 
  4849 ;;  neg             2   17[COMRAM] int 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  2   11[COMRAM] int 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;Total ram usage:       15 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    5
  4866 ;; This function calls:
  4867 ;;		___wmul
  4868 ;;		_isdigit
  4869 ;;		_isspace
  4870 ;; This function is called by:
  4871 ;;		_vfpfcnvrt
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text23
  4876  0008FE                     __ptext23:
  4877                           	opt callstack 0
  4878  0008FE                     _atoi:
  4879                           	opt callstack 22
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;incstack = 0
  4883  0008FE  0E00               	movlw	0
  4884  000900  6E1A               	movwf	atoi@n+1,c
  4885  000902  0E00               	movlw	0
  4886  000904  6E19               	movwf	atoi@n,c
  4887  000906  0E00               	movlw	0
  4888  000908  6E13               	movwf	atoi@neg+1,c
  4889  00090A  0E00               	movlw	0
  4890  00090C  6E12               	movwf	atoi@neg,c
  4891  00090E  D002               	goto	l2625
  4892  000910                     l2623:
  4893  000910  4A0C               	infsnz	atoi@s,f,c
  4894  000912  2A0D               	incf	atoi@s+1,f,c
  4895  000914                     l2625:
  4896  000914  0E01               	movlw	1
  4897  000916  6E18               	movwf	_atoi$1685,c
  4898  000918  C00C  FFF6         	movff	atoi@s,tblptrl
  4899  00091C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4900  000920                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4901  000920  6AF8               	clrf	tblptru,c
  4902  000922                     	endif
  4903  000922                     	if	0	;tblptru may be non-zero
  4904  000922                     	endif
  4905  000922  0008               	tblrd		*
  4906  000924  50F5               	movf	tablat,w,c
  4907  000926  0A20               	xorlw	32
  4908  000928  B4D8               	btfsc	status,2,c
  4909  00092A  D019               	goto	l2633
  4910  00092C  0EF7               	movlw	247
  4911  00092E  6E0E               	movwf	??_atoi& (0+255),c
  4912  000930  0EFF               	movlw	255
  4913  000932  6E0F               	movwf	(??_atoi+1)& (0+255),c
  4914  000934  C00C  FFF6         	movff	atoi@s,tblptrl
  4915  000938  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4916  00093C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4917  00093C  6AF8               	clrf	tblptru,c
  4918  00093E                     	endif
  4919  00093E                     	if	0	;tblptru may be non-zero
  4920  00093E                     	endif
  4921  00093E  0008               	tblrd		*
  4922  000940  50F5               	movf	tablat,w,c
  4923  000942  6E10               	movwf	(??_atoi+2)& (0+255),c
  4924  000944  6A11               	clrf	(??_atoi+3)& (0+255),c
  4925  000946  500E               	movf	??_atoi,w,c
  4926  000948  2610               	addwf	??_atoi+2,f,c
  4927  00094A  500F               	movf	??_atoi+1,w,c
  4928  00094C  2211               	addwfc	??_atoi+3,f,c
  4929  00094E  5011               	movf	??_atoi+3,w,c
  4930  000950  E104               	bnz	u2190
  4931  000952  0E05               	movlw	5
  4932  000954  5C10               	subwf	??_atoi+2,w,c
  4933  000956  A0D8               	btfss	status,0,c
  4934  000958  D002               	goto	l2633
  4935  00095A                     u2190:
  4936  00095A  0E00               	movlw	0
  4937  00095C  6E18               	movwf	_atoi$1685,c
  4938  00095E                     l2633:
  4939  00095E  C018  F014         	movff	_atoi$1685,_atoi$1684
  4940  000962  6A15               	clrf	_atoi$1684+1,c
  4941  000964  5014               	movf	_atoi$1684,w,c
  4942  000966  1015               	iorwf	_atoi$1684+1,w,c
  4943  000968  B4D8               	btfsc	status,2,c
  4944  00096A  D008               	goto	l2643
  4945  00096C  D7D1               	goto	l2623
  4946  00096E                     l2639:
  4947  00096E  0E00               	movlw	0
  4948  000970  6E13               	movwf	atoi@neg+1,c
  4949  000972  0E01               	movlw	1
  4950  000974  6E12               	movwf	atoi@neg,c
  4951  000976                     l2641:
  4952  000976  4A0C               	infsnz	atoi@s,f,c
  4953  000978  2A0D               	incf	atoi@s+1,f,c
  4954  00097A  D030               	goto	l2649
  4955  00097C                     l2643:
  4956  00097C  C00C  FFF6         	movff	atoi@s,tblptrl
  4957  000980  C00D  FFF7         	movff	atoi@s+1,tblptrh
  4958  000984                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4959  000984  6AF8               	clrf	tblptru,c
  4960  000986                     	endif
  4961  000986                     	if	0	;tblptru may be non-zero
  4962  000986                     	endif
  4963  000986  0008               	tblrd		*
  4964  000988  50F5               	movf	tablat,w,c
  4965  00098A  6E0E               	movwf	??_atoi& (0+255),c
  4966  00098C  6A0F               	clrf	(??_atoi+1)& (0+255),c
  4967                           
  4968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4969                           ; Switch size 1, requested type "simple"
  4970                           ; Number of cases is 1, Range of values is 0 to 0
  4971                           ; switch strategies available:
  4972                           ; Name         Instructions Cycles
  4973                           ; simple_byte            4     3 (average)
  4974                           ;	Chosen strategy is simple_byte
  4975  00098E  500F               	movf	??_atoi+1,w,c
  4976  000990  0A00               	xorlw	0	; case 0
  4977  000992  A4D8               	btfss	status,2,c
  4978  000994  D023               	goto	l2649
  4979                           
  4980                           ; Switch size 1, requested type "simple"
  4981                           ; Number of cases is 2, Range of values is 43 to 45
  4982                           ; switch strategies available:
  4983                           ; Name         Instructions Cycles
  4984                           ; simple_byte            7     4 (average)
  4985                           ;	Chosen strategy is simple_byte
  4986  000996  500E               	movf	??_atoi,w,c
  4987  000998  0A2B               	xorlw	43	; case 43
  4988  00099A  B4D8               	btfsc	status,2,c
  4989  00099C  D7EC               	goto	l2641
  4990  00099E  0A06               	xorlw	6	; case 45
  4991  0009A0  B4D8               	btfsc	status,2,c
  4992  0009A2  D7E5               	goto	l2639
  4993  0009A4  D01B               	goto	l2649
  4994  0009A6                     l2645:
  4995  0009A6  C019  F005         	movff	atoi@n,___wmul@multiplier
  4996  0009AA  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  4997  0009AE  0E00               	movlw	0
  4998  0009B0  6E08               	movwf	___wmul@multiplicand+1,c
  4999  0009B2  0E0A               	movlw	10
  5000  0009B4  6E07               	movwf	___wmul@multiplicand,c
  5001  0009B6  EC3A  F00A         	call	___wmul	;wreg free
  5002  0009BA  C00C  FFF6         	movff	atoi@s,tblptrl
  5003  0009BE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5004  0009C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5005  0009C2  6AF8               	clrf	tblptru,c
  5006  0009C4                     	endif
  5007  0009C4                     	if	0	;tblptru may be non-zero
  5008  0009C4                     	endif
  5009  0009C4  0008               	tblrd		*
  5010  0009C6  50F5               	movf	tablat,w,c
  5011  0009C8  5E05               	subwf	?___wmul,f,c
  5012  0009CA  0E00               	movlw	0
  5013  0009CC  5A06               	subwfb	?___wmul+1,f,c
  5014  0009CE  0E30               	movlw	48
  5015  0009D0  2405               	addwf	?___wmul,w,c
  5016  0009D2  6E19               	movwf	atoi@n,c
  5017  0009D4  0E00               	movlw	0
  5018  0009D6  2006               	addwfc	?___wmul+1,w,c
  5019  0009D8  6E1A               	movwf	atoi@n+1,c
  5020  0009DA  D7CD               	goto	l2641
  5021  0009DC                     l2649:
  5022  0009DC  0ED0               	movlw	208
  5023  0009DE  6E0E               	movwf	??_atoi& (0+255),c
  5024  0009E0  0EFF               	movlw	255
  5025  0009E2  6E0F               	movwf	(??_atoi+1)& (0+255),c
  5026  0009E4  C00C  FFF6         	movff	atoi@s,tblptrl
  5027  0009E8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5028  0009EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5029  0009EC  6AF8               	clrf	tblptru,c
  5030  0009EE                     	endif
  5031  0009EE                     	if	0	;tblptru may be non-zero
  5032  0009EE                     	endif
  5033  0009EE  0008               	tblrd		*
  5034  0009F0  50F5               	movf	tablat,w,c
  5035  0009F2  6E10               	movwf	(??_atoi+2)& (0+255),c
  5036  0009F4  6A11               	clrf	(??_atoi+3)& (0+255),c
  5037  0009F6  500E               	movf	??_atoi,w,c
  5038  0009F8  2610               	addwf	??_atoi+2,f,c
  5039  0009FA  500F               	movf	??_atoi+1,w,c
  5040  0009FC  2211               	addwfc	??_atoi+3,f,c
  5041  0009FE  5011               	movf	??_atoi+3,w,c
  5042  000A00  E106               	bnz	u2210
  5043  000A02  0E0A               	movlw	10
  5044  000A04  5C10               	subwf	??_atoi+2,w,c
  5045  000A06  B0D8               	btfsc	status,0,c
  5046  000A08  D002               	goto	u2210
  5047  000A0A  0E01               	movlw	1
  5048  000A0C  D001               	goto	u2220
  5049  000A0E                     u2210:
  5050  000A0E  0E00               	movlw	0
  5051  000A10                     u2220:
  5052  000A10  6E16               	movwf	_atoi$1686,c
  5053  000A12  6A17               	clrf	_atoi$1686+1,c
  5054  000A14  5016               	movf	_atoi$1686,w,c
  5055  000A16  1017               	iorwf	_atoi$1686+1,w,c
  5056  000A18  A4D8               	btfss	status,2,c
  5057  000A1A  D7C5               	goto	l2645
  5058  000A1C  5012               	movf	atoi@neg,w,c
  5059  000A1E  1013               	iorwf	atoi@neg+1,w,c
  5060  000A20  A4D8               	btfss	status,2,c
  5061  000A22  D00D               	goto	l1252
  5062  000A24  C019  F00E         	movff	atoi@n,??_atoi
  5063  000A28  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  5064  000A2C  1E0E               	comf	??_atoi,f,c
  5065  000A2E  1E0F               	comf	??_atoi+1,f,c
  5066  000A30  4A0E               	infsnz	??_atoi,f,c
  5067  000A32  2A0F               	incf	??_atoi+1,f,c
  5068  000A34  C00E  F00C         	movff	??_atoi,?_atoi
  5069  000A38  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5070  000A3C  0012               	return	
  5071  000A3E                     l1252:
  5072  000A3E  C019  F00C         	movff	atoi@n,?_atoi
  5073  000A42  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  5074  000A46  0012               	return		;funcret
  5075  000A48                     __end_of_atoi:
  5076                           	opt callstack 0
  5077                           
  5078 ;; *************** function _isspace *****************
  5079 ;; Defined at:
  5080 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  c               2    4[COMRAM] int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  2    4[COMRAM] int 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;Total ram usage:        7 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    4
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_atoi
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text24
  5109  0011C8                     __ptext24:
  5110                           	opt callstack 0
  5111  0011C8                     _isspace:
  5112                           	opt callstack 22
  5113                           
  5114                           ;incstack = 0
  5115  0011C8  0E01               	movlw	1
  5116  0011CA  6E0B               	movwf	_isspace$1711,c
  5117  0011CC  0E20               	movlw	32
  5118  0011CE  1805               	xorwf	isspace@c,w,c
  5119  0011D0  1006               	iorwf	isspace@c+1,w,c
  5120  0011D2  B4D8               	btfsc	status,2,c
  5121  0011D4  D014               	goto	l2475
  5122  0011D6  0EF7               	movlw	247
  5123  0011D8  6E07               	movwf	??_isspace& (0+255),c
  5124  0011DA  0EFF               	movlw	255
  5125  0011DC  6E08               	movwf	(??_isspace+1)& (0+255),c
  5126  0011DE  C005  F009         	movff	isspace@c,??_isspace+2
  5127  0011E2  C006  F00A         	movff	isspace@c+1,??_isspace+3
  5128  0011E6  5007               	movf	??_isspace,w,c
  5129  0011E8  2609               	addwf	??_isspace+2,f,c
  5130  0011EA  5008               	movf	??_isspace+1,w,c
  5131  0011EC  220A               	addwfc	??_isspace+3,f,c
  5132  0011EE  500A               	movf	??_isspace+3,w,c
  5133  0011F0  E104               	bnz	u1840
  5134  0011F2  0E05               	movlw	5
  5135  0011F4  5C09               	subwf	??_isspace+2,w,c
  5136  0011F6  A0D8               	btfss	status,0,c
  5137  0011F8  D002               	goto	l2475
  5138  0011FA                     u1840:
  5139  0011FA  0E00               	movlw	0
  5140  0011FC  6E0B               	movwf	_isspace$1711,c
  5141  0011FE                     l2475:
  5142  0011FE  C00B  F005         	movff	_isspace$1711,?_isspace
  5143  001202  6A06               	clrf	?_isspace+1,c
  5144  001204  0012               	return		;funcret
  5145  001206                     __end_of_isspace:
  5146                           	opt callstack 0
  5147                           
  5148 ;; *************** function _isdigit *****************
  5149 ;; Defined at:
  5150 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  c               2    4[COMRAM] int 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  2    4[COMRAM] int 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5168 ;;Total ram usage:        6 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    4
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_vfpfcnvrt
  5175 ;;		_atoi
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text25
  5180  001372                     __ptext25:
  5181                           	opt callstack 0
  5182  001372                     _isdigit:
  5183                           	opt callstack 23
  5184                           
  5185                           ;incstack = 0
  5186  001372  0ED0               	movlw	208
  5187  001374  6E07               	movwf	??_isdigit& (0+255),c
  5188  001376  0EFF               	movlw	255
  5189  001378  6E08               	movwf	(??_isdigit+1)& (0+255),c
  5190  00137A  C005  F009         	movff	isdigit@c,??_isdigit+2
  5191  00137E  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  5192  001382  5007               	movf	??_isdigit,w,c
  5193  001384  2609               	addwf	??_isdigit+2,f,c
  5194  001386  5008               	movf	??_isdigit+1,w,c
  5195  001388  220A               	addwfc	??_isdigit+3,f,c
  5196  00138A  500A               	movf	??_isdigit+3,w,c
  5197  00138C  E106               	bnz	u1680
  5198  00138E  0E0A               	movlw	10
  5199  001390  5C09               	subwf	??_isdigit+2,w,c
  5200  001392  B0D8               	btfsc	status,0,c
  5201  001394  D002               	goto	u1680
  5202  001396  0E01               	movlw	1
  5203  001398  D001               	goto	u1690
  5204  00139A                     u1680:
  5205  00139A  0E00               	movlw	0
  5206  00139C                     u1690:
  5207  00139C  6E05               	movwf	?_isdigit,c
  5208  00139E  6A06               	clrf	?_isdigit+1,c
  5209  0013A0  0012               	return		;funcret
  5210  0013A2                     __end_of_isdigit:
  5211                           	opt callstack 0
  5212                           
  5213 ;; *************** function ___wmul *****************
  5214 ;; Defined at:
  5215 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  multiplier      2    4[COMRAM] unsigned int 
  5218 ;;  multiplicand    2    6[COMRAM] unsigned int 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  product         2    8[COMRAM] unsigned int 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  2    4[COMRAM] unsigned int 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0, prodl, prodh
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;Total ram usage:        6 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    4
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_atoi
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text26
  5245  001474                     __ptext26:
  5246                           	opt callstack 0
  5247  001474                     ___wmul:
  5248                           	opt callstack 22
  5249                           
  5250                           ;incstack = 0
  5251  001474  5005               	movf	___wmul@multiplier,w,c
  5252  001476  0207               	mulwf	___wmul@multiplicand,c
  5253  001478  CFF3 F009          	movff	prodl,___wmul@product
  5254  00147C  CFF4 F00A          	movff	prodh,___wmul@product+1
  5255  001480  5005               	movf	___wmul@multiplier,w,c
  5256  001482  0208               	mulwf	___wmul@multiplicand+1,c
  5257  001484  50F3               	movf	prodl,w,c
  5258  001486  260A               	addwf	___wmul@product+1,f,c
  5259  001488  5006               	movf	___wmul@multiplier+1,w,c
  5260  00148A  0207               	mulwf	___wmul@multiplicand,c
  5261  00148C  50F3               	movf	prodl,w,c
  5262  00148E  260A               	addwf	___wmul@product+1,f,c
  5263  001490  C009  F005         	movff	___wmul@product,?___wmul
  5264  001494  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  5265  001498  0012               	return		;funcret
  5266  00149A                     __end_of___wmul:
  5267                           	opt callstack 0
  5268                           
  5269 ;; *************** function _SYSTEM_Initialize *****************
  5270 ;; Defined at:
  5271 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;		None
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;		None
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      void 
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;Total ram usage:        0 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    6
  5292 ;; This function calls:
  5293 ;;		_EUSART1_Initialize
  5294 ;;		_INTERRUPT_Initialize
  5295 ;;		_OSCILLATOR_Initialize
  5296 ;;		_PIN_MANAGER_Initialize
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text27
  5303  0014EA                     __ptext27:
  5304                           	opt callstack 0
  5305  0014EA                     _SYSTEM_Initialize:
  5306                           	opt callstack 24
  5307                           
  5308                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5309                           
  5310                           ;incstack = 0
  5311  0014EA  ECAB  F00A         	call	_INTERRUPT_Initialize	;wreg free
  5312                           
  5313                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5314  0014EE  EC11  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  5315                           
  5316                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5317  0014F2  EC7E  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  5318                           
  5319                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  5320  0014F6  ECCA  F007         	call	_EUSART1_Initialize	;wreg free
  5321  0014FA  0012               	return		;funcret
  5322  0014FC                     __end_of_SYSTEM_Initialize:
  5323                           	opt callstack 0
  5324                           
  5325 ;; *************** function _PIN_MANAGER_Initialize *****************
  5326 ;; Defined at:
  5327 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;		None
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;		None
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, status,2
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;Total ram usage:        0 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:    4
  5348 ;; This function calls:
  5349 ;;		Nothing
  5350 ;; This function is called by:
  5351 ;;		_SYSTEM_Initialize
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text28
  5356  001422                     __ptext28:
  5357                           	opt callstack 0
  5358  001422                     _PIN_MANAGER_Initialize:
  5359                           	opt callstack 25
  5360                           
  5361                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5362                           
  5363                           ;incstack = 0
  5364  001422  0E00               	movlw	0
  5365  001424  6E89               	movwf	3977,c	;volatile
  5366                           
  5367                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5368  001426  0E00               	movlw	0
  5369  001428  6E8A               	movwf	3978,c	;volatile
  5370                           
  5371                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5372  00142A  0E00               	movlw	0
  5373  00142C  6E8B               	movwf	3979,c	;volatile
  5374                           
  5375                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5376  00142E  6892               	setf	3986,c	;volatile
  5377                           
  5378                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  5379  001430  6893               	setf	3987,c	;volatile
  5380                           
  5381                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  5382  001432  0EBF               	movlw	191
  5383  001434  6E94               	movwf	3988,c	;volatile
  5384                           
  5385                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5386  001436  0E3C               	movlw	60
  5387  001438  010F               	movlb	15	; () banked
  5388  00143A  6F3A               	movwf	58,b	;volatile
  5389                           
  5390                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  5391  00143C  0E3F               	movlw	63
  5392  00143E  6F39               	movwf	57,b	;volatile
  5393                           
  5394                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5395  001440  0E2F               	movlw	47
  5396  001442  6F38               	movwf	56,b	;volatile
  5397                           
  5398                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5399  001444  0E00               	movlw	0
  5400  001446  6E61               	movwf	3937,c	;volatile
  5401                           
  5402                           ; BSR set to: 15
  5403                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5404  001448  8EF1               	bsf	4081,7,c	;volatile
  5405                           
  5406                           ; BSR set to: 15
  5407  00144A  0012               	return		;funcret
  5408  00144C                     __end_of_PIN_MANAGER_Initialize:
  5409                           	opt callstack 0
  5410                           
  5411 ;; *************** function _OSCILLATOR_Initialize *****************
  5412 ;; Defined at:
  5413 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;Total ram usage:        0 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    4
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_SYSTEM_Initialize
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text29
  5442  0014FC                     __ptext29:
  5443                           	opt callstack 0
  5444  0014FC                     _OSCILLATOR_Initialize:
  5445                           	opt callstack 25
  5446                           
  5447                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  5448                           
  5449                           ; BSR set to: 15
  5450                           ;incstack = 0
  5451  0014FC  0E70               	movlw	112
  5452  0014FE  6ED3               	movwf	4051,c	;volatile
  5453                           
  5454                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  5455  001500  0E04               	movlw	4
  5456  001502  6ED2               	movwf	4050,c	;volatile
  5457                           
  5458                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
  5459  001504  0E40               	movlw	64
  5460  001506  6E9B               	movwf	3995,c	;volatile
  5461  001508                     l189:
  5462                           
  5463                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
  5464  001508  BED2               	btfsc	4050,7,c	;volatile
  5465  00150A  0012               	return	
  5466  00150C  D7FD               	goto	l189
  5467  00150E                     __end_of_OSCILLATOR_Initialize:
  5468                           	opt callstack 0
  5469                           
  5470 ;; *************** function _INTERRUPT_Initialize *****************
  5471 ;; Defined at:
  5472 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		None
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;Total ram usage:        0 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    4
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_SYSTEM_Initialize
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text30
  5501  001556                     __ptext30:
  5502                           	opt callstack 0
  5503  001556                     _INTERRUPT_Initialize:
  5504                           	opt callstack 25
  5505                           
  5506                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5507                           
  5508                           ;incstack = 0
  5509  001556  9ED0               	bcf	4048,7,c	;volatile
  5510  001558  0012               	return		;funcret
  5511  00155A                     __end_of_INTERRUPT_Initialize:
  5512                           	opt callstack 0
  5513                           
  5514 ;; *************** function _EUSART1_Initialize *****************
  5515 ;; Defined at:
  5516 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;Total ram usage:        0 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    5
  5537 ;; This function calls:
  5538 ;;		_EUSART1_SetErrorHandler
  5539 ;;		_EUSART1_SetFramingErrorHandler
  5540 ;;		_EUSART1_SetOverrunErrorHandler
  5541 ;;		_EUSART1_SetRxInterruptHandler
  5542 ;;		_EUSART1_SetTxInterruptHandler
  5543 ;; This function is called by:
  5544 ;;		_main
  5545 ;;		_SYSTEM_Initialize
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text31
  5550  000F94                     __ptext31:
  5551                           	opt callstack 0
  5552  000F94                     _EUSART1_Initialize:
  5553                           	opt callstack 24
  5554                           
  5555                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  5556                           
  5557                           ;incstack = 0
  5558  000F94  9A9D               	bcf	3997,5,c	;volatile
  5559                           
  5560                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  5561  000F96  0EF0               	movlw	low _EUSART1_Receive_ISR
  5562  000F98  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  5563  000F9A  0E0D               	movlw	high _EUSART1_Receive_ISR
  5564  000F9C  6E06               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  5565  000F9E  EC91  F00A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  5566                           
  5567                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  5568  000FA2  989D               	bcf	3997,4,c	;volatile
  5569                           
  5570                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  5571  000FA4  0EA2               	movlw	low _EUSART1_Transmit_ISR
  5572  000FA6  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  5573  000FA8  0E13               	movlw	high _EUSART1_Transmit_ISR
  5574  000FAA  6E06               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  5575  000FAC  EC8C  F00A         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  5576                           
  5577                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  5578  000FB0  0E08               	movlw	8
  5579  000FB2  6EB8               	movwf	4024,c	;volatile
  5580                           
  5581                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  5582  000FB4  0E90               	movlw	144
  5583  000FB6  6EAB               	movwf	4011,c	;volatile
  5584                           
  5585                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  5586  000FB8  0E24               	movlw	36
  5587  000FBA  6EAC               	movwf	4012,c	;volatile
  5588                           
  5589                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
  5590  000FBC  0E8A               	movlw	138
  5591  000FBE  6EAF               	movwf	4015,c	;volatile
  5592                           
  5593                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  5594  000FC0  0E00               	movlw	0
  5595  000FC2  6EB0               	movwf	4016,c	;volatile
  5596                           
  5597                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  5598  000FC4  0E5A               	movlw	low _EUSART1_DefaultFramingErrorHandler
  5599  000FC6  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  5600  000FC8  0E15               	movlw	high _EUSART1_DefaultFramingErrorHandler
  5601  000FCA  6E06               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  5602  000FCC  EC9B  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5603                           
  5604                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  5605  000FD0  0E4A               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  5606  000FD2  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  5607  000FD4  0E15               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  5608  000FD6  6E06               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  5609  000FD8  EC96  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5610                           
  5611                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  5612  000FDC  0E50               	movlw	low _EUSART1_DefaultErrorHandler
  5613  000FDE  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  5614  000FE0  0E15               	movlw	high _EUSART1_DefaultErrorHandler
  5615  000FE2  6E06               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  5616  000FE4  ECA0  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  5617                           
  5618                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  5619  000FE8  0E00               	movlw	0
  5620  000FEA  0100               	movlb	0	; () banked
  5621  000FEC  6F76               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  5622                           
  5623                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  5624  000FEE  0E00               	movlw	0
  5625  000FF0  6F7A               	movwf	_eusart1TxHead& (0+255),b	;volatile
  5626                           
  5627                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  5628  000FF2  0E00               	movlw	0
  5629  000FF4  6F79               	movwf	_eusart1TxTail& (0+255),b	;volatile
  5630                           
  5631                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  5632  000FF6  0E40               	movlw	64
  5633  000FF8  6F78               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  5634                           
  5635                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  5636  000FFA  0E00               	movlw	0
  5637  000FFC  6E5A               	movwf	_eusart1RxHead,c	;volatile
  5638                           
  5639                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  5640  000FFE  0E00               	movlw	0
  5641  001000  6E59               	movwf	_eusart1RxTail,c	;volatile
  5642                           
  5643                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  5644  001002  0E00               	movlw	0
  5645  001004  6F77               	movwf	_eusart1RxCount& (0+255),b	;volatile
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  5649  001006  8A9D               	bsf	3997,5,c	;volatile
  5650                           
  5651                           ; BSR set to: 0
  5652  001008  0012               	return		;funcret
  5653  00100A                     __end_of_EUSART1_Initialize:
  5654                           	opt callstack 0
  5655                           
  5656 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  5657 ;; Defined at:
  5658 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5661 ;;		 -> EUSART1_Transmit_ISR(1), 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  1    wreg      void 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;Total ram usage:        2 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    4
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_EUSART1_Initialize
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text32
  5688  001518                     __ptext32:
  5689                           	opt callstack 0
  5690  001518                     _EUSART1_SetTxInterruptHandler:
  5691                           	opt callstack 24
  5692                           
  5693                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;incstack = 0
  5697  001518  C005  F072         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  5698  00151C  C006  F073         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  5699  001520  0012               	return		;funcret
  5700  001522                     __end_of_EUSART1_SetTxInterruptHandler:
  5701                           	opt callstack 0
  5702                           
  5703 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  5704 ;; Defined at:
  5705 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5708 ;;		 -> EUSART1_Receive_ISR(1), 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      void 
  5713 ;; Registers used:
  5714 ;;		wreg, status,2, status,0
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;Total ram usage:        2 bytes
  5725 ;; Hardware stack levels used:    1
  5726 ;; Hardware stack levels required when called:    4
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_EUSART1_Initialize
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text33
  5735  001522                     __ptext33:
  5736                           	opt callstack 0
  5737  001522                     _EUSART1_SetRxInterruptHandler:
  5738                           	opt callstack 24
  5739                           
  5740                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  5741                           
  5742                           ;incstack = 0
  5743  001522  C005  F070         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  5744  001526  C006  F071         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  5745  00152A  0012               	return		;funcret
  5746  00152C                     __end_of_EUSART1_SetRxInterruptHandler:
  5747                           	opt callstack 0
  5748                           
  5749 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5750 ;; Defined at:
  5751 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5754 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;Total ram usage:        2 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    4
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_EUSART1_Initialize
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text34
  5781  00152C                     __ptext34:
  5782                           	opt callstack 0
  5783  00152C                     _EUSART1_SetOverrunErrorHandler:
  5784                           	opt callstack 24
  5785                           
  5786                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  5787                           
  5788                           ;incstack = 0
  5789  00152C  C005  F06C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5790  001530  C006  F06D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5791  001534  0012               	return		;funcret
  5792  001536                     __end_of_EUSART1_SetOverrunErrorHandler:
  5793                           	opt callstack 0
  5794                           
  5795 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5796 ;; Defined at:
  5797 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5800 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;Total ram usage:        2 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    4
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_EUSART1_Initialize
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text35
  5827  001536                     __ptext35:
  5828                           	opt callstack 0
  5829  001536                     _EUSART1_SetFramingErrorHandler:
  5830                           	opt callstack 24
  5831                           
  5832                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  5833                           
  5834                           ;incstack = 0
  5835  001536  C005  F06E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5836  00153A  C006  F06F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5837  00153E  0012               	return		;funcret
  5838  001540                     __end_of_EUSART1_SetFramingErrorHandler:
  5839                           	opt callstack 0
  5840                           
  5841 ;; *************** function _EUSART1_SetErrorHandler *****************
  5842 ;; Defined at:
  5843 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  5846 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;		None
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  1    wreg      void 
  5851 ;; Registers used:
  5852 ;;		wreg, status,2, status,0
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;Total ram usage:        2 bytes
  5863 ;; Hardware stack levels used:    1
  5864 ;; Hardware stack levels required when called:    4
  5865 ;; This function calls:
  5866 ;;		Nothing
  5867 ;; This function is called by:
  5868 ;;		_EUSART1_Initialize
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text36
  5873  001540                     __ptext36:
  5874                           	opt callstack 0
  5875  001540                     _EUSART1_SetErrorHandler:
  5876                           	opt callstack 24
  5877                           
  5878                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  5879                           
  5880                           ;incstack = 0
  5881  001540  C005  F06A         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5882  001544  C006  F06B         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5883  001548  0012               	return		;funcret
  5884  00154A                     __end_of_EUSART1_SetErrorHandler:
  5885                           	opt callstack 0
  5886                           
  5887 ;; *************** function _INTERRUPT_InterruptManager *****************
  5888 ;; Defined at:
  5889 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;Total ram usage:        4 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    3
  5910 ;; This function calls:
  5911 ;;		Absolute function
  5912 ;;		_EUSART1_Receive_ISR
  5913 ;;		_EUSART1_Transmit_ISR
  5914 ;; This function is called by:
  5915 ;;		Interrupt level 2
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	intcode
  5920  000008                     __pintcode:
  5921                           	opt callstack 0
  5922  000008                     _INTERRUPT_InterruptManager:
  5923                           	opt callstack 16
  5924                           
  5925                           ;incstack = 0
  5926  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5927  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  5928  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5929  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5930  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5931                           
  5932                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  5933  00001A  ACF2               	btfss	4082,6,c	;volatile
  5934  00001C  D01B               	goto	i2u289_49
  5935                           
  5936                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5937  00001E  B89D               	btfsc	3997,4,c	;volatile
  5938  000020  A89E               	btfss	3998,4,c	;volatile
  5939  000022  D009               	goto	i2l393
  5940                           
  5941                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  5942  000024  D801               	call	i2u286_48
  5943  000026  D016               	goto	i2u289_49
  5944  000028                     i2u286_48:
  5945  000028  0005               	push	
  5946  00002A  6EFA               	movwf	pclath,c
  5947  00002C  0100               	movlb	0	; () banked
  5948  00002E  5172               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  5949  000030  6EFD               	movwf	tosl,c
  5950  000032  5173               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  5951  000034  D00B               	goto	L4
  5952  000036                     i2l393:
  5953  000036  BA9D               	btfsc	3997,5,c	;volatile
  5954  000038  AA9E               	btfss	3998,5,c	;volatile
  5955  00003A  D00C               	goto	i2u289_49
  5956                           
  5957                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  5958  00003C  D801               	call	i2u289_48
  5959  00003E  D00A               	goto	i2u289_49
  5960  000040                     i2u289_48:
  5961  000040  0005               	push	
  5962  000042  6EFA               	movwf	pclath,c
  5963  000044  0100               	movlb	0	; () banked
  5964  000046  5170               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  5965  000048  6EFD               	movwf	tosl,c
  5966  00004A  5171               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  5967  00004C                     L4:
  5968  00004C  6EFE               	movwf	tosh,c
  5969  00004E  6AFF               	clrf	tosu,c
  5970  000050  50FA               	movf	pclath,w,c
  5971  000052  0012               	return		;indir
  5972  000054                     i2u289_49:
  5973                           
  5974                           ;mcc_generated_files/interrupt_manager.c: 75:     }
  5975                           
  5976                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  5977  000054  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5978  000058  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5979  00005C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5980  000060  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5981  000064  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5982  000066  0011               	retfie		f
  5983  000068                     __end_of_INTERRUPT_InterruptManager:
  5984                           	opt callstack 0
  5985                           
  5986 ;; *************** function _EUSART1_Transmit_ISR *****************
  5987 ;; Defined at:
  5988 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;		None
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      void 
  5995 ;; Registers used:
  5996 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;Total ram usage:        0 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_EUSART1_Initialize
  6012 ;;		_INTERRUPT_InterruptManager
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text38
  6017  0013A2                     __ptext38:
  6018                           	opt callstack 0
  6019  0013A2                     _EUSART1_Transmit_ISR:
  6020                           	opt callstack 18
  6021                           
  6022                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6023                           
  6024                           ;incstack = 0
  6025  0013A2  0E40               	movlw	64
  6026  0013A4  0100               	movlb	0	; () banked
  6027  0013A6  6178               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6028  0013A8  D010               	goto	i2l334
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  6032  0013AA  0E80               	movlw	low _eusart1TxBuffer
  6033  0013AC  2579               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  6034  0013AE  6ED9               	movwf	fsr2l,c
  6035  0013B0  6ADA               	clrf	fsr2h,c
  6036  0013B2  0E01               	movlw	high _eusart1TxBuffer
  6037  0013B4  22DA               	addwfc	fsr2h,f,c
  6038  0013B6  50DF               	movf	indf2,w,c
  6039  0013B8  6EAD               	movwf	4013,c	;volatile
  6040                           
  6041                           ; BSR set to: 0
  6042  0013BA  2B79               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6046  0013BC  0E3F               	movlw	63
  6047  0013BE  6579               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  6048  0013C0  D002               	goto	i2l2997
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  6052  0013C2  0E00               	movlw	0
  6053  0013C4  6F79               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6054  0013C6                     i2l2997:
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  6058  0013C6  2B78               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6059                           
  6060                           ;mcc_generated_files/eusart1.c: 218:     }
  6061  0013C8  0012               	return	
  6062  0013CA                     i2l334:
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  6066  0013CA  989D               	bcf	3997,4,c	;volatile
  6067                           
  6068                           ; BSR set to: 0
  6069  0013CC  0012               	return		;funcret
  6070  0013CE                     __end_of_EUSART1_Transmit_ISR:
  6071                           	opt callstack 0
  6072                           
  6073 ;; *************** function _EUSART1_Receive_ISR *****************
  6074 ;; Defined at:
  6075 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;Total ram usage:        0 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    2
  6096 ;; This function calls:
  6097 ;;		Absolute function
  6098 ;;		_EUSART1_DefaultErrorHandler
  6099 ;;		_EUSART1_DefaultFramingErrorHandler
  6100 ;;		_EUSART1_DefaultOverrunErrorHandler
  6101 ;;		_EUSART1_RxDataHandler
  6102 ;; This function is called by:
  6103 ;;		_EUSART1_Initialize
  6104 ;;		_INTERRUPT_InterruptManager
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text39
  6109  000DF0                     __ptext39:
  6110                           	opt callstack 0
  6111  000DF0                     _EUSART1_Receive_ISR:
  6112                           	opt callstack 16
  6113                           
  6114                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;incstack = 0
  6118  000DF0  0E00               	movlw	low _eusart1RxStatusBuffer
  6119  000DF2  245A               	addwf	_eusart1RxHead,w,c	;volatile
  6120  000DF4  6ED9               	movwf	fsr2l,c
  6121  000DF6  6ADA               	clrf	fsr2h,c
  6122  000DF8  0E01               	movlw	high _eusart1RxStatusBuffer
  6123  000DFA  22DA               	addwfc	fsr2h,f,c
  6124  000DFC  0E00               	movlw	0
  6125  000DFE  6EDF               	movwf	indf2,c
  6126                           
  6127                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  6128  000E00  A4AB               	btfss	4011,2,c	;volatile
  6129  000E02  D014               	goto	i2u270_49
  6130                           
  6131                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6132  000E04  0E00               	movlw	low _eusart1RxStatusBuffer
  6133  000E06  245A               	addwf	_eusart1RxHead,w,c	;volatile
  6134  000E08  6ED9               	movwf	fsr2l,c
  6135  000E0A  6ADA               	clrf	fsr2h,c
  6136  000E0C  0E01               	movlw	high _eusart1RxStatusBuffer
  6137  000E0E  22DA               	addwfc	fsr2h,f,c
  6138  000E10  0101               	movlb	1	; () banked
  6139  000E12  82DF               	bsf	indf2,1,c
  6140                           
  6141                           ; BSR set to: 1
  6142                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  6143  000E14  D801               	call	i2u270_48
  6144  000E16  D00A               	goto	i2u270_49
  6145  000E18                     i2u270_48:
  6146  000E18  0005               	push	
  6147  000E1A  6EFA               	movwf	pclath,c
  6148  000E1C  0100               	movlb	0	; () banked
  6149  000E1E  516E               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6150  000E20  6EFD               	movwf	tosl,c
  6151  000E22  516F               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6152  000E24  6EFE               	movwf	tosh,c
  6153  000E26  6AFF               	clrf	tosu,c
  6154  000E28  50FA               	movf	pclath,w,c
  6155  000E2A  0012               	return		;indir
  6156  000E2C                     i2u270_49:
  6157                           
  6158                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  6159  000E2C  A2AB               	btfss	4011,1,c	;volatile
  6160  000E2E  D014               	goto	i2u272_49
  6161                           
  6162                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6163  000E30  0E00               	movlw	low _eusart1RxStatusBuffer
  6164  000E32  245A               	addwf	_eusart1RxHead,w,c	;volatile
  6165  000E34  6ED9               	movwf	fsr2l,c
  6166  000E36  6ADA               	clrf	fsr2h,c
  6167  000E38  0E01               	movlw	high _eusart1RxStatusBuffer
  6168  000E3A  22DA               	addwfc	fsr2h,f,c
  6169  000E3C  0101               	movlb	1	; () banked
  6170  000E3E  84DF               	bsf	indf2,2,c
  6171                           
  6172                           ; BSR set to: 1
  6173                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  6174  000E40  D801               	call	i2u272_48
  6175  000E42  D00A               	goto	i2u272_49
  6176  000E44                     i2u272_48:
  6177  000E44  0005               	push	
  6178  000E46  6EFA               	movwf	pclath,c
  6179  000E48  0100               	movlb	0	; () banked
  6180  000E4A  516C               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6181  000E4C  6EFD               	movwf	tosl,c
  6182  000E4E  516D               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6183  000E50  6EFE               	movwf	tosh,c
  6184  000E52  6AFF               	clrf	tosu,c
  6185  000E54  50FA               	movf	pclath,w,c
  6186  000E56  0012               	return		;indir
  6187  000E58                     i2u272_49:
  6188                           
  6189                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6190  000E58  0E00               	movlw	low _eusart1RxStatusBuffer
  6191  000E5A  245A               	addwf	_eusart1RxHead,w,c	;volatile
  6192  000E5C  6ED9               	movwf	fsr2l,c
  6193  000E5E  6ADA               	clrf	fsr2h,c
  6194  000E60  0E01               	movlw	high _eusart1RxStatusBuffer
  6195  000E62  22DA               	addwfc	fsr2h,f,c
  6196  000E64  50DF               	movf	indf2,w,c
  6197  000E66  B4D8               	btfsc	status,2,c
  6198  000E68  D00C               	goto	i2l3017
  6199                           
  6200                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  6201  000E6A  D801               	call	i2u274_48
  6202  000E6C  0012               	return	
  6203  000E6E                     i2u274_48:
  6204  000E6E  0005               	push	
  6205  000E70  6EFA               	movwf	pclath,c
  6206  000E72  0100               	movlb	0	; () banked
  6207  000E74  516A               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6208  000E76  6EFD               	movwf	tosl,c
  6209  000E78  516B               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6210  000E7A  6EFE               	movwf	tosh,c
  6211  000E7C  6AFF               	clrf	tosu,c
  6212  000E7E  50FA               	movf	pclath,w,c
  6213  000E80  0012               	return		;indir
  6214  000E82                     i2l3017:
  6215                           
  6216                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  6217  000E82  EC4D  F00A         	call	_EUSART1_RxDataHandler	;wreg free
  6218  000E86  0012               	return		;funcret
  6219  000E88                     __end_of_EUSART1_Receive_ISR:
  6220                           	opt callstack 0
  6221                           
  6222 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6223 ;; Defined at:
  6224 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      void 
  6231 ;; Registers used:
  6232 ;;		None
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;Total ram usage:        0 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; This function calls:
  6245 ;;		Nothing
  6246 ;; This function is called by:
  6247 ;;		_EUSART1_Initialize
  6248 ;;		_EUSART1_Receive_ISR
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text40
  6253  00154A                     __ptext40:
  6254                           	opt callstack 0
  6255  00154A                     _EUSART1_DefaultOverrunErrorHandler:
  6256                           	opt callstack 17
  6257                           
  6258                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  6259                           
  6260                           ;incstack = 0
  6261  00154A  98AB               	bcf	4011,4,c	;volatile
  6262                           
  6263                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  6264  00154C  88AB               	bsf	4011,4,c	;volatile
  6265  00154E  0012               	return		;funcret
  6266  001550                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6267                           	opt callstack 0
  6268                           
  6269 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6270 ;; Defined at:
  6271 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		None
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;Total ram usage:        0 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_EUSART1_Initialize
  6295 ;;		_EUSART1_Receive_ISR
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text41
  6300  00155A                     __ptext41:
  6301                           	opt callstack 0
  6302  00155A                     _EUSART1_DefaultFramingErrorHandler:
  6303                           	opt callstack 17
  6304                           
  6305                           ;incstack = 0
  6306  00155A  0012               	return		;funcret
  6307  00155C                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6308                           	opt callstack 0
  6309                           
  6310 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6311 ;; Defined at:
  6312 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;		None
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;Total ram usage:        0 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    1
  6333 ;; This function calls:
  6334 ;;		_EUSART1_RxDataHandler
  6335 ;; This function is called by:
  6336 ;;		_EUSART1_Initialize
  6337 ;;		_EUSART1_Receive_ISR
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text42
  6342  001550                     __ptext42:
  6343                           	opt callstack 0
  6344  001550                     _EUSART1_DefaultErrorHandler:
  6345                           	opt callstack 16
  6346                           
  6347                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  6348                           
  6349                           ;incstack = 0
  6350  001550  EC4D  F00A         	call	_EUSART1_RxDataHandler	;wreg free
  6351  001554  0012               	return		;funcret
  6352  001556                     __end_of_EUSART1_DefaultErrorHandler:
  6353                           	opt callstack 0
  6354                           
  6355 ;; *************** function _EUSART1_RxDataHandler *****************
  6356 ;; Defined at:
  6357 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;		None
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;		None
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  1    wreg      void 
  6364 ;; Registers used:
  6365 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;Total ram usage:        0 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_EUSART1_Receive_ISR
  6381 ;;		_EUSART1_DefaultErrorHandler
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           	psect	text43
  6386  00149A                     __ptext43:
  6387                           	opt callstack 0
  6388  00149A                     _EUSART1_RxDataHandler:
  6389                           	opt callstack 17
  6390                           
  6391                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6392                           
  6393                           ;incstack = 0
  6394  00149A  0E40               	movlw	low _eusart1RxBuffer
  6395  00149C  245A               	addwf	_eusart1RxHead,w,c	;volatile
  6396  00149E  6ED9               	movwf	fsr2l,c
  6397  0014A0  6ADA               	clrf	fsr2h,c
  6398  0014A2  0E01               	movlw	high _eusart1RxBuffer
  6399  0014A4  22DA               	addwfc	fsr2h,f,c
  6400  0014A6  CFAE FFDF          	movff	4014,indf2	;volatile
  6401  0014AA  2A5A               	incf	_eusart1RxHead,f,c	;volatile
  6402                           
  6403                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6404  0014AC  0E3F               	movlw	63
  6405  0014AE  645A               	cpfsgt	_eusart1RxHead,c	;volatile
  6406  0014B0  D002               	goto	i2l2819
  6407                           
  6408                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  6409  0014B2  0E00               	movlw	0
  6410  0014B4  6E5A               	movwf	_eusart1RxHead,c	;volatile
  6411  0014B6                     i2l2819:
  6412                           
  6413                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  6414  0014B6  0100               	movlb	0	; () banked
  6415  0014B8  2B77               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  6416                           
  6417                           ; BSR set to: 0
  6418  0014BA  0012               	return		;funcret
  6419  0014BC                     __end_of_EUSART1_RxDataHandler:
  6420                           	opt callstack 0
  6421                           
  6422                           	psect	text44
  6423  000000                     __ptext44:
  6424                           	opt callstack 0
  6425                           
  6426                           	psect	rparam
  6427  0000                     
  6428                           	psect	temp
  6429  00005B                     btemp:
  6430                           	opt callstack 0
  6431  00005B                     	ds	1
  6432  0000                     int$flags	set	btemp
  6433  0000                     wtemp8	set	btemp+1
  6434  0000                     ttemp5	set	btemp+1
  6435  0000                     ttemp6	set	btemp+4
  6436  0000                     ttemp7	set	btemp+8
  6437                           tosu	equ	0xFFF
  6438                           tosh	equ	0xFFE
  6439                           tosl	equ	0xFFD
  6440                           stkptr	equ	0xFFC
  6441                           pclatu	equ	0xFFB
  6442                           pclath	equ	0xFFA
  6443                           pcl	equ	0xFF9
  6444                           tblptru	equ	0xFF8
  6445                           tblptrh	equ	0xFF7
  6446                           tblptrl	equ	0xFF6
  6447                           tablat	equ	0xFF5
  6448                           prodh	equ	0xFF4
  6449                           prodl	equ	0xFF3
  6450                           indf0	equ	0xFEF
  6451                           postinc0	equ	0xFEE
  6452                           postdec0	equ	0xFED
  6453                           preinc0	equ	0xFEC
  6454                           plusw0	equ	0xFEB
  6455                           fsr0h	equ	0xFEA
  6456                           fsr0l	equ	0xFE9
  6457                           wreg	equ	0xFE8
  6458                           indf1	equ	0xFE7
  6459                           postinc1	equ	0xFE6
  6460                           postdec1	equ	0xFE5
  6461                           preinc1	equ	0xFE4
  6462                           plusw1	equ	0xFE3
  6463                           fsr1h	equ	0xFE2
  6464                           fsr1l	equ	0xFE1
  6465                           bsr	equ	0xFE0
  6466                           indf2	equ	0xFDF
  6467                           postinc2	equ	0xFDE
  6468                           postdec2	equ	0xFDD
  6469                           preinc2	equ	0xFDC
  6470                           plusw2	equ	0xFDB
  6471                           fsr2h	equ	0xFDA
  6472                           fsr2l	equ	0xFD9
  6473                           status	equ	0xFD8


Data Sizes:
    Strings     461
    Constant    0
    Data        74
    BSS         402
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     49     148
    BANK1           256      0     245
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_25(CODE[22]), STR_24(CODE[35]), STR_23(CODE[25]), STR_22(CODE[17]), 
		 -> STR_21(CODE[16]), STR_20(CODE[13]), STR_19(CODE[26]), STR_18(CODE[18]), 
		 -> STR_17(CODE[17]), STR_16(CODE[37]), STR_15(CODE[35]), STR_14(CODE[25]), 
		 -> STR_13(CODE[17]), STR_12(CODE[34]), STR_11(CODE[31]), STR_10(CODE[19]), 
		 -> STR_9(CODE[31]), STR_8(CODE[14]), STR_7(CODE[29]), STR_6(CODE[18]), 
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[37]), STR_2(CODE[18]), 
		 -> STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1724_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_25(CODE[22]), STR_24(CODE[35]), STR_23(CODE[25]), STR_22(CODE[17]), 
		 -> STR_21(CODE[16]), STR_20(CODE[13]), STR_19(CODE[26]), STR_18(CODE[18]), 
		 -> STR_17(CODE[17]), STR_16(CODE[37]), STR_15(CODE[35]), STR_14(CODE[25]), 
		 -> STR_13(CODE[17]), STR_12(CODE[34]), STR_11(CODE[31]), STR_10(CODE[19]), 
		 -> STR_9(CODE[31]), STR_8(CODE[14]), STR_7(CODE[29]), STR_6(CODE[18]), 
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[37]), STR_2(CODE[18]), 
		 -> STR_1(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_25(CODE[22]), STR_24(CODE[35]), STR_23(CODE[25]), STR_22(CODE[17]), 
		 -> STR_21(CODE[16]), STR_20(CODE[13]), STR_19(CODE[26]), STR_18(CODE[18]), 
		 -> STR_17(CODE[17]), STR_16(CODE[37]), STR_15(CODE[35]), STR_14(CODE[25]), 
		 -> STR_13(CODE[17]), STR_12(CODE[34]), STR_11(CODE[31]), STR_10(CODE[19]), 
		 -> STR_9(CODE[31]), STR_8(CODE[14]), STR_7(CODE[29]), STR_6(CODE[18]), 
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[37]), STR_2(CODE[18]), 
		 -> STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 37
		 -> STR_25(CODE[22]), STR_24(CODE[35]), STR_23(CODE[25]), STR_22(CODE[17]), 
		 -> STR_21(CODE[16]), STR_20(CODE[13]), STR_19(CODE[26]), STR_18(CODE[18]), 
		 -> STR_17(CODE[17]), STR_16(CODE[37]), STR_15(CODE[35]), STR_14(CODE[25]), 
		 -> STR_13(CODE[17]), STR_12(CODE[34]), STR_11(CODE[31]), STR_10(CODE[19]), 
		 -> STR_9(CODE[31]), STR_8(CODE[14]), STR_7(CODE[29]), STR_6(CODE[18]), 
		 -> STR_5(CODE[18]), STR_4(CODE[17]), STR_3(CODE[37]), STR_2(CODE[18]), 
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    i2c_read_serial@data_out	PTR unsigned char  size(2) Largest target is 4
		 -> data_out(BANK0[4]), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _getReadingTC74->_i2c_read_serial
    _i2c_read_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   60058
                                             84 COMRAM     2     2      0
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                     _getReadingTC74
                           _i2c_init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getReadingTC74                                       0     0      0   39622
                    _i2c_read_serial
                             _printf
 ---------------------------------------------------------------------------------
 (2) _i2c_read_serial                                     12     9      3   20166
                                             37 BANK0     12     9      3
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   19456
                                             27 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   17107
                                             82 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   16553
                                             72 COMRAM    10     4      6
                                              0 BANK0     21    21      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4719
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4814
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3385
                                             33 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1382
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     541
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _getReadingTC74
     _i2c_read_serial
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _toupper
                 _islower
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _i2c_init
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F5       7       95.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     263      12        0.0%
DATA                 0      0     263       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Oct 02 11:02:19 2019

                      _eusart1TxBufferRemaining 0078                                i2c_read_serial@i 00DE  
                           ___wmul@multiplicand 0007                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l120 0BE0                                             l130 0C5A  
                                           l114 0BAA                                             l131 0C5C  
                                           l141 0CBC                                             l125 0C12  
                                           l117 0BCA                                             l126 0C14  
                                           l135 0C94                                             l129 0C58  
                                           l322 1252                                             l138 0C9A  
                                           l435 0EB6                                             l189 1508  
                                           l453 0504                                             l455 050C  
                                           l480 06F8                                             l478 06F0  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                                           _abs 12E0                                             _pad 0E88  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                         i2c_read_serial@data_out 00D3  
                                          ?_abs 0017                                            l1221 1308  
                                          l1252 0A3E                                            l2303 1022  
                                          l1319 11BE                                            l2313 1210  
                                          l2321 1402                                            l2401 0A9C  
                                          l2323 1406                                            l2317 1226  
                                          l2341 0EAE                                            l2351 0F04  
                                          l2343 0EC0                                            l2407 0AC2  
                                          l2423 0B48                                            l2337 0EA0  
                                          l2409 0AD6                                            l2513 0526  
                                          l2601 0860                                            l2291 1270  
                                          l2347 0ED8                                            l2427 0B6E  
                                          l2419 0B32                                            l2443 0D1C  
                                          l2293 1272                                            l2277 1240  
                                          l2517 0534                                            l2623 0910  
                                          l2463 0DCE                                            l2455 0D92  
                                          l2447 0D36                                            l2439 0CF8  
                                          l2551 06A8                                            l2527 062C  
                                          l2711 0192                                            l3511 0C88  
                                          l2641 0976                                            l2633 095E  
                                          l2625 0914                                            l2449 0D4A  
                                          l2617 08D4                                            l2713 01B0  
                                          l3425 10EC                                            l2475 11FE  
                                          l2643 097C                                            l2483 1144  
                                          l2395 0A74                                            l2459 0DA8  
                                          l2547 0690                                            l2571 073A  
                                          l2715 01BE                                            l3427 1112  
                                          l3515 0CAE                                            l2645 09A6  
                                          l2485 1150                                            l2565 070C  
                                          l2639 096E                                            l2649 09DC  
                                          l2593 07EA                                            l2753 03FA  
                                          l2729 0270                                            l2681 00CA  
                                          l2673 00B4                                            l2499 04E6  
                                          l2579 075C                                            l2763 0442  
                                          l2739 0326                                            l2675 00B6  
                                          l3555 10AC                                            l2693 00D6  
                                          l2685 00CE                                            l2677 00C6  
                                          ?_pad 0017                                            l2759 0438  
                                          l2697 00E0                                            l2689 00D2  
                                          l2769 045A                                            l2699 0124  
                                          STR_1 FF7C                                            STR_2 FF6A  
                                          STR_3 FE56                                            STR_4 FFC2  
                                          STR_5 FF8E                                            STR_6 FF58  
                                          STR_7 FEDF                                            STR_8 FFE3  
                                          STR_9 FEC0                                            u2020 06E6  
                                          u2110 083C                                            u2120 0870  
                                          u2040 0758                                            u2210 0A0E  
                                          u2050 078E                                            u2115 082A  
                                          u2220 0A10                                            u2140 0892  
                                          u2060 0790                                            u2300 01F8  
                                          u2141 0890                                            _LATA 000F89  
                                          u1510 1062                                            u2150 08A0  
                                          u2310 01FA                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u1600 12EE  
                                          u2160 08A4                                            u2080 07C8  
                                          u2320 0208                                            u1610 136A  
                                          u2090 07CA                                            u1620 136C  
                                          u1540 133A                                            u2190 095A  
                                          u1630 12D8                                            u1550 133C  
                                          u2350 02A8                                            u1800 0D4E  
                                          u1640 12DA                                            u1721 0AA2  
                                          u1490 101A                                            u1650 11A6  
                                          u2370 035E                                            u1740 0ADA  
                                          u1900 04FA                                            u1660 11A8  
                                          u3350 0C54                                            u1680 139A  
                                          u1840 11FA                                            u1920 0520  
                                          u1690 139C                                            u1930 063A  
                                          u1860 04B8                                            u1950 065C  
                                          u1870 04BA                                            u1951 065A  
                                          u1960 066A                                            u1970 066E  
                                          u1990 067A                                            u3487 1090  
                                          u3497 10C8                                            _WPUB 000F61  
                                 _EUSART1_Write 123E                                            abs@a 0017  
                                          _dbuf 007B                                            _atoi 08FE  
                                          _ctoa 1130                                            _main 1076  
                                          _dtoa 0490                                            _prec 0068  
                                          _nout 0064                                            pad@i 001E  
                                          pad@p 001B                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            btemp 005B  
                                 __CFG_BORV$190 000000                                            _xtoa 06D2  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0068                                   __CFG_IESO$OFF 000000  
                           i2c_read_serial@addr 00DC                                    ___param_bank 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 150E  
                         _eusart1RxStatusBuffer 0100                                 __end_of___aodiv 0B90  
                                         ?_atoi 000C                                           ?_ctoa 0022  
                                         ?_main 0001                                           ?_dtoa 0022  
                               __end_of___aomod 0DF0                                           STR_10 FF45  
                                         STR_20 FFF1                                           STR_12 FE9E  
                                         STR_21 FFD3                                           STR_13 FFB1  
                                         STR_22 FFA0                                           STR_14 FF16  
                                         STR_23 FF16                                           STR_15 FE7B  
                                         STR_24 FE7B                                           STR_16 FE31  
                                         STR_17 FFC2                                           STR_25 FF2F  
                                         STR_18 FF8E                                           STR_19 FEFC  
                                         ?_xtoa 0022                                  __CFG_DEBUG$OFF 000000  
                                         i2l334 13CA                                           i2l393 0036  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 00B6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 13A2  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _flags 0057  
                                         _fputc 100A                                 __end_of_isalpha 12E0  
                                         _fputs 1206                                 __end_of_isdigit 13A2  
                                         _minus 00F2                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 0066  
                                         ctoa@c 0024                                           _putch 150E  
                                         ctoa@w 0025                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 1342  
                               __end_of_isspace 1206                                  ?_EUSART1_Write 0001  
                               __end_of_isupper 1372                                           pclath 000FFA  
                                         tablat 000FF5                                           ttemp5 005C  
                                         ttemp6 005F                                           ttemp7 0063  
                                         status 000FD8                                           wtemp8 005C  
                                         xtoa@c 0047                                           xtoa@d 0024  
                                         xtoa@i 0045                                           xtoa@n 003D  
                                         xtoa@p 0039                                           xtoa@w 003B  
                                         xtoa@x 002C                                  __CFG_HFOFST$ON 000000  
                               __end_of_toupper 11C8      __end_of_EUSART1_DefaultFramingErrorHandler 155C  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 155A  
                                __CFG_PBADEN$ON 000000                                    _toupper$1775 0011  
                               __initialization 0F1E                                    __end_of_atoi 0A48  
                                  __end_of_ctoa 117E                      __end_of_EUSART1_Initialize 100A  
                                  __end_of_main 10D8                                    __end_of_dtoa 06D2  
                                  __end_of_xtoa 08FE                                __end_of_i2c_init 14D4  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_atoi 000E  
                                        ??_ctoa 0025                                          ??_main 0055  
                                        ??_dtoa 002C                                          ??_xtoa 002D  
                                 __activetblptr 000003                           ?_EUSART1_Transmit_ISR 0001  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        i2l3017 0E82                                  __CFG_WDTEN$OFF 000000  
                                        i2l2819 14B6                                          i2l2997 13C6  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 00BE                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                                     ??___aodiv 0015                                       ??___aomod 0015  
                                        ___wmul 1474                                  __CFG_STVREN$ON 000000  
                      ?_EUSART1_SetErrorHandler 0005                                 _i2c_read_serial 0B90  
                                        clear_0 0F64                                          clear_1 0F70  
                                        clear_2 0F7C                                          _printf 144C  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          ctoa@fp 0022  
                                        dtoa@fp 0022                                          _strlen 13F8  
                                        fputc@c 0007                                          fputs@c 0014  
                                        fputs@i 0015                                          fputs@s 0010  
                                     ??_isalpha 0007                                       ??_isdigit 0007  
                                     ??_islower 0007                                    __mediumconst FE30  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 1130  
                               ??_EUSART1_Write 0005                                          xtoa@fp 0022  
                               _eusart1RxBuffer 0140                                       ??_toupper 000D  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 0180  
                        updateTemperature@F6410 0060                               _SYSTEM_Initialize 14EA  
                                    __accesstop 0060                         __end_of__initialization 0F8A  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                __size_of_EUSART1_RxDataHandler 0022                           i2c_read_serial@length 00D5  
                 __end_of_EUSART1_RxDataHandler 14BC                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 14D4                                    __pidataBANK1 1276  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 1076  
                                 __end_of_fputs 123E                                   __end_of_putch 1518  
                        ??_EUSART1_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 0E88  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 14FC  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 005A                                   _eusart1TxHead 007A  
                                 _eusart1RxTail 0059                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart1TxTail 0079               _EUSART1_TxDefaultInterruptHandler 0072  
               ??_EUSART1_SetRxInterruptHandler 0007                                 __CFG_PLLCFG$OFF 000000  
                                     ?_i2c_init 0001                                      _degree_pos 00E3  
                       __size_of_getReadingTC74 002A                         __end_of_i2c_read_serial 0CCC  
               __end_of_EUSART1_SetErrorHandler 154A                              __CFG_CCP2MX$PORTC1 000000  
                                       ?___wmul 0005                              __CFG_CCP3MX$PORTB5 000000  
                                       ?_printf 00C9                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 1540         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 1536                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0424  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP1ADD 000FC8                                         _SSP1BUF 000FC9  
                                    ??_i2c_init 0005                                      _first_line 00E7  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 0A48  
                                       ___aomod 0CCC                                 __size_of___wmul 0026  
                                     ?_vfprintf 00C3                                         __pcinit 0F1E  
                                       __ramtop 1000                                         __ptext0 1076  
                                       __ptext1 14BC                                         __ptext2 13CE  
                                       __ptext3 0B90                                         __ptext4 144C  
                                       __ptext5 10D8                                         __ptext6 006C  
                                       __ptext7 06D2                                         __ptext8 117E  
                                       __ptext9 1312                                 __size_of_printf 0028  
                               __size_of_strlen 002A                           _OSCILLATOR_Initialize 14FC  
                                  __size_of_abs 0032                                    __size_of_pad 0096  
                                       _isalpha 12AC                                         _isdigit 1372  
                            _EUSART1_Initialize 0F94                                         _islower 1312  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 11C8  
                                       _isupper 1342                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 0012  
                                       _toupper 117E                            end_of_initialization 0F8A  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0009  
                                  _eeprom_write 01E4                     _EUSART1_OverrunErrorHandler 006C  
                                       fputs@fp 0012           __end_of_EUSART1_SetRxInterruptHandler 152C  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 1522  
                              ?_i2c_read_serial 00D3                                      _shift_line 00E5  
                             __end_of_vfpfcnvrt 0490                                         postdec1 000FE5  
                                       postdec2 000FDD                                      _precission 00ED  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                                         strlen@a 0007  
                                       strlen@s 0005                                    _display_addr 00EA  
                                  _display_init 00DF                                       _TRISCbits 000F94  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                                    _tmp_string 009B                                  _getReadingTC74 13CE  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 155A  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 00AE                                  __end_of___wmul 149A  
                               _eeprom_addr0000 0074                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 1474                                  __end_of_strlen 1422  
                           start_initialization 0F1E                 __size_of_PIN_MANAGER_Initialize 002A  
                                   __end_of_abs 1312                                     __end_of_pad 0F1E  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART1_Write 1276  
                        __end_of_getReadingTC74 13F8                                _temperature_addr 00EC  
                             __size_of_i2c_init 0018                                     vfprintf@fmt 00C5  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 149A  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00DF  
                                   __pdataBANK1 01C0                                        ??_printf 0055  
                                      ??_strlen 0007                                  _eusart1RxCount 0077  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 0070  
                 __size_of_EUSART1_Transmit_ISR 002C                                   __pcstackBANK0 00AE  
                              ___aodiv@dividend 0005                 ??_EUSART1_SetTxInterruptHandler 0007  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
                  __size_of_EUSART1_Receive_ISR 0098                                 ?_getReadingTC74 0001  
                                     _atoi$1684 0014                                       _atoi$1685 0018  
                                     _atoi$1686 0016                          _PIN_MANAGER_Initialize 1422  
                                     _dtoa$1200 0034                                       __pintcode 0008  
                                 __pmediumconst FE30                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                  ??_INTERRUPT_InterruptManager 0001                                __CFG_PRICLKEN$ON 000000  
                             __size_of_vfprintf 0058                                        _BAUDCON1 000FB8  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1550     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 154A                                        ?_isalpha 0005  
                                      ?_isdigit 0005                            _EUSART1_ErrorHandler 006A  
                                      ?_islower 0005                                        ?_isspace 0005  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 1540  
                                __size_of_fputc 006C                                  __size_of_fputs 0038  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 1556                                  ___wmul@product 0009  
       EUSART1_SetErrorHandler@interruptHandler 0005                                     _eeprom_addr 00E9  
                                      _PIE1bits 000F9D                                       _moist_pos 00EE  
           __size_of_INTERRUPT_InterruptManager 0060                                        i2u270_48 0E18  
                                      i2u270_49 0E2C                                        i2u272_48 0E44  
                                      i2u272_49 0E58                                        _PIR1bits 000F9E  
                                      i2u274_48 0E6E                                        i2u286_48 0028  
                                      i2u289_48 0040                                        i2u289_49 0054  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                              __CFG_WDTPS$32768 000000                                        _SSP1CON1 000FC6  
                                      _SSP1CON2 000FC5                                        _SSP1STAT 000FC7  
                                     _vfpfcnvrt 006C                                       _xtoa$1210 0035  
                                     _xtoa$1211 0037                               ___wmul@multiplier 0005  
                                  _isspace$1711 000B                                      vfpfcnvrt@c 00C2  
                                   _INTCON2bits 000FF1                                       copy_data0 0F32  
                                     copy_data1 0F52                           ?_INTERRUPT_Initialize 0001  
                                      _i2c_init 14BC           __end_of_EUSART1_SetTxInterruptHandler 1522  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 1518  
                                      __Hrparam 0000                                      vfprintf@ap 00C7  
                                      __Lrparam 0000                                      vfprintf@fp 00C3  
                            __CFG_BOREN$SBORDIS 000000                               __CFG_P2BMX$PORTB5 000000  
                       ??_OSCILLATOR_Initialize 0005                                __size_of___aodiv 0148  
                              __size_of___aomod 0124                     __size_of_EUSART1_Initialize 0076  
                                    ?_vfpfcnvrt 0049                        __size_of_i2c_read_serial 013C  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                                    _ANSELCbits 000F3A                       ??_EUSART1_SetErrorHandler 0007  
           __end_of_EUSART1_DefaultErrorHandler 1556                     _EUSART1_DefaultErrorHandler 1550  
                                      _data_out 00AA                                __size_of_isalpha 0034  
                              __size_of_isdigit 0030                                __size_of_islower 0030  
                              __size_of_isspace 003E                                        __ptext10 1342  
                                      __ptext11 12AC                                        __ptext20 100A  
                                      __ptext12 0490                                        __ptext21 150E  
                                      __ptext13 12E0                                        __ptext30 1556  
                                      __ptext22 123E                                        __ptext14 0CCC  
                                      __ptext31 0F94                                        __ptext23 08FE  
                                      __ptext15 0A48                                        __ptext40 154A  
                                      __ptext32 1518                                        __ptext24 11C8  
                                      __ptext16 1130                                        __ptext41 155A  
                                      __ptext33 1522                                        __ptext25 1372  
                                      __ptext17 0E88                                        __ptext42 1550  
                                      __ptext34 152C                                        __ptext26 1474  
                                      __ptext18 13F8                                        __ptext43 149A  
                                      __ptext35 1536                                        __ptext27 14EA  
                                      __ptext19 1206                                        __ptext44 0000  
                                      __ptext36 1540                                        __ptext28 1422  
                                      __ptext29 14FC                                        __ptext38 13A2  
                                      __ptext39 0DF0                                __size_of_isupper 0030  
                                  _SSP1CON2bits 000FC5                                    _moist_string 01C0  
                              __size_of_toupper 004A                                   __size_of_atoi 014A  
                                 __size_of_ctoa 004E                                   __size_of_main 0062  
                                 __size_of_dtoa 0242                                   __size_of_xtoa 022C  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        _temp_pos 00F0  
                                      int$flags 005B                                        _vfprintf 10D8  
            __end_of_INTERRUPT_InterruptManager 0068                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00C9                                    _tempaddrTC74 00EB  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 006E  
                           _EUSART1_Receive_ISR 0DF0                       i2c_read_serial@targetAddr 00DD  
                              ___aomod@dividend 0005                                  _vfpfcnvrt$1225 00C0  
                                    _INTCONbits 000FF2                                   _eeprom_buffer 0200  
                                      isalpha@c 0005                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                ??_getReadingTC74 0055  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1536  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 152C  
                                    _RCSTA1bits 000FAB                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 13CE                                        printf@ap 00D1  
EUSART1_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                               ___aomod@divisor 000D                                     ??_vfpfcnvrt 004F  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 0038  
                            _eusart1RxLastError 0076                                     _temp_string 01D2  
                                      toupper@c 000B                               __CFG_T3CMX$PORTC0 000000  
                             ??_i2c_read_serial 00D6                                    ___aodiv@sign 0016  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 144C  
                             __CFG_FOSC$INTIO67 000000                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016  
