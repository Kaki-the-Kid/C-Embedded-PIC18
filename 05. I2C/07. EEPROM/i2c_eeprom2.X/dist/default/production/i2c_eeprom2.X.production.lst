

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Feb 17 16:35:10 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           ; Version 2.05
    71                           ; Generated 20/12/2018 GMT
    72                           ; 
    73                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F26K22 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105                           	psect	idataBANK0
   106  00176C                     __pidataBANK0:
   107                           	opt callstack 0
   108                           
   109                           ;initializer for _degree_pos
   110  00176C  00                 	db	0
   111  00176D  8A                 	db	138
   112                           
   113                           ;initializer for _eeprom_addr
   114  00176E  50                 	db	80
   115                           
   116                           ;initializer for _display_addr
   117  00176F  3C                 	db	60
   118                           
   119                           ;initializer for _temperature_addr
   120  001770  27                 	db	39
   121                           
   122                           ;initializer for _precission
   123  001771  01                 	db	1
   124                           
   125                           ;initializer for _eeprom_write
   126  001772  00                 	db	0
   127  001773  00                 	db	0
   128  001774  01                 	db	1
   129  001775  02                 	db	2
   130  001776  03                 	db	3
   131  001777  04                 	db	4
   132  001778  05                 	db	5
   133  001779  06                 	db	6
   134  00177A  07                 	db	7
   135  00177B  08                 	db	8
   136  00177C  09                 	db	9
   137  00177D  0A                 	db	10
   138  00177E  0B                 	db	11
   139  00177F  0C                 	db	12
   140  001780  0D                 	db	13
   141  001781  0E                 	db	14
   142  001782  0F                 	db	15
   143                           
   144                           ;initializer for _custom_char0
   145  001783  80                 	db	128
   146  001784  40                 	db	64
   147  001785  40                 	db	64
   148  001786  0C                 	db	12
   149  001787  12                 	db	18
   150  001788  12                 	db	18
   151  001789  0C                 	db	12
   152  00178A  00                 	db	0
   153  00178B  00                 	db	0
   154  00178C  00                 	db	0
   155  00178D  00                 	db	0
   156                           
   157                           ;initializer for _display_init
   158  00178E  00                 	db	0
   159  00178F  38                 	db	56
   160  001790  0C                 	db	12
   161  001791  06                 	db	6
   162                           
   163                           ;initializer for _moist_pos
   164  001792  00                 	db	0
   165  001793  C6                 	db	198
   166                           
   167                           ;initializer for _temp_pos
   168  001794  00                 	db	0
   169  001795  84                 	db	132
   170                           
   171                           ;initializer for _shift_line
   172  001796  00                 	db	0
   173  001797  C0                 	db	192
   174                           
   175                           ;initializer for _first_line
   176  001798  00                 	db	0
   177  001799  80                 	db	128
   178                           
   179                           ;initializer for _minus
   180  00179A  40                 	db	64
   181  00179B  2D                 	db	45
   182                           
   183                           	psect	idataBANK1
   184  0018FC                     __pidataBANK1:
   185                           	opt callstack 0
   186                           
   187                           ;initializer for _moist_string
   188  0018FC  40                 	db	64
   189  0018FD  4D                 	db	77
   190  0018FE  6F                 	db	111
   191  0018FF  69                 	db	105
   192  001900  73                 	db	115
   193  001901  74                 	db	116
   194  001902  3A                 	db	58
   195  001903  78                 	db	120
   196  001904  78                 	db	120
   197  001905  78                 	db	120
   198  001906  25                 	db	37
   199  001907  20                 	db	32
   200  001908  20                 	db	32
   201  001909  20                 	db	32
   202  00190A  20                 	db	32
   203  00190B  20                 	db	32
   204  00190C  20                 	db	32
   205  00190D  00                 	db	0
   206                           
   207                           ;initializer for _temp_string
   208  00190E  40                 	db	64
   209  00190F  54                 	db	84
   210  001910  6D                 	db	109
   211  001911  70                 	db	112
   212  001912  3A                 	db	58
   213  001913  78                 	db	120
   214  001914  78                 	db	120
   215  001915  2C                 	db	44
   216  001916  78                 	db	120
   217  001917  6F                 	db	111
   218  001918  20                 	db	32
   219  001919  20                 	db	32
   220  00191A  20                 	db	32
   221  00191B  20                 	db	32
   222  00191C  20                 	db	32
   223  00191D  20                 	db	32
   224  00191E  20                 	db	32
   225  00191F  00                 	db	0
   226  0000                     _ANSELCbits	set	3898
   227  0000                     _ANSELA	set	3896
   228  0000                     _ANSELB	set	3897
   229  0000                     _ANSELC	set	3898
   230  0000                     _SSP1STATbits	set	4039
   231  0000                     _SSP1BUF	set	4041
   232  0000                     _SSP1CON2bits	set	4037
   233  0000                     _SSP1STAT	set	4039
   234  0000                     _SSP1CON2	set	4037
   235  0000                     _SSP1CON1	set	4038
   236  0000                     _SSP1ADD	set	4040
   237  0000                     _TRISCbits	set	3988
   238  0000                     _PIR1bits	set	3998
   239  0000                     _RCONbits	set	4048
   240  0000                     _RCREG1	set	4014
   241  0000                     _RCSTA1bits	set	4011
   242  0000                     _TXREG1	set	4013
   243  0000                     _TXSTA1bits	set	4012
   244  0000                     _SPBRGH1	set	4016
   245  0000                     _SPBRG1	set	4015
   246  0000                     _TXSTA1	set	4012
   247  0000                     _RCSTA1	set	4011
   248  0000                     _BAUDCON1	set	4024
   249  0000                     _PIE1bits	set	3997
   250  0000                     _INTCONbits	set	4082
   251  0000                     _INTCON2bits	set	4081
   252  0000                     _WPUB	set	3937
   253  0000                     _TRISC	set	3988
   254  0000                     _TRISB	set	3987
   255  0000                     _TRISA	set	3986
   256  0000                     _LATC	set	3979
   257  0000                     _LATB	set	3978
   258  0000                     _LATA	set	3977
   259  0000                     _OSCTUNE	set	3995
   260  0000                     _OSCCON2	set	4050
   261  0000                     _OSCCON	set	4051
   262  0000                     _PLLRDY	set	32407
   263                           
   264                           	psect	mediumconst
   265  00FE46                     __pmediumconst:
   266                           	opt callstack 0
   267  00FE46  00                 	db	0
   268  00FE47                     STR_17:
   269                           
   270                           ; BSR set to: 0
   271  00FE47  0D                 	db	13
   272  00FE48  0A                 	db	10
   273  00FE49  2A                 	db	42
   274  00FE4A  2A                 	db	42
   275  00FE4B  2A                 	db	42
   276  00FE4C  2A                 	db	42
   277  00FE4D  2A                 	db	42
   278  00FE4E  2A                 	db	42
   279  00FE4F  2A                 	db	42
   280  00FE50  2A                 	db	42
   281  00FE51  2A                 	db	42
   282  00FE52  2A                 	db	42
   283  00FE53  2A                 	db	42
   284  00FE54  52                 	db	82	;'R'
   285  00FE55  45                 	db	69	;'E'
   286  00FE56  41                 	db	65	;'A'
   287  00FE57  44                 	db	68	;'D'
   288  00FE58  2A                 	db	42
   289  00FE59  2A                 	db	42
   290  00FE5A  2A                 	db	42
   291  00FE5B  2A                 	db	42
   292  00FE5C  2A                 	db	42
   293  00FE5D  2A                 	db	42
   294  00FE5E  2A                 	db	42
   295  00FE5F  2A                 	db	42
   296  00FE60  2A                 	db	42
   297  00FE61  2A                 	db	42
   298  00FE62  2A                 	db	42
   299  00FE63  2A                 	db	42
   300  00FE64  2A                 	db	42
   301  00FE65  2A                 	db	42
   302  00FE66  2A                 	db	42
   303  00FE67  2A                 	db	42
   304  00FE68  2A                 	db	42
   305  00FE69  0A                 	db	10
   306  00FE6A  0D                 	db	13
   307  00FE6B  00                 	db	0
   308  00FE6C                     STR_4:
   309                           
   310                           ; BSR set to: 0
   311  00FE6C  0A                 	db	10
   312  00FE6D  0D                 	db	13
   313  00FE6E  2A                 	db	42
   314  00FE6F  2A                 	db	42
   315  00FE70  2A                 	db	42
   316  00FE71  2A                 	db	42
   317  00FE72  2A                 	db	42
   318  00FE73  2A                 	db	42
   319  00FE74  2A                 	db	42
   320  00FE75  2A                 	db	42
   321  00FE76  2A                 	db	42
   322  00FE77  2A                 	db	42
   323  00FE78  2A                 	db	42
   324  00FE79  57                 	db	87	;'W'
   325  00FE7A  52                 	db	82	;'R'
   326  00FE7B  49                 	db	73	;'I'
   327  00FE7C  54                 	db	84	;'T'
   328  00FE7D  45                 	db	69	;'E'
   329  00FE7E  2A                 	db	42
   330  00FE7F  2A                 	db	42
   331  00FE80  2A                 	db	42
   332  00FE81  2A                 	db	42
   333  00FE82  2A                 	db	42
   334  00FE83  2A                 	db	42
   335  00FE84  2A                 	db	42
   336  00FE85  2A                 	db	42
   337  00FE86  2A                 	db	42
   338  00FE87  2A                 	db	42
   339  00FE88  2A                 	db	42
   340  00FE89  2A                 	db	42
   341  00FE8A  2A                 	db	42
   342  00FE8B  2A                 	db	42
   343  00FE8C  2A                 	db	42
   344  00FE8D  2A                 	db	42
   345  00FE8E  0A                 	db	10
   346  00FE8F  0D                 	db	13
   347  00FE90  00                 	db	0
   348  00FE91                     STR_16:
   349                           
   350                           ; BSR set to: 0
   351  00FE91  2A                 	db	42
   352  00FE92  2A                 	db	42
   353  00FE93  2A                 	db	42
   354  00FE94  2A                 	db	42
   355  00FE95  2A                 	db	42
   356  00FE96  2A                 	db	42
   357  00FE97  2A                 	db	42
   358  00FE98  2A                 	db	42
   359  00FE99  2A                 	db	42
   360  00FE9A  2A                 	db	42
   361  00FE9B  2A                 	db	42
   362  00FE9C  2A                 	db	42
   363  00FE9D  2A                 	db	42
   364  00FE9E  2A                 	db	42
   365  00FE9F  2A                 	db	42
   366  00FEA0  2A                 	db	42
   367  00FEA1  2A                 	db	42
   368  00FEA2  2A                 	db	42
   369  00FEA3  2A                 	db	42
   370  00FEA4  2A                 	db	42
   371  00FEA5  2A                 	db	42
   372  00FEA6  2A                 	db	42
   373  00FEA7  2A                 	db	42
   374  00FEA8  2A                 	db	42
   375  00FEA9  2A                 	db	42
   376  00FEAA  2A                 	db	42
   377  00FEAB  2A                 	db	42
   378  00FEAC  2A                 	db	42
   379  00FEAD  2A                 	db	42
   380  00FEAE  2A                 	db	42
   381  00FEAF  2A                 	db	42
   382  00FEB0  2A                 	db	42
   383  00FEB1  0A                 	db	10
   384  00FEB2  0D                 	db	13
   385  00FEB3  00                 	db	0
   386  00FEB4                     STR_13:
   387                           
   388                           ; BSR set to: 0
   389  00FEB4  4E                 	db	78	;'N'
   390  00FEB5  41                 	db	65	;'A'
   391  00FEB6  43                 	db	67	;'C'
   392  00FEB7  4B                 	db	75	;'K'
   393  00FEB8  20                 	db	32
   394  00FEB9  2D                 	db	45
   395  00FEBA  20                 	db	32
   396  00FEBB  46                 	db	70	;'F'
   397  00FEBC  65                 	db	101	;'e'
   398  00FEBD  6A                 	db	106	;'j'
   399  00FEBE  6C                 	db	108	;'l'
   400  00FEBF  20                 	db	32
   401  00FEC0  69                 	db	105	;'i'
   402  00FEC1  20                 	db	32
   403  00FEC2  73                 	db	115	;'s'
   404  00FEC3  6B                 	db	107	;'k'
   405  00FEC4  72                 	db	114	;'r'
   406  00FEC5  69                 	db	105	;'i'
   407  00FEC6  76                 	db	118	;'v'
   408  00FEC7  6E                 	db	110	;'n'
   409  00FEC8  69                 	db	105	;'i'
   410  00FEC9  6E                 	db	110	;'n'
   411  00FECA  67                 	db	103	;'g'
   412  00FECB  20                 	db	32
   413  00FECC  61                 	db	97	;'a'
   414  00FECD  66                 	db	102	;'f'
   415  00FECE  20                 	db	32
   416  00FECF  64                 	db	100	;'d'
   417  00FED0  61                 	db	97	;'a'
   418  00FED1  74                 	db	116	;'t'
   419  00FED2  61                 	db	97	;'a'
   420  00FED3  0D                 	db	13
   421  00FED4  0A                 	db	10
   422  00FED5  00                 	db	0
   423  00FED6                     STR_10:
   424                           
   425                           ; BSR set to: 0
   426  00FED6  41                 	db	65	;'A'
   427  00FED7  43                 	db	67	;'C'
   428  00FED8  4B                 	db	75	;'K'
   429  00FED9  20                 	db	32
   430  00FEDA  2D                 	db	45
   431  00FEDB  20                 	db	32
   432  00FEDC  53                 	db	83	;'S'
   433  00FEDD  6B                 	db	107	;'k'
   434  00FEDE  72                 	db	114	;'r'
   435  00FEDF  65                 	db	101	;'e'
   436  00FEE0  76                 	db	118	;'v'
   437  00FEE1  20                 	db	32
   438  00FEE2  64                 	db	100	;'d'
   439  00FEE3  61                 	db	97	;'a'
   440  00FEE4  74                 	db	116	;'t'
   441  00FEE5  61                 	db	97	;'a'
   442  00FEE6  3A                 	db	58	;':'
   443  00FEE7  20                 	db	32
   444  00FEE8  25                 	db	37
   445  00FEE9  23                 	db	35
   446  00FEEA  30                 	db	48	;'0'
   447  00FEEB  32                 	db	50	;'2'
   448  00FEEC  58                 	db	88	;'X'
   449  00FEED  20                 	db	32
   450  00FEEE  2D                 	db	45
   451  00FEEF  20                 	db	32
   452  00FEF0  25                 	db	37
   453  00FEF1  63                 	db	99	;'c'
   454  00FEF2  0A                 	db	10
   455  00FEF3  0D                 	db	13
   456  00FEF4  00                 	db	0
   457  00FEF5                     STR_8:
   458                           
   459                           ; BSR set to: 0
   460  00FEF5  41                 	db	65	;'A'
   461  00FEF6  43                 	db	67	;'C'
   462  00FEF7  4B                 	db	75	;'K'
   463  00FEF8  20                 	db	32
   464  00FEF9  2D                 	db	45
   465  00FEFA  20                 	db	32
   466  00FEFB  53                 	db	83	;'S'
   467  00FEFC  6B                 	db	107	;'k'
   468  00FEFD  72                 	db	114	;'r'
   469  00FEFE  65                 	db	101	;'e'
   470  00FEFF  76                 	db	118	;'v'
   471  00FF00  20                 	db	32
   472  00FF01  61                 	db	97	;'a'
   473  00FF02  64                 	db	100	;'d'
   474  00FF03  72                 	db	114	;'r'
   475  00FF04  65                 	db	101	;'e'
   476  00FF05  73                 	db	115	;'s'
   477  00FF06  73                 	db	115	;'s'
   478  00FF07  65                 	db	101	;'e'
   479  00FF08  3A                 	db	58	;':'
   480  00FF09  20                 	db	32
   481  00FF0A  25                 	db	37
   482  00FF0B  23                 	db	35
   483  00FF0C  30                 	db	48	;'0'
   484  00FF0D  32                 	db	50	;'2'
   485  00FF0E  58                 	db	88	;'X'
   486  00FF0F  0A                 	db	10
   487  00FF10  0D                 	db	13
   488  00FF11  00                 	db	0
   489  00FF12                     STR_20:
   490                           
   491                           ; BSR set to: 0
   492  00FF12  53                 	db	83	;'S'
   493  00FF13  6B                 	db	107	;'k'
   494  00FF14  72                 	db	114	;'r'
   495  00FF15  69                 	db	105	;'i'
   496  00FF16  76                 	db	118	;'v'
   497  00FF17  65                 	db	101	;'e'
   498  00FF18  72                 	db	114	;'r'
   499  00FF19  3A                 	db	58	;':'
   500  00FF1A  20                 	db	32
   501  00FF1B  61                 	db	97	;'a'
   502  00FF1C  64                 	db	100	;'d'
   503  00FF1D  72                 	db	114	;'r'
   504  00FF1E  65                 	db	101	;'e'
   505  00FF1F  73                 	db	115	;'s'
   506  00FF20  73                 	db	115	;'s'
   507  00FF21  65                 	db	101	;'e'
   508  00FF22  3A                 	db	58	;':'
   509  00FF23  20                 	db	32
   510  00FF24  25                 	db	37
   511  00FF25  23                 	db	35
   512  00FF26  30                 	db	48	;'0'
   513  00FF27  32                 	db	50	;'2'
   514  00FF28  58                 	db	88	;'X'
   515  00FF29  0A                 	db	10
   516  00FF2A  0D                 	db	13
   517  00FF2B  00                 	db	0
   518  00FF2C                     STR_15:
   519                           
   520                           ; BSR set to: 0
   521  00FF2C  4B                 	db	75	;'K'
   522  00FF2D  75                 	db	117	;'u'
   523  00FF2E  6E                 	db	110	;'n'
   524  00FF2F  6E                 	db	110	;'n'
   525  00FF30  65                 	db	101	;'e'
   526  00FF31  20                 	db	32
   527  00FF32  69                 	db	105	;'i'
   528  00FF33  6B                 	db	107	;'k'
   529  00FF34  6B                 	db	107	;'k'
   530  00FF35  65                 	db	101	;'e'
   531  00FF36  20                 	db	32
   532  00FF37  66                 	db	102	;'f'
   533  00FF38  69                 	db	105	;'i'
   534  00FF39  6E                 	db	110	;'n'
   535  00FF3A  64                 	db	100	;'d'
   536  00FF3B  65                 	db	101	;'e'
   537  00FF3C  20                 	db	32
   538  00FF3D  65                 	db	101	;'e'
   539  00FF3E  6E                 	db	110	;'n'
   540  00FF3F  68                 	db	104	;'h'
   541  00FF40  65                 	db	101	;'e'
   542  00FF41  64                 	db	100	;'d'
   543  00FF42  0D                 	db	13
   544  00FF43  0A                 	db	10
   545  00FF44  00                 	db	0
   546  00FF45                     STR_2:
   547                           
   548                           ; BSR set to: 0
   549  00FF45  53                 	db	83	;'S'
   550  00FF46  6B                 	db	107	;'k'
   551  00FF47  72                 	db	114	;'r'
   552  00FF48  69                 	db	105	;'i'
   553  00FF49  76                 	db	118	;'v'
   554  00FF4A  20                 	db	32
   555  00FF4B  74                 	db	116	;'t'
   556  00FF4C  65                 	db	101	;'e'
   557  00FF4D  67                 	db	103	;'g'
   558  00FF4E  6E                 	db	110	;'n'
   559  00FF4F  20                 	db	32
   560  00FF50  74                 	db	116	;'t'
   561  00FF51  69                 	db	105	;'i'
   562  00FF52  6C                 	db	108	;'l'
   563  00FF53  20                 	db	32
   564  00FF54  45                 	db	69	;'E'
   565  00FF55  45                 	db	69	;'E'
   566  00FF56  50                 	db	80	;'P'
   567  00FF57  52                 	db	82	;'R'
   568  00FF58  4F                 	db	79	;'O'
   569  00FF59  4D                 	db	77	;'M'
   570  00FF5A  0D                 	db	13
   571  00FF5B  0A                 	db	10
   572  00FF5C  00                 	db	0
   573  00FF5D                     STR_3:
   574                           
   575                           ; BSR set to: 0
   576  00FF5D  4F                 	db	79	;'O'
   577  00FF5E  67                 	db	103	;'g'
   578  00FF5F  20                 	db	32
   579  00FF60  6C                 	db	108	;'l'
   580  00FF61  61                 	db	97	;'a'
   581  00FF62  65                 	db	101	;'e'
   582  00FF63  73                 	db	115	;'s'
   583  00FF64  20                 	db	32
   584  00FF65  64                 	db	100	;'d'
   585  00FF66  65                 	db	101	;'e'
   586  00FF67  6D                 	db	109	;'m'
   587  00FF68  20                 	db	32
   588  00FF69  69                 	db	105	;'i'
   589  00FF6A  67                 	db	103	;'g'
   590  00FF6B  65                 	db	101	;'e'
   591  00FF6C  6E                 	db	110	;'n'
   592  00FF6D  0D                 	db	13
   593  00FF6E  0A                 	db	10
   594  00FF6F  00                 	db	0
   595  00FF70                     STR_11:
   596                           
   597                           ; BSR set to: 0
   598  00FF70  4E                 	db	78	;'N'
   599  00FF71  41                 	db	65	;'A'
   600  00FF72  43                 	db	67	;'C'
   601  00FF73  4B                 	db	75	;'K'
   602  00FF74  20                 	db	32
   603  00FF75  2D                 	db	45
   604  00FF76  20                 	db	32
   605  00FF77  67                 	db	103	;'g'
   606  00FF78  65                 	db	101	;'e'
   607  00FF79  6E                 	db	110	;'n'
   608  00FF7A  73                 	db	115	;'s'
   609  00FF7B  65                 	db	101	;'e'
   610  00FF7C  6E                 	db	110	;'n'
   611  00FF7D  64                 	db	100	;'d'
   612  00FF7E  65                 	db	101	;'e'
   613  00FF7F  72                 	db	114	;'r'
   614  00FF80  0D                 	db	13
   615  00FF81  0A                 	db	10
   616  00FF82  00                 	db	0
   617  00FF83                     STR_7:
   618                           
   619                           ; BSR set to: 0
   620  00FF83  41                 	db	65	;'A'
   621  00FF84  64                 	db	100	;'d'
   622  00FF85  64                 	db	100	;'d'
   623  00FF86  72                 	db	114	;'r'
   624  00FF87  65                 	db	101	;'e'
   625  00FF88  73                 	db	115	;'s'
   626  00FF89  73                 	db	115	;'s'
   627  00FF8A  65                 	db	101	;'e'
   628  00FF8B  3A                 	db	58	;':'
   629  00FF8C  20                 	db	32
   630  00FF8D  25                 	db	37
   631  00FF8E  23                 	db	35
   632  00FF8F  30                 	db	48	;'0'
   633  00FF90  32                 	db	50	;'2'
   634  00FF91  58                 	db	88	;'X'
   635  00FF92  0D                 	db	13
   636  00FF93  0A                 	db	10
   637  00FF94  00                 	db	0
   638  00FF95                     STR_6:
   639                           
   640                           ; BSR set to: 0
   641  00FF95  48                 	db	72	;'H'
   642  00FF96  61                 	db	97	;'a'
   643  00FF97  72                 	db	114	;'r'
   644  00FF98  20                 	db	32
   645  00FF99  73                 	db	115	;'s'
   646  00FF9A  65                 	db	101	;'e'
   647  00FF9B  6E                 	db	110	;'n'
   648  00FF9C  64                 	db	100	;'d'
   649  00FF9D  74                 	db	116	;'t'
   650  00FF9E  20                 	db	32
   651  00FF9F  73                 	db	115	;'s'
   652  00FFA0  74                 	db	116	;'t'
   653  00FFA1  61                 	db	97	;'a'
   654  00FFA2  72                 	db	114	;'r'
   655  00FFA3  74                 	db	116	;'t'
   656  00FFA4  0A                 	db	10
   657  00FFA5  0D                 	db	13
   658  00FFA6  00                 	db	0
   659  00FFA7                     STR_22:
   660                           
   661                           ; BSR set to: 0
   662  00FFA7  48                 	db	72	;'H'
   663  00FFA8  61                 	db	97	;'a'
   664  00FFA9  72                 	db	114	;'r'
   665  00FFAA  20                 	db	32
   666  00FFAB  73                 	db	115	;'s'
   667  00FFAC  65                 	db	101	;'e'
   668  00FFAD  6E                 	db	110	;'n'
   669  00FFAE  64                 	db	100	;'d'
   670  00FFAF  74                 	db	116	;'t'
   671  00FFB0  20                 	db	32
   672  00FFB1  73                 	db	115	;'s'
   673  00FFB2  74                 	db	116	;'t'
   674  00FFB3  6F                 	db	111	;'o'
   675  00FFB4  70                 	db	112	;'p'
   676  00FFB5  0D                 	db	13
   677  00FFB6  0A                 	db	10
   678  00FFB7  00                 	db	0
   679  00FFB8                     STR_14:
   680                           
   681                           ; BSR set to: 0
   682  00FFB8  48                 	db	72	;'H'
   683  00FFB9  61                 	db	97	;'a'
   684  00FFBA  72                 	db	114	;'r'
   685  00FFBB  20                 	db	32
   686  00FFBC  73                 	db	115	;'s'
   687  00FFBD  65                 	db	101	;'e'
   688  00FFBE  6E                 	db	110	;'n'
   689  00FFBF  64                 	db	100	;'d'
   690  00FFC0  74                 	db	116	;'t'
   691  00FFC1  20                 	db	32
   692  00FFC2  73                 	db	115	;'s'
   693  00FFC3  74                 	db	116	;'t'
   694  00FFC4  6F                 	db	111	;'o'
   695  00FFC5  70                 	db	112	;'p'
   696  00FFC6  0A                 	db	10
   697  00FFC7  0D                 	db	13
   698  00FFC8  00                 	db	0
   699  00FFC9                     STR_5:
   700                           
   701                           ; BSR set to: 0
   702  00FFC9  42                 	db	66	;'B'
   703  00FFCA  75                 	db	117	;'u'
   704  00FFCB  73                 	db	115	;'s'
   705  00FFCC  73                 	db	115	;'s'
   706  00FFCD  65                 	db	101	;'e'
   707  00FFCE  6E                 	db	110	;'n'
   708  00FFCF  20                 	db	32
   709  00FFD0  65                 	db	101	;'e'
   710  00FFD1  72                 	db	114	;'r'
   711  00FFD2  20                 	db	32
   712  00FFD3  6B                 	db	107	;'k'
   713  00FFD4  6C                 	db	108	;'l'
   714  00FFD5  61                 	db	97	;'a'
   715  00FFD6  72                 	db	114	;'r'
   716  00FFD7  0A                 	db	10
   717  00FFD8  0D                 	db	13
   718  00FFD9  00                 	db	0
   719  00FFDA                     STR_21:
   720                           
   721                           ; BSR set to: 0
   722  00FFDA  4C                 	db	76	;'L'
   723  00FFDB  61                 	db	97	;'a'
   724  00FFDC  65                 	db	101	;'e'
   725  00FFDD  73                 	db	115	;'s'
   726  00FFDE  74                 	db	116	;'t'
   727  00FFDF  65                 	db	101	;'e'
   728  00FFE0  3A                 	db	58	;':'
   729  00FFE1  20                 	db	32
   730  00FFE2  25                 	db	37
   731  00FFE3  23                 	db	35
   732  00FFE4  30                 	db	48	;'0'
   733  00FFE5  32                 	db	50	;'2'
   734  00FFE6  58                 	db	88	;'X'
   735  00FFE7  0A                 	db	10
   736  00FFE8  0D                 	db	13
   737  00FFE9  00                 	db	0
   738  00FFEA                     STR_9:
   739                           
   740                           ; BSR set to: 0
   741  00FFEA  44                 	db	68	;'D'
   742  00FFEB  61                 	db	97	;'a'
   743  00FFEC  74                 	db	116	;'t'
   744  00FFED  61                 	db	97	;'a'
   745  00FFEE  3A                 	db	58	;':'
   746  00FFEF  20                 	db	32
   747  00FFF0  25                 	db	37
   748  00FFF1  23                 	db	35
   749  00FFF2  30                 	db	48	;'0'
   750  00FFF3  32                 	db	50	;'2'
   751  00FFF4  58                 	db	88	;'X'
   752  00FFF5  0D                 	db	13
   753  00FFF6  0A                 	db	10
   754  00FFF7  00                 	db	0
   755  00FFF8                     STR_1:
   756                           
   757                           ; BSR set to: 0
   758  00FFF8  48                 	db	72	;'H'
   759  00FFF9  65                 	db	101	;'e'
   760  00FFFA  6A                 	db	106	;'j'
   761  00FFFB  0D                 	db	13
   762  00FFFC  0A                 	db	10
   763  00FFFD  00                 	db	0
   764  0000                     
   765                           ; #config settings
   766  00FFFE  00                 	db	0	; dummy byte at the end
   767  0000                     
   768                           	psect	cinit
   769  00137A                     __pcinit:
   770                           	opt callstack 0
   771  00137A                     start_initialization:
   772                           	opt callstack 0
   773  00137A                     __initialization:
   774                           	opt callstack 0
   775                           
   776                           ; Initialize objects allocated to BANK1 (36 bytes)
   777                           ; load TBLPTR registers with __pidataBANK1
   778  00137A  0EFC               	movlw	low __pidataBANK1
   779  00137C  6EF6               	movwf	tblptrl,c
   780  00137E  0E18               	movlw	high __pidataBANK1
   781  001380  6EF7               	movwf	tblptrh,c
   782  001382  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   783  001384  6EF8               	movwf	tblptru,c
   784  001386  EE01  F0A0         	lfsr	0,__pdataBANK1
   785  00138A  EE10 F024          	lfsr	1,36
   786  00138E                     copy_data0:
   787  00138E  0009               	tblrd		*+
   788  001390  CFF5 FFEE          	movff	tablat,postinc0
   789  001394  50E5               	movf	postdec1,w,c
   790  001396  50E1               	movf	fsr1l,w,c
   791  001398  E1FA               	bnz	copy_data0
   792                           
   793                           ; Initialize objects allocated to BANK0 (48 bytes)
   794                           ; load TBLPTR registers with __pidataBANK0
   795  00139A  0E6C               	movlw	low __pidataBANK0
   796  00139C  6EF6               	movwf	tblptrl,c
   797  00139E  0E17               	movlw	high __pidataBANK0
   798  0013A0  6EF7               	movwf	tblptrh,c
   799  0013A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   800  0013A4  6EF8               	movwf	tblptru,c
   801  0013A6  EE00  F0A1         	lfsr	0,__pdataBANK0
   802  0013AA  EE10 F030          	lfsr	1,48
   803  0013AE                     copy_data1:
   804  0013AE  0009               	tblrd		*+
   805  0013B0  CFF5 FFEE          	movff	tablat,postinc0
   806  0013B4  50E5               	movf	postdec1,w,c
   807  0013B6  50E1               	movf	fsr1l,w,c
   808  0013B8  E1FA               	bnz	copy_data1
   809                           
   810                           ; Clear objects allocated to BANK2 (192 bytes)
   811  0013BA  EE02  F000         	lfsr	0,__pbssBANK2
   812  0013BE  0EC0               	movlw	192
   813  0013C0                     clear_0:
   814  0013C0  6AEE               	clrf	postinc0,c
   815  0013C2  06E8               	decf	wreg,f,c
   816  0013C4  E1FD               	bnz	clear_0
   817                           
   818                           ; Clear objects allocated to BANK1 (160 bytes)
   819  0013C6  EE01  F000         	lfsr	0,__pbssBANK1
   820  0013CA  0EA0               	movlw	160
   821  0013CC                     clear_1:
   822  0013CC  6AEE               	clrf	postinc0,c
   823  0013CE  06E8               	decf	wreg,f,c
   824  0013D0  E1FD               	bnz	clear_1
   825                           
   826                           ; Clear objects allocated to BANK0 (46 bytes)
   827  0013D2  EE00  F0D1         	lfsr	0,__pbssBANK0
   828  0013D6  0E2E               	movlw	46
   829  0013D8                     clear_2:
   830  0013D8  6AEE               	clrf	postinc0,c
   831  0013DA  06E8               	decf	wreg,f,c
   832  0013DC  E1FD               	bnz	clear_2
   833                           
   834                           ; Clear objects allocated to COMRAM (4 bytes)
   835  0013DE  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   836  0013E0  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   837  0013E2  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   838  0013E4  6A57               	clrf	__pbssCOMRAM& (0+255),c
   839  0013E6                     end_of_initialization:
   840                           	opt callstack 0
   841  0013E6                     __end_of__initialization:
   842                           	opt callstack 0
   843  0013E6  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   844  0013E8  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   845  0013EA  0100               	movlb	0
   846  0013EC  EFB7  F005         	goto	_main	;jump to C main() function
   847                           
   848                           	psect	bssCOMRAM
   849  000057                     __pbssCOMRAM:
   850                           	opt callstack 0
   851  000057                     _eusart1RxTail:
   852                           	opt callstack 0
   853  000057                     	ds	1
   854  000058                     _eusart1RxHead:
   855                           	opt callstack 0
   856  000058                     	ds	1
   857  000059                     _eusart1TxTail:
   858                           	opt callstack 0
   859  000059                     	ds	1
   860  00005A                     _eusart1TxHead:
   861                           	opt callstack 0
   862  00005A                     	ds	1
   863                           
   864                           	psect	bssBANK0
   865  0000D1                     __pbssBANK0:
   866                           	opt callstack 0
   867  0000D1                     	ds	4
   868  0000D5                     _nout:
   869                           	opt callstack 0
   870  0000D5                     	ds	2
   871  0000D7                     _width:
   872                           	opt callstack 0
   873  0000D7                     	ds	2
   874  0000D9                     _prec:
   875                           	opt callstack 0
   876  0000D9                     	ds	2
   877  0000DB                     _flags:
   878                           	opt callstack 0
   879  0000DB                     	ds	2
   880  0000DD                     _EUSART1_ErrorHandler:
   881                           	opt callstack 0
   882  0000DD                     	ds	2
   883  0000DF                     _EUSART1_OverrunErrorHandler:
   884                           	opt callstack 0
   885  0000DF                     	ds	2
   886  0000E1                     _EUSART1_FramingErrorHandler:
   887                           	opt callstack 0
   888  0000E1                     	ds	2
   889  0000E3                     _EUSART1_RxDefaultInterruptHandler:
   890                           	opt callstack 0
   891  0000E3                     	ds	2
   892  0000E5                     _EUSART1_TxDefaultInterruptHandler:
   893                           	opt callstack 0
   894  0000E5                     	ds	2
   895  0000E7                     _eusart1RxLastError:
   896                           	opt callstack 0
   897  0000E7                     	ds	1
   898  0000E8                     _eusart1RxCount:
   899                           	opt callstack 0
   900  0000E8                     	ds	1
   901  0000E9                     _eusart1TxBufferRemaining:
   902                           	opt callstack 0
   903  0000E9                     	ds	1
   904  0000EA                     _tmp_string:
   905                           	opt callstack 0
   906  0000EA                     	ds	15
   907  0000F9                     _data_out:
   908                           	opt callstack 0
   909  0000F9                     	ds	4
   910  0000FD                     _eeprom_addr0000:
   911                           	opt callstack 0
   912  0000FD                     	ds	2
   913                           
   914                           	psect	dataBANK0
   915  0000A1                     __pdataBANK0:
   916                           	opt callstack 0
   917  0000A1                     _degree_pos:
   918                           	opt callstack 0
   919  0000A1                     	ds	2
   920  0000A3                     _eeprom_addr:
   921                           	opt callstack 0
   922  0000A3                     	ds	1
   923  0000A4                     _display_addr:
   924                           	opt callstack 0
   925  0000A4                     	ds	1
   926  0000A5                     _temperature_addr:
   927                           	opt callstack 0
   928  0000A5                     	ds	1
   929  0000A6                     _precission:
   930                           	opt callstack 0
   931  0000A6                     	ds	1
   932  0000A7                     _eeprom_write:
   933                           	opt callstack 0
   934  0000A7                     	ds	17
   935  0000B8                     _custom_char0:
   936                           	opt callstack 0
   937  0000B8                     	ds	11
   938  0000C3                     _display_init:
   939                           	opt callstack 0
   940  0000C3                     	ds	4
   941  0000C7                     _moist_pos:
   942                           	opt callstack 0
   943  0000C7                     	ds	2
   944  0000C9                     _temp_pos:
   945                           	opt callstack 0
   946  0000C9                     	ds	2
   947  0000CB                     _shift_line:
   948                           	opt callstack 0
   949  0000CB                     	ds	2
   950  0000CD                     _first_line:
   951                           	opt callstack 0
   952  0000CD                     	ds	2
   953  0000CF                     _minus:
   954                           	opt callstack 0
   955  0000CF                     	ds	2
   956                           
   957                           	psect	bssBANK1
   958  000100                     __pbssBANK1:
   959                           	opt callstack 0
   960  000100                     _eusart1RxStatusBuffer:
   961                           	opt callstack 0
   962  000100                     	ds	64
   963  000140                     _eusart1TxBuffer:
   964                           	opt callstack 0
   965  000140                     	ds	64
   966  000180                     _dbuf:
   967                           	opt callstack 0
   968  000180                     	ds	32
   969                           
   970                           	psect	dataBANK1
   971  0001A0                     __pdataBANK1:
   972                           	opt callstack 0
   973  0001A0                     _moist_string:
   974                           	opt callstack 0
   975  0001A0                     	ds	18
   976  0001B2                     _temp_string:
   977                           	opt callstack 0
   978  0001B2                     	ds	18
   979                           
   980                           	psect	bssBANK2
   981  000200                     __pbssBANK2:
   982                           	opt callstack 0
   983  000200                     _eusart1RxBuffer:
   984                           	opt callstack 0
   985  000200                     	ds	64
   986  000240                     _eeprom_buffer:
   987                           	opt callstack 0
   988  000240                     	ds	128
   989                           
   990                           	psect	cstackBANK0
   991  000060                     __pcstackBANK0:
   992                           	opt callstack 0
   993  000060                     vfpfcnvrt@llu:
   994                           	opt callstack 0
   995                           
   996                           ; 8 bytes @ 0x0
   997  000060                     	ds	8
   998  000068                     vfpfcnvrt@done:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x8
  1002  000068                     	ds	2
  1003  00006A                     _vfpfcnvrt$1219:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 2 bytes @ 0xA
  1007  00006A                     	ds	2
  1008  00006C                     vfpfcnvrt@c:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 1 bytes @ 0xC
  1012  00006C                     	ds	1
  1013  00006D                     ?_vfprintf:
  1014                           	opt callstack 0
  1015  00006D                     vfprintf@fp:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 2 bytes @ 0xD
  1019  00006D                     	ds	2
  1020  00006F                     vfprintf@fmt:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 2 bytes @ 0xF
  1024  00006F                     	ds	2
  1025  000071                     vfprintf@ap:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x11
  1029  000071                     	ds	2
  1030  000073                     ?_printf:
  1031                           	opt callstack 0
  1032  000073                     printf@fmt:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x13
  1036  000073                     	ds	8
  1037  00007B                     printf@ap:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x1B
  1041  00007B                     	ds	2
  1042  00007D                     i2c_write_serial@data:
  1043                           	opt callstack 0
  1044  00007D                     i2c_read_serial@data_out:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x1D
  1048  00007D                     	ds	2
  1049  00007F                     i2c_write_serial@length:
  1050                           	opt callstack 0
  1051  00007F                     i2c_read_serial@length:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x1F
  1055  00007F                     	ds	1
  1056  000080                     ??_i2c_read_serial:
  1057  000080                     i2c_write_serial@addr:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x20
  1061  000080                     	ds	1
  1062  000081                     i2c_write_serial@targetAddr:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x21
  1066  000081                     	ds	1
  1067  000082                     i2c_write_serial@i:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x22
  1071  000082                     	ds	1
  1072  000083                     updateMoist@output:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 10 bytes @ 0x23
  1076  000083                     	ds	3
  1077  000086                     i2c_read_serial@addr:
  1078                           	opt callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x26
  1081  000086                     	ds	1
  1082  000087                     i2c_read_serial@targetAddr:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x27
  1086  000087                     	ds	1
  1087  000088                     i2c_read_serial@i:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x28
  1091  000088                     	ds	5
  1092  00008D                     updateMoist@moist:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x2D
  1096  00008D                     	ds	1
  1097  00008E                     ??_getReading:
  1098                           
  1099                           ; 1 bytes @ 0x2E
  1100  00008E                     	ds	4
  1101  000092                     getReading@decimal2:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x32
  1105  000092                     	ds	1
  1106  000093                     getReading@ones:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x33
  1110  000093                     	ds	1
  1111  000094                     getReading@tens:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x34
  1115  000094                     	ds	1
  1116  000095                     getReading@decimal1:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x35
  1120  000095                     	ds	1
  1121  000096                     getReading@tmp_moist:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x36
  1125  000096                     	ds	4
  1126  00009A                     getReading@length:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x3A
  1130  00009A                     	ds	1
  1131  00009B                     getReading@tmp_temp:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x3B
  1135  00009B                     	ds	4
  1136  00009F                     ??_main:
  1137                           
  1138                           ; 1 bytes @ 0x3F
  1139  00009F                     	ds	2
  1140                           
  1141                           	psect	cstackCOMRAM
  1142  000001                     __pcstackCOMRAM:
  1143                           	opt callstack 0
  1144  000001                     ??_INTERRUPT_InterruptManager:
  1145  000001                     
  1146                           ; 1 bytes @ 0x0
  1147  000001                     	ds	4
  1148  000005                     ?_strlen:
  1149                           	opt callstack 0
  1150  000005                     ?_isupper:
  1151                           	opt callstack 0
  1152  000005                     ?_isalpha:
  1153                           	opt callstack 0
  1154  000005                     ?_isdigit:
  1155                           	opt callstack 0
  1156  000005                     ?_isspace:
  1157                           	opt callstack 0
  1158  000005                     ?_islower:
  1159                           	opt callstack 0
  1160  000005                     ?___wmul:
  1161                           	opt callstack 0
  1162  000005                     ?___awdiv:
  1163                           	opt callstack 0
  1164  000005                     ?___awmod:
  1165                           	opt callstack 0
  1166  000005                     ?___lmul:
  1167                           	opt callstack 0
  1168  000005                     ?___lldiv:
  1169                           	opt callstack 0
  1170  000005                     ?___aldiv:
  1171                           	opt callstack 0
  1172  000005                     ?___almod:
  1173                           	opt callstack 0
  1174  000005                     EUSART1_Write@txData:
  1175                           	opt callstack 0
  1176  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1177                           	opt callstack 0
  1178  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1179                           	opt callstack 0
  1180  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1181                           	opt callstack 0
  1182  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1183                           	opt callstack 0
  1184  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1185                           	opt callstack 0
  1186  000005                     ___wmul@multiplier:
  1187                           	opt callstack 0
  1188  000005                     ___awdiv@dividend:
  1189                           	opt callstack 0
  1190  000005                     ___awmod@dividend:
  1191                           	opt callstack 0
  1192  000005                     isalpha@c:
  1193                           	opt callstack 0
  1194  000005                     isdigit@c:
  1195                           	opt callstack 0
  1196  000005                     isspace@c:
  1197                           	opt callstack 0
  1198  000005                     isupper@c:
  1199                           	opt callstack 0
  1200  000005                     strlen@s:
  1201                           	opt callstack 0
  1202  000005                     islower@c:
  1203                           	opt callstack 0
  1204  000005                     ___lmul@multiplier:
  1205                           	opt callstack 0
  1206  000005                     ___lldiv@dividend:
  1207                           	opt callstack 0
  1208  000005                     ___aldiv@dividend:
  1209                           	opt callstack 0
  1210  000005                     ___almod@dividend:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 4 bytes @ 0x4
  1214  000005                     	ds	1
  1215  000006                     putch@txData:
  1216                           	opt callstack 0
  1217                           
  1218                           ; 1 bytes @ 0x5
  1219  000006                     	ds	1
  1220  000007                     ??_isupper:
  1221  000007                     ??_isalpha:
  1222  000007                     ??_isdigit:
  1223  000007                     ??_isspace:
  1224  000007                     ??_islower:
  1225  000007                     ___wmul@multiplicand:
  1226                           	opt callstack 0
  1227  000007                     ___awdiv@divisor:
  1228                           	opt callstack 0
  1229  000007                     ___awmod@divisor:
  1230                           	opt callstack 0
  1231  000007                     fputc@c:
  1232                           	opt callstack 0
  1233  000007                     strlen@a:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x6
  1237  000007                     	ds	2
  1238  000009                     ___awdiv@counter:
  1239                           	opt callstack 0
  1240  000009                     ___awmod@counter:
  1241                           	opt callstack 0
  1242  000009                     ___wmul@product:
  1243                           	opt callstack 0
  1244  000009                     fputc@fp:
  1245                           	opt callstack 0
  1246  000009                     ___lmul@multiplicand:
  1247                           	opt callstack 0
  1248  000009                     ___lldiv@divisor:
  1249                           	opt callstack 0
  1250  000009                     ___aldiv@divisor:
  1251                           	opt callstack 0
  1252  000009                     ___almod@divisor:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x8
  1256  000009                     	ds	1
  1257  00000A                     ___awdiv@sign:
  1258                           	opt callstack 0
  1259  00000A                     ___awmod@sign:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 1 bytes @ 0x9
  1263  00000A                     	ds	1
  1264  00000B                     ??_fputc:
  1265  00000B                     ?_toupper:
  1266                           	opt callstack 0
  1267  00000B                     _isspace$1702:
  1268                           	opt callstack 0
  1269  00000B                     ___awdiv@quotient:
  1270                           	opt callstack 0
  1271  00000B                     toupper@c:
  1272                           	opt callstack 0
  1273                           
  1274                           ; 2 bytes @ 0xA
  1275  00000B                     	ds	1
  1276  00000C                     ?_atoi:
  1277                           	opt callstack 0
  1278  00000C                     atoi@s:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 2 bytes @ 0xB
  1282  00000C                     	ds	1
  1283  00000D                     ??_toupper:
  1284  00000D                     ___aldiv@counter:
  1285                           	opt callstack 0
  1286  00000D                     ___almod@counter:
  1287                           	opt callstack 0
  1288  00000D                     ___lmul@product:
  1289                           	opt callstack 0
  1290  00000D                     ___lldiv@quotient:
  1291                           	opt callstack 0
  1292                           
  1293                           ; 4 bytes @ 0xC
  1294  00000D                     	ds	1
  1295  00000E                     ??_atoi:
  1296  00000E                     ___aldiv@sign:
  1297                           	opt callstack 0
  1298  00000E                     ___almod@sign:
  1299                           	opt callstack 0
  1300                           
  1301                           ; 1 bytes @ 0xD
  1302  00000E                     	ds	1
  1303  00000F                     ___aldiv@quotient:
  1304                           	opt callstack 0
  1305                           
  1306                           ; 4 bytes @ 0xE
  1307  00000F                     	ds	1
  1308  000010                     fputs@s:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 2 bytes @ 0xF
  1312  000010                     	ds	1
  1313  000011                     ___lldiv@counter:
  1314                           	opt callstack 0
  1315  000011                     _toupper$1766:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x10
  1319  000011                     	ds	1
  1320  000012                     atoi@neg:
  1321                           	opt callstack 0
  1322  000012                     fputs@fp:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x11
  1326  000012                     	ds	2
  1327  000014                     fputs@c:
  1328                           	opt callstack 0
  1329  000014                     _atoi$1675:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x13
  1333  000014                     	ds	1
  1334  000015                     fputs@i:
  1335                           	opt callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x14
  1338  000015                     	ds	1
  1339  000016                     _atoi$1677:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x15
  1343  000016                     	ds	1
  1344  000017                     ?_pad:
  1345                           	opt callstack 0
  1346  000017                     pad@fp:
  1347                           	opt callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x16
  1350  000017                     	ds	1
  1351  000018                     _atoi$1676:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 1 bytes @ 0x17
  1355  000018                     	ds	1
  1356  000019                     pad@buf:
  1357                           	opt callstack 0
  1358  000019                     atoi@n:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x18
  1362  000019                     	ds	2
  1363  00001B                     pad@p:
  1364                           	opt callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x1A
  1367  00001B                     	ds	2
  1368  00001D                     ??_pad:
  1369                           
  1370                           ; 1 bytes @ 0x1C
  1371  00001D                     	ds	1
  1372  00001E                     pad@i:
  1373                           	opt callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x1D
  1376  00001E                     	ds	2
  1377  000020                     pad@w:
  1378                           	opt callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x1F
  1381  000020                     	ds	2
  1382  000022                     ?_ctoa:
  1383                           	opt callstack 0
  1384  000022                     ?_xtoa:
  1385                           	opt callstack 0
  1386  000022                     ctoa@fp:
  1387                           	opt callstack 0
  1388  000022                     xtoa@fp:
  1389                           	opt callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x21
  1392  000022                     	ds	2
  1393  000024                     ctoa@c:
  1394                           	opt callstack 0
  1395  000024                     xtoa@d:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 8 bytes @ 0x23
  1399  000024                     	ds	1
  1400  000025                     ctoa@w:
  1401                           	opt callstack 0
  1402                           
  1403                           ; 2 bytes @ 0x24
  1404  000025                     	ds	7
  1405  00002C                     xtoa@x:
  1406                           	opt callstack 0
  1407                           
  1408                           ; 1 bytes @ 0x2B
  1409  00002C                     	ds	1
  1410  00002D                     ??_xtoa:
  1411                           
  1412                           ; 1 bytes @ 0x2C
  1413  00002D                     	ds	8
  1414  000035                     _xtoa$1204:
  1415                           	opt callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x34
  1418  000035                     	ds	2
  1419  000037                     _xtoa$1205:
  1420                           	opt callstack 0
  1421                           
  1422                           ; 2 bytes @ 0x36
  1423  000037                     	ds	2
  1424  000039                     xtoa@p:
  1425                           	opt callstack 0
  1426                           
  1427                           ; 2 bytes @ 0x38
  1428  000039                     	ds	2
  1429  00003B                     xtoa@w:
  1430                           	opt callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x3A
  1433  00003B                     	ds	2
  1434  00003D                     xtoa@n:
  1435                           	opt callstack 0
  1436                           
  1437                           ; 8 bytes @ 0x3C
  1438  00003D                     	ds	8
  1439  000045                     xtoa@i:
  1440                           	opt callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x44
  1443  000045                     	ds	2
  1444  000047                     xtoa@c:
  1445                           	opt callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x46
  1448  000047                     	ds	2
  1449  000049                     ?_vfpfcnvrt:
  1450                           	opt callstack 0
  1451  000049                     vfpfcnvrt@fp:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x48
  1455  000049                     	ds	2
  1456  00004B                     vfpfcnvrt@fmt:
  1457                           	opt callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x4A
  1460  00004B                     	ds	2
  1461  00004D                     vfpfcnvrt@ap:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x4C
  1465  00004D                     	ds	2
  1466  00004F                     ??_vfpfcnvrt:
  1467                           
  1468                           ; 1 bytes @ 0x4E
  1469  00004F                     	ds	4
  1470  000053                     vfprintf@cfmt:
  1471                           	opt callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x52
  1474  000053                     	ds	2
  1475  000055                     ??_i2c_write_serial:
  1476                           
  1477                           ; 1 bytes @ 0x54
  1478  000055                     	ds	2
  1479  000057                     
  1480                           ; 1 bytes @ 0x56
  1481 ;;
  1482 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1483 ;;
  1484 ;; *************** function _main *****************
  1485 ;; Defined at:
  1486 ;;		line 56 in file "main.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        2 bytes
  1505 ;; Hardware stack levels required when called:   16
  1506 ;; This function calls:
  1507 ;;		_EUSART1_Initialize
  1508 ;;		_SYSTEM_Initialize
  1509 ;;		_getReading
  1510 ;;		_i2c_init
  1511 ;;		_i2c_read_serial
  1512 ;;		_i2c_write_serial
  1513 ;;		_printf
  1514 ;; This function is called by:
  1515 ;;		Startup code after reset
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text0
  1520  000B6E                     __ptext0:
  1521                           	opt callstack 0
  1522  000B6E                     _main:
  1523                           	opt callstack 15
  1524                           
  1525                           ;main.c: 59:     SYSTEM_Initialize();
  1526                           
  1527                           ;incstack = 0
  1528  000B6E  ECAD  F00C         	call	_SYSTEM_Initialize	;wreg free
  1529                           
  1530                           ;main.c: 60:     (INTCONbits.GIE = 1);
  1531  000B72  8EF2               	bsf	4082,7,c	;volatile
  1532                           
  1533                           ;main.c: 61:     (INTCONbits.PEIE = 1);
  1534  000B74  8CF2               	bsf	4082,6,c	;volatile
  1535                           
  1536                           ;main.c: 62:     EUSART1_Initialize();
  1537  000B76  ECF8  F009         	call	_EUSART1_Initialize	;wreg free
  1538                           
  1539                           ;main.c: 63:     INTCONbits.GIE = 1;
  1540  000B7A  8EF2               	bsf	4082,7,c	;volatile
  1541                           
  1542                           ;main.c: 64:     INTCONbits.PEIE = 1;
  1543  000B7C  8CF2               	bsf	4082,6,c	;volatile
  1544                           
  1545                           ;main.c: 66:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  1546  000B7E  0EF4               	movlw	244
  1547  000B80  0100               	movlb	0	; () banked
  1548  000B82  6FA0               	movwf	(??_main+1)& (0+255),b
  1549  000B84  0E82               	movlw	130
  1550  000B86  6F9F               	movwf	??_main& (0+255),b
  1551  000B88  0E05               	movlw	5
  1552  000B8A                     u3137:
  1553  000B8A  2EE8               	decfsz	wreg,f,c
  1554  000B8C  D7FE               	bra	u3137
  1555  000B8E  2F9F               	decfsz	??_main& (0+255),f,b
  1556  000B90  D7FC               	bra	u3137
  1557  000B92  2FA0               	decfsz	(??_main+1)& (0+255),f,b
  1558  000B94  D7FA               	bra	u3137
  1559                           
  1560                           ;main.c: 67:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1561  000B96  0EA3               	movlw	163
  1562  000B98  0100               	movlb	0	; () banked
  1563  000B9A  6FA0               	movwf	(??_main+1)& (0+255),b
  1564  000B9C  0E57               	movlw	87
  1565  000B9E  6F9F               	movwf	??_main& (0+255),b
  1566  000BA0  0E02               	movlw	2
  1567  000BA2                     u3147:
  1568  000BA2  2EE8               	decfsz	wreg,f,c
  1569  000BA4  D7FE               	bra	u3147
  1570  000BA6  2F9F               	decfsz	??_main& (0+255),f,b
  1571  000BA8  D7FC               	bra	u3147
  1572  000BAA  2FA0               	decfsz	(??_main+1)& (0+255),f,b
  1573  000BAC  D7FA               	bra	u3147
  1574  000BAE  F000               	nop	
  1575                           
  1576                           ;main.c: 68:     printf("Hej\r\n");
  1577  000BB0  0EF8               	movlw	low STR_1
  1578  000BB2  0100               	movlb	0	; () banked
  1579  000BB4  6F73               	movwf	printf@fmt& (0+255),b
  1580  000BB6  0EFF               	movlw	high STR_1
  1581  000BB8  6F74               	movwf	(printf@fmt+1)& (0+255),b
  1582  000BBA  EC57  F00C         	call	_printf	;wreg free
  1583                           
  1584                           ;main.c: 69:     i2c_init();
  1585  000BBE  ECA1  F00C         	call	_i2c_init	;wreg free
  1586                           
  1587                           ;main.c: 70:     i2c_write_serial(display_addr, display_init, 4);
  1588  000BC2  0EC3               	movlw	low _display_init
  1589  000BC4  0100               	movlb	0	; () banked
  1590  000BC6  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  1591  000BC8  0E00               	movlw	high _display_init
  1592  000BCA  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1593  000BCC  0E04               	movlw	4
  1594  000BCE  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  1595  000BD0  0E3C               	movlw	60
  1596  000BD2  ECE0  F004         	call	_i2c_write_serial
  1597                           
  1598                           ;main.c: 71:     i2c_write_serial(display_addr, first_line, 2);
  1599  000BD6  0ECD               	movlw	low _first_line
  1600  000BD8  0100               	movlb	0	; () banked
  1601  000BDA  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  1602  000BDC  0E00               	movlw	high _first_line
  1603  000BDE  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1604  000BE0  0E02               	movlw	2
  1605  000BE2  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  1606  000BE4  0E3C               	movlw	60
  1607  000BE6  ECE0  F004         	call	_i2c_write_serial
  1608                           
  1609                           ;main.c: 72:     i2c_write_serial(display_addr, temp_string, 17);
  1610  000BEA  0EB2               	movlw	low _temp_string
  1611  000BEC  0100               	movlb	0	; () banked
  1612  000BEE  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  1613  000BF0  0E01               	movlw	high _temp_string
  1614  000BF2  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1615  000BF4  0E11               	movlw	17
  1616  000BF6  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  1617  000BF8  0E3C               	movlw	60
  1618  000BFA  ECE0  F004         	call	_i2c_write_serial
  1619                           
  1620                           ;main.c: 74:     i2c_write_serial(display_addr, shift_line, 2);
  1621  000BFE  0ECB               	movlw	low _shift_line
  1622  000C00  0100               	movlb	0	; () banked
  1623  000C02  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  1624  000C04  0E00               	movlw	high _shift_line
  1625  000C06  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1626  000C08  0E02               	movlw	2
  1627  000C0A  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  1628  000C0C  0E3C               	movlw	60
  1629  000C0E  ECE0  F004         	call	_i2c_write_serial
  1630                           
  1631                           ;main.c: 75:     i2c_write_serial(display_addr, moist_string, 17);
  1632  000C12  0EA0               	movlw	low _moist_string
  1633  000C14  0100               	movlb	0	; () banked
  1634  000C16  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  1635  000C18  0E01               	movlw	high _moist_string
  1636  000C1A  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1637  000C1C  0E11               	movlw	17
  1638  000C1E  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  1639  000C20  0E3C               	movlw	60
  1640  000C22  ECE0  F004         	call	_i2c_write_serial
  1641                           
  1642                           ;main.c: 77:     i2c_write_serial(display_addr, custom_char0, 11);
  1643  000C26  0EB8               	movlw	low _custom_char0
  1644  000C28  0100               	movlb	0	; () banked
  1645  000C2A  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  1646  000C2C  0E00               	movlw	high _custom_char0
  1647  000C2E  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1648  000C30  0E0B               	movlw	11
  1649  000C32  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  1650  000C34  0E3C               	movlw	60
  1651  000C36  ECE0  F004         	call	_i2c_write_serial
  1652                           
  1653                           ;main.c: 78:     i2c_write_serial(display_addr, first_line, 2);
  1654  000C3A  0ECD               	movlw	low _first_line
  1655  000C3C  0100               	movlb	0	; () banked
  1656  000C3E  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  1657  000C40  0E00               	movlw	high _first_line
  1658  000C42  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1659  000C44  0E02               	movlw	2
  1660  000C46  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  1661  000C48  0E3C               	movlw	60
  1662  000C4A  ECE0  F004         	call	_i2c_write_serial
  1663                           
  1664                           ;main.c: 83:     printf("Skriv tegn til EEPROM\r\n");
  1665  000C4E  0E45               	movlw	low STR_2
  1666  000C50  0100               	movlb	0	; () banked
  1667  000C52  6F73               	movwf	printf@fmt& (0+255),b
  1668  000C54  0EFF               	movlw	high STR_2
  1669  000C56  6F74               	movwf	(printf@fmt+1)& (0+255),b
  1670  000C58  EC57  F00C         	call	_printf	;wreg free
  1671                           
  1672                           ;main.c: 86:     i2c_write_serial(eeprom_addr, eeprom_write, 17);
  1673  000C5C  0EA7               	movlw	low _eeprom_write
  1674  000C5E  0100               	movlb	0	; () banked
  1675  000C60  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  1676  000C62  0E00               	movlw	high _eeprom_write
  1677  000C64  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1678  000C66  0E11               	movlw	17
  1679  000C68  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  1680  000C6A  0E50               	movlw	80
  1681  000C6C  ECE0  F004         	call	_i2c_write_serial
  1682                           
  1683                           ;main.c: 89:     printf("Og laes dem igen\r\n");
  1684  000C70  0E5D               	movlw	low STR_3
  1685  000C72  0100               	movlb	0	; () banked
  1686  000C74  6F73               	movwf	printf@fmt& (0+255),b
  1687  000C76  0EFF               	movlw	high STR_3
  1688  000C78  6F74               	movwf	(printf@fmt+1)& (0+255),b
  1689  000C7A  EC57  F00C         	call	_printf	;wreg free
  1690                           
  1691                           ;main.c: 91:     i2c_write_serial(eeprom_addr, eeprom_addr0000, 2);
  1692  000C7E  0EFD               	movlw	low _eeprom_addr0000
  1693  000C80  0100               	movlb	0	; () banked
  1694  000C82  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  1695  000C84  0E00               	movlw	high _eeprom_addr0000
  1696  000C86  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1697  000C88  0E02               	movlw	2
  1698  000C8A  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  1699  000C8C  0E50               	movlw	80
  1700  000C8E  ECE0  F004         	call	_i2c_write_serial
  1701                           
  1702                           ;main.c: 92:     i2c_read_serial(eeprom_addr, eeprom_buffer, 17);
  1703  000C92  0E40               	movlw	low _eeprom_buffer
  1704  000C94  0100               	movlb	0	; () banked
  1705  000C96  6F7D               	movwf	i2c_read_serial@data_out& (0+255),b
  1706  000C98  0E02               	movlw	high _eeprom_buffer
  1707  000C9A  6F7E               	movwf	(i2c_read_serial@data_out+1)& (0+255),b
  1708  000C9C  0E11               	movlw	17
  1709  000C9E  6F7F               	movwf	i2c_read_serial@length& (0+255),b
  1710  000CA0  0E50               	movlw	80
  1711  000CA2  EC07  F007         	call	_i2c_read_serial
  1712                           
  1713                           ;main.c: 94:     getReading();
  1714  000CA6  EC36  F000         	call	_getReading	;wreg free
  1715  000CAA                     l3543:
  1716                           
  1717                           ;main.c: 97:     {;main.c: 98:         _delay((unsigned long)((3000)*(64000000/4000.0)))
      +                          ;
  1718  000CAA  0EF4               	movlw	244
  1719  000CAC  0100               	movlb	0	; () banked
  1720  000CAE  6FA0               	movwf	(??_main+1)& (0+255),b
  1721  000CB0  0E82               	movlw	130
  1722  000CB2  6F9F               	movwf	??_main& (0+255),b
  1723  000CB4  0E05               	movlw	5
  1724  000CB6                     u3157:
  1725  000CB6  2EE8               	decfsz	wreg,f,c
  1726  000CB8  D7FE               	bra	u3157
  1727  000CBA  2F9F               	decfsz	??_main& (0+255),f,b
  1728  000CBC  D7FC               	bra	u3157
  1729  000CBE  2FA0               	decfsz	(??_main+1)& (0+255),f,b
  1730  000CC0  D7FA               	bra	u3157
  1731  000CC2  D7F3               	goto	l3543
  1732  000CC4                     __end_of_main:
  1733                           	opt callstack 0
  1734                           
  1735 ;; *************** function _i2c_init *****************
  1736 ;; Defined at:
  1737 ;;		line 103 in file "main.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    4
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text1
  1766  001942                     __ptext1:
  1767                           	opt callstack 0
  1768  001942                     _i2c_init:
  1769                           	opt callstack 26
  1770                           
  1771                           ;main.c: 104:     TRISCbits.RC3=1;
  1772                           
  1773                           ;incstack = 0
  1774  001942  8694               	bsf	3988,3,c	;volatile
  1775                           
  1776                           ;main.c: 105:     TRISCbits.RC4=1;
  1777  001944  8894               	bsf	3988,4,c	;volatile
  1778                           
  1779                           ;main.c: 107:     ANSELCbits.ANSC3 = 0;
  1780  001946  010F               	movlb	15	; () banked
  1781  001948  973A               	bcf	58,3,b	;volatile
  1782                           
  1783                           ;main.c: 108:     ANSELCbits.ANSC4 = 0;
  1784  00194A  993A               	bcf	58,4,b	;volatile
  1785                           
  1786                           ; BSR set to: 15
  1787                           ;main.c: 112:     SSP1ADD = 0x9F;
  1788  00194C  0E9F               	movlw	159
  1789  00194E  6EC8               	movwf	4040,c	;volatile
  1790                           
  1791                           ;main.c: 113:     SSP1CON1 = 0x28;
  1792  001950  0E28               	movlw	40
  1793  001952  6EC6               	movwf	4038,c	;volatile
  1794                           
  1795                           ;main.c: 114:     SSP1CON2 = 0;
  1796  001954  0E00               	movlw	0
  1797  001956  6EC5               	movwf	4037,c	;volatile
  1798                           
  1799                           ; BSR set to: 15
  1800  001958  0012               	return		;funcret
  1801  00195A                     __end_of_i2c_init:
  1802                           	opt callstack 0
  1803                           
  1804 ;; *************** function _getReading *****************
  1805 ;; Defined at:
  1806 ;;		line 310 in file "main.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  tens            1   52[BANK0 ] unsigned char 
  1811 ;;  ones            1   51[BANK0 ] unsigned char 
  1812 ;;  tmp_temp        4   59[BANK0 ] long 
  1813 ;;  tmp_moist       4   54[BANK0 ] unsigned long 
  1814 ;;  length          1   58[BANK0 ] unsigned char 
  1815 ;;  decimal1        1   53[BANK0 ] char 
  1816 ;;  decimal2        1   50[BANK0 ] char 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;Total ram usage:       17 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:   15
  1833 ;; This function calls:
  1834 ;;		___aldiv
  1835 ;;		___almod
  1836 ;;		___awmod
  1837 ;;		___lldiv
  1838 ;;		___lmul
  1839 ;;		_i2c_read_serial
  1840 ;;		_i2c_write_serial
  1841 ;;		_updateMoist
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text2
  1848  00006C                     __ptext2:
  1849                           	opt callstack 0
  1850  00006C                     _getReading:
  1851                           	opt callstack 15
  1852                           
  1853                           ;main.c: 312:     int32_t tmp_temp = 0;
  1854                           
  1855                           ; BSR set to: 15
  1856                           ;incstack = 0
  1857  00006C  0E00               	movlw	0
  1858  00006E  0100               	movlb	0	; () banked
  1859  000070  6F9B               	movwf	getReading@tmp_temp& (0+255),b
  1860  000072  0E00               	movlw	0
  1861  000074  6F9C               	movwf	(getReading@tmp_temp+1)& (0+255),b
  1862  000076  0E00               	movlw	0
  1863  000078  6F9D               	movwf	(getReading@tmp_temp+2)& (0+255),b
  1864  00007A  0E00               	movlw	0
  1865  00007C  6F9E               	movwf	(getReading@tmp_temp+3)& (0+255),b
  1866                           
  1867                           ;main.c: 313:     uint8_t length = 0;
  1868  00007E  0E00               	movlw	0
  1869  000080  6F9A               	movwf	getReading@length& (0+255),b
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 316:     i2c_write_serial(temperature_addr, 0, 0);
  1873  000082  0E00               	movlw	0
  1874  000084  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  1875  000086  0E00               	movlw	0
  1876  000088  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1877  00008A  0E00               	movlw	0
  1878  00008C  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  1879  00008E  0E27               	movlw	39
  1880  000090  ECE0  F004         	call	_i2c_write_serial
  1881                           
  1882                           ;main.c: 317:     i2c_read_serial(temperature_addr, data_out, 4);
  1883  000094  0EF9               	movlw	low _data_out
  1884  000096  0100               	movlb	0	; () banked
  1885  000098  6F7D               	movwf	i2c_read_serial@data_out& (0+255),b
  1886  00009A  0E00               	movlw	high _data_out
  1887  00009C  6F7E               	movwf	(i2c_read_serial@data_out+1)& (0+255),b
  1888  00009E  0E04               	movlw	4
  1889  0000A0  6F7F               	movwf	i2c_read_serial@length& (0+255),b
  1890  0000A2  0E27               	movlw	39
  1891  0000A4  EC07  F007         	call	_i2c_read_serial
  1892                           
  1893                           ;main.c: 319:     tmp_moist = ( data_out[0] & 0b00111111 ) << 8;
  1894  0000A8  C0F9  F08E         	movff	_data_out,??_getReading
  1895  0000AC  0E3F               	movlw	63
  1896  0000AE  0100               	movlb	0	; () banked
  1897  0000B0  178E               	andwf	??_getReading& (0+255),f,b
  1898  0000B2  518E               	movf	??_getReading& (0+255),w,b
  1899  0000B4  6F90               	movwf	(??_getReading+2)& (0+255),b
  1900  0000B6  6B8F               	clrf	(??_getReading+1)& (0+255),b
  1901  0000B8  C08F  F096         	movff	??_getReading+1,getReading@tmp_moist
  1902  0000BC  C090  F097         	movff	??_getReading+2,getReading@tmp_moist+1
  1903  0000C0  0E00               	movlw	0
  1904  0000C2  BF97               	btfsc	(getReading@tmp_moist+1)& (0+255),7,b
  1905  0000C4  0EFF               	movlw	-1
  1906  0000C6  6F98               	movwf	(getReading@tmp_moist+2)& (0+255),b
  1907  0000C8  6F99               	movwf	(getReading@tmp_moist+3)& (0+255),b
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;main.c: 320:     tmp_moist += data_out[1];
  1911  0000CA  51FA               	movf	(_data_out+1)& (0+255),w,b
  1912  0000CC  2796               	addwf	getReading@tmp_moist& (0+255),f,b
  1913  0000CE  0E00               	movlw	0
  1914  0000D0  2397               	addwfc	(getReading@tmp_moist+1)& (0+255),f,b
  1915  0000D2  2398               	addwfc	(getReading@tmp_moist+2)& (0+255),f,b
  1916  0000D4  2399               	addwfc	(getReading@tmp_moist+3)& (0+255),f,b
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;main.c: 321:     tmp_moist *= 100;
  1920  0000D6  C096  F005         	movff	getReading@tmp_moist,___lmul@multiplier
  1921  0000DA  C097  F006         	movff	getReading@tmp_moist+1,___lmul@multiplier+1
  1922  0000DE  C098  F007         	movff	getReading@tmp_moist+2,___lmul@multiplier+2
  1923  0000E2  C099  F008         	movff	getReading@tmp_moist+3,___lmul@multiplier+3
  1924  0000E6  0E64               	movlw	100
  1925  0000E8  6E09               	movwf	___lmul@multiplicand,c
  1926  0000EA  0E00               	movlw	0
  1927  0000EC  6E0A               	movwf	___lmul@multiplicand+1,c
  1928  0000EE  0E00               	movlw	0
  1929  0000F0  6E0B               	movwf	___lmul@multiplicand+2,c
  1930  0000F2  0E00               	movlw	0
  1931  0000F4  6E0C               	movwf	___lmul@multiplicand+3,c
  1932  0000F6  ECCD  F00A         	call	___lmul	;wreg free
  1933  0000FA  C005  F096         	movff	?___lmul,getReading@tmp_moist
  1934  0000FE  C006  F097         	movff	?___lmul+1,getReading@tmp_moist+1
  1935  000102  C007  F098         	movff	?___lmul+2,getReading@tmp_moist+2
  1936  000106  C008  F099         	movff	?___lmul+3,getReading@tmp_moist+3
  1937                           
  1938                           ;main.c: 322:     tmp_moist /= 16382;
  1939  00010A  C096  F005         	movff	getReading@tmp_moist,___lldiv@dividend
  1940  00010E  C097  F006         	movff	getReading@tmp_moist+1,___lldiv@dividend+1
  1941  000112  C098  F007         	movff	getReading@tmp_moist+2,___lldiv@dividend+2
  1942  000116  C099  F008         	movff	getReading@tmp_moist+3,___lldiv@dividend+3
  1943  00011A  0EFE               	movlw	254
  1944  00011C  6E09               	movwf	___lldiv@divisor,c
  1945  00011E  0E3F               	movlw	63
  1946  000120  6E0A               	movwf	___lldiv@divisor+1,c
  1947  000122  0E00               	movlw	0
  1948  000124  6E0B               	movwf	___lldiv@divisor+2,c
  1949  000126  0E00               	movlw	0
  1950  000128  6E0C               	movwf	___lldiv@divisor+3,c
  1951  00012A  EC7C  F009         	call	___lldiv	;wreg free
  1952  00012E  C005  F096         	movff	?___lldiv,getReading@tmp_moist
  1953  000132  C006  F097         	movff	?___lldiv+1,getReading@tmp_moist+1
  1954  000136  C007  F098         	movff	?___lldiv+2,getReading@tmp_moist+2
  1955  00013A  C008  F099         	movff	?___lldiv+3,getReading@tmp_moist+3
  1956                           
  1957                           ;main.c: 324:     updateMoist( (int8_t) tmp_moist);
  1958  00013E  0100               	movlb	0	; () banked
  1959  000140  5196               	movf	getReading@tmp_moist& (0+255),w,b
  1960  000142  ECF1  F008         	call	_updateMoist
  1961                           
  1962                           ;main.c: 327:     tmp_temp = data_out[2] << 8;
  1963  000146  0100               	movlb	0	; () banked
  1964  000148  51FB               	movf	(_data_out+2)& (0+255),w,b
  1965  00014A  6F8F               	movwf	(??_getReading+1)& (0+255),b
  1966  00014C  6B8E               	clrf	??_getReading& (0+255),b
  1967  00014E  C08E  F09B         	movff	??_getReading,getReading@tmp_temp
  1968  000152  C08F  F09C         	movff	??_getReading+1,getReading@tmp_temp+1
  1969  000156  0E00               	movlw	0
  1970  000158  BF9C               	btfsc	(getReading@tmp_temp+1)& (0+255),7,b
  1971  00015A  0EFF               	movlw	-1
  1972  00015C  6F9D               	movwf	(getReading@tmp_temp+2)& (0+255),b
  1973  00015E  6F9E               	movwf	(getReading@tmp_temp+3)& (0+255),b
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;main.c: 328:     tmp_temp += data_out[3];
  1977  000160  51FC               	movf	(_data_out+3)& (0+255),w,b
  1978  000162  279B               	addwf	getReading@tmp_temp& (0+255),f,b
  1979  000164  0E00               	movlw	0
  1980  000166  239C               	addwfc	(getReading@tmp_temp+1)& (0+255),f,b
  1981  000168  239D               	addwfc	(getReading@tmp_temp+2)& (0+255),f,b
  1982  00016A  239E               	addwfc	(getReading@tmp_temp+3)& (0+255),f,b
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;main.c: 329:     tmp_temp >>= 2;
  1986  00016C  0E02               	movlw	2
  1987  00016E  6F8E               	movwf	??_getReading& (0+255),b
  1988  000170                     u3075:
  1989  000170  359E               	rlcf	(getReading@tmp_temp+3)& (0+255),w,b
  1990  000172  339E               	rrcf	(getReading@tmp_temp+3)& (0+255),f,b
  1991  000174  339D               	rrcf	(getReading@tmp_temp+2)& (0+255),f,b
  1992  000176  339C               	rrcf	(getReading@tmp_temp+1)& (0+255),f,b
  1993  000178  339B               	rrcf	getReading@tmp_temp& (0+255),f,b
  1994  00017A  2F8E               	decfsz	??_getReading& (0+255),f,b
  1995  00017C  D7F9               	goto	u3075
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;main.c: 331:     tmp_temp *= 16500;
  1999  00017E  C09B  F005         	movff	getReading@tmp_temp,___lmul@multiplier
  2000  000182  C09C  F006         	movff	getReading@tmp_temp+1,___lmul@multiplier+1
  2001  000186  C09D  F007         	movff	getReading@tmp_temp+2,___lmul@multiplier+2
  2002  00018A  C09E  F008         	movff	getReading@tmp_temp+3,___lmul@multiplier+3
  2003  00018E  0E74               	movlw	116
  2004  000190  6E09               	movwf	___lmul@multiplicand,c
  2005  000192  0E40               	movlw	64
  2006  000194  6E0A               	movwf	___lmul@multiplicand+1,c
  2007  000196  0E00               	movlw	0
  2008  000198  6E0B               	movwf	___lmul@multiplicand+2,c
  2009  00019A  0E00               	movlw	0
  2010  00019C  6E0C               	movwf	___lmul@multiplicand+3,c
  2011  00019E  ECCD  F00A         	call	___lmul	;wreg free
  2012  0001A2  C005  F09B         	movff	?___lmul,getReading@tmp_temp
  2013  0001A6  C006  F09C         	movff	?___lmul+1,getReading@tmp_temp+1
  2014  0001AA  C007  F09D         	movff	?___lmul+2,getReading@tmp_temp+2
  2015  0001AE  C008  F09E         	movff	?___lmul+3,getReading@tmp_temp+3
  2016                           
  2017                           ;main.c: 332:     tmp_temp /= 16382;
  2018  0001B2  C09B  F005         	movff	getReading@tmp_temp,___aldiv@dividend
  2019  0001B6  C09C  F006         	movff	getReading@tmp_temp+1,___aldiv@dividend+1
  2020  0001BA  C09D  F007         	movff	getReading@tmp_temp+2,___aldiv@dividend+2
  2021  0001BE  C09E  F008         	movff	getReading@tmp_temp+3,___aldiv@dividend+3
  2022  0001C2  0EFE               	movlw	254
  2023  0001C4  6E09               	movwf	___aldiv@divisor,c
  2024  0001C6  0E3F               	movlw	63
  2025  0001C8  6E0A               	movwf	___aldiv@divisor+1,c
  2026  0001CA  0E00               	movlw	0
  2027  0001CC  6E0B               	movwf	___aldiv@divisor+2,c
  2028  0001CE  0E00               	movlw	0
  2029  0001D0  6E0C               	movwf	___aldiv@divisor+3,c
  2030  0001D2  EC9C  F007         	call	___aldiv	;wreg free
  2031  0001D6  C005  F09B         	movff	?___aldiv,getReading@tmp_temp
  2032  0001DA  C006  F09C         	movff	?___aldiv+1,getReading@tmp_temp+1
  2033  0001DE  C007  F09D         	movff	?___aldiv+2,getReading@tmp_temp+2
  2034  0001E2  C008  F09E         	movff	?___aldiv+3,getReading@tmp_temp+3
  2035                           
  2036                           ;main.c: 333:     tmp_temp -= 4000;
  2037  0001E6  0E60               	movlw	96
  2038  0001E8  0100               	movlb	0	; () banked
  2039  0001EA  279B               	addwf	getReading@tmp_temp& (0+255),f,b
  2040  0001EC  0EF0               	movlw	240
  2041  0001EE  239C               	addwfc	(getReading@tmp_temp+1)& (0+255),f,b
  2042  0001F0  0EFF               	movlw	255
  2043  0001F2  239D               	addwfc	(getReading@tmp_temp+2)& (0+255),f,b
  2044  0001F4  0EFF               	movlw	255
  2045  0001F6  239E               	addwfc	(getReading@tmp_temp+3)& (0+255),f,b
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;main.c: 336:     tmp_string[length++] = 0x40;
  2049  0001F8  0E40               	movlw	64
  2050  0001FA  6FEA               	movwf	_tmp_string& (0+255),b
  2051                           
  2052                           ; BSR set to: 0
  2053  0001FC  2B9A               	incf	getReading@length& (0+255),f,b
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;main.c: 339:     if(tmp_temp < 0) {
  2057  0001FE  AF9E               	btfss	(getReading@tmp_temp+3)& (0+255),7,b
  2058  000200  D023               	goto	l3455
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;main.c: 340:         tmp_string[length++] = 0x2D;
  2062  000202  0EEA               	movlw	low _tmp_string
  2063  000204  259A               	addwf	getReading@length& (0+255),w,b
  2064  000206  6ED9               	movwf	fsr2l,c
  2065  000208  6ADA               	clrf	fsr2h,c
  2066  00020A  0E00               	movlw	high _tmp_string
  2067  00020C  22DA               	addwfc	fsr2h,f,c
  2068  00020E  0E2D               	movlw	45
  2069  000210  6EDF               	movwf	indf2,c
  2070                           
  2071                           ; BSR set to: 0
  2072  000212  2B9A               	incf	getReading@length& (0+255),f,b
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 341:         tmp_temp *= -1;
  2076  000214  C09B  F005         	movff	getReading@tmp_temp,___lmul@multiplier
  2077  000218  C09C  F006         	movff	getReading@tmp_temp+1,___lmul@multiplier+1
  2078  00021C  C09D  F007         	movff	getReading@tmp_temp+2,___lmul@multiplier+2
  2079  000220  C09E  F008         	movff	getReading@tmp_temp+3,___lmul@multiplier+3
  2080  000224  0EFF               	movlw	255
  2081  000226  6E09               	movwf	___lmul@multiplicand,c
  2082  000228  0EFF               	movlw	255
  2083  00022A  6E0A               	movwf	___lmul@multiplicand+1,c
  2084  00022C  0EFF               	movlw	255
  2085  00022E  6E0B               	movwf	___lmul@multiplicand+2,c
  2086  000230  0EFF               	movlw	255
  2087  000232  6E0C               	movwf	___lmul@multiplicand+3,c
  2088  000234  ECCD  F00A         	call	___lmul	;wreg free
  2089  000238  C005  F09B         	movff	?___lmul,getReading@tmp_temp
  2090  00023C  C006  F09C         	movff	?___lmul+1,getReading@tmp_temp+1
  2091  000240  C007  F09D         	movff	?___lmul+2,getReading@tmp_temp+2
  2092  000244  C008  F09E         	movff	?___lmul+3,getReading@tmp_temp+3
  2093  000248                     l3455:
  2094                           
  2095                           ;main.c: 345:     int8_t decimal2 = tmp_temp % 10;
  2096  000248  C09B  F005         	movff	getReading@tmp_temp,___almod@dividend
  2097  00024C  C09C  F006         	movff	getReading@tmp_temp+1,___almod@dividend+1
  2098  000250  C09D  F007         	movff	getReading@tmp_temp+2,___almod@dividend+2
  2099  000254  C09E  F008         	movff	getReading@tmp_temp+3,___almod@dividend+3
  2100  000258  0E0A               	movlw	10
  2101  00025A  6E09               	movwf	___almod@divisor,c
  2102  00025C  0E00               	movlw	0
  2103  00025E  6E0A               	movwf	___almod@divisor+1,c
  2104  000260  0E00               	movlw	0
  2105  000262  6E0B               	movwf	___almod@divisor+2,c
  2106  000264  0E00               	movlw	0
  2107  000266  6E0C               	movwf	___almod@divisor+3,c
  2108  000268  EC02  F008         	call	___almod	;wreg free
  2109  00026C  5005               	movf	?___almod,w,c
  2110  00026E  0100               	movlb	0	; () banked
  2111  000270  6F92               	movwf	getReading@decimal2& (0+255),b
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;main.c: 346:     tmp_temp /= 10;
  2115  000272  C09B  F005         	movff	getReading@tmp_temp,___aldiv@dividend
  2116  000276  C09C  F006         	movff	getReading@tmp_temp+1,___aldiv@dividend+1
  2117  00027A  C09D  F007         	movff	getReading@tmp_temp+2,___aldiv@dividend+2
  2118  00027E  C09E  F008         	movff	getReading@tmp_temp+3,___aldiv@dividend+3
  2119  000282  0E0A               	movlw	10
  2120  000284  6E09               	movwf	___aldiv@divisor,c
  2121  000286  0E00               	movlw	0
  2122  000288  6E0A               	movwf	___aldiv@divisor+1,c
  2123  00028A  0E00               	movlw	0
  2124  00028C  6E0B               	movwf	___aldiv@divisor+2,c
  2125  00028E  0E00               	movlw	0
  2126  000290  6E0C               	movwf	___aldiv@divisor+3,c
  2127  000292  EC9C  F007         	call	___aldiv	;wreg free
  2128  000296  C005  F09B         	movff	?___aldiv,getReading@tmp_temp
  2129  00029A  C006  F09C         	movff	?___aldiv+1,getReading@tmp_temp+1
  2130  00029E  C007  F09D         	movff	?___aldiv+2,getReading@tmp_temp+2
  2131  0002A2  C008  F09E         	movff	?___aldiv+3,getReading@tmp_temp+3
  2132                           
  2133                           ;main.c: 349:     int8_t decimal1 = tmp_temp % 10;
  2134  0002A6  C09B  F005         	movff	getReading@tmp_temp,___almod@dividend
  2135  0002AA  C09C  F006         	movff	getReading@tmp_temp+1,___almod@dividend+1
  2136  0002AE  C09D  F007         	movff	getReading@tmp_temp+2,___almod@dividend+2
  2137  0002B2  C09E  F008         	movff	getReading@tmp_temp+3,___almod@dividend+3
  2138  0002B6  0E0A               	movlw	10
  2139  0002B8  6E09               	movwf	___almod@divisor,c
  2140  0002BA  0E00               	movlw	0
  2141  0002BC  6E0A               	movwf	___almod@divisor+1,c
  2142  0002BE  0E00               	movlw	0
  2143  0002C0  6E0B               	movwf	___almod@divisor+2,c
  2144  0002C2  0E00               	movlw	0
  2145  0002C4  6E0C               	movwf	___almod@divisor+3,c
  2146  0002C6  EC02  F008         	call	___almod	;wreg free
  2147  0002CA  5005               	movf	?___almod,w,c
  2148  0002CC  0100               	movlb	0	; () banked
  2149  0002CE  6F95               	movwf	getReading@decimal1& (0+255),b
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;main.c: 351:     if(decimal2 >= 5 ) {
  2153  0002D0  5192               	movf	getReading@decimal2& (0+255),w,b
  2154  0002D2  0A80               	xorlw	128
  2155  0002D4  0F7B               	addlw	-133
  2156  0002D6  A0D8               	btfss	status,0,c
  2157  0002D8  D007               	goto	l3467
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;main.c: 352:         decimal1++;
  2161  0002DA  2B95               	incf	getReading@decimal1& (0+255),f,b
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;main.c: 353:         tmp_temp++;
  2165  0002DC  0E01               	movlw	1
  2166  0002DE  279B               	addwf	getReading@tmp_temp& (0+255),f,b
  2167  0002E0  0E00               	movlw	0
  2168  0002E2  239C               	addwfc	(getReading@tmp_temp+1)& (0+255),f,b
  2169  0002E4  239D               	addwfc	(getReading@tmp_temp+2)& (0+255),f,b
  2170  0002E6  239E               	addwfc	(getReading@tmp_temp+3)& (0+255),f,b
  2171  0002E8                     l3467:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;main.c: 356:     tmp_temp /= 10;
  2175  0002E8  C09B  F005         	movff	getReading@tmp_temp,___aldiv@dividend
  2176  0002EC  C09C  F006         	movff	getReading@tmp_temp+1,___aldiv@dividend+1
  2177  0002F0  C09D  F007         	movff	getReading@tmp_temp+2,___aldiv@dividend+2
  2178  0002F4  C09E  F008         	movff	getReading@tmp_temp+3,___aldiv@dividend+3
  2179  0002F8  0E0A               	movlw	10
  2180  0002FA  6E09               	movwf	___aldiv@divisor,c
  2181  0002FC  0E00               	movlw	0
  2182  0002FE  6E0A               	movwf	___aldiv@divisor+1,c
  2183  000300  0E00               	movlw	0
  2184  000302  6E0B               	movwf	___aldiv@divisor+2,c
  2185  000304  0E00               	movlw	0
  2186  000306  6E0C               	movwf	___aldiv@divisor+3,c
  2187  000308  EC9C  F007         	call	___aldiv	;wreg free
  2188  00030C  C005  F09B         	movff	?___aldiv,getReading@tmp_temp
  2189  000310  C006  F09C         	movff	?___aldiv+1,getReading@tmp_temp+1
  2190  000314  C007  F09D         	movff	?___aldiv+2,getReading@tmp_temp+2
  2191  000318  C008  F09E         	movff	?___aldiv+3,getReading@tmp_temp+3
  2192                           
  2193                           ;main.c: 359:     if(tmp_temp > 9) {
  2194  00031C  0100               	movlb	0	; () banked
  2195  00031E  BF9E               	btfsc	(getReading@tmp_temp+3)& (0+255),7,b
  2196  000320  D046               	goto	l3483
  2197  000322  519E               	movf	(getReading@tmp_temp+3)& (0+255),w,b
  2198  000324  119D               	iorwf	(getReading@tmp_temp+2)& (0+255),w,b
  2199  000326  119C               	iorwf	(getReading@tmp_temp+1)& (0+255),w,b
  2200  000328  E104               	bnz	u3100
  2201  00032A  0E0A               	movlw	10
  2202  00032C  5D9B               	subwf	getReading@tmp_temp& (0+255),w,b
  2203  00032E  A0D8               	btfss	status,0,c
  2204  000330  D03E               	goto	l3483
  2205  000332                     u3100:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;main.c: 360:         uint8_t ones = (uint8_t) tmp_temp % 10;
  2209  000332  C09B  F005         	movff	getReading@tmp_temp,___awmod@dividend
  2210  000336  6A06               	clrf	___awmod@dividend+1,c
  2211  000338  0E00               	movlw	0
  2212  00033A  6E08               	movwf	___awmod@divisor+1,c
  2213  00033C  0E0A               	movlw	10
  2214  00033E  6E07               	movwf	___awmod@divisor,c
  2215  000340  EC33  F00A         	call	___awmod	;wreg free
  2216  000344  5005               	movf	?___awmod,w,c
  2217  000346  0100               	movlb	0	; () banked
  2218  000348  6F93               	movwf	getReading@ones& (0+255),b
  2219                           
  2220                           ;main.c: 361:         tmp_temp /= 10;
  2221  00034A  C09B  F005         	movff	getReading@tmp_temp,___aldiv@dividend
  2222  00034E  C09C  F006         	movff	getReading@tmp_temp+1,___aldiv@dividend+1
  2223  000352  C09D  F007         	movff	getReading@tmp_temp+2,___aldiv@dividend+2
  2224  000356  C09E  F008         	movff	getReading@tmp_temp+3,___aldiv@dividend+3
  2225  00035A  0E0A               	movlw	10
  2226  00035C  6E09               	movwf	___aldiv@divisor,c
  2227  00035E  0E00               	movlw	0
  2228  000360  6E0A               	movwf	___aldiv@divisor+1,c
  2229  000362  0E00               	movlw	0
  2230  000364  6E0B               	movwf	___aldiv@divisor+2,c
  2231  000366  0E00               	movlw	0
  2232  000368  6E0C               	movwf	___aldiv@divisor+3,c
  2233  00036A  EC9C  F007         	call	___aldiv	;wreg free
  2234  00036E  C005  F09B         	movff	?___aldiv,getReading@tmp_temp
  2235  000372  C006  F09C         	movff	?___aldiv+1,getReading@tmp_temp+1
  2236  000376  C007  F09D         	movff	?___aldiv+2,getReading@tmp_temp+2
  2237  00037A  C008  F09E         	movff	?___aldiv+3,getReading@tmp_temp+3
  2238                           
  2239                           ;main.c: 362:         uint8_t tens = (uint8_t) tmp_temp;
  2240  00037E  C09B  F094         	movff	getReading@tmp_temp,getReading@tens
  2241                           
  2242                           ;main.c: 364:         tmp_string[length++] = tens | 0b00110000;
  2243  000382  0EEA               	movlw	low _tmp_string
  2244  000384  0100               	movlb	0	; () banked
  2245  000386  259A               	addwf	getReading@length& (0+255),w,b
  2246  000388  6ED9               	movwf	fsr2l,c
  2247  00038A  6ADA               	clrf	fsr2h,c
  2248  00038C  0E00               	movlw	high _tmp_string
  2249  00038E  22DA               	addwfc	fsr2h,f,c
  2250  000390  5194               	movf	getReading@tens& (0+255),w,b
  2251  000392  0930               	iorlw	48
  2252  000394  6EDF               	movwf	indf2,c
  2253                           
  2254                           ; BSR set to: 0
  2255  000396  2B9A               	incf	getReading@length& (0+255),f,b
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;main.c: 365:         tmp_string[length++] = ones | 0b00110000;
  2259  000398  0EEA               	movlw	low _tmp_string
  2260  00039A  259A               	addwf	getReading@length& (0+255),w,b
  2261  00039C  6ED9               	movwf	fsr2l,c
  2262  00039E  6ADA               	clrf	fsr2h,c
  2263  0003A0  0E00               	movlw	high _tmp_string
  2264  0003A2  22DA               	addwfc	fsr2h,f,c
  2265  0003A4  5193               	movf	getReading@ones& (0+255),w,b
  2266  0003A6  0930               	iorlw	48
  2267  0003A8  6EDF               	movwf	indf2,c
  2268  0003AA                     l3481:
  2269                           
  2270                           ; BSR set to: 0
  2271  0003AA  2B9A               	incf	getReading@length& (0+255),f,b
  2272                           
  2273                           ;main.c: 366:     } else {
  2274  0003AC  D009               	goto	l3487
  2275  0003AE                     l3483:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;main.c: 367:         tmp_string[length++] = tmp_temp;
  2279  0003AE  0EEA               	movlw	low _tmp_string
  2280  0003B0  259A               	addwf	getReading@length& (0+255),w,b
  2281  0003B2  6ED9               	movwf	fsr2l,c
  2282  0003B4  6ADA               	clrf	fsr2h,c
  2283  0003B6  0E00               	movlw	high _tmp_string
  2284  0003B8  22DA               	addwfc	fsr2h,f,c
  2285  0003BA  C09B  FFDF         	movff	getReading@tmp_temp,indf2
  2286  0003BE  D7F5               	goto	l3481
  2287  0003C0                     l3487:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;main.c: 371:     tmp_string[length++] = 0x2C;
  2291  0003C0  0EEA               	movlw	low _tmp_string
  2292  0003C2  259A               	addwf	getReading@length& (0+255),w,b
  2293  0003C4  6ED9               	movwf	fsr2l,c
  2294  0003C6  6ADA               	clrf	fsr2h,c
  2295  0003C8  0E00               	movlw	high _tmp_string
  2296  0003CA  22DA               	addwfc	fsr2h,f,c
  2297  0003CC  0E2C               	movlw	44
  2298  0003CE  6EDF               	movwf	indf2,c
  2299  0003D0  2B9A               	incf	getReading@length& (0+255),f,b
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;main.c: 372:     tmp_string[length++] = decimal1 | 0b00110000;
  2303  0003D2  0EEA               	movlw	low _tmp_string
  2304  0003D4  259A               	addwf	getReading@length& (0+255),w,b
  2305  0003D6  6ED9               	movwf	fsr2l,c
  2306  0003D8  6ADA               	clrf	fsr2h,c
  2307  0003DA  0E00               	movlw	high _tmp_string
  2308  0003DC  22DA               	addwfc	fsr2h,f,c
  2309  0003DE  5195               	movf	getReading@decimal1& (0+255),w,b
  2310  0003E0  0930               	iorlw	48
  2311  0003E2  6EDF               	movwf	indf2,c
  2312                           
  2313                           ; BSR set to: 0
  2314  0003E4  2B9A               	incf	getReading@length& (0+255),f,b
  2315                           
  2316                           ;main.c: 376:     tmp_string[length++] = 0x00;
  2317  0003E6  0EEA               	movlw	low _tmp_string
  2318  0003E8  259A               	addwf	getReading@length& (0+255),w,b
  2319  0003EA  6ED9               	movwf	fsr2l,c
  2320  0003EC  6ADA               	clrf	fsr2h,c
  2321  0003EE  0E00               	movlw	high _tmp_string
  2322  0003F0  22DA               	addwfc	fsr2h,f,c
  2323  0003F2  0E00               	movlw	0
  2324  0003F4  6EDF               	movwf	indf2,c
  2325                           
  2326                           ; BSR set to: 0
  2327  0003F6  2B9A               	incf	getReading@length& (0+255),f,b
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;main.c: 385:     i2c_write_serial(display_addr, temp_pos, 2);
  2331  0003F8  0EC9               	movlw	low _temp_pos
  2332  0003FA  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  2333  0003FC  0E00               	movlw	high _temp_pos
  2334  0003FE  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2335  000400  0E02               	movlw	2
  2336  000402  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  2337  000404  0E3C               	movlw	60
  2338  000406  ECE0  F004         	call	_i2c_write_serial
  2339                           
  2340                           ;main.c: 386:     i2c_write_serial(display_addr, tmp_string, length);
  2341  00040A  0EEA               	movlw	low _tmp_string
  2342  00040C  0100               	movlb	0	; () banked
  2343  00040E  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  2344  000410  0E00               	movlw	high _tmp_string
  2345  000412  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2346  000414  C09A  F07F         	movff	getReading@length,i2c_write_serial@length
  2347  000418  0E3C               	movlw	60
  2348  00041A  ECE0  F004         	call	_i2c_write_serial
  2349  00041E  0012               	return		;funcret
  2350  000420                     __end_of_getReading:
  2351                           	opt callstack 0
  2352                           
  2353 ;; *************** function _updateMoist *****************
  2354 ;; Defined at:
  2355 ;;		line 284 in file "main.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  moist           1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  moist           1   45[BANK0 ] unsigned char 
  2360 ;;  output         10   35[BANK0 ] unsigned char [10]
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;Total ram usage:       11 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:   14
  2377 ;; This function calls:
  2378 ;;		___awdiv
  2379 ;;		___awmod
  2380 ;;		_i2c_write_serial
  2381 ;; This function is called by:
  2382 ;;		_getReading
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text3
  2387  0011E2                     __ptext3:
  2388                           	opt callstack 0
  2389  0011E2                     _updateMoist:
  2390                           	opt callstack 15
  2391                           
  2392                           ;incstack = 0
  2393                           ;updateMoist@moist stored from wreg
  2394  0011E2  0100               	movlb	0	; () banked
  2395  0011E4  6F8D               	movwf	updateMoist@moist& (0+255),b
  2396                           
  2397                           ;main.c: 285:     uint8_t output[10];;main.c: 286:     output[0] = 0x40;
  2398  0011E6  0E40               	movlw	64
  2399  0011E8  0100               	movlb	0	; () banked
  2400  0011EA  6F83               	movwf	updateMoist@output& (0+255),b
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;main.c: 288:     if(moist >= 100) {
  2404  0011EC  0E63               	movlw	99
  2405  0011EE  658D               	cpfsgt	updateMoist@moist& (0+255),b
  2406  0011F0  D007               	goto	l3401
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;main.c: 289:         output[1] = 1;
  2410  0011F2  0E01               	movlw	1
  2411  0011F4  6F84               	movwf	(updateMoist@output+1)& (0+255),b
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;main.c: 290:         output[1] |= 0b00110000;
  2415  0011F6  0E30               	movlw	48
  2416  0011F8  1384               	iorwf	(updateMoist@output+1)& (0+255),f,b
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;main.c: 291:         moist -= 100;
  2420  0011FA  0E64               	movlw	100
  2421  0011FC  5F8D               	subwf	updateMoist@moist& (0+255),f,b
  2422                           
  2423                           ;main.c: 292:     } else {
  2424  0011FE  D002               	goto	l3403
  2425  001200                     l3401:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;main.c: 293:         output[1] = 0b10100000;
  2429  001200  0EA0               	movlw	160
  2430  001202  6F84               	movwf	(updateMoist@output+1)& (0+255),b
  2431  001204                     l3403:
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;main.c: 296:     if(moist >= 10) {
  2435  001204  0E09               	movlw	9
  2436  001206  658D               	cpfsgt	updateMoist@moist& (0+255),b
  2437  001208  D01A               	goto	l3407
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;main.c: 297:         output[2] = (moist / 10) | 0b00110000;
  2441  00120A  C08D  F005         	movff	updateMoist@moist,___awdiv@dividend
  2442  00120E  6A06               	clrf	___awdiv@dividend+1,c
  2443  001210  0E00               	movlw	0
  2444  001212  6E08               	movwf	___awdiv@divisor+1,c
  2445  001214  0E0A               	movlw	10
  2446  001216  6E07               	movwf	___awdiv@divisor,c
  2447  001218  EC3A  F009         	call	___awdiv	;wreg free
  2448  00121C  5005               	movf	?___awdiv,w,c
  2449  00121E  0930               	iorlw	48
  2450  001220  0100               	movlb	0	; () banked
  2451  001222  6F85               	movwf	(updateMoist@output+2)& (0+255),b
  2452                           
  2453                           ;main.c: 298:         output[3] = (moist % 10) | 0b00110000;
  2454  001224  C08D  F005         	movff	updateMoist@moist,___awmod@dividend
  2455  001228  6A06               	clrf	___awmod@dividend+1,c
  2456  00122A  0E00               	movlw	0
  2457  00122C  6E08               	movwf	___awmod@divisor+1,c
  2458  00122E  0E0A               	movlw	10
  2459  001230  6E07               	movwf	___awmod@divisor,c
  2460  001232  EC33  F00A         	call	___awmod	;wreg free
  2461  001236  5005               	movf	?___awmod,w,c
  2462  001238  0930               	iorlw	48
  2463  00123A  0100               	movlb	0	; () banked
  2464  00123C  D006               	goto	L1
  2465  00123E                     l3407:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;main.c: 300:         output[1] = 0b10100000;
  2469  00123E  0EA0               	movlw	160
  2470  001240  6F84               	movwf	(updateMoist@output+1)& (0+255),b
  2471                           
  2472                           ;main.c: 301:         output[2] = 0b10100000;
  2473  001242  0EA0               	movlw	160
  2474  001244  6F85               	movwf	(updateMoist@output+2)& (0+255),b
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;main.c: 302:         output[3] = moist | 0b00110000;
  2478  001246  518D               	movf	updateMoist@moist& (0+255),w,b
  2479  001248  0930               	iorlw	48
  2480  00124A                     L1:
  2481  00124A  6F86               	movwf	(updateMoist@output+3)& (0+255),b
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;main.c: 305:     i2c_write_serial(display_addr, moist_pos, 2);
  2485  00124C  0EC7               	movlw	low _moist_pos
  2486  00124E  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  2487  001250  0E00               	movlw	high _moist_pos
  2488  001252  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2489  001254  0E02               	movlw	2
  2490  001256  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  2491  001258  0E3C               	movlw	60
  2492  00125A  ECE0  F004         	call	_i2c_write_serial
  2493                           
  2494                           ;main.c: 306:     i2c_write_serial(display_addr, output, 4);
  2495  00125E  0E83               	movlw	low updateMoist@output
  2496  001260  0100               	movlb	0	; () banked
  2497  001262  6F7D               	movwf	i2c_write_serial@data& (0+255),b
  2498  001264  0E00               	movlw	high updateMoist@output
  2499  001266  6F7E               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2500  001268  0E04               	movlw	4
  2501  00126A  6F7F               	movwf	i2c_write_serial@length& (0+255),b
  2502  00126C  0E3C               	movlw	60
  2503  00126E  ECE0  F004         	call	_i2c_write_serial
  2504  001272  0012               	return		;funcret
  2505  001274                     __end_of_updateMoist:
  2506                           	opt callstack 0
  2507                           
  2508 ;; *************** function _i2c_write_serial *****************
  2509 ;; Defined at:
  2510 ;;		line 118 in file "main.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  addr            1    wreg     unsigned char 
  2513 ;;  data            2   29[BANK0 ] PTR unsigned char 
  2514 ;;		 -> tmp_string(15), NULL(0), moist_pos(2), updateMoist@output(10), 
  2515 ;;		 -> updateTemperature@output(4), minus(2), temp_pos(2), eeprom_addr0000(2), 
  2516 ;;		 -> eeprom_write(17), custom_char0(11), moist_string(18), shift_line(2), 
  2517 ;;		 -> temp_string(18), first_line(2), display_init(4), 
  2518 ;;  length          1   31[BANK0 ] unsigned char 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  addr            1   32[BANK0 ] unsigned char 
  2521 ;;  i               1   34[BANK0 ] unsigned char 
  2522 ;;  targetAddr      1   33[BANK0 ] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2532 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;Total ram usage:        8 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:   13
  2539 ;; This function calls:
  2540 ;;		_printf
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;;		_updateMoist
  2544 ;;		_getReading
  2545 ;;		_updateTemperature
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text4
  2550  0009C0                     __ptext4:
  2551                           	opt callstack 0
  2552  0009C0                     _i2c_write_serial:
  2553                           	opt callstack 17
  2554                           
  2555                           ;incstack = 0
  2556                           ;i2c_write_serial@addr stored from wreg
  2557  0009C0  0100               	movlb	0	; () banked
  2558  0009C2  6F80               	movwf	i2c_write_serial@addr& (0+255),b
  2559                           
  2560                           ;main.c: 119:     uint8_t targetAddr = addr<<1;
  2561  0009C4  0100               	movlb	0	; () banked
  2562  0009C6  5180               	movf	i2c_write_serial@addr& (0+255),w,b
  2563  0009C8  2580               	addwf	i2c_write_serial@addr& (0+255),w,b
  2564  0009CA  6F81               	movwf	i2c_write_serial@targetAddr& (0+255),b
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;main.c: 121:     printf("\n\r***********WRITE****************\n\r");
  2568  0009CC  0E6C               	movlw	low STR_4
  2569  0009CE  6F73               	movwf	printf@fmt& (0+255),b
  2570  0009D0  0EFE               	movlw	high STR_4
  2571  0009D2  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2572  0009D4  EC57  F00C         	call	_printf	;wreg free
  2573  0009D8                     l319:
  2574  0009D8  B4C7               	btfsc	4039,2,c	;volatile
  2575  0009DA  D7FE               	goto	l319
  2576  0009DC  CFC5 F055          	movff	4037,??_i2c_write_serial	;volatile
  2577  0009E0  0E1F               	movlw	31
  2578  0009E2  1655               	andwf	??_i2c_write_serial,f,c
  2579  0009E4  A4D8               	btfss	status,2,c
  2580  0009E6  D7F8               	goto	l319
  2581                           
  2582                           ;main.c: 127:         printf("Bussen er klar\n\r");
  2583  0009E8  0EC9               	movlw	low STR_5
  2584  0009EA  0100               	movlb	0	; () banked
  2585  0009EC  6F73               	movwf	printf@fmt& (0+255),b
  2586  0009EE  0EFF               	movlw	high STR_5
  2587  0009F0  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2588  0009F2  EC57  F00C         	call	_printf	;wreg free
  2589                           
  2590                           ;main.c: 131:     SSP1CON2bits.SEN = 1;
  2591  0009F6  80C5               	bsf	4037,0,c	;volatile
  2592  0009F8                     l322:
  2593  0009F8  B0C5               	btfsc	4037,0,c	;volatile
  2594  0009FA  D7FE               	goto	l322
  2595                           
  2596                           ;main.c: 134:     printf("Har sendt start\n\r");
  2597  0009FC  0E95               	movlw	low STR_6
  2598  0009FE  0100               	movlb	0	; () banked
  2599  000A00  6F73               	movwf	printf@fmt& (0+255),b
  2600  000A02  0EFF               	movlw	high STR_6
  2601  000A04  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2602  000A06  EC57  F00C         	call	_printf	;wreg free
  2603                           
  2604                           ;main.c: 140:     printf("Addresse: %#02X\r\n", targetAddr);
  2605  000A0A  0E83               	movlw	low STR_7
  2606  000A0C  0100               	movlb	0	; () banked
  2607  000A0E  6F73               	movwf	printf@fmt& (0+255),b
  2608  000A10  0EFF               	movlw	high STR_7
  2609  000A12  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2610  000A14  C081  F075         	movff	i2c_write_serial@targetAddr,?_printf+2
  2611  000A18  6B76               	clrf	(?_printf+3)& (0+255),b
  2612  000A1A  EC57  F00C         	call	_printf	;wreg free
  2613                           
  2614                           ;main.c: 143:     SSP1BUF = targetAddr;
  2615  000A1E  C081  FFC9         	movff	i2c_write_serial@targetAddr,4041	;volatile
  2616  000A22                     l325:
  2617  000A22  B4C7               	btfsc	4039,2,c	;volatile
  2618  000A24  D7FE               	goto	l325
  2619                           
  2620                           ;main.c: 146:     if( SSP1CON2bits.ACKSTAT == 0 ) {
  2621  000A26  BCC5               	btfsc	4037,6,c	;volatile
  2622  000A28  D093               	goto	l3355
  2623                           
  2624                           ;main.c: 148:         printf("ACK - Skrev adresse: %#02X\n\r", targetAddr);
  2625  000A2A  0EF5               	movlw	low STR_8
  2626  000A2C  0100               	movlb	0	; () banked
  2627  000A2E  6F73               	movwf	printf@fmt& (0+255),b
  2628  000A30  0EFE               	movlw	high STR_8
  2629  000A32  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2630  000A34  C081  F075         	movff	i2c_write_serial@targetAddr,?_printf+2
  2631  000A38  6B76               	clrf	(?_printf+3)& (0+255),b
  2632  000A3A  EC57  F00C         	call	_printf	;wreg free
  2633                           
  2634                           ;main.c: 151:         for (uint8_t i=0; i < length ; i++) {
  2635  000A3E  0E00               	movlw	0
  2636  000A40  0100               	movlb	0	; () banked
  2637  000A42  6F82               	movwf	i2c_write_serial@i& (0+255),b
  2638  000A44  D076               	goto	l3351
  2639  000A46                     l3331:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;main.c: 153:             printf("Data: %#02X\r\n", data[i]);
  2643  000A46  0EEA               	movlw	low STR_9
  2644  000A48  6F73               	movwf	printf@fmt& (0+255),b
  2645  000A4A  0EFF               	movlw	high STR_9
  2646  000A4C  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2647  000A4E  5182               	movf	i2c_write_serial@i& (0+255),w,b
  2648  000A50  257D               	addwf	i2c_write_serial@data& (0+255),w,b
  2649  000A52  6ED9               	movwf	fsr2l,c
  2650  000A54  0E00               	movlw	0
  2651  000A56  217E               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2652  000A58  6EDA               	movwf	fsr2h,c
  2653  000A5A  50DF               	movf	indf2,w,c
  2654  000A5C  6E55               	movwf	??_i2c_write_serial& (0+255),c
  2655  000A5E  5055               	movf	??_i2c_write_serial,w,c
  2656  000A60  6F75               	movwf	(?_printf+2)& (0+255),b
  2657  000A62  6B76               	clrf	(?_printf+3)& (0+255),b
  2658  000A64  EC57  F00C         	call	_printf	;wreg free
  2659                           
  2660                           ;main.c: 155:             SSP1BUF = (uint8_t) data[i];
  2661  000A68  0100               	movlb	0	; () banked
  2662  000A6A  5182               	movf	i2c_write_serial@i& (0+255),w,b
  2663  000A6C  257D               	addwf	i2c_write_serial@data& (0+255),w,b
  2664  000A6E  6ED9               	movwf	fsr2l,c
  2665  000A70  0E00               	movlw	0
  2666  000A72  217E               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2667  000A74  6EDA               	movwf	fsr2h,c
  2668  000A76  50DF               	movf	indf2,w,c
  2669  000A78  6EC9               	movwf	4041,c	;volatile
  2670  000A7A                     l331:
  2671  000A7A  B4C7               	btfsc	4039,2,c	;volatile
  2672  000A7C  D7FE               	goto	l331
  2673                           
  2674                           ;main.c: 158:             if( SSP1CON2bits.ACKSTAT == 0 ) {
  2675  000A7E  BCC5               	btfsc	4037,6,c	;volatile
  2676  000A80  D01E               	goto	l3337
  2677                           
  2678                           ;main.c: 160:                 printf("ACK - Skrev data: %#02X - %c\n\r", data[i], data[i
      +                          ]);
  2679  000A82  0ED6               	movlw	low STR_10
  2680  000A84  0100               	movlb	0	; () banked
  2681  000A86  6F73               	movwf	printf@fmt& (0+255),b
  2682  000A88  0EFE               	movlw	high STR_10
  2683  000A8A  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2684  000A8C  5182               	movf	i2c_write_serial@i& (0+255),w,b
  2685  000A8E  257D               	addwf	i2c_write_serial@data& (0+255),w,b
  2686  000A90  6ED9               	movwf	fsr2l,c
  2687  000A92  0E00               	movlw	0
  2688  000A94  217E               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2689  000A96  6EDA               	movwf	fsr2h,c
  2690  000A98  50DF               	movf	indf2,w,c
  2691  000A9A  6E55               	movwf	??_i2c_write_serial& (0+255),c
  2692  000A9C  5055               	movf	??_i2c_write_serial,w,c
  2693  000A9E  6F75               	movwf	(?_printf+2)& (0+255),b
  2694  000AA0  6B76               	clrf	(?_printf+3)& (0+255),b
  2695  000AA2  5182               	movf	i2c_write_serial@i& (0+255),w,b
  2696  000AA4  257D               	addwf	i2c_write_serial@data& (0+255),w,b
  2697  000AA6  6ED9               	movwf	fsr2l,c
  2698  000AA8  0E00               	movlw	0
  2699  000AAA  217E               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2700  000AAC  6EDA               	movwf	fsr2h,c
  2701  000AAE  50DF               	movf	indf2,w,c
  2702  000AB0  6E56               	movwf	(??_i2c_write_serial+1)& (0+255),c
  2703  000AB2  5056               	movf	??_i2c_write_serial+1,w,c
  2704  000AB4  6F77               	movwf	(?_printf+4)& (0+255),b
  2705  000AB6  6B78               	clrf	(?_printf+5)& (0+255),b
  2706  000AB8  EC57  F00C         	call	_printf	;wreg free
  2707                           
  2708                           ;main.c: 162:             } else {
  2709  000ABC  D038               	goto	l3349
  2710  000ABE                     l3337:
  2711                           
  2712                           ;main.c: 164:                 printf("NACK - gensender\r\n");
  2713  000ABE  0E70               	movlw	low STR_11
  2714  000AC0  0100               	movlb	0	; () banked
  2715  000AC2  6F73               	movwf	printf@fmt& (0+255),b
  2716  000AC4  0EFF               	movlw	high STR_11
  2717  000AC6  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2718  000AC8  EC57  F00C         	call	_printf	;wreg free
  2719                           
  2720                           ;main.c: 166:                 SSP1CON2bits.RCEN=1;
  2721  000ACC  86C5               	bsf	4037,3,c	;volatile
  2722  000ACE                     l336:
  2723  000ACE  B6C5               	btfsc	4037,3,c	;volatile
  2724  000AD0  D7FE               	goto	l336
  2725                           
  2726                           ;main.c: 169:                 SSP1BUF = (uint8_t) data[i];
  2727  000AD2  0100               	movlb	0	; () banked
  2728  000AD4  5182               	movf	i2c_write_serial@i& (0+255),w,b
  2729  000AD6  257D               	addwf	i2c_write_serial@data& (0+255),w,b
  2730  000AD8  6ED9               	movwf	fsr2l,c
  2731  000ADA  0E00               	movlw	0
  2732  000ADC  217E               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2733  000ADE  6EDA               	movwf	fsr2h,c
  2734  000AE0  50DF               	movf	indf2,w,c
  2735  000AE2  6EC9               	movwf	4041,c	;volatile
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;main.c: 171:                 if(SSP1CON2bits.ACKSTAT == 0) {
  2739  000AE4  BCC5               	btfsc	4037,6,c	;volatile
  2740  000AE6  D01D               	goto	l3347
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;main.c: 173:                     printf("ACK - Skrev data: %#02X - %c\n\r", data[i], da
      +                          ta[i]);
  2744  000AE8  0ED6               	movlw	low STR_10
  2745  000AEA  6F73               	movwf	printf@fmt& (0+255),b
  2746  000AEC  0EFE               	movlw	high STR_10
  2747  000AEE  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2748  000AF0  5182               	movf	i2c_write_serial@i& (0+255),w,b
  2749  000AF2  257D               	addwf	i2c_write_serial@data& (0+255),w,b
  2750  000AF4  6ED9               	movwf	fsr2l,c
  2751  000AF6  0E00               	movlw	0
  2752  000AF8  217E               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2753  000AFA  6EDA               	movwf	fsr2h,c
  2754  000AFC  50DF               	movf	indf2,w,c
  2755  000AFE  6E55               	movwf	??_i2c_write_serial& (0+255),c
  2756  000B00  5055               	movf	??_i2c_write_serial,w,c
  2757  000B02  6F75               	movwf	(?_printf+2)& (0+255),b
  2758  000B04  6B76               	clrf	(?_printf+3)& (0+255),b
  2759  000B06  5182               	movf	i2c_write_serial@i& (0+255),w,b
  2760  000B08  257D               	addwf	i2c_write_serial@data& (0+255),w,b
  2761  000B0A  6ED9               	movwf	fsr2l,c
  2762  000B0C  0E00               	movlw	0
  2763  000B0E  217E               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2764  000B10  6EDA               	movwf	fsr2h,c
  2765  000B12  50DF               	movf	indf2,w,c
  2766  000B14  6E56               	movwf	(??_i2c_write_serial+1)& (0+255),c
  2767  000B16  5056               	movf	??_i2c_write_serial+1,w,c
  2768  000B18  6F77               	movwf	(?_printf+4)& (0+255),b
  2769  000B1A  6B78               	clrf	(?_printf+5)& (0+255),b
  2770  000B1C  EC57  F00C         	call	_printf	;wreg free
  2771                           
  2772                           ;main.c: 175:                 } else {
  2773  000B20  D006               	goto	l3349
  2774  000B22                     l3347:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;main.c: 177:                     printf("NACK - Fejl i skrivning af data\r\n");
  2778  000B22  0EB4               	movlw	low STR_13
  2779  000B24  6F73               	movwf	printf@fmt& (0+255),b
  2780  000B26  0EFE               	movlw	high STR_13
  2781  000B28  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2782  000B2A  EC57  F00C         	call	_printf	;wreg free
  2783  000B2E                     l3349:
  2784                           
  2785                           ;main.c: 181:         }
  2786  000B2E  0100               	movlb	0	; () banked
  2787  000B30  2B82               	incf	i2c_write_serial@i& (0+255),f,b
  2788  000B32                     l3351:
  2789                           
  2790                           ; BSR set to: 0
  2791  000B32  517F               	movf	i2c_write_serial@length& (0+255),w,b
  2792  000B34  5D82               	subwf	i2c_write_serial@i& (0+255),w,b
  2793  000B36  A0D8               	btfss	status,0,c
  2794  000B38  D786               	goto	l3331
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;main.c: 184:         SSP1CON2bits.PEN = 1;
  2798  000B3A  84C5               	bsf	4037,2,c	;volatile
  2799  000B3C                     l342:
  2800  000B3C  B4C5               	btfsc	4037,2,c	;volatile
  2801  000B3E  D7FE               	goto	l342
  2802                           
  2803                           ;main.c: 187:         printf("Har sendt stop\n\r");
  2804  000B40  0EB8               	movlw	low STR_14
  2805  000B42  0100               	movlb	0	; () banked
  2806  000B44  6F73               	movwf	printf@fmt& (0+255),b
  2807  000B46  0EFF               	movlw	high STR_14
  2808  000B48  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2809  000B4A  EC57  F00C         	call	_printf	;wreg free
  2810                           
  2811                           ;main.c: 189:     } else {
  2812  000B4E  D007               	goto	l345
  2813  000B50                     l3355:
  2814                           
  2815                           ;main.c: 191:         printf("Kunne ikke finde enhed\r\n");
  2816  000B50  0E2C               	movlw	low STR_15
  2817  000B52  0100               	movlb	0	; () banked
  2818  000B54  6F73               	movwf	printf@fmt& (0+255),b
  2819  000B56  0EFF               	movlw	high STR_15
  2820  000B58  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2821  000B5A  EC57  F00C         	call	_printf	;wreg free
  2822  000B5E                     l345:
  2823                           
  2824                           ;main.c: 195:     printf("********************************\n\r");
  2825  000B5E  0E91               	movlw	low STR_16
  2826  000B60  0100               	movlb	0	; () banked
  2827  000B62  6F73               	movwf	printf@fmt& (0+255),b
  2828  000B64  0EFE               	movlw	high STR_16
  2829  000B66  6F74               	movwf	(printf@fmt+1)& (0+255),b
  2830  000B68  EC57  F00C         	call	_printf	;wreg free
  2831  000B6C  0012               	return		;funcret
  2832  000B6E                     __end_of_i2c_write_serial:
  2833                           	opt callstack 0
  2834                           
  2835 ;; *************** function ___awmod *****************
  2836 ;; Defined at:
  2837 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  dividend        2    4[COMRAM] int 
  2840 ;;  divisor         2    6[COMRAM] int 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  sign            1    9[COMRAM] unsigned char 
  2843 ;;  counter         1    8[COMRAM] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  2    4[COMRAM] int 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;Total ram usage:        6 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    4
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_updateMoist
  2864 ;;		_getReading
  2865 ;;		_updateTemperature
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text5
  2870  001466                     __ptext5:
  2871                           	opt callstack 0
  2872  001466                     ___awmod:
  2873                           	opt callstack 24
  2874                           
  2875                           ;incstack = 0
  2876  001466  0E00               	movlw	0
  2877  001468  6E0A               	movwf	___awmod@sign,c
  2878  00146A  AE06               	btfss	___awmod@dividend+1,7,c
  2879  00146C  D006               	goto	l2777
  2880  00146E  6C05               	negf	___awmod@dividend,c
  2881  001470  1E06               	comf	___awmod@dividend+1,f,c
  2882  001472  B0D8               	btfsc	status,0,c
  2883  001474  2A06               	incf	___awmod@dividend+1,f,c
  2884  001476  0E01               	movlw	1
  2885  001478  6E0A               	movwf	___awmod@sign,c
  2886  00147A                     l2777:
  2887  00147A  AE08               	btfss	___awmod@divisor+1,7,c
  2888  00147C  D004               	goto	l2781
  2889  00147E  6C07               	negf	___awmod@divisor,c
  2890  001480  1E08               	comf	___awmod@divisor+1,f,c
  2891  001482  B0D8               	btfsc	status,0,c
  2892  001484  2A08               	incf	___awmod@divisor+1,f,c
  2893  001486                     l2781:
  2894  001486  5007               	movf	___awmod@divisor,w,c
  2895  001488  1008               	iorwf	___awmod@divisor+1,w,c
  2896  00148A  B4D8               	btfsc	status,2,c
  2897  00148C  D018               	goto	l2797
  2898  00148E  0E01               	movlw	1
  2899  001490  6E09               	movwf	___awmod@counter,c
  2900  001492  D004               	goto	l2787
  2901  001494                     l2785:
  2902  001494  90D8               	bcf	status,0,c
  2903  001496  3607               	rlcf	___awmod@divisor,f,c
  2904  001498  3608               	rlcf	___awmod@divisor+1,f,c
  2905  00149A  2A09               	incf	___awmod@counter,f,c
  2906  00149C                     l2787:
  2907  00149C  AE08               	btfss	___awmod@divisor+1,7,c
  2908  00149E  D7FA               	goto	l2785
  2909  0014A0                     u2270:
  2910  0014A0  5007               	movf	___awmod@divisor,w,c
  2911  0014A2  5C05               	subwf	___awmod@dividend,w,c
  2912  0014A4  5008               	movf	___awmod@divisor+1,w,c
  2913  0014A6  5806               	subwfb	___awmod@dividend+1,w,c
  2914  0014A8  A0D8               	btfss	status,0,c
  2915  0014AA  D004               	goto	l2793
  2916  0014AC  5007               	movf	___awmod@divisor,w,c
  2917  0014AE  5E05               	subwf	___awmod@dividend,f,c
  2918  0014B0  5008               	movf	___awmod@divisor+1,w,c
  2919  0014B2  5A06               	subwfb	___awmod@dividend+1,f,c
  2920  0014B4                     l2793:
  2921  0014B4  90D8               	bcf	status,0,c
  2922  0014B6  3208               	rrcf	___awmod@divisor+1,f,c
  2923  0014B8  3207               	rrcf	___awmod@divisor,f,c
  2924  0014BA  2E09               	decfsz	___awmod@counter,f,c
  2925  0014BC  D7F1               	goto	u2270
  2926  0014BE                     l2797:
  2927  0014BE  500A               	movf	___awmod@sign,w,c
  2928  0014C0  B4D8               	btfsc	status,2,c
  2929  0014C2  D004               	goto	l2801
  2930  0014C4  6C05               	negf	___awmod@dividend,c
  2931  0014C6  1E06               	comf	___awmod@dividend+1,f,c
  2932  0014C8  B0D8               	btfsc	status,0,c
  2933  0014CA  2A06               	incf	___awmod@dividend+1,f,c
  2934  0014CC                     l2801:
  2935  0014CC  C005  F005         	movff	___awmod@dividend,?___awmod
  2936  0014D0  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  2937  0014D4  0012               	return		;funcret
  2938  0014D6                     __end_of___awmod:
  2939                           	opt callstack 0
  2940                           
  2941 ;; *************** function ___awdiv *****************
  2942 ;; Defined at:
  2943 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  dividend        2    4[COMRAM] int 
  2946 ;;  divisor         2    6[COMRAM] int 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  quotient        2   10[COMRAM] int 
  2949 ;;  sign            1    9[COMRAM] unsigned char 
  2950 ;;  counter         1    8[COMRAM] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  2    4[COMRAM] int 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;Total ram usage:        8 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    4
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_updateMoist
  2971 ;;		_updateTemperature
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text6
  2976  001274                     __ptext6:
  2977                           	opt callstack 0
  2978  001274                     ___awdiv:
  2979                           	opt callstack 24
  2980                           
  2981                           ;incstack = 0
  2982  001274  0E00               	movlw	0
  2983  001276  6E0A               	movwf	___awdiv@sign,c
  2984  001278  AE08               	btfss	___awdiv@divisor+1,7,c
  2985  00127A  D006               	goto	l2733
  2986  00127C  6C07               	negf	___awdiv@divisor,c
  2987  00127E  1E08               	comf	___awdiv@divisor+1,f,c
  2988  001280  B0D8               	btfsc	status,0,c
  2989  001282  2A08               	incf	___awdiv@divisor+1,f,c
  2990  001284  0E01               	movlw	1
  2991  001286  6E0A               	movwf	___awdiv@sign,c
  2992  001288                     l2733:
  2993  001288  AE06               	btfss	___awdiv@dividend+1,7,c
  2994  00128A  D006               	goto	l2739
  2995  00128C  6C05               	negf	___awdiv@dividend,c
  2996  00128E  1E06               	comf	___awdiv@dividend+1,f,c
  2997  001290  B0D8               	btfsc	status,0,c
  2998  001292  2A06               	incf	___awdiv@dividend+1,f,c
  2999  001294  0E01               	movlw	1
  3000  001296  1A0A               	xorwf	___awdiv@sign,f,c
  3001  001298                     l2739:
  3002  001298  0E00               	movlw	0
  3003  00129A  6E0C               	movwf	___awdiv@quotient+1,c
  3004  00129C  0E00               	movlw	0
  3005  00129E  6E0B               	movwf	___awdiv@quotient,c
  3006  0012A0  5007               	movf	___awdiv@divisor,w,c
  3007  0012A2  1008               	iorwf	___awdiv@divisor+1,w,c
  3008  0012A4  B4D8               	btfsc	status,2,c
  3009  0012A6  D01C               	goto	l2761
  3010  0012A8  0E01               	movlw	1
  3011  0012AA  6E09               	movwf	___awdiv@counter,c
  3012  0012AC  D004               	goto	l2747
  3013  0012AE                     l2745:
  3014  0012AE  90D8               	bcf	status,0,c
  3015  0012B0  3607               	rlcf	___awdiv@divisor,f,c
  3016  0012B2  3608               	rlcf	___awdiv@divisor+1,f,c
  3017  0012B4  2A09               	incf	___awdiv@counter,f,c
  3018  0012B6                     l2747:
  3019  0012B6  AE08               	btfss	___awdiv@divisor+1,7,c
  3020  0012B8  D7FA               	goto	l2745
  3021  0012BA                     u2210:
  3022  0012BA  90D8               	bcf	status,0,c
  3023  0012BC  360B               	rlcf	___awdiv@quotient,f,c
  3024  0012BE  360C               	rlcf	___awdiv@quotient+1,f,c
  3025  0012C0  5007               	movf	___awdiv@divisor,w,c
  3026  0012C2  5C05               	subwf	___awdiv@dividend,w,c
  3027  0012C4  5008               	movf	___awdiv@divisor+1,w,c
  3028  0012C6  5806               	subwfb	___awdiv@dividend+1,w,c
  3029  0012C8  A0D8               	btfss	status,0,c
  3030  0012CA  D005               	goto	l2757
  3031  0012CC  5007               	movf	___awdiv@divisor,w,c
  3032  0012CE  5E05               	subwf	___awdiv@dividend,f,c
  3033  0012D0  5008               	movf	___awdiv@divisor+1,w,c
  3034  0012D2  5A06               	subwfb	___awdiv@dividend+1,f,c
  3035  0012D4  800B               	bsf	___awdiv@quotient,0,c
  3036  0012D6                     l2757:
  3037  0012D6  90D8               	bcf	status,0,c
  3038  0012D8  3208               	rrcf	___awdiv@divisor+1,f,c
  3039  0012DA  3207               	rrcf	___awdiv@divisor,f,c
  3040  0012DC  2E09               	decfsz	___awdiv@counter,f,c
  3041  0012DE  D7ED               	goto	u2210
  3042  0012E0                     l2761:
  3043  0012E0  500A               	movf	___awdiv@sign,w,c
  3044  0012E2  B4D8               	btfsc	status,2,c
  3045  0012E4  D004               	goto	l2765
  3046  0012E6  6C0B               	negf	___awdiv@quotient,c
  3047  0012E8  1E0C               	comf	___awdiv@quotient+1,f,c
  3048  0012EA  B0D8               	btfsc	status,0,c
  3049  0012EC  2A0C               	incf	___awdiv@quotient+1,f,c
  3050  0012EE                     l2765:
  3051  0012EE  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  3052  0012F2  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  3053  0012F6  0012               	return		;funcret
  3054  0012F8                     __end_of___awdiv:
  3055                           	opt callstack 0
  3056                           
  3057 ;; *************** function _i2c_read_serial *****************
  3058 ;; Defined at:
  3059 ;;		line 200 in file "main.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  addr            1    wreg     unsigned char 
  3062 ;;  data_out        2   29[BANK0 ] PTR unsigned char 
  3063 ;;		 -> data_out(4), eeprom_buffer(128), 
  3064 ;;  length          1   31[BANK0 ] unsigned char 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  addr            1   38[BANK0 ] unsigned char 
  3067 ;;  i               1   40[BANK0 ] unsigned char 
  3068 ;;  targetAddr      1   39[BANK0 ] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3078 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;Total ram usage:       12 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:   13
  3085 ;; This function calls:
  3086 ;;		_printf
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;;		_getReading
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text7
  3094  000E0E                     __ptext7:
  3095                           	opt callstack 0
  3096  000E0E                     _i2c_read_serial:
  3097                           	opt callstack 17
  3098                           
  3099                           ;incstack = 0
  3100                           ;i2c_read_serial@addr stored from wreg
  3101  000E0E  0100               	movlb	0	; () banked
  3102  000E10  6F86               	movwf	i2c_read_serial@addr& (0+255),b
  3103                           
  3104                           ;main.c: 201:     uint8_t targetAddr = (addr<<1)+1;
  3105  000E12  0100               	movlb	0	; () banked
  3106  000E14  5186               	movf	i2c_read_serial@addr& (0+255),w,b
  3107  000E16  0D02               	mullw	2
  3108  000E18  28F3               	incf	prodl,w,c
  3109  000E1A  6F87               	movwf	i2c_read_serial@targetAddr& (0+255),b
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;main.c: 204:     printf("\r\n***********READ*****************\n\r");
  3113  000E1C  0E47               	movlw	low STR_17
  3114  000E1E  6F73               	movwf	printf@fmt& (0+255),b
  3115  000E20  0EFE               	movlw	high STR_17
  3116  000E22  6F74               	movwf	(printf@fmt+1)& (0+255),b
  3117  000E24  EC57  F00C         	call	_printf	;wreg free
  3118  000E28                     l349:
  3119  000E28  B4C7               	btfsc	4039,2,c	;volatile
  3120  000E2A  D7FE               	goto	l349
  3121  000E2C  CFC5 F080          	movff	4037,??_i2c_read_serial	;volatile
  3122  000E30  0E1F               	movlw	31
  3123  000E32  0100               	movlb	0	; () banked
  3124  000E34  1780               	andwf	??_i2c_read_serial& (0+255),f,b
  3125  000E36  A4D8               	btfss	status,2,c
  3126  000E38  D7F7               	goto	l349
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;main.c: 210:     printf("Bussen er klar\n\r");
  3130  000E3A  0EC9               	movlw	low STR_5
  3131  000E3C  6F73               	movwf	printf@fmt& (0+255),b
  3132  000E3E  0EFF               	movlw	high STR_5
  3133  000E40  6F74               	movwf	(printf@fmt+1)& (0+255),b
  3134  000E42  EC57  F00C         	call	_printf	;wreg free
  3135                           
  3136                           ;main.c: 214:     SSP1CON2bits.SEN = 1;
  3137  000E46  80C5               	bsf	4037,0,c	;volatile
  3138  000E48                     l352:
  3139  000E48  B0C5               	btfsc	4037,0,c	;volatile
  3140  000E4A  D7FE               	goto	l352
  3141                           
  3142                           ;main.c: 217:     printf("Har sendt start\n\r");
  3143  000E4C  0E95               	movlw	low STR_6
  3144  000E4E  0100               	movlb	0	; () banked
  3145  000E50  6F73               	movwf	printf@fmt& (0+255),b
  3146  000E52  0EFF               	movlw	high STR_6
  3147  000E54  6F74               	movwf	(printf@fmt+1)& (0+255),b
  3148  000E56  EC57  F00C         	call	_printf	;wreg free
  3149                           
  3150                           ;main.c: 220:     SSP1BUF = targetAddr;
  3151  000E5A  C087  FFC9         	movff	i2c_read_serial@targetAddr,4041	;volatile
  3152                           
  3153                           ;main.c: 222:     printf("Skriver: adresse: %#02X\n\r", targetAddr);
  3154  000E5E  0E12               	movlw	low STR_20
  3155  000E60  0100               	movlb	0	; () banked
  3156  000E62  6F73               	movwf	printf@fmt& (0+255),b
  3157  000E64  0EFF               	movlw	high STR_20
  3158  000E66  6F74               	movwf	(printf@fmt+1)& (0+255),b
  3159  000E68  C087  F075         	movff	i2c_read_serial@targetAddr,?_printf+2
  3160  000E6C  6B76               	clrf	(?_printf+3)& (0+255),b
  3161  000E6E  EC57  F00C         	call	_printf	;wreg free
  3162                           
  3163                           ;main.c: 225:     if(SSP1CON2bits.ACKSTAT == 0) {
  3164  000E72  BCC5               	btfsc	4037,6,c	;volatile
  3165  000E74  D052               	goto	l3389
  3166                           
  3167                           ;main.c: 226:         for (uint8_t i=0; i < length ; i++) {
  3168  000E76  0E00               	movlw	0
  3169  000E78  0100               	movlb	0	; () banked
  3170  000E7A  6F88               	movwf	i2c_read_serial@i& (0+255),b
  3171  000E7C  D03B               	goto	l3385
  3172  000E7E                     l357:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;main.c: 227:             SSP1CON2bits.RCEN = 1;
  3176  000E7E  86C5               	bsf	4037,3,c	;volatile
  3177  000E80                     l358:
  3178  000E80  B6C5               	btfsc	4037,3,c	;volatile
  3179  000E82  D7FE               	goto	l358
  3180                           
  3181                           ;main.c: 230:             data_out[i] = SSP1BUF;
  3182  000E84  0100               	movlb	0	; () banked
  3183  000E86  5188               	movf	i2c_read_serial@i& (0+255),w,b
  3184  000E88  257D               	addwf	i2c_read_serial@data_out& (0+255),w,b
  3185  000E8A  6ED9               	movwf	fsr2l,c
  3186  000E8C  0E00               	movlw	0
  3187  000E8E  217E               	addwfc	(i2c_read_serial@data_out+1)& (0+255),w,b
  3188  000E90  6EDA               	movwf	fsr2h,c
  3189  000E92  CFC9 FFDF          	movff	4041,indf2	;volatile
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;main.c: 233:             if( i != length -1)
  3193  000E96  5188               	movf	i2c_read_serial@i& (0+255),w,b
  3194  000E98  6F80               	movwf	??_i2c_read_serial& (0+255),b
  3195  000E9A  6B81               	clrf	(??_i2c_read_serial+1)& (0+255),b
  3196  000E9C  0EFF               	movlw	255
  3197  000E9E  6F82               	movwf	(??_i2c_read_serial+2)& (0+255),b
  3198  000EA0  0EFF               	movlw	255
  3199  000EA2  6F83               	movwf	(??_i2c_read_serial+3)& (0+255),b
  3200  000EA4  517F               	movf	i2c_read_serial@length& (0+255),w,b
  3201  000EA6  6F84               	movwf	(??_i2c_read_serial+4)& (0+255),b
  3202  000EA8  6B85               	clrf	(??_i2c_read_serial+5)& (0+255),b
  3203  000EAA  5182               	movf	(??_i2c_read_serial+2)& (0+255),w,b
  3204  000EAC  2784               	addwf	(??_i2c_read_serial+4)& (0+255),f,b
  3205  000EAE  5183               	movf	(??_i2c_read_serial+3)& (0+255),w,b
  3206  000EB0  2385               	addwfc	(??_i2c_read_serial+5)& (0+255),f,b
  3207  000EB2  5180               	movf	??_i2c_read_serial& (0+255),w,b
  3208  000EB4  1984               	xorwf	(??_i2c_read_serial+4)& (0+255),w,b
  3209  000EB6  E104               	bnz	u3000
  3210  000EB8  5181               	movf	(??_i2c_read_serial+1)& (0+255),w,b
  3211  000EBA  1985               	xorwf	(??_i2c_read_serial+5)& (0+255),w,b
  3212  000EBC  B4D8               	btfsc	status,2,c
  3213  000EBE  D002               	goto	l361
  3214  000EC0                     u3000:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;main.c: 234:                 SSP1CON2bits.ACKDT = 0;
  3218  000EC0  9AC5               	bcf	4037,5,c	;volatile
  3219  000EC2  D001               	goto	l362
  3220  000EC4                     l361:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;main.c: 236:                 SSP1CON2bits.ACKDT = 1;
  3224  000EC4  8AC5               	bsf	4037,5,c	;volatile
  3225  000EC6                     l362:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;main.c: 238:             SSP1CON2bits.ACKEN = 1;
  3229  000EC6  88C5               	bsf	4037,4,c	;volatile
  3230  000EC8                     l363:
  3231  000EC8  B8C5               	btfsc	4037,4,c	;volatile
  3232  000ECA  D7FE               	goto	l363
  3233                           
  3234                           ;main.c: 242:             printf("Laeste: %#02X\n\r", data_out[i]);
  3235  000ECC  0EDA               	movlw	low STR_21
  3236  000ECE  0100               	movlb	0	; () banked
  3237  000ED0  6F73               	movwf	printf@fmt& (0+255),b
  3238  000ED2  0EFF               	movlw	high STR_21
  3239  000ED4  6F74               	movwf	(printf@fmt+1)& (0+255),b
  3240  000ED6  5188               	movf	i2c_read_serial@i& (0+255),w,b
  3241  000ED8  257D               	addwf	i2c_read_serial@data_out& (0+255),w,b
  3242  000EDA  6ED9               	movwf	fsr2l,c
  3243  000EDC  0E00               	movlw	0
  3244  000EDE  217E               	addwfc	(i2c_read_serial@data_out+1)& (0+255),w,b
  3245  000EE0  6EDA               	movwf	fsr2h,c
  3246  000EE2  50DF               	movf	indf2,w,c
  3247  000EE4  6F80               	movwf	??_i2c_read_serial& (0+255),b
  3248  000EE6  5180               	movf	??_i2c_read_serial& (0+255),w,b
  3249  000EE8  6F75               	movwf	(?_printf+2)& (0+255),b
  3250  000EEA  6B76               	clrf	(?_printf+3)& (0+255),b
  3251  000EEC  EC57  F00C         	call	_printf	;wreg free
  3252                           
  3253                           ;main.c: 244:         }
  3254  000EF0  0100               	movlb	0	; () banked
  3255  000EF2  2B88               	incf	i2c_read_serial@i& (0+255),f,b
  3256  000EF4                     l3385:
  3257                           
  3258                           ; BSR set to: 0
  3259  000EF4  517F               	movf	i2c_read_serial@length& (0+255),w,b
  3260  000EF6  5D88               	subwf	i2c_read_serial@i& (0+255),w,b
  3261  000EF8  A0D8               	btfss	status,0,c
  3262  000EFA  D7C1               	goto	l357
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;main.c: 246:             SSP1CON2bits.ACKDT = 1;
  3266  000EFC  8AC5               	bsf	4037,5,c	;volatile
  3267                           
  3268                           ;main.c: 247:             SSP1CON2bits.ACKEN = 1;
  3269  000EFE  88C5               	bsf	4037,4,c	;volatile
  3270  000F00                     l367:
  3271  000F00  B8C5               	btfsc	4037,4,c	;volatile
  3272  000F02  D7FE               	goto	l367
  3273                           
  3274                           ;main.c: 251:             SSP1CON2bits.PEN = 1;
  3275  000F04  84C5               	bsf	4037,2,c	;volatile
  3276  000F06                     l370:
  3277  000F06  B4C5               	btfsc	4037,2,c	;volatile
  3278  000F08  D7FE               	goto	l370
  3279                           
  3280                           ;main.c: 254:             printf("Har sendt stop\r\n");
  3281  000F0A  0EA7               	movlw	low STR_22
  3282  000F0C  0100               	movlb	0	; () banked
  3283  000F0E  6F73               	movwf	printf@fmt& (0+255),b
  3284  000F10  0EFF               	movlw	high STR_22
  3285  000F12  6F74               	movwf	(printf@fmt+1)& (0+255),b
  3286  000F14  EC57  F00C         	call	_printf	;wreg free
  3287                           
  3288                           ;main.c: 256:     } else {
  3289  000F18  D007               	goto	l373
  3290  000F1A                     l3389:
  3291                           
  3292                           ;main.c: 258:         printf("Kunne ikke finde enhed\r\n");
  3293  000F1A  0E2C               	movlw	low STR_15
  3294  000F1C  0100               	movlb	0	; () banked
  3295  000F1E  6F73               	movwf	printf@fmt& (0+255),b
  3296  000F20  0EFF               	movlw	high STR_15
  3297  000F22  6F74               	movwf	(printf@fmt+1)& (0+255),b
  3298  000F24  EC57  F00C         	call	_printf	;wreg free
  3299  000F28                     l373:
  3300                           
  3301                           ;main.c: 262:     printf("********************************\n\r");
  3302  000F28  0E91               	movlw	low STR_16
  3303  000F2A  0100               	movlb	0	; () banked
  3304  000F2C  6F73               	movwf	printf@fmt& (0+255),b
  3305  000F2E  0EFE               	movlw	high STR_16
  3306  000F30  6F74               	movwf	(printf@fmt+1)& (0+255),b
  3307  000F32  EC57  F00C         	call	_printf	;wreg free
  3308  000F36  0012               	return		;funcret
  3309  000F38                     __end_of_i2c_read_serial:
  3310                           	opt callstack 0
  3311                           
  3312 ;; *************** function _printf *****************
  3313 ;; Defined at:
  3314 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  fmt             2   19[BANK0 ] PTR const unsigned char 
  3317 ;;		 -> STR_24(35), STR_23(25), STR_22(17), STR_21(16), 
  3318 ;;		 -> STR_20(26), STR_19(18), STR_18(17), STR_17(37), 
  3319 ;;		 -> STR_16(35), STR_15(25), STR_14(17), STR_13(34), 
  3320 ;;		 -> STR_12(31), STR_11(19), STR_10(31), STR_9(14), 
  3321 ;;		 -> STR_8(29), STR_7(18), STR_6(18), STR_5(17), 
  3322 ;;		 -> STR_4(37), STR_3(19), STR_2(24), STR_1(6), 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  ap              2   27[BANK0 ] PTR void [1]
  3325 ;;		 -> ?_printf(2), 
  3326 ;;  ret             2    0        int 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  2   19[BANK0 ] int 
  3329 ;; Registers used:
  3330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3336 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;Total ram usage:       10 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:   12
  3343 ;; This function calls:
  3344 ;;		_vfprintf
  3345 ;; This function is called by:
  3346 ;;		_main
  3347 ;;		_i2c_write_serial
  3348 ;;		_i2c_read_serial
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text8
  3353  0018AE                     __ptext8:
  3354                           	opt callstack 0
  3355  0018AE                     _printf:
  3356                           	opt callstack 18
  3357                           
  3358                           ;incstack = 0
  3359  0018AE  0E75               	movlw	low (?_printf+2)
  3360  0018B0  0100               	movlb	0	; () banked
  3361  0018B2  6F7B               	movwf	printf@ap& (0+255),b
  3362  0018B4  0E00               	movlw	high (?_printf+2)
  3363  0018B6  6F7C               	movwf	(printf@ap+1)& (0+255),b
  3364                           
  3365                           ; BSR set to: 0
  3366  0018B8  0E00               	movlw	0
  3367  0018BA  6F6D               	movwf	vfprintf@fp& (0+255),b
  3368  0018BC  0E00               	movlw	0
  3369  0018BE  6F6E               	movwf	(vfprintf@fp+1)& (0+255),b
  3370  0018C0  C073  F06F         	movff	printf@fmt,vfprintf@fmt
  3371  0018C4  C074  F070         	movff	printf@fmt+1,vfprintf@fmt+1
  3372  0018C8  0E7B               	movlw	low printf@ap
  3373  0018CA  6F71               	movwf	vfprintf@ap& (0+255),b
  3374  0018CC  0E00               	movlw	high printf@ap
  3375  0018CE  6F72               	movwf	(vfprintf@ap+1)& (0+255),b
  3376  0018D0  ECA1  F00A         	call	_vfprintf	;wreg free
  3377  0018D4  0012               	return		;funcret
  3378  0018D6                     __end_of_printf:
  3379                           	opt callstack 0
  3380                           
  3381 ;; *************** function _vfprintf *****************
  3382 ;; Defined at:
  3383 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  3386 ;;		 -> NULL(0), 
  3387 ;;  fmt             2   15[BANK0 ] PTR const unsigned char 
  3388 ;;		 -> STR_24(35), STR_23(25), STR_22(17), STR_21(16), 
  3389 ;;		 -> STR_20(26), STR_19(18), STR_18(17), STR_17(37), 
  3390 ;;		 -> STR_16(35), STR_15(25), STR_14(17), STR_13(34), 
  3391 ;;		 -> STR_12(31), STR_11(19), STR_10(31), STR_9(14), 
  3392 ;;		 -> STR_8(29), STR_7(18), STR_6(18), STR_5(17), 
  3393 ;;		 -> STR_4(37), STR_3(19), STR_2(24), STR_1(6), 
  3394 ;;  ap              2   17[BANK0 ] PTR PTR void 
  3395 ;;		 -> printf@ap(2), 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  3398 ;;		 -> STR_24(35), STR_23(25), STR_22(17), STR_21(16), 
  3399 ;;		 -> STR_20(26), STR_19(18), STR_18(17), STR_17(37), 
  3400 ;;		 -> STR_16(35), STR_15(25), STR_14(17), STR_13(34), 
  3401 ;;		 -> STR_12(31), STR_11(19), STR_10(31), STR_9(14), 
  3402 ;;		 -> STR_8(29), STR_7(18), STR_6(18), STR_5(17), 
  3403 ;;		 -> STR_4(37), STR_3(19), STR_2(24), STR_1(6), 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  2   13[BANK0 ] int 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3413 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;Total ram usage:        8 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:   11
  3420 ;; This function calls:
  3421 ;;		_vfpfcnvrt
  3422 ;; This function is called by:
  3423 ;;		_printf
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text9
  3428  001542                     __ptext9:
  3429                           	opt callstack 0
  3430  001542                     _vfprintf:
  3431                           	opt callstack 18
  3432                           
  3433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3434                           
  3435                           ;incstack = 0
  3436  001542  C06F  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  3437  001546  C070  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3438                           
  3439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3440  00154A  0E00               	movlw	0
  3441  00154C  0100               	movlb	0	; () banked
  3442  00154E  6FD6               	movwf	(_nout+1)& (0+255),b
  3443  001550  0E00               	movlw	0
  3444  001552  6FD5               	movwf	_nout& (0+255),b
  3445                           
  3446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3447  001554  D013               	goto	l3305
  3448  001556                     l3303:
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3452  001556  C06D  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  3453  00155A  C06E  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3454  00155E  0E53               	movlw	low vfprintf@cfmt
  3455  001560  6E4B               	movwf	vfpfcnvrt@fmt,c
  3456  001562  0E00               	movlw	high vfprintf@cfmt
  3457  001564  6E4C               	movwf	vfpfcnvrt@fmt+1,c
  3458  001566  C071  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  3459  00156A  C072  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3460  00156E  EC10  F002         	call	_vfpfcnvrt	;wreg free
  3461  001572  5049               	movf	?_vfpfcnvrt,w,c
  3462  001574  0100               	movlb	0	; () banked
  3463  001576  27D5               	addwf	_nout& (0+255),f,b
  3464  001578  504A               	movf	?_vfpfcnvrt+1,w,c
  3465  00157A  23D6               	addwfc	(_nout+1)& (0+255),f,b
  3466  00157C                     l3305:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3470  00157C  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  3471  001580  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3472  001584                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3473  001584  6AF8               	clrf	tblptru,c
  3474  001586                     	endif
  3475  001586                     	if	0	;tblptru may be non-zero
  3476  001586                     	endif
  3477  001586  0008               	tblrd		*
  3478  001588  50F5               	movf	tablat,w,c
  3479  00158A  0900               	iorlw	0
  3480  00158C  A4D8               	btfss	status,2,c
  3481  00158E  D7E3               	goto	l3303
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3485  001590  C0D5  F06D         	movff	_nout,?_vfprintf
  3486  001594  C0D6  F06E         	movff	_nout+1,?_vfprintf+1
  3487                           
  3488                           ; BSR set to: 0
  3489  001598  0012               	return		;funcret
  3490  00159A                     __end_of_vfprintf:
  3491                           	opt callstack 0
  3492                           
  3493 ;; *************** function _vfpfcnvrt *****************
  3494 ;; Defined at:
  3495 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  3498 ;;		 -> NULL(0), 
  3499 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  3500 ;;		 -> vfprintf@cfmt(2), 
  3501 ;;  ap              2   76[COMRAM] PTR PTR void 
  3502 ;;		 -> printf@ap(2), 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  llu             8    0[BANK0 ] unsigned long long 
  3505 ;;  ll              8    0        long long 
  3506 ;;  f               4    0        long long 
  3507 ;;  vp              3    0        PTR void 
  3508 ;;  ct              3    0        unsigned char [3]
  3509 ;;  cp              3    0        PTR unsigned char 
  3510 ;;  done            2    8[BANK0 ] int 
  3511 ;;  i               2    0        int 
  3512 ;;  c               1   12[BANK0 ] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2   72[COMRAM] int 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3522 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Totals:        10      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;Total ram usage:       23 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:   10
  3529 ;; This function calls:
  3530 ;;		_atoi
  3531 ;;		_ctoa
  3532 ;;		_fputc
  3533 ;;		_isdigit
  3534 ;;		_xtoa
  3535 ;; This function is called by:
  3536 ;;		_vfprintf
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text10
  3541  000420                     __ptext10:
  3542                           	opt callstack 0
  3543  000420                     _vfpfcnvrt:
  3544                           	opt callstack 18
  3545                           
  3546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;incstack = 0
  3550  000420  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3551  000424  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3552  000428  CFDE FFF6          	movff	postinc2,tblptrl
  3553  00042C  CFDD FFF7          	movff	postdec2,tblptrh
  3554  000430                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3555  000430  6AF8               	clrf	tblptru,c
  3556  000432                     	endif
  3557  000432                     	if	0	;tblptru may be non-zero
  3558  000432                     	endif
  3559  000432  0008               	tblrd		*
  3560  000434  50F5               	movf	tablat,w,c
  3561  000436  0A25               	xorlw	37
  3562  000438  A4D8               	btfss	status,2,c
  3563  00043A  D18E               	goto	l2633
  3564                           
  3565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3566  00043C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3567  000440  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3568  000444  2ADE               	incf	postinc2,f,c
  3569  000446  0E00               	movlw	0
  3570  000448  22DD               	addwfc	postdec2,f,c
  3571                           
  3572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3573  00044A  0E00               	movlw	0
  3574  00044C  0100               	movlb	0	; () banked
  3575  00044E  6FD8               	movwf	(_width+1)& (0+255),b
  3576  000450  0E00               	movlw	0
  3577  000452  6FD7               	movwf	_width& (0+255),b
  3578  000454  C0D7  F0DB         	movff	_width,_flags
  3579  000458  C0D8  F0DC         	movff	_width+1,_flags+1
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3583  00045C  69D9               	setf	_prec& (0+255),b
  3584  00045E  69DA               	setf	(_prec+1)& (0+255),b
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3588  000460  0E00               	movlw	0
  3589  000462  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3590  000464  0E00               	movlw	0
  3591  000466  D014               	goto	L2
  3592  000468                     l2547:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3596  000468  81DB               	bsf	_flags& (0+255),0,b
  3597  00046A                     l2549:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3601  00046A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3602  00046E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3603  000472  2ADE               	incf	postinc2,f,c
  3604  000474  0E00               	movlw	0
  3605  000476  22DD               	addwfc	postdec2,f,c
  3606                           
  3607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3608  000478  D02F               	goto	l2573
  3609  00047A                     l2551:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3613  00047A  83DB               	bsf	_flags& (0+255),1,b
  3614  00047C  D7F6               	goto	l2549
  3615  00047E                     l2555:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3619  00047E  85DB               	bsf	_flags& (0+255),2,b
  3620  000480  D7F4               	goto	l2549
  3621  000482                     l2559:
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3625  000482  87DB               	bsf	_flags& (0+255),3,b
  3626  000484  D7F2               	goto	l2549
  3627  000486                     l2563:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3631  000486  89DB               	bsf	_flags& (0+255),4,b
  3632  000488  D7F0               	goto	l2549
  3633  00048A                     l2567:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3637  00048A  0E00               	movlw	0
  3638  00048C  6F69               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3639  00048E  0E01               	movlw	1
  3640  000490                     L2:
  3641  000490  6F68               	movwf	vfpfcnvrt@done& (0+255),b
  3642                           
  3643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3644  000492  D022               	goto	l2573
  3645  000494                     l2571:
  3646                           
  3647                           ; BSR set to: 0
  3648  000494  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3649  000498  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3650  00049C  CFDE FFF6          	movff	postinc2,tblptrl
  3651  0004A0  CFDD FFF7          	movff	postdec2,tblptrh
  3652  0004A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3653  0004A4  6AF8               	clrf	tblptru,c
  3654  0004A6                     	endif
  3655  0004A6                     	if	0	;tblptru may be non-zero
  3656  0004A6                     	endif
  3657  0004A6  0008               	tblrd		*
  3658  0004A8  50F5               	movf	tablat,w,c
  3659  0004AA  6E4F               	movwf	??_vfpfcnvrt& (0+255),c
  3660  0004AC  6A50               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  3661                           
  3662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3663                           ; Switch size 1, requested type "simple"
  3664                           ; Number of cases is 1, Range of values is 0 to 0
  3665                           ; switch strategies available:
  3666                           ; Name         Instructions Cycles
  3667                           ; simple_byte            4     3 (average)
  3668                           ;	Chosen strategy is simple_byte
  3669  0004AE  5050               	movf	??_vfpfcnvrt+1,w,c
  3670  0004B0  0A00               	xorlw	0	; case 0
  3671  0004B2  A4D8               	btfss	status,2,c
  3672  0004B4  D7EA               	goto	l2567
  3673                           
  3674                           ; BSR set to: 0
  3675                           ; Switch size 1, requested type "simple"
  3676                           ; Number of cases is 5, Range of values is 32 to 48
  3677                           ; switch strategies available:
  3678                           ; Name         Instructions Cycles
  3679                           ; simple_byte           16     9 (average)
  3680                           ;	Chosen strategy is simple_byte
  3681  0004B6  504F               	movf	??_vfpfcnvrt,w,c
  3682  0004B8  0A20               	xorlw	32	; case 32
  3683  0004BA  B4D8               	btfsc	status,2,c
  3684  0004BC  D7E2               	goto	l2559
  3685  0004BE  0A03               	xorlw	3	; case 35
  3686  0004C0  B4D8               	btfsc	status,2,c
  3687  0004C2  D7E1               	goto	l2563
  3688  0004C4  0A08               	xorlw	8	; case 43
  3689  0004C6  B4D8               	btfsc	status,2,c
  3690  0004C8  D7DA               	goto	l2555
  3691  0004CA  0A06               	xorlw	6	; case 45
  3692  0004CC  B4D8               	btfsc	status,2,c
  3693  0004CE  D7CC               	goto	l2547
  3694  0004D0  0A1D               	xorlw	29	; case 48
  3695  0004D2  B4D8               	btfsc	status,2,c
  3696  0004D4  D7D2               	goto	l2551
  3697  0004D6  D7D9               	goto	l2567
  3698  0004D8                     l2573:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3702  0004D8  5168               	movf	vfpfcnvrt@done& (0+255),w,b
  3703  0004DA  1169               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3704  0004DC  B4D8               	btfsc	status,2,c
  3705  0004DE  D7DA               	goto	l2571
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3709  0004E0  B1DB               	btfsc	_flags& (0+255),0,b
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3713  0004E2  93DB               	bcf	_flags& (0+255),1,b
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3717  0004E4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3718  0004E8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3719  0004EC  CFDE FFF6          	movff	postinc2,tblptrl
  3720  0004F0  CFDD FFF7          	movff	postdec2,tblptrh
  3721  0004F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3722  0004F4  6AF8               	clrf	tblptru,c
  3723  0004F6                     	endif
  3724  0004F6                     	if	0	;tblptru may be non-zero
  3725  0004F6                     	endif
  3726  0004F6  0008               	tblrd		*
  3727  0004F8  50F5               	movf	tablat,w,c
  3728  0004FA  0A2A               	xorlw	42
  3729  0004FC  A4D8               	btfss	status,2,c
  3730  0004FE  D023               	goto	l2585
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3734  000500  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3735  000504  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3736  000508  2ADE               	incf	postinc2,f,c
  3737  00050A  0E00               	movlw	0
  3738  00050C  22DD               	addwfc	postdec2,f,c
  3739                           
  3740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3741  00050E  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3742  000512  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3743  000516  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3744  00051A  0E02               	movlw	2
  3745  00051C  26DE               	addwf	postinc2,f,c
  3746  00051E  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3747  000522  0E00               	movlw	0
  3748  000524  22DD               	addwfc	postdec2,f,c
  3749  000526  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3750  00052A  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3751  00052E  CFDE F0D7          	movff	postinc2,_width
  3752  000532  CFDD F0D8          	movff	postdec2,_width+1
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3756  000536  AFD8               	btfss	(_width+1)& (0+255),7,b
  3757  000538  D041               	goto	u2000
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3761  00053A  81DB               	bsf	_flags& (0+255),0,b
  3762                           
  3763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3764  00053C  6DD7               	negf	_width& (0+255),b
  3765  00053E  1FD8               	comf	(_width+1)& (0+255),f,b
  3766  000540  B0D8               	btfsc	status,0,c
  3767  000542  2BD8               	incf	(_width+1)& (0+255),f,b
  3768  000544  D03B               	goto	u2000
  3769  000546                     l2585:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3773  000546  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3774  00054A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3775  00054E  CFDE F00C          	movff	postinc2,atoi@s
  3776  000552  CFDD F00D          	movff	postdec2,atoi@s+1
  3777  000556  EC62  F006         	call	_atoi	;wreg free
  3778  00055A  C00C  F0D7         	movff	?_atoi,_width
  3779  00055E  C00D  F0D8         	movff	?_atoi+1,_width+1
  3780                           
  3781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3782  000562  D007               	goto	l2589
  3783  000564                     l2587:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3787  000564  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3788  000568  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3789  00056C  2ADE               	incf	postinc2,f,c
  3790  00056E  0E00               	movlw	0
  3791  000570  22DD               	addwfc	postdec2,f,c
  3792  000572                     l2589:
  3793  000572  0ED0               	movlw	208
  3794  000574  6E4F               	movwf	??_vfpfcnvrt& (0+255),c
  3795  000576  0EFF               	movlw	255
  3796  000578  6E50               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3797  00057A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3798  00057E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3799  000582  CFDE FFF6          	movff	postinc2,tblptrl
  3800  000586  CFDD FFF7          	movff	postdec2,tblptrh
  3801  00058A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3802  00058A  6AF8               	clrf	tblptru,c
  3803  00058C                     	endif
  3804  00058C                     	if	0	;tblptru may be non-zero
  3805  00058C                     	endif
  3806  00058C  0008               	tblrd		*
  3807  00058E  50F5               	movf	tablat,w,c
  3808  000590  6E51               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3809  000592  6A52               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3810  000594  504F               	movf	??_vfpfcnvrt,w,c
  3811  000596  2651               	addwf	??_vfpfcnvrt+2,f,c
  3812  000598  5050               	movf	??_vfpfcnvrt+1,w,c
  3813  00059A  2252               	addwfc	??_vfpfcnvrt+3,f,c
  3814  00059C  5052               	movf	??_vfpfcnvrt+3,w,c
  3815  00059E  E106               	bnz	u1980
  3816  0005A0  0E0A               	movlw	10
  3817  0005A2  5C51               	subwf	??_vfpfcnvrt+2,w,c
  3818  0005A4  B0D8               	btfsc	status,0,c
  3819  0005A6  D002               	goto	u1980
  3820  0005A8  0E01               	movlw	1
  3821  0005AA  D001               	goto	u1990
  3822  0005AC                     u1980:
  3823  0005AC  0E00               	movlw	0
  3824  0005AE                     u1990:
  3825  0005AE  0100               	movlb	0	; () banked
  3826  0005B0  6F6A               	movwf	_vfpfcnvrt$1219& (0+255),b
  3827  0005B2  6B6B               	clrf	(_vfpfcnvrt$1219+1)& (0+255),b
  3828                           
  3829                           ; BSR set to: 0
  3830  0005B4  516A               	movf	_vfpfcnvrt$1219& (0+255),w,b
  3831  0005B6  116B               	iorwf	(_vfpfcnvrt$1219+1)& (0+255),w,b
  3832  0005B8  A4D8               	btfss	status,2,c
  3833  0005BA  D7D4               	goto	l2587
  3834  0005BC                     u2000:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  3838  0005BC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3839  0005C0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3840  0005C4  CFDE FFF6          	movff	postinc2,tblptrl
  3841  0005C8  CFDD FFF7          	movff	postdec2,tblptrh
  3842  0005CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3843  0005CC  6AF8               	clrf	tblptru,c
  3844  0005CE                     	endif
  3845  0005CE                     	if	0	;tblptru may be non-zero
  3846  0005CE                     	endif
  3847  0005CE  0008               	tblrd		*
  3848  0005D0  50F5               	movf	tablat,w,c
  3849  0005D2  0A63               	xorlw	99
  3850  0005D4  A4D8               	btfss	status,2,c
  3851  0005D6  D026               	goto	l2603
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  3855  0005D8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3856  0005DC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3857  0005E0  2ADE               	incf	postinc2,f,c
  3858  0005E2  0E00               	movlw	0
  3859  0005E4  22DD               	addwfc	postdec2,f,c
  3860                           
  3861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3862  0005E6  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3863  0005EA  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3864  0005EE  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3865  0005F2  0E02               	movlw	2
  3866  0005F4  26DE               	addwf	postinc2,f,c
  3867  0005F6  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3868  0005FA  0E00               	movlw	0
  3869  0005FC  22DD               	addwfc	postdec2,f,c
  3870  0005FE  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3871  000602  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3872  000606  50DF               	movf	indf2,w,c
  3873  000608  6F6C               	movwf	vfpfcnvrt@c& (0+255),b
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  3877  00060A  C049  F022         	movff	vfpfcnvrt@fp,ctoa@fp
  3878  00060E  C04A  F023         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3879  000612  C06C  F024         	movff	vfpfcnvrt@c,ctoa@c
  3880  000616  ECF8  F00A         	call	_ctoa	;wreg free
  3881  00061A  C022  F049         	movff	?_ctoa,?_vfpfcnvrt
  3882  00061E  C023  F04A         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3883  000622  0012               	return	
  3884  000624                     l2603:
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3888  000624  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3889  000628  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3890  00062C  CFDE FFF6          	movff	postinc2,tblptrl
  3891  000630  CFDD FFF7          	movff	postdec2,tblptrh
  3892  000634                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3893  000634  6AF8               	clrf	tblptru,c
  3894  000636                     	endif
  3895  000636                     	if	0	;tblptru may be non-zero
  3896  000636                     	endif
  3897  000636  0008               	tblrd		*
  3898  000638  50F5               	movf	tablat,w,c
  3899  00063A  0A78               	xorlw	120
  3900  00063C  B4D8               	btfsc	status,2,c
  3901  00063E  D00E               	goto	u2030
  3902                           
  3903                           ; BSR set to: 0
  3904  000640  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3905  000644  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3906  000648  CFDE FFF6          	movff	postinc2,tblptrl
  3907  00064C  CFDD FFF7          	movff	postdec2,tblptrh
  3908  000650                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3909  000650  6AF8               	clrf	tblptru,c
  3910  000652                     	endif
  3911  000652                     	if	0	;tblptru may be non-zero
  3912  000652                     	endif
  3913  000652  0008               	tblrd		*
  3914  000654  50F5               	movf	tablat,w,c
  3915  000656  0A58               	xorlw	88
  3916  000658  A4D8               	btfss	status,2,c
  3917  00065A  D04E               	goto	l2617
  3918  00065C                     u2030:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3922  00065C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3923  000660  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3924  000664  CFDE FFF6          	movff	postinc2,tblptrl
  3925  000668  CFDD FFF7          	movff	postdec2,tblptrh
  3926  00066C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3927  00066C  6AF8               	clrf	tblptru,c
  3928  00066E                     	endif
  3929  00066E                     	if	0	;tblptru may be non-zero
  3930  00066E                     	endif
  3931  00066E  0008               	tblrd		*
  3932  000670  CFF5 F06C          	movff	tablat,vfpfcnvrt@c
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3936  000674  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3937  000678  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3938  00067C  2ADE               	incf	postinc2,f,c
  3939  00067E  0E00               	movlw	0
  3940  000680  22DD               	addwfc	postdec2,f,c
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3944  000682  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3945  000686  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3946  00068A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3947  00068E  0E02               	movlw	2
  3948  000690  26DE               	addwf	postinc2,f,c
  3949  000692  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3950  000696  0E00               	movlw	0
  3951  000698  22DD               	addwfc	postdec2,f,c
  3952  00069A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3953  00069E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3954  0006A2  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3955  0006A6  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  3956  0006AA  C051  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3957  0006AE  C052  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3958  0006B2  6B62               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3959  0006B4  6B63               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3960  0006B6  6B64               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3961  0006B8  6B65               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3962  0006BA  6B66               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3963  0006BC  6B67               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  3967  0006BE  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  3968  0006C2  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3969  0006C6  C060  F024         	movff	vfpfcnvrt@llu,xtoa@d
  3970  0006CA  C061  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3971  0006CE  C062  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3972  0006D2  C063  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3973  0006D6  C064  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3974  0006DA  C065  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3975  0006DE  C066  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3976  0006E2  C067  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3977  0006E6  C06C  F02C         	movff	vfpfcnvrt@c,xtoa@x
  3978  0006EA  ECC7  F003         	call	_xtoa	;wreg free
  3979  0006EE  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  3980  0006F2  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3981  0006F6  0012               	return	
  3982  0006F8                     l2617:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3986  0006F8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3987  0006FC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3988  000700  CFDE FFF6          	movff	postinc2,tblptrl
  3989  000704  CFDD FFF7          	movff	postdec2,tblptrh
  3990  000708                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3991  000708  6AF8               	clrf	tblptru,c
  3992  00070A                     	endif
  3993  00070A                     	if	0	;tblptru may be non-zero
  3994  00070A                     	endif
  3995  00070A  0008               	tblrd		*
  3996  00070C  50F5               	movf	tablat,w,c
  3997  00070E  0A25               	xorlw	37
  3998  000710  A4D8               	btfss	status,2,c
  3999  000712  D016               	goto	l2627
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4003  000714  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4004  000718  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4005  00071C  2ADE               	incf	postinc2,f,c
  4006  00071E  0E00               	movlw	0
  4007  000720  22DD               	addwfc	postdec2,f,c
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4011  000722  0E00               	movlw	0
  4012  000724  6E08               	movwf	fputc@c+1,c
  4013  000726  0E25               	movlw	37
  4014  000728  6E07               	movwf	fputc@c,c
  4015  00072A  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  4016  00072E  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4017  000732  EC6B  F00A         	call	_fputc	;wreg free
  4018  000736                     l2623:
  4019                           
  4020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4021  000736  0E00               	movlw	0
  4022  000738  6E4A               	movwf	?_vfpfcnvrt+1,c
  4023  00073A  0E01               	movlw	1
  4024  00073C  6E49               	movwf	?_vfpfcnvrt,c
  4025  00073E  0012               	return	
  4026  000740                     l2627:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4030  000740  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4031  000744  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4032  000748  2ADE               	incf	postinc2,f,c
  4033  00074A  0E00               	movlw	0
  4034  00074C  22DD               	addwfc	postdec2,f,c
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4038  00074E  0E00               	movlw	0
  4039  000750  6E4A               	movwf	?_vfpfcnvrt+1,c
  4040  000752  0E00               	movlw	0
  4041  000754  6E49               	movwf	?_vfpfcnvrt,c
  4042  000756  0012               	return	
  4043  000758                     l2633:
  4044                           
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4046  000758  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4047  00075C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4048  000760  CFDE FFF6          	movff	postinc2,tblptrl
  4049  000764  CFDD FFF7          	movff	postdec2,tblptrh
  4050  000768                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4051  000768  6AF8               	clrf	tblptru,c
  4052  00076A                     	endif
  4053  00076A                     	if	0	;tblptru may be non-zero
  4054  00076A                     	endif
  4055  00076A  0008               	tblrd		*
  4056  00076C  50F5               	movf	tablat,w,c
  4057  00076E  6E07               	movwf	fputc@c,c
  4058  000770  6A08               	clrf	fputc@c+1,c
  4059  000772  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  4060  000776  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4061  00077A  EC6B  F00A         	call	_fputc	;wreg free
  4062                           
  4063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4064  00077E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4065  000782  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4066  000786  2ADE               	incf	postinc2,f,c
  4067  000788  0E00               	movlw	0
  4068  00078A  22DD               	addwfc	postdec2,f,c
  4069  00078C  D7D4               	goto	l2623
  4070  00078E                     __end_of_vfpfcnvrt:
  4071                           	opt callstack 0
  4072                           
  4073 ;; *************** function _xtoa *****************
  4074 ;; Defined at:
  4075 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4078 ;;		 -> NULL(0), 
  4079 ;;  d               8   35[COMRAM] unsigned long long 
  4080 ;;  x               1   43[COMRAM] unsigned char 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  n               8   60[COMRAM] unsigned long long 
  4083 ;;  c               2   70[COMRAM] int 
  4084 ;;  i               2   68[COMRAM] int 
  4085 ;;  w               2   58[COMRAM] int 
  4086 ;;  p               2   56[COMRAM] int 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  2   33[COMRAM] int 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4096 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;Total ram usage:       39 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    9
  4103 ;; This function calls:
  4104 ;;		_isalpha
  4105 ;;		_isupper
  4106 ;;		_pad
  4107 ;;		_toupper
  4108 ;; This function is called by:
  4109 ;;		_vfpfcnvrt
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text11
  4114  00078E                     __ptext11:
  4115                           	opt callstack 0
  4116  00078E                     _xtoa:
  4117                           	opt callstack 18
  4118                           
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  4120                           
  4121                           ;incstack = 0
  4122  00078E  0100               	movlb	0	; () banked
  4123  000790  AFDA               	btfss	(_prec+1)& (0+255),7,b
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  4127  000792  93DB               	bcf	_flags& (0+255),1,b
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  4131  000794  BFDA               	btfsc	(_prec+1)& (0+255),7,b
  4132  000796  D005               	goto	u1700
  4133  000798  51DA               	movf	(_prec+1)& (0+255),w,b
  4134  00079A  E108               	bnz	l448
  4135  00079C  05D9               	decf	_prec& (0+255),w,b
  4136  00079E  B0D8               	btfsc	status,0,c
  4137  0007A0  D005               	goto	l448
  4138  0007A2                     u1700:
  4139                           
  4140                           ; BSR set to: 0
  4141  0007A2  0E00               	movlw	0
  4142  0007A4  6E3A               	movwf	xtoa@p+1,c
  4143  0007A6  0E01               	movlw	1
  4144  0007A8  6E39               	movwf	xtoa@p,c
  4145  0007AA  D004               	goto	l450
  4146  0007AC                     l448:
  4147                           
  4148                           ; BSR set to: 0
  4149  0007AC  C0D9  F039         	movff	_prec,xtoa@p
  4150  0007B0  C0DA  F03A         	movff	_prec+1,xtoa@p+1
  4151  0007B4                     l450:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  4155  0007B4  C0D7  F03B         	movff	_width,xtoa@w
  4156  0007B8  C0D8  F03C         	movff	_width+1,xtoa@w+1
  4157                           
  4158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  4159  0007BC  A9DB               	btfss	_flags& (0+255),4,b
  4160  0007BE  D004               	goto	l2439
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  4164  0007C0  0EFE               	movlw	254
  4165  0007C2  263B               	addwf	xtoa@w,f,c
  4166  0007C4  0EFF               	movlw	255
  4167  0007C6  223C               	addwfc	xtoa@w+1,f,c
  4168  0007C8                     l2439:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  4172  0007C8  C024  F03D         	movff	xtoa@d,xtoa@n
  4173  0007CC  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  4174  0007D0  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  4175  0007D4  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  4176  0007D8  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  4177  0007DC  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  4178  0007E0  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  4179  0007E4  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  4183  0007E8  0E00               	movlw	0
  4184  0007EA  6E46               	movwf	xtoa@i+1,c
  4185  0007EC  0E1F               	movlw	31
  4186  0007EE  6E45               	movwf	xtoa@i,c
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  4190  0007F0  0E00               	movlw	0
  4191  0007F2  0101               	movlb	1	; () banked
  4192  0007F4  6F9F               	movwf	(_dbuf+31)& (0+255),b
  4193                           
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4195  0007F6  D093               	goto	l2475
  4196  0007F8                     l2445:
  4197                           
  4198                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  4199  0007F8  0645               	decf	xtoa@i,f,c
  4200  0007FA  A0D8               	btfss	status,0,c
  4201  0007FC  0646               	decf	xtoa@i+1,f,c
  4202                           
  4203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  4204  0007FE  0E0F               	movlw	15
  4205  000800  143D               	andwf	xtoa@n,w,c
  4206  000802  6E47               	movwf	xtoa@c,c
  4207  000804  6A48               	clrf	xtoa@c+1,c
  4208                           
  4209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  4210  000806  BE48               	btfsc	xtoa@c+1,7,c
  4211  000808  D008               	goto	l2453
  4212  00080A  5048               	movf	xtoa@c+1,w,c
  4213  00080C  E104               	bnz	u1720
  4214  00080E  0E0A               	movlw	10
  4215  000810  5C47               	subwf	xtoa@c,w,c
  4216  000812  A0D8               	btfss	status,0,c
  4217  000814  D002               	goto	l2453
  4218  000816                     u1720:
  4219  000816  0E57               	movlw	87
  4220  000818  D001               	goto	L3
  4221  00081A                     l2453:
  4222  00081A  0E30               	movlw	48
  4223  00081C                     L3:
  4224  00081C  2447               	addwf	xtoa@c,w,c
  4225  00081E  6E47               	movwf	xtoa@c,c
  4226  000820  0E00               	movlw	0
  4227  000822  2048               	addwfc	xtoa@c+1,w,c
  4228  000824  6E48               	movwf	xtoa@c+1,c
  4229                           
  4230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
  4231  000826  0EBF               	movlw	191
  4232  000828  6E2D               	movwf	??_xtoa& (0+255),c
  4233  00082A  0EFF               	movlw	255
  4234  00082C  6E2E               	movwf	(??_xtoa+1)& (0+255),c
  4235  00082E  502C               	movf	xtoa@x,w,c
  4236  000830  6E2F               	movwf	(??_xtoa+2)& (0+255),c
  4237  000832  6A30               	clrf	(??_xtoa+3)& (0+255),c
  4238  000834  502D               	movf	??_xtoa,w,c
  4239  000836  262F               	addwf	??_xtoa+2,f,c
  4240  000838  502E               	movf	??_xtoa+1,w,c
  4241  00083A  2230               	addwfc	??_xtoa+3,f,c
  4242  00083C  5030               	movf	??_xtoa+3,w,c
  4243  00083E  E106               	bnz	u1730
  4244  000840  0E1A               	movlw	26
  4245  000842  5C2F               	subwf	??_xtoa+2,w,c
  4246  000844  B0D8               	btfsc	status,0,c
  4247  000846  D002               	goto	u1730
  4248  000848  0E01               	movlw	1
  4249  00084A  D001               	goto	u1740
  4250  00084C                     u1730:
  4251  00084C  0E00               	movlw	0
  4252  00084E                     u1740:
  4253  00084E  6E35               	movwf	_xtoa$1204,c
  4254  000850  6A36               	clrf	_xtoa$1204+1,c
  4255  000852  5035               	movf	_xtoa$1204,w,c
  4256  000854  1036               	iorwf	_xtoa$1204+1,w,c
  4257  000856  B4D8               	btfsc	status,2,c
  4258  000858  D027               	goto	l2467
  4259  00085A  0E9F               	movlw	159
  4260  00085C  6E2D               	movwf	??_xtoa& (0+255),c
  4261  00085E  0EFF               	movlw	255
  4262  000860  6E2E               	movwf	(??_xtoa+1)& (0+255),c
  4263  000862  0E20               	movlw	32
  4264  000864  1047               	iorwf	xtoa@c,w,c
  4265  000866  6E2F               	movwf	(??_xtoa+2)& (0+255),c
  4266  000868  0E00               	movlw	0
  4267  00086A  1048               	iorwf	xtoa@c+1,w,c
  4268  00086C  6E30               	movwf	(??_xtoa+3)& (0+255),c
  4269  00086E  502D               	movf	??_xtoa,w,c
  4270  000870  262F               	addwf	??_xtoa+2,f,c
  4271  000872  502E               	movf	??_xtoa+1,w,c
  4272  000874  2230               	addwfc	??_xtoa+3,f,c
  4273  000876  5030               	movf	??_xtoa+3,w,c
  4274  000878  E106               	bnz	u1760
  4275  00087A  0E1A               	movlw	26
  4276  00087C  5C2F               	subwf	??_xtoa+2,w,c
  4277  00087E  B0D8               	btfsc	status,0,c
  4278  000880  D002               	goto	u1760
  4279  000882  0E01               	movlw	1
  4280  000884  D001               	goto	u1770
  4281  000886                     u1760:
  4282  000886  0E00               	movlw	0
  4283  000888                     u1770:
  4284  000888  6E37               	movwf	_xtoa$1205,c
  4285  00088A  6A38               	clrf	_xtoa$1205+1,c
  4286  00088C  5037               	movf	_xtoa$1205,w,c
  4287  00088E  1038               	iorwf	_xtoa$1205+1,w,c
  4288  000890  B4D8               	btfsc	status,2,c
  4289  000892  D00A               	goto	l2467
  4290                           
  4291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  4292  000894  C047  F00B         	movff	xtoa@c,toupper@c
  4293  000898  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  4294  00089C  EC20  F00B         	call	_toupper	;wreg free
  4295  0008A0  C00B  F047         	movff	?_toupper,xtoa@c
  4296  0008A4  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  4297  0008A8                     l2467:
  4298                           
  4299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  4300  0008A8  0E80               	movlw	low _dbuf
  4301  0008AA  2445               	addwf	xtoa@i,w,c
  4302  0008AC  6ED9               	movwf	fsr2l,c
  4303  0008AE  0E01               	movlw	high _dbuf
  4304  0008B0  2046               	addwfc	xtoa@i+1,w,c
  4305  0008B2  6EDA               	movwf	fsr2h,c
  4306  0008B4  C047  FFDF         	movff	xtoa@c,indf2
  4307                           
  4308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  4309  0008B8  0639               	decf	xtoa@p,f,c
  4310  0008BA  A0D8               	btfss	status,0,c
  4311  0008BC  063A               	decf	xtoa@p+1,f,c
  4312                           
  4313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  4314  0008BE  063B               	decf	xtoa@w,f,c
  4315  0008C0  A0D8               	btfss	status,0,c
  4316  0008C2  063C               	decf	xtoa@w+1,f,c
  4317                           
  4318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  4319  0008C4  C03D  F02D         	movff	xtoa@n,??_xtoa
  4320  0008C8  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  4321  0008CC  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  4322  0008D0  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  4323  0008D4  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  4324  0008D8  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  4325  0008DC  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  4326  0008E0  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  4327  0008E4  0E05               	movlw	5
  4328  0008E6  D009               	goto	u1790
  4329  0008E8                     u1795:
  4330  0008E8  90D8               	bcf	status,0,c
  4331  0008EA  3234               	rrcf	??_xtoa+7,f,c
  4332  0008EC  3233               	rrcf	??_xtoa+6,f,c
  4333  0008EE  3232               	rrcf	??_xtoa+5,f,c
  4334  0008F0  3231               	rrcf	??_xtoa+4,f,c
  4335  0008F2  3230               	rrcf	??_xtoa+3,f,c
  4336  0008F4  322F               	rrcf	??_xtoa+2,f,c
  4337  0008F6  322E               	rrcf	??_xtoa+1,f,c
  4338  0008F8  322D               	rrcf	??_xtoa,f,c
  4339  0008FA                     u1790:
  4340  0008FA  2EE8               	decfsz	wreg,f,c
  4341  0008FC  D7F5               	goto	u1795
  4342  0008FE  C02D  F03D         	movff	??_xtoa,xtoa@n
  4343  000902  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  4344  000906  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  4345  00090A  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  4346  00090E  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  4347  000912  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  4348  000916  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  4349  00091A  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  4350  00091E                     l2475:
  4351                           
  4352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4353  00091E  BE46               	btfsc	xtoa@i+1,7,c
  4354  000920  D021               	goto	u1840
  4355  000922  5046               	movf	xtoa@i+1,w,c
  4356  000924  E104               	bnz	u1800
  4357  000926  0E02               	movlw	2
  4358  000928  5C45               	subwf	xtoa@i,w,c
  4359  00092A  A0D8               	btfss	status,0,c
  4360  00092C  D01B               	goto	u1840
  4361  00092E                     u1800:
  4362  00092E  503D               	movf	xtoa@n,w,c
  4363  000930  103E               	iorwf	xtoa@n+1,w,c
  4364  000932  103F               	iorwf	xtoa@n+2,w,c
  4365  000934  1040               	iorwf	xtoa@n+3,w,c
  4366  000936  1041               	iorwf	xtoa@n+4,w,c
  4367  000938  1042               	iorwf	xtoa@n+5,w,c
  4368  00093A  1043               	iorwf	xtoa@n+6,w,c
  4369  00093C  1044               	iorwf	xtoa@n+7,w,c
  4370  00093E  A4D8               	btfss	status,2,c
  4371  000940  D75B               	goto	l2445
  4372  000942  BE3A               	btfsc	xtoa@p+1,7,c
  4373  000944  D005               	goto	u1820
  4374  000946  503A               	movf	xtoa@p+1,w,c
  4375  000948  E102               	bnz	u1821
  4376  00094A  0439               	decf	xtoa@p,w,c
  4377  00094C  B0D8               	btfsc	status,0,c
  4378  00094E                     u1821:
  4379  00094E  D754               	goto	l2445
  4380  000950                     u1820:
  4381  000950  BE3C               	btfsc	xtoa@w+1,7,c
  4382  000952  D008               	goto	u1840
  4383  000954  503C               	movf	xtoa@w+1,w,c
  4384  000956  E103               	bnz	u1830
  4385  000958  043B               	decf	xtoa@w,w,c
  4386  00095A  A0D8               	btfss	status,0,c
  4387  00095C  D003               	goto	u1840
  4388  00095E                     u1830:
  4389  00095E  0100               	movlb	0	; () banked
  4390  000960  B3DB               	btfsc	_flags& (0+255),1,b
  4391  000962  D74A               	goto	l2445
  4392  000964                     u1840:
  4393                           
  4394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  4395  000964  0100               	movlb	0	; () banked
  4396  000966  A9DB               	btfss	_flags& (0+255),4,b
  4397  000968  D016               	goto	l2491
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  4401  00096A  0645               	decf	xtoa@i,f,c
  4402  00096C  A0D8               	btfss	status,0,c
  4403  00096E  0646               	decf	xtoa@i+1,f,c
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  4407  000970  0E80               	movlw	low _dbuf
  4408  000972  2445               	addwf	xtoa@i,w,c
  4409  000974  6ED9               	movwf	fsr2l,c
  4410  000976  0E01               	movlw	high _dbuf
  4411  000978  2046               	addwfc	xtoa@i+1,w,c
  4412  00097A  6EDA               	movwf	fsr2h,c
  4413  00097C  C02C  FFDF         	movff	xtoa@x,indf2
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  4417  000980  0645               	decf	xtoa@i,f,c
  4418  000982  A0D8               	btfss	status,0,c
  4419  000984  0646               	decf	xtoa@i+1,f,c
  4420                           
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  4422  000986  0E80               	movlw	low _dbuf
  4423  000988  2445               	addwf	xtoa@i,w,c
  4424  00098A  6ED9               	movwf	fsr2l,c
  4425  00098C  0E01               	movlw	high _dbuf
  4426  00098E  2046               	addwfc	xtoa@i+1,w,c
  4427  000990  6EDA               	movwf	fsr2h,c
  4428  000992  0E30               	movlw	48
  4429  000994  6EDF               	movwf	indf2,c
  4430  000996                     l2491:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  4434  000996  C022  F017         	movff	xtoa@fp,pad@fp
  4435  00099A  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  4436  00099E  0E80               	movlw	low _dbuf
  4437  0009A0  2445               	addwf	xtoa@i,w,c
  4438  0009A2  6E19               	movwf	pad@buf,c
  4439  0009A4  0E01               	movlw	high _dbuf
  4440  0009A6  2046               	addwfc	xtoa@i+1,w,c
  4441  0009A8  6E1A               	movwf	pad@buf+1,c
  4442  0009AA  C03B  F01B         	movff	xtoa@w,pad@p
  4443  0009AE  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  4444  0009B2  EC58  F008         	call	_pad	;wreg free
  4445  0009B6  C017  F022         	movff	?_pad,?_xtoa
  4446  0009BA  C018  F023         	movff	?_pad+1,?_xtoa+1
  4447  0009BE  0012               	return		;funcret
  4448  0009C0                     __end_of_xtoa:
  4449                           	opt callstack 0
  4450                           
  4451 ;; *************** function _toupper *****************
  4452 ;; Defined at:
  4453 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  c               2   10[COMRAM] int 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  2   10[COMRAM] int 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, status,0
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;Total ram usage:        8 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    5
  4474 ;; This function calls:
  4475 ;;		_islower
  4476 ;; This function is called by:
  4477 ;;		_xtoa
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text12
  4482  001640                     __ptext12:
  4483                           	opt callstack 0
  4484  001640                     _toupper:
  4485                           	opt callstack 21
  4486                           
  4487                           ;incstack = 0
  4488  001640  0E9F               	movlw	159
  4489  001642  6E0D               	movwf	??_toupper& (0+255),c
  4490  001644  0EFF               	movlw	255
  4491  001646  6E0E               	movwf	(??_toupper+1)& (0+255),c
  4492  001648  C00B  F00F         	movff	toupper@c,??_toupper+2
  4493  00164C  C00C  F010         	movff	toupper@c+1,??_toupper+3
  4494  001650  500D               	movf	??_toupper,w,c
  4495  001652  260F               	addwf	??_toupper+2,f,c
  4496  001654  500E               	movf	??_toupper+1,w,c
  4497  001656  2210               	addwfc	??_toupper+3,f,c
  4498  001658  5010               	movf	??_toupper+3,w,c
  4499  00165A  E106               	bnz	u1610
  4500  00165C  0E1A               	movlw	26
  4501  00165E  5C0F               	subwf	??_toupper+2,w,c
  4502  001660  B0D8               	btfsc	status,0,c
  4503  001662  D002               	goto	u1610
  4504  001664  0E01               	movlw	1
  4505  001666  D001               	goto	u1620
  4506  001668                     u1610:
  4507  001668  0E00               	movlw	0
  4508  00166A                     u1620:
  4509  00166A  6E11               	movwf	_toupper$1766,c
  4510  00166C  6A12               	clrf	_toupper$1766+1,c
  4511  00166E  5011               	movf	_toupper$1766,w,c
  4512  001670  1012               	iorwf	_toupper$1766+1,w,c
  4513  001672  B4D8               	btfsc	status,2,c
  4514  001674  D005               	goto	l1279
  4515  001676  0E5F               	movlw	95
  4516  001678  140B               	andwf	toupper@c,w,c
  4517  00167A  6E0B               	movwf	?_toupper,c
  4518  00167C  6A0C               	clrf	?_toupper+1,c
  4519  00167E  0012               	return	
  4520  001680                     l1279:
  4521  001680  C00B  F00B         	movff	toupper@c,?_toupper
  4522  001684  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  4523  001688  0012               	return		;funcret
  4524  00168A                     __end_of_toupper:
  4525                           	opt callstack 0
  4526                           
  4527 ;; *************** function _islower *****************
  4528 ;; Defined at:
  4529 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  c               2    4[COMRAM] int 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  2    4[COMRAM] int 
  4536 ;; Registers used:
  4537 ;;		wreg, status,2, status,0
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;Total ram usage:        6 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    4
  4550 ;; This function calls:
  4551 ;;		Nothing
  4552 ;; This function is called by:
  4553 ;;		_toupper
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text13
  4558  00179C                     __ptext13:
  4559                           	opt callstack 0
  4560  00179C                     _islower:
  4561                           	opt callstack 21
  4562                           
  4563                           ;incstack = 0
  4564  00179C  0E9F               	movlw	159
  4565  00179E  6E07               	movwf	??_islower& (0+255),c
  4566  0017A0  0EFF               	movlw	255
  4567  0017A2  6E08               	movwf	(??_islower+1)& (0+255),c
  4568  0017A4  C005  F009         	movff	islower@c,??_islower+2
  4569  0017A8  C006  F00A         	movff	islower@c+1,??_islower+3
  4570  0017AC  5007               	movf	??_islower,w,c
  4571  0017AE  2609               	addwf	??_islower+2,f,c
  4572  0017B0  5008               	movf	??_islower+1,w,c
  4573  0017B2  220A               	addwfc	??_islower+3,f,c
  4574  0017B4  500A               	movf	??_islower+3,w,c
  4575  0017B6  E106               	bnz	u1510
  4576  0017B8  0E1A               	movlw	26
  4577  0017BA  5C09               	subwf	??_islower+2,w,c
  4578  0017BC  B0D8               	btfsc	status,0,c
  4579  0017BE  D002               	goto	u1510
  4580  0017C0  0E01               	movlw	1
  4581  0017C2  D001               	goto	u1520
  4582  0017C4                     u1510:
  4583  0017C4  0E00               	movlw	0
  4584  0017C6                     u1520:
  4585  0017C6  6E05               	movwf	?_islower,c
  4586  0017C8  6A06               	clrf	?_islower+1,c
  4587  0017CA  0012               	return		;funcret
  4588  0017CC                     __end_of_islower:
  4589                           	opt callstack 0
  4590                           
  4591 ;; *************** function _isupper *****************
  4592 ;; Defined at:
  4593 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  c               2    4[COMRAM] int 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2    4[COMRAM] int 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;Total ram usage:        6 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    4
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_xtoa
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text14
  4622  0017CC                     __ptext14:
  4623                           	opt callstack 0
  4624  0017CC                     _isupper:
  4625                           	opt callstack 22
  4626                           
  4627                           ;incstack = 0
  4628  0017CC  0EBF               	movlw	191
  4629  0017CE  6E07               	movwf	??_isupper& (0+255),c
  4630  0017D0  0EFF               	movlw	255
  4631  0017D2  6E08               	movwf	(??_isupper+1)& (0+255),c
  4632  0017D4  C005  F009         	movff	isupper@c,??_isupper+2
  4633  0017D8  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4634  0017DC  5007               	movf	??_isupper,w,c
  4635  0017DE  2609               	addwf	??_isupper+2,f,c
  4636  0017E0  5008               	movf	??_isupper+1,w,c
  4637  0017E2  220A               	addwfc	??_isupper+3,f,c
  4638  0017E4  500A               	movf	??_isupper+3,w,c
  4639  0017E6  E106               	bnz	u1570
  4640  0017E8  0E1A               	movlw	26
  4641  0017EA  5C09               	subwf	??_isupper+2,w,c
  4642  0017EC  B0D8               	btfsc	status,0,c
  4643  0017EE  D002               	goto	u1570
  4644  0017F0  0E01               	movlw	1
  4645  0017F2  D001               	goto	u1580
  4646  0017F4                     u1570:
  4647  0017F4  0E00               	movlw	0
  4648  0017F6                     u1580:
  4649  0017F6  6E05               	movwf	?_isupper,c
  4650  0017F8  6A06               	clrf	?_isupper+1,c
  4651  0017FA  0012               	return		;funcret
  4652  0017FC                     __end_of_isupper:
  4653                           	opt callstack 0
  4654                           
  4655 ;; *************** function _isalpha *****************
  4656 ;; Defined at:
  4657 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  c               2    4[COMRAM] int 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  2    4[COMRAM] int 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;Total ram usage:        6 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    4
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_xtoa
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text15
  4686  001738                     __ptext15:
  4687                           	opt callstack 0
  4688  001738                     _isalpha:
  4689                           	opt callstack 22
  4690                           
  4691                           ;incstack = 0
  4692  001738  0E9F               	movlw	159
  4693  00173A  6E07               	movwf	??_isalpha& (0+255),c
  4694  00173C  0EFF               	movlw	255
  4695  00173E  6E08               	movwf	(??_isalpha+1)& (0+255),c
  4696  001740  0E20               	movlw	32
  4697  001742  1005               	iorwf	isalpha@c,w,c
  4698  001744  6E09               	movwf	(??_isalpha+2)& (0+255),c
  4699  001746  0E00               	movlw	0
  4700  001748  1006               	iorwf	isalpha@c+1,w,c
  4701  00174A  6E0A               	movwf	(??_isalpha+3)& (0+255),c
  4702  00174C  5007               	movf	??_isalpha,w,c
  4703  00174E  2609               	addwf	??_isalpha+2,f,c
  4704  001750  5008               	movf	??_isalpha+1,w,c
  4705  001752  220A               	addwfc	??_isalpha+3,f,c
  4706  001754  500A               	movf	??_isalpha+3,w,c
  4707  001756  E106               	bnz	u1590
  4708  001758  0E1A               	movlw	26
  4709  00175A  5C09               	subwf	??_isalpha+2,w,c
  4710  00175C  B0D8               	btfsc	status,0,c
  4711  00175E  D002               	goto	u1590
  4712  001760  0E01               	movlw	1
  4713  001762  D001               	goto	u1600
  4714  001764                     u1590:
  4715  001764  0E00               	movlw	0
  4716  001766                     u1600:
  4717  001766  6E05               	movwf	?_isalpha,c
  4718  001768  6A06               	clrf	?_isalpha+1,c
  4719  00176A  0012               	return		;funcret
  4720  00176C                     __end_of_isalpha:
  4721                           	opt callstack 0
  4722                           
  4723 ;; *************** function _ctoa *****************
  4724 ;; Defined at:
  4725 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  4728 ;;		 -> NULL(0), 
  4729 ;;  c               1   35[COMRAM] unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  w               2   36[COMRAM] int 
  4732 ;;  l               2    0        int 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  2   33[COMRAM] int 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4742 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;Total ram usage:        5 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    9
  4749 ;; This function calls:
  4750 ;;		_pad
  4751 ;; This function is called by:
  4752 ;;		_vfpfcnvrt
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text16
  4757  0015F0                     __ptext16:
  4758                           	opt callstack 0
  4759  0015F0                     _ctoa:
  4760                           	opt callstack 18
  4761                           
  4762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  4763                           
  4764                           ;incstack = 0
  4765  0015F0  0100               	movlb	0	; () banked
  4766  0015F2  51D7               	movf	_width& (0+255),w,b
  4767  0015F4  11D8               	iorwf	(_width+1)& (0+255),w,b
  4768  0015F6  A4D8               	btfss	status,2,c
  4769  0015F8  D005               	goto	l2419
  4770                           
  4771                           ; BSR set to: 0
  4772  0015FA  C0D7  F025         	movff	_width,ctoa@w
  4773  0015FE  C0D8  F026         	movff	_width+1,ctoa@w+1
  4774  001602  D006               	goto	l2421
  4775  001604                     l2419:
  4776                           
  4777                           ; BSR set to: 0
  4778  001604  0EFF               	movlw	255
  4779  001606  25D7               	addwf	_width& (0+255),w,b
  4780  001608  6E25               	movwf	ctoa@w,c
  4781  00160A  0EFF               	movlw	255
  4782  00160C  21D8               	addwfc	(_width+1)& (0+255),w,b
  4783  00160E  6E26               	movwf	ctoa@w+1,c
  4784  001610                     l2421:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  4788  001610  C024  F180         	movff	ctoa@c,_dbuf
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  4792  001614  0E00               	movlw	0
  4793  001616  0101               	movlb	1	; () banked
  4794  001618  6F81               	movwf	(_dbuf+1)& (0+255),b
  4795                           
  4796                           ; BSR set to: 1
  4797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  4798  00161A  C022  F017         	movff	ctoa@fp,pad@fp
  4799  00161E  C023  F018         	movff	ctoa@fp+1,pad@fp+1
  4800  001622  0E80               	movlw	low _dbuf
  4801  001624  6E19               	movwf	pad@buf,c
  4802  001626  0E01               	movlw	high _dbuf
  4803  001628  6E1A               	movwf	pad@buf+1,c
  4804  00162A  C025  F01B         	movff	ctoa@w,pad@p
  4805  00162E  C026  F01C         	movff	ctoa@w+1,pad@p+1
  4806  001632  EC58  F008         	call	_pad	;wreg free
  4807  001636  C017  F022         	movff	?_pad,?_ctoa
  4808  00163A  C018  F023         	movff	?_pad+1,?_ctoa+1
  4809  00163E  0012               	return		;funcret
  4810  001640                     __end_of_ctoa:
  4811                           	opt callstack 0
  4812                           
  4813 ;; *************** function _pad *****************
  4814 ;; Defined at:
  4815 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4818 ;;		 -> NULL(0), 
  4819 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4820 ;;		 -> dbuf(32), 
  4821 ;;  p               2   26[COMRAM] int 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  w               2   31[COMRAM] int 
  4824 ;;  i               2   29[COMRAM] int 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  2   22[COMRAM] int 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4834 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;Total ram usage:       11 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    8
  4841 ;; This function calls:
  4842 ;;		_fputc
  4843 ;;		_fputs
  4844 ;;		_strlen
  4845 ;; This function is called by:
  4846 ;;		_ctoa
  4847 ;;		_xtoa
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text17
  4852  0010B0                     __ptext17:
  4853                           	opt callstack 0
  4854  0010B0                     _pad:
  4855                           	opt callstack 18
  4856                           
  4857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4858                           
  4859                           ;incstack = 0
  4860  0010B0  0100               	movlb	0	; () banked
  4861  0010B2  A1DB               	btfss	_flags& (0+255),0,b
  4862  0010B4  D00A               	goto	l2357
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4866  0010B6  C019  F010         	movff	pad@buf,fputs@s
  4867  0010BA  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4868  0010BE  C017  F012         	movff	pad@fp,fputs@fp
  4869  0010C2  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4870  0010C6  EC64  F00B         	call	_fputs	;wreg free
  4871  0010CA                     l2357:
  4872                           
  4873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4874  0010CA  BE1C               	btfsc	pad@p+1,7,c
  4875  0010CC  D005               	goto	l2361
  4876  0010CE  C01B  F020         	movff	pad@p,pad@w
  4877  0010D2  C01C  F021         	movff	pad@p+1,pad@w+1
  4878  0010D6  D004               	goto	l431
  4879  0010D8                     l2361:
  4880  0010D8  0E00               	movlw	0
  4881  0010DA  6E21               	movwf	pad@w+1,c
  4882  0010DC  0E00               	movlw	0
  4883  0010DE  6E20               	movwf	pad@w,c
  4884  0010E0                     l431:
  4885                           
  4886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4887  0010E0  0E00               	movlw	0
  4888  0010E2  6E1F               	movwf	pad@i+1,c
  4889  0010E4  0E00               	movlw	0
  4890  0010E6  6E1E               	movwf	pad@i,c
  4891                           
  4892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4893  0010E8  D00C               	goto	l2367
  4894  0010EA                     l2363:
  4895                           
  4896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4897  0010EA  0E00               	movlw	0
  4898  0010EC  6E08               	movwf	fputc@c+1,c
  4899  0010EE  0E20               	movlw	32
  4900  0010F0  6E07               	movwf	fputc@c,c
  4901  0010F2  C017  F009         	movff	pad@fp,fputc@fp
  4902  0010F6  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4903  0010FA  EC6B  F00A         	call	_fputc	;wreg free
  4904                           
  4905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4906  0010FE  4A1E               	infsnz	pad@i,f,c
  4907  001100  2A1F               	incf	pad@i+1,f,c
  4908  001102                     l2367:
  4909                           
  4910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4911  001102  5020               	movf	pad@w,w,c
  4912  001104  5C1E               	subwf	pad@i,w,c
  4913  001106  501F               	movf	pad@i+1,w,c
  4914  001108  0A80               	xorlw	128
  4915  00110A  6E1D               	movwf	??_pad& (0+255),c
  4916  00110C  5021               	movf	pad@w+1,w,c
  4917  00110E  0A80               	xorlw	128
  4918  001110  581D               	subwfb	??_pad& (0+255),w,c
  4919  001112  A0D8               	btfss	status,0,c
  4920  001114  D7EA               	goto	l2363
  4921                           
  4922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4923  001116  0100               	movlb	0	; () banked
  4924  001118  B1DB               	btfsc	_flags& (0+255),0,b
  4925  00111A  D00A               	goto	l2371
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4929  00111C  C019  F010         	movff	pad@buf,fputs@s
  4930  001120  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4931  001124  C017  F012         	movff	pad@fp,fputs@fp
  4932  001128  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4933  00112C  EC64  F00B         	call	_fputs	;wreg free
  4934  001130                     l2371:
  4935                           
  4936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4937  001130  C019  F005         	movff	pad@buf,strlen@s
  4938  001134  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4939  001138  EC42  F00C         	call	_strlen	;wreg free
  4940  00113C  5020               	movf	pad@w,w,c
  4941  00113E  2405               	addwf	?_strlen,w,c
  4942  001140  6E17               	movwf	?_pad,c
  4943  001142  5021               	movf	pad@w+1,w,c
  4944  001144  2006               	addwfc	?_strlen+1,w,c
  4945  001146  6E18               	movwf	?_pad+1,c
  4946  001148  0012               	return		;funcret
  4947  00114A                     __end_of_pad:
  4948                           	opt callstack 0
  4949                           
  4950 ;; *************** function _strlen *****************
  4951 ;; Defined at:
  4952 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4955 ;;		 -> dbuf(32), 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4958 ;;		 -> dbuf(32), 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  2    4[COMRAM] unsigned int 
  4961 ;; Registers used:
  4962 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;Total ram usage:        4 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:    4
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_pad
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text18
  4983  001884                     __ptext18:
  4984                           	opt callstack 0
  4985  001884                     _strlen:
  4986                           	opt callstack 21
  4987                           
  4988                           ;incstack = 0
  4989  001884  C005  F007         	movff	strlen@s,strlen@a
  4990  001888  C006  F008         	movff	strlen@s+1,strlen@a+1
  4991  00188C  D002               	goto	l2343
  4992  00188E                     l2341:
  4993  00188E  4A05               	infsnz	strlen@s,f,c
  4994  001890  2A06               	incf	strlen@s+1,f,c
  4995  001892                     l2343:
  4996  001892  C005  FFD9         	movff	strlen@s,fsr2l
  4997  001896  C006  FFDA         	movff	strlen@s+1,fsr2h
  4998  00189A  50DF               	movf	indf2,w,c
  4999  00189C  A4D8               	btfss	status,2,c
  5000  00189E  D7F7               	goto	l2341
  5001  0018A0  5007               	movf	strlen@a,w,c
  5002  0018A2  5C05               	subwf	strlen@s,w,c
  5003  0018A4  6E05               	movwf	?_strlen,c
  5004  0018A6  5008               	movf	strlen@a+1,w,c
  5005  0018A8  5806               	subwfb	strlen@s+1,w,c
  5006  0018AA  6E06               	movwf	?_strlen+1,c
  5007  0018AC  0012               	return		;funcret
  5008  0018AE                     __end_of_strlen:
  5009                           	opt callstack 0
  5010                           
  5011 ;; *************** function _fputs *****************
  5012 ;; Defined at:
  5013 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  s               2   15[COMRAM] PTR const unsigned char 
  5016 ;;		 -> dbuf(32), 
  5017 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  5018 ;;		 -> NULL(0), 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  i               2   20[COMRAM] int 
  5021 ;;  c               1   19[COMRAM] unsigned char 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  2   15[COMRAM] int 
  5024 ;; Registers used:
  5025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;Total ram usage:        7 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    7
  5038 ;; This function calls:
  5039 ;;		_fputc
  5040 ;; This function is called by:
  5041 ;;		_pad
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text19
  5046  0016C8                     __ptext19:
  5047                           	opt callstack 0
  5048  0016C8                     _fputs:
  5049                           	opt callstack 18
  5050                           
  5051                           ;incstack = 0
  5052  0016C8  0E00               	movlw	0
  5053  0016CA  6E16               	movwf	fputs@i+1,c
  5054  0016CC  0E00               	movlw	0
  5055  0016CE  6E15               	movwf	fputs@i,c
  5056  0016D0  D00B               	goto	l2337
  5057  0016D2                     l2333:
  5058  0016D2  C014  F007         	movff	fputs@c,fputc@c
  5059  0016D6  6A08               	clrf	fputc@c+1,c
  5060  0016D8  C012  F009         	movff	fputs@fp,fputc@fp
  5061  0016DC  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  5062  0016E0  EC6B  F00A         	call	_fputc	;wreg free
  5063  0016E4  4A15               	infsnz	fputs@i,f,c
  5064  0016E6  2A16               	incf	fputs@i+1,f,c
  5065  0016E8                     l2337:
  5066  0016E8  5015               	movf	fputs@i,w,c
  5067  0016EA  2410               	addwf	fputs@s,w,c
  5068  0016EC  6ED9               	movwf	fsr2l,c
  5069  0016EE  5016               	movf	fputs@i+1,w,c
  5070  0016F0  2011               	addwfc	fputs@s+1,w,c
  5071  0016F2  6EDA               	movwf	fsr2h,c
  5072  0016F4  50DF               	movf	indf2,w,c
  5073  0016F6  6E14               	movwf	fputs@c,c
  5074  0016F8  5014               	movf	fputs@c,w,c
  5075  0016FA  B4D8               	btfsc	status,2,c
  5076  0016FC  0012               	return	
  5077  0016FE  D7E9               	goto	l2333
  5078  001700                     __end_of_fputs:
  5079                           	opt callstack 0
  5080                           
  5081 ;; *************** function _fputc *****************
  5082 ;; Defined at:
  5083 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  c               2    6[COMRAM] int 
  5086 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  5087 ;;		 -> NULL(0), 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;		None
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  2    6[COMRAM] int 
  5092 ;; Registers used:
  5093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;Total ram usage:        9 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    6
  5106 ;; This function calls:
  5107 ;;		_putch
  5108 ;; This function is called by:
  5109 ;;		_pad
  5110 ;;		_vfpfcnvrt
  5111 ;;		_fputs
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text20
  5116  0014D6                     __ptext20:
  5117                           	opt callstack 0
  5118  0014D6                     _fputc:
  5119                           	opt callstack 18
  5120                           
  5121                           ;incstack = 0
  5122  0014D6  5009               	movf	fputc@fp,w,c
  5123  0014D8  100A               	iorwf	fputc@fp+1,w,c
  5124  0014DA  B4D8               	btfsc	status,2,c
  5125  0014DC  D004               	goto	u1460
  5126  0014DE  5009               	movf	fputc@fp,w,c
  5127  0014E0  100A               	iorwf	fputc@fp+1,w,c
  5128  0014E2  A4D8               	btfss	status,2,c
  5129  0014E4  D004               	goto	l2323
  5130  0014E6                     u1460:
  5131  0014E6  5007               	movf	fputc@c,w,c
  5132  0014E8  ECBF  F00C         	call	_putch
  5133  0014EC  0012               	return	
  5134  0014EE                     l2323:
  5135  0014EE  EE20 F004          	lfsr	2,4
  5136  0014F2  5009               	movf	fputc@fp,w,c
  5137  0014F4  26D9               	addwf	fsr2l,f,c
  5138  0014F6  500A               	movf	fputc@fp+1,w,c
  5139  0014F8  22DA               	addwfc	fsr2h,f,c
  5140  0014FA  50DE               	movf	postinc2,w,c
  5141  0014FC  10DE               	iorwf	postinc2,w,c
  5142  0014FE  B4D8               	btfsc	status,2,c
  5143  001500  D016               	goto	u1480
  5144  001502  EE20 F004          	lfsr	2,4
  5145  001506  5009               	movf	fputc@fp,w,c
  5146  001508  26D9               	addwf	fsr2l,f,c
  5147  00150A  500A               	movf	fputc@fp+1,w,c
  5148  00150C  22DA               	addwfc	fsr2h,f,c
  5149  00150E  EE10 F002          	lfsr	1,2
  5150  001512  5009               	movf	fputc@fp,w,c
  5151  001514  26E1               	addwf	fsr1l,f,c
  5152  001516  500A               	movf	fputc@fp+1,w,c
  5153  001518  22E2               	addwfc	fsr1h,f,c
  5154  00151A  50DE               	movf	postinc2,w,c
  5155  00151C  5CE6               	subwf	postinc1,w,c
  5156  00151E  50E6               	movf	postinc1,w,c
  5157  001520  0A80               	xorlw	128
  5158  001522  6E0F               	movwf	(??_fputc+4)& (0+255),c
  5159  001524  50DE               	movf	postinc2,w,c
  5160  001526  0A80               	xorlw	128
  5161  001528  580F               	subwfb	(??_fputc+4)& (0+255),w,c
  5162  00152A  B0D8               	btfsc	status,0,c
  5163  00152C  0012               	return	
  5164  00152E                     u1480:
  5165  00152E  EE20 F002          	lfsr	2,2
  5166  001532  5009               	movf	fputc@fp,w,c
  5167  001534  26D9               	addwf	fsr2l,f,c
  5168  001536  500A               	movf	fputc@fp+1,w,c
  5169  001538  22DA               	addwfc	fsr2h,f,c
  5170  00153A  2ADE               	incf	postinc2,f,c
  5171  00153C  0E00               	movlw	0
  5172  00153E  22DD               	addwfc	postdec2,f,c
  5173  001540  0012               	return		;funcret
  5174  001542                     __end_of_fputc:
  5175                           	opt callstack 0
  5176                           
  5177 ;; *************** function _putch *****************
  5178 ;; Defined at:
  5179 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  txData          1    wreg     unsigned char 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  txData          1    5[COMRAM] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;Total ram usage:        1 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    5
  5200 ;; This function calls:
  5201 ;;		_EUSART1_Write
  5202 ;; This function is called by:
  5203 ;;		_fputc
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text21
  5208  00197E                     __ptext21:
  5209                           	opt callstack 0
  5210  00197E                     _putch:
  5211                           	opt callstack 18
  5212                           
  5213                           ;incstack = 0
  5214                           ;putch@txData stored from wreg
  5215  00197E  6E06               	movwf	putch@txData,c
  5216                           
  5217                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  5218  001980  5006               	movf	putch@txData,w,c
  5219  001982  EC80  F00B         	call	_EUSART1_Write
  5220  001986  0012               	return		;funcret
  5221  001988                     __end_of_putch:
  5222                           	opt callstack 0
  5223                           
  5224 ;; *************** function _EUSART1_Write *****************
  5225 ;; Defined at:
  5226 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;  txData          1    wreg     unsigned char 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  txData          1    4[COMRAM] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;Total ram usage:        1 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    4
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		_putch
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text22
  5255  001700                     __ptext22:
  5256                           	opt callstack 0
  5257  001700                     _EUSART1_Write:
  5258                           	opt callstack 18
  5259                           
  5260                           ;incstack = 0
  5261                           ;EUSART1_Write@txData stored from wreg
  5262  001700  6E05               	movwf	EUSART1_Write@txData,c
  5263  001702                     
  5264                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  5265                           
  5266                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  5267  001702  0100               	movlb	0	; () banked
  5268  001704  51E9               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  5269  001706  B4D8               	btfsc	status,2,c
  5270  001708  D7FC               	goto	l2297
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  5274  00170A  B89D               	btfsc	3997,4,c	;volatile
  5275  00170C  D003               	goto	l155
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  5279  00170E  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5280                           
  5281                           ;mcc_generated_files/eusart1.c: 182:     }
  5282  001712  D010               	goto	l2313
  5283  001714                     l155:
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  5287  001714  989D               	bcf	3997,4,c	;volatile
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5291  001716  0E40               	movlw	low _eusart1TxBuffer
  5292  001718  245A               	addwf	_eusart1TxHead,w,c	;volatile
  5293  00171A  6ED9               	movwf	fsr2l,c
  5294  00171C  6ADA               	clrf	fsr2h,c
  5295  00171E  0E01               	movlw	high _eusart1TxBuffer
  5296  001720  22DA               	addwfc	fsr2h,f,c
  5297  001722  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  5298                           
  5299                           ; BSR set to: 0
  5300  001726  2A5A               	incf	_eusart1TxHead,f,c	;volatile
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5304  001728  0E3F               	movlw	63
  5305  00172A  645A               	cpfsgt	_eusart1TxHead,c	;volatile
  5306  00172C  D002               	goto	l2311
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5310  00172E  0E00               	movlw	0
  5311  001730  6E5A               	movwf	_eusart1TxHead,c	;volatile
  5312  001732                     l2311:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5316  001732  07E9               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  5317  001734                     l2313:
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  5321  001734  889D               	bsf	3997,4,c	;volatile
  5322                           
  5323                           ; BSR set to: 0
  5324  001736  0012               	return		;funcret
  5325  001738                     __end_of_EUSART1_Write:
  5326                           	opt callstack 0
  5327                           
  5328 ;; *************** function _atoi *****************
  5329 ;; Defined at:
  5330 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5333 ;;		 -> STR_24(35), STR_23(25), STR_22(17), STR_21(16), 
  5334 ;;		 -> STR_20(26), STR_19(18), STR_18(17), STR_17(37), 
  5335 ;;		 -> STR_16(35), STR_15(25), STR_14(17), STR_13(34), 
  5336 ;;		 -> STR_12(31), STR_11(19), STR_10(31), STR_9(14), 
  5337 ;;		 -> STR_8(29), STR_7(18), STR_6(18), STR_5(17), 
  5338 ;;		 -> STR_4(37), STR_3(19), STR_2(24), STR_1(6), 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  n               2   24[COMRAM] int 
  5341 ;;  neg             2   17[COMRAM] int 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  2   11[COMRAM] int 
  5344 ;; Registers used:
  5345 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:       15 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    5
  5358 ;; This function calls:
  5359 ;;		___wmul
  5360 ;;		_isdigit
  5361 ;;		_isspace
  5362 ;; This function is called by:
  5363 ;;		_vfpfcnvrt
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text23
  5368  000CC4                     __ptext23:
  5369                           	opt callstack 0
  5370  000CC4                     _atoi:
  5371                           	opt callstack 22
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;incstack = 0
  5375  000CC4  0E00               	movlw	0
  5376  000CC6  6E1A               	movwf	atoi@n+1,c
  5377  000CC8  0E00               	movlw	0
  5378  000CCA  6E19               	movwf	atoi@n,c
  5379  000CCC  0E00               	movlw	0
  5380  000CCE  6E13               	movwf	atoi@neg+1,c
  5381  000CD0  0E00               	movlw	0
  5382  000CD2  6E12               	movwf	atoi@neg,c
  5383  000CD4  D002               	goto	l2499
  5384  000CD6                     l2497:
  5385  000CD6  4A0C               	infsnz	atoi@s,f,c
  5386  000CD8  2A0D               	incf	atoi@s+1,f,c
  5387  000CDA                     l2499:
  5388  000CDA  0E01               	movlw	1
  5389  000CDC  6E18               	movwf	_atoi$1676,c
  5390  000CDE  C00C  FFF6         	movff	atoi@s,tblptrl
  5391  000CE2  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5392  000CE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5393  000CE6  6AF8               	clrf	tblptru,c
  5394  000CE8                     	endif
  5395  000CE8                     	if	0	;tblptru may be non-zero
  5396  000CE8                     	endif
  5397  000CE8  0008               	tblrd		*
  5398  000CEA  50F5               	movf	tablat,w,c
  5399  000CEC  0A20               	xorlw	32
  5400  000CEE  B4D8               	btfsc	status,2,c
  5401  000CF0  D019               	goto	l2507
  5402  000CF2  0EF7               	movlw	247
  5403  000CF4  6E0E               	movwf	??_atoi& (0+255),c
  5404  000CF6  0EFF               	movlw	255
  5405  000CF8  6E0F               	movwf	(??_atoi+1)& (0+255),c
  5406  000CFA  C00C  FFF6         	movff	atoi@s,tblptrl
  5407  000CFE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5408  000D02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5409  000D02  6AF8               	clrf	tblptru,c
  5410  000D04                     	endif
  5411  000D04                     	if	0	;tblptru may be non-zero
  5412  000D04                     	endif
  5413  000D04  0008               	tblrd		*
  5414  000D06  50F5               	movf	tablat,w,c
  5415  000D08  6E10               	movwf	(??_atoi+2)& (0+255),c
  5416  000D0A  6A11               	clrf	(??_atoi+3)& (0+255),c
  5417  000D0C  500E               	movf	??_atoi,w,c
  5418  000D0E  2610               	addwf	??_atoi+2,f,c
  5419  000D10  500F               	movf	??_atoi+1,w,c
  5420  000D12  2211               	addwfc	??_atoi+3,f,c
  5421  000D14  5011               	movf	??_atoi+3,w,c
  5422  000D16  E104               	bnz	u1870
  5423  000D18  0E05               	movlw	5
  5424  000D1A  5C10               	subwf	??_atoi+2,w,c
  5425  000D1C  A0D8               	btfss	status,0,c
  5426  000D1E  D002               	goto	l2507
  5427  000D20                     u1870:
  5428  000D20  0E00               	movlw	0
  5429  000D22  6E18               	movwf	_atoi$1676,c
  5430  000D24                     l2507:
  5431  000D24  C018  F014         	movff	_atoi$1676,_atoi$1675
  5432  000D28  6A15               	clrf	_atoi$1675+1,c
  5433  000D2A  5014               	movf	_atoi$1675,w,c
  5434  000D2C  1015               	iorwf	_atoi$1675+1,w,c
  5435  000D2E  B4D8               	btfsc	status,2,c
  5436  000D30  D008               	goto	l2517
  5437  000D32  D7D1               	goto	l2497
  5438  000D34                     l2513:
  5439  000D34  0E00               	movlw	0
  5440  000D36  6E13               	movwf	atoi@neg+1,c
  5441  000D38  0E01               	movlw	1
  5442  000D3A  6E12               	movwf	atoi@neg,c
  5443  000D3C                     l2515:
  5444  000D3C  4A0C               	infsnz	atoi@s,f,c
  5445  000D3E  2A0D               	incf	atoi@s+1,f,c
  5446  000D40  D030               	goto	l2523
  5447  000D42                     l2517:
  5448  000D42  C00C  FFF6         	movff	atoi@s,tblptrl
  5449  000D46  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5450  000D4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5451  000D4A  6AF8               	clrf	tblptru,c
  5452  000D4C                     	endif
  5453  000D4C                     	if	0	;tblptru may be non-zero
  5454  000D4C                     	endif
  5455  000D4C  0008               	tblrd		*
  5456  000D4E  50F5               	movf	tablat,w,c
  5457  000D50  6E0E               	movwf	??_atoi& (0+255),c
  5458  000D52  6A0F               	clrf	(??_atoi+1)& (0+255),c
  5459                           
  5460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5461                           ; Switch size 1, requested type "simple"
  5462                           ; Number of cases is 1, Range of values is 0 to 0
  5463                           ; switch strategies available:
  5464                           ; Name         Instructions Cycles
  5465                           ; simple_byte            4     3 (average)
  5466                           ;	Chosen strategy is simple_byte
  5467  000D54  500F               	movf	??_atoi+1,w,c
  5468  000D56  0A00               	xorlw	0	; case 0
  5469  000D58  A4D8               	btfss	status,2,c
  5470  000D5A  D023               	goto	l2523
  5471                           
  5472                           ; Switch size 1, requested type "simple"
  5473                           ; Number of cases is 2, Range of values is 43 to 45
  5474                           ; switch strategies available:
  5475                           ; Name         Instructions Cycles
  5476                           ; simple_byte            7     4 (average)
  5477                           ;	Chosen strategy is simple_byte
  5478  000D5C  500E               	movf	??_atoi,w,c
  5479  000D5E  0A2B               	xorlw	43	; case 43
  5480  000D60  B4D8               	btfsc	status,2,c
  5481  000D62  D7EC               	goto	l2515
  5482  000D64  0A06               	xorlw	6	; case 45
  5483  000D66  B4D8               	btfsc	status,2,c
  5484  000D68  D7E5               	goto	l2513
  5485  000D6A  D01B               	goto	l2523
  5486  000D6C                     l2519:
  5487  000D6C  C019  F005         	movff	atoi@n,___wmul@multiplier
  5488  000D70  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  5489  000D74  0E00               	movlw	0
  5490  000D76  6E08               	movwf	___wmul@multiplicand+1,c
  5491  000D78  0E0A               	movlw	10
  5492  000D7A  6E07               	movwf	___wmul@multiplicand,c
  5493  000D7C  EC6B  F00C         	call	___wmul	;wreg free
  5494  000D80  C00C  FFF6         	movff	atoi@s,tblptrl
  5495  000D84  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5496  000D88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5497  000D88  6AF8               	clrf	tblptru,c
  5498  000D8A                     	endif
  5499  000D8A                     	if	0	;tblptru may be non-zero
  5500  000D8A                     	endif
  5501  000D8A  0008               	tblrd		*
  5502  000D8C  50F5               	movf	tablat,w,c
  5503  000D8E  5E05               	subwf	?___wmul,f,c
  5504  000D90  0E00               	movlw	0
  5505  000D92  5A06               	subwfb	?___wmul+1,f,c
  5506  000D94  0E30               	movlw	48
  5507  000D96  2405               	addwf	?___wmul,w,c
  5508  000D98  6E19               	movwf	atoi@n,c
  5509  000D9A  0E00               	movlw	0
  5510  000D9C  2006               	addwfc	?___wmul+1,w,c
  5511  000D9E  6E1A               	movwf	atoi@n+1,c
  5512  000DA0  D7CD               	goto	l2515
  5513  000DA2                     l2523:
  5514  000DA2  0ED0               	movlw	208
  5515  000DA4  6E0E               	movwf	??_atoi& (0+255),c
  5516  000DA6  0EFF               	movlw	255
  5517  000DA8  6E0F               	movwf	(??_atoi+1)& (0+255),c
  5518  000DAA  C00C  FFF6         	movff	atoi@s,tblptrl
  5519  000DAE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5520  000DB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5521  000DB2  6AF8               	clrf	tblptru,c
  5522  000DB4                     	endif
  5523  000DB4                     	if	0	;tblptru may be non-zero
  5524  000DB4                     	endif
  5525  000DB4  0008               	tblrd		*
  5526  000DB6  50F5               	movf	tablat,w,c
  5527  000DB8  6E10               	movwf	(??_atoi+2)& (0+255),c
  5528  000DBA  6A11               	clrf	(??_atoi+3)& (0+255),c
  5529  000DBC  500E               	movf	??_atoi,w,c
  5530  000DBE  2610               	addwf	??_atoi+2,f,c
  5531  000DC0  500F               	movf	??_atoi+1,w,c
  5532  000DC2  2211               	addwfc	??_atoi+3,f,c
  5533  000DC4  5011               	movf	??_atoi+3,w,c
  5534  000DC6  E106               	bnz	u1890
  5535  000DC8  0E0A               	movlw	10
  5536  000DCA  5C10               	subwf	??_atoi+2,w,c
  5537  000DCC  B0D8               	btfsc	status,0,c
  5538  000DCE  D002               	goto	u1890
  5539  000DD0  0E01               	movlw	1
  5540  000DD2  D001               	goto	u1900
  5541  000DD4                     u1890:
  5542  000DD4  0E00               	movlw	0
  5543  000DD6                     u1900:
  5544  000DD6  6E16               	movwf	_atoi$1677,c
  5545  000DD8  6A17               	clrf	_atoi$1677+1,c
  5546  000DDA  5016               	movf	_atoi$1677,w,c
  5547  000DDC  1017               	iorwf	_atoi$1677+1,w,c
  5548  000DDE  A4D8               	btfss	status,2,c
  5549  000DE0  D7C5               	goto	l2519
  5550  000DE2  5012               	movf	atoi@neg,w,c
  5551  000DE4  1013               	iorwf	atoi@neg+1,w,c
  5552  000DE6  A4D8               	btfss	status,2,c
  5553  000DE8  D00D               	goto	l1212
  5554  000DEA  C019  F00E         	movff	atoi@n,??_atoi
  5555  000DEE  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  5556  000DF2  1E0E               	comf	??_atoi,f,c
  5557  000DF4  1E0F               	comf	??_atoi+1,f,c
  5558  000DF6  4A0E               	infsnz	??_atoi,f,c
  5559  000DF8  2A0F               	incf	??_atoi+1,f,c
  5560  000DFA  C00E  F00C         	movff	??_atoi,?_atoi
  5561  000DFE  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5562  000E02  0012               	return	
  5563  000E04                     l1212:
  5564  000E04  C019  F00C         	movff	atoi@n,?_atoi
  5565  000E08  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  5566  000E0C  0012               	return		;funcret
  5567  000E0E                     __end_of_atoi:
  5568                           	opt callstack 0
  5569                           
  5570 ;; *************** function _isspace *****************
  5571 ;; Defined at:
  5572 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  c               2    4[COMRAM] int 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;		None
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  2    4[COMRAM] int 
  5579 ;; Registers used:
  5580 ;;		wreg, status,2, status,0
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;Total ram usage:        7 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    4
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_atoi
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text24
  5601  00168A                     __ptext24:
  5602                           	opt callstack 0
  5603  00168A                     _isspace:
  5604                           	opt callstack 22
  5605                           
  5606                           ;incstack = 0
  5607  00168A  0E01               	movlw	1
  5608  00168C  6E0B               	movwf	_isspace$1702,c
  5609  00168E  0E20               	movlw	32
  5610  001690  1805               	xorwf	isspace@c,w,c
  5611  001692  1006               	iorwf	isspace@c+1,w,c
  5612  001694  B4D8               	btfsc	status,2,c
  5613  001696  D014               	goto	l2411
  5614  001698  0EF7               	movlw	247
  5615  00169A  6E07               	movwf	??_isspace& (0+255),c
  5616  00169C  0EFF               	movlw	255
  5617  00169E  6E08               	movwf	(??_isspace+1)& (0+255),c
  5618  0016A0  C005  F009         	movff	isspace@c,??_isspace+2
  5619  0016A4  C006  F00A         	movff	isspace@c+1,??_isspace+3
  5620  0016A8  5007               	movf	??_isspace,w,c
  5621  0016AA  2609               	addwf	??_isspace+2,f,c
  5622  0016AC  5008               	movf	??_isspace+1,w,c
  5623  0016AE  220A               	addwfc	??_isspace+3,f,c
  5624  0016B0  500A               	movf	??_isspace+3,w,c
  5625  0016B2  E104               	bnz	u1670
  5626  0016B4  0E05               	movlw	5
  5627  0016B6  5C09               	subwf	??_isspace+2,w,c
  5628  0016B8  A0D8               	btfss	status,0,c
  5629  0016BA  D002               	goto	l2411
  5630  0016BC                     u1670:
  5631  0016BC  0E00               	movlw	0
  5632  0016BE  6E0B               	movwf	_isspace$1702,c
  5633  0016C0                     l2411:
  5634  0016C0  C00B  F005         	movff	_isspace$1702,?_isspace
  5635  0016C4  6A06               	clrf	?_isspace+1,c
  5636  0016C6  0012               	return		;funcret
  5637  0016C8                     __end_of_isspace:
  5638                           	opt callstack 0
  5639                           
  5640 ;; *************** function _isdigit *****************
  5641 ;; Defined at:
  5642 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  c               2    4[COMRAM] int 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  2    4[COMRAM] int 
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;Total ram usage:        6 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    4
  5663 ;; This function calls:
  5664 ;;		Nothing
  5665 ;; This function is called by:
  5666 ;;		_vfpfcnvrt
  5667 ;;		_atoi
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text25
  5672  0017FC                     __ptext25:
  5673                           	opt callstack 0
  5674  0017FC                     _isdigit:
  5675                           	opt callstack 23
  5676                           
  5677                           ;incstack = 0
  5678  0017FC  0ED0               	movlw	208
  5679  0017FE  6E07               	movwf	??_isdigit& (0+255),c
  5680  001800  0EFF               	movlw	255
  5681  001802  6E08               	movwf	(??_isdigit+1)& (0+255),c
  5682  001804  C005  F009         	movff	isdigit@c,??_isdigit+2
  5683  001808  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  5684  00180C  5007               	movf	??_isdigit,w,c
  5685  00180E  2609               	addwf	??_isdigit+2,f,c
  5686  001810  5008               	movf	??_isdigit+1,w,c
  5687  001812  220A               	addwfc	??_isdigit+3,f,c
  5688  001814  500A               	movf	??_isdigit+3,w,c
  5689  001816  E106               	bnz	u1640
  5690  001818  0E0A               	movlw	10
  5691  00181A  5C09               	subwf	??_isdigit+2,w,c
  5692  00181C  B0D8               	btfsc	status,0,c
  5693  00181E  D002               	goto	u1640
  5694  001820  0E01               	movlw	1
  5695  001822  D001               	goto	u1650
  5696  001824                     u1640:
  5697  001824  0E00               	movlw	0
  5698  001826                     u1650:
  5699  001826  6E05               	movwf	?_isdigit,c
  5700  001828  6A06               	clrf	?_isdigit+1,c
  5701  00182A  0012               	return		;funcret
  5702  00182C                     __end_of_isdigit:
  5703                           	opt callstack 0
  5704                           
  5705 ;; *************** function ___wmul *****************
  5706 ;; Defined at:
  5707 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  multiplier      2    4[COMRAM] unsigned int 
  5710 ;;  multiplicand    2    6[COMRAM] unsigned int 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  product         2    8[COMRAM] unsigned int 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  2    4[COMRAM] unsigned int 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, prodl, prodh
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;Total ram usage:        6 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    4
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_atoi
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text26
  5737  0018D6                     __ptext26:
  5738                           	opt callstack 0
  5739  0018D6                     ___wmul:
  5740                           	opt callstack 22
  5741                           
  5742                           ;incstack = 0
  5743  0018D6  5005               	movf	___wmul@multiplier,w,c
  5744  0018D8  0207               	mulwf	___wmul@multiplicand,c
  5745  0018DA  CFF3 F009          	movff	prodl,___wmul@product
  5746  0018DE  CFF4 F00A          	movff	prodh,___wmul@product+1
  5747  0018E2  5005               	movf	___wmul@multiplier,w,c
  5748  0018E4  0208               	mulwf	___wmul@multiplicand+1,c
  5749  0018E6  50F3               	movf	prodl,w,c
  5750  0018E8  260A               	addwf	___wmul@product+1,f,c
  5751  0018EA  5006               	movf	___wmul@multiplier+1,w,c
  5752  0018EC  0207               	mulwf	___wmul@multiplicand,c
  5753  0018EE  50F3               	movf	prodl,w,c
  5754  0018F0  260A               	addwf	___wmul@product+1,f,c
  5755  0018F2  C009  F005         	movff	___wmul@product,?___wmul
  5756  0018F6  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  5757  0018FA  0012               	return		;funcret
  5758  0018FC                     __end_of___wmul:
  5759                           	opt callstack 0
  5760                           
  5761 ;; *************** function ___lmul *****************
  5762 ;; Defined at:
  5763 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  multiplier      4    4[COMRAM] unsigned long 
  5766 ;;  multiplicand    4    8[COMRAM] unsigned long 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  product         4   12[COMRAM] unsigned long 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  4    4[COMRAM] unsigned long 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5778 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;Total ram usage:       12 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    4
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_getReading
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text27
  5793  00159A                     __ptext27:
  5794                           	opt callstack 0
  5795  00159A                     ___lmul:
  5796                           	opt callstack 25
  5797                           
  5798                           ;incstack = 0
  5799  00159A  0E00               	movlw	0
  5800  00159C  6E0D               	movwf	___lmul@product,c
  5801  00159E  0E00               	movlw	0
  5802  0015A0  6E0E               	movwf	___lmul@product+1,c
  5803  0015A2  0E00               	movlw	0
  5804  0015A4  6E0F               	movwf	___lmul@product+2,c
  5805  0015A6  0E00               	movlw	0
  5806  0015A8  6E10               	movwf	___lmul@product+3,c
  5807  0015AA                     l2903:
  5808  0015AA  A005               	btfss	___lmul@multiplier,0,c
  5809  0015AC  D008               	goto	l2907
  5810  0015AE  5009               	movf	___lmul@multiplicand,w,c
  5811  0015B0  260D               	addwf	___lmul@product,f,c
  5812  0015B2  500A               	movf	___lmul@multiplicand+1,w,c
  5813  0015B4  220E               	addwfc	___lmul@product+1,f,c
  5814  0015B6  500B               	movf	___lmul@multiplicand+2,w,c
  5815  0015B8  220F               	addwfc	___lmul@product+2,f,c
  5816  0015BA  500C               	movf	___lmul@multiplicand+3,w,c
  5817  0015BC  2210               	addwfc	___lmul@product+3,f,c
  5818  0015BE                     l2907:
  5819  0015BE  90D8               	bcf	status,0,c
  5820  0015C0  3609               	rlcf	___lmul@multiplicand,f,c
  5821  0015C2  360A               	rlcf	___lmul@multiplicand+1,f,c
  5822  0015C4  360B               	rlcf	___lmul@multiplicand+2,f,c
  5823  0015C6  360C               	rlcf	___lmul@multiplicand+3,f,c
  5824  0015C8  90D8               	bcf	status,0,c
  5825  0015CA  3208               	rrcf	___lmul@multiplier+3,f,c
  5826  0015CC  3207               	rrcf	___lmul@multiplier+2,f,c
  5827  0015CE  3206               	rrcf	___lmul@multiplier+1,f,c
  5828  0015D0  3205               	rrcf	___lmul@multiplier,f,c
  5829  0015D2  5005               	movf	___lmul@multiplier,w,c
  5830  0015D4  1006               	iorwf	___lmul@multiplier+1,w,c
  5831  0015D6  1007               	iorwf	___lmul@multiplier+2,w,c
  5832  0015D8  1008               	iorwf	___lmul@multiplier+3,w,c
  5833  0015DA  A4D8               	btfss	status,2,c
  5834  0015DC  D7E6               	goto	l2903
  5835  0015DE  C00D  F005         	movff	___lmul@product,?___lmul
  5836  0015E2  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  5837  0015E6  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  5838  0015EA  C010  F008         	movff	___lmul@product+3,?___lmul+3
  5839  0015EE  0012               	return		;funcret
  5840  0015F0                     __end_of___lmul:
  5841                           	opt callstack 0
  5842                           
  5843 ;; *************** function ___lldiv *****************
  5844 ;; Defined at:
  5845 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  dividend        4    4[COMRAM] unsigned long 
  5848 ;;  divisor         4    8[COMRAM] unsigned long 
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;  quotient        4   12[COMRAM] unsigned long 
  5851 ;;  counter         1   16[COMRAM] unsigned char 
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  4    4[COMRAM] unsigned long 
  5854 ;; Registers used:
  5855 ;;		wreg, status,2, status,0
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5861 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;Total ram usage:       13 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    4
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_getReading
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text28
  5876  0012F8                     __ptext28:
  5877                           	opt callstack 0
  5878  0012F8                     ___lldiv:
  5879                           	opt callstack 25
  5880                           
  5881                           ;incstack = 0
  5882  0012F8  0E00               	movlw	0
  5883  0012FA  6E0D               	movwf	___lldiv@quotient,c
  5884  0012FC  0E00               	movlw	0
  5885  0012FE  6E0E               	movwf	___lldiv@quotient+1,c
  5886  001300  0E00               	movlw	0
  5887  001302  6E0F               	movwf	___lldiv@quotient+2,c
  5888  001304  0E00               	movlw	0
  5889  001306  6E10               	movwf	___lldiv@quotient+3,c
  5890  001308  5009               	movf	___lldiv@divisor,w,c
  5891  00130A  100A               	iorwf	___lldiv@divisor+1,w,c
  5892  00130C  100B               	iorwf	___lldiv@divisor+2,w,c
  5893  00130E  100C               	iorwf	___lldiv@divisor+3,w,c
  5894  001310  B4D8               	btfsc	status,2,c
  5895  001312  D02A               	goto	l540
  5896  001314  0E01               	movlw	1
  5897  001316  6E11               	movwf	___lldiv@counter,c
  5898  001318  D006               	goto	l2919
  5899  00131A                     l2917:
  5900  00131A  90D8               	bcf	status,0,c
  5901  00131C  3609               	rlcf	___lldiv@divisor,f,c
  5902  00131E  360A               	rlcf	___lldiv@divisor+1,f,c
  5903  001320  360B               	rlcf	___lldiv@divisor+2,f,c
  5904  001322  360C               	rlcf	___lldiv@divisor+3,f,c
  5905  001324  2A11               	incf	___lldiv@counter,f,c
  5906  001326                     l2919:
  5907  001326  AE0C               	btfss	___lldiv@divisor+3,7,c
  5908  001328  D7F8               	goto	l2917
  5909  00132A                     u2460:
  5910  00132A  90D8               	bcf	status,0,c
  5911  00132C  360D               	rlcf	___lldiv@quotient,f,c
  5912  00132E  360E               	rlcf	___lldiv@quotient+1,f,c
  5913  001330  360F               	rlcf	___lldiv@quotient+2,f,c
  5914  001332  3610               	rlcf	___lldiv@quotient+3,f,c
  5915  001334  5009               	movf	___lldiv@divisor,w,c
  5916  001336  5C05               	subwf	___lldiv@dividend,w,c
  5917  001338  500A               	movf	___lldiv@divisor+1,w,c
  5918  00133A  5806               	subwfb	___lldiv@dividend+1,w,c
  5919  00133C  500B               	movf	___lldiv@divisor+2,w,c
  5920  00133E  5807               	subwfb	___lldiv@dividend+2,w,c
  5921  001340  500C               	movf	___lldiv@divisor+3,w,c
  5922  001342  5808               	subwfb	___lldiv@dividend+3,w,c
  5923  001344  A0D8               	btfss	status,0,c
  5924  001346  D009               	goto	l2929
  5925  001348  5009               	movf	___lldiv@divisor,w,c
  5926  00134A  5E05               	subwf	___lldiv@dividend,f,c
  5927  00134C  500A               	movf	___lldiv@divisor+1,w,c
  5928  00134E  5A06               	subwfb	___lldiv@dividend+1,f,c
  5929  001350  500B               	movf	___lldiv@divisor+2,w,c
  5930  001352  5A07               	subwfb	___lldiv@dividend+2,f,c
  5931  001354  500C               	movf	___lldiv@divisor+3,w,c
  5932  001356  5A08               	subwfb	___lldiv@dividend+3,f,c
  5933  001358  800D               	bsf	___lldiv@quotient,0,c
  5934  00135A                     l2929:
  5935  00135A  90D8               	bcf	status,0,c
  5936  00135C  320C               	rrcf	___lldiv@divisor+3,f,c
  5937  00135E  320B               	rrcf	___lldiv@divisor+2,f,c
  5938  001360  320A               	rrcf	___lldiv@divisor+1,f,c
  5939  001362  3209               	rrcf	___lldiv@divisor,f,c
  5940  001364  2E11               	decfsz	___lldiv@counter,f,c
  5941  001366  D7E1               	goto	u2460
  5942  001368                     l540:
  5943  001368  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  5944  00136C  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  5945  001370  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  5946  001374  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  5947  001378  0012               	return		;funcret
  5948  00137A                     __end_of___lldiv:
  5949                           	opt callstack 0
  5950                           
  5951 ;; *************** function ___almod *****************
  5952 ;; Defined at:
  5953 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\almod.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  dividend        4    4[COMRAM] long 
  5956 ;;  divisor         4    8[COMRAM] long 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  sign            1   13[COMRAM] unsigned char 
  5959 ;;  counter         1   12[COMRAM] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  4    4[COMRAM] long 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5969 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;Total ram usage:       10 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:    4
  5976 ;; This function calls:
  5977 ;;		Nothing
  5978 ;; This function is called by:
  5979 ;;		_getReading
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text29
  5984  001004                     __ptext29:
  5985                           	opt callstack 0
  5986  001004                     ___almod:
  5987                           	opt callstack 25
  5988                           
  5989                           ;incstack = 0
  5990  001004  0E00               	movlw	0
  5991  001006  6E0E               	movwf	___almod@sign,c
  5992  001008  AE08               	btfss	___almod@dividend+3,7,c
  5993  00100A  D00A               	goto	l2985
  5994  00100C  1E08               	comf	___almod@dividend+3,f,c
  5995  00100E  1E07               	comf	___almod@dividend+2,f,c
  5996  001010  1E06               	comf	___almod@dividend+1,f,c
  5997  001012  6C05               	negf	___almod@dividend,c
  5998  001014  0E00               	movlw	0
  5999  001016  2206               	addwfc	___almod@dividend+1,f,c
  6000  001018  2207               	addwfc	___almod@dividend+2,f,c
  6001  00101A  2208               	addwfc	___almod@dividend+3,f,c
  6002  00101C  0E01               	movlw	1
  6003  00101E  6E0E               	movwf	___almod@sign,c
  6004  001020                     l2985:
  6005  001020  AE0C               	btfss	___almod@divisor+3,7,c
  6006  001022  D008               	goto	l2989
  6007  001024  1E0C               	comf	___almod@divisor+3,f,c
  6008  001026  1E0B               	comf	___almod@divisor+2,f,c
  6009  001028  1E0A               	comf	___almod@divisor+1,f,c
  6010  00102A  6C09               	negf	___almod@divisor,c
  6011  00102C  0E00               	movlw	0
  6012  00102E  220A               	addwfc	___almod@divisor+1,f,c
  6013  001030  220B               	addwfc	___almod@divisor+2,f,c
  6014  001032  220C               	addwfc	___almod@divisor+3,f,c
  6015  001034                     l2989:
  6016  001034  5009               	movf	___almod@divisor,w,c
  6017  001036  100A               	iorwf	___almod@divisor+1,w,c
  6018  001038  100B               	iorwf	___almod@divisor+2,w,c
  6019  00103A  100C               	iorwf	___almod@divisor+3,w,c
  6020  00103C  B4D8               	btfsc	status,2,c
  6021  00103E  D024               	goto	l3005
  6022  001040  0E01               	movlw	1
  6023  001042  6E0D               	movwf	___almod@counter,c
  6024  001044  D006               	goto	l2995
  6025  001046                     l2993:
  6026  001046  90D8               	bcf	status,0,c
  6027  001048  3609               	rlcf	___almod@divisor,f,c
  6028  00104A  360A               	rlcf	___almod@divisor+1,f,c
  6029  00104C  360B               	rlcf	___almod@divisor+2,f,c
  6030  00104E  360C               	rlcf	___almod@divisor+3,f,c
  6031  001050  2A0D               	incf	___almod@counter,f,c
  6032  001052                     l2995:
  6033  001052  AE0C               	btfss	___almod@divisor+3,7,c
  6034  001054  D7F8               	goto	l2993
  6035  001056                     u2570:
  6036  001056  5009               	movf	___almod@divisor,w,c
  6037  001058  5C05               	subwf	___almod@dividend,w,c
  6038  00105A  500A               	movf	___almod@divisor+1,w,c
  6039  00105C  5806               	subwfb	___almod@dividend+1,w,c
  6040  00105E  500B               	movf	___almod@divisor+2,w,c
  6041  001060  5807               	subwfb	___almod@dividend+2,w,c
  6042  001062  500C               	movf	___almod@divisor+3,w,c
  6043  001064  5808               	subwfb	___almod@dividend+3,w,c
  6044  001066  A0D8               	btfss	status,0,c
  6045  001068  D008               	goto	l3001
  6046  00106A  5009               	movf	___almod@divisor,w,c
  6047  00106C  5E05               	subwf	___almod@dividend,f,c
  6048  00106E  500A               	movf	___almod@divisor+1,w,c
  6049  001070  5A06               	subwfb	___almod@dividend+1,f,c
  6050  001072  500B               	movf	___almod@divisor+2,w,c
  6051  001074  5A07               	subwfb	___almod@dividend+2,f,c
  6052  001076  500C               	movf	___almod@divisor+3,w,c
  6053  001078  5A08               	subwfb	___almod@dividend+3,f,c
  6054  00107A                     l3001:
  6055  00107A  90D8               	bcf	status,0,c
  6056  00107C  320C               	rrcf	___almod@divisor+3,f,c
  6057  00107E  320B               	rrcf	___almod@divisor+2,f,c
  6058  001080  320A               	rrcf	___almod@divisor+1,f,c
  6059  001082  3209               	rrcf	___almod@divisor,f,c
  6060  001084  2E0D               	decfsz	___almod@counter,f,c
  6061  001086  D7E7               	goto	u2570
  6062  001088                     l3005:
  6063  001088  500E               	movf	___almod@sign,w,c
  6064  00108A  B4D8               	btfsc	status,2,c
  6065  00108C  D008               	goto	l3009
  6066  00108E  1E08               	comf	___almod@dividend+3,f,c
  6067  001090  1E07               	comf	___almod@dividend+2,f,c
  6068  001092  1E06               	comf	___almod@dividend+1,f,c
  6069  001094  6C05               	negf	___almod@dividend,c
  6070  001096  0E00               	movlw	0
  6071  001098  2206               	addwfc	___almod@dividend+1,f,c
  6072  00109A  2207               	addwfc	___almod@dividend+2,f,c
  6073  00109C  2208               	addwfc	___almod@dividend+3,f,c
  6074  00109E                     l3009:
  6075  00109E  C005  F005         	movff	___almod@dividend,?___almod
  6076  0010A2  C006  F006         	movff	___almod@dividend+1,?___almod+1
  6077  0010A6  C007  F007         	movff	___almod@dividend+2,?___almod+2
  6078  0010AA  C008  F008         	movff	___almod@dividend+3,?___almod+3
  6079  0010AE  0012               	return		;funcret
  6080  0010B0                     __end_of___almod:
  6081                           	opt callstack 0
  6082                           
  6083 ;; *************** function ___aldiv *****************
  6084 ;; Defined at:
  6085 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  dividend        4    4[COMRAM] long 
  6088 ;;  divisor         4    8[COMRAM] long 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  quotient        4   14[COMRAM] long 
  6091 ;;  sign            1   13[COMRAM] unsigned char 
  6092 ;;  counter         1   12[COMRAM] unsigned char 
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  4    4[COMRAM] long 
  6095 ;; Registers used:
  6096 ;;		wreg, status,2, status,0
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6102 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;Total ram usage:       14 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    4
  6109 ;; This function calls:
  6110 ;;		Nothing
  6111 ;; This function is called by:
  6112 ;;		_getReading
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text30
  6117  000F38                     __ptext30:
  6118                           	opt callstack 0
  6119  000F38                     ___aldiv:
  6120                           	opt callstack 25
  6121                           
  6122                           ;incstack = 0
  6123  000F38  0E00               	movlw	0
  6124  000F3A  6E0E               	movwf	___aldiv@sign,c
  6125  000F3C  AE0C               	btfss	___aldiv@divisor+3,7,c
  6126  000F3E  D00A               	goto	l2941
  6127  000F40  1E0C               	comf	___aldiv@divisor+3,f,c
  6128  000F42  1E0B               	comf	___aldiv@divisor+2,f,c
  6129  000F44  1E0A               	comf	___aldiv@divisor+1,f,c
  6130  000F46  6C09               	negf	___aldiv@divisor,c
  6131  000F48  0E00               	movlw	0
  6132  000F4A  220A               	addwfc	___aldiv@divisor+1,f,c
  6133  000F4C  220B               	addwfc	___aldiv@divisor+2,f,c
  6134  000F4E  220C               	addwfc	___aldiv@divisor+3,f,c
  6135  000F50  0E01               	movlw	1
  6136  000F52  6E0E               	movwf	___aldiv@sign,c
  6137  000F54                     l2941:
  6138  000F54  AE08               	btfss	___aldiv@dividend+3,7,c
  6139  000F56  D00A               	goto	l2947
  6140  000F58  1E08               	comf	___aldiv@dividend+3,f,c
  6141  000F5A  1E07               	comf	___aldiv@dividend+2,f,c
  6142  000F5C  1E06               	comf	___aldiv@dividend+1,f,c
  6143  000F5E  6C05               	negf	___aldiv@dividend,c
  6144  000F60  0E00               	movlw	0
  6145  000F62  2206               	addwfc	___aldiv@dividend+1,f,c
  6146  000F64  2207               	addwfc	___aldiv@dividend+2,f,c
  6147  000F66  2208               	addwfc	___aldiv@dividend+3,f,c
  6148  000F68  0E01               	movlw	1
  6149  000F6A  1A0E               	xorwf	___aldiv@sign,f,c
  6150  000F6C                     l2947:
  6151  000F6C  0E00               	movlw	0
  6152  000F6E  6E0F               	movwf	___aldiv@quotient,c
  6153  000F70  0E00               	movlw	0
  6154  000F72  6E10               	movwf	___aldiv@quotient+1,c
  6155  000F74  0E00               	movlw	0
  6156  000F76  6E11               	movwf	___aldiv@quotient+2,c
  6157  000F78  0E00               	movlw	0
  6158  000F7A  6E12               	movwf	___aldiv@quotient+3,c
  6159  000F7C  5009               	movf	___aldiv@divisor,w,c
  6160  000F7E  100A               	iorwf	___aldiv@divisor+1,w,c
  6161  000F80  100B               	iorwf	___aldiv@divisor+2,w,c
  6162  000F82  100C               	iorwf	___aldiv@divisor+3,w,c
  6163  000F84  B4D8               	btfsc	status,2,c
  6164  000F86  D02A               	goto	l2969
  6165  000F88  0E01               	movlw	1
  6166  000F8A  6E0D               	movwf	___aldiv@counter,c
  6167  000F8C  D006               	goto	l2955
  6168  000F8E                     l2953:
  6169  000F8E  90D8               	bcf	status,0,c
  6170  000F90  3609               	rlcf	___aldiv@divisor,f,c
  6171  000F92  360A               	rlcf	___aldiv@divisor+1,f,c
  6172  000F94  360B               	rlcf	___aldiv@divisor+2,f,c
  6173  000F96  360C               	rlcf	___aldiv@divisor+3,f,c
  6174  000F98  2A0D               	incf	___aldiv@counter,f,c
  6175  000F9A                     l2955:
  6176  000F9A  AE0C               	btfss	___aldiv@divisor+3,7,c
  6177  000F9C  D7F8               	goto	l2953
  6178  000F9E                     u2510:
  6179  000F9E  90D8               	bcf	status,0,c
  6180  000FA0  360F               	rlcf	___aldiv@quotient,f,c
  6181  000FA2  3610               	rlcf	___aldiv@quotient+1,f,c
  6182  000FA4  3611               	rlcf	___aldiv@quotient+2,f,c
  6183  000FA6  3612               	rlcf	___aldiv@quotient+3,f,c
  6184  000FA8  5009               	movf	___aldiv@divisor,w,c
  6185  000FAA  5C05               	subwf	___aldiv@dividend,w,c
  6186  000FAC  500A               	movf	___aldiv@divisor+1,w,c
  6187  000FAE  5806               	subwfb	___aldiv@dividend+1,w,c
  6188  000FB0  500B               	movf	___aldiv@divisor+2,w,c
  6189  000FB2  5807               	subwfb	___aldiv@dividend+2,w,c
  6190  000FB4  500C               	movf	___aldiv@divisor+3,w,c
  6191  000FB6  5808               	subwfb	___aldiv@dividend+3,w,c
  6192  000FB8  A0D8               	btfss	status,0,c
  6193  000FBA  D009               	goto	l2965
  6194  000FBC  5009               	movf	___aldiv@divisor,w,c
  6195  000FBE  5E05               	subwf	___aldiv@dividend,f,c
  6196  000FC0  500A               	movf	___aldiv@divisor+1,w,c
  6197  000FC2  5A06               	subwfb	___aldiv@dividend+1,f,c
  6198  000FC4  500B               	movf	___aldiv@divisor+2,w,c
  6199  000FC6  5A07               	subwfb	___aldiv@dividend+2,f,c
  6200  000FC8  500C               	movf	___aldiv@divisor+3,w,c
  6201  000FCA  5A08               	subwfb	___aldiv@dividend+3,f,c
  6202  000FCC  800F               	bsf	___aldiv@quotient,0,c
  6203  000FCE                     l2965:
  6204  000FCE  90D8               	bcf	status,0,c
  6205  000FD0  320C               	rrcf	___aldiv@divisor+3,f,c
  6206  000FD2  320B               	rrcf	___aldiv@divisor+2,f,c
  6207  000FD4  320A               	rrcf	___aldiv@divisor+1,f,c
  6208  000FD6  3209               	rrcf	___aldiv@divisor,f,c
  6209  000FD8  2E0D               	decfsz	___aldiv@counter,f,c
  6210  000FDA  D7E1               	goto	u2510
  6211  000FDC                     l2969:
  6212  000FDC  500E               	movf	___aldiv@sign,w,c
  6213  000FDE  B4D8               	btfsc	status,2,c
  6214  000FE0  D008               	goto	l2973
  6215  000FE2  1E12               	comf	___aldiv@quotient+3,f,c
  6216  000FE4  1E11               	comf	___aldiv@quotient+2,f,c
  6217  000FE6  1E10               	comf	___aldiv@quotient+1,f,c
  6218  000FE8  6C0F               	negf	___aldiv@quotient,c
  6219  000FEA  0E00               	movlw	0
  6220  000FEC  2210               	addwfc	___aldiv@quotient+1,f,c
  6221  000FEE  2211               	addwfc	___aldiv@quotient+2,f,c
  6222  000FF0  2212               	addwfc	___aldiv@quotient+3,f,c
  6223  000FF2                     l2973:
  6224  000FF2  C00F  F005         	movff	___aldiv@quotient,?___aldiv
  6225  000FF6  C010  F006         	movff	___aldiv@quotient+1,?___aldiv+1
  6226  000FFA  C011  F007         	movff	___aldiv@quotient+2,?___aldiv+2
  6227  000FFE  C012  F008         	movff	___aldiv@quotient+3,?___aldiv+3
  6228  001002  0012               	return		;funcret
  6229  001004                     __end_of___aldiv:
  6230                           	opt callstack 0
  6231                           
  6232 ;; *************** function _SYSTEM_Initialize *****************
  6233 ;; Defined at:
  6234 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;		None
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;		None
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      void 
  6241 ;; Registers used:
  6242 ;;		wreg, status,2, status,0, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;Total ram usage:        0 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    6
  6255 ;; This function calls:
  6256 ;;		_EUSART1_Initialize
  6257 ;;		_INTERRUPT_Initialize
  6258 ;;		_OSCILLATOR_Initialize
  6259 ;;		_PIN_MANAGER_Initialize
  6260 ;; This function is called by:
  6261 ;;		_main
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text31
  6266  00195A                     __ptext31:
  6267                           	opt callstack 0
  6268  00195A                     _SYSTEM_Initialize:
  6269                           	opt callstack 24
  6270                           
  6271                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  6272                           
  6273                           ;incstack = 0
  6274  00195A  ECE3  F00C         	call	_INTERRUPT_Initialize	;wreg free
  6275                           
  6276                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6277  00195E  EC16  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  6278                           
  6279                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6280  001962  ECB6  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  6281                           
  6282                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  6283  001966  ECF8  F009         	call	_EUSART1_Initialize	;wreg free
  6284  00196A  0012               	return		;funcret
  6285  00196C                     __end_of_SYSTEM_Initialize:
  6286                           	opt callstack 0
  6287                           
  6288 ;; *************** function _PIN_MANAGER_Initialize *****************
  6289 ;; Defined at:
  6290 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      void 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;Total ram usage:        0 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    4
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_SYSTEM_Initialize
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text32
  6319  00182C                     __ptext32:
  6320                           	opt callstack 0
  6321  00182C                     _PIN_MANAGER_Initialize:
  6322                           	opt callstack 25
  6323                           
  6324                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6325                           
  6326                           ;incstack = 0
  6327  00182C  0E00               	movlw	0
  6328  00182E  6E89               	movwf	3977,c	;volatile
  6329                           
  6330                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6331  001830  0E00               	movlw	0
  6332  001832  6E8A               	movwf	3978,c	;volatile
  6333                           
  6334                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6335  001834  0E00               	movlw	0
  6336  001836  6E8B               	movwf	3979,c	;volatile
  6337                           
  6338                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  6339  001838  6892               	setf	3986,c	;volatile
  6340                           
  6341                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  6342  00183A  0EDF               	movlw	223
  6343  00183C  6E93               	movwf	3987,c	;volatile
  6344                           
  6345                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  6346  00183E  0EBF               	movlw	191
  6347  001840  6E94               	movwf	3988,c	;volatile
  6348                           
  6349                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  6350  001842  0E3C               	movlw	60
  6351  001844  010F               	movlb	15	; () banked
  6352  001846  6F3A               	movwf	58,b	;volatile
  6353                           
  6354                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x1F;
  6355  001848  0E1F               	movlw	31
  6356  00184A  6F39               	movwf	57,b	;volatile
  6357                           
  6358                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  6359  00184C  0E2F               	movlw	47
  6360  00184E  6F38               	movwf	56,b	;volatile
  6361                           
  6362                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6363  001850  0E00               	movlw	0
  6364  001852  6E61               	movwf	3937,c	;volatile
  6365                           
  6366                           ; BSR set to: 15
  6367                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  6368  001854  8EF1               	bsf	4081,7,c	;volatile
  6369                           
  6370                           ; BSR set to: 15
  6371  001856  0012               	return		;funcret
  6372  001858                     __end_of_PIN_MANAGER_Initialize:
  6373                           	opt callstack 0
  6374                           
  6375 ;; *************** function _OSCILLATOR_Initialize *****************
  6376 ;; Defined at:
  6377 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;		None
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;		None
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;Total ram usage:        0 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:    4
  6398 ;; This function calls:
  6399 ;;		Nothing
  6400 ;; This function is called by:
  6401 ;;		_SYSTEM_Initialize
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text33
  6406  00196C                     __ptext33:
  6407                           	opt callstack 0
  6408  00196C                     _OSCILLATOR_Initialize:
  6409                           	opt callstack 25
  6410                           
  6411                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  6412                           
  6413                           ; BSR set to: 15
  6414                           ;incstack = 0
  6415  00196C  0E70               	movlw	112
  6416  00196E  6ED3               	movwf	4051,c	;volatile
  6417                           
  6418                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  6419  001970  0E04               	movlw	4
  6420  001972  6ED2               	movwf	4050,c	;volatile
  6421                           
  6422                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
  6423  001974  0E40               	movlw	64
  6424  001976  6E9B               	movwf	3995,c	;volatile
  6425  001978                     l22:
  6426                           
  6427                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
  6428  001978  BED2               	btfsc	4050,7,c	;volatile
  6429  00197A  0012               	return	
  6430  00197C  D7FD               	goto	l22
  6431  00197E                     __end_of_OSCILLATOR_Initialize:
  6432                           	opt callstack 0
  6433                           
  6434 ;; *************** function _INTERRUPT_Initialize *****************
  6435 ;; Defined at:
  6436 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      void 
  6443 ;; Registers used:
  6444 ;;		None
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;Total ram usage:        0 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    4
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_SYSTEM_Initialize
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text34
  6465  0019C6                     __ptext34:
  6466                           	opt callstack 0
  6467  0019C6                     _INTERRUPT_Initialize:
  6468                           	opt callstack 25
  6469                           
  6470                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6471                           
  6472                           ;incstack = 0
  6473  0019C6  9ED0               	bcf	4048,7,c	;volatile
  6474  0019C8  0012               	return		;funcret
  6475  0019CA                     __end_of_INTERRUPT_Initialize:
  6476                           	opt callstack 0
  6477                           
  6478 ;; *************** function _EUSART1_Initialize *****************
  6479 ;; Defined at:
  6480 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;		None
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;		None
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  1    wreg      void 
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0, cstack
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6498 ;;Total ram usage:        0 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:    5
  6501 ;; This function calls:
  6502 ;;		_EUSART1_SetErrorHandler
  6503 ;;		_EUSART1_SetFramingErrorHandler
  6504 ;;		_EUSART1_SetOverrunErrorHandler
  6505 ;;		_EUSART1_SetRxInterruptHandler
  6506 ;;		_EUSART1_SetTxInterruptHandler
  6507 ;; This function is called by:
  6508 ;;		_SYSTEM_Initialize
  6509 ;;		_main
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text35
  6514  0013F0                     __ptext35:
  6515                           	opt callstack 0
  6516  0013F0                     _EUSART1_Initialize:
  6517                           	opt callstack 24
  6518                           
  6519                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  6520                           
  6521                           ;incstack = 0
  6522  0013F0  9A9D               	bcf	3997,5,c	;volatile
  6523                           
  6524                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  6525  0013F2  0E4A               	movlw	low _EUSART1_Receive_ISR
  6526  0013F4  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  6527  0013F6  0E11               	movlw	high _EUSART1_Receive_ISR
  6528  0013F8  6E06               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  6529  0013FA  ECC9  F00C         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  6530                           
  6531                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  6532  0013FE  989D               	bcf	3997,4,c	;volatile
  6533                           
  6534                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  6535  001400  0E58               	movlw	low _EUSART1_Transmit_ISR
  6536  001402  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  6537  001404  0E18               	movlw	high _EUSART1_Transmit_ISR
  6538  001406  6E06               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  6539  001408  ECC4  F00C         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  6540                           
  6541                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  6542  00140C  0E08               	movlw	8
  6543  00140E  6EB8               	movwf	4024,c	;volatile
  6544                           
  6545                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  6546  001410  0E90               	movlw	144
  6547  001412  6EAB               	movwf	4011,c	;volatile
  6548                           
  6549                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  6550  001414  0E24               	movlw	36
  6551  001416  6EAC               	movwf	4012,c	;volatile
  6552                           
  6553                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x15;
  6554  001418  0E15               	movlw	21
  6555  00141A  6EAF               	movwf	4015,c	;volatile
  6556                           
  6557                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x01;
  6558  00141C  0E01               	movlw	1
  6559  00141E  6EB0               	movwf	4016,c	;volatile
  6560                           
  6561                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  6562  001420  0ECA               	movlw	low _EUSART1_DefaultFramingErrorHandler
  6563  001422  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  6564  001424  0E19               	movlw	high _EUSART1_DefaultFramingErrorHandler
  6565  001426  6E06               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  6566  001428  ECD3  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6567                           
  6568                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  6569  00142C  0EBA               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  6570  00142E  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  6571  001430  0E19               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  6572  001432  6E06               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  6573  001434  ECCE  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6574                           
  6575                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  6576  001438  0EC0               	movlw	low _EUSART1_DefaultErrorHandler
  6577  00143A  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  6578  00143C  0E19               	movlw	high _EUSART1_DefaultErrorHandler
  6579  00143E  6E06               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  6580  001440  ECD8  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  6581                           
  6582                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  6583  001444  0E00               	movlw	0
  6584  001446  0100               	movlb	0	; () banked
  6585  001448  6FE7               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6586                           
  6587                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  6588  00144A  0E00               	movlw	0
  6589  00144C  6E5A               	movwf	_eusart1TxHead,c	;volatile
  6590                           
  6591                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  6592  00144E  0E00               	movlw	0
  6593  001450  6E59               	movwf	_eusart1TxTail,c	;volatile
  6594                           
  6595                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  6596  001452  0E40               	movlw	64
  6597  001454  6FE9               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6598                           
  6599                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  6600  001456  0E00               	movlw	0
  6601  001458  6E58               	movwf	_eusart1RxHead,c	;volatile
  6602                           
  6603                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  6604  00145A  0E00               	movlw	0
  6605  00145C  6E57               	movwf	_eusart1RxTail,c	;volatile
  6606                           
  6607                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  6608  00145E  0E00               	movlw	0
  6609  001460  6FE8               	movwf	_eusart1RxCount& (0+255),b	;volatile
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  6613  001462  8A9D               	bsf	3997,5,c	;volatile
  6614                           
  6615                           ; BSR set to: 0
  6616  001464  0012               	return		;funcret
  6617  001466                     __end_of_EUSART1_Initialize:
  6618                           	opt callstack 0
  6619                           
  6620 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  6621 ;; Defined at:
  6622 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6625 ;;		 -> EUSART1_Transmit_ISR(1), 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1    wreg      void 
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;Total ram usage:        2 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    4
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_EUSART1_Initialize
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text36
  6652  001988                     __ptext36:
  6653                           	opt callstack 0
  6654  001988                     _EUSART1_SetTxInterruptHandler:
  6655                           	opt callstack 24
  6656                           
  6657                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;incstack = 0
  6661  001988  C005  F0E5         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  6662  00198C  C006  F0E6         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  6663  001990  0012               	return		;funcret
  6664  001992                     __end_of_EUSART1_SetTxInterruptHandler:
  6665                           	opt callstack 0
  6666                           
  6667 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  6668 ;; Defined at:
  6669 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6672 ;;		 -> EUSART1_Receive_ISR(1), 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		wreg, status,2, status,0
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;Total ram usage:        2 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    4
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_EUSART1_Initialize
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text37
  6699  001992                     __ptext37:
  6700                           	opt callstack 0
  6701  001992                     _EUSART1_SetRxInterruptHandler:
  6702                           	opt callstack 24
  6703                           
  6704                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6705                           
  6706                           ;incstack = 0
  6707  001992  C005  F0E3         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  6708  001996  C006  F0E4         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  6709  00199A  0012               	return		;funcret
  6710  00199C                     __end_of_EUSART1_SetRxInterruptHandler:
  6711                           	opt callstack 0
  6712                           
  6713 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6714 ;; Defined at:
  6715 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6718 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;		None
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      void 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;Total ram usage:        2 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    4
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_EUSART1_Initialize
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text38
  6745  00199C                     __ptext38:
  6746                           	opt callstack 0
  6747  00199C                     _EUSART1_SetOverrunErrorHandler:
  6748                           	opt callstack 24
  6749                           
  6750                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  6751                           
  6752                           ;incstack = 0
  6753  00199C  C005  F0DF         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6754  0019A0  C006  F0E0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6755  0019A4  0012               	return		;funcret
  6756  0019A6                     __end_of_EUSART1_SetOverrunErrorHandler:
  6757                           	opt callstack 0
  6758                           
  6759 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6760 ;; Defined at:
  6761 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6764 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;		None
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		wreg, status,2, status,0
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;Total ram usage:        2 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:    4
  6783 ;; This function calls:
  6784 ;;		Nothing
  6785 ;; This function is called by:
  6786 ;;		_EUSART1_Initialize
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text39
  6791  0019A6                     __ptext39:
  6792                           	opt callstack 0
  6793  0019A6                     _EUSART1_SetFramingErrorHandler:
  6794                           	opt callstack 24
  6795                           
  6796                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  6797                           
  6798                           ;incstack = 0
  6799  0019A6  C005  F0E1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6800  0019AA  C006  F0E2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6801  0019AE  0012               	return		;funcret
  6802  0019B0                     __end_of_EUSART1_SetFramingErrorHandler:
  6803                           	opt callstack 0
  6804                           
  6805 ;; *************** function _EUSART1_SetErrorHandler *****************
  6806 ;; Defined at:
  6807 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6810 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;		None
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      void 
  6815 ;; Registers used:
  6816 ;;		wreg, status,2, status,0
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6826 ;;Total ram usage:        2 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; Hardware stack levels required when called:    4
  6829 ;; This function calls:
  6830 ;;		Nothing
  6831 ;; This function is called by:
  6832 ;;		_EUSART1_Initialize
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           	psect	text40
  6837  0019B0                     __ptext40:
  6838                           	opt callstack 0
  6839  0019B0                     _EUSART1_SetErrorHandler:
  6840                           	opt callstack 24
  6841                           
  6842                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  6843                           
  6844                           ;incstack = 0
  6845  0019B0  C005  F0DD         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6846  0019B4  C006  F0DE         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6847  0019B8  0012               	return		;funcret
  6848  0019BA                     __end_of_EUSART1_SetErrorHandler:
  6849                           	opt callstack 0
  6850                           
  6851 ;; *************** function _INTERRUPT_InterruptManager *****************
  6852 ;; Defined at:
  6853 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;		None
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6869 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;Total ram usage:        4 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    3
  6874 ;; This function calls:
  6875 ;;		Absolute function
  6876 ;;		_EUSART1_Receive_ISR
  6877 ;;		_EUSART1_Transmit_ISR
  6878 ;; This function is called by:
  6879 ;;		Interrupt level 2
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	intcode
  6884  000008                     __pintcode:
  6885                           	opt callstack 0
  6886  000008                     _INTERRUPT_InterruptManager:
  6887                           	opt callstack 15
  6888                           
  6889                           ;incstack = 0
  6890  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6891  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6892  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6893  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6894  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6895                           
  6896                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6897  00001A  ACF2               	btfss	4082,6,c	;volatile
  6898  00001C  D01B               	goto	i2u280_49
  6899                           
  6900                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  6901  00001E  B89D               	btfsc	3997,4,c	;volatile
  6902  000020  A89E               	btfss	3998,4,c	;volatile
  6903  000022  D009               	goto	i2l226
  6904                           
  6905                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  6906  000024  D801               	call	i2u277_48
  6907  000026  D016               	goto	i2u280_49
  6908  000028                     i2u277_48:
  6909  000028  0005               	push	
  6910  00002A  6EFA               	movwf	pclath,c
  6911  00002C  0100               	movlb	0	; () banked
  6912  00002E  51E5               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  6913  000030  6EFD               	movwf	tosl,c
  6914  000032  51E6               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  6915  000034  D00B               	goto	L4
  6916  000036                     i2l226:
  6917  000036  BA9D               	btfsc	3997,5,c	;volatile
  6918  000038  AA9E               	btfss	3998,5,c	;volatile
  6919  00003A  D00C               	goto	i2u280_49
  6920                           
  6921                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  6922  00003C  D801               	call	i2u280_48
  6923  00003E  D00A               	goto	i2u280_49
  6924  000040                     i2u280_48:
  6925  000040  0005               	push	
  6926  000042  6EFA               	movwf	pclath,c
  6927  000044  0100               	movlb	0	; () banked
  6928  000046  51E3               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  6929  000048  6EFD               	movwf	tosl,c
  6930  00004A  51E4               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  6931  00004C                     L4:
  6932  00004C  6EFE               	movwf	tosh,c
  6933  00004E  6AFF               	clrf	tosu,c
  6934  000050  50FA               	movf	pclath,w,c
  6935  000052  0012               	return		;indir
  6936  000054                     i2u280_49:
  6937                           
  6938                           ;mcc_generated_files/interrupt_manager.c: 75:     }
  6939                           
  6940                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  6941  000054  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6942  000058  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6943  00005C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6944  000060  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6945  000064  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6946  000066  0011               	retfie		f
  6947  000068                     __end_of_INTERRUPT_InterruptManager:
  6948                           	opt callstack 0
  6949                           
  6950 ;; *************** function _EUSART1_Transmit_ISR *****************
  6951 ;; Defined at:
  6952 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;		None
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;		None
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  1    wreg      void 
  6959 ;; Registers used:
  6960 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6970 ;;Total ram usage:        0 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_EUSART1_Initialize
  6976 ;;		_INTERRUPT_InterruptManager
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text42
  6981  001858                     __ptext42:
  6982                           	opt callstack 0
  6983  001858                     _EUSART1_Transmit_ISR:
  6984                           	opt callstack 17
  6985                           
  6986                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6987                           
  6988                           ;incstack = 0
  6989  001858  0E40               	movlw	64
  6990  00185A  0100               	movlb	0	; () banked
  6991  00185C  61E9               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6992  00185E  D010               	goto	i2l167
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  6996  001860  0E40               	movlw	low _eusart1TxBuffer
  6997  001862  2459               	addwf	_eusart1TxTail,w,c	;volatile
  6998  001864  6ED9               	movwf	fsr2l,c
  6999  001866  6ADA               	clrf	fsr2h,c
  7000  001868  0E01               	movlw	high _eusart1TxBuffer
  7001  00186A  22DA               	addwfc	fsr2h,f,c
  7002  00186C  50DF               	movf	indf2,w,c
  7003  00186E  6EAD               	movwf	4013,c	;volatile
  7004                           
  7005                           ; BSR set to: 0
  7006  001870  2A59               	incf	_eusart1TxTail,f,c	;volatile
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  7010  001872  0E3F               	movlw	63
  7011  001874  6459               	cpfsgt	_eusart1TxTail,c	;volatile
  7012  001876  D002               	goto	i2l3053
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  7016  001878  0E00               	movlw	0
  7017  00187A  6E59               	movwf	_eusart1TxTail,c	;volatile
  7018  00187C                     i2l3053:
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  7022  00187C  2BE9               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  7023                           
  7024                           ;mcc_generated_files/eusart1.c: 218:     }
  7025  00187E  0012               	return	
  7026  001880                     i2l167:
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  7030  001880  989D               	bcf	3997,4,c	;volatile
  7031                           
  7032                           ; BSR set to: 0
  7033  001882  0012               	return		;funcret
  7034  001884                     __end_of_EUSART1_Transmit_ISR:
  7035                           	opt callstack 0
  7036                           
  7037 ;; *************** function _EUSART1_Receive_ISR *****************
  7038 ;; Defined at:
  7039 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;		None
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  1    wreg      void 
  7046 ;; Registers used:
  7047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7057 ;;Total ram usage:        0 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    2
  7060 ;; This function calls:
  7061 ;;		Absolute function
  7062 ;;		_EUSART1_DefaultErrorHandler
  7063 ;;		_EUSART1_DefaultFramingErrorHandler
  7064 ;;		_EUSART1_DefaultOverrunErrorHandler
  7065 ;;		_EUSART1_RxDataHandler
  7066 ;; This function is called by:
  7067 ;;		_EUSART1_Initialize
  7068 ;;		_INTERRUPT_InterruptManager
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           	psect	text43
  7073  00114A                     __ptext43:
  7074                           	opt callstack 0
  7075  00114A                     _EUSART1_Receive_ISR:
  7076                           	opt callstack 15
  7077                           
  7078                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;incstack = 0
  7082  00114A  0E00               	movlw	low _eusart1RxStatusBuffer
  7083  00114C  2458               	addwf	_eusart1RxHead,w,c	;volatile
  7084  00114E  6ED9               	movwf	fsr2l,c
  7085  001150  6ADA               	clrf	fsr2h,c
  7086  001152  0E01               	movlw	high _eusart1RxStatusBuffer
  7087  001154  22DA               	addwfc	fsr2h,f,c
  7088  001156  0E00               	movlw	0
  7089  001158  6EDF               	movwf	indf2,c
  7090                           
  7091                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  7092  00115A  A4AB               	btfss	4011,2,c	;volatile
  7093  00115C  D014               	goto	i2u265_49
  7094                           
  7095                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  7096  00115E  0E00               	movlw	low _eusart1RxStatusBuffer
  7097  001160  2458               	addwf	_eusart1RxHead,w,c	;volatile
  7098  001162  6ED9               	movwf	fsr2l,c
  7099  001164  6ADA               	clrf	fsr2h,c
  7100  001166  0E01               	movlw	high _eusart1RxStatusBuffer
  7101  001168  22DA               	addwfc	fsr2h,f,c
  7102  00116A  0101               	movlb	1	; () banked
  7103  00116C  82DF               	bsf	indf2,1,c
  7104                           
  7105                           ; BSR set to: 1
  7106                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  7107  00116E  D801               	call	i2u265_48
  7108  001170  D00A               	goto	i2u265_49
  7109  001172                     i2u265_48:
  7110  001172  0005               	push	
  7111  001174  6EFA               	movwf	pclath,c
  7112  001176  0100               	movlb	0	; () banked
  7113  001178  51E1               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  7114  00117A  6EFD               	movwf	tosl,c
  7115  00117C  51E2               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  7116  00117E  6EFE               	movwf	tosh,c
  7117  001180  6AFF               	clrf	tosu,c
  7118  001182  50FA               	movf	pclath,w,c
  7119  001184  0012               	return		;indir
  7120  001186                     i2u265_49:
  7121                           
  7122                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  7123  001186  A2AB               	btfss	4011,1,c	;volatile
  7124  001188  D014               	goto	i2u267_49
  7125                           
  7126                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  7127  00118A  0E00               	movlw	low _eusart1RxStatusBuffer
  7128  00118C  2458               	addwf	_eusart1RxHead,w,c	;volatile
  7129  00118E  6ED9               	movwf	fsr2l,c
  7130  001190  6ADA               	clrf	fsr2h,c
  7131  001192  0E01               	movlw	high _eusart1RxStatusBuffer
  7132  001194  22DA               	addwfc	fsr2h,f,c
  7133  001196  0101               	movlb	1	; () banked
  7134  001198  84DF               	bsf	indf2,2,c
  7135                           
  7136                           ; BSR set to: 1
  7137                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  7138  00119A  D801               	call	i2u267_48
  7139  00119C  D00A               	goto	i2u267_49
  7140  00119E                     i2u267_48:
  7141  00119E  0005               	push	
  7142  0011A0  6EFA               	movwf	pclath,c
  7143  0011A2  0100               	movlb	0	; () banked
  7144  0011A4  51DF               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  7145  0011A6  6EFD               	movwf	tosl,c
  7146  0011A8  51E0               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  7147  0011AA  6EFE               	movwf	tosh,c
  7148  0011AC  6AFF               	clrf	tosu,c
  7149  0011AE  50FA               	movf	pclath,w,c
  7150  0011B0  0012               	return		;indir
  7151  0011B2                     i2u267_49:
  7152                           
  7153                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  7154  0011B2  0E00               	movlw	low _eusart1RxStatusBuffer
  7155  0011B4  2458               	addwf	_eusart1RxHead,w,c	;volatile
  7156  0011B6  6ED9               	movwf	fsr2l,c
  7157  0011B8  6ADA               	clrf	fsr2h,c
  7158  0011BA  0E01               	movlw	high _eusart1RxStatusBuffer
  7159  0011BC  22DA               	addwfc	fsr2h,f,c
  7160  0011BE  50DF               	movf	indf2,w,c
  7161  0011C0  B4D8               	btfsc	status,2,c
  7162  0011C2  D00C               	goto	i2l3073
  7163                           
  7164                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  7165  0011C4  D801               	call	i2u269_48
  7166  0011C6  0012               	return	
  7167  0011C8                     i2u269_48:
  7168  0011C8  0005               	push	
  7169  0011CA  6EFA               	movwf	pclath,c
  7170  0011CC  0100               	movlb	0	; () banked
  7171  0011CE  51DD               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  7172  0011D0  6EFD               	movwf	tosl,c
  7173  0011D2  51DE               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  7174  0011D4  6EFE               	movwf	tosh,c
  7175  0011D6  6AFF               	clrf	tosu,c
  7176  0011D8  50FA               	movf	pclath,w,c
  7177  0011DA  0012               	return		;indir
  7178  0011DC                     i2l3073:
  7179                           
  7180                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  7181  0011DC  EC90  F00C         	call	_EUSART1_RxDataHandler	;wreg free
  7182  0011E0  0012               	return		;funcret
  7183  0011E2                     __end_of_EUSART1_Receive_ISR:
  7184                           	opt callstack 0
  7185                           
  7186 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7187 ;; Defined at:
  7188 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;		None
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;		None
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  1    wreg      void 
  7195 ;; Registers used:
  7196 ;;		None
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;Total ram usage:        0 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; This function calls:
  7209 ;;		Nothing
  7210 ;; This function is called by:
  7211 ;;		_EUSART1_Initialize
  7212 ;;		_EUSART1_Receive_ISR
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text44
  7217  0019BA                     __ptext44:
  7218                           	opt callstack 0
  7219  0019BA                     _EUSART1_DefaultOverrunErrorHandler:
  7220                           	opt callstack 16
  7221                           
  7222                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  7223                           
  7224                           ;incstack = 0
  7225  0019BA  98AB               	bcf	4011,4,c	;volatile
  7226                           
  7227                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  7228  0019BC  88AB               	bsf	4011,4,c	;volatile
  7229  0019BE  0012               	return		;funcret
  7230  0019C0                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7231                           	opt callstack 0
  7232                           
  7233 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7234 ;; Defined at:
  7235 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;		None
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		None
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;Total ram usage:        0 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_EUSART1_Initialize
  7259 ;;		_EUSART1_Receive_ISR
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text45
  7264  0019CA                     __ptext45:
  7265                           	opt callstack 0
  7266  0019CA                     _EUSART1_DefaultFramingErrorHandler:
  7267                           	opt callstack 16
  7268                           
  7269                           ;incstack = 0
  7270  0019CA  0012               	return		;funcret
  7271  0019CC                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7272                           	opt callstack 0
  7273                           
  7274 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7275 ;; Defined at:
  7276 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      void 
  7283 ;; Registers used:
  7284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:    1
  7297 ;; This function calls:
  7298 ;;		_EUSART1_RxDataHandler
  7299 ;; This function is called by:
  7300 ;;		_EUSART1_Initialize
  7301 ;;		_EUSART1_Receive_ISR
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text46
  7306  0019C0                     __ptext46:
  7307                           	opt callstack 0
  7308  0019C0                     _EUSART1_DefaultErrorHandler:
  7309                           	opt callstack 15
  7310                           
  7311                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  7312                           
  7313                           ;incstack = 0
  7314  0019C0  EC90  F00C         	call	_EUSART1_RxDataHandler	;wreg free
  7315  0019C4  0012               	return		;funcret
  7316  0019C6                     __end_of_EUSART1_DefaultErrorHandler:
  7317                           	opt callstack 0
  7318                           
  7319 ;; *************** function _EUSART1_RxDataHandler *****************
  7320 ;; Defined at:
  7321 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;		None
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;		None
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  1    wreg      void 
  7328 ;; Registers used:
  7329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;Total ram usage:        0 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; This function calls:
  7342 ;;		Nothing
  7343 ;; This function is called by:
  7344 ;;		_EUSART1_Receive_ISR
  7345 ;;		_EUSART1_DefaultErrorHandler
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text47
  7350  001920                     __ptext47:
  7351                           	opt callstack 0
  7352  001920                     _EUSART1_RxDataHandler:
  7353                           	opt callstack 16
  7354                           
  7355                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7356                           
  7357                           ;incstack = 0
  7358  001920  0E00               	movlw	low _eusart1RxBuffer
  7359  001922  2458               	addwf	_eusart1RxHead,w,c	;volatile
  7360  001924  6ED9               	movwf	fsr2l,c
  7361  001926  6ADA               	clrf	fsr2h,c
  7362  001928  0E02               	movlw	high _eusart1RxBuffer
  7363  00192A  22DA               	addwfc	fsr2h,f,c
  7364  00192C  CFAE FFDF          	movff	4014,indf2	;volatile
  7365  001930  2A58               	incf	_eusart1RxHead,f,c	;volatile
  7366                           
  7367                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7368  001932  0E3F               	movlw	63
  7369  001934  6458               	cpfsgt	_eusart1RxHead,c	;volatile
  7370  001936  D002               	goto	i2l2679
  7371                           
  7372                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  7373  001938  0E00               	movlw	0
  7374  00193A  6E58               	movwf	_eusart1RxHead,c	;volatile
  7375  00193C                     i2l2679:
  7376                           
  7377                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  7378  00193C  0100               	movlb	0	; () banked
  7379  00193E  2BE8               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7380                           
  7381                           ; BSR set to: 0
  7382  001940  0012               	return		;funcret
  7383  001942                     __end_of_EUSART1_RxDataHandler:
  7384                           	opt callstack 0
  7385                           
  7386                           	psect	text48
  7387  000000                     __ptext48:
  7388                           	opt callstack 0
  7389                           
  7390                           	psect	rparam
  7391  0000                     
  7392                           	psect	temp
  7393  00005B                     btemp:
  7394                           	opt callstack 0
  7395  00005B                     	ds	1
  7396  0000                     int$flags	set	btemp
  7397  0000                     wtemp8	set	btemp+1
  7398  0000                     ttemp5	set	btemp+1
  7399  0000                     ttemp6	set	btemp+4
  7400  0000                     ttemp7	set	btemp+8
  7401                           tosu	equ	0xFFF
  7402                           tosh	equ	0xFFE
  7403                           tosl	equ	0xFFD
  7404                           stkptr	equ	0xFFC
  7405                           pclatu	equ	0xFFB
  7406                           pclath	equ	0xFFA
  7407                           pcl	equ	0xFF9
  7408                           tblptru	equ	0xFF8
  7409                           tblptrh	equ	0xFF7
  7410                           tblptrl	equ	0xFF6
  7411                           tablat	equ	0xFF5
  7412                           prodh	equ	0xFF4
  7413                           prodl	equ	0xFF3
  7414                           indf0	equ	0xFEF
  7415                           postinc0	equ	0xFEE
  7416                           postdec0	equ	0xFED
  7417                           preinc0	equ	0xFEC
  7418                           plusw0	equ	0xFEB
  7419                           fsr0h	equ	0xFEA
  7420                           fsr0l	equ	0xFE9
  7421                           wreg	equ	0xFE8
  7422                           indf1	equ	0xFE7
  7423                           postinc1	equ	0xFE6
  7424                           postdec1	equ	0xFE5
  7425                           preinc1	equ	0xFE4
  7426                           plusw1	equ	0xFE3
  7427                           fsr1h	equ	0xFE2
  7428                           fsr1l	equ	0xFE1
  7429                           bsr	equ	0xFE0
  7430                           indf2	equ	0xFDF
  7431                           postinc2	equ	0xFDE
  7432                           postdec2	equ	0xFDD
  7433                           preinc2	equ	0xFDC
  7434                           plusw2	equ	0xFDB
  7435                           fsr2h	equ	0xFDA
  7436                           fsr2l	equ	0xFD9
  7437                           status	equ	0xFD8


Data Sizes:
    Strings     439
    Constant    0
    Data        84
    BSS         402
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     65     159
    BANK1           256      0     196
    BANK2           256      0     192
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_24(CODE[35]), STR_23(CODE[25]), STR_22(CODE[17]), STR_21(CODE[16]), 
		 -> STR_20(CODE[26]), STR_19(CODE[18]), STR_18(CODE[17]), STR_17(CODE[37]), 
		 -> STR_16(CODE[35]), STR_15(CODE[25]), STR_14(CODE[17]), STR_13(CODE[34]), 
		 -> STR_12(CODE[31]), STR_11(CODE[19]), STR_10(CODE[31]), STR_9(CODE[14]), 
		 -> STR_8(CODE[29]), STR_7(CODE[18]), STR_6(CODE[18]), STR_5(CODE[17]), 
		 -> STR_4(CODE[37]), STR_3(CODE[19]), STR_2(CODE[24]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1715_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_24(CODE[35]), STR_23(CODE[25]), STR_22(CODE[17]), STR_21(CODE[16]), 
		 -> STR_20(CODE[26]), STR_19(CODE[18]), STR_18(CODE[17]), STR_17(CODE[37]), 
		 -> STR_16(CODE[35]), STR_15(CODE[25]), STR_14(CODE[17]), STR_13(CODE[34]), 
		 -> STR_12(CODE[31]), STR_11(CODE[19]), STR_10(CODE[31]), STR_9(CODE[14]), 
		 -> STR_8(CODE[29]), STR_7(CODE[18]), STR_6(CODE[18]), STR_5(CODE[17]), 
		 -> STR_4(CODE[37]), STR_3(CODE[19]), STR_2(CODE[24]), STR_1(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_24(CODE[35]), STR_23(CODE[25]), STR_22(CODE[17]), STR_21(CODE[16]), 
		 -> STR_20(CODE[26]), STR_19(CODE[18]), STR_18(CODE[17]), STR_17(CODE[37]), 
		 -> STR_16(CODE[35]), STR_15(CODE[25]), STR_14(CODE[17]), STR_13(CODE[34]), 
		 -> STR_12(CODE[31]), STR_11(CODE[19]), STR_10(CODE[31]), STR_9(CODE[14]), 
		 -> STR_8(CODE[29]), STR_7(CODE[18]), STR_6(CODE[18]), STR_5(CODE[17]), 
		 -> STR_4(CODE[37]), STR_3(CODE[19]), STR_2(CODE[24]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 37
		 -> STR_24(CODE[35]), STR_23(CODE[25]), STR_22(CODE[17]), STR_21(CODE[16]), 
		 -> STR_20(CODE[26]), STR_19(CODE[18]), STR_18(CODE[17]), STR_17(CODE[37]), 
		 -> STR_16(CODE[35]), STR_15(CODE[25]), STR_14(CODE[17]), STR_13(CODE[34]), 
		 -> STR_12(CODE[31]), STR_11(CODE[19]), STR_10(CODE[31]), STR_9(CODE[14]), 
		 -> STR_8(CODE[29]), STR_7(CODE[18]), STR_6(CODE[18]), STR_5(CODE[17]), 
		 -> STR_4(CODE[37]), STR_3(CODE[19]), STR_2(CODE[24]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    i2c_read_serial@data_out	PTR unsigned char  size(2) Largest target is 128
		 -> data_out(BANK0[4]), eeprom_buffer(BANK2[128]), 

    i2c_write_serial@data	PTR unsigned char  size(2) Largest target is 18
		 -> tmp_string(BANK0[15]), NULL(NULL[0]), moist_pos(BANK0[2]), updateMoist@output(BANK0[10]), 
		 -> updateTemperature@output(COMRAM[4]), minus(BANK0[2]), temp_pos(BANK0[2]), eeprom_addr0000(BANK0[2]), 
		 -> eeprom_write(BANK0[17]), custom_char0(BANK0[11]), moist_string(BANK1[18]), shift_line(BANK0[2]), 
		 -> temp_string(BANK1[18]), first_line(BANK0[2]), display_init(BANK0[4]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_i2c_write_serial
    _getReading->_i2c_write_serial
    _updateMoist->_i2c_write_serial
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_getReading
    _getReading->_updateMoist
    _updateMoist->_i2c_write_serial
    _i2c_write_serial->_printf
    _i2c_read_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  103230
                                             63 BANK0      2     2      0
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                         _getReading
                           _i2c_init
                    _i2c_read_serial
                   _i2c_write_serial
                             _printf
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getReading                                          17    17      0   56112
                                             46 BANK0     17    17      0
                            ___aldiv
                            ___almod
                            ___awmod
                            ___lldiv
                             ___lmul
                    _i2c_read_serial
                   _i2c_write_serial
                        _updateMoist
 ---------------------------------------------------------------------------------
 (2) _updateMoist                                         11    11      0   19587
                                             35 BANK0     11    11      0
                            ___awdiv
                            ___awmod
                   _i2c_write_serial
 ---------------------------------------------------------------------------------
 (1) _i2c_write_serial                                     8     5      3   17722
                                             84 COMRAM     2     2      0
                                             29 BANK0      6     3      3
                             _printf
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _i2c_read_serial                                     12     9      3   14563
                                             29 BANK0     12     9      3
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   13853
                                             19 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11600
                                             82 COMRAM     2     2      0
                                             13 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   11058
                                             72 COMRAM    10     4      6
                                              0 BANK0     13    13      0
                               _atoi
                               _ctoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4491
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3157
                                             33 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1290
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     449
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     674
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8     600
                                              4 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     908
                                              4 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _getReading
     ___aldiv
     ___almod
     ___awmod
     ___lldiv
     ___lmul
     _i2c_read_serial
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _toupper
                 _islower
     _i2c_write_serial
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _toupper
                 _islower
     _updateMoist
       ___awdiv
       ___awmod
       _i2c_write_serial
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
               _fputc
                 _putch
                   _EUSART1_Write
               _isdigit
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _EUSART1_Write
                   _fputs
                     _fputc
                       _putch
                         _EUSART1_Write
                   _strlen
                 _toupper
                   _islower
   _i2c_init
   _i2c_read_serial
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _i2c_write_serial
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C4       7       76.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     41      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     27D      12        0.0%
DATA                 0      0     27D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Feb 17 16:35:10 2020

                      _eusart1TxBufferRemaining 00E9                                i2c_read_serial@i 0088  
                                            l22 1978                                    ___awdiv@sign 000A  
                           ___wmul@multiplicand 0007                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l322 09F8                                             l155 1714  
                                           l331 0A7A                                             l325 0A22  
                                           l342 0B3C                                             l431 10E0  
                                           l319 09D8                                             l352 0E48  
                                           l336 0ACE                                             l361 0EC4  
                                           l345 0B5E                                             l450 07B4  
                                           l370 0F06                                             l362 0EC6  
                                           l363 0EC8                                             l540 1368  
                                           l373 0F28                                             l357 0E7E  
                                           l349 0E28                                             l358 0E80  
                                           l367 0F00                                             l448 07AC  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                                           _pad 10B0                                    ___awmod@sign 000A  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                         i2c_read_serial@data_out 007D  
                                          l1212 0E04                                            l3001 107A  
                                          l3005 1088                                            l2311 1732  
                                          l3009 109E                                            l2313 1734  
                                          l2411 16C0                                            l2323 14EE  
                                          l2333 16D2                                            l2341 188E  
                                          l2421 1610                                            l2343 1892  
                                          l1279 1680                                            l3303 1556  
                                          l2513 0D34                                            l2337 16E8  
                                          l2361 10D8                                            l3305 157C  
                                          l3401 1200                                            l2523 0DA2  
                                          l2515 0D3C                                            l2507 0D24  
                                          l2371 1130                                            l2363 10EA  
                                          l2419 1604                                            l2603 0624  
                                          l3331 0A46                                            l3403 1204  
                                          l2517 0D42                                            l2357 10CA  
                                          l2453 081A                                            l2445 07F8  
                                          l2519 0D6C                                            l2367 1102  
                                          l2439 07C8                                            l2623 0736  
                                          l2551 047A                                            l3351 0B32  
                                          l3407 123E                                            l2297 1702  
                                          l2617 06F8                                            l2633 0758  
                                          l2801 14CC                                            l3337 0ABE  
                                          l2491 0996                                            l2467 08A8  
                                          l2475 091E                                            l2627 0740  
                                          l2571 0494                                            l2563 0486  
                                          l2555 047E                                            l2547 0468  
                                          l3347 0B22                                            l3355 0B50  
                                          l2549 046A                                            l2573 04D8  
                                          l2733 1288                                            l3349 0B2E  
                                          l2903 15AA                                            l2567 048A  
                                          l2559 0482                                            l3455 0248  
                                          l3543 0CAA                                            l2497 0CD6  
                                          l2585 0546                                            l3385 0EF4  
                                          l2745 12AE                                            l2761 12E0  
                                          l3481 03AA                                            l2907 15BE  
                                          l2499 0CDA                                            l2587 0564  
                                          l2747 12B6                                            l2739 1298  
                                          l3483 03AE                                            l3467 02E8  
                                          l2941 0F54                                            l2917 131A  
                                          l2589 0572                                            l3389 0F1A  
                                          l2765 12EE                                            l2757 12D6  
                                          l2781 1486                                            ?_pad 0017  
                                          l2919 1326                                            l3487 03C0  
                                          l2953 0F8E                                            l2929 135A  
                                          l2793 14B4                                            l2785 1494  
                                          l2777 147A                                            l2955 0F9A  
                                          l2947 0F6C                                            l2787 149C  
                                          l2973 0FF2                                            l2965 0FCE  
                                          l2797 14BE                                            l2969 0FDC  
                                          l2993 1046                                            l2985 1020  
                                          l2995 1052                                            l2989 1034  
                                          STR_1 FFF8                                            STR_2 FF45  
                                          STR_3 FF5D                                            STR_4 FE6C  
                                          STR_5 FFC9                                            STR_6 FF95  
                                          STR_7 FF83                                            STR_8 FEF5  
                                          STR_9 FFEA                                            u2000 05BC  
                                          u2030 065C                                            u3000 0EC0  
                                          u2210 12BA                                            u3100 0332  
                                          _LATA 000F89                                            u1510 17C4  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u1600 1766                                            u1520 17C6  
                                          u1610 1668                                            u1460 14E6  
                                          u1620 166A                                            u1700 07A2  
                                          u2510 0F9E                                            u2270 14A0  
                                          u1640 1824                                            u1480 152E  
                                          u1800 092E                                            u1720 0816  
                                          u3137 0B8A                                            u1650 1826  
                                          u1570 17F4                                            u1730 084C  
                                          u3075 0170                                            u3147 0BA2  
                                          u2460 132A                                            u1900 0DD6  
                                          u1580 17F6                                            u1820 0950  
                                          u1740 084E                                            u1821 094E  
                                          u3157 0CB6                                            u1670 16BC  
                                          u1590 1764                                            u1830 095E  
                                          u1840 0964                                            u1760 0886  
                                          u2570 1056                                            u1770 0888  
                                          u1870 0D20                                            u1790 08FA  
                                          u1890 0DD4                                            u1795 08E8  
                                          u1980 05AC                                            u1990 05AE  
                                          _WPUB 000F61                                   _EUSART1_Write 1700  
                                          _dbuf 0180                                            _atoi 0CC4  
                                          _ctoa 15F0                                            _main 0B6E  
                                          _prec 00D9                                            _nout 00D5  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          btemp 005B                                   __CFG_BORV$190 000000  
                                          _xtoa 078E                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0068  
                              updateMoist@moist 008D                                   __CFG_IESO$OFF 000000  
                           i2c_read_serial@addr 0086                                    ___param_bank 000000  
                                         ??_pad 001D                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 197E                           _eusart1RxStatusBuffer 0100  
                               __end_of___aldiv 1004                                           ?_atoi 000C  
                               __end_of___almod 10B0                                           ?_ctoa 0022  
                                         ?_main 0001                                 __end_of___awdiv 12F8  
                                         STR_10 FED6                                           STR_11 FF70  
                                         STR_12 FED6                                           STR_20 FF12  
                                         STR_21 FFDA                                           STR_13 FEB4  
                                         STR_14 FFB8                                           STR_22 FFA7  
                                         STR_23 FF2C                                           STR_15 FF2C  
                                         STR_24 FE91                                           STR_16 FE91  
                                         STR_17 FE47                                           STR_18 FFC9  
                                         STR_19 FF95                                 __end_of___awmod 14D6  
                               __end_of___lldiv 137A                                 ___awdiv@divisor 0007  
                                         ?_xtoa 0022                                  __CFG_DEBUG$OFF 000000  
                                         i2l226 0036                                           i2l167 1880  
                               ___awdiv@counter 0009                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 0060                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                             ___lmul@multiplicand 0009  
                                 __CFG_WRT3$OFF 000000                            _EUSART1_Transmit_ISR 1858  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                               i2c_write_serial@i 0082  
                                         _flags 00DB                                           _fputc 14D6  
                               __end_of_isalpha 176C                                           _fputs 16C8  
                               __end_of_isdigit 182C                                           _minus 00CF  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 00D7                                           ctoa@c 0024  
                                         _putch 197E                                           ctoa@w 0025  
                               __end_of_islower 17CC                                 __end_of_isspace 16C8  
                                ?_EUSART1_Write 0001                                 __end_of_isupper 17FC  
                                         pclath 000FFA                                           tablat 000FF5  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                                __CFG_HFOFST$ON 000000                                 __end_of_toupper 168A  
    __end_of_EUSART1_DefaultFramingErrorHandler 19CC     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 19CA                               updateMoist@output 0083  
                                __CFG_PBADEN$ON 000000                                    _toupper$1766 0011  
                               __initialization 137A                                    __end_of_atoi 0E0E  
                                  __end_of_ctoa 1640                      __end_of_EUSART1_Initialize 1466  
                                  __end_of_main 0CC4                             getReading@tmp_moist 0096  
                                  __end_of_xtoa 09C0                                __end_of_i2c_init 195A  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_atoi 000E  
                                        ??_ctoa 0025                                          ??_main 009F  
                                        ??_xtoa 002D                                   __activetblptr 000003  
                         ?_EUSART1_Transmit_ISR 0001                                          ?_fputc 0007  
                                        ?_fputs 0010                                ___awdiv@dividend 0005  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                      __end_of_i2c_write_serial 0B6E                                          i2l3053 187C  
                                        i2l3073 11DC                                  __CFG_WDTEN$OFF 000000  
                                        i2l2679 193C                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   vfpfcnvrt@done 0068  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 0053                                          ___lmul 159A  
                                     ??___aldiv 000D                                       ??___almod 000D  
                                        ___wmul 18D6                                       ??___awdiv 0009  
                                __CFG_STVREN$ON 000000                                       ??___awmod 0009  
                                     ??___lldiv 000D                        ?_EUSART1_SetErrorHandler 0005  
                               _i2c_read_serial 0E0E                                          clear_0 13C0  
                                        clear_1 13CC                                          clear_2 13D8  
                              ___awdiv@quotient 000B                                 ___awmod@divisor 0007  
                               ___awmod@counter 0009                                          _printf 18AE  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          ctoa@fp 0022  
                                        _strlen 1884                                          fputc@c 0007  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                       ??_islower 0007  
                                  __mediumconst FE46                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 159A                                 ??_EUSART1_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0200  
                                     ??_toupper 000D                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0140                          updateTemperature@F6409 00D1  
                             _SYSTEM_Initialize 195A                                      __accesstop 0060  
                       __end_of__initialization 13E6                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 0022  
                                  ?_updateMoist 0001                           i2c_read_serial@length 007F  
                 __end_of_EUSART1_RxDataHandler 1942                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 176C                                    __pidataBANK1 18FC  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 1542  
                                 __end_of_fputs 1700                                   __end_of_putch 1988  
                        ??_EUSART1_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 11E2  
                                       ??_fputc 000B                       __end_of_SYSTEM_Initialize 196C  
                                       ??_fputs 0014                                         ??_putch 0006  
                                 _eusart1RxHead 0058                                   _eusart1TxHead 005A  
                                 _eusart1RxTail 0057                                      __pbssBANK0 00D1  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart1TxTail 0059               _EUSART1_TxDefaultInterruptHandler 00E5  
               ??_EUSART1_SetRxInterruptHandler 0007                                 __CFG_PLLCFG$OFF 000000  
                                     ?_i2c_init 0001                                      _degree_pos 00A1  
                       __end_of_i2c_read_serial 0F38                 __end_of_EUSART1_SetErrorHandler 19BA  
                            __CFG_CCP2MX$PORTC1 000000                                         ?___lmul 0005  
                                       ?___wmul 0005                              __CFG_CCP3MX$PORTB5 000000  
                        i2c_write_serial@length 007F                                      _getReading 006C  
                                ___lmul@product 000D                                         ?_printf 0073  
                                       ?_strlen 0005          __end_of_EUSART1_SetFramingErrorHandler 19B0  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 19A6  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 036E                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                                       _SSP1BUF 000FC9                                      ??_i2c_init 0005  
                              getReading@length 009A                                      _first_line 00CD  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aldiv 0F38  
                                       ___almod 1004                                         ___awdiv 1274  
                               __size_of___lmul 0056                                         ___awmod 1466  
                                       ___lldiv 12F8                                 __size_of___wmul 0026  
                                     ?_vfprintf 006D                                         __pcinit 137A  
                                       __ramtop 1000                                         __ptext0 0B6E  
                                       __ptext1 1942                                         __ptext2 006C  
                                       __ptext3 11E2                                         __ptext4 09C0  
                                       __ptext5 1466                                         __ptext6 1274  
                                       __ptext7 0E0E                                         __ptext8 18AE  
                                       __ptext9 1542                                 __size_of_printf 0028  
                               __size_of_strlen 002A                           _OSCILLATOR_Initialize 196C  
                                  __size_of_pad 009A                                         _isalpha 1738  
                                       _isdigit 17FC                                ___awmod@dividend 0005  
                              ___aldiv@dividend 0005                              _EUSART1_Initialize 13F0  
                                       _islower 179C                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 168A                                         _isupper 17CC  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 0012                                         _toupper 1640  
                          end_of_initialization 13E6                             ?_EUSART1_Initialize 0001  
                             ?_i2c_write_serial 007D                                         fputc@fp 0009  
                                  _eeprom_write 00A7                     _EUSART1_OverrunErrorHandler 00DF  
                                       fputs@fp 0012                              ??_i2c_write_serial 0055  
                               ___lldiv@divisor 0009           __end_of_EUSART1_SetRxInterruptHandler 199C  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 1992  
                               ___lldiv@counter 0011                                ?_i2c_read_serial 007D  
                                    _shift_line 00CB                               __end_of_vfpfcnvrt 078E  
                              ___aldiv@quotient 000F                                         postdec1 000FE5  
                                       postdec2 000FDD                                      _precission 00A6  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                            __size_of_updateMoist 0092  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                                   ?_getReading 0001                                         strlen@a 0007  
                                       strlen@s 0005                                    _display_addr 00A4  
                                  _display_init 00C3                                       _TRISCbits 000F94  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                                    _tmp_string 00EA                              getReading@decimal1 0095  
                            getReading@decimal2 0092            __size_of_EUSART1_DefaultErrorHandler 0006  
                  __end_of_INTERRUPT_Initialize 19CA                                  __end_of___lmul 15F0  
                                   vfpfcnvrt@ap 004D                                     vfpfcnvrt@fp 0049  
                                __end_of___wmul 18FC                                 _eeprom_addr0000 00FD  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 18D6  
                                __end_of_strlen 18AE                             start_initialization 137A  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_pad 114A  
                            getReading@tmp_temp 009B   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005                                     putch@txData 0006  
                         __end_of_EUSART1_Write 1738                             __size_of_getReading 03B4  
                              _temperature_addr 00A5                               __size_of_i2c_init 0018  
                                getReading@ones 0093                                  getReading@tens 0094  
                                   vfprintf@fmt 006F                                        ??___lmul 000D  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 1920  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00A1  
                                   __pdataBANK1 01A0                                        ??_printf 0055  
                                      ??_strlen 0007                                  _eusart1RxCount 00E8  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 00E3  
                 __size_of_EUSART1_Transmit_ISR 002C                                   __pcstackBANK0 0060  
               ??_EUSART1_SetTxInterruptHandler 0007                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                    __size_of_EUSART1_Receive_ISR 0098  
                                     _atoi$1675 0014                                       _atoi$1676 0018  
                                     _atoi$1677 0016                          _PIN_MANAGER_Initialize 182C  
                                     __pintcode 0008                                   __pmediumconst FE46  
                                      ?___aldiv 0005                                        ?___almod 0005  
                                      ?___awdiv 0005                                        ?___awmod 0005  
                                      ?___lldiv 0005                                    _custom_char0 00B8  
                  ??_INTERRUPT_InterruptManager 0001                                ___almod@dividend 0005  
                              __CFG_PRICLKEN$ON 000000                               __size_of_vfprintf 0058  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 19C0  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 19BA  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 00DD                                        ?_islower 0005  
                                      ?_isspace 0005                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 19B0                                  __size_of_fputc 006C  
                                __size_of_fputs 0038                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 19C6  
                               ___aldiv@divisor 0009                                 ___aldiv@counter 000D  
                                ___wmul@product 0009         EUSART1_SetErrorHandler@interruptHandler 0005  
                                   _eeprom_addr 00A3                                        _PIE1bits 000F9D  
                                     _moist_pos 00C7             __size_of_INTERRUPT_InterruptManager 0060  
                                      i2u280_48 0040                                        i2u280_49 0054  
                                      _PIR1bits 000F9E                                        i2u265_48 1172  
                                      i2u265_49 1186                                        i2u267_48 119E  
                                      i2u267_49 11B2                                        i2u269_48 11C8  
                                      i2u277_48 0028                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                      _SSP1CON1 000FC6                                        _SSP1CON2 000FC5  
                                      _SSP1STAT 000FC7                                    ??_getReading 008E  
                     __size_of_i2c_write_serial 01AE                                       _vfpfcnvrt 0420  
                                     _xtoa$1204 0035                                       _xtoa$1205 0037  
                             ___wmul@multiplier 0005                      i2c_write_serial@targetAddr 0081  
                                  _isspace$1702 000B                                      vfpfcnvrt@c 006C  
                             ___lmul@multiplier 0005                                     _INTCON2bits 000FF1  
                                     copy_data0 138E                                       copy_data1 13AE  
                         ?_INTERRUPT_Initialize 0001                                        _i2c_init 1942  
                            __end_of_getReading 0420           __end_of_EUSART1_SetTxInterruptHandler 1992  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 1988  
                                 ??_updateMoist 0057                                        __Hrparam 0000  
                                    vfprintf@ap 0071                                        __Lrparam 0000  
                                    vfprintf@fp 006D                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0005  
                              __size_of___aldiv 00CC                                __size_of___almod 00AC  
                              __size_of___awdiv 0084                                __size_of___awmod 0070  
                              __size_of___lldiv 0082                     __size_of_EUSART1_Initialize 0076  
                                    ?_vfpfcnvrt 0049                        __size_of_i2c_read_serial 012A  
                                    _ANSELCbits 000F3A                       ??_EUSART1_SetErrorHandler 0007  
           __end_of_EUSART1_DefaultErrorHandler 19C6                     _EUSART1_DefaultErrorHandler 19C0  
                                      _data_out 00F9                                __size_of_isalpha 0034  
                              __size_of_isdigit 0030                            i2c_write_serial@addr 0080  
                          i2c_write_serial@data 007D                                __size_of_islower 0030  
                              __size_of_isspace 003E                                        __ptext10 0420  
                                      __ptext11 078E                                        __ptext20 14D6  
                                      __ptext12 1640                                        __ptext21 197E  
                                      __ptext13 179C                                        __ptext30 0F38  
                                      __ptext22 1700                                        __ptext14 17CC  
                                      __ptext31 195A                                        __ptext23 0CC4  
                                      __ptext15 1738                                        __ptext40 19B0  
                                      __ptext32 182C                                        __ptext24 168A  
                                      __ptext16 15F0                                        __ptext33 196C  
                                      __ptext25 17FC                                        __ptext17 10B0  
                                      __ptext42 1858                                        __ptext34 19C6  
                                      __ptext26 18D6                                        __ptext18 1884  
                                      __ptext43 114A                                        __ptext35 13F0  
                                      __ptext27 159A                                        __ptext19 16C8  
                                      __ptext44 19BA                                        __ptext36 1988  
                                      __ptext28 12F8                                        __ptext45 19CA  
                                      __ptext37 1992                                        __ptext29 1004  
                                      __ptext46 19C0                                        __ptext38 199C  
                                      __ptext47 1920                                        __ptext39 19A6  
                                      __ptext48 0000                                __size_of_isupper 0030  
                                  _SSP1CON2bits 000FC5                                 ___almod@divisor 0009  
                                  _moist_string 01A0                                 ___almod@counter 000D  
                              __size_of_toupper 004A                                   __size_of_atoi 014A  
                                 __size_of_ctoa 0050                                   __size_of_main 0156  
                                 __size_of_xtoa 0232  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
                                      _temp_pos 00C9                                        int$flags 005B  
                                      _vfprintf 1542              __end_of_INTERRUPT_InterruptManager 0068  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0073  
                                  _SSP1STATbits 000FC7                             __end_of_updateMoist 1274  
                   _EUSART1_FramingErrorHandler 00E1                             _EUSART1_Receive_ISR 114A  
                     i2c_read_serial@targetAddr 0087                                  _vfpfcnvrt$1219 006A  
                                    _INTCONbits 000FF2                                   _eeprom_buffer 0240  
                                      isalpha@c 0005                                        isdigit@c 0005  
                        ??_INTERRUPT_Initialize 0005                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                                ___lldiv@dividend 0005  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 19A6  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 199C  
                                    _RCSTA1bits 000FAB                                        isupper@c 0005  
                  __end_of_EUSART1_Transmit_ISR 1884                                        printf@ap 007B  
EUSART1_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                              _i2c_write_serial 09C0                                     ??_vfpfcnvrt 004F  
                        __size_of_EUSART1_Write 0038                              _eusart1RxLastError 00E7  
                                   _temp_string 01B2                                ___lldiv@quotient 000D  
                                      toupper@c 000B                                    ___aldiv@sign 000E  
                             __CFG_T3CMX$PORTC0 000000                               ??_i2c_read_serial 0080  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 1858  
                                  ___almod@sign 000E                               __CFG_FOSC$INTIO67 000000  
                       ??_EUSART1_RxDataHandler 0001                                     _updateMoist 11E2  
