

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 15:24:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.32
    17                           ; Generated 02/02/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F26K22 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _ANSELA	set	3896
    52  0000                     _ANSELB	set	3897
    53  0000                     _ANSELC	set	3898
    54  0000                     _LATAbits	set	3977
    55  0000                     _PORTAbits	set	3968
    56  0000                     _INTCONbits	set	4082
    57  0000                     _INTCON2bits	set	4081
    58  0000                     _WPUB	set	3937
    59  0000                     _TRISC	set	3988
    60  0000                     _TRISB	set	3987
    61  0000                     _TRISA	set	3986
    62  0000                     _LATC	set	3979
    63  0000                     _LATB	set	3978
    64  0000                     _LATA	set	3977
    65  0000                     _OSCTUNE	set	3995
    66  0000                     _OSCCON2	set	4050
    67  0000                     _OSCCON	set	4051
    68  0000                     _PLLRDY	set	32407
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73  00FF58                     __pcinit:
    74                           	callstack 0
    75  00FF58                     start_initialization:
    76                           	callstack 0
    77  00FF58                     __initialization:
    78                           	callstack 0
    79  00FF58                     end_of_initialization:
    80                           	callstack 0
    81  00FF58                     __end_of__initialization:
    82                           	callstack 0
    83  00FF58  0100               	movlb	0
    84  00FF5A  EFD7  F07F         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	cstackCOMRAM
    87  000001                     __pcstackCOMRAM:
    88                           	callstack 0
    89  000001                     ??_main:
    90                           
    91                           ; 1 bytes @ 0x0
    92  000001                     	ds	2
    93                           
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 4 in file "main.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, status,0, cstack
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   117 ;;Total ram usage:        2 bytes
   118 ;; Hardware stack levels required when called: 2
   119 ;; This function calls:
   120 ;;		_SYSTEM_Initialize
   121 ;; This function is called by:
   122 ;;		Startup code after reset
   123 ;; This function uses a non-reentrant model
   124 ;;
   125                           
   126                           	psect	text0
   127  00FFAE                     __ptext0:
   128                           	callstack 0
   129  00FFAE                     _main:
   130                           	callstack 29
   131  00FFAE                     
   132                           ;main.c: 6:     SYSTEM_Initialize();
   133  00FFAE  ECAF  F07F         	call	_SYSTEM_Initialize	;wreg free
   134  00FFB2                     l767:
   135                           
   136                           ;main.c: 9:     {;main.c: 10:         if (1 == PORTAbits.RA1)
   137  00FFB2  A280               	btfss	128,1,c	;volatile
   138  00FFB4  EFDE  F07F         	goto	u21
   139  00FFB8  EFE0  F07F         	goto	u20
   140  00FFBC                     u21:
   141  00FFBC  EFD9  F07F         	goto	l767
   142  00FFC0                     u20:
   143  00FFC0  B089               	btfsc	137,0,c	;volatile
   144  00FFC2  EFE5  F07F         	goto	u31
   145  00FFC6  EFE8  F07F         	goto	u30
   146  00FFCA                     u31:
   147  00FFCA  0E01               	movlw	1
   148  00FFCC  EFE9  F07F         	goto	u36
   149  00FFD0                     u30:
   150  00FFD0  0E00               	movlw	0
   151  00FFD2                     u36:
   152  00FFD2  0AFF               	xorlw	255
   153  00FFD4  6E01               	movwf	??_main^0,c
   154  00FFD6  5089               	movf	137,w,c	;volatile
   155  00FFD8  1801               	xorwf	??_main^0,w,c
   156  00FFDA  0BFE               	andlw	-2
   157  00FFDC  1801               	xorwf	??_main^0,w,c
   158  00FFDE  6E89               	movwf	137,c	;volatile
   159  00FFE0                     
   160                           ;main.c: 13:             _delay((unsigned long)((500)*(64000000/4000.0)));
   161  00FFE0  0E29               	movlw	41
   162  00FFE2  6E02               	movwf	(??_main+1)^0,c
   163  00FFE4  0E96               	movlw	150
   164  00FFE6  6E01               	movwf	??_main^0,c
   165  00FFE8  0E7F               	movlw	127
   166  00FFEA                     u57:
   167  00FFEA  2EE8               	decfsz	wreg,f,c
   168  00FFEC  D7FE               	bra	u57
   169  00FFEE  2E01               	decfsz	??_main^0,f,c
   170  00FFF0  D7FC               	bra	u57
   171  00FFF2  2E02               	decfsz	(??_main+1)^0,f,c
   172  00FFF4  D7FA               	bra	u57
   173  00FFF6  F000               	nop	
   174  00FFF8  EFD9  F07F         	goto	l767
   175  00FFFC  EF00  F000         	goto	start
   176  010000                     __end_of_main:
   177                           	callstack 0
   178                           
   179 ;; *************** function _SYSTEM_Initialize *****************
   180 ;; Defined at:
   181 ;;		line 50 in file "mcc_generated_files/mcc.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		wreg, status,2, cstack
   190 ;; Tracked objects:
   191 ;;		On entry : 0/0
   192 ;;		On exit  : 0/0
   193 ;;		Unchanged: 0/0
   194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   199 ;;Total ram usage:        0 bytes
   200 ;; Hardware stack levels used: 1
   201 ;; Hardware stack levels required when called: 1
   202 ;; This function calls:
   203 ;;		_OSCILLATOR_Initialize
   204 ;;		_PIN_MANAGER_Initialize
   205 ;; This function is called by:
   206 ;;		_main
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text1
   211  00FF5E                     __ptext1:
   212                           	callstack 0
   213  00FF5E                     _SYSTEM_Initialize:
   214                           	callstack 29
   215  00FF5E                     
   216                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   217  00FF5E  ECC2  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   218                           
   219                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   220  00FF62  ECB4  F07F         	call	_OSCILLATOR_Initialize	;wreg free
   221  00FF66  0012               	return		;funcret
   222  00FF68                     __end_of_SYSTEM_Initialize:
   223                           	callstack 0
   224                           
   225 ;; *************** function _PIN_MANAGER_Initialize *****************
   226 ;; Defined at:
   227 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   245 ;;Total ram usage:        0 bytes
   246 ;; Hardware stack levels used: 1
   247 ;; This function calls:
   248 ;;		Nothing
   249 ;; This function is called by:
   250 ;;		_SYSTEM_Initialize
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           	psect	text2
   255  00FF84                     __ptext2:
   256                           	callstack 0
   257  00FF84                     _PIN_MANAGER_Initialize:
   258                           	callstack 29
   259  00FF84                     
   260                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x02;
   261  00FF84  0E02               	movlw	2
   262  00FF86  6E89               	movwf	137,c	;volatile
   263                           
   264                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   265  00FF88  0E00               	movlw	0
   266  00FF8A  6E8A               	movwf	138,c	;volatile
   267                           
   268                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   269  00FF8C  0E00               	movlw	0
   270  00FF8E  6E8B               	movwf	139,c	;volatile
   271                           
   272                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFE;
   273  00FF90  0EFE               	movlw	254
   274  00FF92  6E92               	movwf	146,c	;volatile
   275  00FF94                     
   276                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   277  00FF94  6893               	setf	147,c	;volatile
   278  00FF96                     
   279                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
   280  00FF96  6894               	setf	148,c	;volatile
   281                           
   282                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFC;
   283  00FF98  0EFC               	movlw	252
   284  00FF9A  010F               	movlb	15	; () banked
   285  00FF9C  6F3A               	movwf	58,b	;volatile
   286                           
   287                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
   288  00FF9E  0E3F               	movlw	63
   289  00FFA0  6F39               	movwf	57,b	;volatile
   290                           
   291                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2C;
   292  00FFA2  0E2C               	movlw	44
   293  00FFA4  6F38               	movwf	56,b	;volatile
   294                           
   295                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   296  00FFA6  0E00               	movlw	0
   297  00FFA8  6E61               	movwf	97,c	;volatile
   298  00FFAA                     
   299                           ; BSR set to: 15
   300                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
   301  00FFAA  8EF1               	bsf	241,7,c	;volatile
   302  00FFAC                     
   303                           ; BSR set to: 15
   304  00FFAC  0012               	return		;funcret
   305  00FFAE                     __end_of_PIN_MANAGER_Initialize:
   306                           	callstack 0
   307                           
   308 ;; *************** function _OSCILLATOR_Initialize *****************
   309 ;; Defined at:
   310 ;;		line 57 in file "mcc_generated_files/mcc.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;Total ram usage:        0 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		_SYSTEM_Initialize
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text3
   338  00FF68                     __ptext3:
   339                           	callstack 0
   340  00FF68                     _OSCILLATOR_Initialize:
   341                           	callstack 29
   342  00FF68                     
   343                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x70;
   344  00FF68  0E70               	movlw	112
   345  00FF6A  6ED3               	movwf	211,c	;volatile
   346                           
   347                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x04;
   348  00FF6C  0E04               	movlw	4
   349  00FF6E  6ED2               	movwf	210,c	;volatile
   350                           
   351                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x40;
   352  00FF70  0E40               	movlw	64
   353  00FF72  6E9B               	movwf	155,c	;volatile
   354  00FF74                     l18:
   355                           
   356                           ;mcc_generated_files/mcc.c: 66:     while(PLLRDY == 0)
   357  00FF74  AED2               	btfss	4050,7,c	;volatile
   358  00FF76  EFBF  F07F         	goto	u11
   359  00FF7A  EFC1  F07F         	goto	u10
   360  00FF7E                     u11:
   361  00FF7E  EFBA  F07F         	goto	l18
   362  00FF82                     u10:
   363  00FF82  0012               	return		;funcret
   364  00FF84                     __end_of_OSCILLATOR_Initialize:
   365                           	callstack 0
   366  0000                     
   367                           	psect	rparam
   368  0000                     
   369                           	psect	idloc
   370                           
   371                           ;Config register IDLOC0 @ 0x200000
   372                           ;	unspecified, using default values
   373  200000                     	org	2097152
   374  200000  FF                 	db	255
   375                           
   376                           ;Config register IDLOC1 @ 0x200001
   377                           ;	unspecified, using default values
   378  200001                     	org	2097153
   379  200001  FF                 	db	255
   380                           
   381                           ;Config register IDLOC2 @ 0x200002
   382                           ;	unspecified, using default values
   383  200002                     	org	2097154
   384  200002  FF                 	db	255
   385                           
   386                           ;Config register IDLOC3 @ 0x200003
   387                           ;	unspecified, using default values
   388  200003                     	org	2097155
   389  200003  FF                 	db	255
   390                           
   391                           ;Config register IDLOC4 @ 0x200004
   392                           ;	unspecified, using default values
   393  200004                     	org	2097156
   394  200004  FF                 	db	255
   395                           
   396                           ;Config register IDLOC5 @ 0x200005
   397                           ;	unspecified, using default values
   398  200005                     	org	2097157
   399  200005  FF                 	db	255
   400                           
   401                           ;Config register IDLOC6 @ 0x200006
   402                           ;	unspecified, using default values
   403  200006                     	org	2097158
   404  200006  FF                 	db	255
   405                           
   406                           ;Config register IDLOC7 @ 0x200007
   407                           ;	unspecified, using default values
   408  200007                     	org	2097159
   409  200007  FF                 	db	255
   410                           
   411                           	psect	config
   412                           
   413                           ; Padding undefined space
   414  300000                     	org	3145728
   415  300000  FF                 	db	255
   416                           
   417                           ;Config register CONFIG1H @ 0x300001
   418                           ;	Oscillator Selection bits
   419                           ;	FOSC = INTIO67, Internal oscillator block
   420                           ;	4X PLL Enable
   421                           ;	PLLCFG = OFF, Oscillator used directly
   422                           ;	Primary clock enable bit
   423                           ;	PRICLKEN = ON, Primary clock enabled
   424                           ;	Fail-Safe Clock Monitor Enable bit
   425                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   426                           ;	Internal/External Oscillator Switchover bit
   427                           ;	IESO = OFF, Oscillator Switchover mode disabled
   428  300001                     	org	3145729
   429  300001  28                 	db	40
   430                           
   431                           ;Config register CONFIG2L @ 0x300002
   432                           ;	Power-up Timer Enable bit
   433                           ;	PWRTEN = OFF, Power up timer disabled
   434                           ;	Brown-out Reset Enable bits
   435                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   436                           ;	Brown Out Reset Voltage bits
   437                           ;	BORV = 190, VBOR set to 1.90 V nominal
   438  300002                     	org	3145730
   439  300002  1F                 	db	31
   440                           
   441                           ;Config register CONFIG2H @ 0x300003
   442                           ;	Watchdog Timer Enable bits
   443                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   444                           ;	Watchdog Timer Postscale Select bits
   445                           ;	WDTPS = 32768, 1:32768
   446  300003                     	org	3145731
   447  300003  3C                 	db	60
   448                           
   449                           ; Padding undefined space
   450  300004                     	org	3145732
   451  300004  FF                 	db	255
   452                           
   453                           ;Config register CONFIG3H @ 0x300005
   454                           ;	CCP2 MUX bit
   455                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
   456                           ;	PORTB A/D Enable bit
   457                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   458                           ;	P3A/CCP3 Mux bit
   459                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   460                           ;	HFINTOSC Fast Start-up
   461                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   462                           ;	Timer3 Clock input mux bit
   463                           ;	T3CMX = PORTC0, T3CKI is on RC0
   464                           ;	ECCP2 B output mux bit
   465                           ;	P2BMX = PORTB5, P2B is on RB5
   466                           ;	MCLR Pin Enable bit
   467                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   468  300005                     	org	3145733
   469  300005  BF                 	db	191
   470                           
   471                           ;Config register CONFIG4L @ 0x300006
   472                           ;	Stack Full/Underflow Reset Enable bit
   473                           ;	STVREN = ON, Stack full/underflow will cause Reset
   474                           ;	Single-Supply ICSP Enable bit
   475                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   476                           ;	Extended Instruction Set Enable bit
   477                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   478                           ;	Background Debug
   479                           ;	DEBUG = OFF, Disabled
   480  300006                     	org	3145734
   481  300006  85                 	db	133
   482                           
   483                           ; Padding undefined space
   484  300007                     	org	3145735
   485  300007  FF                 	db	255
   486                           
   487                           ;Config register CONFIG5L @ 0x300008
   488                           ;	Code Protection Block 0
   489                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   490                           ;	Code Protection Block 1
   491                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   492                           ;	Code Protection Block 2
   493                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   494                           ;	Code Protection Block 3
   495                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   496  300008                     	org	3145736
   497  300008  0F                 	db	15
   498                           
   499                           ;Config register CONFIG5H @ 0x300009
   500                           ;	Boot Block Code Protection bit
   501                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   502                           ;	Data EEPROM Code Protection bit
   503                           ;	CPD = OFF, Data EEPROM not code-protected
   504  300009                     	org	3145737
   505  300009  C0                 	db	192
   506                           
   507                           ;Config register CONFIG6L @ 0x30000A
   508                           ;	Write Protection Block 0
   509                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   510                           ;	Write Protection Block 1
   511                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   512                           ;	Write Protection Block 2
   513                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   514                           ;	Write Protection Block 3
   515                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   516  30000A                     	org	3145738
   517  30000A  0F                 	db	15
   518                           
   519                           ;Config register CONFIG6H @ 0x30000B
   520                           ;	Configuration Register Write Protection bit
   521                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   522                           ;	Boot Block Write Protection bit
   523                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   524                           ;	Data EEPROM Write Protection bit
   525                           ;	WRTD = OFF, Data EEPROM not write-protected
   526  30000B                     	org	3145739
   527  30000B  E0                 	db	224
   528                           
   529                           ;Config register CONFIG7L @ 0x30000C
   530                           ;	Table Read Protection Block 0
   531                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   532                           ;	Table Read Protection Block 1
   533                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   534                           ;	Table Read Protection Block 2
   535                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   536                           ;	Table Read Protection Block 3
   537                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   538  30000C                     	org	3145740
   539  30000C  0F                 	db	15
   540                           
   541                           ;Config register CONFIG7H @ 0x30000D
   542                           ;	Boot Block Table Read Protection bit
   543                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   544  30000D                     	org	3145741
   545  30000D  40                 	db	64
   546                           tosu	equ	0xFFF
   547                           tosh	equ	0xFFE
   548                           tosl	equ	0xFFD
   549                           stkptr	equ	0xFFC
   550                           pclatu	equ	0xFFB
   551                           pclath	equ	0xFFA
   552                           pcl	equ	0xFF9
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           prodh	equ	0xFF4
   558                           prodl	equ	0xFF3
   559                           indf0	equ	0xFEF
   560                           postinc0	equ	0xFEE
   561                           postdec0	equ	0xFED
   562                           preinc0	equ	0xFEC
   563                           plusw0	equ	0xFEB
   564                           fsr0h	equ	0xFEA
   565                           fsr0l	equ	0xFE9
   566                           wreg	equ	0xFE8
   567                           indf1	equ	0xFE7
   568                           postinc1	equ	0xFE6
   569                           postdec1	equ	0xFE5
   570                           preinc1	equ	0xFE4
   571                           plusw1	equ	0xFE3
   572                           fsr1h	equ	0xFE2
   573                           fsr1l	equ	0xFE1
   574                           bsr	equ	0xFE0
   575                           indf2	equ	0xFDF
   576                           postinc2	equ	0xFDE
   577                           postdec2	equ	0xFDD
   578                           preinc2	equ	0xFDC
   579                           plusw2	equ	0xFDB
   580                           fsr2h	equ	0xFDA
   581                           fsr2l	equ	0xFD9
   582                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 15:24:39 2021

                             l21 FF82                               l15 FF66  
                             l18 FF74                               l48 FFAC  
                             u10 FF82                               u11 FF7E  
                             u20 FFC0                               u21 FFBC  
                             u30 FFD0                               u31 FFCA  
                             u36 FFD2                               u57 FFEA  
                            l751 FF84                              l753 FF94  
                            l761 FF5E                              l755 FF96  
                            l771 FFE0                              l757 FFAA  
                            l765 FFAE                              l759 FF68  
                            l767 FFB2                              l769 FFC0  
                            wreg 000FE8                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _WPUB 000F61                             _main FFAE  
                           start 0000                     ___param_bank 000000  
 __size_of_OSCILLATOR_Initialize 001C    __end_of_OSCILLATOR_Initialize FF84  
                          ?_main 0001                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                __initialization FF58                     __end_of_main 0000  
                         ??_main 0001                    __activetblptr 000000  
                         _ANSELA 000F38                           _ANSELB 000F39  
                         _ANSELC 000F3A                           _OSCCON 000FD3  
                         _PLLRDY 007E97                           isa$std 000001  
              _SYSTEM_Initialize FF5E                       __accesstop 0060  
        __end_of__initialization FF58               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
            ??_SYSTEM_Initialize 0001        __end_of_SYSTEM_Initialize FF68  
                        _OSCCON2 000FD2                          _OSCTUNE 000F9B  
                        __Hparam 0000                          __Lparam 0000  
                        __pcinit FF58                          __ramtop 1000  
                        __ptext0 FFAE                          __ptext1 FF5E  
                        __ptext2 FF84                          __ptext3 FF68  
          _OSCILLATOR_Initialize FF68         ??_PIN_MANAGER_Initialize 0001  
     __size_of_SYSTEM_Initialize 000A             end_of_initialization FF58  
                      _PORTAbits 000F80           ?_OSCILLATOR_Initialize 0001  
            start_initialization FF58  __size_of_PIN_MANAGER_Initialize 002A  
         _PIN_MANAGER_Initialize FF84                         _LATAbits 000F89  
                    _INTCON2bits 000FF1                         __Hrparam 0000  
                       __Lrparam 0000          ??_OSCILLATOR_Initialize 0001  
                  __size_of_main 0052                         isa$xinst 000000  
                     _INTCONbits 000FF2          ?_PIN_MANAGER_Initialize 0001  
 __end_of_PIN_MANAGER_Initialize FFAE  
