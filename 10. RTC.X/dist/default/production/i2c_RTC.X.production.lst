

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Oct 06 19:53:34 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F26K22 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK0
   119  0033C6                     __pidataBANK0:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for _minutes
   123  0033C6  04                 	db	4
   124  0033C7  45                 	db	69
   125                           
   126                           ;initializer for _display_addr
   127  0033C8  3C                 	db	60
   128                           
   129                           ;initializer for _precission
   130  0033C9  01                 	db	1
   131                           
   132                           ;initializer for _second_line
   133  0033CA  00                 	db	0
   134  0033CB  C0                 	db	192
   135                           
   136                           ;initializer for _first_line
   137  0033CC  00                 	db	0
   138  0033CD  80                 	db	128
   139                           
   140                           ;initializer for _rtc_test
   141  0033CE  03                 	db	3
   142                           
   143                           	psect	idataBANK1
   144  002E32                     __pidataBANK1:
   145                           	opt callstack 0
   146                           
   147                           ;initializer for _Aring
   148  002E32  80                 	db	128
   149  002E33  78                 	db	120
   150  002E34  40                 	db	64
   151  002E35  0E                 	db	14
   152  002E36  0E                 	db	14
   153  002E37  11                 	db	17
   154  002E38  11                 	db	17
   155  002E39  1F                 	db	31
   156  002E3A  11                 	db	17
   157  002E3B  11                 	db	17
   158  002E3C  00                 	db	0
   159                           
   160                           ;initializer for _aring
   161  002E3D  80                 	db	128
   162  002E3E  70                 	db	112
   163  002E3F  40                 	db	64
   164  002E40  0E                 	db	14
   165  002E41  0A                 	db	10
   166  002E42  0E                 	db	14
   167  002E43  01                 	db	1
   168  002E44  0F                 	db	15
   169  002E45  11                 	db	17
   170  002E46  0F                 	db	15
   171  002E47  00                 	db	0
   172                           
   173                           ;initializer for _O_slash
   174  002E48  80                 	db	128
   175  002E49  68                 	db	104
   176  002E4A  40                 	db	64
   177  002E4B  0E                 	db	14
   178  002E4C  13                 	db	19
   179  002E4D  15                 	db	21
   180  002E4E  15                 	db	21
   181  002E4F  15                 	db	21
   182  002E50  19                 	db	25
   183  002E51  0E                 	db	14
   184  002E52  00                 	db	0
   185                           
   186                           ;initializer for _oslash
   187  002E53  80                 	db	128
   188  002E54  60                 	db	96
   189  002E55  40                 	db	64
   190  002E56  00                 	db	0
   191  002E57  00                 	db	0
   192  002E58  0E                 	db	14
   193  002E59  13                 	db	19
   194  002E5A  15                 	db	21
   195  002E5B  19                 	db	25
   196  002E5C  0E                 	db	14
   197  002E5D  00                 	db	0
   198                           
   199                           ;initializer for _AElig
   200  002E5E  80                 	db	128
   201  002E5F  58                 	db	88
   202  002E60  40                 	db	64
   203  002E61  0F                 	db	15
   204  002E62  14                 	db	20
   205  002E63  14                 	db	20
   206  002E64  1F                 	db	31
   207  002E65  14                 	db	20
   208  002E66  14                 	db	20
   209  002E67  17                 	db	23
   210  002E68  00                 	db	0
   211                           
   212                           ;initializer for _aelig
   213  002E69  80                 	db	128
   214  002E6A  50                 	db	80
   215  002E6B  40                 	db	64
   216  002E6C  00                 	db	0
   217  002E6D  00                 	db	0
   218  002E6E  0E                 	db	14
   219  002E6F  05                 	db	5
   220  002E70  0F                 	db	15
   221  002E71  14                 	db	20
   222  002E72  0F                 	db	15
   223  002E73  00                 	db	0
   224                           
   225                           ;initializer for _custom_char0
   226  002E74  80                 	db	128
   227  002E75  40                 	db	64
   228  002E76  40                 	db	64
   229  002E77  0C                 	db	12
   230  002E78  12                 	db	18
   231  002E79  12                 	db	18
   232  002E7A  0C                 	db	12
   233  002E7B  00                 	db	0
   234  002E7C  00                 	db	0
   235  002E7D  00                 	db	0
   236  002E7E  00                 	db	0
   237                           
   238                           ;initializer for stoa@F1166
   239  002E7F  28                 	db	40
   240  002E80  6E                 	db	110
   241  002E81  75                 	db	117
   242  002E82  6C                 	db	108
   243  002E83  6C                 	db	108
   244  002E84  29                 	db	41
   245  002E85  00                 	db	0
   246                           
   247                           ;initializer for _hello_string
   248  002E86  40                 	db	64
   249  002E87  48                 	db	72
   250  002E88  65                 	db	101
   251  002E89  6C                 	db	108
   252  002E8A  6C                 	db	108
   253  002E8B  6F                 	db	111
   254  002E8C  20                 	db	32
   255  002E8D  57                 	db	87
   256  002E8E  6F                 	db	111
   257  002E8F  72                 	db	114
   258  002E90  6C                 	db	108
   259  002E91  64                 	db	100
   260  002E92  21                 	db	33
   261  002E93  00                 	db	0
   262                           
   263                           ;initializer for _display_init
   264  002E94  00                 	db	0
   265  002E95  38                 	db	56
   266  002E96  0C                 	db	12
   267  002E97  06                 	db	6
   268                           
   269                           	psect	mediumconst
   270  00FDC6                     __pmediumconst:
   271                           	opt callstack 0
   272  00FDC6  00                 	db	0
   273  00FDC7                     _humid_string:
   274                           	opt callstack 0
   275  00FDC7  40                 	db	64
   276  00FDC8  48                 	db	72
   277  00FDC9  75                 	db	117
   278  00FDCA  6D                 	db	109
   279  00FDCB  69                 	db	105
   280  00FDCC  64                 	db	100
   281  00FDCD  3A                 	db	58
   282  00FDCE  20                 	db	32
   283  00FDCF  20                 	db	32
   284  00FDD0  20                 	db	32
   285  00FDD1  20                 	db	32
   286  00FDD2  25                 	db	37
   287  00FDD3  20                 	db	32
   288  00FDD4  20                 	db	32
   289  00FDD5  20                 	db	32
   290  00FDD6  20                 	db	32
   291  00FDD7  20                 	db	32
   292  00FDD8  00                 	db	0
   293  00FDD9                     __end_of_humid_string:
   294                           	opt callstack 0
   295  00FDD9                     _temp_string:
   296                           	opt callstack 0
   297  00FDD9  40                 	db	64
   298  00FDDA  54                 	db	84
   299  00FDDB  6D                 	db	109
   300  00FDDC  70                 	db	112
   301  00FDDD  3A                 	db	58
   302  00FDDE  78                 	db	120
   303  00FDDF  78                 	db	120
   304  00FDE0  2C                 	db	44
   305  00FDE1  78                 	db	120
   306  00FDE2  6F                 	db	111
   307  00FDE3  20                 	db	32
   308  00FDE4  20                 	db	32
   309  00FDE5  20                 	db	32
   310  00FDE6  20                 	db	32
   311  00FDE7  20                 	db	32
   312  00FDE8  20                 	db	32
   313  00FDE9  20                 	db	32
   314  00FDEA  00                 	db	0
   315  00FDEB                     __end_of_temp_string:
   316                           	opt callstack 0
   317  00FDEB                     _rtc_time_string:
   318                           	opt callstack 0
   319  00FDEB  00                 	db	0
   320  00FDEC  42                 	db	66
   321  00FDED                     __end_of_rtc_time_string:
   322                           	opt callstack 0
   323  00FDED                     _rtc_reset_string:
   324                           	opt callstack 0
   325  00FDED  00                 	db	0
   326  00FDEE  58                 	db	88
   327  00FDEF                     __end_of_rtc_reset_string:
   328                           	opt callstack 0
   329  00FDEF                     _degree_sign:
   330                           	opt callstack 0
   331  00FDEF  40                 	db	64
   332  00FDF0  DF                 	db	223
   333  00FDF1                     __end_of_degree_sign:
   334                           	opt callstack 0
   335  00FDF1                     _degree_pos:
   336                           	opt callstack 0
   337  00FDF1  00                 	db	0
   338  00FDF2  8A                 	db	138
   339  00FDF3                     __end_of_degree_pos:
   340                           	opt callstack 0
   341  00FDF3  68                 	db	104
   342  00FDF4                     __end_of_rtc_addr:
   343                           	opt callstack 0
   344  00FDF4  40                 	db	64
   345  00FDF5                     __end_of_adafruit_temp_addr:
   346                           	opt callstack 0
   347  00FDF5                     rtc_first_run@rtc_clock_set:
   348                           	opt callstack 0
   349  00FDF5  00                 	db	0
   350  00FDF6  00                 	db	0
   351  00FDF7  00                 	db	0
   352  00FDF8  E0                 	db	224
   353  00FDF9  56                 	db	86
   354  00FDFA  34                 	db	52
   355  00FDFB  12                 	db	18
   356  00FDFC  05                 	db	5
   357  00FDFD  01                 	db	1
   358  00FDFE  10                 	db	16
   359  00FDFF  20                 	db	32
   360  00FE00                     __end_ofrtc_first_run@rtc_clock_set:
   361                           	opt callstack 0
   362  00FE00                     _minus:
   363                           	opt callstack 0
   364  00FE00  40                 	db	64
   365  00FE01  2D                 	db	45
   366  00FE02                     __end_of_minus:
   367                           	opt callstack 0
   368  00FE02                     _humid_pos:
   369                           	opt callstack 0
   370  00FE02  00                 	db	0
   371  00FE03  C6                 	db	198
   372  00FE04                     __end_of_humid_pos:
   373                           	opt callstack 0
   374  00FE04                     _temp_pos:
   375                           	opt callstack 0
   376  00FE04  00                 	db	0
   377  00FE05  84                 	db	132
   378  00FE06                     __end_of_temp_pos:
   379                           	opt callstack 0
   380  00FE06                     _adafruit_temp_command:
   381                           	opt callstack 0
   382  00FE06  E3                 	db	227
   383  00FE07                     __end_of_adafruit_temp_command:
   384                           	opt callstack 0
   385  00FE07                     _adafruit_humid_command:
   386                           	opt callstack 0
   387  00FE07  E5                 	db	229
   388  00FE08                     __end_of_adafruit_humid_command:
   389                           	opt callstack 0
   390  0000                     _ANSELCbits	set	3898
   391  0000                     _ANSELA	set	3896
   392  0000                     _ANSELB	set	3897
   393  0000                     _ANSELC	set	3898
   394  0000                     _SSP2CON2bits	set	3947
   395  0000                     _SSP1STATbits	set	4039
   396  0000                     _SSP1BUF	set	4041
   397  0000                     _SSP1CON2bits	set	4037
   398  0000                     _SSP1STAT	set	4039
   399  0000                     _SSP1CON2	set	4037
   400  0000                     _SSP1CON1	set	4038
   401  0000                     _SSP1ADD	set	4040
   402  0000                     _TRISCbits	set	3988
   403  0000                     _PIR1bits	set	3998
   404  0000                     _RCONbits	set	4048
   405  0000                     _RCREG1	set	4014
   406  0000                     _RCSTA1bits	set	4011
   407  0000                     _TXREG1	set	4013
   408  0000                     _TXSTA1bits	set	4012
   409  0000                     _SPBRGH1	set	4016
   410  0000                     _SPBRG1	set	4015
   411  0000                     _TXSTA1	set	4012
   412  0000                     _RCSTA1	set	4011
   413  0000                     _BAUDCON1	set	4024
   414  0000                     _PIE1bits	set	3997
   415  0000                     _INTCONbits	set	4082
   416  0000                     _INTCON2bits	set	4081
   417  0000                     _WPUB	set	3937
   418  0000                     _TRISC	set	3988
   419  0000                     _TRISB	set	3987
   420  0000                     _TRISA	set	3986
   421  0000                     _LATC	set	3979
   422  0000                     _LATB	set	3978
   423  0000                     _LATA	set	3977
   424  0000                     _OSCTUNE	set	3995
   425  0000                     _OSCCON2	set	4050
   426  0000                     _OSCCON	set	4051
   427  0000                     _PLLRDY	set	32407
   428  00FE08                     
   429                           ; BSR set to: 0
   430  00FE08  2F                 	db	47
   431  00FE09  6E                 	db	110	;'n'
   432  00FE0A  2F                 	db	47
   433  00FE0B  72                 	db	114	;'r'
   434  00FE0C  2A                 	db	42
   435  00FE0D  2A                 	db	42
   436  00FE0E  2A                 	db	42
   437  00FE0F  2A                 	db	42
   438  00FE10  2A                 	db	42
   439  00FE11  2A                 	db	42
   440  00FE12  2A                 	db	42
   441  00FE13  2A                 	db	42
   442  00FE14  2A                 	db	42
   443  00FE15  2A                 	db	42
   444  00FE16  2A                 	db	42
   445  00FE17  52                 	db	82	;'R'
   446  00FE18  45                 	db	69	;'E'
   447  00FE19  41                 	db	65	;'A'
   448  00FE1A  44                 	db	68	;'D'
   449  00FE1B  2A                 	db	42
   450  00FE1C  2A                 	db	42
   451  00FE1D  2A                 	db	42
   452  00FE1E  2A                 	db	42
   453  00FE1F  2A                 	db	42
   454  00FE20  2A                 	db	42
   455  00FE21  2A                 	db	42
   456  00FE22  2A                 	db	42
   457  00FE23  2A                 	db	42
   458  00FE24  2A                 	db	42
   459  00FE25  2A                 	db	42
   460  00FE26  2A                 	db	42
   461  00FE27  2A                 	db	42
   462  00FE28  2A                 	db	42
   463  00FE29  2A                 	db	42
   464  00FE2A  2A                 	db	42
   465  00FE2B  2A                 	db	42
   466  00FE2C  0A                 	db	10
   467  00FE2D  0D                 	db	13
   468  00FE2E  00                 	db	0
   469  00FE2F                     
   470                           ; BSR set to: 0
   471  00FE2F  25                 	db	37
   472  00FE30  73                 	db	115	;'s'
   473  00FE31  20                 	db	32
   474  00FE32  64                 	db	100	;'d'
   475  00FE33  2E                 	db	46
   476  00FE34  20                 	db	32
   477  00FE35  25                 	db	37
   478  00FE36  30                 	db	48	;'0'
   479  00FE37  32                 	db	50	;'2'
   480  00FE38  58                 	db	88	;'X'
   481  00FE39  2E                 	db	46
   482  00FE3A  20                 	db	32
   483  00FE3B  25                 	db	37
   484  00FE3C  73                 	db	115	;'s'
   485  00FE3D  20                 	db	32
   486  00FE3E  32                 	db	50	;'2'
   487  00FE3F  30                 	db	48	;'0'
   488  00FE40  25                 	db	37
   489  00FE41  30                 	db	48	;'0'
   490  00FE42  32                 	db	50	;'2'
   491  00FE43  58                 	db	88	;'X'
   492  00FE44  20                 	db	32
   493  00FE45  6B                 	db	107	;'k'
   494  00FE46  6C                 	db	108	;'l'
   495  00FE47  2E                 	db	46
   496  00FE48  20                 	db	32
   497  00FE49  25                 	db	37
   498  00FE4A  30                 	db	48	;'0'
   499  00FE4B  32                 	db	50	;'2'
   500  00FE4C  58                 	db	88	;'X'
   501  00FE4D  3A                 	db	58	;':'
   502  00FE4E  25                 	db	37
   503  00FE4F  30                 	db	48	;'0'
   504  00FE50  32                 	db	50	;'2'
   505  00FE51  58                 	db	88	;'X'
   506  00FE52  0D                 	db	13
   507  00FE53  0A                 	db	10
   508  00FE54  00                 	db	0
   509  00FE55                     
   510                           ; BSR set to: 0
   511  00FE55  53                 	db	83	;'S'
   512  00FE56  6B                 	db	107	;'k'
   513  00FE57  72                 	db	114	;'r'
   514  00FE58  69                 	db	105	;'i'
   515  00FE59  76                 	db	118	;'v'
   516  00FE5A  65                 	db	101	;'e'
   517  00FE5B  72                 	db	114	;'r'
   518  00FE5C  20                 	db	32
   519  00FE5D  74                 	db	116	;'t'
   520  00FE5E  69                 	db	105	;'i'
   521  00FE5F  6C                 	db	108	;'l'
   522  00FE60  20                 	db	32
   523  00FE61  61                 	db	97	;'a'
   524  00FE62  64                 	db	100	;'d'
   525  00FE63  72                 	db	114	;'r'
   526  00FE64  65                 	db	101	;'e'
   527  00FE65  73                 	db	115	;'s'
   528  00FE66  73                 	db	115	;'s'
   529  00FE67  65                 	db	101	;'e'
   530  00FE68  3A                 	db	58	;':'
   531  00FE69  20                 	db	32
   532  00FE6A  25                 	db	37
   533  00FE6B  30                 	db	48	;'0'
   534  00FE6C  32                 	db	50	;'2'
   535  00FE6D  58                 	db	88	;'X'
   536  00FE6E  20                 	db	32
   537  00FE6F  2D                 	db	45
   538  00FE70  20                 	db	32
   539  00FE71  25                 	db	37
   540  00FE72  64                 	db	100	;'d'
   541  00FE73  0A                 	db	10
   542  00FE74  0D                 	db	13
   543  00FE75  00                 	db	0
   544  00FE76                     
   545                           ; BSR set to: 0
   546  00FE76  53                 	db	83	;'S'
   547  00FE77  6B                 	db	107	;'k'
   548  00FE78  72                 	db	114	;'r'
   549  00FE79  69                 	db	105	;'i'
   550  00FE7A  76                 	db	118	;'v'
   551  00FE7B  65                 	db	101	;'e'
   552  00FE7C  72                 	db	114	;'r'
   553  00FE7D  20                 	db	32
   554  00FE7E  64                 	db	100	;'d'
   555  00FE7F  61                 	db	97	;'a'
   556  00FE80  74                 	db	116	;'t'
   557  00FE81  61                 	db	97	;'a'
   558  00FE82  3A                 	db	58	;':'
   559  00FE83  20                 	db	32
   560  00FE84  25                 	db	37
   561  00FE85  30                 	db	48	;'0'
   562  00FE86  32                 	db	50	;'2'
   563  00FE87  78                 	db	120	;'x'
   564  00FE88  20                 	db	32
   565  00FE89  2D                 	db	45
   566  00FE8A  20                 	db	32
   567  00FE8B  25                 	db	37
   568  00FE8C  64                 	db	100	;'d'
   569  00FE8D  20                 	db	32
   570  00FE8E  2D                 	db	45
   571  00FE8F  20                 	db	32
   572  00FE90  25                 	db	37
   573  00FE91  63                 	db	99	;'c'
   574  00FE92  0A                 	db	10
   575  00FE93  0D                 	db	13
   576  00FE94  00                 	db	0
   577  00FE95                     
   578                           ; BSR set to: 0
   579  00FE95  46                 	db	70	;'F'
   580  00FE96  65                 	db	101	;'e'
   581  00FE97  6A                 	db	106	;'j'
   582  00FE98  6C                 	db	108	;'l'
   583  00FE99  20                 	db	32
   584  00FE9A  69                 	db	105	;'i'
   585  00FE9B  20                 	db	32
   586  00FE9C  6C                 	db	108	;'l'
   587  00FE9D  61                 	db	97	;'a'
   588  00FE9E  65                 	db	101	;'e'
   589  00FE9F  73                 	db	115	;'s'
   590  00FEA0  6E                 	db	110	;'n'
   591  00FEA1  69                 	db	105	;'i'
   592  00FEA2  6E                 	db	110	;'n'
   593  00FEA3  67                 	db	103	;'g'
   594  00FEA4  20                 	db	32
   595  00FEA5  61                 	db	97	;'a'
   596  00FEA6  66                 	db	102	;'f'
   597  00FEA7  20                 	db	32
   598  00FEA8  64                 	db	100	;'d'
   599  00FEA9  61                 	db	97	;'a'
   600  00FEAA  74                 	db	116	;'t'
   601  00FEAB  61                 	db	97	;'a'
   602  00FEAC  0D                 	db	13
   603  00FEAD  0A                 	db	10
   604  00FEAE  00                 	db	0
   605  00FEAF                     
   606                           ; BSR set to: 0
   607  00FEAF  53                 	db	83	;'S'
   608  00FEB0  6B                 	db	107	;'k'
   609  00FEB1  72                 	db	114	;'r'
   610  00FEB2  69                 	db	105	;'i'
   611  00FEB3  76                 	db	118	;'v'
   612  00FEB4  65                 	db	101	;'e'
   613  00FEB5  72                 	db	114	;'r'
   614  00FEB6  3A                 	db	58	;':'
   615  00FEB7  20                 	db	32
   616  00FEB8  61                 	db	97	;'a'
   617  00FEB9  64                 	db	100	;'d'
   618  00FEBA  72                 	db	114	;'r'
   619  00FEBB  65                 	db	101	;'e'
   620  00FEBC  73                 	db	115	;'s'
   621  00FEBD  73                 	db	115	;'s'
   622  00FEBE  65                 	db	101	;'e'
   623  00FEBF  3A                 	db	58	;':'
   624  00FEC0  20                 	db	32
   625  00FEC1  25                 	db	37
   626  00FEC2  64                 	db	100	;'d'
   627  00FEC3  0A                 	db	10
   628  00FEC4  0D                 	db	13
   629  00FEC5  00                 	db	0
   630  00FEC6                     STR_2:
   631                           
   632                           ; BSR set to: 0
   633  00FEC6  48                 	db	72	;'H'
   634  00FEC7  61                 	db	97	;'a'
   635  00FEC8  72                 	db	114	;'r'
   636  00FEC9  20                 	db	32
   637  00FECA  73                 	db	115	;'s'
   638  00FECB  65                 	db	101	;'e'
   639  00FECC  6E                 	db	110	;'n'
   640  00FECD  64                 	db	100	;'d'
   641  00FECE  74                 	db	116	;'t'
   642  00FECF  20                 	db	32
   643  00FED0  73                 	db	115	;'s'
   644  00FED1  74                 	db	116	;'t'
   645  00FED2  61                 	db	97	;'a'
   646  00FED3  72                 	db	114	;'r'
   647  00FED4  74                 	db	116	;'t'
   648  00FED5  0A                 	db	10
   649  00FED6  0D                 	db	13
   650  00FED7  00                 	db	0
   651  00FED8                     STR_6:
   652                           
   653                           ; BSR set to: 0
   654  00FED8  48                 	db	72	;'H'
   655  00FED9  61                 	db	97	;'a'
   656  00FEDA  72                 	db	114	;'r'
   657  00FEDB  20                 	db	32
   658  00FEDC  73                 	db	115	;'s'
   659  00FEDD  65                 	db	101	;'e'
   660  00FEDE  6E                 	db	110	;'n'
   661  00FEDF  64                 	db	100	;'d'
   662  00FEE0  74                 	db	116	;'t'
   663  00FEE1  20                 	db	32
   664  00FEE2  73                 	db	115	;'s'
   665  00FEE3  74                 	db	116	;'t'
   666  00FEE4  6F                 	db	111	;'o'
   667  00FEE5  70                 	db	112	;'p'
   668  00FEE6  0A                 	db	10
   669  00FEE7  0D                 	db	13
   670  00FEE8  00                 	db	0
   671  00FEE9                     STR_1:
   672                           
   673                           ; BSR set to: 0
   674  00FEE9  42                 	db	66	;'B'
   675  00FEEA  75                 	db	117	;'u'
   676  00FEEB  73                 	db	115	;'s'
   677  00FEEC  73                 	db	115	;'s'
   678  00FEED  65                 	db	101	;'e'
   679  00FEEE  6E                 	db	110	;'n'
   680  00FEEF  65                 	db	101	;'e'
   681  00FEF0  72                 	db	114	;'r'
   682  00FEF1  20                 	db	32
   683  00FEF2  6B                 	db	107	;'k'
   684  00FEF3  6C                 	db	108	;'l'
   685  00FEF4  61                 	db	97	;'a'
   686  00FEF5  72                 	db	114	;'r'
   687  00FEF6  0A                 	db	10
   688  00FEF7  0D                 	db	13
   689  00FEF8  00                 	db	0
   690  00FEF9                     
   691                           ; BSR set to: 0
   692  00FEF9  53                 	db	83	;'S'
   693  00FEFA  65                 	db	101	;'e'
   694  00FEFB  6E                 	db	110	;'n'
   695  00FEFC  64                 	db	100	;'d'
   696  00FEFD  74                 	db	116	;'t'
   697  00FEFE  65                 	db	101	;'e'
   698  00FEFF  3A                 	db	58	;':'
   699  00FF00  20                 	db	32
   700  00FF01  4E                 	db	78	;'N'
   701  00FF02  41                 	db	65	;'A'
   702  00FF03  43                 	db	67	;'C'
   703  00FF04  4B                 	db	75	;'K'
   704  00FF05  0A                 	db	10
   705  00FF06  0D                 	db	13
   706  00FF07  00                 	db	0
   707  00FF08                     
   708                           ; BSR set to: 0
   709  00FF08  40                 	db	64	;'@'
   710  00FF09  48                 	db	72	;'H'
   711  00FF0A  75                 	db	117	;'u'
   712  00FF0B  6D                 	db	109	;'m'
   713  00FF0C  69                 	db	105	;'i'
   714  00FF0D  64                 	db	100	;'d'
   715  00FF0E  3A                 	db	58	;':'
   716  00FF0F  20                 	db	32
   717  00FF10  25                 	db	37
   718  00FF11  2E                 	db	46
   719  00FF12  31                 	db	49	;'1'
   720  00FF13  66                 	db	102	;'f'
   721  00FF14  25                 	db	37
   722  00FF15  25                 	db	37
   723  00FF16  00                 	db	0
   724  00FF17                     
   725                           ; BSR set to: 0
   726  00FF17  40                 	db	64	;'@'
   727  00FF18  40                 	db	64	;'@'
   728  00FF19  54                 	db	84	;'T'
   729  00FF1A  6D                 	db	109	;'m'
   730  00FF1B  70                 	db	112	;'p'
   731  00FF1C  3A                 	db	58	;':'
   732  00FF1D  20                 	db	32
   733  00FF1E  25                 	db	37
   734  00FF1F  2E                 	db	46
   735  00FF20  31                 	db	49	;'1'
   736  00FF21  66                 	db	102	;'f'
   737  00FF22  43                 	db	67	;'C'
   738  00FF23  00                 	db	0
   739  00FF24  00                 	db	0
   740  00FF25                     
   741                           ; BSR set to: 0
   742  00FF25  53                 	db	83	;'S'
   743  00FF26  65                 	db	101	;'e'
   744  00FF27  6E                 	db	110	;'n'
   745  00FF28  64                 	db	100	;'d'
   746  00FF29  74                 	db	116	;'t'
   747  00FF2A  65                 	db	101	;'e'
   748  00FF2B  3A                 	db	58	;':'
   749  00FF2C  20                 	db	32
   750  00FF2D  41                 	db	65	;'A'
   751  00FF2E  43                 	db	67	;'C'
   752  00FF2F  4B                 	db	75	;'K'
   753  00FF30  0A                 	db	10
   754  00FF31  0D                 	db	13
   755  00FF32  00                 	db	0
   756  00FF33                     
   757                           ; BSR set to: 0
   758  00FF33  4C                 	db	76	;'L'
   759  00FF34  61                 	db	97	;'a'
   760  00FF35  65                 	db	101	;'e'
   761  00FF36  73                 	db	115	;'s'
   762  00FF37  74                 	db	116	;'t'
   763  00FF38  65                 	db	101	;'e'
   764  00FF39  3A                 	db	58	;':'
   765  00FF3A  20                 	db	32
   766  00FF3B  25                 	db	37
   767  00FF3C  64                 	db	100	;'d'
   768  00FF3D  0A                 	db	10
   769  00FF3E  0D                 	db	13
   770  00FF3F  00                 	db	0
   771  00FF40                     
   772                           ; BSR set to: 0
   773  00FF40  53                 	db	83	;'S'
   774  00FF41  65                 	db	101	;'e'
   775  00FF42  70                 	db	112	;'p'
   776  00FF43  74                 	db	116	;'t'
   777  00FF44  65                 	db	101	;'e'
   778  00FF45  6D                 	db	109	;'m'
   779  00FF46  62                 	db	98	;'b'
   780  00FF47  65                 	db	101	;'e'
   781  00FF48  72                 	db	114	;'r'
   782  00FF49  00                 	db	0
   783  00FF4A  00                 	db	0
   784  00FF4B                     
   785                           ; BSR set to: 0
   786  00FF4B  44                 	db	68	;'D'
   787  00FF4C  65                 	db	101	;'e'
   788  00FF4D  63                 	db	99	;'c'
   789  00FF4E  65                 	db	101	;'e'
   790  00FF4F  6D                 	db	109	;'m'
   791  00FF50  62                 	db	98	;'b'
   792  00FF51  65                 	db	101	;'e'
   793  00FF52  72                 	db	114	;'r'
   794  00FF53  00                 	db	0
   795  00FF54  00                 	db	0
   796  00FF55                     
   797                           ; BSR set to: 0
   798  00FF55  4E                 	db	78	;'N'
   799  00FF56  6F                 	db	111	;'o'
   800  00FF57  76                 	db	118	;'v'
   801  00FF58  65                 	db	101	;'e'
   802  00FF59  6D                 	db	109	;'m'
   803  00FF5A  62                 	db	98	;'b'
   804  00FF5B  65                 	db	101	;'e'
   805  00FF5C  72                 	db	114	;'r'
   806  00FF5D  00                 	db	0
   807  00FF5E  00                 	db	0
   808  00FF5F                     
   809                           ; BSR set to: 0
   810  00FF5F  53                 	db	83	;'S'
   811  00FF60  6F                 	db	111	;'o'
   812  00FF61  65                 	db	101	;'e'
   813  00FF62  6E                 	db	110	;'n'
   814  00FF63  64                 	db	100	;'d'
   815  00FF64  61                 	db	97	;'a'
   816  00FF65  67                 	db	103	;'g'
   817  00FF66  00                 	db	0
   818  00FF67  00                 	db	0
   819  00FF68                     
   820                           ; BSR set to: 0
   821  00FF68  4C                 	db	76	;'L'
   822  00FF69  6F                 	db	111	;'o'
   823  00FF6A  65                 	db	101	;'e'
   824  00FF6B  72                 	db	114	;'r'
   825  00FF6C  64                 	db	100	;'d'
   826  00FF6D  61                 	db	97	;'a'
   827  00FF6E  67                 	db	103	;'g'
   828  00FF6F  00                 	db	0
   829  00FF70  00                 	db	0
   830  00FF71                     
   831                           ; BSR set to: 0
   832  00FF71  54                 	db	84	;'T'
   833  00FF72  69                 	db	105	;'i'
   834  00FF73  72                 	db	114	;'r'
   835  00FF74  73                 	db	115	;'s'
   836  00FF75  64                 	db	100	;'d'
   837  00FF76  61                 	db	97	;'a'
   838  00FF77  67                 	db	103	;'g'
   839  00FF78  00                 	db	0
   840  00FF79  00                 	db	0
   841  00FF7A                     
   842                           ; BSR set to: 0
   843  00FF7A  54                 	db	84	;'T'
   844  00FF7B  6F                 	db	111	;'o'
   845  00FF7C  72                 	db	114	;'r'
   846  00FF7D  73                 	db	115	;'s'
   847  00FF7E  64                 	db	100	;'d'
   848  00FF7F  61                 	db	97	;'a'
   849  00FF80  67                 	db	103	;'g'
   850  00FF81  00                 	db	0
   851  00FF82  00                 	db	0
   852  00FF83                     
   853                           ; BSR set to: 0
   854  00FF83  46                 	db	70	;'F'
   855  00FF84  65                 	db	101	;'e'
   856  00FF85  62                 	db	98	;'b'
   857  00FF86  72                 	db	114	;'r'
   858  00FF87  75                 	db	117	;'u'
   859  00FF88  61                 	db	97	;'a'
   860  00FF89  72                 	db	114	;'r'
   861  00FF8A  00                 	db	0
   862  00FF8B  00                 	db	0
   863  00FF8C                     
   864                           ; BSR set to: 0
   865  00FF8C  4F                 	db	79	;'O'
   866  00FF8D  6B                 	db	107	;'k'
   867  00FF8E  74                 	db	116	;'t'
   868  00FF8F  6F                 	db	111	;'o'
   869  00FF90  62                 	db	98	;'b'
   870  00FF91  65                 	db	101	;'e'
   871  00FF92  72                 	db	114	;'r'
   872  00FF93  00                 	db	0
   873  00FF94  00                 	db	0
   874  00FF95                     
   875                           ; BSR set to: 0
   876  00FF95  46                 	db	70	;'F'
   877  00FF96  72                 	db	114	;'r'
   878  00FF97  65                 	db	101	;'e'
   879  00FF98  64                 	db	100	;'d'
   880  00FF99  61                 	db	97	;'a'
   881  00FF9A  67                 	db	103	;'g'
   882  00FF9B  00                 	db	0
   883  00FF9C  00                 	db	0
   884  00FF9D                     
   885                           ; BSR set to: 0
   886  00FF9D  4D                 	db	77	;'M'
   887  00FF9E  61                 	db	97	;'a'
   888  00FF9F  6E                 	db	110	;'n'
   889  00FFA0  64                 	db	100	;'d'
   890  00FFA1  61                 	db	97	;'a'
   891  00FFA2  67                 	db	103	;'g'
   892  00FFA3  00                 	db	0
   893  00FFA4  00                 	db	0
   894  00FFA5                     
   895                           ; BSR set to: 0
   896  00FFA5  4F                 	db	79	;'O'
   897  00FFA6  6E                 	db	110	;'n'
   898  00FFA7  73                 	db	115	;'s'
   899  00FFA8  64                 	db	100	;'d'
   900  00FFA9  61                 	db	97	;'a'
   901  00FFAA  67                 	db	103	;'g'
   902  00FFAB  00                 	db	0
   903  00FFAC  00                 	db	0
   904  00FFAD                     
   905                           ; BSR set to: 0
   906  00FFAD  4A                 	db	74	;'J'
   907  00FFAE  61                 	db	97	;'a'
   908  00FFAF  6E                 	db	110	;'n'
   909  00FFB0  75                 	db	117	;'u'
   910  00FFB1  61                 	db	97	;'a'
   911  00FFB2  72                 	db	114	;'r'
   912  00FFB3  00                 	db	0
   913  00FFB4  00                 	db	0
   914  00FFB5                     
   915                           ; BSR set to: 0
   916  00FFB5  41                 	db	65	;'A'
   917  00FFB6  75                 	db	117	;'u'
   918  00FFB7  67                 	db	103	;'g'
   919  00FFB8  75                 	db	117	;'u'
   920  00FFB9  73                 	db	115	;'s'
   921  00FFBA  74                 	db	116	;'t'
   922  00FFBB  00                 	db	0
   923  00FFBC  00                 	db	0
   924  00FFBD                     
   925                           ; BSR set to: 0
   926  00FFBD  41                 	db	65	;'A'
   927  00FFBE  70                 	db	112	;'p'
   928  00FFBF  72                 	db	114	;'r'
   929  00FFC0  69                 	db	105	;'i'
   930  00FFC1  6C                 	db	108	;'l'
   931  00FFC2  00                 	db	0
   932  00FFC3  00                 	db	0
   933  00FFC4                     
   934                           ; BSR set to: 0
   935  00FFC4  4D                 	db	77	;'M'
   936  00FFC5  61                 	db	97	;'a'
   937  00FFC6  72                 	db	114	;'r'
   938  00FFC7  74                 	db	116	;'t'
   939  00FFC8  73                 	db	115	;'s'
   940  00FFC9  00                 	db	0
   941  00FFCA  00                 	db	0
   942  00FFCB                     
   943                           ; BSR set to: 0
   944  00FFCB  4A                 	db	74	;'J'
   945  00FFCC  75                 	db	117	;'u'
   946  00FFCD  6C                 	db	108	;'l'
   947  00FFCE  69                 	db	105	;'i'
   948  00FFCF  00                 	db	0
   949  00FFD0  00                 	db	0
   950  00FFD1                     
   951                           ; BSR set to: 0
   952  00FFD1  4A                 	db	74	;'J'
   953  00FFD2  75                 	db	117	;'u'
   954  00FFD3  6E                 	db	110	;'n'
   955  00FFD4  69                 	db	105	;'i'
   956  00FFD5  00                 	db	0
   957  00FFD6  00                 	db	0
   958  00FFD7                     
   959                           ; BSR set to: 0
   960  00FFD7  4D                 	db	77	;'M'
   961  00FFD8  61                 	db	97	;'a'
   962  00FFD9  6A                 	db	106	;'j'
   963  00FFDA  00                 	db	0
   964  00FFDB  00                 	db	0
   965  00FFDC                     STR_16:
   966                           
   967                           ; BSR set to: 0
   968  00FFDC  25                 	db	37
   969  00FFDD  73                 	db	115	;'s'
   970  00FFDE  0D                 	db	13
   971  00FFDF  0A                 	db	10
   972  00FFE0  00                 	db	0
   973  00FFE1                     
   974                           ; BSR set to: 0
   975  00FFE1  25                 	db	37
   976  00FFE2  30                 	db	48	;'0'
   977  00FFE3  32                 	db	50	;'2'
   978  00FFE4  48                 	db	72	;'H'
   979  00FFE5  00                 	db	0
   980  00FFE6                     STR_61:
   981                           
   982                           ; BSR set to: 0
   983  00FFE6  49                 	db	73	;'I'
   984  00FFE7  4E                 	db	78	;'N'
   985  00FFE8  46                 	db	70	;'F'
   986  00FFE9  00                 	db	0
   987  00FFEA                     STR_65:
   988                           
   989                           ; BSR set to: 0
   990  00FFEA  4E                 	db	78	;'N'
   991  00FFEB  41                 	db	65	;'A'
   992  00FFEC  4E                 	db	78	;'N'
   993  00FFED  00                 	db	0
   994  00FFEE                     STR_62:
   995                           
   996                           ; BSR set to: 0
   997  00FFEE  69                 	db	105	;'i'
   998  00FFEF  6E                 	db	110	;'n'
   999  00FFF0  66                 	db	102	;'f'
  1000  00FFF1  00                 	db	0
  1001  00FFF2                     STR_66:
  1002                           
  1003                           ; BSR set to: 0
  1004  00FFF2  6E                 	db	110	;'n'
  1005  00FFF3  61                 	db	97	;'a'
  1006  00FFF4  6E                 	db	110	;'n'
  1007  00FFF5  00                 	db	0
  1008  00FFF6                     STR_69:
  1009                           
  1010                           ; BSR set to: 0
  1011  00FFF6  6C                 	db	108	;'l'
  1012  00FFF7  66                 	db	102	;'f'
  1013  00FFF8  00                 	db	0
  1014  00FFF9                     
  1015                           ; BSR set to: 0
  1016  00FFF9  3F                 	db	63	;'?'
  1017  00FFFA  00                 	db	0
  1018  00FFFB  00                 	db	0
  1019  00FFFC                     STR_21:
  1020                           
  1021                           ; BSR set to: 0
  1022  00FFFC  25                 	db	37
  1023  00FFFD  73                 	db	115	;'s'
  1024  00FFFE  00                 	db	0
  1025  0000                     
  1026                           ; #config settings
  1027  00FFFF  00                 	db	0	; dummy byte at the end
  1028  0000                     
  1029                           	psect	cinit
  1030  002CD6                     __pcinit:
  1031                           	opt callstack 0
  1032  002CD6                     start_initialization:
  1033                           	opt callstack 0
  1034  002CD6                     __initialization:
  1035                           	opt callstack 0
  1036                           
  1037                           ; Initialize objects allocated to BANK1 (102 bytes)
  1038                           ; load TBLPTR registers with __pidataBANK1
  1039  002CD6  0E32               	movlw	low __pidataBANK1
  1040  002CD8  6EF6               	movwf	tblptrl,c
  1041  002CDA  0E2E               	movlw	high __pidataBANK1
  1042  002CDC  6EF7               	movwf	tblptrh,c
  1043  002CDE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1044  002CE0  6EF8               	movwf	tblptru,c
  1045  002CE2  EE01  F099         	lfsr	0,__pdataBANK1
  1046  002CE6  EE10 F066          	lfsr	1,102
  1047  002CEA                     copy_data0:
  1048  002CEA  0009               	tblrd		*+
  1049  002CEC  CFF5 FFEE          	movff	tablat,postinc0
  1050  002CF0  50E5               	movf	postdec1,w,c
  1051  002CF2  50E1               	movf	fsr1l,w,c
  1052  002CF4  E1FA               	bnz	copy_data0
  1053                           
  1054                           ; Initialize objects allocated to BANK0 (9 bytes)
  1055                           ; load TBLPTR registers with __pidataBANK0
  1056  002CF6  0EC6               	movlw	low __pidataBANK0
  1057  002CF8  6EF6               	movwf	tblptrl,c
  1058  002CFA  0E33               	movlw	high __pidataBANK0
  1059  002CFC  6EF7               	movwf	tblptrh,c
  1060  002CFE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1061  002D00  6EF8               	movwf	tblptru,c
  1062  002D02  EE00  F0F7         	lfsr	0,__pdataBANK0
  1063  002D06  EE10 F009          	lfsr	1,9
  1064  002D0A                     copy_data1:
  1065  002D0A  0009               	tblrd		*+
  1066  002D0C  CFF5 FFEE          	movff	tablat,postinc0
  1067  002D10  50E5               	movf	postdec1,w,c
  1068  002D12  50E1               	movf	fsr1l,w,c
  1069  002D14  E1FA               	bnz	copy_data1
  1070                           
  1071                           ; Clear objects allocated to BANK2 (232 bytes)
  1072  002D16  EE02  F000         	lfsr	0,__pbssBANK2
  1073  002D1A  0EE8               	movlw	232
  1074  002D1C                     clear_0:
  1075  002D1C  6AEE               	clrf	postinc0,c
  1076  002D1E  06E8               	decf	wreg,f,c
  1077  002D20  E1FD               	bnz	clear_0
  1078                           
  1079                           ; Clear objects allocated to BANK1 (153 bytes)
  1080  002D22  EE01  F000         	lfsr	0,__pbssBANK1
  1081  002D26  0E99               	movlw	153
  1082  002D28                     clear_1:
  1083  002D28  6AEE               	clrf	postinc0,c
  1084  002D2A  06E8               	decf	wreg,f,c
  1085  002D2C  E1FD               	bnz	clear_1
  1086                           
  1087                           ; Clear objects allocated to BANK0 (32 bytes)
  1088  002D2E  EE00  F0D7         	lfsr	0,__pbssBANK0
  1089  002D32  0E20               	movlw	32
  1090  002D34                     clear_2:
  1091  002D34  6AEE               	clrf	postinc0,c
  1092  002D36  06E8               	decf	wreg,f,c
  1093  002D38  E1FD               	bnz	clear_2
  1094                           
  1095                           ; Clear objects allocated to COMRAM (4 bytes)
  1096  002D3A  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1097  002D3C  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1098  002D3E  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1099  002D40  6A57               	clrf	__pbssCOMRAM& (0+255),c
  1100  002D42                     end_of_initialization:
  1101                           	opt callstack 0
  1102  002D42                     __end_of__initialization:
  1103                           	opt callstack 0
  1104  002D42  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1105  002D44  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1106  002D46  0100               	movlb	0
  1107  002D48  EFBD  F014         	goto	_main	;jump to C main() function
  1108                           
  1109                           	psect	bssCOMRAM
  1110  000057                     __pbssCOMRAM:
  1111                           	opt callstack 0
  1112  000057                     _flags:
  1113                           	opt callstack 0
  1114  000057                     	ds	2
  1115  000059                     _eusart1RxTail:
  1116                           	opt callstack 0
  1117  000059                     	ds	1
  1118  00005A                     _eusart1RxHead:
  1119                           	opt callstack 0
  1120  00005A                     	ds	1
  1121                           
  1122                           	psect	bssBANK0
  1123  0000D7                     __pbssBANK0:
  1124                           	opt callstack 0
  1125  0000D7                     floorf@F524:
  1126                           	opt callstack 0
  1127  0000D7                     	ds	4
  1128  0000DB                     ___fpclassifyf@F463:
  1129                           	opt callstack 0
  1130  0000DB                     	ds	4
  1131  0000DF                     _nout:
  1132                           	opt callstack 0
  1133  0000DF                     	ds	2
  1134  0000E1                     _width:
  1135                           	opt callstack 0
  1136  0000E1                     	ds	2
  1137  0000E3                     _prec:
  1138                           	opt callstack 0
  1139  0000E3                     	ds	2
  1140  0000E5                     _EUSART1_ErrorHandler:
  1141                           	opt callstack 0
  1142  0000E5                     	ds	2
  1143  0000E7                     _EUSART1_OverrunErrorHandler:
  1144                           	opt callstack 0
  1145  0000E7                     	ds	2
  1146  0000E9                     _EUSART1_FramingErrorHandler:
  1147                           	opt callstack 0
  1148  0000E9                     	ds	2
  1149  0000EB                     _EUSART1_RxDefaultInterruptHandler:
  1150                           	opt callstack 0
  1151  0000EB                     	ds	2
  1152  0000ED                     _EUSART1_TxDefaultInterruptHandler:
  1153                           	opt callstack 0
  1154  0000ED                     	ds	2
  1155  0000EF                     _display_toogle:
  1156                           	opt callstack 0
  1157  0000EF                     	ds	1
  1158  0000F0                     _error:
  1159                           	opt callstack 0
  1160  0000F0                     	ds	1
  1161  0000F1                     _debug:
  1162                           	opt callstack 0
  1163  0000F1                     	ds	1
  1164  0000F2                     _eusart1RxLastError:
  1165                           	opt callstack 0
  1166  0000F2                     	ds	1
  1167  0000F3                     _eusart1RxCount:
  1168                           	opt callstack 0
  1169  0000F3                     	ds	1
  1170  0000F4                     _eusart1TxBufferRemaining:
  1171                           	opt callstack 0
  1172  0000F4                     	ds	1
  1173  0000F5                     _eusart1TxTail:
  1174                           	opt callstack 0
  1175  0000F5                     	ds	1
  1176  0000F6                     _eusart1TxHead:
  1177                           	opt callstack 0
  1178  0000F6                     	ds	1
  1179                           
  1180                           	psect	dataBANK0
  1181  0000F7                     __pdataBANK0:
  1182                           	opt callstack 0
  1183  0000F7                     _minutes:
  1184                           	opt callstack 0
  1185  0000F7                     	ds	2
  1186  0000F9                     _display_addr:
  1187                           	opt callstack 0
  1188  0000F9                     	ds	1
  1189  0000FA                     _precission:
  1190                           	opt callstack 0
  1191  0000FA                     	ds	1
  1192  0000FB                     _second_line:
  1193                           	opt callstack 0
  1194  0000FB                     	ds	2
  1195  0000FD                     _first_line:
  1196                           	opt callstack 0
  1197  0000FD                     	ds	2
  1198  0000FF                     _rtc_test:
  1199                           	opt callstack 0
  1200  0000FF                     	ds	1
  1201                           
  1202                           	psect	bssBANK1
  1203  000100                     __pbssBANK1:
  1204                           	opt callstack 0
  1205  000100                     _tmp_string:
  1206                           	opt callstack 0
  1207  000100                     	ds	15
  1208  00010F                     	ds	4
  1209  000113                     _data_out:
  1210                           	opt callstack 0
  1211  000113                     	ds	4
  1212  000117                     _dbuf:
  1213                           	opt callstack 0
  1214  000117                     	ds	80
  1215  000167                     _day_string:
  1216                           	opt callstack 0
  1217  000167                     	ds	20
  1218  00017B                     _month_string:
  1219                           	opt callstack 0
  1220  00017B                     	ds	20
  1221  00018F                     _temperature_read:
  1222                           	opt callstack 0
  1223  00018F                     	ds	5
  1224  000194                     _humid_read:
  1225                           	opt callstack 0
  1226  000194                     	ds	5
  1227                           
  1228                           	psect	dataBANK1
  1229  000199                     __pdataBANK1:
  1230                           	opt callstack 0
  1231  000199                     _Aring:
  1232                           	opt callstack 0
  1233  000199                     	ds	11
  1234  0001A4                     _aring:
  1235                           	opt callstack 0
  1236  0001A4                     	ds	11
  1237  0001AF                     _O_slash:
  1238                           	opt callstack 0
  1239  0001AF                     	ds	11
  1240  0001BA                     _oslash:
  1241                           	opt callstack 0
  1242  0001BA                     	ds	11
  1243  0001C5                     _AElig:
  1244                           	opt callstack 0
  1245  0001C5                     	ds	11
  1246  0001D0                     _aelig:
  1247                           	opt callstack 0
  1248  0001D0                     	ds	11
  1249  0001DB                     _custom_char0:
  1250                           	opt callstack 0
  1251  0001DB                     	ds	11
  1252  0001E6                     stoa@F1166:
  1253                           	opt callstack 0
  1254  0001E6                     	ds	7
  1255  0001ED                     _hello_string:
  1256                           	opt callstack 0
  1257  0001ED                     	ds	14
  1258  0001FB                     _display_init:
  1259                           	opt callstack 0
  1260  0001FB                     	ds	4
  1261                           
  1262                           	psect	bssBANK2
  1263  000200                     __pbssBANK2:
  1264                           	opt callstack 0
  1265  000200                     _eusart1RxStatusBuffer:
  1266                           	opt callstack 0
  1267  000200                     	ds	64
  1268  000240                     _eusart1RxBuffer:
  1269                           	opt callstack 0
  1270  000240                     	ds	64
  1271  000280                     _eusart1TxBuffer:
  1272                           	opt callstack 0
  1273  000280                     	ds	64
  1274  0002C0                     _rtc_buffer:
  1275                           	opt callstack 0
  1276  0002C0                     	ds	40
  1277                           
  1278                           	psect	cstackBANK2
  1279  0002E8                     __pcstackBANK2:
  1280                           	opt callstack 0
  1281  0002E8                     i2c_write_serial@addr:
  1282                           	opt callstack 0
  1283                           
  1284                           ; 1 bytes @ 0x0
  1285  0002E8                     	ds	1
  1286  0002E9                     i2c_write_serial@targetAddr:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 1 bytes @ 0x1
  1290  0002E9                     	ds	1
  1291  0002EA                     i2c_write_serial@i:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 1 bytes @ 0x2
  1295  0002EA                     	ds	1
  1296                           
  1297                           	psect	cstackBANK0
  1298  000060                     __pcstackBANK0:
  1299                           	opt callstack 0
  1300  000060                     efgtoa@ou:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 4 bytes @ 0x0
  1304  000060                     	ds	4
  1305  000064                     _efgtoa$1392:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x4
  1309  000064                     	ds	2
  1310  000066                     _efgtoa$1393:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x6
  1314  000066                     	ds	2
  1315  000068                     _efgtoa$1397:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x8
  1319  000068                     	ds	2
  1320  00006A                     _efgtoa$1401:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 2 bytes @ 0xA
  1324  00006A                     	ds	2
  1325  00006C                     _efgtoa$1402:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0xC
  1329  00006C                     	ds	2
  1330  00006E                     _efgtoa$1403:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 2 bytes @ 0xE
  1334  00006E                     	ds	2
  1335  000070                     efgtoa@t:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x10
  1339  000070                     	ds	2
  1340  000072                     efgtoa@pp:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x12
  1344  000072                     	ds	2
  1345  000074                     efgtoa@m:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x14
  1349  000074                     	ds	2
  1350  000076                     efgtoa@ne:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x16
  1354  000076                     	ds	2
  1355  000078                     efgtoa@d:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x18
  1359  000078                     	ds	2
  1360  00007A                     efgtoa@sign:
  1361                           	opt callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x1A
  1364  00007A                     	ds	2
  1365  00007C                     efgtoa@p:
  1366                           	opt callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x1C
  1369  00007C                     	ds	2
  1370  00007E                     efgtoa@nmode:
  1371                           	opt callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x1E
  1374  00007E                     	ds	1
  1375  00007F                     efgtoa@w:
  1376                           	opt callstack 0
  1377                           
  1378                           ; 2 bytes @ 0x1F
  1379  00007F                     	ds	2
  1380  000081                     efgtoa@mode:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x21
  1384  000081                     	ds	1
  1385  000082                     efgtoa@h:
  1386                           	opt callstack 0
  1387                           
  1388                           ; 4 bytes @ 0x22
  1389  000082                     	ds	4
  1390  000086                     efgtoa@l:
  1391                           	opt callstack 0
  1392                           
  1393                           ; 4 bytes @ 0x26
  1394  000086                     	ds	4
  1395  00008A                     efgtoa@i:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x2A
  1399  00008A                     	ds	2
  1400  00008C                     efgtoa@g:
  1401                           	opt callstack 0
  1402                           
  1403                           ; 4 bytes @ 0x2C
  1404  00008C                     	ds	4
  1405  000090                     efgtoa@e:
  1406                           	opt callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x30
  1409  000090                     	ds	2
  1410  000092                     efgtoa@n:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x32
  1414  000092                     	ds	2
  1415  000094                     efgtoa@u:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 4 bytes @ 0x34
  1419  000094                     	ds	4
  1420  000098                     vfpfcnvrt@ll:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 8 bytes @ 0x38
  1424  000098                     	ds	8
  1425  0000A0                     vfpfcnvrt@llu:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 8 bytes @ 0x40
  1429  0000A0                     	ds	8
  1430  0000A8                     vfpfcnvrt@cp:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x48
  1434  0000A8                     	ds	2
  1435  0000AA                     vfpfcnvrt@done:
  1436                           	opt callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x4A
  1439  0000AA                     	ds	2
  1440  0000AC                     _vfpfcnvrt$1439:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x4C
  1444  0000AC                     	ds	2
  1445  0000AE                     _vfpfcnvrt$1440:
  1446                           	opt callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x4E
  1449  0000AE                     	ds	2
  1450  0000B0                     _vfpfcnvrt$1446:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x50
  1454  0000B0                     	ds	2
  1455  0000B2                     vfpfcnvrt@f:
  1456                           	opt callstack 0
  1457                           
  1458                           ; 4 bytes @ 0x52
  1459  0000B2                     	ds	4
  1460  0000B6                     vfpfcnvrt@ct:
  1461                           	opt callstack 0
  1462                           
  1463                           ; 3 bytes @ 0x56
  1464  0000B6                     	ds	3
  1465  0000B9                     vfpfcnvrt@c:
  1466                           	opt callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x59
  1469  0000B9                     	ds	1
  1470  0000BA                     ?_vfprintf:
  1471                           	opt callstack 0
  1472  0000BA                     vfprintf@fp:
  1473                           	opt callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x5A
  1476  0000BA                     	ds	2
  1477  0000BC                     vfprintf@fmt:
  1478                           	opt callstack 0
  1479                           
  1480                           ; 2 bytes @ 0x5C
  1481  0000BC                     	ds	2
  1482  0000BE                     vfprintf@ap:
  1483                           	opt callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x5E
  1486  0000BE                     	ds	2
  1487  0000C0                     ?_printf:
  1488                           	opt callstack 0
  1489  0000C0                     printf@fmt:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x60
  1493  0000C0                     	ds	16
  1494  0000D0                     printf@ap:
  1495                           	opt callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x70
  1498  0000D0                     	ds	2
  1499  0000D2                     i2c_write_serial@data:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x72
  1503  0000D2                     	ds	2
  1504  0000D4                     i2c_write_serial@length:
  1505                           	opt callstack 0
  1506                           
  1507                           ; 1 bytes @ 0x74
  1508  0000D4                     	ds	1
  1509  0000D5                     ??_main:
  1510                           
  1511                           ; 1 bytes @ 0x75
  1512  0000D5                     	ds	2
  1513                           
  1514                           	psect	cstackCOMRAM
  1515  000001                     __pcstackCOMRAM:
  1516                           	opt callstack 0
  1517  000001                     ??_INTERRUPT_InterruptManager:
  1518  000001                     
  1519                           ; 1 bytes @ 0x0
  1520  000001                     	ds	4
  1521  000005                     ?_strlen:
  1522                           	opt callstack 0
  1523  000005                     ?___fpclassifyf:
  1524                           	opt callstack 0
  1525  000005                     ?_isupper:
  1526                           	opt callstack 0
  1527  000005                     ?_isalpha:
  1528                           	opt callstack 0
  1529  000005                     ?_isdigit:
  1530                           	opt callstack 0
  1531  000005                     ?_strncmp:
  1532                           	opt callstack 0
  1533  000005                     ?_isspace:
  1534                           	opt callstack 0
  1535  000005                     ?_islower:
  1536                           	opt callstack 0
  1537  000005                     ?___wmul:
  1538                           	opt callstack 0
  1539  000005                     ?___awdiv:
  1540                           	opt callstack 0
  1541  000005                     ?___awmod:
  1542                           	opt callstack 0
  1543  000005                     ?___fladd:
  1544                           	opt callstack 0
  1545  000005                     ?___fldiv:
  1546                           	opt callstack 0
  1547  000005                     ?___flmul:
  1548                           	opt callstack 0
  1549  000005                     ?___flneg:
  1550                           	opt callstack 0
  1551  000005                     ?___fltol:
  1552                           	opt callstack 0
  1553  000005                     ?___aodiv:
  1554                           	opt callstack 0
  1555  000005                     ?___aomod:
  1556                           	opt callstack 0
  1557  000005                     EUSART1_Write@txData:
  1558                           	opt callstack 0
  1559  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1560                           	opt callstack 0
  1561  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1562                           	opt callstack 0
  1563  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1564                           	opt callstack 0
  1565  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1566                           	opt callstack 0
  1567  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1568                           	opt callstack 0
  1569  000005                     ___wmul@multiplier:
  1570                           	opt callstack 0
  1571  000005                     ___awdiv@dividend:
  1572                           	opt callstack 0
  1573  000005                     ___awmod@dividend:
  1574                           	opt callstack 0
  1575  000005                     isalpha@c:
  1576                           	opt callstack 0
  1577  000005                     isdigit@c:
  1578                           	opt callstack 0
  1579  000005                     isspace@c:
  1580                           	opt callstack 0
  1581  000005                     isupper@c:
  1582                           	opt callstack 0
  1583  000005                     strcpy@dest:
  1584                           	opt callstack 0
  1585  000005                     strlen@s:
  1586                           	opt callstack 0
  1587  000005                     strncmp@_l:
  1588                           	opt callstack 0
  1589  000005                     islower@c:
  1590                           	opt callstack 0
  1591  000005                     ___fleq@ff1:
  1592                           	opt callstack 0
  1593  000005                     ___flneg@f1:
  1594                           	opt callstack 0
  1595  000005                     ___fltol@f1:
  1596                           	opt callstack 0
  1597  000005                     ___fladd@b:
  1598                           	opt callstack 0
  1599  000005                     ___fldiv@b:
  1600                           	opt callstack 0
  1601  000005                     ___flmul@b:
  1602                           	opt callstack 0
  1603  000005                     ___fpclassifyf@x:
  1604                           	opt callstack 0
  1605  000005                     ___aodiv@dividend:
  1606                           	opt callstack 0
  1607  000005                     ___aomod@dividend:
  1608                           	opt callstack 0
  1609                           
  1610                           ; 8 bytes @ 0x4
  1611  000005                     	ds	1
  1612  000006                     putch@txData:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 1 bytes @ 0x5
  1616  000006                     	ds	1
  1617  000007                     ??_isupper:
  1618  000007                     ??_isalpha:
  1619  000007                     ??_isdigit:
  1620  000007                     ??_isspace:
  1621  000007                     ??_islower:
  1622  000007                     ___wmul@multiplicand:
  1623                           	opt callstack 0
  1624  000007                     ___awdiv@divisor:
  1625                           	opt callstack 0
  1626  000007                     ___awmod@divisor:
  1627                           	opt callstack 0
  1628  000007                     fputc@c:
  1629                           	opt callstack 0
  1630  000007                     strcpy@src:
  1631                           	opt callstack 0
  1632  000007                     strlen@a:
  1633                           	opt callstack 0
  1634  000007                     strncmp@_r:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 2 bytes @ 0x6
  1638  000007                     	ds	2
  1639  000009                     ??___fpclassifyf:
  1640  000009                     ??_strcpy:
  1641  000009                     ??___fltol:
  1642  000009                     ___awdiv@counter:
  1643                           	opt callstack 0
  1644  000009                     ___awmod@counter:
  1645                           	opt callstack 0
  1646  000009                     ___wmul@product:
  1647                           	opt callstack 0
  1648  000009                     fputc@fp:
  1649                           	opt callstack 0
  1650  000009                     strncmp@n:
  1651                           	opt callstack 0
  1652  000009                     ___fleq@ff2:
  1653                           	opt callstack 0
  1654  000009                     ___fladd@a:
  1655                           	opt callstack 0
  1656  000009                     ___fldiv@a:
  1657                           	opt callstack 0
  1658  000009                     ___flmul@a:
  1659                           	opt callstack 0
  1660                           
  1661                           ; 4 bytes @ 0x8
  1662  000009                     	ds	1
  1663  00000A                     ___awdiv@sign:
  1664                           	opt callstack 0
  1665  00000A                     ___awmod@sign:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 1 bytes @ 0x9
  1669  00000A                     	ds	1
  1670  00000B                     ??_fputc:
  1671  00000B                     ??_strncmp:
  1672  00000B                     ?_tolower:
  1673                           	opt callstack 0
  1674  00000B                     ?_toupper:
  1675                           	opt callstack 0
  1676  00000B                     _isspace$1961:
  1677                           	opt callstack 0
  1678  00000B                     ___awdiv@quotient:
  1679                           	opt callstack 0
  1680  00000B                     strcpy@s:
  1681                           	opt callstack 0
  1682  00000B                     tolower@c:
  1683                           	opt callstack 0
  1684  00000B                     toupper@c:
  1685                           	opt callstack 0
  1686                           
  1687                           ; 2 bytes @ 0xA
  1688  00000B                     	ds	1
  1689  00000C                     ?_atoi:
  1690                           	opt callstack 0
  1691  00000C                     atoi@s:
  1692                           	opt callstack 0
  1693  00000C                     strncmp@l:
  1694                           	opt callstack 0
  1695                           
  1696                           ; 2 bytes @ 0xB
  1697  00000C                     	ds	1
  1698  00000D                     ??_tolower:
  1699  00000D                     ??_toupper:
  1700  00000D                     ??___fladd:
  1701  00000D                     ??___fldiv:
  1702  00000D                     ??___flmul:
  1703  00000D                     ??___fleq:
  1704  00000D                     ___fltol@sign1:
  1705                           	opt callstack 0
  1706  00000D                     ___fpclassifyf@e:
  1707                           	opt callstack 0
  1708  00000D                     strcpy@d:
  1709                           	opt callstack 0
  1710  00000D                     ___aodiv@divisor:
  1711                           	opt callstack 0
  1712  00000D                     ___aomod@divisor:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 8 bytes @ 0xC
  1716  00000D                     	ds	1
  1717  00000E                     ??_atoi:
  1718  00000E                     ___fltol@exp1:
  1719                           	opt callstack 0
  1720  00000E                     strncmp@r:
  1721                           	opt callstack 0
  1722                           
  1723                           ; 2 bytes @ 0xD
  1724  00000E                     	ds	1
  1725  00000F                     ___fpclassifyf@u:
  1726                           	opt callstack 0
  1727                           
  1728                           ; 4 bytes @ 0xE
  1729  00000F                     	ds	1
  1730  000010                     ?_stoa:
  1731                           	opt callstack 0
  1732  000010                     stoa@fp:
  1733                           	opt callstack 0
  1734  000010                     fputs@s:
  1735                           	opt callstack 0
  1736                           
  1737                           ; 2 bytes @ 0xF
  1738  000010                     	ds	1
  1739  000011                     ___fladd@signs:
  1740                           	opt callstack 0
  1741  000011                     ___flmul@sign:
  1742                           	opt callstack 0
  1743  000011                     _tolower$2051:
  1744                           	opt callstack 0
  1745  000011                     _toupper$2066:
  1746                           	opt callstack 0
  1747  000011                     ___fldiv@rem:
  1748                           	opt callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x10
  1751  000011                     	ds	1
  1752  000012                     ___fladd@aexp:
  1753                           	opt callstack 0
  1754  000012                     ___flmul@aexp:
  1755                           	opt callstack 0
  1756  000012                     stoa@s:
  1757                           	opt callstack 0
  1758  000012                     atoi@neg:
  1759                           	opt callstack 0
  1760  000012                     fputs@fp:
  1761                           	opt callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x11
  1764  000012                     	ds	1
  1765  000013                     ___fladd@bexp:
  1766                           	opt callstack 0
  1767  000013                     ___flmul@grs:
  1768                           	opt callstack 0
  1769                           
  1770                           ; 4 bytes @ 0x12
  1771  000013                     	ds	1
  1772  000014                     ??_stoa:
  1773  000014                     ___fladd@grs:
  1774                           	opt callstack 0
  1775  000014                     fputs@c:
  1776                           	opt callstack 0
  1777  000014                     _atoi$1921:
  1778                           	opt callstack 0
  1779                           
  1780                           ; 2 bytes @ 0x13
  1781  000014                     	ds	1
  1782  000015                     ___aodiv@counter:
  1783                           	opt callstack 0
  1784  000015                     ___aomod@counter:
  1785                           	opt callstack 0
  1786  000015                     ___fldiv@sign:
  1787                           	opt callstack 0
  1788  000015                     fputs@i:
  1789                           	opt callstack 0
  1790  000015                     stoa@nuls:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 7 bytes @ 0x14
  1794  000015                     	ds	1
  1795  000016                     ___aodiv@sign:
  1796                           	opt callstack 0
  1797  000016                     ___aomod@sign:
  1798                           	opt callstack 0
  1799  000016                     ___fldiv@new_exp:
  1800                           	opt callstack 0
  1801  000016                     _atoi$1923:
  1802                           	opt callstack 0
  1803                           
  1804                           ; 2 bytes @ 0x15
  1805  000016                     	ds	1
  1806  000017                     ?_abs:
  1807                           	opt callstack 0
  1808  000017                     ?_pad:
  1809                           	opt callstack 0
  1810  000017                     ___flmul@bexp:
  1811                           	opt callstack 0
  1812  000017                     pad@fp:
  1813                           	opt callstack 0
  1814  000017                     abs@a:
  1815                           	opt callstack 0
  1816  000017                     ___aodiv@quotient:
  1817                           	opt callstack 0
  1818                           
  1819                           ; 8 bytes @ 0x16
  1820  000017                     	ds	1
  1821  000018                     _atoi$1922:
  1822                           	opt callstack 0
  1823  000018                     ___fldiv@grs:
  1824                           	opt callstack 0
  1825  000018                     ___flmul@prod:
  1826                           	opt callstack 0
  1827                           
  1828                           ; 4 bytes @ 0x17
  1829  000018                     	ds	1
  1830  000019                     ??_abs:
  1831  000019                     pad@buf:
  1832                           	opt callstack 0
  1833  000019                     atoi@n:
  1834                           	opt callstack 0
  1835                           
  1836                           ; 2 bytes @ 0x18
  1837  000019                     	ds	2
  1838  00001B                     pad@p:
  1839                           	opt callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x1A
  1842  00001B                     	ds	1
  1843  00001C                     ___fldiv@bexp:
  1844                           	opt callstack 0
  1845  00001C                     stoa@i:
  1846                           	opt callstack 0
  1847  00001C                     ___flmul@temp:
  1848                           	opt callstack 0
  1849                           
  1850                           ; 2 bytes @ 0x1B
  1851  00001C                     	ds	1
  1852  00001D                     ??_pad:
  1853  00001D                     ___fldiv@aexp:
  1854                           	opt callstack 0
  1855                           
  1856                           ; 1 bytes @ 0x1C
  1857  00001D                     	ds	1
  1858  00001E                     ?_floorf:
  1859                           	opt callstack 0
  1860  00001E                     ?___flsub:
  1861                           	opt callstack 0
  1862  00001E                     pad@i:
  1863                           	opt callstack 0
  1864  00001E                     stoa@w:
  1865                           	opt callstack 0
  1866  00001E                     ___flge@ff1:
  1867                           	opt callstack 0
  1868  00001E                     ___flsub@b:
  1869                           	opt callstack 0
  1870  00001E                     floorf@x:
  1871                           	opt callstack 0
  1872                           
  1873                           ; 4 bytes @ 0x1D
  1874  00001E                     	ds	2
  1875  000020                     pad@w:
  1876                           	opt callstack 0
  1877  000020                     stoa@cp:
  1878                           	opt callstack 0
  1879                           
  1880                           ; 2 bytes @ 0x1F
  1881  000020                     	ds	2
  1882  000022                     ??_floorf:
  1883  000022                     ?_ctoa:
  1884                           	opt callstack 0
  1885  000022                     ?_dtoa:
  1886                           	opt callstack 0
  1887  000022                     ?_xtoa:
  1888                           	opt callstack 0
  1889  000022                     ctoa@fp:
  1890                           	opt callstack 0
  1891  000022                     dtoa@fp:
  1892                           	opt callstack 0
  1893  000022                     stoa@p:
  1894                           	opt callstack 0
  1895  000022                     xtoa@fp:
  1896                           	opt callstack 0
  1897  000022                     ___flge@ff2:
  1898                           	opt callstack 0
  1899  000022                     ___flsub@a:
  1900                           	opt callstack 0
  1901                           
  1902                           ; 4 bytes @ 0x21
  1903  000022                     	ds	2
  1904  000024                     ctoa@c:
  1905                           	opt callstack 0
  1906  000024                     stoa@l:
  1907                           	opt callstack 0
  1908  000024                     dtoa@d:
  1909                           	opt callstack 0
  1910  000024                     xtoa@d:
  1911                           	opt callstack 0
  1912                           
  1913                           ; 8 bytes @ 0x23
  1914  000024                     	ds	1
  1915  000025                     ctoa@w:
  1916                           	opt callstack 0
  1917                           
  1918                           ; 2 bytes @ 0x24
  1919  000025                     	ds	1
  1920  000026                     ??___flge:
  1921                           
  1922                           ; 1 bytes @ 0x25
  1923  000026                     	ds	2
  1924  000028                     floorf@m:
  1925                           	opt callstack 0
  1926                           
  1927                           ; 4 bytes @ 0x27
  1928  000028                     	ds	4
  1929  00002C                     ??_dtoa:
  1930  00002C                     xtoa@x:
  1931                           	opt callstack 0
  1932  00002C                     floorf@e:
  1933                           	opt callstack 0
  1934                           
  1935                           ; 2 bytes @ 0x2B
  1936  00002C                     	ds	1
  1937  00002D                     ??_xtoa:
  1938                           
  1939                           ; 1 bytes @ 0x2C
  1940  00002D                     	ds	1
  1941  00002E                     floorf@u:
  1942                           	opt callstack 0
  1943                           
  1944                           ; 4 bytes @ 0x2D
  1945  00002E                     	ds	4
  1946  000032                     ?_efgtoa:
  1947                           	opt callstack 0
  1948  000032                     efgtoa@fp:
  1949                           	opt callstack 0
  1950                           
  1951                           ; 2 bytes @ 0x31
  1952  000032                     	ds	2
  1953  000034                     _dtoa$1369:
  1954                           	opt callstack 0
  1955  000034                     efgtoa@f:
  1956                           	opt callstack 0
  1957                           
  1958                           ; 4 bytes @ 0x33
  1959  000034                     	ds	1
  1960  000035                     _xtoa$1424:
  1961                           	opt callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x34
  1964  000035                     	ds	1
  1965  000036                     dtoa@p:
  1966                           	opt callstack 0
  1967                           
  1968                           ; 2 bytes @ 0x35
  1969  000036                     	ds	1
  1970  000037                     _xtoa$1425:
  1971                           	opt callstack 0
  1972                           
  1973                           ; 2 bytes @ 0x36
  1974  000037                     	ds	1
  1975  000038                     efgtoa@c:
  1976                           	opt callstack 0
  1977  000038                     dtoa@w:
  1978                           	opt callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x37
  1981  000038                     	ds	1
  1982  000039                     ??_efgtoa:
  1983  000039                     xtoa@p:
  1984                           	opt callstack 0
  1985                           
  1986                           ; 2 bytes @ 0x38
  1987  000039                     	ds	1
  1988  00003A                     dtoa@s:
  1989                           	opt callstack 0
  1990                           
  1991                           ; 2 bytes @ 0x39
  1992  00003A                     	ds	1
  1993  00003B                     xtoa@w:
  1994                           	opt callstack 0
  1995                           
  1996                           ; 2 bytes @ 0x3A
  1997  00003B                     	ds	1
  1998  00003C                     dtoa@n:
  1999                           	opt callstack 0
  2000                           
  2001                           ; 8 bytes @ 0x3B
  2002  00003C                     	ds	1
  2003  00003D                     xtoa@n:
  2004                           	opt callstack 0
  2005                           
  2006                           ; 8 bytes @ 0x3C
  2007  00003D                     	ds	7
  2008  000044                     dtoa@i:
  2009                           	opt callstack 0
  2010                           
  2011                           ; 2 bytes @ 0x43
  2012  000044                     	ds	1
  2013  000045                     xtoa@i:
  2014                           	opt callstack 0
  2015                           
  2016                           ; 2 bytes @ 0x44
  2017  000045                     	ds	2
  2018  000047                     xtoa@c:
  2019                           	opt callstack 0
  2020                           
  2021                           ; 2 bytes @ 0x46
  2022  000047                     	ds	2
  2023  000049                     ?_vfpfcnvrt:
  2024                           	opt callstack 0
  2025  000049                     vfpfcnvrt@fp:
  2026                           	opt callstack 0
  2027                           
  2028                           ; 2 bytes @ 0x48
  2029  000049                     	ds	2
  2030  00004B                     vfpfcnvrt@fmt:
  2031                           	opt callstack 0
  2032                           
  2033                           ; 2 bytes @ 0x4A
  2034  00004B                     	ds	2
  2035  00004D                     vfpfcnvrt@ap:
  2036                           	opt callstack 0
  2037                           
  2038                           ; 2 bytes @ 0x4C
  2039  00004D                     	ds	2
  2040  00004F                     ??_vfpfcnvrt:
  2041                           
  2042                           ; 1 bytes @ 0x4E
  2043  00004F                     	ds	4
  2044  000053                     vfprintf@cfmt:
  2045                           	opt callstack 0
  2046                           
  2047                           ; 2 bytes @ 0x52
  2048  000053                     	ds	2
  2049  000055                     ??_i2c_write_serial:
  2050                           
  2051                           ; 1 bytes @ 0x54
  2052  000055                     	ds	2
  2053                           
  2054 ;;
  2055 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2056 ;;
  2057 ;; *************** function _main *****************
  2058 ;; Defined at:
  2059 ;;		line 32 in file "main.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;Total ram usage:        2 bytes
  2078 ;; Hardware stack levels required when called:   14
  2079 ;; This function calls:
  2080 ;;		_EUSART1_Initialize
  2081 ;;		_SYSTEM_Initialize
  2082 ;;		_i2c_init
  2083 ;;		_i2c_write_serial
  2084 ;; This function is called by:
  2085 ;;		Startup code after reset
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text0
  2090  00297A                     __ptext0:
  2091                           	opt callstack 0
  2092  00297A                     _main:
  2093                           	opt callstack 17
  2094                           
  2095                           ;main.c: 35:     SYSTEM_Initialize();;main.c: 35:     SYSTEM_Initialize();
  2096                           
  2097                           ;incstack = 0
  2098  00297A  ECB3  F019         	call	_SYSTEM_Initialize	;wreg free
  2099                           
  2100                           ;main.c: 36:     EUSART1_Initialize();;main.c: 36:     EUSART1_Initialize();
  2101  00297E  ECA6  F016         	call	_EUSART1_Initialize	;wreg free
  2102                           
  2103                           ;main.c: 37:     INTCONbits.GIE = 1;;main.c: 37:     INTCONbits.GIE = 1;
  2104  002982  8EF2               	bsf	4082,7,c	;volatile
  2105                           
  2106                           ;main.c: 38:     INTCONbits.PEIE = 1;;main.c: 38:     INTCONbits.PEIE = 1;
  2107  002984  8CF2               	bsf	4082,6,c	;volatile
  2108                           
  2109                           ;main.c: 40:     _delay((unsigned long)((3000)*(64000000/4000.0)));;main.c: 40:     _del
      +                          ay((unsigned long)((3000)*(64000000/4000.0)));
  2110  002986  0EF4               	movlw	244
  2111  002988  0100               	movlb	0	; () banked
  2112  00298A  6FD6               	movwf	(??_main+1)& (0+255),b
  2113  00298C  0E82               	movlw	130
  2114  00298E  6FD5               	movwf	??_main& (0+255),b
  2115  002990  0E05               	movlw	5
  2116  002992                     u10577:
  2117  002992  2EE8               	decfsz	wreg,f,c
  2118  002994  D7FE               	bra	u10577
  2119  002996  2FD5               	decfsz	??_main& (0+255),f,b
  2120  002998  D7FC               	bra	u10577
  2121  00299A  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  2122  00299C  D7FA               	bra	u10577
  2123                           
  2124                           ;main.c: 41:     _delay((unsigned long)((3000)*(64000000/4000.0)));;main.c: 41:     _del
      +                          ay((unsigned long)((3000)*(64000000/4000.0)));
  2125  00299E  0EF4               	movlw	244
  2126  0029A0  0100               	movlb	0	; () banked
  2127  0029A2  6FD6               	movwf	(??_main+1)& (0+255),b
  2128  0029A4  0E82               	movlw	130
  2129  0029A6  6FD5               	movwf	??_main& (0+255),b
  2130  0029A8  0E05               	movlw	5
  2131  0029AA                     u10587:
  2132  0029AA  2EE8               	decfsz	wreg,f,c
  2133  0029AC  D7FE               	bra	u10587
  2134  0029AE  2FD5               	decfsz	??_main& (0+255),f,b
  2135  0029B0  D7FC               	bra	u10587
  2136  0029B2  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  2137  0029B4  D7FA               	bra	u10587
  2138                           
  2139                           ;main.c: 43:     i2c_init();;main.c: 43:     i2c_init();
  2140  0029B6  ECA7  F019         	call	_i2c_init	;wreg free
  2141  0029BA  0EFB               	movlw	low _display_init
  2142  0029BC  0100               	movlb	0	; () banked
  2143  0029BE  6FD2               	movwf	i2c_write_serial@data& (0+255),b
  2144  0029C0  0E01               	movlw	high _display_init
  2145  0029C2  6FD3               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2146  0029C4  0E04               	movlw	4
  2147  0029C6  6FD4               	movwf	i2c_write_serial@length& (0+255),b
  2148  0029C8  0E3C               	movlw	60
  2149  0029CA  ECE5  F015         	call	_i2c_write_serial
  2150  0029CE  0EFD               	movlw	low _first_line
  2151  0029D0  0100               	movlb	0	; () banked
  2152  0029D2  6FD2               	movwf	i2c_write_serial@data& (0+255),b
  2153  0029D4  0E00               	movlw	high _first_line
  2154  0029D6  6FD3               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2155  0029D8  0E02               	movlw	2
  2156  0029DA  6FD4               	movwf	i2c_write_serial@length& (0+255),b
  2157  0029DC  0E3C               	movlw	60
  2158  0029DE  ECE5  F015         	call	_i2c_write_serial
  2159  0029E2  0EED               	movlw	low _hello_string
  2160  0029E4  0100               	movlb	0	; () banked
  2161  0029E6  6FD2               	movwf	i2c_write_serial@data& (0+255),b
  2162  0029E8  0E01               	movlw	high _hello_string
  2163  0029EA  6FD3               	movwf	(i2c_write_serial@data+1)& (0+255),b
  2164  0029EC  0E0D               	movlw	13
  2165  0029EE  6FD4               	movwf	i2c_write_serial@length& (0+255),b
  2166  0029F0  0E3C               	movlw	60
  2167  0029F2  ECE5  F015         	call	_i2c_write_serial
  2168                           
  2169                           ;main.c: 49:     _delay((unsigned long)((100)*(64000000/4000.0)));;main.c: 49:     _dela
      +                          y((unsigned long)((100)*(64000000/4000.0)));
  2170  0029F6  0E09               	movlw	9
  2171  0029F8  0100               	movlb	0	; () banked
  2172  0029FA  6FD6               	movwf	(??_main+1)& (0+255),b
  2173  0029FC  0E1E               	movlw	30
  2174  0029FE  6FD5               	movwf	??_main& (0+255),b
  2175  002A00  0EE4               	movlw	228
  2176  002A02                     u10597:
  2177  002A02  2EE8               	decfsz	wreg,f,c
  2178  002A04  D7FE               	bra	u10597
  2179  002A06  2FD5               	decfsz	??_main& (0+255),f,b
  2180  002A08  D7FC               	bra	u10597
  2181  002A0A  2FD6               	decfsz	(??_main+1)& (0+255),f,b
  2182  002A0C  D7FA               	bra	u10597
  2183  002A0E  F000               	nop	
  2184  002A10                     l535:
  2185                           
  2186                           ;main.c: 51:     {;main.c: 51:     {;main.c: 59:     };main.c: 59:     }
  2187  002A10  D7FF               	goto	l535
  2188  002A12                     __end_of_main:
  2189                           	opt callstack 0
  2190                           
  2191 ;; *************** function _i2c_write_serial *****************
  2192 ;; Defined at:
  2193 ;;		line 39 in file "./i2c.h"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  addr            1    wreg     unsigned char 
  2196 ;;  data            2  114[BANK0 ] PTR unsigned char 
  2197 ;;		 -> hello_string(14), display_init(4), rtc_test(1), rtc_first_run@rtc_clock_set(11), 
  2198 ;;		 -> updateTemperature@output(4), minus(2), temp_pos(2), humid_pos(2), 
  2199 ;;		 -> updateMoist@output(3), getReading@outT(5), first_line(2), adafruit_temp_command(1), 
  2200 ;;		 -> getReading@outH(5), second_line(2), adafruit_humid_command(1), 
  2201 ;;  length          1  116[BANK0 ] unsigned char 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  addr            1    0[BANK2 ] unsigned char 
  2204 ;;  i               1    2[BANK2 ] unsigned char 
  2205 ;;  targetAddr      1    1[BANK2 ] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2215 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Totals:         2       3       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;Total ram usage:        8 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:   13
  2222 ;; This function calls:
  2223 ;;		_printf
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;;		_getReading
  2227 ;;		_updateMoist
  2228 ;;		_updateTemperature
  2229 ;;		_adafruit
  2230 ;;		_rtc_first_run
  2231 ;;		_rtc_get_time
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text1
  2236  002BCA                     __ptext1:
  2237                           	opt callstack 0
  2238  002BCA                     _i2c_write_serial:
  2239                           	opt callstack 17
  2240                           
  2241                           ;incstack = 0
  2242                           ;i2c_write_serial@addr stored from wreg
  2243  002BCA  0102               	movlb	2	; () banked
  2244  002BCC  6FE8               	movwf	i2c_write_serial@addr& (0+255),b
  2245                           
  2246                           ;./i2c.h: 40:     uint8_t targetAddr = addr<<1;;./i2c.h: 40:     uint8_t targetAddr = ad
      +                          dr<<1;
  2247  002BCE  0102               	movlb	2	; () banked
  2248  002BD0  51E8               	movf	i2c_write_serial@addr& (0+255),w,b
  2249  002BD2  25E8               	addwf	i2c_write_serial@addr& (0+255),w,b
  2250  002BD4  6FE9               	movwf	i2c_write_serial@targetAddr& (0+255),b
  2251  002BD6                     l287:
  2252  002BD6  B4C7               	btfsc	4039,2,c	;volatile
  2253  002BD8  D7FE               	goto	l287
  2254  002BDA  CFC5 F055          	movff	4037,??_i2c_write_serial	;volatile
  2255  002BDE  0E1F               	movlw	31
  2256  002BE0  1655               	andwf	??_i2c_write_serial,f,c
  2257  002BE2  A4D8               	btfss	status,2,c
  2258  002BE4  D7F8               	goto	l287
  2259                           
  2260                           ;./i2c.h: 47:     SSP1CON2bits.SEN = 1;;./i2c.h: 47:     SSP1CON2bits.SEN = 1;
  2261  002BE6  80C5               	bsf	4037,0,c	;volatile
  2262  002BE8                     l294:
  2263  002BE8  B0C5               	btfsc	4037,0,c	;volatile
  2264  002BEA  D7FE               	goto	l294
  2265                           
  2266                           ;./i2c.h: 53:     SSP1BUF = targetAddr;;./i2c.h: 53:     SSP1BUF = targetAddr;
  2267  002BEC  C2E9  FFC9         	movff	i2c_write_serial@targetAddr,4041	;volatile
  2268  002BF0                     l301:
  2269  002BF0  B4C7               	btfsc	4039,2,c	;volatile
  2270  002BF2  D7FE               	goto	l301
  2271                           
  2272                           ;./i2c.h: 57:     if(SSP2CON2bits.ACKSTAT == 0) {;./i2c.h: 57:     if(SSP2CON2bits.ACKST
      +                          AT == 0) {
  2273  002BF4  BC6B               	btfsc	3947,6,c	;volatile
  2274  002BF6  D029               	goto	u10410
  2275                           
  2276                           ;./i2c.h: 58:         for (uint8_t i=0; i < length ; i++) {;./i2c.h: 58:         for (ui
      +                          nt8_t i=0; i < length ; i++) {
  2277  002BF8  0E00               	movlw	0
  2278  002BFA  0102               	movlb	2	; () banked
  2279  002BFC  6FEA               	movwf	i2c_write_serial@i& (0+255),b
  2280  002BFE  D01F               	goto	l7629
  2281  002C00                     l310:
  2282                           
  2283                           ; BSR set to: 2
  2284                           ;./i2c.h: 59:             if( SSP1CON2bits.ACKSTAT == 0 ) {;./i2c.h: 59:             if(
      +                           SSP1CON2bits.ACKSTAT == 0 ) {
  2285  002C00  BCC5               	btfsc	4037,6,c	;volatile
  2286  002C02  D01B               	goto	u10400
  2287                           
  2288                           ; BSR set to: 2
  2289                           ;./i2c.h: 60:                 SSP1BUF = (uint8_t) data[i];;./i2c.h: 60:                 
      +                          SSP1BUF = (uint8_t) data[i];
  2290  002C04  51EA               	movf	i2c_write_serial@i& (0+255),w,b
  2291  002C06  0100               	movlb	0	; () banked
  2292  002C08  25D2               	addwf	i2c_write_serial@data& (0+255),w,b
  2293  002C0A  6E55               	movwf	??_i2c_write_serial& (0+255),c
  2294  002C0C  0E00               	movlw	0
  2295  002C0E  21D3               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  2296  002C10  6E56               	movwf	(??_i2c_write_serial+1)& (0+255),c
  2297  002C12  C055  FFF6         	movff	??_i2c_write_serial,tblptrl
  2298  002C16  C056  FFF7         	movff	??_i2c_write_serial+1,tblptrh
  2299  002C1A  0E00               	movlw	low (__mediumconst shr (0+16))
  2300  002C1C  6EF8               	movwf	tblptru,c
  2301  002C1E  0E0F               	movlw	(high __ramtop+-1)
  2302  002C20  64F7               	cpfsgt	tblptrh,c
  2303  002C22  D003               	bra	u10397
  2304  002C24  0008               	tblrd		*
  2305  002C26  50F5               	movf	tablat,w,c
  2306  002C28  D005               	bra	u10390
  2307  002C2A                     u10397:
  2308  002C2A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2309  002C2E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2310  002C32  50EF               	movf	indf0,w,c
  2311  002C34                     u10390:
  2312  002C34  6EC9               	movwf	4041,c	;volatile
  2313  002C36                     l312:
  2314  002C36  B4C7               	btfsc	4039,2,c	;volatile
  2315  002C38  D7FE               	goto	l312
  2316  002C3A                     u10400:
  2317                           
  2318                           ;./i2c.h: 66:         };./i2c.h: 66:         }
  2319  002C3A  0102               	movlb	2	; () banked
  2320  002C3C  2BEA               	incf	i2c_write_serial@i& (0+255),f,b
  2321  002C3E                     l7629:
  2322                           
  2323                           ; BSR set to: 2
  2324  002C3E  0100               	movlb	0	; () banked
  2325  002C40  51D4               	movf	i2c_write_serial@length& (0+255),w,b
  2326  002C42  0102               	movlb	2	; () banked
  2327  002C44  5DEA               	subwf	i2c_write_serial@i& (0+255),w,b
  2328  002C46  A0D8               	btfss	status,0,c
  2329  002C48  D7DB               	goto	l310
  2330  002C4A                     u10410:
  2331                           
  2332                           ;./i2c.h: 70:     SSP1CON2bits.PEN = 1;;./i2c.h: 70:     SSP1CON2bits.PEN = 1;
  2333                           
  2334                           ;./i2c.h: 67:     };./i2c.h: 67:     }
  2335  002C4A  84C5               	bsf	4037,2,c	;volatile
  2336  002C4C                     l325:
  2337  002C4C  A4C5               	btfss	4037,2,c	;volatile
  2338  002C4E  0012               	return	
  2339  002C50  D7FD               	goto	l325
  2340  002C52                     __end_of_i2c_write_serial:
  2341                           	opt callstack 0
  2342                           
  2343 ;; *************** function _printf *****************
  2344 ;; Defined at:
  2345 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  2348 ;;		 -> STR_20(38), STR_18(5), STR_16(5), STR_14(17), 
  2349 ;;		 -> STR_13(15), STR_12(14), STR_11(13), STR_10(33), 
  2350 ;;		 -> STR_9(18), STR_8(16), STR_7(39), STR_6(17), 
  2351 ;;		 -> STR_5(26), STR_4(31), STR_3(23), STR_2(18), 
  2352 ;;		 -> STR_1(16), 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  ap              2  112[BANK0 ] PTR void [1]
  2355 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2356 ;;  ret             2    0        int 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  2   96[BANK0 ] int 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2366 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;Total ram usage:       18 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:   12
  2373 ;; This function calls:
  2374 ;;		_vfprintf
  2375 ;; This function is called by:
  2376 ;;		_i2c_write_serial
  2377 ;;		_i2c_read_serial
  2378 ;;		_getReading
  2379 ;;		_rtc_get_time
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text2
  2384  0032DE                     __ptext2:
  2385                           	opt callstack 0
  2386  0032DE                     _printf:
  2387                           	opt callstack 17
  2388                           
  2389                           ;incstack = 0
  2390  0032DE  0EC2               	movlw	low (?_printf+2)
  2391  0032E0  0100               	movlb	0	; () banked
  2392  0032E2  6FD0               	movwf	printf@ap& (0+255),b
  2393  0032E4  0E00               	movlw	high (?_printf+2)
  2394  0032E6  6FD1               	movwf	(printf@ap+1)& (0+255),b
  2395                           
  2396                           ; BSR set to: 0
  2397  0032E8  0E00               	movlw	0
  2398  0032EA  6FBA               	movwf	vfprintf@fp& (0+255),b
  2399  0032EC  0E00               	movlw	0
  2400  0032EE  6FBB               	movwf	(vfprintf@fp+1)& (0+255),b
  2401  0032F0  C0C0  F0BC         	movff	printf@fmt,vfprintf@fmt
  2402  0032F4  C0C1  F0BD         	movff	printf@fmt+1,vfprintf@fmt+1
  2403  0032F8  0ED0               	movlw	low printf@ap
  2404  0032FA  6FBE               	movwf	vfprintf@ap& (0+255),b
  2405  0032FC  0E00               	movlw	high printf@ap
  2406  0032FE  6FBF               	movwf	(vfprintf@ap+1)& (0+255),b
  2407  003300  EC4C  F017         	call	_vfprintf	;wreg free
  2408  003304  0012               	return		;funcret
  2409  003306                     __end_of_printf:
  2410                           	opt callstack 0
  2411                           
  2412 ;; *************** function _vfprintf *****************
  2413 ;; Defined at:
  2414 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  fp              2   90[BANK0 ] PTR struct _IO_FILE
  2417 ;;		 -> sprintf@f(6), NULL(0), 
  2418 ;;  fmt             2   92[BANK0 ] PTR const unsigned char 
  2419 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
  2420 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
  2421 ;;		 -> STR_43(3), STR_41(3), STR_39(3), STR_37(3), 
  2422 ;;		 -> STR_35(3), STR_33(3), STR_31(3), STR_29(3), 
  2423 ;;		 -> STR_27(3), STR_25(3), STR_23(3), STR_21(3), 
  2424 ;;		 -> STR_20(38), STR_19(5), STR_18(5), STR_17(14), 
  2425 ;;		 -> STR_16(5), STR_15(15), STR_14(17), STR_13(15), 
  2426 ;;		 -> STR_12(14), STR_11(13), STR_10(33), STR_9(18), 
  2427 ;;		 -> STR_8(16), STR_7(39), STR_6(17), STR_5(26), 
  2428 ;;		 -> STR_4(31), STR_3(23), STR_2(18), STR_1(16), 
  2429 ;;  ap              2   94[BANK0 ] PTR PTR void 
  2430 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  2433 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
  2434 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
  2435 ;;		 -> STR_43(3), STR_41(3), STR_39(3), STR_37(3), 
  2436 ;;		 -> STR_35(3), STR_33(3), STR_31(3), STR_29(3), 
  2437 ;;		 -> STR_27(3), STR_25(3), STR_23(3), STR_21(3), 
  2438 ;;		 -> STR_20(38), STR_19(5), STR_18(5), STR_17(14), 
  2439 ;;		 -> STR_16(5), STR_15(15), STR_14(17), STR_13(15), 
  2440 ;;		 -> STR_12(14), STR_11(13), STR_10(33), STR_9(18), 
  2441 ;;		 -> STR_8(16), STR_7(39), STR_6(17), STR_5(26), 
  2442 ;;		 -> STR_4(31), STR_3(23), STR_2(18), STR_1(16), 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  2   90[BANK0 ] int 
  2445 ;; Registers used:
  2446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2452 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;Total ram usage:        8 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:   11
  2459 ;; This function calls:
  2460 ;;		_vfpfcnvrt
  2461 ;; This function is called by:
  2462 ;;		_printf
  2463 ;;		_sprintf
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text3
  2468  002E98                     __ptext3:
  2469                           	opt callstack 0
  2470  002E98                     _vfprintf:
  2471                           	opt callstack 17
  2472                           
  2473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FILE *fp, const char *fmt, va_list
      +                           ap);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1369: {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1369: {;C:\
      +                          Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1371:     char 
      +                          *cfmt;
  2474                           
  2475                           ;incstack = 0
  2476  002E98  C0BC  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  2477  002E9C  C0BD  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2478                           
  2479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 137
      +                          4:     nout = 0;
  2480  002EA0  0E00               	movlw	0
  2481  002EA2  0100               	movlb	0	; () banked
  2482  002EA4  6FE0               	movwf	(_nout+1)& (0+255),b
  2483  002EA6  0E00               	movlw	0
  2484  002EA8  6FDF               	movwf	_nout& (0+255),b
  2485                           
  2486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 1375:     while (*cfmt) {
  2487  002EAA  D013               	goto	l7601
  2488  002EAC                     l7599:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 1376:         nout += vfpfcnvrt(fp, &cfmt, ap);
  2492  002EAC  C0BA  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  2493  002EB0  C0BB  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2494  002EB4  0E53               	movlw	low vfprintf@cfmt
  2495  002EB6  6E4B               	movwf	vfpfcnvrt@fmt,c
  2496  002EB8  0E00               	movlw	high vfprintf@cfmt
  2497  002EBA  6E4C               	movwf	vfpfcnvrt@fmt+1,c
  2498  002EBC  C0BE  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2499  002EC0  C0BF  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2500  002EC4  ECF5  F004         	call	_vfpfcnvrt	;wreg free
  2501  002EC8  5049               	movf	?_vfpfcnvrt,w,c
  2502  002ECA  0100               	movlb	0	; () banked
  2503  002ECC  27DF               	addwf	_nout& (0+255),f,b
  2504  002ECE  504A               	movf	?_vfpfcnvrt+1,w,c
  2505  002ED0  23E0               	addwfc	(_nout+1)& (0+255),f,b
  2506  002ED2                     l7601:
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 1375:     while (*cfmt) {
  2510  002ED2  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  2511  002ED6  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2512  002EDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2513  002EDA  6AF8               	clrf	tblptru,c
  2514  002EDC                     	endif
  2515  002EDC                     	if	0	;tblptru may be non-zero
  2516  002EDC                     	endif
  2517  002EDC  0008               	tblrd		*
  2518  002EDE  50F5               	movf	tablat,w,c
  2519  002EE0  0900               	iorlw	0
  2520  002EE2  A4D8               	btfss	status,2,c
  2521  002EE4  D7E3               	goto	l7599
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 
      +                          1378:     return nout;
  2525  002EE6  C0DF  F0BA         	movff	_nout,?_vfprintf
  2526  002EEA  C0E0  F0BB         	movff	_nout+1,?_vfprintf+1
  2527                           
  2528                           ; BSR set to: 0
  2529  002EEE  0012               	return		;funcret
  2530  002EF0                     __end_of_vfprintf:
  2531                           	opt callstack 0
  2532                           
  2533 ;; *************** function _vfpfcnvrt *****************
  2534 ;; Defined at:
  2535 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  2538 ;;		 -> sprintf@f(6), NULL(0), 
  2539 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  2540 ;;		 -> vfprintf@cfmt(2), 
  2541 ;;  ap              2   76[COMRAM] PTR PTR void 
  2542 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  llu             8   64[BANK0 ] unsigned long long 
  2545 ;;  ll              8   56[BANK0 ] long long 
  2546 ;;  f               4   82[BANK0 ] long long 
  2547 ;;  ct              3   86[BANK0 ] unsigned char [3]
  2548 ;;  vp              3    0        PTR void 
  2549 ;;  done            2   74[BANK0 ] int 
  2550 ;;  cp              2   72[BANK0 ] PTR unsigned char 
  2551 ;;		 -> ?_printf(2), ?_sprintf(2), STR_60(9), STR_58(9), 
  2552 ;;		 -> STR_56(8), STR_54(9), STR_52(8), STR_50(9), 
  2553 ;;		 -> STR_48(8), STR_46(3), STR_44(10), STR_42(10), 
  2554 ;;		 -> STR_40(9), STR_38(11), STR_36(8), STR_34(6), 
  2555 ;;		 -> STR_32(6), STR_30(5), STR_28(7), STR_26(7), 
  2556 ;;		 -> STR_24(9), STR_22(8), day_string(20), rtc_get_time@mo(20), 
  2557 ;;		 -> getReading@outT(5), temperature_read(5), getReading@outH(5), getReading@rh_code(4), 
  2558 ;;  i               2    0        int 
  2559 ;;  c               1   89[BANK0 ] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  2   72[COMRAM] int 
  2562 ;; Registers used:
  2563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2569 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Totals:        10      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;Total ram usage:       44 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:   10
  2576 ;; This function calls:
  2577 ;;		_atoi
  2578 ;;		_ctoa
  2579 ;;		_dtoa
  2580 ;;		_efgtoa
  2581 ;;		_fputc
  2582 ;;		_isdigit
  2583 ;;		_isupper
  2584 ;;		_stoa
  2585 ;;		_strncmp
  2586 ;;		_tolower
  2587 ;;		_xtoa
  2588 ;; This function is called by:
  2589 ;;		_vfprintf
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text4
  2594  0009EA                     __ptext4:
  2595                           	opt callstack 0
  2596  0009EA                     _vfpfcnvrt:
  2597                           	opt callstack 17
  2598                           
  2599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 670: static int vfpfcnvrt(FILE *fp, char *fmt[], v
      +                          a_list ap);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 6
      +                          71: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 671: {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 672:     ch
      +                          ar c, *cp, ct[3];
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;incstack = 0
  2603  0009EA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2604  0009EE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2605  0009F2  CFDE FFF6          	movff	postinc2,tblptrl
  2606  0009F6  CFDD FFF7          	movff	postdec2,tblptrh
  2607  0009FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2608  0009FA  6AF8               	clrf	tblptru,c
  2609  0009FC                     	endif
  2610  0009FC                     	if	0	;tblptru may be non-zero
  2611  0009FC                     	endif
  2612  0009FC  0008               	tblrd		*
  2613  0009FE  50F5               	movf	tablat,w,c
  2614  000A00  0A25               	xorlw	37
  2615  000A02  A4D8               	btfss	status,2,c
  2616  000A04  D39A               	goto	l7577
  2617                           
  2618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 68
      +                          1:         ++*fmt;
  2619  000A06  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2620  000A0A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2621  000A0E  2ADE               	incf	postinc2,f,c
  2622  000A10  0E00               	movlw	0
  2623  000A12  22DD               	addwfc	postdec2,f,c
  2624                           
  2625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\d
      +                          oprnt.c: 683:         flags = width = 0;
  2626  000A14  0E00               	movlw	0
  2627  000A16  0100               	movlb	0	; () banked
  2628  000A18  6FE2               	movwf	(_width+1)& (0+255),b
  2629  000A1A  0E00               	movlw	0
  2630  000A1C  6FE1               	movwf	_width& (0+255),b
  2631  000A1E  C0E1  F057         	movff	_width,_flags
  2632  000A22  C0E2  F058         	movff	_width+1,_flags+1
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           684:         prec = -1;
  2636  000A26  69E3               	setf	_prec& (0+255),b
  2637  000A28  69E4               	setf	(_prec+1)& (0+255),b
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 
      +                          688:         done = 0;
  2641  000A2A  0E00               	movlw	0
  2642  000A2C  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2643  000A2E  0E00               	movlw	0
  2644  000A30  D014               	goto	L1
  2645  000A32                     l7415:
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 692:                     flags |= (1 << 0);
  2649  000A32  8057               	bsf	_flags,0,c
  2650  000A34                     l7417:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 693:                     ++*fmt;
  2654  000A34  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2655  000A38  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2656  000A3C  2ADE               	incf	postinc2,f,c
  2657  000A3E  0E00               	movlw	0
  2658  000A40  22DD               	addwfc	postdec2,f,c
  2659                           
  2660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\d
      +                          oprnt.c: 694:                     break;
  2661  000A42  D02F               	goto	l7441
  2662  000A44                     l7419:
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 696:                     flags |= (1 << 1);
  2666  000A44  8257               	bsf	_flags,1,c
  2667  000A46  D7F6               	goto	l7417
  2668  000A48                     l7423:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 700:                     flags |= (1 << 2);
  2672  000A48  8457               	bsf	_flags,2,c
  2673  000A4A  D7F4               	goto	l7417
  2674  000A4C                     l7427:
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 704:                     flags |= (1 << 3);
  2678  000A4C  8657               	bsf	_flags,3,c
  2679  000A4E  D7F2               	goto	l7417
  2680  000A50                     l7431:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 708:                     flags |= (1 << 4);
  2684  000A50  8857               	bsf	_flags,4,c
  2685  000A52  D7F0               	goto	l7417
  2686  000A54                     l7435:
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 712:                     done = 1;
  2690  000A54  0E00               	movlw	0
  2691  000A56  6FAB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2692  000A58  0E01               	movlw	1
  2693  000A5A                     L1:
  2694  000A5A  6FAA               	movwf	vfpfcnvrt@done& (0+255),b
  2695                           
  2696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\d
      +                          oprnt.c: 713:                     break;
  2697  000A5C  D022               	goto	l7441
  2698  000A5E                     l7439:
  2699                           
  2700                           ; BSR set to: 0
  2701  000A5E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702  000A62  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703  000A66  CFDE FFF6          	movff	postinc2,tblptrl
  2704  000A6A  CFDD FFF7          	movff	postdec2,tblptrh
  2705  000A6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2706  000A6E  6AF8               	clrf	tblptru,c
  2707  000A70                     	endif
  2708  000A70                     	if	0	;tblptru may be non-zero
  2709  000A70                     	endif
  2710  000A70  0008               	tblrd		*
  2711  000A72  50F5               	movf	tablat,w,c
  2712  000A74  6E4F               	movwf	??_vfpfcnvrt& (0+255),c
  2713  000A76  6A50               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2714                           
  2715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2716                           ; Switch size 1, requested type "simple"
  2717                           ; Number of cases is 1, Range of values is 0 to 0
  2718                           ; switch strategies available:
  2719                           ; Name         Instructions Cycles
  2720                           ; simple_byte            4     3 (average)
  2721                           ;	Chosen strategy is simple_byte
  2722  000A78  5050               	movf	??_vfpfcnvrt+1,w,c
  2723  000A7A  0A00               	xorlw	0	; case 0
  2724  000A7C  A4D8               	btfss	status,2,c
  2725  000A7E  D7EA               	goto	l7435
  2726                           
  2727                           ; BSR set to: 0
  2728                           ; Switch size 1, requested type "simple"
  2729                           ; Number of cases is 5, Range of values is 32 to 48
  2730                           ; switch strategies available:
  2731                           ; Name         Instructions Cycles
  2732                           ; simple_byte           16     9 (average)
  2733                           ;	Chosen strategy is simple_byte
  2734  000A80  504F               	movf	??_vfpfcnvrt,w,c
  2735  000A82  0A20               	xorlw	32	; case 32
  2736  000A84  B4D8               	btfsc	status,2,c
  2737  000A86  D7E2               	goto	l7427
  2738  000A88  0A03               	xorlw	3	; case 35
  2739  000A8A  B4D8               	btfsc	status,2,c
  2740  000A8C  D7E1               	goto	l7431
  2741  000A8E  0A08               	xorlw	8	; case 43
  2742  000A90  B4D8               	btfsc	status,2,c
  2743  000A92  D7DA               	goto	l7423
  2744  000A94  0A06               	xorlw	6	; case 45
  2745  000A96  B4D8               	btfsc	status,2,c
  2746  000A98  D7CC               	goto	l7415
  2747  000A9A  0A1D               	xorlw	29	; case 48
  2748  000A9C  B4D8               	btfsc	status,2,c
  2749  000A9E  D7D2               	goto	l7419
  2750  000AA0  D7D9               	goto	l7435
  2751  000AA2                     l7441:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 689:         while (!done) {
  2755  000AA2  51AA               	movf	vfpfcnvrt@done& (0+255),w,b
  2756  000AA4  11AB               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2757  000AA6  B4D8               	btfsc	status,2,c
  2758  000AA8  D7DA               	goto	l7439
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\com
      +                          mon\doprnt.c: 716:         if (flags & (1 << 0)) {
  2762  000AAA  B057               	btfsc	_flags,0,c
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\com
      +                          mon\doprnt.c: 717:             flags &= ~(1 << 1);
  2766  000AAC  9257               	bcf	_flags,1,c
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\com
      +                          mon\doprnt.c: 723:         if ((*fmt)[0] == '*') {
  2770  000AAE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2771  000AB2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2772  000AB6  CFDE FFF6          	movff	postinc2,tblptrl
  2773  000ABA  CFDD FFF7          	movff	postdec2,tblptrh
  2774  000ABE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2775  000ABE  6AF8               	clrf	tblptru,c
  2776  000AC0                     	endif
  2777  000AC0                     	if	0	;tblptru may be non-zero
  2778  000AC0                     	endif
  2779  000AC0  0008               	tblrd		*
  2780  000AC2  50F5               	movf	tablat,w,c
  2781  000AC4  0A2A               	xorlw	42
  2782  000AC6  A4D8               	btfss	status,2,c
  2783  000AC8  D023               	goto	l7453
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 724:             ++*fmt;
  2787  000ACA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2788  000ACE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2789  000AD2  2ADE               	incf	postinc2,f,c
  2790  000AD4  0E00               	movlw	0
  2791  000AD6  22DD               	addwfc	postdec2,f,c
  2792                           
  2793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:             width = (*(int *)__va_arg(*(
      +                          int **)ap, (int)0));
  2794  000AD8  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2795  000ADC  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2796  000AE0  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2797  000AE4  0E02               	movlw	2
  2798  000AE6  26DE               	addwf	postinc2,f,c
  2799  000AE8  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2800  000AEC  0E00               	movlw	0
  2801  000AEE  22DD               	addwfc	postdec2,f,c
  2802  000AF0  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2803  000AF4  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2804  000AF8  CFDE F0E1          	movff	postinc2,_width
  2805  000AFC  CFDD F0E2          	movff	postdec2,_width+1
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 726:             if (width < 0) {
  2809  000B00  AFE2               	btfss	(_width+1)& (0+255),7,b
  2810  000B02  D041               	goto	u10120
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 727:                 flags |= (1 << 0);
  2814  000B04  8057               	bsf	_flags,0,c
  2815                           
  2816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\com
      +                          mon\doprnt.c: 728:                 width = -width;
  2817  000B06  6DE1               	negf	_width& (0+255),b
  2818  000B08  1FE2               	comf	(_width+1)& (0+255),f,b
  2819  000B0A  B0D8               	btfsc	status,0,c
  2820  000B0C  2BE2               	incf	(_width+1)& (0+255),f,b
  2821  000B0E  D03B               	goto	u10120
  2822  000B10                     l7453:
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\com
      +                          mon\doprnt.c: 731:             width = atoi(*fmt);
  2826  000B10  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2827  000B14  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2828  000B18  CFDE F00C          	movff	postinc2,atoi@s
  2829  000B1C  CFDD F00D          	movff	postdec2,atoi@s+1
  2830  000B20  EC3F  F010         	call	_atoi	;wreg free
  2831  000B24  C00C  F0E1         	movff	?_atoi,_width
  2832  000B28  C00D  F0E2         	movff	?_atoi+1,_width+1
  2833                           
  2834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {;C:\Program F
      +                          iles (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:             while (
      +                          (0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2835  000B2C  D007               	goto	l7457
  2836  000B2E                     l7455:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 733:                 ++*fmt;
  2840  000B2E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2841  000B32  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2842  000B36  2ADE               	incf	postinc2,f,c
  2843  000B38  0E00               	movlw	0
  2844  000B3A  22DD               	addwfc	postdec2,f,c
  2845  000B3C                     l7457:
  2846  000B3C  0ED0               	movlw	208
  2847  000B3E  6E4F               	movwf	??_vfpfcnvrt& (0+255),c
  2848  000B40  0EFF               	movlw	255
  2849  000B42  6E50               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2850  000B44  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2851  000B48  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2852  000B4C  CFDE FFF6          	movff	postinc2,tblptrl
  2853  000B50  CFDD FFF7          	movff	postdec2,tblptrh
  2854  000B54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2855  000B54  6AF8               	clrf	tblptru,c
  2856  000B56                     	endif
  2857  000B56                     	if	0	;tblptru may be non-zero
  2858  000B56                     	endif
  2859  000B56  0008               	tblrd		*
  2860  000B58  50F5               	movf	tablat,w,c
  2861  000B5A  6E51               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2862  000B5C  6A52               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2863  000B5E  504F               	movf	??_vfpfcnvrt,w,c
  2864  000B60  2651               	addwf	??_vfpfcnvrt+2,f,c
  2865  000B62  5050               	movf	??_vfpfcnvrt+1,w,c
  2866  000B64  2252               	addwfc	??_vfpfcnvrt+3,f,c
  2867  000B66  5052               	movf	??_vfpfcnvrt+3,w,c
  2868  000B68  E106               	bnz	u10100
  2869  000B6A  0E0A               	movlw	10
  2870  000B6C  5C51               	subwf	??_vfpfcnvrt+2,w,c
  2871  000B6E  B0D8               	btfsc	status,0,c
  2872  000B70  D002               	goto	u10100
  2873  000B72  0E01               	movlw	1
  2874  000B74  D001               	goto	u10110
  2875  000B76                     u10100:
  2876  000B76  0E00               	movlw	0
  2877  000B78                     u10110:
  2878  000B78  0100               	movlb	0	; () banked
  2879  000B7A  6FAC               	movwf	_vfpfcnvrt$1439& (0+255),b
  2880  000B7C  6BAD               	clrf	(_vfpfcnvrt$1439+1)& (0+255),b
  2881                           
  2882                           ; BSR set to: 0
  2883  000B7E  51AC               	movf	_vfpfcnvrt$1439& (0+255),w,b
  2884  000B80  11AD               	iorwf	(_vfpfcnvrt$1439+1)& (0+255),w,b
  2885  000B82  A4D8               	btfss	status,2,c
  2886  000B84  D7D4               	goto	l7455
  2887  000B86                     u10120:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\com
      +                          mon\doprnt.c: 740:         if ((*fmt)[0] == '.') {
  2891  000B86  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2892  000B8A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2893  000B8E  CFDE FFF6          	movff	postinc2,tblptrl
  2894  000B92  CFDD FFF7          	movff	postdec2,tblptrh
  2895  000B96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2896  000B96  6AF8               	clrf	tblptru,c
  2897  000B98                     	endif
  2898  000B98                     	if	0	;tblptru may be non-zero
  2899  000B98                     	endif
  2900  000B98  0008               	tblrd		*
  2901  000B9A  50F5               	movf	tablat,w,c
  2902  000B9C  0A2E               	xorlw	46
  2903  000B9E  A4D8               	btfss	status,2,c
  2904  000BA0  D070               	goto	u10170
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt
      +                          .c: 741:             prec = 0;
  2908  000BA2  0E00               	movlw	0
  2909  000BA4  6FE4               	movwf	(_prec+1)& (0+255),b
  2910  000BA6  0E00               	movlw	0
  2911  000BA8  6FE3               	movwf	_prec& (0+255),b
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 742:             ++*fmt;
  2915  000BAA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2916  000BAE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2917  000BB2  2ADE               	incf	postinc2,f,c
  2918  000BB4  0E00               	movlw	0
  2919  000BB6  22DD               	addwfc	postdec2,f,c
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 743:             if ((*fmt)[0] == '*') {
  2923  000BB8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2924  000BBC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2925  000BC0  CFDE FFF6          	movff	postinc2,tblptrl
  2926  000BC4  CFDD FFF7          	movff	postdec2,tblptrh
  2927  000BC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2928  000BC8  6AF8               	clrf	tblptru,c
  2929  000BCA                     	endif
  2930  000BCA                     	if	0	;tblptru may be non-zero
  2931  000BCA                     	endif
  2932  000BCA  0008               	tblrd		*
  2933  000BCC  50F5               	movf	tablat,w,c
  2934  000BCE  0A2A               	xorlw	42
  2935  000BD0  A4D8               	btfss	status,2,c
  2936  000BD2  D01C               	goto	l7473
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 744:                 ++*fmt;
  2940  000BD4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2941  000BD8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2942  000BDC  2ADE               	incf	postinc2,f,c
  2943  000BDE  0E00               	movlw	0
  2944  000BE0  22DD               	addwfc	postdec2,f,c
  2945                           
  2946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:                 prec = (*(int *)__va_
      +                          arg(*(int **)ap, (int)0));
  2947  000BE2  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2948  000BE6  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2949  000BEA  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2950  000BEE  0E02               	movlw	2
  2951  000BF0  26DE               	addwf	postinc2,f,c
  2952  000BF2  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2953  000BF6  0E00               	movlw	0
  2954  000BF8  22DD               	addwfc	postdec2,f,c
  2955  000BFA  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2956  000BFE  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2957  000C02  CFDE F0E3          	movff	postinc2,_prec
  2958  000C06  CFDD F0E4          	movff	postdec2,_prec+1
  2959                           
  2960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 746:             } else {
  2961  000C0A  D03B               	goto	u10170
  2962  000C0C                     l7473:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 747:                 prec = atoi(*fmt);
  2966  000C0C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2967  000C10  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2968  000C14  CFDE F00C          	movff	postinc2,atoi@s
  2969  000C18  CFDD F00D          	movff	postdec2,atoi@s+1
  2970  000C1C  EC3F  F010         	call	_atoi	;wreg free
  2971  000C20  C00C  F0E3         	movff	?_atoi,_prec
  2972  000C24  C00D  F0E4         	movff	?_atoi+1,_prec+1
  2973                           
  2974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {;C:\Progr
      +                          am Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:                
      +                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2975  000C28  D007               	goto	l7477
  2976  000C2A                     l7475:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 749:                     ++*fmt;
  2980  000C2A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2981  000C2E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2982  000C32  2ADE               	incf	postinc2,f,c
  2983  000C34  0E00               	movlw	0
  2984  000C36  22DD               	addwfc	postdec2,f,c
  2985  000C38                     l7477:
  2986  000C38  0ED0               	movlw	208
  2987  000C3A  6E4F               	movwf	??_vfpfcnvrt& (0+255),c
  2988  000C3C  0EFF               	movlw	255
  2989  000C3E  6E50               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2990  000C40  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2991  000C44  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2992  000C48  CFDE FFF6          	movff	postinc2,tblptrl
  2993  000C4C  CFDD FFF7          	movff	postdec2,tblptrh
  2994  000C50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2995  000C50  6AF8               	clrf	tblptru,c
  2996  000C52                     	endif
  2997  000C52                     	if	0	;tblptru may be non-zero
  2998  000C52                     	endif
  2999  000C52  0008               	tblrd		*
  3000  000C54  50F5               	movf	tablat,w,c
  3001  000C56  6E51               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3002  000C58  6A52               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3003  000C5A  504F               	movf	??_vfpfcnvrt,w,c
  3004  000C5C  2651               	addwf	??_vfpfcnvrt+2,f,c
  3005  000C5E  5050               	movf	??_vfpfcnvrt+1,w,c
  3006  000C60  2252               	addwfc	??_vfpfcnvrt+3,f,c
  3007  000C62  5052               	movf	??_vfpfcnvrt+3,w,c
  3008  000C64  E106               	bnz	u10150
  3009  000C66  0E0A               	movlw	10
  3010  000C68  5C51               	subwf	??_vfpfcnvrt+2,w,c
  3011  000C6A  B0D8               	btfsc	status,0,c
  3012  000C6C  D002               	goto	u10150
  3013  000C6E  0E01               	movlw	1
  3014  000C70  D001               	goto	u10160
  3015  000C72                     u10150:
  3016  000C72  0E00               	movlw	0
  3017  000C74                     u10160:
  3018  000C74  0100               	movlb	0	; () banked
  3019  000C76  6FAE               	movwf	_vfpfcnvrt$1440& (0+255),b
  3020  000C78  6BAF               	clrf	(_vfpfcnvrt$1440+1)& (0+255),b
  3021                           
  3022                           ; BSR set to: 0
  3023  000C7A  51AE               	movf	_vfpfcnvrt$1440& (0+255),w,b
  3024  000C7C  11AF               	iorwf	(_vfpfcnvrt$1440+1)& (0+255),w,b
  3025  000C7E  A4D8               	btfss	status,2,c
  3026  000C80  D7D4               	goto	l7475
  3027  000C82                     u10170:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c99\common\doprnt.c: 757:         ct[0] = tolower((int)(*fmt)[0]);
  3031  000C82  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3032  000C86  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3033  000C8A  CFDE FFF6          	movff	postinc2,tblptrl
  3034  000C8E  CFDD FFF7          	movff	postdec2,tblptrh
  3035  000C92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3036  000C92  6AF8               	clrf	tblptru,c
  3037  000C94                     	endif
  3038  000C94                     	if	0	;tblptru may be non-zero
  3039  000C94                     	endif
  3040  000C94  0008               	tblrd		*
  3041  000C96  50F5               	movf	tablat,w,c
  3042  000C98  6E0B               	movwf	tolower@c,c
  3043  000C9A  6A0C               	clrf	tolower@c+1,c
  3044  000C9C  ECCA  F017         	call	_tolower	;wreg free
  3045  000CA0  500B               	movf	?_tolower,w,c
  3046  000CA2  0100               	movlb	0	; () banked
  3047  000CA4  6FB6               	movwf	vfpfcnvrt@ct& (0+255),b
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 758:         if (ct[0]) {
  3051  000CA6  51B6               	movf	vfpfcnvrt@ct& (0+255),w,b
  3052  000CA8  B4D8               	btfsc	status,2,c
  3053  000CAA  D037               	goto	l7493
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\so
      +                          urces\c99\common\doprnt.c: 759:             ct[1] = tolower((int)(*fmt)[1]);
  3057  000CAC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3058  000CB0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3059  000CB4  CFDE F04F          	movff	postinc2,??_vfpfcnvrt
  3060  000CB8  CFDD F050          	movff	postdec2,??_vfpfcnvrt+1
  3061  000CBC  0E01               	movlw	1
  3062  000CBE  264F               	addwf	??_vfpfcnvrt,f,c
  3063  000CC0  0E00               	movlw	0
  3064  000CC2  2250               	addwfc	??_vfpfcnvrt+1,f,c
  3065  000CC4  C04F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3066  000CC8  C050  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3067  000CCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3068  000CCC  6AF8               	clrf	tblptru,c
  3069  000CCE                     	endif
  3070  000CCE                     	if	0	;tblptru may be non-zero
  3071  000CCE                     	endif
  3072  000CCE  0008               	tblrd		*
  3073  000CD0  50F5               	movf	tablat,w,c
  3074  000CD2  6E0B               	movwf	tolower@c,c
  3075  000CD4  6A0C               	clrf	tolower@c+1,c
  3076  000CD6  ECCA  F017         	call	_tolower	;wreg free
  3077  000CDA  500B               	movf	?_tolower,w,c
  3078  000CDC  0100               	movlb	0	; () banked
  3079  000CDE  6FB7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 760:             if (ct[1]) {
  3083  000CE0  51B7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3084  000CE2  B4D8               	btfsc	status,2,c
  3085  000CE4  D01A               	goto	l7493
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 761:                 ct[2] = tolower((int)(*fmt)[2]);
  3089  000CE6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3090  000CEA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3091  000CEE  CFDE F04F          	movff	postinc2,??_vfpfcnvrt
  3092  000CF2  CFDD F050          	movff	postdec2,??_vfpfcnvrt+1
  3093  000CF6  0E02               	movlw	2
  3094  000CF8  264F               	addwf	??_vfpfcnvrt,f,c
  3095  000CFA  0E00               	movlw	0
  3096  000CFC  2250               	addwfc	??_vfpfcnvrt+1,f,c
  3097  000CFE  C04F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3098  000D02  C050  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3099  000D06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3100  000D06  6AF8               	clrf	tblptru,c
  3101  000D08                     	endif
  3102  000D08                     	if	0	;tblptru may be non-zero
  3103  000D08                     	endif
  3104  000D08  0008               	tblrd		*
  3105  000D0A  50F5               	movf	tablat,w,c
  3106  000D0C  6E0B               	movwf	tolower@c,c
  3107  000D0E  6A0C               	clrf	tolower@c+1,c
  3108  000D10  ECCA  F017         	call	_tolower	;wreg free
  3109  000D14  500B               	movf	?_tolower,w,c
  3110  000D16  0100               	movlb	0	; () banked
  3111  000D18  6FB8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3112  000D1A                     l7493:
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 792:         if (*fmt[0] == 'c') {
  3116  000D1A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3117  000D1E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3118  000D22  CFDE FFF6          	movff	postinc2,tblptrl
  3119  000D26  CFDD FFF7          	movff	postdec2,tblptrh
  3120  000D2A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3121  000D2A  6AF8               	clrf	tblptru,c
  3122  000D2C                     	endif
  3123  000D2C                     	if	0	;tblptru may be non-zero
  3124  000D2C                     	endif
  3125  000D2C  0008               	tblrd		*
  3126  000D2E  50F5               	movf	tablat,w,c
  3127  000D30  0A63               	xorlw	99
  3128  000D32  A4D8               	btfss	status,2,c
  3129  000D34  D026               	goto	l7501
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 793:             ++*fmt;
  3133  000D36  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3134  000D3A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3135  000D3E  2ADE               	incf	postinc2,f,c
  3136  000D40  0E00               	movlw	0
  3137  000D42  22DD               	addwfc	postdec2,f,c
  3138                           
  3139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:             c = (unsigned cha
      +                          r)(*(int *)__va_arg(*(int **)ap, (int)0));
  3140  000D44  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3141  000D48  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3142  000D4C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3143  000D50  0E02               	movlw	2
  3144  000D52  26DE               	addwf	postinc2,f,c
  3145  000D54  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3146  000D58  0E00               	movlw	0
  3147  000D5A  22DD               	addwfc	postdec2,f,c
  3148  000D5C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3149  000D60  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3150  000D64  50DF               	movf	indf2,w,c
  3151  000D66  6FB9               	movwf	vfpfcnvrt@c& (0+255),b
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\com
      +                          mon\doprnt.c: 795:             return ctoa(fp, c);
  3155  000D68  C049  F022         	movff	vfpfcnvrt@fp,ctoa@fp
  3156  000D6C  C04A  F023         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3157  000D70  C0B9  F024         	movff	vfpfcnvrt@c,ctoa@c
  3158  000D74  ECA2  F017         	call	_ctoa	;wreg free
  3159  000D78  C022  F049         	movff	?_ctoa,?_vfpfcnvrt
  3160  000D7C  C023  F04A         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3161  000D80  0012               	return	
  3162  000D82                     l7501:
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {;C:\Program Files (x86)\Microchip\xc8\v2.05
      +                          \pic\sources\c99\common\doprnt.c: 825:         if ((*fmt[0] == 'd') || (*fmt[0] == 'i'))
      +                           {
  3166  000D82  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3167  000D86  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3168  000D8A  CFDE FFF6          	movff	postinc2,tblptrl
  3169  000D8E  CFDD FFF7          	movff	postdec2,tblptrh
  3170  000D92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3171  000D92  6AF8               	clrf	tblptru,c
  3172  000D94                     	endif
  3173  000D94                     	if	0	;tblptru may be non-zero
  3174  000D94                     	endif
  3175  000D94  0008               	tblrd		*
  3176  000D96  50F5               	movf	tablat,w,c
  3177  000D98  0A64               	xorlw	100
  3178  000D9A  B4D8               	btfsc	status,2,c
  3179  000D9C  D00E               	goto	u10220
  3180                           
  3181                           ; BSR set to: 0
  3182  000D9E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3183  000DA2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3184  000DA6  CFDE FFF6          	movff	postinc2,tblptrl
  3185  000DAA  CFDD FFF7          	movff	postdec2,tblptrh
  3186  000DAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3187  000DAE  6AF8               	clrf	tblptru,c
  3188  000DB0                     	endif
  3189  000DB0                     	if	0	;tblptru may be non-zero
  3190  000DB0                     	endif
  3191  000DB0  0008               	tblrd		*
  3192  000DB2  50F5               	movf	tablat,w,c
  3193  000DB4  0A69               	xorlw	105
  3194  000DB6  A4D8               	btfss	status,2,c
  3195  000DB8  D03F               	goto	l7511
  3196  000DBA                     u10220:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 827:             ++*fmt;
  3200  000DBA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3201  000DBE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3202  000DC2  2ADE               	incf	postinc2,f,c
  3203  000DC4  0E00               	movlw	0
  3204  000DC6  22DD               	addwfc	postdec2,f,c
  3205                           
  3206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));;C:\Program Files (x86)\Mi
      +                          crochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:             ll = (long long)(*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  3207  000DC8  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3208  000DCC  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3209  000DD0  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3210  000DD4  0E02               	movlw	2
  3211  000DD6  26DE               	addwf	postinc2,f,c
  3212  000DD8  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3213  000DDC  0E00               	movlw	0
  3214  000DDE  22DD               	addwfc	postdec2,f,c
  3215  000DE0  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3216  000DE4  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3217  000DE8  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  3218  000DEC  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  3219  000DF0  0E00               	movlw	0
  3220  000DF2  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3221  000DF4  0EFF               	movlw	-1
  3222  000DF6  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3223  000DF8  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3224  000DFA  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3225  000DFC  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3226  000DFE  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3227  000E00  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 830:             return dtoa(fp, ll);
  3231  000E02  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  3232  000E06  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3233  000E0A  C098  F024         	movff	vfpfcnvrt@ll,dtoa@d
  3234  000E0E  C099  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3235  000E12  C09A  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3236  000E16  C09B  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3237  000E1A  C09C  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3238  000E1E  C09D  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3239  000E22  C09E  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3240  000E26  C09F  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3241  000E2A  EC2B  F00D         	call	_dtoa	;wreg free
  3242  000E2E  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  3243  000E32  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3244  000E36  0012               	return	
  3245  000E38                     l7511:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 920:         if (ct[0] == 'f') {
  3249  000E38  0E66               	movlw	102
  3250  000E3A  19B6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3251  000E3C  A4D8               	btfss	status,2,c
  3252  000E3E  D040               	goto	l7523
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\d
      +                          oprnt.c: 922:             c = (*fmt)[0];
  3256  000E40  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3257  000E44  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3258  000E48  CFDE FFF6          	movff	postinc2,tblptrl
  3259  000E4C  CFDD FFF7          	movff	postdec2,tblptrh
  3260  000E50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3261  000E50  6AF8               	clrf	tblptru,c
  3262  000E52                     	endif
  3263  000E52                     	if	0	;tblptru may be non-zero
  3264  000E52                     	endif
  3265  000E52  0008               	tblrd		*
  3266  000E54  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 923:             ++*fmt;
  3270  000E58  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3271  000E5C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3272  000E60  2ADE               	incf	postinc2,f,c
  3273  000E62  0E00               	movlw	0
  3274  000E64  22DD               	addwfc	postdec2,f,c
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));;C:\Program File
      +                          s (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:             f = (long 
      +                          double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3278  000E66  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3279  000E6A  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3280  000E6E  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3281  000E72  0E04               	movlw	4
  3282  000E74  26DE               	addwf	postinc2,f,c
  3283  000E76  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3284  000E7A  0E00               	movlw	0
  3285  000E7C  22DD               	addwfc	postdec2,f,c
  3286  000E7E  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3287  000E82  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3288  000E86  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  3289  000E8A  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  3290  000E8E  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  3291  000E92  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  3292  000E96                     l7519:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c9
      +                          9\common\doprnt.c: 926:             return efgtoa(fp, f, c);
  3296  000E96  C049  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  3297  000E9A  C04A  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3298  000E9E  C0B2  F034         	movff	vfpfcnvrt@f,efgtoa@f
  3299  000EA2  C0B3  F035         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3300  000EA6  C0B4  F036         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3301  000EAA  C0B5  F037         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3302  000EAE  C0B9  F038         	movff	vfpfcnvrt@c,efgtoa@c
  3303  000EB2  EC36  F000         	call	_efgtoa	;wreg free
  3304  000EB6  C032  F049         	movff	?_efgtoa,?_vfpfcnvrt
  3305  000EBA  C033  F04A         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3306  000EBE  0012               	return	
  3307  000EC0                     l7523:
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {;C:\Program Files (x86)\M
      +                          icrochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:         if (!strncmp(ct, "lf", 
      +                          ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3311  000EC0  0EB6               	movlw	low vfpfcnvrt@ct
  3312  000EC2  6E05               	movwf	strncmp@_l,c
  3313  000EC4  0E00               	movlw	high vfpfcnvrt@ct
  3314  000EC6  6E06               	movwf	strncmp@_l+1,c
  3315  000EC8  0EF6               	movlw	low STR_69
  3316  000ECA  6E07               	movwf	strncmp@_r,c
  3317  000ECC  0EFF               	movlw	high STR_69
  3318  000ECE  6E08               	movwf	strncmp@_r+1,c
  3319  000ED0  0E00               	movlw	0
  3320  000ED2  6E0A               	movwf	strncmp@n+1,c
  3321  000ED4  0E02               	movlw	2
  3322  000ED6  6E09               	movwf	strncmp@n,c
  3323  000ED8  EC19  F014         	call	_strncmp	;wreg free
  3324  000EDC  5005               	movf	?_strncmp,w,c
  3325  000EDE  1006               	iorwf	?_strncmp+1,w,c
  3326  000EE0  A4D8               	btfss	status,2,c
  3327  000EE2  D058               	goto	l7539
  3328                           
  3329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3330  000EE4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3331  000EE8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3332  000EEC  CFDE F04F          	movff	postinc2,??_vfpfcnvrt
  3333  000EF0  CFDD F050          	movff	postdec2,??_vfpfcnvrt+1
  3334  000EF4  0E01               	movlw	1
  3335  000EF6  264F               	addwf	??_vfpfcnvrt,f,c
  3336  000EF8  0E00               	movlw	0
  3337  000EFA  2250               	addwfc	??_vfpfcnvrt+1,f,c
  3338  000EFC  C04F  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3339  000F00  C050  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3340  000F04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3341  000F04  6AF8               	clrf	tblptru,c
  3342  000F06                     	endif
  3343  000F06                     	if	0	;tblptru may be non-zero
  3344  000F06                     	endif
  3345  000F06  0008               	tblrd		*
  3346  000F08  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  3347  000F0C  0EBF               	movlw	191
  3348  000F0E  6E4F               	movwf	??_vfpfcnvrt& (0+255),c
  3349  000F10  0EFF               	movlw	255
  3350  000F12  6E50               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3351  000F14  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3352  000F18  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3353  000F1C  CFDE FFF6          	movff	postinc2,tblptrl
  3354  000F20  CFDD FFF7          	movff	postdec2,tblptrh
  3355  000F24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3356  000F24  6AF8               	clrf	tblptru,c
  3357  000F26                     	endif
  3358  000F26                     	if	0	;tblptru may be non-zero
  3359  000F26                     	endif
  3360  000F26  0008               	tblrd		*
  3361  000F28  50F5               	movf	tablat,w,c
  3362  000F2A  6E51               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3363  000F2C  6A52               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3364  000F2E  504F               	movf	??_vfpfcnvrt,w,c
  3365  000F30  2651               	addwf	??_vfpfcnvrt+2,f,c
  3366  000F32  5050               	movf	??_vfpfcnvrt+1,w,c
  3367  000F34  2252               	addwfc	??_vfpfcnvrt+3,f,c
  3368  000F36  5052               	movf	??_vfpfcnvrt+3,w,c
  3369  000F38  E106               	bnz	u10250
  3370  000F3A  0E1A               	movlw	26
  3371  000F3C  5C51               	subwf	??_vfpfcnvrt+2,w,c
  3372  000F3E  B0D8               	btfsc	status,0,c
  3373  000F40  D002               	goto	u10250
  3374  000F42  0E01               	movlw	1
  3375  000F44  D001               	goto	u10260
  3376  000F46                     u10250:
  3377  000F46  0E00               	movlw	0
  3378  000F48                     u10260:
  3379  000F48  0100               	movlb	0	; () banked
  3380  000F4A  6FB0               	movwf	_vfpfcnvrt$1446& (0+255),b
  3381  000F4C  6BB1               	clrf	(_vfpfcnvrt$1446+1)& (0+255),b
  3382                           
  3383                           ; BSR set to: 0
  3384  000F4E  51B0               	movf	_vfpfcnvrt$1446& (0+255),w,b
  3385  000F50  11B1               	iorwf	(_vfpfcnvrt$1446+1)& (0+255),w,b
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:                 f 
      +                          = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3389                           
  3390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 933:             } else {
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));;C:\Progra
      +                          m Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:                 
      +                          f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3394  000F52  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3395  000F56  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3396  000F5A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3397  000F5E  0E04               	movlw	4
  3398  000F60  26DE               	addwf	postinc2,f,c
  3399  000F62  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3400  000F66  0E00               	movlw	0
  3401  000F68  22DD               	addwfc	postdec2,f,c
  3402  000F6A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3403  000F6E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3404  000F72  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  3405  000F76  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  3406  000F7A  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  3407  000F7E  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 936:             *fmt += ((sizeof("lf")/sizeof("lf
      +                          "[0]))-1);
  3411                           
  3412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                };C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:
      +                                       }
  3413  000F82  0E02               	movlw	2
  3414  000F84  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3415  000F88  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3416  000F8C  26DE               	addwf	postinc2,f,c
  3417  000F8E  0E00               	movlw	0
  3418  000F90  22DD               	addwfc	postdec2,f,c
  3419  000F92  D781               	goto	l7519
  3420  000F94                     l7539:
  3421                           
  3422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\comm
      +                          on\doprnt.c: 1149:         if (*fmt[0] == 's') {
  3423  000F94  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3424  000F98  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3425  000F9C  CFDE FFF6          	movff	postinc2,tblptrl
  3426  000FA0  CFDD FFF7          	movff	postdec2,tblptrh
  3427  000FA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3428  000FA4  6AF8               	clrf	tblptru,c
  3429  000FA6                     	endif
  3430  000FA6                     	if	0	;tblptru may be non-zero
  3431  000FA6                     	endif
  3432  000FA6  0008               	tblrd		*
  3433  000FA8  50F5               	movf	tablat,w,c
  3434  000FAA  0A73               	xorlw	115
  3435  000FAC  A4D8               	btfss	status,2,c
  3436  000FAE  D02A               	goto	l7547
  3437                           
  3438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 1151:             ++*fmt;
  3439  000FB0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3440  000FB4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3441  000FB8  2ADE               	incf	postinc2,f,c
  3442  000FBA  0E00               	movlw	0
  3443  000FBC  22DD               	addwfc	postdec2,f,c
  3444                           
  3445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:             cp = (*(char * *)__v
      +                          a_arg(*(char * **)ap, (char *)0));
  3446  000FBE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3447  000FC2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3448  000FC6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3449  000FCA  0E02               	movlw	2
  3450  000FCC  26DE               	addwf	postinc2,f,c
  3451  000FCE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3452  000FD2  0E00               	movlw	0
  3453  000FD4  22DD               	addwfc	postdec2,f,c
  3454  000FD6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3455  000FDA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3456  000FDE  CFDE F0A8          	movff	postinc2,vfpfcnvrt@cp
  3457  000FE2  CFDD F0A9          	movff	postdec2,vfpfcnvrt@cp+1
  3458                           
  3459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 1154:             return stoa(fp, cp);
  3460  000FE6  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  3461  000FEA  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3462  000FEE  C0A8  F012         	movff	vfpfcnvrt@cp,stoa@s
  3463  000FF2  C0A9  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3464  000FF6  ECBC  F011         	call	_stoa	;wreg free
  3465  000FFA  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  3466  000FFE  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  3467  001002  0012               	return	
  3468  001004                     l7547:
  3469                           
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1274:         if ((*fmt[0] == 'x') || (*fmt[0] == 'X'
      +                          )) {
  3471  001004  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3472  001008  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3473  00100C  CFDE FFF6          	movff	postinc2,tblptrl
  3474  001010  CFDD FFF7          	movff	postdec2,tblptrh
  3475  001014                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3476  001014  6AF8               	clrf	tblptru,c
  3477  001016                     	endif
  3478  001016                     	if	0	;tblptru may be non-zero
  3479  001016                     	endif
  3480  001016  0008               	tblrd		*
  3481  001018  50F5               	movf	tablat,w,c
  3482  00101A  0A78               	xorlw	120
  3483  00101C  B4D8               	btfsc	status,2,c
  3484  00101E  D00E               	goto	u10300
  3485  001020  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3486  001024  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3487  001028  CFDE FFF6          	movff	postinc2,tblptrl
  3488  00102C  CFDD FFF7          	movff	postdec2,tblptrh
  3489  001030                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3490  001030  6AF8               	clrf	tblptru,c
  3491  001032                     	endif
  3492  001032                     	if	0	;tblptru may be non-zero
  3493  001032                     	endif
  3494  001032  0008               	tblrd		*
  3495  001034  50F5               	movf	tablat,w,c
  3496  001036  0A58               	xorlw	88
  3497  001038  A4D8               	btfss	status,2,c
  3498  00103A  D04F               	goto	l7561
  3499  00103C                     u10300:
  3500                           
  3501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 1276:             c = (*fmt)[0];
  3502  00103C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3503  001040  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3504  001044  CFDE FFF6          	movff	postinc2,tblptrl
  3505  001048  CFDD FFF7          	movff	postdec2,tblptrh
  3506  00104C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3507  00104C  6AF8               	clrf	tblptru,c
  3508  00104E                     	endif
  3509  00104E                     	if	0	;tblptru may be non-zero
  3510  00104E                     	endif
  3511  00104E  0008               	tblrd		*
  3512  001050  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  3513                           
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 1277:             ++*fmt;
  3515  001054  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3516  001058  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3517  00105C  2ADE               	incf	postinc2,f,c
  3518  00105E  0E00               	movlw	0
  3519  001060  22DD               	addwfc	postdec2,f,c
  3520                           
  3521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           1278:             llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int *
      +                          *)ap, (unsigned int)0));
  3522  001062  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3523  001066  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3524  00106A  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  3525  00106E  0E02               	movlw	2
  3526  001070  26DE               	addwf	postinc2,f,c
  3527  001072  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  3528  001076  0E00               	movlw	0
  3529  001078  22DD               	addwfc	postdec2,f,c
  3530  00107A  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3531  00107E  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3532  001082  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  3533  001086  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  3534  00108A  C051  F0A0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3535  00108E  C052  F0A1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3536  001092  0100               	movlb	0	; () banked
  3537  001094  6BA2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3538  001096  6BA3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3539  001098  6BA4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3540  00109A  6BA5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3541  00109C  6BA6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3542  00109E  6BA7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c
      +                          99\common\doprnt.c: 1280:             return xtoa(fp, llu, c);
  3546  0010A0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  3547  0010A4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3548  0010A8  C0A0  F024         	movff	vfpfcnvrt@llu,xtoa@d
  3549  0010AC  C0A1  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3550  0010B0  C0A2  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3551  0010B4  C0A3  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3552  0010B8  C0A4  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3553  0010BC  C0A5  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3554  0010C0  C0A6  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3555  0010C4  C0A7  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3556  0010C8  C0B9  F02C         	movff	vfpfcnvrt@c,xtoa@x
  3557  0010CC  EC4D  F00E         	call	_xtoa	;wreg free
  3558  0010D0  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  3559  0010D4  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3560  0010D8  0012               	return	
  3561  0010DA                     l7561:
  3562                           
  3563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 1350:         if ((*fmt)[0] == '%') {
  3564  0010DA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3565  0010DE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3566  0010E2  CFDE FFF6          	movff	postinc2,tblptrl
  3567  0010E6  CFDD FFF7          	movff	postdec2,tblptrh
  3568  0010EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3569  0010EA  6AF8               	clrf	tblptru,c
  3570  0010EC                     	endif
  3571  0010EC                     	if	0	;tblptru may be non-zero
  3572  0010EC                     	endif
  3573  0010EC  0008               	tblrd		*
  3574  0010EE  50F5               	movf	tablat,w,c
  3575  0010F0  0A25               	xorlw	37
  3576  0010F2  A4D8               	btfss	status,2,c
  3577  0010F4  D016               	goto	l7571
  3578                           
  3579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 1351:             ++*fmt;
  3580  0010F6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3581  0010FA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3582  0010FE  2ADE               	incf	postinc2,f,c
  3583  001100  0E00               	movlw	0
  3584  001102  22DD               	addwfc	postdec2,f,c
  3585                           
  3586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 1352:             fputc((int)'%', fp);
  3587  001104  0E00               	movlw	0
  3588  001106  6E08               	movwf	fputc@c+1,c
  3589  001108  0E25               	movlw	37
  3590  00110A  6E07               	movwf	fputc@c,c
  3591  00110C  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3592  001110  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3593  001114  EC6D  F014         	call	_fputc	;wreg free
  3594  001118                     l7567:
  3595                           
  3596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprn
      +                          t.c: 1353:             return 1;
  3597  001118  0E00               	movlw	0
  3598  00111A  6E4A               	movwf	?_vfpfcnvrt+1,c
  3599  00111C  0E01               	movlw	1
  3600  00111E  6E49               	movwf	?_vfpfcnvrt,c
  3601  001120  0012               	return	
  3602  001122                     l7571:
  3603                           
  3604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1
      +                          357:         ++*fmt;
  3605  001122  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3606  001126  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3607  00112A  2ADE               	incf	postinc2,f,c
  3608  00112C  0E00               	movlw	0
  3609  00112E  22DD               	addwfc	postdec2,f,c
  3610                           
  3611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           1358:         return 0;
  3612  001130  0E00               	movlw	0
  3613  001132  6E4A               	movwf	?_vfpfcnvrt+1,c
  3614  001134  0E00               	movlw	0
  3615  001136  6E49               	movwf	?_vfpfcnvrt,c
  3616  001138  0012               	return	
  3617  00113A                     l7577:
  3618                           
  3619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\com
      +                          mon\doprnt.c: 1362:     fputc((int)(*fmt)[0], fp);
  3620  00113A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3621  00113E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3622  001142  CFDE FFF6          	movff	postinc2,tblptrl
  3623  001146  CFDD FFF7          	movff	postdec2,tblptrh
  3624  00114A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3625  00114A  6AF8               	clrf	tblptru,c
  3626  00114C                     	endif
  3627  00114C                     	if	0	;tblptru may be non-zero
  3628  00114C                     	endif
  3629  00114C  0008               	tblrd		*
  3630  00114E  50F5               	movf	tablat,w,c
  3631  001150  6E07               	movwf	fputc@c,c
  3632  001152  6A08               	clrf	fputc@c+1,c
  3633  001154  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  3634  001158  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3635  00115C  EC6D  F014         	call	_fputc	;wreg free
  3636                           
  3637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:
      +                               ++*fmt;
  3638  001160  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3639  001164  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3640  001168  2ADE               	incf	postinc2,f,c
  3641  00116A  0E00               	movlw	0
  3642  00116C  22DD               	addwfc	postdec2,f,c
  3643  00116E  D7D4               	goto	l7567
  3644  001170                     __end_of_vfpfcnvrt:
  3645                           	opt callstack 0
  3646                           
  3647 ;; *************** function _xtoa *****************
  3648 ;; Defined at:
  3649 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3652 ;;		 -> sprintf@f(6), NULL(0), 
  3653 ;;  d               8   35[COMRAM] unsigned long long 
  3654 ;;  x               1   43[COMRAM] unsigned char 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  n               8   60[COMRAM] unsigned long long 
  3657 ;;  c               2   70[COMRAM] int 
  3658 ;;  i               2   68[COMRAM] int 
  3659 ;;  w               2   58[COMRAM] int 
  3660 ;;  p               2   56[COMRAM] int 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  2   33[COMRAM] int 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3670 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;Total ram usage:       39 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    9
  3677 ;; This function calls:
  3678 ;;		_isalpha
  3679 ;;		_isupper
  3680 ;;		_pad
  3681 ;;		_toupper
  3682 ;; This function is called by:
  3683 ;;		_vfpfcnvrt
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text5
  3688  001C9A                     __ptext5:
  3689                           	opt callstack 0
  3690  001C9A                     _xtoa:
  3691                           	opt callstack 17
  3692                           
  3693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 623: static int xtoa(FILE *fp, unsigned long long 
      +                          d, char x);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 6
      +                          24: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 624: {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 625:     in
      +                          t c, i, p, w;
  3694                           
  3695                           ;incstack = 0
  3696  001C9A  0100               	movlb	0	; () banked
  3697  001C9C  AFE4               	btfss	(_prec+1)& (0+255),7,b
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 630:         flags &= ~(1 << 1);
  3701  001C9E  9257               	bcf	_flags,1,c
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\comm
      +                          on\doprnt.c: 632:     p = (0 < prec) ? prec : 1;
  3705  001CA0  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  3706  001CA2  D005               	goto	u9840
  3707  001CA4  51E4               	movf	(_prec+1)& (0+255),w,b
  3708  001CA6  E108               	bnz	l742
  3709  001CA8  05E3               	decf	_prec& (0+255),w,b
  3710  001CAA  B0D8               	btfsc	status,0,c
  3711  001CAC  D005               	goto	l742
  3712  001CAE                     u9840:
  3713                           
  3714                           ; BSR set to: 0
  3715  001CAE  0E00               	movlw	0
  3716  001CB0  6E3A               	movwf	xtoa@p+1,c
  3717  001CB2  0E01               	movlw	1
  3718  001CB4  6E39               	movwf	xtoa@p,c
  3719  001CB6  D004               	goto	l744
  3720  001CB8                     l742:
  3721                           
  3722                           ; BSR set to: 0
  3723  001CB8  C0E3  F039         	movff	_prec,xtoa@p
  3724  001CBC  C0E4  F03A         	movff	_prec+1,xtoa@p+1
  3725  001CC0                     l744:
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633
      +                          :     w = width;
  3729  001CC0  C0E1  F03B         	movff	_width,xtoa@w
  3730  001CC4  C0E2  F03C         	movff	_width+1,xtoa@w+1
  3731                           
  3732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 634:     if (flags & (1 << 4)) {
  3733  001CC8  A857               	btfss	_flags,4,c
  3734  001CCA  D004               	goto	l7329
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 63
      +                          5:         w -= 2;
  3738  001CCC  0EFE               	movlw	254
  3739  001CCE  263B               	addwf	xtoa@w,f,c
  3740  001CD0  0EFF               	movlw	255
  3741  001CD2  223C               	addwfc	xtoa@w+1,f,c
  3742  001CD4                     l7329:
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:   
      +                            n = d;
  3746  001CD4  C024  F03D         	movff	xtoa@d,xtoa@n
  3747  001CD8  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  3748  001CDC  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  3749  001CE0  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  3750  001CE4  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  3751  001CE8  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  3752  001CEC  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  3753  001CF0  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\do
      +                          prnt.c: 640:     i = sizeof(dbuf) - 1;
  3757  001CF4  0E00               	movlw	0
  3758  001CF6  6E46               	movwf	xtoa@i+1,c
  3759  001CF8  0E4F               	movlw	79
  3760  001CFA  6E45               	movwf	xtoa@i,c
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 641:     dbuf[i] = '\0';
  3764  001CFC  0E00               	movlw	0
  3765  001CFE  0101               	movlb	1	; () banked
  3766  001D00  6F66               	movwf	(_dbuf+79)& (0+255),b
  3767                           
  3768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {;C:\Program Files (
      +                          x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     while (!(i < 2) && (n
      +                           || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3769  001D02  D093               	goto	l7365
  3770  001D04                     l7335:
  3771                           
  3772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643: 
      +                                  --i;
  3773  001D04  0645               	decf	xtoa@i,f,c
  3774  001D06  A0D8               	btfss	status,0,c
  3775  001D08  0646               	decf	xtoa@i+1,f,c
  3776                           
  3777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt
      +                          .c: 644:         c = n & 0x0f;
  3778  001D0A  0E0F               	movlw	15
  3779  001D0C  143D               	andwf	xtoa@n,w,c
  3780  001D0E  6E47               	movwf	xtoa@c,c
  3781  001D10  6A48               	clrf	xtoa@c+1,c
  3782                           
  3783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 645:         c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3784  001D12  BE48               	btfsc	xtoa@c+1,7,c
  3785  001D14  D008               	goto	l7343
  3786  001D16  5048               	movf	xtoa@c+1,w,c
  3787  001D18  E104               	bnz	u9860
  3788  001D1A  0E0A               	movlw	10
  3789  001D1C  5C47               	subwf	xtoa@c,w,c
  3790  001D1E  A0D8               	btfss	status,0,c
  3791  001D20  D002               	goto	l7343
  3792  001D22                     u9860:
  3793  001D22  0E57               	movlw	87
  3794  001D24  D001               	goto	L2
  3795  001D26                     l7343:
  3796  001D26  0E30               	movlw	48
  3797  001D28                     L2:
  3798  001D28  2447               	addwf	xtoa@c,w,c
  3799  001D2A  6E47               	movwf	xtoa@c,c
  3800  001D2C  0E00               	movlw	0
  3801  001D2E  2048               	addwfc	xtoa@c+1,w,c
  3802  001D30  6E48               	movwf	xtoa@c+1,c
  3803                           
  3804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 646:         if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) &&
      +                           (0 ? isalpha(c) : (((unsigned)(c)|32)-'a') < 26)) {
  3805  001D32  0EBF               	movlw	191
  3806  001D34  6E2D               	movwf	??_xtoa& (0+255),c
  3807  001D36  0EFF               	movlw	255
  3808  001D38  6E2E               	movwf	(??_xtoa+1)& (0+255),c
  3809  001D3A  502C               	movf	xtoa@x,w,c
  3810  001D3C  6E2F               	movwf	(??_xtoa+2)& (0+255),c
  3811  001D3E  6A30               	clrf	(??_xtoa+3)& (0+255),c
  3812  001D40  502D               	movf	??_xtoa,w,c
  3813  001D42  262F               	addwf	??_xtoa+2,f,c
  3814  001D44  502E               	movf	??_xtoa+1,w,c
  3815  001D46  2230               	addwfc	??_xtoa+3,f,c
  3816  001D48  5030               	movf	??_xtoa+3,w,c
  3817  001D4A  E106               	bnz	u9870
  3818  001D4C  0E1A               	movlw	26
  3819  001D4E  5C2F               	subwf	??_xtoa+2,w,c
  3820  001D50  B0D8               	btfsc	status,0,c
  3821  001D52  D002               	goto	u9870
  3822  001D54  0E01               	movlw	1
  3823  001D56  D001               	goto	u9880
  3824  001D58                     u9870:
  3825  001D58  0E00               	movlw	0
  3826  001D5A                     u9880:
  3827  001D5A  6E35               	movwf	_xtoa$1424,c
  3828  001D5C  6A36               	clrf	_xtoa$1424+1,c
  3829  001D5E  5035               	movf	_xtoa$1424,w,c
  3830  001D60  1036               	iorwf	_xtoa$1424+1,w,c
  3831  001D62  B4D8               	btfsc	status,2,c
  3832  001D64  D027               	goto	l7357
  3833  001D66  0E9F               	movlw	159
  3834  001D68  6E2D               	movwf	??_xtoa& (0+255),c
  3835  001D6A  0EFF               	movlw	255
  3836  001D6C  6E2E               	movwf	(??_xtoa+1)& (0+255),c
  3837  001D6E  0E20               	movlw	32
  3838  001D70  1047               	iorwf	xtoa@c,w,c
  3839  001D72  6E2F               	movwf	(??_xtoa+2)& (0+255),c
  3840  001D74  0E00               	movlw	0
  3841  001D76  1048               	iorwf	xtoa@c+1,w,c
  3842  001D78  6E30               	movwf	(??_xtoa+3)& (0+255),c
  3843  001D7A  502D               	movf	??_xtoa,w,c
  3844  001D7C  262F               	addwf	??_xtoa+2,f,c
  3845  001D7E  502E               	movf	??_xtoa+1,w,c
  3846  001D80  2230               	addwfc	??_xtoa+3,f,c
  3847  001D82  5030               	movf	??_xtoa+3,w,c
  3848  001D84  E106               	bnz	u9900
  3849  001D86  0E1A               	movlw	26
  3850  001D88  5C2F               	subwf	??_xtoa+2,w,c
  3851  001D8A  B0D8               	btfsc	status,0,c
  3852  001D8C  D002               	goto	u9900
  3853  001D8E  0E01               	movlw	1
  3854  001D90  D001               	goto	u9910
  3855  001D92                     u9900:
  3856  001D92  0E00               	movlw	0
  3857  001D94                     u9910:
  3858  001D94  6E37               	movwf	_xtoa$1425,c
  3859  001D96  6A38               	clrf	_xtoa$1425+1,c
  3860  001D98  5037               	movf	_xtoa$1425,w,c
  3861  001D9A  1038               	iorwf	_xtoa$1425+1,w,c
  3862  001D9C  B4D8               	btfsc	status,2,c
  3863  001D9E  D00A               	goto	l7357
  3864                           
  3865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 647:             c = toupper(c);
  3866  001DA0  C047  F00B         	movff	xtoa@c,toupper@c
  3867  001DA4  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  3868  001DA8  ECF0  F017         	call	_toupper	;wreg free
  3869  001DAC  C00B  F047         	movff	?_toupper,xtoa@c
  3870  001DB0  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  3871  001DB4                     l7357:
  3872                           
  3873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\d
      +                          oprnt.c: 649:         dbuf[i] = (char)c;
  3874  001DB4  0E17               	movlw	low _dbuf
  3875  001DB6  2445               	addwf	xtoa@i,w,c
  3876  001DB8  6ED9               	movwf	fsr2l,c
  3877  001DBA  0E01               	movlw	high _dbuf
  3878  001DBC  2046               	addwfc	xtoa@i+1,w,c
  3879  001DBE  6EDA               	movwf	fsr2h,c
  3880  001DC0  C047  FFDF         	movff	xtoa@c,indf2
  3881                           
  3882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650: 
      +                                  --p;
  3883  001DC4  0639               	decf	xtoa@p,f,c
  3884  001DC6  A0D8               	btfss	status,0,c
  3885  001DC8  063A               	decf	xtoa@p+1,f,c
  3886                           
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651: 
      +                                  --w;
  3888  001DCA  063B               	decf	xtoa@w,f,c
  3889  001DCC  A0D8               	btfss	status,0,c
  3890  001DCE  063C               	decf	xtoa@w+1,f,c
  3891                           
  3892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 652:         n = n >> 4;
  3893  001DD0  C03D  F02D         	movff	xtoa@n,??_xtoa
  3894  001DD4  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  3895  001DD8  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  3896  001DDC  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  3897  001DE0  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  3898  001DE4  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  3899  001DE8  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  3900  001DEC  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  3901  001DF0  0E05               	movlw	5
  3902  001DF2  D009               	goto	u9930
  3903  001DF4                     u9935:
  3904  001DF4  90D8               	bcf	status,0,c
  3905  001DF6  3234               	rrcf	??_xtoa+7,f,c
  3906  001DF8  3233               	rrcf	??_xtoa+6,f,c
  3907  001DFA  3232               	rrcf	??_xtoa+5,f,c
  3908  001DFC  3231               	rrcf	??_xtoa+4,f,c
  3909  001DFE  3230               	rrcf	??_xtoa+3,f,c
  3910  001E00  322F               	rrcf	??_xtoa+2,f,c
  3911  001E02  322E               	rrcf	??_xtoa+1,f,c
  3912  001E04  322D               	rrcf	??_xtoa,f,c
  3913  001E06                     u9930:
  3914  001E06  2EE8               	decfsz	wreg,f,c
  3915  001E08  D7F5               	goto	u9935
  3916  001E0A  C02D  F03D         	movff	??_xtoa,xtoa@n
  3917  001E0E  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  3918  001E12  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  3919  001E16  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  3920  001E1A  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  3921  001E1E  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  3922  001E22  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  3923  001E26  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  3924  001E2A                     l7365:
  3925                           
  3926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {;C:\Program Files (
      +                          x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     while (!(i < 2) && (n
      +                           || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3927  001E2A  BE46               	btfsc	xtoa@i+1,7,c
  3928  001E2C  D020               	goto	u9980
  3929  001E2E  5046               	movf	xtoa@i+1,w,c
  3930  001E30  E104               	bnz	u9940
  3931  001E32  0E02               	movlw	2
  3932  001E34  5C45               	subwf	xtoa@i,w,c
  3933  001E36  A0D8               	btfss	status,0,c
  3934  001E38  D01A               	goto	u9980
  3935  001E3A                     u9940:
  3936  001E3A  503D               	movf	xtoa@n,w,c
  3937  001E3C  103E               	iorwf	xtoa@n+1,w,c
  3938  001E3E  103F               	iorwf	xtoa@n+2,w,c
  3939  001E40  1040               	iorwf	xtoa@n+3,w,c
  3940  001E42  1041               	iorwf	xtoa@n+4,w,c
  3941  001E44  1042               	iorwf	xtoa@n+5,w,c
  3942  001E46  1043               	iorwf	xtoa@n+6,w,c
  3943  001E48  1044               	iorwf	xtoa@n+7,w,c
  3944  001E4A  A4D8               	btfss	status,2,c
  3945  001E4C  D75B               	goto	l7335
  3946  001E4E  BE3A               	btfsc	xtoa@p+1,7,c
  3947  001E50  D005               	goto	u9960
  3948  001E52  503A               	movf	xtoa@p+1,w,c
  3949  001E54  E102               	bnz	u9961
  3950  001E56  0439               	decf	xtoa@p,w,c
  3951  001E58  B0D8               	btfsc	status,0,c
  3952  001E5A                     u9961:
  3953  001E5A  D754               	goto	l7335
  3954  001E5C                     u9960:
  3955  001E5C  BE3C               	btfsc	xtoa@w+1,7,c
  3956  001E5E  D007               	goto	u9980
  3957  001E60  503C               	movf	xtoa@w+1,w,c
  3958  001E62  E103               	bnz	u9970
  3959  001E64  043B               	decf	xtoa@w,w,c
  3960  001E66  A0D8               	btfss	status,0,c
  3961  001E68  D002               	goto	u9980
  3962  001E6A                     u9970:
  3963  001E6A  B257               	btfsc	_flags,1,c
  3964  001E6C  D74B               	goto	l7335
  3965  001E6E                     u9980:
  3966                           
  3967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 656:     if (flags & (1 << 4)) {
  3968  001E6E  A857               	btfss	_flags,4,c
  3969  001E70  D016               	goto	l7381
  3970                           
  3971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657: 
      +                                  --i;
  3972  001E72  0645               	decf	xtoa@i,f,c
  3973  001E74  A0D8               	btfss	status,0,c
  3974  001E76  0646               	decf	xtoa@i+1,f,c
  3975                           
  3976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 658:         dbuf[i] = x;
  3977  001E78  0E17               	movlw	low _dbuf
  3978  001E7A  2445               	addwf	xtoa@i,w,c
  3979  001E7C  6ED9               	movwf	fsr2l,c
  3980  001E7E  0E01               	movlw	high _dbuf
  3981  001E80  2046               	addwfc	xtoa@i+1,w,c
  3982  001E82  6EDA               	movwf	fsr2h,c
  3983  001E84  C02C  FFDF         	movff	xtoa@x,indf2
  3984                           
  3985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659: 
      +                                  --i;
  3986  001E88  0645               	decf	xtoa@i,f,c
  3987  001E8A  A0D8               	btfss	status,0,c
  3988  001E8C  0646               	decf	xtoa@i+1,f,c
  3989                           
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprn
      +                          t.c: 660:         dbuf[i] = '0';
  3991  001E8E  0E17               	movlw	low _dbuf
  3992  001E90  2445               	addwf	xtoa@i,w,c
  3993  001E92  6ED9               	movwf	fsr2l,c
  3994  001E94  0E01               	movlw	high _dbuf
  3995  001E96  2046               	addwfc	xtoa@i+1,w,c
  3996  001E98  6EDA               	movwf	fsr2h,c
  3997  001E9A  0E30               	movlw	48
  3998  001E9C  6EDF               	movwf	indf2,c
  3999  001E9E                     l7381:
  4000                           
  4001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 664:     return pad(fp, &dbuf[i], w);
  4002  001E9E  C022  F017         	movff	xtoa@fp,pad@fp
  4003  001EA2  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  4004  001EA6  0E17               	movlw	low _dbuf
  4005  001EA8  2445               	addwf	xtoa@i,w,c
  4006  001EAA  6E19               	movwf	pad@buf,c
  4007  001EAC  0E01               	movlw	high _dbuf
  4008  001EAE  2046               	addwfc	xtoa@i+1,w,c
  4009  001EB0  6E1A               	movwf	pad@buf+1,c
  4010  001EB2  C03B  F01B         	movff	xtoa@w,pad@p
  4011  001EB6  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  4012  001EBA  EC55  F015         	call	_pad	;wreg free
  4013  001EBE  C017  F022         	movff	?_pad,?_xtoa
  4014  001EC2  C018  F023         	movff	?_pad+1,?_xtoa+1
  4015  001EC6  0012               	return		;funcret
  4016  001EC8                     __end_of_xtoa:
  4017                           	opt callstack 0
  4018                           
  4019 ;; *************** function _toupper *****************
  4020 ;; Defined at:
  4021 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  c               2   10[COMRAM] int 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  2   10[COMRAM] int 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;Total ram usage:        8 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    5
  4042 ;; This function calls:
  4043 ;;		_islower
  4044 ;; This function is called by:
  4045 ;;		_xtoa
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text6
  4050  002FE0                     __ptext6:
  4051                           	opt callstack 0
  4052  002FE0                     _toupper:
  4053                           	opt callstack 20
  4054                           
  4055                           ;incstack = 0
  4056  002FE0  0E9F               	movlw	159
  4057  002FE2  6E0D               	movwf	??_toupper& (0+255),c
  4058  002FE4  0EFF               	movlw	255
  4059  002FE6  6E0E               	movwf	(??_toupper+1)& (0+255),c
  4060  002FE8  C00B  F00F         	movff	toupper@c,??_toupper+2
  4061  002FEC  C00C  F010         	movff	toupper@c+1,??_toupper+3
  4062  002FF0  500D               	movf	??_toupper,w,c
  4063  002FF2  260F               	addwf	??_toupper+2,f,c
  4064  002FF4  500E               	movf	??_toupper+1,w,c
  4065  002FF6  2210               	addwfc	??_toupper+3,f,c
  4066  002FF8  5010               	movf	??_toupper+3,w,c
  4067  002FFA  E106               	bnz	u8030
  4068  002FFC  0E1A               	movlw	26
  4069  002FFE  5C0F               	subwf	??_toupper+2,w,c
  4070  003000  B0D8               	btfsc	status,0,c
  4071  003002  D002               	goto	u8030
  4072  003004  0E01               	movlw	1
  4073  003006  D001               	goto	u8040
  4074  003008                     u8030:
  4075  003008  0E00               	movlw	0
  4076  00300A                     u8040:
  4077  00300A  6E11               	movwf	_toupper$2066,c
  4078  00300C  6A12               	clrf	_toupper$2066+1,c
  4079  00300E  5011               	movf	_toupper$2066,w,c
  4080  003010  1012               	iorwf	_toupper$2066+1,w,c
  4081  003012  B4D8               	btfsc	status,2,c
  4082  003014  D005               	goto	l1663
  4083  003016  0E5F               	movlw	95
  4084  003018  140B               	andwf	toupper@c,w,c
  4085  00301A  6E0B               	movwf	?_toupper,c
  4086  00301C  6A0C               	clrf	?_toupper+1,c
  4087  00301E  0012               	return	
  4088  003020                     l1663:
  4089  003020  C00B  F00B         	movff	toupper@c,?_toupper
  4090  003024  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  4091  003028  0012               	return		;funcret
  4092  00302A                     __end_of_toupper:
  4093                           	opt callstack 0
  4094                           
  4095 ;; *************** function _islower *****************
  4096 ;; Defined at:
  4097 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  c               2    4[COMRAM] int 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  2    4[COMRAM] int 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;Total ram usage:        6 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    4
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_toupper
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text7
  4126  0031C8                     __ptext7:
  4127                           	opt callstack 0
  4128  0031C8                     _islower:
  4129                           	opt callstack 20
  4130                           
  4131                           ;incstack = 0
  4132  0031C8  0E9F               	movlw	159
  4133  0031CA  6E07               	movwf	??_islower& (0+255),c
  4134  0031CC  0EFF               	movlw	255
  4135  0031CE  6E08               	movwf	(??_islower+1)& (0+255),c
  4136  0031D0  C005  F009         	movff	islower@c,??_islower+2
  4137  0031D4  C006  F00A         	movff	islower@c+1,??_islower+3
  4138  0031D8  5007               	movf	??_islower,w,c
  4139  0031DA  2609               	addwf	??_islower+2,f,c
  4140  0031DC  5008               	movf	??_islower+1,w,c
  4141  0031DE  220A               	addwfc	??_islower+3,f,c
  4142  0031E0  500A               	movf	??_islower+3,w,c
  4143  0031E2  E106               	bnz	u7720
  4144  0031E4  0E1A               	movlw	26
  4145  0031E6  5C09               	subwf	??_islower+2,w,c
  4146  0031E8  B0D8               	btfsc	status,0,c
  4147  0031EA  D002               	goto	u7720
  4148  0031EC  0E01               	movlw	1
  4149  0031EE  D001               	goto	u7730
  4150  0031F0                     u7720:
  4151  0031F0  0E00               	movlw	0
  4152  0031F2                     u7730:
  4153  0031F2  6E05               	movwf	?_islower,c
  4154  0031F4  6A06               	clrf	?_islower+1,c
  4155  0031F6  0012               	return		;funcret
  4156  0031F8                     __end_of_islower:
  4157                           	opt callstack 0
  4158                           
  4159 ;; *************** function _isalpha *****************
  4160 ;; Defined at:
  4161 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  c               2    4[COMRAM] int 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  2    4[COMRAM] int 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;Total ram usage:        6 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    4
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_xtoa
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text8
  4190  003162                     __ptext8:
  4191                           	opt callstack 0
  4192  003162                     _isalpha:
  4193                           	opt callstack 21
  4194                           
  4195                           ;incstack = 0
  4196  003162  0E9F               	movlw	159
  4197  003164  6E07               	movwf	??_isalpha& (0+255),c
  4198  003166  0EFF               	movlw	255
  4199  003168  6E08               	movwf	(??_isalpha+1)& (0+255),c
  4200  00316A  0E20               	movlw	32
  4201  00316C  1005               	iorwf	isalpha@c,w,c
  4202  00316E  6E09               	movwf	(??_isalpha+2)& (0+255),c
  4203  003170  0E00               	movlw	0
  4204  003172  1006               	iorwf	isalpha@c+1,w,c
  4205  003174  6E0A               	movwf	(??_isalpha+3)& (0+255),c
  4206  003176  5007               	movf	??_isalpha,w,c
  4207  003178  2609               	addwf	??_isalpha+2,f,c
  4208  00317A  5008               	movf	??_isalpha+1,w,c
  4209  00317C  220A               	addwfc	??_isalpha+3,f,c
  4210  00317E  500A               	movf	??_isalpha+3,w,c
  4211  003180  E106               	bnz	u8010
  4212  003182  0E1A               	movlw	26
  4213  003184  5C09               	subwf	??_isalpha+2,w,c
  4214  003186  B0D8               	btfsc	status,0,c
  4215  003188  D002               	goto	u8010
  4216  00318A  0E01               	movlw	1
  4217  00318C  D001               	goto	u8020
  4218  00318E                     u8010:
  4219  00318E  0E00               	movlw	0
  4220  003190                     u8020:
  4221  003190  6E05               	movwf	?_isalpha,c
  4222  003192  6A06               	clrf	?_isalpha+1,c
  4223  003194  0012               	return		;funcret
  4224  003196                     __end_of_isalpha:
  4225                           	opt callstack 0
  4226                           
  4227 ;; *************** function _strncmp *****************
  4228 ;; Defined at:
  4229 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  4232 ;;		 -> vfpfcnvrt@ct(3), 
  4233 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  4234 ;;		 -> STR_71(3), 
  4235 ;;  n               2    8[COMRAM] unsigned int 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  r               2   13[COMRAM] PTR const unsigned char 
  4238 ;;		 -> STR_71(3), 
  4239 ;;  l               2   11[COMRAM] PTR const unsigned char 
  4240 ;;		 -> vfpfcnvrt@ct(3), 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  2    4[COMRAM] int 
  4243 ;; Registers used:
  4244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4250 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;Total ram usage:       11 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    4
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_vfpfcnvrt
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text9
  4265  002832                     __ptext9:
  4266                           	opt callstack 0
  4267  002832                     _strncmp:
  4268                           	opt callstack 22
  4269                           
  4270                           ;incstack = 0
  4271  002832  C005  F00C         	movff	strncmp@_l,strncmp@l
  4272  002836  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  4273  00283A  C007  F00E         	movff	strncmp@_r,strncmp@r
  4274  00283E  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  4275  002842  0609               	decf	strncmp@n,f,c
  4276  002844  A0D8               	btfss	status,0,c
  4277  002846  060A               	decf	strncmp@n+1,f,c
  4278  002848  2809               	incf	strncmp@n,w,c
  4279  00284A  E10F               	bnz	l7393
  4280  00284C  280A               	incf	strncmp@n+1,w,c
  4281  00284E  A4D8               	btfss	status,2,c
  4282  002850  D00C               	goto	l7393
  4283  002852  0E00               	movlw	0
  4284  002854  6E06               	movwf	?_strncmp+1,c
  4285  002856  0E00               	movlw	0
  4286  002858  6E05               	movwf	?_strncmp,c
  4287  00285A  0012               	return	
  4288  00285C                     l7391:
  4289  00285C  4A0C               	infsnz	strncmp@l,f,c
  4290  00285E  2A0D               	incf	strncmp@l+1,f,c
  4291  002860  4A0E               	infsnz	strncmp@r,f,c
  4292  002862  2A0F               	incf	strncmp@r+1,f,c
  4293  002864  0609               	decf	strncmp@n,f,c
  4294  002866  A0D8               	btfss	status,0,c
  4295  002868  060A               	decf	strncmp@n+1,f,c
  4296  00286A                     l7393:
  4297  00286A  C00C  FFD9         	movff	strncmp@l,fsr2l
  4298  00286E  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  4299  002872  50DF               	movf	indf2,w,c
  4300  002874  B4D8               	btfsc	status,2,c
  4301  002876  D01E               	goto	u10040
  4302  002878  C00E  FFF6         	movff	strncmp@r,tblptrl
  4303  00287C  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  4304  002880                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4305  002880  6AF8               	clrf	tblptru,c
  4306  002882                     	endif
  4307  002882                     	if	0	;tblptru may be non-zero
  4308  002882                     	endif
  4309  002882  0008               	tblrd		*
  4310  002884  50F5               	movf	tablat,w,c
  4311  002886  0900               	iorlw	0
  4312  002888  B4D8               	btfsc	status,2,c
  4313  00288A  D014               	goto	u10040
  4314  00288C  5009               	movf	strncmp@n,w,c
  4315  00288E  100A               	iorwf	strncmp@n+1,w,c
  4316  002890  B4D8               	btfsc	status,2,c
  4317  002892  D010               	goto	u10040
  4318  002894  C00C  FFD9         	movff	strncmp@l,fsr2l
  4319  002898  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  4320  00289C  50DF               	movf	indf2,w,c
  4321  00289E  6E0B               	movwf	??_strncmp& (0+255),c
  4322  0028A0  C00E  FFF6         	movff	strncmp@r,tblptrl
  4323  0028A4  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  4324  0028A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4325  0028A8  6AF8               	clrf	tblptru,c
  4326  0028AA                     	endif
  4327  0028AA                     	if	0	;tblptru may be non-zero
  4328  0028AA                     	endif
  4329  0028AA  0008               	tblrd		*
  4330  0028AC  50F5               	movf	tablat,w,c
  4331  0028AE  180B               	xorwf	??_strncmp,w,c
  4332  0028B0  B4D8               	btfsc	status,2,c
  4333  0028B2  D7D4               	goto	l7391
  4334  0028B4                     u10040:
  4335  0028B4  C00C  FFD9         	movff	strncmp@l,fsr2l
  4336  0028B8  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  4337  0028BC  50DF               	movf	indf2,w,c
  4338  0028BE  6E0B               	movwf	??_strncmp& (0+255),c
  4339  0028C0  C00E  FFF6         	movff	strncmp@r,tblptrl
  4340  0028C4  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  4341  0028C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4342  0028C8  6AF8               	clrf	tblptru,c
  4343  0028CA                     	endif
  4344  0028CA                     	if	0	;tblptru may be non-zero
  4345  0028CA                     	endif
  4346  0028CA  0008               	tblrd		*
  4347  0028CC  50F5               	movf	tablat,w,c
  4348  0028CE  5C0B               	subwf	??_strncmp,w,c
  4349  0028D0  6E05               	movwf	?_strncmp,c
  4350  0028D2  6A06               	clrf	?_strncmp+1,c
  4351  0028D4  A0D8               	btfss	status,0,c
  4352  0028D6  0606               	decf	?_strncmp+1,f,c
  4353  0028D8  0012               	return		;funcret
  4354  0028DA                     __end_of_strncmp:
  4355                           	opt callstack 0
  4356                           
  4357 ;; *************** function _stoa *****************
  4358 ;; Defined at:
  4359 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4362 ;;		 -> sprintf@f(6), NULL(0), 
  4363 ;;  s               2   17[COMRAM] PTR unsigned char 
  4364 ;;		 -> ?_printf(2), ?_sprintf(2), STR_60(9), STR_58(9), 
  4365 ;;		 -> STR_56(8), STR_54(9), STR_52(8), STR_50(9), 
  4366 ;;		 -> STR_48(8), STR_46(3), STR_44(10), STR_42(10), 
  4367 ;;		 -> STR_40(9), STR_38(11), STR_36(8), STR_34(6), 
  4368 ;;		 -> STR_32(6), STR_30(5), STR_28(7), STR_26(7), 
  4369 ;;		 -> STR_24(9), STR_22(8), day_string(20), rtc_get_time@mo(20), 
  4370 ;;		 -> getReading@outT(5), temperature_read(5), getReading@outH(5), getReading@rh_code(4), 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  nuls            7   20[COMRAM] unsigned char [7]
  4373 ;;  l               2   35[COMRAM] int 
  4374 ;;  p               2   33[COMRAM] int 
  4375 ;;  cp              2   31[COMRAM] PTR unsigned char 
  4376 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), STR_60(9), 
  4377 ;;		 -> STR_58(9), STR_56(8), STR_54(9), STR_52(8), 
  4378 ;;		 -> STR_50(9), STR_48(8), STR_46(3), STR_44(10), 
  4379 ;;		 -> STR_42(10), STR_40(9), STR_38(11), STR_36(8), 
  4380 ;;		 -> STR_34(6), STR_32(6), STR_30(5), STR_28(7), 
  4381 ;;		 -> STR_26(7), STR_24(9), STR_22(8), day_string(20), 
  4382 ;;		 -> rtc_get_time@mo(20), getReading@outT(5), temperature_read(5), getReading@outH(5), 
  4383 ;;		 -> getReading@rh_code(4), 
  4384 ;;  w               2   29[COMRAM] int 
  4385 ;;  i               2   27[COMRAM] int 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  2   15[COMRAM] int 
  4388 ;; Registers used:
  4389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;Total ram usage:       22 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; Hardware stack levels required when called:    7
  4402 ;; This function calls:
  4403 ;;		_fputc
  4404 ;;		_strlen
  4405 ;; This function is called by:
  4406 ;;		_vfpfcnvrt
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text10
  4411  002378                     __ptext10:
  4412                           	opt callstack 0
  4413  002378                     _stoa:
  4414                           	opt callstack 19
  4415                           
  4416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 546: static int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchi
      +                          p\xc8\v2.05\pic\sources\c99\common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8
      +                          \v2.05\pic\sources\c99\common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  4417                           
  4418                           ;incstack = 0
  4419  002378  EE21  F0E6         	lfsr	2,stoa@F1166
  4420  00237C  EE10  F015         	lfsr	1,stoa@nuls
  4421  002380  0E06               	movlw	6
  4422  002382                     u9731:
  4423  002382  CFDB FFE3          	movff	plusw2,plusw1
  4424  002386  06E8               	decf	wreg,f,c
  4425  002388  E2FC               	bc	u9731
  4426                           
  4427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 549:     int i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 552:     cp = s;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c
      +                          99\common\doprnt.c: 552:     cp = s;
  4428  00238A  C012  F020         	movff	stoa@s,stoa@cp
  4429  00238E  C013  F021         	movff	stoa@s+1,stoa@cp+1
  4430                           
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553
      +                          :     if (!cp) {
  4432  002392  5020               	movf	stoa@cp,w,c
  4433  002394  1021               	iorwf	stoa@cp+1,w,c
  4434  002396  A4D8               	btfss	status,2,c
  4435  002398  D004               	goto	l7285
  4436                           
  4437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           554:         cp = nuls;
  4438  00239A  0E15               	movlw	low stoa@nuls
  4439  00239C  6E20               	movwf	stoa@cp,c
  4440  00239E  0E00               	movlw	high stoa@nuls
  4441  0023A0  6E21               	movwf	stoa@cp+1,c
  4442  0023A2                     l7285:
  4443                           
  4444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 558:     l = strlen(cp);
  4445  0023A2  C020  F005         	movff	stoa@cp,strlen@s
  4446  0023A6  C021  F006         	movff	stoa@cp+1,strlen@s+1
  4447  0023AA  EC38  F018         	call	_strlen	;wreg free
  4448  0023AE  C005  F024         	movff	?_strlen,stoa@l
  4449  0023B2  C006  F025         	movff	?_strlen+1,stoa@l+1
  4450                           
  4451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:
      +                               p = prec;
  4452  0023B6  C0E3  F022         	movff	_prec,stoa@p
  4453  0023BA  C0E4  F023         	movff	_prec+1,stoa@p+1
  4454                           
  4455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 560:     l = (!(p < 0) && (p < l)) ? p : l;
  4456  0023BE  BE23               	btfsc	stoa@p+1,7,c
  4457  0023C0  D00E               	goto	l723
  4458  0023C2  5024               	movf	stoa@l,w,c
  4459  0023C4  5C22               	subwf	stoa@p,w,c
  4460  0023C6  5023               	movf	stoa@p+1,w,c
  4461  0023C8  0A80               	xorlw	128
  4462  0023CA  6E14               	movwf	??_stoa& (0+255),c
  4463  0023CC  5025               	movf	stoa@l+1,w,c
  4464  0023CE  0A80               	xorlw	128
  4465  0023D0  5814               	subwfb	??_stoa& (0+255),w,c
  4466  0023D2  B0D8               	btfsc	status,0,c
  4467  0023D4  D004               	goto	l723
  4468  0023D6  C022  F024         	movff	stoa@p,stoa@l
  4469  0023DA  C023  F025         	movff	stoa@p+1,stoa@l+1
  4470  0023DE                     l723:
  4471                           
  4472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:   
      +                            p = l;
  4473  0023DE  C024  F022         	movff	stoa@l,stoa@p
  4474  0023E2  C025  F023         	movff	stoa@l+1,stoa@p+1
  4475                           
  4476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562
      +                          :     w = width;
  4477  0023E6  C0E1  F01E         	movff	_width,stoa@w
  4478  0023EA  C0E2  F01F         	movff	_width+1,stoa@w+1
  4479                           
  4480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\comm
      +                          on\doprnt.c: 565:     if (!(flags & (1 << 0))) {
  4481  0023EE  A057               	btfss	_flags,0,c
  4482  0023F0  D00D               	goto	l7299
  4483  0023F2  D016               	goto	u9780
  4484  0023F4                     l7295:
  4485                           
  4486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 567:             fputc(' ', fp);
  4487  0023F4  0E00               	movlw	0
  4488  0023F6  6E08               	movwf	fputc@c+1,c
  4489  0023F8  0E20               	movlw	32
  4490  0023FA  6E07               	movwf	fputc@c,c
  4491  0023FC  C010  F009         	movff	stoa@fp,fputc@fp
  4492  002400  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  4493  002404  EC6D  F014         	call	_fputc	;wreg free
  4494                           
  4495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 5
      +                          68:             ++l;
  4496  002408  4A24               	infsnz	stoa@l,f,c
  4497  00240A  2A25               	incf	stoa@l+1,f,c
  4498  00240C                     l7299:
  4499                           
  4500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 566:         while (l < w) {
  4501  00240C  501E               	movf	stoa@w,w,c
  4502  00240E  5C24               	subwf	stoa@l,w,c
  4503  002410  5025               	movf	stoa@l+1,w,c
  4504  002412  0A80               	xorlw	128
  4505  002414  6E14               	movwf	??_stoa& (0+255),c
  4506  002416  501F               	movf	stoa@w+1,w,c
  4507  002418  0A80               	xorlw	128
  4508  00241A  5814               	subwfb	??_stoa& (0+255),w,c
  4509  00241C  A0D8               	btfss	status,0,c
  4510  00241E  D7EA               	goto	l7295
  4511  002420                     u9780:
  4512                           
  4513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:   
      +                            i = 0;
  4514  002420  0E00               	movlw	0
  4515  002422  6E1D               	movwf	stoa@i+1,c
  4516  002424  0E00               	movlw	0
  4517  002426  6E1C               	movwf	stoa@i,c
  4518                           
  4519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 574:     while (i < p) {
  4520  002428  D01F               	goto	l7309
  4521  00242A                     l7303:
  4522                           
  4523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 575:         fputc(*cp, fp);
  4524  00242A  C020  FFF6         	movff	stoa@cp,tblptrl
  4525  00242E  C021  FFF7         	movff	stoa@cp+1,tblptrh
  4526  002432  0E00               	movlw	low (__mediumconst shr (0+16))
  4527  002434  6EF8               	movwf	tblptru,c
  4528  002436  0E0F               	movlw	(high __ramtop+-1)
  4529  002438  64F7               	cpfsgt	tblptrh,c
  4530  00243A  D003               	bra	u9797
  4531  00243C  0008               	tblrd		*
  4532  00243E  50F5               	movf	tablat,w,c
  4533  002440  D005               	bra	u9790
  4534  002442                     u9797:
  4535  002442  CFF6 FFE9          	movff	tblptrl,fsr0l
  4536  002446  CFF7 FFEA          	movff	tblptrh,fsr0h
  4537  00244A  50EF               	movf	indf0,w,c
  4538  00244C                     u9790:
  4539  00244C  6E14               	movwf	??_stoa& (0+255),c
  4540  00244E  5014               	movf	??_stoa,w,c
  4541  002450  6E07               	movwf	fputc@c,c
  4542  002452  6A08               	clrf	fputc@c+1,c
  4543  002454  C010  F009         	movff	stoa@fp,fputc@fp
  4544  002458  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  4545  00245C  EC6D  F014         	call	_fputc	;wreg free
  4546                           
  4547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:
      +                                   ++cp;
  4548  002460  4A20               	infsnz	stoa@cp,f,c
  4549  002462  2A21               	incf	stoa@cp+1,f,c
  4550                           
  4551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577: 
      +                                  ++i;
  4552  002464  4A1C               	infsnz	stoa@i,f,c
  4553  002466  2A1D               	incf	stoa@i+1,f,c
  4554  002468                     l7309:
  4555                           
  4556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 574:     while (i < p) {
  4557  002468  5022               	movf	stoa@p,w,c
  4558  00246A  5C1C               	subwf	stoa@i,w,c
  4559  00246C  501D               	movf	stoa@i+1,w,c
  4560  00246E  0A80               	xorlw	128
  4561  002470  6E14               	movwf	??_stoa& (0+255),c
  4562  002472  5023               	movf	stoa@p+1,w,c
  4563  002474  0A80               	xorlw	128
  4564  002476  5814               	subwfb	??_stoa& (0+255),w,c
  4565  002478  A0D8               	btfss	status,0,c
  4566  00247A  D7D7               	goto	l7303
  4567                           
  4568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 581:     if (flags & (1 << 0)) {
  4569  00247C  B057               	btfsc	_flags,0,c
  4570  00247E  D00D               	goto	l7317
  4571  002480  D016               	goto	u9820
  4572  002482                     l7313:
  4573                           
  4574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 583:             fputc(' ', fp);
  4575  002482  0E00               	movlw	0
  4576  002484  6E08               	movwf	fputc@c+1,c
  4577  002486  0E20               	movlw	32
  4578  002488  6E07               	movwf	fputc@c,c
  4579  00248A  C010  F009         	movff	stoa@fp,fputc@fp
  4580  00248E  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  4581  002492  EC6D  F014         	call	_fputc	;wreg free
  4582                           
  4583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 5
      +                          84:             ++l;
  4584  002496  4A24               	infsnz	stoa@l,f,c
  4585  002498  2A25               	incf	stoa@l+1,f,c
  4586  00249A                     l7317:
  4587                           
  4588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 582:         while (l < w) {
  4589  00249A  501E               	movf	stoa@w,w,c
  4590  00249C  5C24               	subwf	stoa@l,w,c
  4591  00249E  5025               	movf	stoa@l+1,w,c
  4592  0024A0  0A80               	xorlw	128
  4593  0024A2  6E14               	movwf	??_stoa& (0+255),c
  4594  0024A4  501F               	movf	stoa@w+1,w,c
  4595  0024A6  0A80               	xorlw	128
  4596  0024A8  5814               	subwfb	??_stoa& (0+255),w,c
  4597  0024AA  A0D8               	btfss	status,0,c
  4598  0024AC  D7EA               	goto	l7313
  4599  0024AE                     u9820:
  4600                           
  4601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:
      +                               return l;
  4602                           
  4603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  4604  0024AE  C024  F010         	movff	stoa@l,?_stoa
  4605  0024B2  C025  F011         	movff	stoa@l+1,?_stoa+1
  4606  0024B6  0012               	return		;funcret
  4607  0024B8                     __end_of_stoa:
  4608                           	opt callstack 0
  4609                           
  4610 ;; *************** function _efgtoa *****************
  4611 ;; Defined at:
  4612 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  4615 ;;		 -> sprintf@f(6), NULL(0), 
  4616 ;;  f               4   51[COMRAM] PTR struct _IO_FILE
  4617 ;;  c               1   55[COMRAM] unsigned char 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  u               4   52[BANK0 ] unsigned char 
  4620 ;;  g               4   44[BANK0 ] unsigned char 
  4621 ;;  l               4   38[BANK0 ] unsigned char 
  4622 ;;  h               4   34[BANK0 ] unsigned char 
  4623 ;;  ou              4    0[BANK0 ] unsigned char 
  4624 ;;  n               2   50[BANK0 ] int 
  4625 ;;  e               2   48[BANK0 ] int 
  4626 ;;  i               2   42[BANK0 ] int 
  4627 ;;  w               2   31[BANK0 ] int 
  4628 ;;  p               2   28[BANK0 ] int 
  4629 ;;  sign            2   26[BANK0 ] int 
  4630 ;;  d               2   24[BANK0 ] int 
  4631 ;;  ne              2   22[BANK0 ] int 
  4632 ;;  m               2   20[BANK0 ] int 
  4633 ;;  pp              2   18[BANK0 ] int 
  4634 ;;  t               2   16[BANK0 ] int 
  4635 ;;  mode            1   33[BANK0 ] unsigned char 
  4636 ;;  nmode           1   30[BANK0 ] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  2   49[COMRAM] int 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4646 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;Total ram usage:       68 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    9
  4653 ;; This function calls:
  4654 ;;		___awdiv
  4655 ;;		___awmod
  4656 ;;		___fladd
  4657 ;;		___fldiv
  4658 ;;		___fleq
  4659 ;;		___flge
  4660 ;;		___flmul
  4661 ;;		___flneg
  4662 ;;		___flsub
  4663 ;;		___fltol
  4664 ;;		___fpclassifyf
  4665 ;;		_floorf
  4666 ;;		_isupper
  4667 ;;		_pad
  4668 ;;		_strcpy
  4669 ;;		_tolower
  4670 ;; This function is called by:
  4671 ;;		_vfpfcnvrt
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text11
  4676  00006C                     __ptext11:
  4677                           	opt callstack 0
  4678  00006C                     _efgtoa:
  4679                           	opt callstack 17
  4680                           
  4681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 319: static int efgtoa(FILE *fp, long double f, char c)
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 320: {;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 320: {;C:\Progra
      +                          m Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 321:     char mode, n
      +                          mode;
  4682                           
  4683                           ;incstack = 0
  4684  00006C  0E00               	movlw	0
  4685  00006E  0100               	movlb	0	; () banked
  4686  000070  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4687  000072  0E00               	movlw	0
  4688  000074  6F7A               	movwf	efgtoa@sign& (0+255),b
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:   
      +                            g = f;
  4692  000076  C034  F08C         	movff	efgtoa@f,efgtoa@g
  4693  00007A  C035  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4694  00007E  C036  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4695  000082  C037  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           328:     if (g < 0.0) {
  4699  000086  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  4700  000088  D016               	goto	l6989
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 
      +                          329:         sign = 1;
  4704  00008A  0E00               	movlw	0
  4705  00008C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4706  00008E  0E01               	movlw	1
  4707  000090  6F7A               	movwf	efgtoa@sign& (0+255),b
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 33
      +                          0:         g = -g;
  4711  000092  C08C  F005         	movff	efgtoa@g,___flneg@f1
  4712  000096  C08D  F006         	movff	efgtoa@g+1,___flneg@f1+1
  4713  00009A  C08E  F007         	movff	efgtoa@g+2,___flneg@f1+2
  4714  00009E  C08F  F008         	movff	efgtoa@g+3,___flneg@f1+3
  4715  0000A2  EC2C  F019         	call	___flneg	;wreg free
  4716  0000A6  C005  F08C         	movff	?___flneg,efgtoa@g
  4717  0000AA  C006  F08D         	movff	?___flneg+1,efgtoa@g+1
  4718  0000AE  C007  F08E         	movff	?___flneg+2,efgtoa@g+2
  4719  0000B2  C008  F08F         	movff	?___flneg+3,efgtoa@g+3
  4720  0000B6                     l6989:
  4721                           
  4722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:   
      +                            n = 0;
  4723  0000B6  0E00               	movlw	0
  4724  0000B8  0100               	movlb	0	; () banked
  4725  0000BA  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4726  0000BC  0E00               	movlw	0
  4727  0000BE  6F92               	movwf	efgtoa@n& (0+255),b
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335
      +                          :     w = width;
  4731  0000C0  C0E1  F07F         	movff	_width,efgtoa@w
  4732  0000C4  C0E2  F080         	movff	_width+1,efgtoa@w+1
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c
      +                          99\common\doprnt.c: 336:     if (sign || (flags & (1 << 2))) {
  4736  0000C8  517A               	movf	efgtoa@sign& (0+255),w,b
  4737  0000CA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4738  0000CC  A4D8               	btfss	status,2,c
  4739  0000CE  D002               	goto	u9230
  4740                           
  4741                           ; BSR set to: 0
  4742  0000D0  A457               	btfss	_flags,2,c
  4743  0000D2  D013               	goto	l7009
  4744  0000D4                     u9230:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 337:         dbuf[n] = sign ? '-' : '+';
  4748  0000D4  517A               	movf	efgtoa@sign& (0+255),w,b
  4749  0000D6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4750  0000D8  A4D8               	btfss	status,2,c
  4751  0000DA  D004               	goto	l7001
  4752                           
  4753                           ; BSR set to: 0
  4754  0000DC  0E00               	movlw	0
  4755  0000DE  6F65               	movwf	(_efgtoa$1392+1)& (0+255),b
  4756  0000E0  0E2B               	movlw	43
  4757  0000E2  D003               	goto	L3
  4758  0000E4                     l7001:
  4759                           
  4760                           ; BSR set to: 0
  4761  0000E4  0E00               	movlw	0
  4762  0000E6  6F65               	movwf	(_efgtoa$1392+1)& (0+255),b
  4763  0000E8  0E2D               	movlw	45
  4764  0000EA                     L3:
  4765  0000EA  6F64               	movwf	_efgtoa$1392& (0+255),b
  4766                           
  4767                           ; BSR set to: 0
  4768  0000EC  C064  F117         	movff	_efgtoa$1392,_dbuf
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338: 
      +                                  ++n;
  4772  0000F0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4773  0000F2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339: 
      +                                  --w;
  4777  0000F4  077F               	decf	efgtoa@w& (0+255),f,b
  4778  0000F6  A0D8               	btfss	status,0,c
  4779  0000F8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4780  0000FA                     l7009:
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {;C:\Program Files (x86)\Mi
      +                          crochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? isupper((int)c)
      +                           : ((unsigned)((int)c)-'A') < 26)) {
  4784  0000FA  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  4785  0000FE  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4786  000102  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4787  000106  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4788  00010A  EC56  F013         	call	___fpclassifyf	;wreg free
  4789  00010E  0405               	decf	?___fpclassifyf,w,c
  4790  000110  1006               	iorwf	?___fpclassifyf+1,w,c
  4791  000112  A4D8               	btfss	status,2,c
  4792  000114  D04C               	goto	l7027
  4793  000116  0EBF               	movlw	191
  4794  000118  6E39               	movwf	??_efgtoa& (0+255),c
  4795  00011A  0EFF               	movlw	255
  4796  00011C  6E3A               	movwf	(??_efgtoa+1)& (0+255),c
  4797  00011E  5038               	movf	efgtoa@c,w,c
  4798  000120  6E3B               	movwf	(??_efgtoa+2)& (0+255),c
  4799  000122  6A3C               	clrf	(??_efgtoa+3)& (0+255),c
  4800  000124  5039               	movf	??_efgtoa,w,c
  4801  000126  263B               	addwf	??_efgtoa+2,f,c
  4802  000128  503A               	movf	??_efgtoa+1,w,c
  4803  00012A  223C               	addwfc	??_efgtoa+3,f,c
  4804  00012C  503C               	movf	??_efgtoa+3,w,c
  4805  00012E  E106               	bnz	u9260
  4806  000130  0E1A               	movlw	26
  4807  000132  5C3B               	subwf	??_efgtoa+2,w,c
  4808  000134  B0D8               	btfsc	status,0,c
  4809  000136  D002               	goto	u9260
  4810  000138  0E01               	movlw	1
  4811  00013A  D001               	goto	u9270
  4812  00013C                     u9260:
  4813  00013C  0E00               	movlw	0
  4814  00013E                     u9270:
  4815  00013E  0100               	movlb	0	; () banked
  4816  000140  6F66               	movwf	_efgtoa$1393& (0+255),b
  4817  000142  6B67               	clrf	(_efgtoa$1393+1)& (0+255),b
  4818                           
  4819                           ; BSR set to: 0
  4820  000144  5166               	movf	_efgtoa$1393& (0+255),w,b
  4821  000146  1167               	iorwf	(_efgtoa$1393+1)& (0+255),w,b
  4822  000148  B4D8               	btfsc	status,2,c
  4823  00014A  D00D               	goto	l7019
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c9
      +                          9\common\doprnt.c: 345:             strcpy(&dbuf[n], "INF");
  4827  00014C  0E17               	movlw	low _dbuf
  4828  00014E  2592               	addwf	efgtoa@n& (0+255),w,b
  4829  000150  6E05               	movwf	strcpy@dest,c
  4830  000152  0E01               	movlw	high _dbuf
  4831  000154  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4832  000156  6E06               	movwf	strcpy@dest+1,c
  4833  000158  0EE6               	movlw	low STR_61
  4834  00015A  6E07               	movwf	strcpy@src,c
  4835  00015C  0EFF               	movlw	high STR_61
  4836  00015E  6E08               	movwf	strcpy@src+1,c
  4837  000160  EC78  F017         	call	_strcpy	;wreg free
  4838                           
  4839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 3
      +                          46:         } else {
  4840  000164  D00C               	goto	l7021
  4841  000166                     l7019:
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c9
      +                          9\common\doprnt.c: 347:             strcpy(&dbuf[n], "inf");
  4845  000166  0E17               	movlw	low _dbuf
  4846  000168  2592               	addwf	efgtoa@n& (0+255),w,b
  4847  00016A  6E05               	movwf	strcpy@dest,c
  4848  00016C  0E01               	movlw	high _dbuf
  4849  00016E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4850  000170  6E06               	movwf	strcpy@dest+1,c
  4851  000172  0EEE               	movlw	low STR_62
  4852  000174  6E07               	movwf	strcpy@src,c
  4853  000176  0EFF               	movlw	high STR_62
  4854  000178  6E08               	movwf	strcpy@src+1,c
  4855  00017A  EC78  F017         	call	_strcpy	;wreg free
  4856  00017E                     l7021:
  4857                           
  4858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 349:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4859  00017E  0100               	movlb	0	; () banked
  4860  000180  0EFD               	movlw	253
  4861  000182  277F               	addwf	efgtoa@w& (0+255),f,b
  4862  000184  0EFF               	movlw	255
  4863  000186  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4864  000188                     l7023:
  4865                           
  4866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c9
      +                          9\common\doprnt.c: 350:         return pad(fp, &dbuf[0], w);
  4867  000188  C032  F017         	movff	efgtoa@fp,pad@fp
  4868  00018C  C033  F018         	movff	efgtoa@fp+1,pad@fp+1
  4869  000190  0E17               	movlw	low _dbuf
  4870  000192  6E19               	movwf	pad@buf,c
  4871  000194  0E01               	movlw	high _dbuf
  4872  000196  6E1A               	movwf	pad@buf+1,c
  4873  000198  C07F  F01B         	movff	efgtoa@w,pad@p
  4874  00019C  C080  F01C         	movff	efgtoa@w+1,pad@p+1
  4875  0001A0  EC55  F015         	call	_pad	;wreg free
  4876  0001A4  C017  F032         	movff	?_pad,?_efgtoa
  4877  0001A8  C018  F033         	movff	?_pad+1,?_efgtoa+1
  4878  0001AC  0012               	return	
  4879  0001AE                     l7027:
  4880                           
  4881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {;C:\Program Files (x86)\Mi
      +                          crochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? isupper((int)c)
      +                           : ((unsigned)((int)c)-'A') < 26)) {
  4882  0001AE  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  4883  0001B2  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4884  0001B6  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4885  0001BA  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4886  0001BE  EC56  F013         	call	___fpclassifyf	;wreg free
  4887  0001C2  5005               	movf	?___fpclassifyf,w,c
  4888  0001C4  1006               	iorwf	?___fpclassifyf+1,w,c
  4889  0001C6  A4D8               	btfss	status,2,c
  4890  0001C8  D035               	goto	l7045
  4891  0001CA  0EBF               	movlw	191
  4892  0001CC  6E39               	movwf	??_efgtoa& (0+255),c
  4893  0001CE  0EFF               	movlw	255
  4894  0001D0  6E3A               	movwf	(??_efgtoa+1)& (0+255),c
  4895  0001D2  5038               	movf	efgtoa@c,w,c
  4896  0001D4  6E3B               	movwf	(??_efgtoa+2)& (0+255),c
  4897  0001D6  6A3C               	clrf	(??_efgtoa+3)& (0+255),c
  4898  0001D8  5039               	movf	??_efgtoa,w,c
  4899  0001DA  263B               	addwf	??_efgtoa+2,f,c
  4900  0001DC  503A               	movf	??_efgtoa+1,w,c
  4901  0001DE  223C               	addwfc	??_efgtoa+3,f,c
  4902  0001E0  503C               	movf	??_efgtoa+3,w,c
  4903  0001E2  E106               	bnz	u9300
  4904  0001E4  0E1A               	movlw	26
  4905  0001E6  5C3B               	subwf	??_efgtoa+2,w,c
  4906  0001E8  B0D8               	btfsc	status,0,c
  4907  0001EA  D002               	goto	u9300
  4908  0001EC  0E01               	movlw	1
  4909  0001EE  D001               	goto	u9310
  4910  0001F0                     u9300:
  4911  0001F0  0E00               	movlw	0
  4912  0001F2                     u9310:
  4913  0001F2  0100               	movlb	0	; () banked
  4914  0001F4  6F68               	movwf	_efgtoa$1397& (0+255),b
  4915  0001F6  6B69               	clrf	(_efgtoa$1397+1)& (0+255),b
  4916                           
  4917                           ; BSR set to: 0
  4918  0001F8  5168               	movf	_efgtoa$1397& (0+255),w,b
  4919  0001FA  1169               	iorwf	(_efgtoa$1397+1)& (0+255),w,b
  4920  0001FC  B4D8               	btfsc	status,2,c
  4921  0001FE  D00D               	goto	l7037
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c9
      +                          9\common\doprnt.c: 354:             strcpy(&dbuf[n], "NAN");
  4925  000200  0E17               	movlw	low _dbuf
  4926  000202  2592               	addwf	efgtoa@n& (0+255),w,b
  4927  000204  6E05               	movwf	strcpy@dest,c
  4928  000206  0E01               	movlw	high _dbuf
  4929  000208  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4930  00020A  6E06               	movwf	strcpy@dest+1,c
  4931  00020C  0EEA               	movlw	low STR_65
  4932  00020E  6E07               	movwf	strcpy@src,c
  4933  000210  0EFF               	movlw	high STR_65
  4934  000212  6E08               	movwf	strcpy@src+1,c
  4935  000214  EC78  F017         	call	_strcpy	;wreg free
  4936                           
  4937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 3
      +                          55:         } else {
  4938  000218  D7B2               	goto	l7021
  4939  00021A                     l7037:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c9
      +                          9\common\doprnt.c: 356:             strcpy(&dbuf[n], "nan");
  4943  00021A  0E17               	movlw	low _dbuf
  4944  00021C  2592               	addwf	efgtoa@n& (0+255),w,b
  4945  00021E  6E05               	movwf	strcpy@dest,c
  4946  000220  0E01               	movlw	high _dbuf
  4947  000222  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4948  000224  6E06               	movwf	strcpy@dest+1,c
  4949  000226  0EF2               	movlw	low STR_66
  4950  000228  6E07               	movwf	strcpy@src,c
  4951  00022A  0EFF               	movlw	high STR_66
  4952  00022C  6E08               	movwf	strcpy@src+1,c
  4953  00022E  EC78  F017         	call	_strcpy	;wreg free
  4954  000232  D7A5               	goto	l7021
  4955  000234                     l7045:
  4956                           
  4957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363: 
      +                              u = 1.0;
  4958  000234  0E00               	movlw	0
  4959  000236  0100               	movlb	0	; () banked
  4960  000238  6F94               	movwf	efgtoa@u& (0+255),b
  4961  00023A  0E00               	movlw	0
  4962  00023C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4963  00023E  0E80               	movlw	128
  4964  000240  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4965  000242  0E3F               	movlw	63
  4966  000244  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4967                           
  4968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:   
      +                            e = 0;
  4969  000246  0E00               	movlw	0
  4970  000248  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4971  00024A  0E00               	movlw	0
  4972  00024C  6F90               	movwf	efgtoa@e& (0+255),b
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprn
      +                          t.c: 365:     if (!(g == 0.0)) {
  4976  00024E  C08C  F005         	movff	efgtoa@g,___fleq@ff1
  4977  000252  C08D  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  4978  000256  C08E  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  4979  00025A  C08F  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  4980  00025E  0E00               	movlw	0
  4981  000260  6E09               	movwf	___fleq@ff2,c
  4982  000262  0E00               	movlw	0
  4983  000264  6E0A               	movwf	___fleq@ff2+1,c
  4984  000266  0E00               	movlw	0
  4985  000268  6E0B               	movwf	___fleq@ff2+2,c
  4986  00026A  0E00               	movlw	0
  4987  00026C  6E0C               	movwf	___fleq@ff2+3,c
  4988  00026E  ECA0  F015         	call	___fleq	;wreg free
  4989  000272  A0D8               	btfss	status,0,c
  4990  000274  D01E               	goto	l7055
  4991  000276  D076               	goto	u9350
  4992  000278                     l7051:
  4993                           
  4994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 367:             u = u*10.0;
  4995  000278  C094  F005         	movff	efgtoa@u,___flmul@b
  4996  00027C  C095  F006         	movff	efgtoa@u+1,___flmul@b+1
  4997  000280  C096  F007         	movff	efgtoa@u+2,___flmul@b+2
  4998  000284  C097  F008         	movff	efgtoa@u+3,___flmul@b+3
  4999  000288  0E00               	movlw	0
  5000  00028A  6E09               	movwf	___flmul@a,c
  5001  00028C  0E00               	movlw	0
  5002  00028E  6E0A               	movwf	___flmul@a+1,c
  5003  000290  0E20               	movlw	32
  5004  000292  6E0B               	movwf	___flmul@a+2,c
  5005  000294  0E41               	movlw	65
  5006  000296  6E0C               	movwf	___flmul@a+3,c
  5007  000298  ECB8  F008         	call	___flmul	;wreg free
  5008  00029C  C005  F094         	movff	?___flmul,efgtoa@u
  5009  0002A0  C006  F095         	movff	?___flmul+1,efgtoa@u+1
  5010  0002A4  C007  F096         	movff	?___flmul+2,efgtoa@u+2
  5011  0002A8  C008  F097         	movff	?___flmul+3,efgtoa@u+3
  5012                           
  5013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 3
      +                          68:             ++e;
  5014  0002AC  0100               	movlb	0	; () banked
  5015  0002AE  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5016  0002B0  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5017  0002B2                     l7055:
  5018                           
  5019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 366:         while (!(g < (u*10.0))) {
  5020  0002B2  C08C  F01E         	movff	efgtoa@g,___flge@ff1
  5021  0002B6  C08D  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  5022  0002BA  C08E  F020         	movff	efgtoa@g+2,___flge@ff1+2
  5023  0002BE  C08F  F021         	movff	efgtoa@g+3,___flge@ff1+3
  5024  0002C2  0E00               	movlw	0
  5025  0002C4  6E09               	movwf	___flmul@a,c
  5026  0002C6  0E00               	movlw	0
  5027  0002C8  6E0A               	movwf	___flmul@a+1,c
  5028  0002CA  0E20               	movlw	32
  5029  0002CC  6E0B               	movwf	___flmul@a+2,c
  5030  0002CE  0E41               	movlw	65
  5031  0002D0  6E0C               	movwf	___flmul@a+3,c
  5032  0002D2  C094  F005         	movff	efgtoa@u,___flmul@b
  5033  0002D6  C095  F006         	movff	efgtoa@u+1,___flmul@b+1
  5034  0002DA  C096  F007         	movff	efgtoa@u+2,___flmul@b+2
  5035  0002DE  C097  F008         	movff	efgtoa@u+3,___flmul@b+3
  5036  0002E2  ECB8  F008         	call	___flmul	;wreg free
  5037  0002E6  C005  F022         	movff	?___flmul,___flge@ff2
  5038  0002EA  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  5039  0002EE  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  5040  0002F2  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  5041  0002F6  ECEE  F012         	call	___flge	;wreg free
  5042  0002FA  A0D8               	btfss	status,0,c
  5043  0002FC  D01F               	goto	l7061
  5044  0002FE  D7BC               	goto	l7051
  5045  000300                     l7057:
  5046                           
  5047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 371:             u = u/10.0;
  5048  000300  C094  F005         	movff	efgtoa@u,___fldiv@b
  5049  000304  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  5050  000308  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  5051  00030C  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  5052  000310  0E00               	movlw	0
  5053  000312  6E09               	movwf	___fldiv@a,c
  5054  000314  0E00               	movlw	0
  5055  000316  6E0A               	movwf	___fldiv@a+1,c
  5056  000318  0E20               	movlw	32
  5057  00031A  6E0B               	movwf	___fldiv@a+2,c
  5058  00031C  0E41               	movlw	65
  5059  00031E  6E0C               	movwf	___fldiv@a+3,c
  5060  000320  ECE7  F00B         	call	___fldiv	;wreg free
  5061  000324  C005  F094         	movff	?___fldiv,efgtoa@u
  5062  000328  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  5063  00032C  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  5064  000330  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  5065                           
  5066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 3
      +                          72:             --e;
  5067  000334  0100               	movlb	0	; () banked
  5068  000336  0790               	decf	efgtoa@e& (0+255),f,b
  5069  000338  A0D8               	btfss	status,0,c
  5070  00033A  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  5071  00033C                     l7061:
  5072                           
  5073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 370:         while (g < u) {
  5074  00033C  C08C  F01E         	movff	efgtoa@g,___flge@ff1
  5075  000340  C08D  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  5076  000344  C08E  F020         	movff	efgtoa@g+2,___flge@ff1+2
  5077  000348  C08F  F021         	movff	efgtoa@g+3,___flge@ff1+3
  5078  00034C  C094  F022         	movff	efgtoa@u,___flge@ff2
  5079  000350  C095  F023         	movff	efgtoa@u+1,___flge@ff2+1
  5080  000354  C096  F024         	movff	efgtoa@u+2,___flge@ff2+2
  5081  000358  C097  F025         	movff	efgtoa@u+3,___flge@ff2+3
  5082  00035C  ECEE  F012         	call	___flge	;wreg free
  5083  000360  A0D8               	btfss	status,0,c
  5084  000362  D7CE               	goto	l7057
  5085  000364                     u9350:
  5086                           
  5087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 377:     mode = tolower((int)c);
  5088  000364  C038  F00B         	movff	efgtoa@c,tolower@c
  5089  000368  6A0C               	clrf	tolower@c+1,c
  5090  00036A  ECCA  F017         	call	_tolower	;wreg free
  5091  00036E  500B               	movf	?_tolower,w,c
  5092  000370  0100               	movlb	0	; () banked
  5093  000372  6F81               	movwf	efgtoa@mode& (0+255),b
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 
      +                          378:     nmode = mode;
  5097  000374  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprn
      +                          t.c: 379:     if (mode == 'g') {
  5101  000378  0E67               	movlw	103
  5102  00037A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5103  00037C  A4D8               	btfss	status,2,c
  5104  00037E  D019               	goto	l7077
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           380:   if (prec == 0) {
  5108  000380  51E3               	movf	_prec& (0+255),w,b
  5109  000382  11E4               	iorwf	(_prec+1)& (0+255),w,b
  5110  000384  A4D8               	btfss	status,2,c
  5111  000386  D004               	goto	l7073
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381: 
      +                             prec = 1;
  5115  000388  0E00               	movlw	0
  5116  00038A  6FE4               	movwf	(_prec+1)& (0+255),b
  5117  00038C  0E01               	movlw	1
  5118  00038E  6FE3               	movwf	_prec& (0+255),b
  5119  000390                     l7073:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 383:         p = (0 < prec) ? prec : 6;
  5123  000390  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  5124  000392  D005               	goto	u9380
  5125  000394  51E4               	movf	(_prec+1)& (0+255),w,b
  5126  000396  E108               	bnz	l659
  5127  000398  05E3               	decf	_prec& (0+255),w,b
  5128  00039A  B0D8               	btfsc	status,0,c
  5129  00039C  D005               	goto	l659
  5130  00039E                     u9380:
  5131                           
  5132                           ; BSR set to: 0
  5133  00039E  0E00               	movlw	0
  5134  0003A0  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5135  0003A2  0E06               	movlw	6
  5136  0003A4  6F7C               	movwf	efgtoa@p& (0+255),b
  5137  0003A6  D008               	goto	l7083
  5138  0003A8                     l659:
  5139                           
  5140                           ; BSR set to: 0
  5141  0003A8  C0E3  F07C         	movff	_prec,efgtoa@p
  5142  0003AC  C0E4  F07D         	movff	_prec+1,efgtoa@p+1
  5143  0003B0  D003               	goto	l7083
  5144  0003B2                     l7077:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 385:         p = (prec < 0) ? 6 : prec;
  5148  0003B2  AFE4               	btfss	(_prec+1)& (0+255),7,b
  5149  0003B4  D7F9               	goto	l659
  5150  0003B6  D7F3               	goto	u9380
  5151  0003B8                     l7083:
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprn
      +                          t.c: 389:     if (mode == 'g') {
  5155  0003B8  0E67               	movlw	103
  5156  0003BA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5157  0003BC  A4D8               	btfss	status,2,c
  5158  0003BE  D022               	goto	l7093
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 390:         if (!(e < -4) && !((p - 1) < e)) {
  5162  0003C0  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5163  0003C2  D006               	goto	u9410
  5164  0003C4  0EFC               	movlw	252
  5165  0003C6  5D90               	subwf	efgtoa@e& (0+255),w,b
  5166  0003C8  0EFF               	movlw	255
  5167  0003CA  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5168  0003CC  A0D8               	btfss	status,0,c
  5169  0003CE  D018               	goto	l7091
  5170  0003D0                     u9410:
  5171                           
  5172                           ; BSR set to: 0
  5173  0003D0  0EFF               	movlw	255
  5174  0003D2  6E39               	movwf	??_efgtoa& (0+255),c
  5175  0003D4  0EFF               	movlw	255
  5176  0003D6  6E3A               	movwf	(??_efgtoa+1)& (0+255),c
  5177  0003D8  C07C  F03B         	movff	efgtoa@p,??_efgtoa+2
  5178  0003DC  C07D  F03C         	movff	efgtoa@p+1,??_efgtoa+3
  5179  0003E0  5039               	movf	??_efgtoa,w,c
  5180  0003E2  263B               	addwf	??_efgtoa+2,f,c
  5181  0003E4  503A               	movf	??_efgtoa+1,w,c
  5182  0003E6  223C               	addwfc	??_efgtoa+3,f,c
  5183  0003E8  5190               	movf	efgtoa@e& (0+255),w,b
  5184  0003EA  5C3B               	subwf	??_efgtoa+2,w,c
  5185  0003EC  503C               	movf	??_efgtoa+3,w,c
  5186  0003EE  0A80               	xorlw	128
  5187  0003F0  6E3D               	movwf	(??_efgtoa+4)& (0+255),c
  5188  0003F2  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5189  0003F4  0A80               	xorlw	128
  5190  0003F6  583D               	subwfb	(??_efgtoa+4)& (0+255),w,c
  5191  0003F8  A0D8               	btfss	status,0,c
  5192  0003FA  D002               	goto	l7091
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 391:             nmode = 'f';
  5196  0003FC  0E66               	movlw	102
  5197  0003FE  D001               	goto	L4
  5198  000400                     l7091:
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 393:             nmode = 'e';
  5202  000400  0E65               	movlw	101
  5203  000402                     L4:
  5204  000402  6F7E               	movwf	efgtoa@nmode& (0+255),b
  5205  000404                     l7093:
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:   
      +                            m = p;
  5209  000404  C07C  F074         	movff	efgtoa@p,efgtoa@m
  5210  000408  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 399:     if (!(mode == 'g') || ((nmode == 'f') &&
      +                           (e < 0))) {
  5214  00040C  0E67               	movlw	103
  5215  00040E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5216  000410  A4D8               	btfss	status,2,c
  5217  000412  D005               	goto	u9450
  5218                           
  5219                           ; BSR set to: 0
  5220  000414  0E66               	movlw	102
  5221  000416  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5222  000418  B4D8               	btfsc	status,2,c
  5223                           
  5224                           ; BSR set to: 0
  5225  00041A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5226  00041C  D002               	goto	l7103
  5227  00041E                     u9450:
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400: 
      +                                  ++m;
  5231  00041E  4B74               	infsnz	efgtoa@m& (0+255),f,b
  5232  000420  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  5233  000422                     l7103:
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 404:     if (nmode == 'f') {
  5237  000422  0E66               	movlw	102
  5238  000424  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5239  000426  A4D8               	btfss	status,2,c
  5240  000428  D016               	goto	l7113
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 405:         if (e < 0) {
  5244  00042A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5245  00042C  D00C               	goto	l7109
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 406:             u = 1.0;
  5249  00042E  0E00               	movlw	0
  5250  000430  6F94               	movwf	efgtoa@u& (0+255),b
  5251  000432  0E00               	movlw	0
  5252  000434  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5253  000436  0E80               	movlw	128
  5254  000438  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5255  00043A  0E3F               	movlw	63
  5256  00043C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5257                           
  5258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           407:             e = 0;
  5259  00043E  0E00               	movlw	0
  5260  000440  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5261  000442  0E00               	movlw	0
  5262  000444  6F90               	movwf	efgtoa@e& (0+255),b
  5263  000446                     l7109:
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 409:         if (!(mode == 'g')) {
  5267  000446  0E67               	movlw	103
  5268  000448  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5269  00044A  B4D8               	btfsc	status,2,c
  5270  00044C  D004               	goto	l7113
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 410:             m += e;
  5274  00044E  5190               	movf	efgtoa@e& (0+255),w,b
  5275  000450  2774               	addwf	efgtoa@m& (0+255),f,b
  5276  000452  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5277  000454  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5278  000456                     l7113:
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:   
      +                            i = 0;
  5282  000456  0E00               	movlw	0
  5283  000458  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5284  00045A  0E00               	movlw	0
  5285  00045C  6F8A               	movwf	efgtoa@i& (0+255),b
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:   
      +                            h = g;
  5289  00045E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5290  000462  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5291  000466  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5292  00046A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:  
      +                             ou = u;
  5296  00046E  C094  F060         	movff	efgtoa@u,efgtoa@ou
  5297  000472  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  5298  000476  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  5299  00047A  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  5300                           
  5301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 418:     while (i < m) {
  5302  00047E  D07B               	goto	l7127
  5303  000480                     l7119:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 419:         l = floorf(h/u);
  5307  000480  C082  F005         	movff	efgtoa@h,___fldiv@b
  5308  000484  C083  F006         	movff	efgtoa@h+1,___fldiv@b+1
  5309  000488  C084  F007         	movff	efgtoa@h+2,___fldiv@b+2
  5310  00048C  C085  F008         	movff	efgtoa@h+3,___fldiv@b+3
  5311  000490  C094  F009         	movff	efgtoa@u,___fldiv@a
  5312  000494  C095  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  5313  000498  C096  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  5314  00049C  C097  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  5315  0004A0  ECE7  F00B         	call	___fldiv	;wreg free
  5316  0004A4  C005  F01E         	movff	?___fldiv,floorf@x
  5317  0004A8  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  5318  0004AC  C007  F020         	movff	?___fldiv+2,floorf@x+2
  5319  0004B0  C008  F021         	movff	?___fldiv+3,floorf@x+3
  5320  0004B4  EC64  F00F         	call	_floorf	;wreg free
  5321  0004B8  C01E  F086         	movff	?_floorf,efgtoa@l
  5322  0004BC  C01F  F087         	movff	?_floorf+1,efgtoa@l+1
  5323  0004C0  C020  F088         	movff	?_floorf+2,efgtoa@l+2
  5324  0004C4  C021  F089         	movff	?_floorf+3,efgtoa@l+3
  5325                           
  5326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 420:         d = (int)l;
  5327  0004C8  C086  F005         	movff	efgtoa@l,___fltol@f1
  5328  0004CC  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  5329  0004D0  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  5330  0004D4  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  5331  0004D8  ECBC  F013         	call	___fltol	;wreg free
  5332  0004DC  C005  F078         	movff	?___fltol,efgtoa@d
  5333  0004E0  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  5334                           
  5335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 
      +                          421:         h -= l*u;
  5336  0004E4  C082  F01E         	movff	efgtoa@h,___flsub@b
  5337  0004E8  C083  F01F         	movff	efgtoa@h+1,___flsub@b+1
  5338  0004EC  C084  F020         	movff	efgtoa@h+2,___flsub@b+2
  5339  0004F0  C085  F021         	movff	efgtoa@h+3,___flsub@b+3
  5340  0004F4  C094  F009         	movff	efgtoa@u,___flmul@a
  5341  0004F8  C095  F00A         	movff	efgtoa@u+1,___flmul@a+1
  5342  0004FC  C096  F00B         	movff	efgtoa@u+2,___flmul@a+2
  5343  000500  C097  F00C         	movff	efgtoa@u+3,___flmul@a+3
  5344  000504  C086  F005         	movff	efgtoa@l,___flmul@b
  5345  000508  C087  F006         	movff	efgtoa@l+1,___flmul@b+1
  5346  00050C  C088  F007         	movff	efgtoa@l+2,___flmul@b+2
  5347  000510  C089  F008         	movff	efgtoa@l+3,___flmul@b+3
  5348  000514  ECB8  F008         	call	___flmul	;wreg free
  5349  000518  C005  F022         	movff	?___flmul,___flsub@a
  5350  00051C  C006  F023         	movff	?___flmul+1,___flsub@a+1
  5351  000520  C007  F024         	movff	?___flmul+2,___flsub@a+2
  5352  000524  C008  F025         	movff	?___flmul+3,___flsub@a+3
  5353  000528  EC15  F018         	call	___flsub	;wreg free
  5354  00052C  C01E  F082         	movff	?___flsub,efgtoa@h
  5355  000530  C01F  F083         	movff	?___flsub+1,efgtoa@h+1
  5356  000534  C020  F084         	movff	?___flsub+2,efgtoa@h+2
  5357  000538  C021  F085         	movff	?___flsub+3,efgtoa@h+3
  5358                           
  5359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 422:         u = u/10.0;
  5360  00053C  C094  F005         	movff	efgtoa@u,___fldiv@b
  5361  000540  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  5362  000544  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  5363  000548  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  5364  00054C  0E00               	movlw	0
  5365  00054E  6E09               	movwf	___fldiv@a,c
  5366  000550  0E00               	movlw	0
  5367  000552  6E0A               	movwf	___fldiv@a+1,c
  5368  000554  0E20               	movlw	32
  5369  000556  6E0B               	movwf	___fldiv@a+2,c
  5370  000558  0E41               	movlw	65
  5371  00055A  6E0C               	movwf	___fldiv@a+3,c
  5372  00055C  ECE7  F00B         	call	___fldiv	;wreg free
  5373  000560  C005  F094         	movff	?___fldiv,efgtoa@u
  5374  000564  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  5375  000568  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  5376  00056C  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  5377                           
  5378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423: 
      +                                  ++i;
  5379  000570  0100               	movlb	0	; () banked
  5380  000572  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5381  000574  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5382  000576                     l7127:
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 418:     while (i < m) {
  5386  000576  5174               	movf	efgtoa@m& (0+255),w,b
  5387  000578  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5388  00057A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5389  00057C  0A80               	xorlw	128
  5390  00057E  6E39               	movwf	??_efgtoa& (0+255),c
  5391  000580  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  5392  000582  0A80               	xorlw	128
  5393  000584  5839               	subwfb	??_efgtoa& (0+255),w,c
  5394  000586  A0D8               	btfss	status,0,c
  5395  000588  D77B               	goto	l7119
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427
      +                          :     l = u*5.0;
  5399  00058A  C094  F005         	movff	efgtoa@u,___flmul@b
  5400  00058E  C095  F006         	movff	efgtoa@u+1,___flmul@b+1
  5401  000592  C096  F007         	movff	efgtoa@u+2,___flmul@b+2
  5402  000596  C097  F008         	movff	efgtoa@u+3,___flmul@b+3
  5403  00059A  0E00               	movlw	0
  5404  00059C  6E09               	movwf	___flmul@a,c
  5405  00059E  0E00               	movlw	0
  5406  0005A0  6E0A               	movwf	___flmul@a+1,c
  5407  0005A2  0EA0               	movlw	160
  5408  0005A4  6E0B               	movwf	___flmul@a+2,c
  5409  0005A6  0E40               	movlw	64
  5410  0005A8  6E0C               	movwf	___flmul@a+3,c
  5411  0005AA  ECB8  F008         	call	___flmul	;wreg free
  5412  0005AE  C005  F086         	movff	?___flmul,efgtoa@l
  5413  0005B2  C006  F087         	movff	?___flmul+1,efgtoa@l+1
  5414  0005B6  C007  F088         	movff	?___flmul+2,efgtoa@l+2
  5415  0005BA  C008  F089         	movff	?___flmul+3,efgtoa@l+3
  5416                           
  5417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 4
      +                          28:     if (h < l) {
  5418  0005BE  C082  F01E         	movff	efgtoa@h,___flge@ff1
  5419  0005C2  C083  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  5420  0005C6  C084  F020         	movff	efgtoa@h+2,___flge@ff1+2
  5421  0005CA  C085  F021         	movff	efgtoa@h+3,___flge@ff1+3
  5422  0005CE  C086  F022         	movff	efgtoa@l,___flge@ff2
  5423  0005D2  C087  F023         	movff	efgtoa@l+1,___flge@ff2+1
  5424  0005D6  C088  F024         	movff	efgtoa@l+2,___flge@ff2+2
  5425  0005DA  C089  F025         	movff	efgtoa@l+3,___flge@ff2+3
  5426  0005DE  ECEE  F012         	call	___flge	;wreg free
  5427  0005E2  B0D8               	btfsc	status,0,c
  5428  0005E4  D003               	goto	l7135
  5429                           
  5430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 4
      +                          29:         l = 0.0;
  5431  0005E6  0E00               	movlw	0
  5432  0005E8  0100               	movlb	0	; () banked
  5433  0005EA  D018               	goto	L5
  5434  0005EC                     l7135:
  5435                           
  5436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 432:         if ((h == l) && !(d % 2)) {
  5437  0005EC  C082  F005         	movff	efgtoa@h,___fleq@ff1
  5438  0005F0  C083  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  5439  0005F4  C084  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  5440  0005F8  C085  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  5441  0005FC  C086  F009         	movff	efgtoa@l,___fleq@ff2
  5442  000600  C087  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  5443  000604  C088  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  5444  000608  C089  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  5445  00060C  ECA0  F015         	call	___fleq	;wreg free
  5446  000610  A0D8               	btfss	status,0,c
  5447  000612  D00B               	goto	l7141
  5448  000614  0100               	movlb	0	; () banked
  5449  000616  B178               	btfsc	efgtoa@d& (0+255),0,b
  5450  000618  D008               	goto	l7141
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 433:             l = 0.0;
  5454  00061A  0E00               	movlw	0
  5455  00061C                     L5:
  5456  00061C  6F86               	movwf	efgtoa@l& (0+255),b
  5457  00061E  0E00               	movlw	0
  5458  000620  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5459  000622  0E00               	movlw	0
  5460  000624  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5461  000626  0E00               	movlw	0
  5462  000628  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5463  00062A                     l7141:
  5464                           
  5465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438
      +                          :     h = g + l;
  5466  00062A  C08C  F005         	movff	efgtoa@g,___fladd@b
  5467  00062E  C08D  F006         	movff	efgtoa@g+1,___fladd@b+1
  5468  000632  C08E  F007         	movff	efgtoa@g+2,___fladd@b+2
  5469  000636  C08F  F008         	movff	efgtoa@g+3,___fladd@b+3
  5470  00063A  C086  F009         	movff	efgtoa@l,___fladd@a
  5471  00063E  C087  F00A         	movff	efgtoa@l+1,___fladd@a+1
  5472  000642  C088  F00B         	movff	efgtoa@l+2,___fladd@a+2
  5473  000646  C089  F00C         	movff	efgtoa@l+3,___fladd@a+3
  5474  00064A  EC61  F00A         	call	___fladd	;wreg free
  5475  00064E  C005  F082         	movff	?___fladd,efgtoa@h
  5476  000652  C006  F083         	movff	?___fladd+1,efgtoa@h+1
  5477  000656  C007  F084         	movff	?___fladd+2,efgtoa@h+2
  5478  00065A  C008  F085         	movff	?___fladd+3,efgtoa@h+3
  5479                           
  5480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:  
      +                             u = ou;
  5481  00065E  C060  F094         	movff	efgtoa@ou,efgtoa@u
  5482  000662  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5483  000666  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5484  00066A  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5485                           
  5486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 442:     ne = (nmode == 'e') ? 0 : e;
  5487  00066E  0E65               	movlw	101
  5488  000670  0100               	movlb	0	; () banked
  5489  000672  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5490  000674  B4D8               	btfsc	status,2,c
  5491  000676  D005               	goto	l7149
  5492                           
  5493                           ; BSR set to: 0
  5494  000678  C090  F076         	movff	efgtoa@e,efgtoa@ne
  5495  00067C  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  5496  000680  D004               	goto	l685
  5497  000682                     l7149:
  5498                           
  5499                           ; BSR set to: 0
  5500  000682  0E00               	movlw	0
  5501  000684  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  5502  000686  0E00               	movlw	0
  5503  000688  6F76               	movwf	efgtoa@ne& (0+255),b
  5504  00068A                     l685:
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:  
      +                             pp = 0;
  5508  00068A  0E00               	movlw	0
  5509  00068C  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  5510  00068E  0E00               	movlw	0
  5511  000690  6F72               	movwf	efgtoa@pp& (0+255),b
  5512                           
  5513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:   
      +                            t = 0;
  5514  000692  0E00               	movlw	0
  5515  000694  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  5516  000696  0E00               	movlw	0
  5517  000698  6F70               	movwf	efgtoa@t& (0+255),b
  5518                           
  5519                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:   
      +                            i = 0;
  5520  00069A  0E00               	movlw	0
  5521  00069C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5522  00069E  0E00               	movlw	0
  5523  0006A0  6F8A               	movwf	efgtoa@i& (0+255),b
  5524                           
  5525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c99\common\doprnt.c: 446:     while ((i < m) && (n < (80 - 5))) {
  5526  0006A2  D0C7               	goto	l7199
  5527  0006A4                     l7151:
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 447:         l = floorf(h/u);
  5531  0006A4  C082  F005         	movff	efgtoa@h,___fldiv@b
  5532  0006A8  C083  F006         	movff	efgtoa@h+1,___fldiv@b+1
  5533  0006AC  C084  F007         	movff	efgtoa@h+2,___fldiv@b+2
  5534  0006B0  C085  F008         	movff	efgtoa@h+3,___fldiv@b+3
  5535  0006B4  C094  F009         	movff	efgtoa@u,___fldiv@a
  5536  0006B8  C095  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  5537  0006BC  C096  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  5538  0006C0  C097  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  5539  0006C4  ECE7  F00B         	call	___fldiv	;wreg free
  5540  0006C8  C005  F01E         	movff	?___fldiv,floorf@x
  5541  0006CC  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  5542  0006D0  C007  F020         	movff	?___fldiv+2,floorf@x+2
  5543  0006D4  C008  F021         	movff	?___fldiv+3,floorf@x+3
  5544  0006D8  EC64  F00F         	call	_floorf	;wreg free
  5545  0006DC  C01E  F086         	movff	?_floorf,efgtoa@l
  5546  0006E0  C01F  F087         	movff	?_floorf+1,efgtoa@l+1
  5547  0006E4  C020  F088         	movff	?_floorf+2,efgtoa@l+2
  5548  0006E8  C021  F089         	movff	?_floorf+3,efgtoa@l+3
  5549                           
  5550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 448:         d = (int)l;
  5551  0006EC  C086  F005         	movff	efgtoa@l,___fltol@f1
  5552  0006F0  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  5553  0006F4  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  5554  0006F8  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  5555  0006FC  ECBC  F013         	call	___fltol	;wreg free
  5556  000700  C005  F078         	movff	?___fltol,efgtoa@d
  5557  000704  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  5558                           
  5559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {;C:\Program Files (x86)\M
      +                          icrochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:         if (!(flags & (1 << 4))
      +                           && !d && (mode == 'g') && (ne < 0)) {
  5560  000708  B857               	btfsc	_flags,4,c
  5561  00070A  D00D               	goto	l7163
  5562  00070C  0100               	movlb	0	; () banked
  5563  00070E  5178               	movf	efgtoa@d& (0+255),w,b
  5564  000710  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5565  000712  A4D8               	btfss	status,2,c
  5566  000714  D008               	goto	l7163
  5567                           
  5568                           ; BSR set to: 0
  5569  000716  0E67               	movlw	103
  5570  000718  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5571  00071A  B4D8               	btfsc	status,2,c
  5572                           
  5573                           ; BSR set to: 0
  5574  00071C  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5575  00071E  D003               	goto	l7163
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 4
      +                          50:             ++t;
  5579  000720  4B70               	infsnz	efgtoa@t& (0+255),f,b
  5580  000722  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  5581                           
  5582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 4
      +                          51:         } else {
  5583  000724  D03A               	goto	l7191
  5584  000726                     l7163:
  5585                           
  5586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 452:             if (!pp && (ne < 0)) {
  5587  000726  0100               	movlb	0	; () banked
  5588  000728  5172               	movf	efgtoa@pp& (0+255),w,b
  5589  00072A  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5590  00072C  B4D8               	btfsc	status,2,c
  5591                           
  5592                           ; BSR set to: 0
  5593  00072E  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5594  000730  D022               	goto	l7183
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 453:                 dbuf[n++] = '.';
  5598  000732  0E17               	movlw	low _dbuf
  5599  000734  2592               	addwf	efgtoa@n& (0+255),w,b
  5600  000736  6ED9               	movwf	fsr2l,c
  5601  000738  0E01               	movlw	high _dbuf
  5602  00073A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5603  00073C  6EDA               	movwf	fsr2h,c
  5604  00073E  0E2E               	movlw	46
  5605  000740  6EDF               	movwf	indf2,c
  5606                           
  5607                           ; BSR set to: 0
  5608  000742  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5609  000744  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 454:                 --w;
  5613  000746  077F               	decf	efgtoa@w& (0+255),f,b
  5614  000748  A0D8               	btfss	status,0,c
  5615  00074A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 455:                 pp = 1;
  5619  00074C  0E00               	movlw	0
  5620  00074E  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  5621  000750  0E01               	movlw	1
  5622  000752  6F72               	movwf	efgtoa@pp& (0+255),b
  5623  000754  D010               	goto	l7183
  5624  000756                     l7175:
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 458:                 dbuf[n++] = '0';
  5628  000756  0E17               	movlw	low _dbuf
  5629  000758  2592               	addwf	efgtoa@n& (0+255),w,b
  5630  00075A  6ED9               	movwf	fsr2l,c
  5631  00075C  0E01               	movlw	high _dbuf
  5632  00075E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5633  000760  6EDA               	movwf	fsr2h,c
  5634  000762  0E30               	movlw	48
  5635  000764  6EDF               	movwf	indf2,c
  5636                           
  5637                           ; BSR set to: 0
  5638  000766  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5639  000768  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 459:                 --w;
  5643  00076A  077F               	decf	efgtoa@w& (0+255),f,b
  5644  00076C  A0D8               	btfss	status,0,c
  5645  00076E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 460:                 --t;
  5649  000770  0770               	decf	efgtoa@t& (0+255),f,b
  5650  000772  A0D8               	btfss	status,0,c
  5651  000774  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  5652  000776                     l7183:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 457:             while (t) {
  5656  000776  5170               	movf	efgtoa@t& (0+255),w,b
  5657  000778  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5658  00077A  A4D8               	btfss	status,2,c
  5659  00077C  D7EC               	goto	l7175
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 462:             dbuf[n++] = '0' + d;
  5663  00077E  0E17               	movlw	low _dbuf
  5664  000780  2592               	addwf	efgtoa@n& (0+255),w,b
  5665  000782  6ED9               	movwf	fsr2l,c
  5666  000784  0E01               	movlw	high _dbuf
  5667  000786  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5668  000788  6EDA               	movwf	fsr2h,c
  5669  00078A  5178               	movf	efgtoa@d& (0+255),w,b
  5670  00078C  0F30               	addlw	48
  5671  00078E  6EDF               	movwf	indf2,c
  5672                           
  5673                           ; BSR set to: 0
  5674  000790  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5675  000792  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 4
      +                          63:             --w;
  5679  000794  077F               	decf	efgtoa@w& (0+255),f,b
  5680  000796  A0D8               	btfss	status,0,c
  5681  000798  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5682  00079A                     l7191:
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 
      +                          465:         h -= l*u;
  5686  00079A  C082  F01E         	movff	efgtoa@h,___flsub@b
  5687  00079E  C083  F01F         	movff	efgtoa@h+1,___flsub@b+1
  5688  0007A2  C084  F020         	movff	efgtoa@h+2,___flsub@b+2
  5689  0007A6  C085  F021         	movff	efgtoa@h+3,___flsub@b+3
  5690  0007AA  C094  F009         	movff	efgtoa@u,___flmul@a
  5691  0007AE  C095  F00A         	movff	efgtoa@u+1,___flmul@a+1
  5692  0007B2  C096  F00B         	movff	efgtoa@u+2,___flmul@a+2
  5693  0007B6  C097  F00C         	movff	efgtoa@u+3,___flmul@a+3
  5694  0007BA  C086  F005         	movff	efgtoa@l,___flmul@b
  5695  0007BE  C087  F006         	movff	efgtoa@l+1,___flmul@b+1
  5696  0007C2  C088  F007         	movff	efgtoa@l+2,___flmul@b+2
  5697  0007C6  C089  F008         	movff	efgtoa@l+3,___flmul@b+3
  5698  0007CA  ECB8  F008         	call	___flmul	;wreg free
  5699  0007CE  C005  F022         	movff	?___flmul,___flsub@a
  5700  0007D2  C006  F023         	movff	?___flmul+1,___flsub@a+1
  5701  0007D6  C007  F024         	movff	?___flmul+2,___flsub@a+2
  5702  0007DA  C008  F025         	movff	?___flmul+3,___flsub@a+3
  5703  0007DE  EC15  F018         	call	___flsub	;wreg free
  5704  0007E2  C01E  F082         	movff	?___flsub,efgtoa@h
  5705  0007E6  C01F  F083         	movff	?___flsub+1,efgtoa@h+1
  5706  0007EA  C020  F084         	movff	?___flsub+2,efgtoa@h+2
  5707  0007EE  C021  F085         	movff	?___flsub+3,efgtoa@h+3
  5708                           
  5709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 466:         u = u/10.0;
  5710  0007F2  C094  F005         	movff	efgtoa@u,___fldiv@b
  5711  0007F6  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  5712  0007FA  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  5713  0007FE  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  5714  000802  0E00               	movlw	0
  5715  000804  6E09               	movwf	___fldiv@a,c
  5716  000806  0E00               	movlw	0
  5717  000808  6E0A               	movwf	___fldiv@a+1,c
  5718  00080A  0E20               	movlw	32
  5719  00080C  6E0B               	movwf	___fldiv@a+2,c
  5720  00080E  0E41               	movlw	65
  5721  000810  6E0C               	movwf	___fldiv@a+3,c
  5722  000812  ECE7  F00B         	call	___fldiv	;wreg free
  5723  000816  C005  F094         	movff	?___fldiv,efgtoa@u
  5724  00081A  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  5725  00081E  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  5726  000822  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  5727                           
  5728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:
      +                                   --ne;
  5729  000826  0100               	movlb	0	; () banked
  5730  000828  0776               	decf	efgtoa@ne& (0+255),f,b
  5731  00082A  A0D8               	btfss	status,0,c
  5732  00082C  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468: 
      +                                  ++i;
  5736  00082E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5737  000830  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5738  000832                     l7199:
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c99\common\doprnt.c: 446:     while ((i < m) && (n < (80 - 5))) {
  5742  000832  5174               	movf	efgtoa@m& (0+255),w,b
  5743  000834  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5744  000836  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5745  000838  0A80               	xorlw	128
  5746  00083A  6E39               	movwf	??_efgtoa& (0+255),c
  5747  00083C  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  5748  00083E  0A80               	xorlw	128
  5749  000840  5839               	subwfb	??_efgtoa& (0+255),w,c
  5750  000842  B0D8               	btfsc	status,0,c
  5751  000844  D008               	goto	u9620
  5752                           
  5753                           ; BSR set to: 0
  5754  000846  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5755  000848  D72D               	goto	l7151
  5756  00084A  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  5757  00084C  E104               	bnz	u9620
  5758  00084E  0E4B               	movlw	75
  5759  000850  5D92               	subwf	efgtoa@n& (0+255),w,b
  5760  000852  A0D8               	btfss	status,0,c
  5761  000854  D727               	goto	l7151
  5762  000856                     u9620:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c9
      +                          9\common\doprnt.c: 470:     if (!pp && (flags & (1 << 4))) {
  5766  000856  5172               	movf	efgtoa@pp& (0+255),w,b
  5767  000858  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5768  00085A  B4D8               	btfsc	status,2,c
  5769                           
  5770                           ; BSR set to: 0
  5771  00085C  A857               	btfss	_flags,4,c
  5772  00085E  D00A               	goto	l7211
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dop
      +                          rnt.c: 471:         dbuf[n++] = '.';
  5776  000860  0E17               	movlw	low _dbuf
  5777  000862  2592               	addwf	efgtoa@n& (0+255),w,b
  5778  000864  6ED9               	movwf	fsr2l,c
  5779  000866  0E01               	movlw	high _dbuf
  5780  000868  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5781  00086A  6EDA               	movwf	fsr2h,c
  5782  00086C  0E2E               	movlw	46
  5783  00086E  6EDF               	movwf	indf2,c
  5784                           
  5785                           ; BSR set to: 0
  5786  000870  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5787  000872  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5788  000874                     l7211:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 473:     dbuf[n] = '\0';
  5792  000874  0E17               	movlw	low _dbuf
  5793  000876  2592               	addwf	efgtoa@n& (0+255),w,b
  5794  000878  6ED9               	movwf	fsr2l,c
  5795  00087A  0E01               	movlw	high _dbuf
  5796  00087C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5797  00087E  6EDA               	movwf	fsr2h,c
  5798  000880  0E00               	movlw	0
  5799  000882  6EDF               	movwf	indf2,c
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 476:     if (nmode == 'e') {
  5803  000884  0E65               	movlw	101
  5804  000886  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5805  000888  A4D8               	btfss	status,2,c
  5806  00088A  D47E               	goto	l7023
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 477:         i = sizeof(dbuf) - 1;
  5810  00088C  0E00               	movlw	0
  5811  00088E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5812  000890  0E4F               	movlw	79
  5813  000892  6F8A               	movwf	efgtoa@i& (0+255),b
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 478:         dbuf[i] = '\0';
  5817  000894  0E17               	movlw	low _dbuf
  5818  000896  258A               	addwf	efgtoa@i& (0+255),w,b
  5819  000898  6ED9               	movwf	fsr2l,c
  5820  00089A  0E01               	movlw	high _dbuf
  5821  00089C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5822  00089E  6EDA               	movwf	fsr2h,c
  5823  0008A0  0E00               	movlw	0
  5824  0008A2  6EDF               	movwf	indf2,c
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 
      +                          479:         sign = 0;
  5828  0008A4  0E00               	movlw	0
  5829  0008A6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5830  0008A8  0E00               	movlw	0
  5831  0008AA  6F7A               	movwf	efgtoa@sign& (0+255),b
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.
      +                          c: 480:         if (e < 0) {
  5835  0008AC  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5836  0008AE  D008               	goto	l7227
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt
      +                          .c: 481:             sign = 1;
  5840  0008B0  0E00               	movlw	0
  5841  0008B2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5842  0008B4  0E01               	movlw	1
  5843  0008B6  6F7A               	movwf	efgtoa@sign& (0+255),b
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 482:             e = -e;
  5847  0008B8  6D90               	negf	efgtoa@e& (0+255),b
  5848  0008BA  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  5849  0008BC  B0D8               	btfsc	status,0,c
  5850  0008BE  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5851  0008C0                     l7227:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484
      +                          :         p = 2;
  5855  0008C0  0E00               	movlw	0
  5856  0008C2  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5857  0008C4  0E02               	movlw	2
  5858  0008C6  6F7C               	movwf	efgtoa@p& (0+255),b
  5859                           
  5860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\comm
      +                          on\doprnt.c: 485:         while (e || (0 < p)) {
  5861  0008C8  D02B               	goto	l7239
  5862  0008CA                     l7229:
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 4
      +                          86:             --i;
  5866  0008CA  078A               	decf	efgtoa@i& (0+255),f,b
  5867  0008CC  A0D8               	btfss	status,0,c
  5868  0008CE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c
      +                          99\common\doprnt.c: 487:             dbuf[i] = '0' + (e % 10);
  5872  0008D0  0E17               	movlw	low _dbuf
  5873  0008D2  258A               	addwf	efgtoa@i& (0+255),w,b
  5874  0008D4  6ED9               	movwf	fsr2l,c
  5875  0008D6  0E01               	movlw	high _dbuf
  5876  0008D8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5877  0008DA  6EDA               	movwf	fsr2h,c
  5878  0008DC  C090  F005         	movff	efgtoa@e,___awmod@dividend
  5879  0008E0  C091  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  5880  0008E4  0E00               	movlw	0
  5881  0008E6  6E08               	movwf	___awmod@divisor+1,c
  5882  0008E8  0E0A               	movlw	10
  5883  0008EA  6E07               	movwf	___awmod@divisor,c
  5884  0008EC  ECE1  F016         	call	___awmod	;wreg free
  5885  0008F0  5005               	movf	?___awmod,w,c
  5886  0008F2  0F30               	addlw	48
  5887  0008F4  6EDF               	movwf	indf2,c
  5888                           
  5889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 488:             e = e / 10;
  5890  0008F6  C090  F005         	movff	efgtoa@e,___awdiv@dividend
  5891  0008FA  C091  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  5892  0008FE  0E00               	movlw	0
  5893  000900  6E08               	movwf	___awdiv@divisor+1,c
  5894  000902  0E0A               	movlw	10
  5895  000904  6E07               	movwf	___awdiv@divisor,c
  5896  000906  EC29  F016         	call	___awdiv	;wreg free
  5897  00090A  C005  F090         	movff	?___awdiv,efgtoa@e
  5898  00090E  C006  F091         	movff	?___awdiv+1,efgtoa@e+1
  5899                           
  5900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 4
      +                          89:             --p;
  5901  000912  0100               	movlb	0	; () banked
  5902  000914  077C               	decf	efgtoa@p& (0+255),f,b
  5903  000916  A0D8               	btfss	status,0,c
  5904  000918  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 4
      +                          90:             --w;
  5908  00091A  077F               	decf	efgtoa@w& (0+255),f,b
  5909  00091C  A0D8               	btfss	status,0,c
  5910  00091E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5911  000920                     l7239:
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\comm
      +                          on\doprnt.c: 485:         while (e || (0 < p)) {
  5915  000920  5190               	movf	efgtoa@e& (0+255),w,b
  5916  000922  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5917  000924  A4D8               	btfss	status,2,c
  5918  000926  D7D1               	goto	l7229
  5919                           
  5920                           ; BSR set to: 0
  5921  000928  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5922  00092A  D005               	goto	u9680
  5923  00092C  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  5924  00092E  E1CD               	bnz	l7229
  5925  000930  057C               	decf	efgtoa@p& (0+255),w,b
  5926  000932  B0D8               	btfsc	status,0,c
  5927  000934  D7CA               	goto	l7229
  5928  000936                     u9680:
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492: 
      +                                  --i;
  5932  000936  078A               	decf	efgtoa@i& (0+255),f,b
  5933  000938  A0D8               	btfss	status,0,c
  5934  00093A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 493:         dbuf[i] = sign ? '-' : '+';
  5938  00093C  517A               	movf	efgtoa@sign& (0+255),w,b
  5939  00093E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5940  000940  A4D8               	btfss	status,2,c
  5941  000942  D004               	goto	l7249
  5942                           
  5943                           ; BSR set to: 0
  5944  000944  0E00               	movlw	0
  5945  000946  6F6B               	movwf	(_efgtoa$1401+1)& (0+255),b
  5946  000948  0E2B               	movlw	43
  5947  00094A  D003               	goto	L6
  5948  00094C                     l7249:
  5949                           
  5950                           ; BSR set to: 0
  5951  00094C  0E00               	movlw	0
  5952  00094E  6F6B               	movwf	(_efgtoa$1401+1)& (0+255),b
  5953  000950  0E2D               	movlw	45
  5954  000952                     L6:
  5955  000952  6F6A               	movwf	_efgtoa$1401& (0+255),b
  5956                           
  5957                           ; BSR set to: 0
  5958  000954  0E17               	movlw	low _dbuf
  5959  000956  258A               	addwf	efgtoa@i& (0+255),w,b
  5960  000958  6ED9               	movwf	fsr2l,c
  5961  00095A  0E01               	movlw	high _dbuf
  5962  00095C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5963  00095E  6EDA               	movwf	fsr2h,c
  5964  000960  C06A  FFDF         	movff	_efgtoa$1401,indf2
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494: 
      +                                  --w;
  5968  000964  077F               	decf	efgtoa@w& (0+255),f,b
  5969  000966  A0D8               	btfss	status,0,c
  5970  000968  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';;C:\Progra
      +                          m Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] 
      +                          = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5974  00096A  078A               	decf	efgtoa@i& (0+255),f,b
  5975  00096C  A0D8               	btfss	status,0,c
  5976  00096E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5977                           
  5978                           ; BSR set to: 0
  5979  000970  0EBF               	movlw	191
  5980  000972  6E39               	movwf	??_efgtoa& (0+255),c
  5981  000974  0EFF               	movlw	255
  5982  000976  6E3A               	movwf	(??_efgtoa+1)& (0+255),c
  5983  000978  5038               	movf	efgtoa@c,w,c
  5984  00097A  6E3B               	movwf	(??_efgtoa+2)& (0+255),c
  5985  00097C  6A3C               	clrf	(??_efgtoa+3)& (0+255),c
  5986  00097E  5039               	movf	??_efgtoa,w,c
  5987  000980  263B               	addwf	??_efgtoa+2,f,c
  5988  000982  503A               	movf	??_efgtoa+1,w,c
  5989  000984  223C               	addwfc	??_efgtoa+3,f,c
  5990  000986  503C               	movf	??_efgtoa+3,w,c
  5991  000988  E106               	bnz	u9700
  5992  00098A  0E1A               	movlw	26
  5993  00098C  5C3B               	subwf	??_efgtoa+2,w,c
  5994  00098E  B0D8               	btfsc	status,0,c
  5995  000990  D002               	goto	u9700
  5996  000992  0E01               	movlw	1
  5997  000994  D001               	goto	u9710
  5998  000996                     u9700:
  5999  000996  0E00               	movlw	0
  6000  000998                     u9710:
  6001  000998  6F6E               	movwf	_efgtoa$1403& (0+255),b
  6002  00099A  6B6F               	clrf	(_efgtoa$1403+1)& (0+255),b
  6003                           
  6004                           ; BSR set to: 0
  6005  00099C  516E               	movf	_efgtoa$1403& (0+255),w,b
  6006  00099E  116F               	iorwf	(_efgtoa$1403+1)& (0+255),w,b
  6007  0009A0  A4D8               	btfss	status,2,c
  6008  0009A2  D004               	goto	l7265
  6009                           
  6010                           ; BSR set to: 0
  6011  0009A4  0E00               	movlw	0
  6012  0009A6  6F6D               	movwf	(_efgtoa$1402+1)& (0+255),b
  6013  0009A8  0E65               	movlw	101
  6014  0009AA  D003               	goto	L7
  6015  0009AC                     l7265:
  6016                           
  6017                           ; BSR set to: 0
  6018  0009AC  0E00               	movlw	0
  6019  0009AE  6F6D               	movwf	(_efgtoa$1402+1)& (0+255),b
  6020  0009B0  0E45               	movlw	69
  6021  0009B2                     L7:
  6022  0009B2  6F6C               	movwf	_efgtoa$1402& (0+255),b
  6023                           
  6024                           ; BSR set to: 0
  6025  0009B4  0E17               	movlw	low _dbuf
  6026  0009B6  258A               	addwf	efgtoa@i& (0+255),w,b
  6027  0009B8  6ED9               	movwf	fsr2l,c
  6028  0009BA  0E01               	movlw	high _dbuf
  6029  0009BC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6030  0009BE  6EDA               	movwf	fsr2h,c
  6031  0009C0  C06C  FFDF         	movff	_efgtoa$1402,indf2
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497: 
      +                                  --w;
  6035  0009C4  077F               	decf	efgtoa@w& (0+255),f,b
  6036  0009C6  A0D8               	btfss	status,0,c
  6037  0009C8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 498:         strcpy(&dbuf[n], &dbuf[i]);
  6041  0009CA  0E17               	movlw	low _dbuf
  6042  0009CC  2592               	addwf	efgtoa@n& (0+255),w,b
  6043  0009CE  6E05               	movwf	strcpy@dest,c
  6044  0009D0  0E01               	movlw	high _dbuf
  6045  0009D2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6046  0009D4  6E06               	movwf	strcpy@dest+1,c
  6047  0009D6  0E17               	movlw	low _dbuf
  6048  0009D8  258A               	addwf	efgtoa@i& (0+255),w,b
  6049  0009DA  6E07               	movwf	strcpy@src,c
  6050  0009DC  0E01               	movlw	high _dbuf
  6051  0009DE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6052  0009E0  6E08               	movwf	strcpy@src+1,c
  6053  0009E2  EC78  F017         	call	_strcpy	;wreg free
  6054  0009E6  EFC4  F000         	goto	l7023
  6055  0009EA                     __end_of_efgtoa:
  6056                           	opt callstack 0
  6057                           
  6058 ;; *************** function _tolower *****************
  6059 ;; Defined at:
  6060 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  c               2   10[COMRAM] int 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  2   10[COMRAM] int 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;Total ram usage:        8 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:    5
  6081 ;; This function calls:
  6082 ;;		_isupper
  6083 ;; This function is called by:
  6084 ;;		_efgtoa
  6085 ;;		_vfpfcnvrt
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text12
  6090  002F94                     __ptext12:
  6091                           	opt callstack 0
  6092  002F94                     _tolower:
  6093                           	opt callstack 21
  6094                           
  6095                           ;incstack = 0
  6096  002F94  0EBF               	movlw	191
  6097  002F96  6E0D               	movwf	??_tolower& (0+255),c
  6098  002F98  0EFF               	movlw	255
  6099  002F9A  6E0E               	movwf	(??_tolower+1)& (0+255),c
  6100  002F9C  C00B  F00F         	movff	tolower@c,??_tolower+2
  6101  002FA0  C00C  F010         	movff	tolower@c+1,??_tolower+3
  6102  002FA4  500D               	movf	??_tolower,w,c
  6103  002FA6  260F               	addwf	??_tolower+2,f,c
  6104  002FA8  500E               	movf	??_tolower+1,w,c
  6105  002FAA  2210               	addwfc	??_tolower+3,f,c
  6106  002FAC  5010               	movf	??_tolower+3,w,c
  6107  002FAE  E106               	bnz	u7880
  6108  002FB0  0E1A               	movlw	26
  6109  002FB2  5C0F               	subwf	??_tolower+2,w,c
  6110  002FB4  B0D8               	btfsc	status,0,c
  6111  002FB6  D002               	goto	u7880
  6112  002FB8  0E01               	movlw	1
  6113  002FBA  D001               	goto	u7890
  6114  002FBC                     u7880:
  6115  002FBC  0E00               	movlw	0
  6116  002FBE                     u7890:
  6117  002FBE  6E11               	movwf	_tolower$2051,c
  6118  002FC0  6A12               	clrf	_tolower$2051+1,c
  6119  002FC2  5011               	movf	_tolower$2051,w,c
  6120  002FC4  1012               	iorwf	_tolower$2051+1,w,c
  6121  002FC6  B4D8               	btfsc	status,2,c
  6122  002FC8  D006               	goto	l1650
  6123  002FCA  0E20               	movlw	32
  6124  002FCC  100B               	iorwf	tolower@c,w,c
  6125  002FCE  6E0B               	movwf	?_tolower,c
  6126  002FD0  500C               	movf	tolower@c+1,w,c
  6127  002FD2  6E0C               	movwf	?_tolower+1,c
  6128  002FD4  0012               	return	
  6129  002FD6                     l1650:
  6130  002FD6  C00B  F00B         	movff	tolower@c,?_tolower
  6131  002FDA  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  6132  002FDE  0012               	return		;funcret
  6133  002FE0                     __end_of_tolower:
  6134                           	opt callstack 0
  6135                           
  6136 ;; *************** function _isupper *****************
  6137 ;; Defined at:
  6138 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  c               2    4[COMRAM] int 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  2    4[COMRAM] int 
  6145 ;; Registers used:
  6146 ;;		wreg, status,2, status,0
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6156 ;;Total ram usage:        6 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    4
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_efgtoa
  6163 ;;		_xtoa
  6164 ;;		_vfpfcnvrt
  6165 ;;		_tolower
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text13
  6170  0031F8                     __ptext13:
  6171                           	opt callstack 0
  6172  0031F8                     _isupper:
  6173                           	opt callstack 21
  6174                           
  6175                           ;incstack = 0
  6176  0031F8  0EBF               	movlw	191
  6177  0031FA  6E07               	movwf	??_isupper& (0+255),c
  6178  0031FC  0EFF               	movlw	255
  6179  0031FE  6E08               	movwf	(??_isupper+1)& (0+255),c
  6180  003200  C005  F009         	movff	isupper@c,??_isupper+2
  6181  003204  C006  F00A         	movff	isupper@c+1,??_isupper+3
  6182  003208  5007               	movf	??_isupper,w,c
  6183  00320A  2609               	addwf	??_isupper+2,f,c
  6184  00320C  5008               	movf	??_isupper+1,w,c
  6185  00320E  220A               	addwfc	??_isupper+3,f,c
  6186  003210  500A               	movf	??_isupper+3,w,c
  6187  003212  E106               	bnz	u7310
  6188  003214  0E1A               	movlw	26
  6189  003216  5C09               	subwf	??_isupper+2,w,c
  6190  003218  B0D8               	btfsc	status,0,c
  6191  00321A  D002               	goto	u7310
  6192  00321C  0E01               	movlw	1
  6193  00321E  D001               	goto	u7320
  6194  003220                     u7310:
  6195  003220  0E00               	movlw	0
  6196  003222                     u7320:
  6197  003222  6E05               	movwf	?_isupper,c
  6198  003224  6A06               	clrf	?_isupper+1,c
  6199  003226  0012               	return		;funcret
  6200  003228                     __end_of_isupper:
  6201                           	opt callstack 0
  6202                           
  6203 ;; *************** function _strcpy *****************
  6204 ;; Defined at:
  6205 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  dest            2    4[COMRAM] PTR unsigned char 
  6208 ;;		 -> dbuf(80), 
  6209 ;;  src             2    6[COMRAM] PTR const unsigned char 
  6210 ;;		 -> STR_66(4), STR_65(4), STR_62(4), STR_61(4), 
  6211 ;;		 -> dbuf(80), 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  d               2   12[COMRAM] PTR unsigned char 
  6214 ;;		 -> dbuf(80), 
  6215 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6216 ;;		 -> STR_66(4), STR_65(4), STR_62(4), STR_61(4), 
  6217 ;;		 -> dbuf(80), 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  2    4[COMRAM] PTR unsigned char 
  6220 ;; Registers used:
  6221 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;Total ram usage:       10 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    4
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_efgtoa
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text14
  6242  002EF0                     __ptext14:
  6243                           	opt callstack 0
  6244  002EF0                     _strcpy:
  6245                           	opt callstack 21
  6246                           
  6247                           ;incstack = 0
  6248  002EF0  C007  F00B         	movff	strcpy@src,strcpy@s
  6249  002EF4  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  6250  002EF8  C005  F00D         	movff	strcpy@dest,strcpy@d
  6251  002EFC  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  6252  002F00                     l6261:
  6253  002F00  500B               	movf	strcpy@s,w,c
  6254  002F02  6E09               	movwf	??_strcpy& (0+255),c
  6255  002F04  500C               	movf	strcpy@s+1,w,c
  6256  002F06  6E0A               	movwf	(??_strcpy+1)& (0+255),c
  6257  002F08  4A0B               	infsnz	strcpy@s,f,c
  6258  002F0A  2A0C               	incf	strcpy@s+1,f,c
  6259  002F0C  C009  FFF6         	movff	??_strcpy,tblptrl
  6260  002F10  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  6261  002F14  0E00               	movlw	low (__mediumconst shr (0+16))
  6262  002F16  6EF8               	movwf	tblptru,c
  6263  002F18  C00D  FFD9         	movff	strcpy@d,fsr2l
  6264  002F1C  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  6265  002F20  4A0D               	infsnz	strcpy@d,f,c
  6266  002F22  2A0E               	incf	strcpy@d+1,f,c
  6267  002F24  0E0F               	movlw	(high __ramtop+-1)
  6268  002F26  64F7               	cpfsgt	tblptrh,c
  6269  002F28  D003               	bra	u7867
  6270  002F2A  0008               	tblrd		*
  6271  002F2C  50F5               	movf	tablat,w,c
  6272  002F2E  D005               	bra	u7860
  6273  002F30                     u7867:
  6274  002F30  CFF6 FFE9          	movff	tblptrl,fsr0l
  6275  002F34  CFF7 FFEA          	movff	tblptrh,fsr0h
  6276  002F38  50EF               	movf	indf0,w,c
  6277  002F3A                     u7860:
  6278  002F3A  6EDF               	movwf	indf2,c
  6279  002F3C  50DF               	movf	indf2,w,c
  6280  002F3E  B4D8               	btfsc	status,2,c
  6281  002F40  0012               	return	
  6282  002F42  D7DE               	goto	l6261
  6283  002F44                     __end_of_strcpy:
  6284                           	opt callstack 0
  6285                           
  6286 ;; *************** function _floorf *****************
  6287 ;; Defined at:
  6288 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  x               4   29[COMRAM] float 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  u               4   45[COMRAM] struct .
  6293 ;;  m               4   39[COMRAM] unsigned long 
  6294 ;;  e               2   43[COMRAM] int 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  4   29[COMRAM] float 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;Total ram usage:       20 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    4
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_efgtoa
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text15
  6319  001EC8                     __ptext15:
  6320                           	opt callstack 0
  6321  001EC8                     _floorf:
  6322                           	opt callstack 21
  6323                           
  6324                           ;incstack = 0
  6325  001EC8  C0D7  F02E         	movff	floorf@F524,floorf@u
  6326  001ECC  C0D8  F02F         	movff	floorf@F524+1,floorf@u+1
  6327  001ED0  C0D9  F030         	movff	floorf@F524+2,floorf@u+2
  6328  001ED4  C0DA  F031         	movff	floorf@F524+3,floorf@u+3
  6329  001ED8  C01E  F02E         	movff	floorf@x,floorf@u
  6330  001EDC  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  6331  001EE0  C020  F030         	movff	floorf@x+2,floorf@u+2
  6332  001EE4  C021  F031         	movff	floorf@x+3,floorf@u+3
  6333  001EE8  0E81               	movlw	129
  6334  001EEA  6E22               	movwf	??_floorf& (0+255),c
  6335  001EEC  0EFF               	movlw	255
  6336  001EEE  6E23               	movwf	(??_floorf+1)& (0+255),c
  6337  001EF0  C02E  F024         	movff	floorf@u,??_floorf+2
  6338  001EF4  C02F  F025         	movff	floorf@u+1,??_floorf+3
  6339  001EF8  C030  F026         	movff	floorf@u+2,??_floorf+4
  6340  001EFC  C031  F027         	movff	floorf@u+3,??_floorf+5
  6341  001F00  0E18               	movlw	24
  6342  001F02  D005               	goto	u7910
  6343  001F04                     u7915:
  6344  001F04  90D8               	bcf	status,0,c
  6345  001F06  3227               	rrcf	??_floorf+5,f,c
  6346  001F08  3226               	rrcf	??_floorf+4,f,c
  6347  001F0A  3225               	rrcf	??_floorf+3,f,c
  6348  001F0C  3224               	rrcf	??_floorf+2,f,c
  6349  001F0E                     u7910:
  6350  001F0E  2EE8               	decfsz	wreg,f,c
  6351  001F10  D7F9               	goto	u7915
  6352  001F12  5024               	movf	??_floorf+2,w,c
  6353  001F14  2422               	addwf	??_floorf,w,c
  6354  001F16  6E2C               	movwf	floorf@e,c
  6355  001F18  0E00               	movlw	0
  6356  001F1A  2023               	addwfc	??_floorf+1,w,c
  6357  001F1C  6E2D               	movwf	floorf@e+1,c
  6358  001F1E  BE2D               	btfsc	floorf@e+1,7,c
  6359  001F20  D00F               	goto	l6279
  6360  001F22  502D               	movf	floorf@e+1,w,c
  6361  001F24  E104               	bnz	u7920
  6362  001F26  0E17               	movlw	23
  6363  001F28  5C2C               	subwf	floorf@e,w,c
  6364  001F2A  A0D8               	btfss	status,0,c
  6365  001F2C  D009               	goto	l6279
  6366  001F2E                     u7920:
  6367  001F2E  C01E  F01E         	movff	floorf@x,?_floorf
  6368  001F32  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  6369  001F36  C020  F020         	movff	floorf@x+2,?_floorf+2
  6370  001F3A  C021  F021         	movff	floorf@x+3,?_floorf+3
  6371  001F3E  0012               	return	
  6372  001F40                     l6279:
  6373  001F40  BE2D               	btfsc	floorf@e+1,7,c
  6374  001F42  D05E               	goto	l6289
  6375  001F44  C02C  F022         	movff	floorf@e,??_floorf
  6376  001F48  0EFF               	movlw	255
  6377  001F4A  6E23               	movwf	(??_floorf+1)& (0+255),c
  6378  001F4C  0EFF               	movlw	255
  6379  001F4E  6E24               	movwf	(??_floorf+2)& (0+255),c
  6380  001F50  0E7F               	movlw	127
  6381  001F52  6E25               	movwf	(??_floorf+3)& (0+255),c
  6382  001F54  0E00               	movlw	0
  6383  001F56  6E26               	movwf	(??_floorf+4)& (0+255),c
  6384  001F58                     u7945:
  6385  001F58  6622               	tstfsz	??_floorf,c
  6386  001F5A  D001               	goto	u7946
  6387  001F5C  D007               	goto	u7947
  6388  001F5E                     u7946:
  6389  001F5E  3426               	rlcf	??_floorf+4,w,c
  6390  001F60  3226               	rrcf	??_floorf+4,f,c
  6391  001F62  3225               	rrcf	??_floorf+3,f,c
  6392  001F64  3224               	rrcf	??_floorf+2,f,c
  6393  001F66  3223               	rrcf	??_floorf+1,f,c
  6394  001F68  2E22               	decfsz	??_floorf,f,c
  6395  001F6A  D7F6               	goto	u7945
  6396  001F6C                     u7947:
  6397  001F6C  C023  F028         	movff	??_floorf+1,floorf@m
  6398  001F70  C024  F029         	movff	??_floorf+2,floorf@m+1
  6399  001F74  C025  F02A         	movff	??_floorf+3,floorf@m+2
  6400  001F78  C026  F02B         	movff	??_floorf+4,floorf@m+3
  6401  001F7C  5028               	movf	floorf@m,w,c
  6402  001F7E  142E               	andwf	floorf@u,w,c
  6403  001F80  6E22               	movwf	??_floorf& (0+255),c
  6404  001F82  5029               	movf	floorf@m+1,w,c
  6405  001F84  142F               	andwf	floorf@u+1,w,c
  6406  001F86  6E23               	movwf	(??_floorf+1)& (0+255),c
  6407  001F88  502A               	movf	floorf@m+2,w,c
  6408  001F8A  1430               	andwf	floorf@u+2,w,c
  6409  001F8C  6E24               	movwf	(??_floorf+2)& (0+255),c
  6410  001F8E  502B               	movf	floorf@m+3,w,c
  6411  001F90  1431               	andwf	floorf@u+3,w,c
  6412  001F92  6E25               	movwf	(??_floorf+3)& (0+255),c
  6413  001F94  5022               	movf	??_floorf,w,c
  6414  001F96  1023               	iorwf	??_floorf+1,w,c
  6415  001F98  1024               	iorwf	??_floorf+2,w,c
  6416  001F9A  1025               	iorwf	??_floorf+3,w,c
  6417  001F9C  B4D8               	btfsc	status,2,c
  6418  001F9E  D7C7               	goto	u7920
  6419  001FA0  C02E  F022         	movff	floorf@u,??_floorf
  6420  001FA4  C02F  F023         	movff	floorf@u+1,??_floorf+1
  6421  001FA8  C030  F024         	movff	floorf@u+2,??_floorf+2
  6422  001FAC  C031  F025         	movff	floorf@u+3,??_floorf+3
  6423  001FB0  0E20               	movlw	32
  6424  001FB2  D005               	goto	u7960
  6425  001FB4                     u7965:
  6426  001FB4  90D8               	bcf	status,0,c
  6427  001FB6  3225               	rrcf	??_floorf+3,f,c
  6428  001FB8  3224               	rrcf	??_floorf+2,f,c
  6429  001FBA  3223               	rrcf	??_floorf+1,f,c
  6430  001FBC  3222               	rrcf	??_floorf,f,c
  6431  001FBE                     u7960:
  6432  001FBE  2EE8               	decfsz	wreg,f,c
  6433  001FC0  D7F9               	goto	u7965
  6434  001FC2  5022               	movf	??_floorf,w,c
  6435  001FC4  1023               	iorwf	??_floorf+1,w,c
  6436  001FC6  1024               	iorwf	??_floorf+2,w,c
  6437  001FC8  1025               	iorwf	??_floorf+3,w,c
  6438  001FCA  B4D8               	btfsc	status,2,c
  6439  001FCC  D008               	goto	l1560
  6440  001FCE  5028               	movf	floorf@m,w,c
  6441  001FD0  262E               	addwf	floorf@u,f,c
  6442  001FD2  5029               	movf	floorf@m+1,w,c
  6443  001FD4  222F               	addwfc	floorf@u+1,f,c
  6444  001FD6  502A               	movf	floorf@m+2,w,c
  6445  001FD8  2230               	addwfc	floorf@u+2,f,c
  6446  001FDA  502B               	movf	floorf@m+3,w,c
  6447  001FDC  2231               	addwfc	floorf@u+3,f,c
  6448  001FDE                     l1560:
  6449  001FDE  1C28               	comf	floorf@m,w,c
  6450  001FE0  6E22               	movwf	??_floorf& (0+255),c
  6451  001FE2  1C29               	comf	floorf@m+1,w,c
  6452  001FE4  6E23               	movwf	(??_floorf+1)& (0+255),c
  6453  001FE6  1C2A               	comf	floorf@m+2,w,c
  6454  001FE8  6E24               	movwf	(??_floorf+2)& (0+255),c
  6455  001FEA  1C2B               	comf	floorf@m+3,w,c
  6456  001FEC  6E25               	movwf	(??_floorf+3)& (0+255),c
  6457  001FEE  5022               	movf	??_floorf,w,c
  6458  001FF0  162E               	andwf	floorf@u,f,c
  6459  001FF2  5023               	movf	??_floorf+1,w,c
  6460  001FF4  162F               	andwf	floorf@u+1,f,c
  6461  001FF6  5024               	movf	??_floorf+2,w,c
  6462  001FF8  1630               	andwf	floorf@u+2,f,c
  6463  001FFA  5025               	movf	??_floorf+3,w,c
  6464  001FFC  1631               	andwf	floorf@u+3,f,c
  6465  001FFE  D036               	goto	l6297
  6466  002000                     l6289:
  6467  002000  C02E  F022         	movff	floorf@u,??_floorf
  6468  002004  C02F  F023         	movff	floorf@u+1,??_floorf+1
  6469  002008  C030  F024         	movff	floorf@u+2,??_floorf+2
  6470  00200C  C031  F025         	movff	floorf@u+3,??_floorf+3
  6471  002010  0E20               	movlw	32
  6472  002012  D005               	goto	u7980
  6473  002014                     u7985:
  6474  002014  90D8               	bcf	status,0,c
  6475  002016  3225               	rrcf	??_floorf+3,f,c
  6476  002018  3224               	rrcf	??_floorf+2,f,c
  6477  00201A  3223               	rrcf	??_floorf+1,f,c
  6478  00201C  3222               	rrcf	??_floorf,f,c
  6479  00201E                     u7980:
  6480  00201E  2EE8               	decfsz	wreg,f,c
  6481  002020  D7F9               	goto	u7985
  6482  002022  5022               	movf	??_floorf,w,c
  6483  002024  1023               	iorwf	??_floorf+1,w,c
  6484  002026  1024               	iorwf	??_floorf+2,w,c
  6485  002028  1025               	iorwf	??_floorf+3,w,c
  6486  00202A  A4D8               	btfss	status,2,c
  6487  00202C  D008               	goto	l6293
  6488  00202E  0E00               	movlw	0
  6489  002030  6E2E               	movwf	floorf@u,c
  6490  002032  0E00               	movlw	0
  6491  002034  6E2F               	movwf	floorf@u+1,c
  6492  002036  0E00               	movlw	0
  6493  002038  6E30               	movwf	floorf@u+2,c
  6494  00203A  0E00               	movlw	0
  6495  00203C  D016               	goto	L8
  6496  00203E                     l6293:
  6497  00203E  90D8               	bcf	status,0,c
  6498  002040  342E               	rlcf	floorf@u,w,c
  6499  002042  6E22               	movwf	??_floorf& (0+255),c
  6500  002044  342F               	rlcf	floorf@u+1,w,c
  6501  002046  6E23               	movwf	(??_floorf+1)& (0+255),c
  6502  002048  3430               	rlcf	floorf@u+2,w,c
  6503  00204A  6E24               	movwf	(??_floorf+2)& (0+255),c
  6504  00204C  3431               	rlcf	floorf@u+3,w,c
  6505  00204E  6E25               	movwf	(??_floorf+3)& (0+255),c
  6506  002050  5022               	movf	??_floorf,w,c
  6507  002052  1023               	iorwf	??_floorf+1,w,c
  6508  002054  1024               	iorwf	??_floorf+2,w,c
  6509  002056  1025               	iorwf	??_floorf+3,w,c
  6510  002058  B4D8               	btfsc	status,2,c
  6511  00205A  D008               	goto	l6297
  6512  00205C  0E00               	movlw	0
  6513  00205E  6E2E               	movwf	floorf@u,c
  6514  002060  0E00               	movlw	0
  6515  002062  6E2F               	movwf	floorf@u+1,c
  6516  002064  0E80               	movlw	128
  6517  002066  6E30               	movwf	floorf@u+2,c
  6518  002068  0EBF               	movlw	191
  6519  00206A                     L8:
  6520  00206A  6E31               	movwf	floorf@u+3,c
  6521  00206C                     l6297:
  6522  00206C  C02E  F01E         	movff	floorf@u,?_floorf
  6523  002070  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  6524  002074  C030  F020         	movff	floorf@u+2,?_floorf+2
  6525  002078  C031  F021         	movff	floorf@u+3,?_floorf+3
  6526  00207C  0012               	return		;funcret
  6527  00207E                     __end_of_floorf:
  6528                           	opt callstack 0
  6529                           
  6530 ;; *************** function ___fpclassifyf *****************
  6531 ;; Defined at:
  6532 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;  x               4    4[COMRAM] float 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  u               4   14[COMRAM] struct .
  6537 ;;  e               2   12[COMRAM] int 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  2    4[COMRAM] int 
  6540 ;; Registers used:
  6541 ;;		wreg, status,2, status,0
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6550 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6551 ;;Total ram usage:       14 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    4
  6554 ;; This function calls:
  6555 ;;		Nothing
  6556 ;; This function is called by:
  6557 ;;		_efgtoa
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text16
  6562  0026AC                     __ptext16:
  6563                           	opt callstack 0
  6564  0026AC                     ___fpclassifyf:
  6565                           	opt callstack 21
  6566                           
  6567                           ;incstack = 0
  6568  0026AC  C0DB  F00F         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6569  0026B0  C0DC  F010         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6570  0026B4  C0DD  F011         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6571  0026B8  C0DE  F012         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6572  0026BC  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  6573  0026C0  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6574  0026C4  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6575  0026C8  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6576  0026CC  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  6577  0026D0  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6578  0026D4  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6579  0026D8  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6580  0026DC  0E18               	movlw	24
  6581  0026DE  D005               	goto	u7790
  6582  0026E0                     u7795:
  6583  0026E0  90D8               	bcf	status,0,c
  6584  0026E2  320C               	rrcf	??___fpclassifyf+3,f,c
  6585  0026E4  320B               	rrcf	??___fpclassifyf+2,f,c
  6586  0026E6  320A               	rrcf	??___fpclassifyf+1,f,c
  6587  0026E8  3209               	rrcf	??___fpclassifyf,f,c
  6588  0026EA                     u7790:
  6589  0026EA  2EE8               	decfsz	wreg,f,c
  6590  0026EC  D7F9               	goto	u7795
  6591  0026EE  5009               	movf	??___fpclassifyf,w,c
  6592  0026F0  6E0D               	movwf	___fpclassifyf@e,c
  6593  0026F2  6A0E               	clrf	___fpclassifyf@e+1,c
  6594  0026F4  500D               	movf	___fpclassifyf@e,w,c
  6595  0026F6  100E               	iorwf	___fpclassifyf@e+1,w,c
  6596  0026F8  A4D8               	btfss	status,2,c
  6597  0026FA  D019               	goto	l6249
  6598  0026FC  90D8               	bcf	status,0,c
  6599  0026FE  340F               	rlcf	___fpclassifyf@u,w,c
  6600  002700  6E09               	movwf	??___fpclassifyf& (0+255),c
  6601  002702  3410               	rlcf	___fpclassifyf@u+1,w,c
  6602  002704  6E0A               	movwf	(??___fpclassifyf+1)& (0+255),c
  6603  002706  3411               	rlcf	___fpclassifyf@u+2,w,c
  6604  002708  6E0B               	movwf	(??___fpclassifyf+2)& (0+255),c
  6605  00270A  3412               	rlcf	___fpclassifyf@u+3,w,c
  6606  00270C  6E0C               	movwf	(??___fpclassifyf+3)& (0+255),c
  6607  00270E  5009               	movf	??___fpclassifyf,w,c
  6608  002710  100A               	iorwf	??___fpclassifyf+1,w,c
  6609  002712  100B               	iorwf	??___fpclassifyf+2,w,c
  6610  002714  100C               	iorwf	??___fpclassifyf+3,w,c
  6611  002716  A4D8               	btfss	status,2,c
  6612  002718  D005               	goto	l6245
  6613  00271A  0E00               	movlw	0
  6614  00271C  6E06               	movwf	?___fpclassifyf+1,c
  6615  00271E  0E02               	movlw	2
  6616  002720  6E05               	movwf	?___fpclassifyf,c
  6617  002722  0012               	return	
  6618  002724                     l6245:
  6619  002724  0E00               	movlw	0
  6620  002726  6E06               	movwf	?___fpclassifyf+1,c
  6621  002728  0E03               	movlw	3
  6622  00272A  6E05               	movwf	?___fpclassifyf,c
  6623  00272C  0012               	return	
  6624  00272E                     l6249:
  6625  00272E  280D               	incf	___fpclassifyf@e,w,c
  6626  002730  100E               	iorwf	___fpclassifyf@e+1,w,c
  6627  002732  A4D8               	btfss	status,2,c
  6628  002734  D01C               	goto	l6255
  6629  002736  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  6630  00273A  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6631  00273E  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6632  002742  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6633  002746  0E09               	movlw	9
  6634  002748                     u7835:
  6635  002748  90D8               	bcf	status,0,c
  6636  00274A  3609               	rlcf	??___fpclassifyf,f,c
  6637  00274C  360A               	rlcf	??___fpclassifyf+1,f,c
  6638  00274E  360B               	rlcf	??___fpclassifyf+2,f,c
  6639  002750  360C               	rlcf	??___fpclassifyf+3,f,c
  6640  002752  2EE8               	decfsz	wreg,f,c
  6641  002754  D7F9               	goto	u7835
  6642  002756  5009               	movf	??___fpclassifyf,w,c
  6643  002758  100A               	iorwf	??___fpclassifyf+1,w,c
  6644  00275A  100B               	iorwf	??___fpclassifyf+2,w,c
  6645  00275C  100C               	iorwf	??___fpclassifyf+3,w,c
  6646  00275E  A4D8               	btfss	status,2,c
  6647  002760  D002               	goto	u7840
  6648  002762  0E01               	movlw	1
  6649  002764  D001               	goto	u7850
  6650  002766                     u7840:
  6651  002766  0E00               	movlw	0
  6652  002768                     u7850:
  6653  002768  6E05               	movwf	?___fpclassifyf,c
  6654  00276A  6A06               	clrf	?___fpclassifyf+1,c
  6655  00276C  0012               	return	
  6656  00276E                     l6255:
  6657  00276E  0E00               	movlw	0
  6658  002770  6E06               	movwf	?___fpclassifyf+1,c
  6659  002772  0E04               	movlw	4
  6660  002774  6E05               	movwf	?___fpclassifyf,c
  6661  002776  0012               	return		;funcret
  6662  002778                     __end_of___fpclassifyf:
  6663                           	opt callstack 0
  6664                           
  6665 ;; *************** function ___fltol *****************
  6666 ;; Defined at:
  6667 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  f1              4    4[COMRAM] int 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  exp1            1   13[COMRAM] unsigned char 
  6672 ;;  sign1           1   12[COMRAM] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  4    4[COMRAM] long 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;Total ram usage:       10 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    4
  6689 ;; This function calls:
  6690 ;;		Nothing
  6691 ;; This function is called by:
  6692 ;;		_efgtoa
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text17
  6697  002778                     __ptext17:
  6698                           	opt callstack 0
  6699  002778                     ___fltol:
  6700                           	opt callstack 21
  6701                           
  6702                           ;incstack = 0
  6703  002778  3407               	rlcf	___fltol@f1+2,w,c
  6704  00277A  3408               	rlcf	___fltol@f1+3,w,c
  6705  00277C  6E0E               	movwf	___fltol@exp1,c
  6706  00277E  500E               	movf	___fltol@exp1,w,c
  6707  002780  A4D8               	btfss	status,2,c
  6708  002782  D009               	goto	l6811
  6709  002784                     u8840:
  6710  002784  0E00               	movlw	0
  6711  002786  6E05               	movwf	?___fltol,c
  6712  002788  0E00               	movlw	0
  6713  00278A  6E06               	movwf	?___fltol+1,c
  6714  00278C  0E00               	movlw	0
  6715  00278E  6E07               	movwf	?___fltol+2,c
  6716  002790  0E00               	movlw	0
  6717  002792  6E08               	movwf	?___fltol+3,c
  6718  002794  0012               	return	
  6719  002796                     l6811:
  6720  002796  C005  F009         	movff	___fltol@f1,??___fltol
  6721  00279A  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  6722  00279E  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  6723  0027A2  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  6724  0027A6  0E20               	movlw	32
  6725  0027A8  D005               	goto	u8850
  6726  0027AA                     u8855:
  6727  0027AA  90D8               	bcf	status,0,c
  6728  0027AC  320C               	rrcf	??___fltol+3,f,c
  6729  0027AE  320B               	rrcf	??___fltol+2,f,c
  6730  0027B0  320A               	rrcf	??___fltol+1,f,c
  6731  0027B2  3209               	rrcf	??___fltol,f,c
  6732  0027B4                     u8850:
  6733  0027B4  2EE8               	decfsz	wreg,f,c
  6734  0027B6  D7F9               	goto	u8855
  6735  0027B8  5009               	movf	??___fltol,w,c
  6736  0027BA  6E0D               	movwf	___fltol@sign1,c
  6737  0027BC  8E07               	bsf	___fltol@f1+2,7,c
  6738  0027BE  0EFF               	movlw	255
  6739  0027C0  1605               	andwf	___fltol@f1,f,c
  6740  0027C2  0EFF               	movlw	255
  6741  0027C4  1606               	andwf	___fltol@f1+1,f,c
  6742  0027C6  0EFF               	movlw	255
  6743  0027C8  1607               	andwf	___fltol@f1+2,f,c
  6744  0027CA  0E00               	movlw	0
  6745  0027CC  1608               	andwf	___fltol@f1+3,f,c
  6746  0027CE  0E96               	movlw	150
  6747  0027D0  5E0E               	subwf	___fltol@exp1,f,c
  6748  0027D2  AE0E               	btfss	___fltol@exp1,7,c
  6749  0027D4  D00D               	goto	l6831
  6750  0027D6  500E               	movf	___fltol@exp1,w,c
  6751  0027D8  0A80               	xorlw	128
  6752  0027DA  0F97               	addlw	151
  6753  0027DC  A0D8               	btfss	status,0,c
  6754  0027DE  D7D2               	goto	u8840
  6755  0027E0                     l6827:
  6756  0027E0  90D8               	bcf	status,0,c
  6757  0027E2  3208               	rrcf	___fltol@f1+3,f,c
  6758  0027E4  3207               	rrcf	___fltol@f1+2,f,c
  6759  0027E6  3206               	rrcf	___fltol@f1+1,f,c
  6760  0027E8  3205               	rrcf	___fltol@f1,f,c
  6761  0027EA  3E0E               	incfsz	___fltol@exp1,f,c
  6762  0027EC  D7F9               	goto	l6827
  6763  0027EE  D00D               	goto	u8890
  6764  0027F0                     l6831:
  6765  0027F0  0E1F               	movlw	31
  6766  0027F2  640E               	cpfsgt	___fltol@exp1,c
  6767  0027F4  D007               	goto	l6839
  6768  0027F6  D7C6               	goto	u8840
  6769  0027F8                     l6837:
  6770  0027F8  90D8               	bcf	status,0,c
  6771  0027FA  3605               	rlcf	___fltol@f1,f,c
  6772  0027FC  3606               	rlcf	___fltol@f1+1,f,c
  6773  0027FE  3607               	rlcf	___fltol@f1+2,f,c
  6774  002800  3608               	rlcf	___fltol@f1+3,f,c
  6775  002802  060E               	decf	___fltol@exp1,f,c
  6776  002804                     l6839:
  6777  002804  500E               	movf	___fltol@exp1,w,c
  6778  002806  A4D8               	btfss	status,2,c
  6779  002808  D7F7               	goto	l6837
  6780  00280A                     u8890:
  6781  00280A  500D               	movf	___fltol@sign1,w,c
  6782  00280C  B4D8               	btfsc	status,2,c
  6783  00280E  D008               	goto	l6845
  6784  002810  1E08               	comf	___fltol@f1+3,f,c
  6785  002812  1E07               	comf	___fltol@f1+2,f,c
  6786  002814  1E06               	comf	___fltol@f1+1,f,c
  6787  002816  6C05               	negf	___fltol@f1,c
  6788  002818  0E00               	movlw	0
  6789  00281A  2206               	addwfc	___fltol@f1+1,f,c
  6790  00281C  2207               	addwfc	___fltol@f1+2,f,c
  6791  00281E  2208               	addwfc	___fltol@f1+3,f,c
  6792  002820                     l6845:
  6793  002820  C005  F005         	movff	___fltol@f1,?___fltol
  6794  002824  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  6795  002828  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  6796  00282C  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  6797  002830  0012               	return		;funcret
  6798  002832                     __end_of___fltol:
  6799                           	opt callstack 0
  6800                           
  6801 ;; *************** function ___flsub *****************
  6802 ;; Defined at:
  6803 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  b               4   29[COMRAM] long 
  6806 ;;  a               4   33[COMRAM] long 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;		None
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  4   29[COMRAM] long 
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, status,0, cstack
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6818 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;Total ram usage:        8 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:    5
  6825 ;; This function calls:
  6826 ;;		___fladd
  6827 ;; This function is called by:
  6828 ;;		_efgtoa
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           	psect	text18
  6833  00302A                     __ptext18:
  6834                           	opt callstack 0
  6835  00302A                     ___flsub:
  6836                           	opt callstack 20
  6837                           
  6838                           ;incstack = 0
  6839  00302A  0E00               	movlw	0
  6840  00302C  1A22               	xorwf	___flsub@a,f,c
  6841  00302E  0E00               	movlw	0
  6842  003030  1A23               	xorwf	___flsub@a+1,f,c
  6843  003032  0E00               	movlw	0
  6844  003034  1A24               	xorwf	___flsub@a+2,f,c
  6845  003036  0E80               	movlw	128
  6846  003038  1A25               	xorwf	___flsub@a+3,f,c
  6847  00303A  C01E  F005         	movff	___flsub@b,___fladd@b
  6848  00303E  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  6849  003042  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  6850  003046  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  6851  00304A  C022  F009         	movff	___flsub@a,___fladd@a
  6852  00304E  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  6853  003052  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  6854  003056  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  6855  00305A  EC61  F00A         	call	___fladd	;wreg free
  6856  00305E  C005  F01E         	movff	?___fladd,?___flsub
  6857  003062  C006  F01F         	movff	?___fladd+1,?___flsub+1
  6858  003066  C007  F020         	movff	?___fladd+2,?___flsub+2
  6859  00306A  C008  F021         	movff	?___fladd+3,?___flsub+3
  6860  00306E  0012               	return		;funcret
  6861  003070                     __end_of___flsub:
  6862                           	opt callstack 0
  6863                           
  6864 ;; *************** function ___fladd *****************
  6865 ;; Defined at:
  6866 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  b               4    4[COMRAM] long 
  6869 ;;  a               4    8[COMRAM] long 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  grs             1   19[COMRAM] unsigned char 
  6872 ;;  bexp            1   18[COMRAM] unsigned char 
  6873 ;;  aexp            1   17[COMRAM] unsigned char 
  6874 ;;  signs           1   16[COMRAM] unsigned char 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  4    4[COMRAM] unsigned char 
  6877 ;; Registers used:
  6878 ;;		wreg, status,2, status,0
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6884 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;Total ram usage:       16 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:    4
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_efgtoa
  6895 ;;		___flsub
  6896 ;;		_getReading
  6897 ;;		_adafruit
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text19
  6902  0014C2                     __ptext19:
  6903                           	opt callstack 0
  6904  0014C2                     ___fladd:
  6905                           	opt callstack 20
  6906                           
  6907                           ;incstack = 0
  6908  0014C2  5008               	movf	___fladd@b+3,w,c
  6909  0014C4  0B80               	andlw	128
  6910  0014C6  6E11               	movwf	___fladd@signs,c
  6911  0014C8  5008               	movf	___fladd@b+3,w,c
  6912  0014CA  2408               	addwf	___fladd@b+3,w,c
  6913  0014CC  6E13               	movwf	___fladd@bexp,c
  6914  0014CE  BE07               	btfsc	___fladd@b+2,7,c
  6915  0014D0  8013               	bsf	___fladd@bexp,0,c
  6916  0014D2  5013               	movf	___fladd@bexp,w,c
  6917  0014D4  B4D8               	btfsc	status,2,c
  6918  0014D6  D00D               	goto	l6021
  6919  0014D8  2813               	incf	___fladd@bexp,w,c
  6920  0014DA  A4D8               	btfss	status,2,c
  6921  0014DC  D008               	goto	l6017
  6922  0014DE  0E00               	movlw	0
  6923  0014E0  6E05               	movwf	___fladd@b,c
  6924  0014E2  0E00               	movlw	0
  6925  0014E4  6E06               	movwf	___fladd@b+1,c
  6926  0014E6  0E00               	movlw	0
  6927  0014E8  6E07               	movwf	___fladd@b+2,c
  6928  0014EA  0E00               	movlw	0
  6929  0014EC  6E08               	movwf	___fladd@b+3,c
  6930  0014EE                     l6017:
  6931  0014EE  8E07               	bsf	___fladd@b+2,7,c
  6932  0014F0  D006               	goto	L9
  6933  0014F2                     l6021:
  6934  0014F2  0E00               	movlw	0
  6935  0014F4  6E05               	movwf	___fladd@b,c
  6936  0014F6  0E00               	movlw	0
  6937  0014F8  6E06               	movwf	___fladd@b+1,c
  6938  0014FA  0E00               	movlw	0
  6939  0014FC  6E07               	movwf	___fladd@b+2,c
  6940  0014FE                     L9:
  6941  0014FE  0E00               	movlw	0
  6942  001500  6E08               	movwf	___fladd@b+3,c
  6943  001502  500C               	movf	___fladd@a+3,w,c
  6944  001504  0B80               	andlw	128
  6945  001506  6E12               	movwf	___fladd@aexp,c
  6946  001508  5011               	movf	___fladd@signs,w,c
  6947  00150A  1812               	xorwf	___fladd@aexp,w,c
  6948  00150C  A4D8               	btfss	status,2,c
  6949  00150E  8C11               	bsf	___fladd@signs,6,c
  6950  001510  500C               	movf	___fladd@a+3,w,c
  6951  001512  240C               	addwf	___fladd@a+3,w,c
  6952  001514  6E12               	movwf	___fladd@aexp,c
  6953  001516  BE0B               	btfsc	___fladd@a+2,7,c
  6954  001518  8012               	bsf	___fladd@aexp,0,c
  6955  00151A  5012               	movf	___fladd@aexp,w,c
  6956  00151C  B4D8               	btfsc	status,2,c
  6957  00151E  D00D               	goto	l6045
  6958  001520  2812               	incf	___fladd@aexp,w,c
  6959  001522  A4D8               	btfss	status,2,c
  6960  001524  D008               	goto	l6041
  6961  001526  0E00               	movlw	0
  6962  001528  6E09               	movwf	___fladd@a,c
  6963  00152A  0E00               	movlw	0
  6964  00152C  6E0A               	movwf	___fladd@a+1,c
  6965  00152E  0E00               	movlw	0
  6966  001530  6E0B               	movwf	___fladd@a+2,c
  6967  001532  0E00               	movlw	0
  6968  001534  6E0C               	movwf	___fladd@a+3,c
  6969  001536                     l6041:
  6970  001536  8E0B               	bsf	___fladd@a+2,7,c
  6971  001538  D006               	goto	L10
  6972  00153A                     l6045:
  6973  00153A  0E00               	movlw	0
  6974  00153C  6E09               	movwf	___fladd@a,c
  6975  00153E  0E00               	movlw	0
  6976  001540  6E0A               	movwf	___fladd@a+1,c
  6977  001542  0E00               	movlw	0
  6978  001544  6E0B               	movwf	___fladd@a+2,c
  6979  001546                     L10:
  6980  001546  0E00               	movlw	0
  6981  001548  6E0C               	movwf	___fladd@a+3,c
  6982  00154A  5013               	movf	___fladd@bexp,w,c
  6983  00154C  5C12               	subwf	___fladd@aexp,w,c
  6984  00154E  B0D8               	btfsc	status,0,c
  6985  001550  D022               	goto	l6083
  6986  001552  AC11               	btfss	___fladd@signs,6,c
  6987  001554  D002               	goto	l6053
  6988  001556  0E80               	movlw	128
  6989  001558  1A11               	xorwf	___fladd@signs,f,c
  6990  00155A                     l6053:
  6991  00155A  C013  F014         	movff	___fladd@bexp,___fladd@grs
  6992  00155E  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  6993  001562  C014  F012         	movff	___fladd@grs,___fladd@aexp
  6994  001566  C005  F014         	movff	___fladd@b,___fladd@grs
  6995  00156A  C009  F005         	movff	___fladd@a,___fladd@b
  6996  00156E  C014  F009         	movff	___fladd@grs,___fladd@a
  6997  001572  C006  F014         	movff	___fladd@b+1,___fladd@grs
  6998  001576  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  6999  00157A  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  7000  00157E  C007  F014         	movff	___fladd@b+2,___fladd@grs
  7001  001582  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  7002  001586  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  7003  00158A  C008  F014         	movff	___fladd@b+3,___fladd@grs
  7004  00158E  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  7005  001592  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  7006  001596                     l6083:
  7007  001596  0E00               	movlw	0
  7008  001598  6E14               	movwf	___fladd@grs,c
  7009  00159A  5013               	movf	___fladd@bexp,w,c
  7010  00159C  C012  F00D         	movff	___fladd@aexp,??___fladd
  7011  0015A0  6A0E               	clrf	(??___fladd+1)& (0+255),c
  7012  0015A2  5E0D               	subwf	??___fladd,f,c
  7013  0015A4  0E00               	movlw	0
  7014  0015A6  5A0E               	subwfb	??___fladd+1,f,c
  7015  0015A8  BE0E               	btfsc	??___fladd+1,7,c
  7016  0015AA  D02C               	goto	l1360
  7017  0015AC  500E               	movf	??___fladd+1,w,c
  7018  0015AE  E104               	bnz	u7420
  7019  0015B0  0E1A               	movlw	26
  7020  0015B2  5C0D               	subwf	??___fladd,w,c
  7021  0015B4  A0D8               	btfss	status,0,c
  7022  0015B6  D026               	goto	l1360
  7023  0015B8                     u7420:
  7024  0015B8  5005               	movf	___fladd@b,w,c
  7025  0015BA  1006               	iorwf	___fladd@b+1,w,c
  7026  0015BC  1007               	iorwf	___fladd@b+2,w,c
  7027  0015BE  1008               	iorwf	___fladd@b+3,w,c
  7028  0015C0  B4D8               	btfsc	status,2,c
  7029  0015C2  D002               	goto	u7430
  7030  0015C4  0E01               	movlw	1
  7031  0015C6  D001               	goto	u7440
  7032  0015C8                     u7430:
  7033  0015C8  0E00               	movlw	0
  7034  0015CA                     u7440:
  7035  0015CA  6E14               	movwf	___fladd@grs,c
  7036  0015CC  0E00               	movlw	0
  7037  0015CE  6E05               	movwf	___fladd@b,c
  7038  0015D0  0E00               	movlw	0
  7039  0015D2  6E06               	movwf	___fladd@b+1,c
  7040  0015D4  0E00               	movlw	0
  7041  0015D6  6E07               	movwf	___fladd@b+2,c
  7042  0015D8  0E00               	movlw	0
  7043  0015DA  6E08               	movwf	___fladd@b+3,c
  7044  0015DC  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  7045  0015E0  D015               	goto	u7470
  7046  0015E2                     l1361:
  7047  0015E2  A014               	btfss	___fladd@grs,0,c
  7048  0015E4  D005               	goto	l6095
  7049  0015E6  90D8               	bcf	status,0,c
  7050  0015E8  3014               	rrcf	___fladd@grs,w,c
  7051  0015EA  0901               	iorlw	1
  7052  0015EC  6E14               	movwf	___fladd@grs,c
  7053  0015EE  D002               	goto	l6097
  7054  0015F0                     l6095:
  7055  0015F0  90D8               	bcf	status,0,c
  7056  0015F2  3214               	rrcf	___fladd@grs,f,c
  7057  0015F4                     l6097:
  7058  0015F4  B005               	btfsc	___fladd@b,0,c
  7059  0015F6  8E14               	bsf	___fladd@grs,7,c
  7060  0015F8  3408               	rlcf	___fladd@b+3,w,c
  7061  0015FA  3208               	rrcf	___fladd@b+3,f,c
  7062  0015FC  3207               	rrcf	___fladd@b+2,f,c
  7063  0015FE  3206               	rrcf	___fladd@b+1,f,c
  7064  001600  3205               	rrcf	___fladd@b,f,c
  7065  001602  2A13               	incf	___fladd@bexp,f,c
  7066  001604                     l1360:
  7067  001604  5012               	movf	___fladd@aexp,w,c
  7068  001606  5C13               	subwf	___fladd@bexp,w,c
  7069  001608  A0D8               	btfss	status,0,c
  7070  00160A  D7EB               	goto	l1361
  7071  00160C                     u7470:
  7072  00160C  BC11               	btfsc	___fladd@signs,6,c
  7073  00160E  D028               	goto	l6129
  7074  001610  5013               	movf	___fladd@bexp,w,c
  7075  001612  A4D8               	btfss	status,2,c
  7076  001614  D009               	goto	l6111
  7077  001616  0E00               	movlw	0
  7078  001618  6E05               	movwf	?___fladd,c
  7079  00161A  0E00               	movlw	0
  7080  00161C  6E06               	movwf	?___fladd+1,c
  7081  00161E  0E00               	movlw	0
  7082  001620  6E07               	movwf	?___fladd+2,c
  7083  001622  0E00               	movlw	0
  7084  001624  6E08               	movwf	?___fladd+3,c
  7085  001626  0012               	return	
  7086  001628                     l6111:
  7087  001628  5009               	movf	___fladd@a,w,c
  7088  00162A  2605               	addwf	___fladd@b,f,c
  7089  00162C  500A               	movf	___fladd@a+1,w,c
  7090  00162E  2206               	addwfc	___fladd@b+1,f,c
  7091  001630  500B               	movf	___fladd@a+2,w,c
  7092  001632  2207               	addwfc	___fladd@b+2,f,c
  7093  001634  500C               	movf	___fladd@a+3,w,c
  7094  001636  2208               	addwfc	___fladd@b+3,f,c
  7095  001638  A008               	btfss	___fladd@b+3,0,c
  7096  00163A  D071               	goto	u7600
  7097  00163C  A014               	btfss	___fladd@grs,0,c
  7098  00163E  D005               	goto	l6119
  7099  001640  90D8               	bcf	status,0,c
  7100  001642  3014               	rrcf	___fladd@grs,w,c
  7101  001644  0901               	iorlw	1
  7102  001646  6E14               	movwf	___fladd@grs,c
  7103  001648  D002               	goto	l6121
  7104  00164A                     l6119:
  7105  00164A  90D8               	bcf	status,0,c
  7106  00164C  3214               	rrcf	___fladd@grs,f,c
  7107  00164E                     l6121:
  7108  00164E  B005               	btfsc	___fladd@b,0,c
  7109  001650  8E14               	bsf	___fladd@grs,7,c
  7110  001652  3408               	rlcf	___fladd@b+3,w,c
  7111  001654  3208               	rrcf	___fladd@b+3,f,c
  7112  001656  3207               	rrcf	___fladd@b+2,f,c
  7113  001658  3206               	rrcf	___fladd@b+1,f,c
  7114  00165A  3205               	rrcf	___fladd@b,f,c
  7115  00165C  2A13               	incf	___fladd@bexp,f,c
  7116  00165E  D05F               	goto	u7600
  7117  001660                     l6129:
  7118  001660  5009               	movf	___fladd@a,w,c
  7119  001662  5C05               	subwf	___fladd@b,w,c
  7120  001664  500A               	movf	___fladd@a+1,w,c
  7121  001666  5806               	subwfb	___fladd@b+1,w,c
  7122  001668  500B               	movf	___fladd@a+2,w,c
  7123  00166A  5807               	subwfb	___fladd@b+2,w,c
  7124  00166C  5008               	movf	___fladd@b+3,w,c
  7125  00166E  0A80               	xorlw	128
  7126  001670  6E0D               	movwf	??___fladd& (0+255),c
  7127  001672  500C               	movf	___fladd@a+3,w,c
  7128  001674  0A80               	xorlw	128
  7129  001676  580D               	subwfb	??___fladd& (0+255),w,c
  7130  001678  B0D8               	btfsc	status,0,c
  7131  00167A  D025               	goto	l6139
  7132  00167C  5005               	movf	___fladd@b,w,c
  7133  00167E  5C09               	subwf	___fladd@a,w,c
  7134  001680  6E0D               	movwf	??___fladd& (0+255),c
  7135  001682  5006               	movf	___fladd@b+1,w,c
  7136  001684  580A               	subwfb	___fladd@a+1,w,c
  7137  001686  6E0E               	movwf	(??___fladd+1)& (0+255),c
  7138  001688  5007               	movf	___fladd@b+2,w,c
  7139  00168A  580B               	subwfb	___fladd@a+2,w,c
  7140  00168C  6E0F               	movwf	(??___fladd+2)& (0+255),c
  7141  00168E  5008               	movf	___fladd@b+3,w,c
  7142  001690  580C               	subwfb	___fladd@a+3,w,c
  7143  001692  6E10               	movwf	(??___fladd+3)& (0+255),c
  7144  001694  0EFF               	movlw	255
  7145  001696  240D               	addwf	??___fladd,w,c
  7146  001698  6E05               	movwf	___fladd@b,c
  7147  00169A  0EFF               	movlw	255
  7148  00169C  200E               	addwfc	??___fladd+1,w,c
  7149  00169E  6E06               	movwf	___fladd@b+1,c
  7150  0016A0  0EFF               	movlw	255
  7151  0016A2  200F               	addwfc	??___fladd+2,w,c
  7152  0016A4  6E07               	movwf	___fladd@b+2,c
  7153  0016A6  0EFF               	movlw	255
  7154  0016A8  2010               	addwfc	??___fladd+3,w,c
  7155  0016AA  6E08               	movwf	___fladd@b+3,c
  7156  0016AC  0E80               	movlw	128
  7157  0016AE  1A11               	xorwf	___fladd@signs,f,c
  7158  0016B0  6C14               	negf	___fladd@grs,c
  7159  0016B2  5014               	movf	___fladd@grs,w,c
  7160  0016B4  A4D8               	btfss	status,2,c
  7161  0016B6  D00F               	goto	l1376
  7162  0016B8  0E01               	movlw	1
  7163  0016BA  2605               	addwf	___fladd@b,f,c
  7164  0016BC  0E00               	movlw	0
  7165  0016BE  2206               	addwfc	___fladd@b+1,f,c
  7166  0016C0  2207               	addwfc	___fladd@b+2,f,c
  7167  0016C2  2208               	addwfc	___fladd@b+3,f,c
  7168  0016C4  D008               	goto	l1376
  7169  0016C6                     l6139:
  7170  0016C6  5009               	movf	___fladd@a,w,c
  7171  0016C8  5E05               	subwf	___fladd@b,f,c
  7172  0016CA  500A               	movf	___fladd@a+1,w,c
  7173  0016CC  5A06               	subwfb	___fladd@b+1,f,c
  7174  0016CE  500B               	movf	___fladd@a+2,w,c
  7175  0016D0  5A07               	subwfb	___fladd@b+2,f,c
  7176  0016D2  500C               	movf	___fladd@a+3,w,c
  7177  0016D4  5A08               	subwfb	___fladd@b+3,f,c
  7178  0016D6                     l1376:
  7179  0016D6  5005               	movf	___fladd@b,w,c
  7180  0016D8  1006               	iorwf	___fladd@b+1,w,c
  7181  0016DA  1007               	iorwf	___fladd@b+2,w,c
  7182  0016DC  1008               	iorwf	___fladd@b+3,w,c
  7183  0016DE  A4D8               	btfss	status,2,c
  7184  0016E0  D01C               	goto	l6163
  7185  0016E2  5014               	movf	___fladd@grs,w,c
  7186  0016E4  A4D8               	btfss	status,2,c
  7187  0016E6  D019               	goto	l6163
  7188  0016E8  0E00               	movlw	0
  7189  0016EA  6E05               	movwf	?___fladd,c
  7190  0016EC  0E00               	movlw	0
  7191  0016EE  6E06               	movwf	?___fladd+1,c
  7192  0016F0  0E00               	movlw	0
  7193  0016F2  6E07               	movwf	?___fladd+2,c
  7194  0016F4  0E00               	movlw	0
  7195  0016F6  6E08               	movwf	?___fladd+3,c
  7196  0016F8  0012               	return	
  7197  0016FA                     l6147:
  7198  0016FA  90D8               	bcf	status,0,c
  7199  0016FC  3605               	rlcf	___fladd@b,f,c
  7200  0016FE  3606               	rlcf	___fladd@b+1,f,c
  7201  001700  3607               	rlcf	___fladd@b+2,f,c
  7202  001702  3608               	rlcf	___fladd@b+3,f,c
  7203  001704  BE14               	btfsc	___fladd@grs,7,c
  7204  001706  8005               	bsf	___fladd@b,0,c
  7205  001708  A014               	btfss	___fladd@grs,0,c
  7206  00170A  D002               	goto	l6157
  7207  00170C  80D8               	bsf	status,0,c
  7208  00170E  D001               	goto	L11
  7209  001710                     l6157:
  7210  001710  90D8               	bcf	status,0,c
  7211  001712                     L11:
  7212  001712  3614               	rlcf	___fladd@grs,f,c
  7213  001714  5013               	movf	___fladd@bexp,w,c
  7214  001716  A4D8               	btfss	status,2,c
  7215  001718  0613               	decf	___fladd@bexp,f,c
  7216  00171A                     l6163:
  7217  00171A  AE07               	btfss	___fladd@b+2,7,c
  7218  00171C  D7EE               	goto	l6147
  7219  00171E                     u7600:
  7220  00171E  0E00               	movlw	0
  7221  001720  6E12               	movwf	___fladd@aexp,c
  7222  001722  AE14               	btfss	___fladd@grs,7,c
  7223  001724  D00B               	goto	l1385
  7224  001726  C014  F00D         	movff	___fladd@grs,??___fladd
  7225  00172A  0E7F               	movlw	127
  7226  00172C  160D               	andwf	??___fladd,f,c
  7227  00172E  B4D8               	btfsc	status,2,c
  7228  001730  D003               	goto	l1386
  7229  001732                     u7620:
  7230  001732  0E01               	movlw	1
  7231  001734  6E12               	movwf	___fladd@aexp,c
  7232  001736  D002               	goto	l1385
  7233  001738                     l1386:
  7234  001738  B005               	btfsc	___fladd@b,0,c
  7235  00173A  D7FB               	goto	u7620
  7236  00173C                     l1385:
  7237  00173C  5012               	movf	___fladd@aexp,w,c
  7238  00173E  B4D8               	btfsc	status,2,c
  7239  001740  D020               	goto	l6183
  7240  001742  0E01               	movlw	1
  7241  001744  2605               	addwf	___fladd@b,f,c
  7242  001746  0E00               	movlw	0
  7243  001748  2206               	addwfc	___fladd@b+1,f,c
  7244  00174A  2207               	addwfc	___fladd@b+2,f,c
  7245  00174C  2208               	addwfc	___fladd@b+3,f,c
  7246  00174E  A008               	btfss	___fladd@b+3,0,c
  7247  001750  D018               	goto	l6183
  7248  001752  C005  F00D         	movff	___fladd@b,??___fladd
  7249  001756  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  7250  00175A  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  7251  00175E  C008  F010         	movff	___fladd@b+3,??___fladd+3
  7252  001762  3410               	rlcf	??___fladd+3,w,c
  7253  001764  3210               	rrcf	??___fladd+3,f,c
  7254  001766  320F               	rrcf	??___fladd+2,f,c
  7255  001768  320E               	rrcf	??___fladd+1,f,c
  7256  00176A  320D               	rrcf	??___fladd,f,c
  7257  00176C  C00D  F005         	movff	??___fladd,___fladd@b
  7258  001770  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  7259  001774  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  7260  001778  C010  F008         	movff	??___fladd+3,___fladd@b+3
  7261  00177C  2813               	incf	___fladd@bexp,w,c
  7262  00177E  A4D8               	btfss	status,2,c
  7263  001780  2A13               	incf	___fladd@bexp,f,c
  7264  001782                     l6183:
  7265  001782  2813               	incf	___fladd@bexp,w,c
  7266  001784  B4D8               	btfsc	status,2,c
  7267  001786  D003               	goto	u7680
  7268  001788  5013               	movf	___fladd@bexp,w,c
  7269  00178A  A4D8               	btfss	status,2,c
  7270  00178C  D00D               	goto	l6191
  7271  00178E                     u7680:
  7272  00178E  0E00               	movlw	0
  7273  001790  6E05               	movwf	___fladd@b,c
  7274  001792  0E00               	movlw	0
  7275  001794  6E06               	movwf	___fladd@b+1,c
  7276  001796  0E00               	movlw	0
  7277  001798  6E07               	movwf	___fladd@b+2,c
  7278  00179A  0E00               	movlw	0
  7279  00179C  6E08               	movwf	___fladd@b+3,c
  7280  00179E  5013               	movf	___fladd@bexp,w,c
  7281  0017A0  A4D8               	btfss	status,2,c
  7282  0017A2  D002               	goto	l6191
  7283  0017A4  0E00               	movlw	0
  7284  0017A6  6E11               	movwf	___fladd@signs,c
  7285  0017A8                     l6191:
  7286  0017A8  A013               	btfss	___fladd@bexp,0,c
  7287  0017AA  D002               	goto	l6195
  7288  0017AC  8E07               	bsf	___fladd@b+2,7,c
  7289  0017AE  D001               	goto	l6197
  7290  0017B0                     l6195:
  7291  0017B0  9E07               	bcf	___fladd@b+2,7,c
  7292  0017B2                     l6197:
  7293  0017B2  90D8               	bcf	status,0,c
  7294  0017B4  3013               	rrcf	___fladd@bexp,w,c
  7295  0017B6  6E08               	movwf	___fladd@b+3,c
  7296  0017B8  BE11               	btfsc	___fladd@signs,7,c
  7297  0017BA  8E08               	bsf	___fladd@b+3,7,c
  7298  0017BC  C005  F005         	movff	___fladd@b,?___fladd
  7299  0017C0  C006  F006         	movff	___fladd@b+1,?___fladd+1
  7300  0017C4  C007  F007         	movff	___fladd@b+2,?___fladd+2
  7301  0017C8  C008  F008         	movff	___fladd@b+3,?___fladd+3
  7302  0017CC  0012               	return		;funcret
  7303  0017CE                     __end_of___fladd:
  7304                           	opt callstack 0
  7305                           
  7306 ;; *************** function ___flneg *****************
  7307 ;; Defined at:
  7308 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  f1              4    4[COMRAM] unsigned char 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;		None
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  4    4[COMRAM] unsigned char 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7326 ;;Total ram usage:        4 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:    4
  7329 ;; This function calls:
  7330 ;;		Nothing
  7331 ;; This function is called by:
  7332 ;;		_efgtoa
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           	psect	text20
  7337  003258                     __ptext20:
  7338                           	opt callstack 0
  7339  003258                     ___flneg:
  7340                           	opt callstack 21
  7341                           
  7342                           ;incstack = 0
  7343  003258  5005               	movf	___flneg@f1,w,c
  7344  00325A  1006               	iorwf	___flneg@f1+1,w,c
  7345  00325C  1007               	iorwf	___flneg@f1+2,w,c
  7346  00325E  1008               	iorwf	___flneg@f1+3,w,c
  7347  003260  B4D8               	btfsc	status,2,c
  7348  003262  D008               	goto	l6801
  7349  003264  0E00               	movlw	0
  7350  003266  1A05               	xorwf	___flneg@f1,f,c
  7351  003268  0E00               	movlw	0
  7352  00326A  1A06               	xorwf	___flneg@f1+1,f,c
  7353  00326C  0E00               	movlw	0
  7354  00326E  1A07               	xorwf	___flneg@f1+2,f,c
  7355  003270  0E80               	movlw	128
  7356  003272  1A08               	xorwf	___flneg@f1+3,f,c
  7357  003274                     l6801:
  7358  003274  C005  F005         	movff	___flneg@f1,?___flneg
  7359  003278  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  7360  00327C  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  7361  003280  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  7362  003284  0012               	return		;funcret
  7363  003286                     __end_of___flneg:
  7364                           	opt callstack 0
  7365                           
  7366 ;; *************** function ___flmul *****************
  7367 ;; Defined at:
  7368 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  b               4    4[COMRAM] unsigned char 
  7371 ;;  a               4    8[COMRAM] unsigned char 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  prod            4   23[COMRAM] struct .
  7374 ;;  grs             4   18[COMRAM] unsigned long 
  7375 ;;  temp            2   27[COMRAM] struct .
  7376 ;;  bexp            1   22[COMRAM] unsigned char 
  7377 ;;  aexp            1   17[COMRAM] unsigned char 
  7378 ;;  sign            1   16[COMRAM] unsigned char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  4    4[COMRAM] unsigned char 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0, prodl, prodh
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7388 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7389 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7391 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;Total ram usage:       25 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    4
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_efgtoa
  7399 ;;		_getReading
  7400 ;;		_adafruit
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           	psect	text21
  7405  001170                     __ptext21:
  7406                           	opt callstack 0
  7407  001170                     ___flmul:
  7408                           	opt callstack 21
  7409                           
  7410                           ;incstack = 0
  7411  001170  5008               	movf	___flmul@b+3,w,c
  7412  001172  0B80               	andlw	128
  7413  001174  6E11               	movwf	___flmul@sign,c
  7414  001176  5008               	movf	___flmul@b+3,w,c
  7415  001178  2408               	addwf	___flmul@b+3,w,c
  7416  00117A  6E17               	movwf	___flmul@bexp,c
  7417  00117C  BE07               	btfsc	___flmul@b+2,7,c
  7418  00117E  8017               	bsf	___flmul@bexp,0,c
  7419  001180  5017               	movf	___flmul@bexp,w,c
  7420  001182  B4D8               	btfsc	status,2,c
  7421  001184  D00D               	goto	l6557
  7422  001186  2817               	incf	___flmul@bexp,w,c
  7423  001188  A4D8               	btfss	status,2,c
  7424  00118A  D008               	goto	l6555
  7425  00118C  0E00               	movlw	0
  7426  00118E  6E05               	movwf	___flmul@b,c
  7427  001190  0E00               	movlw	0
  7428  001192  6E06               	movwf	___flmul@b+1,c
  7429  001194  0E00               	movlw	0
  7430  001196  6E07               	movwf	___flmul@b+2,c
  7431  001198  0E00               	movlw	0
  7432  00119A  6E08               	movwf	___flmul@b+3,c
  7433  00119C                     l6555:
  7434  00119C  8E07               	bsf	___flmul@b+2,7,c
  7435  00119E  D008               	goto	l6559
  7436  0011A0                     l6557:
  7437  0011A0  0E00               	movlw	0
  7438  0011A2  6E05               	movwf	___flmul@b,c
  7439  0011A4  0E00               	movlw	0
  7440  0011A6  6E06               	movwf	___flmul@b+1,c
  7441  0011A8  0E00               	movlw	0
  7442  0011AA  6E07               	movwf	___flmul@b+2,c
  7443  0011AC  0E00               	movlw	0
  7444  0011AE  6E08               	movwf	___flmul@b+3,c
  7445  0011B0                     l6559:
  7446  0011B0  500C               	movf	___flmul@a+3,w,c
  7447  0011B2  0B80               	andlw	128
  7448  0011B4  1A11               	xorwf	___flmul@sign,f,c
  7449  0011B6  500C               	movf	___flmul@a+3,w,c
  7450  0011B8  240C               	addwf	___flmul@a+3,w,c
  7451  0011BA  6E12               	movwf	___flmul@aexp,c
  7452  0011BC  BE0B               	btfsc	___flmul@a+2,7,c
  7453  0011BE  8012               	bsf	___flmul@aexp,0,c
  7454  0011C0  5012               	movf	___flmul@aexp,w,c
  7455  0011C2  B4D8               	btfsc	status,2,c
  7456  0011C4  D00D               	goto	l6575
  7457  0011C6  2812               	incf	___flmul@aexp,w,c
  7458  0011C8  A4D8               	btfss	status,2,c
  7459  0011CA  D008               	goto	l6573
  7460  0011CC  0E00               	movlw	0
  7461  0011CE  6E09               	movwf	___flmul@a,c
  7462  0011D0  0E00               	movlw	0
  7463  0011D2  6E0A               	movwf	___flmul@a+1,c
  7464  0011D4  0E00               	movlw	0
  7465  0011D6  6E0B               	movwf	___flmul@a+2,c
  7466  0011D8  0E00               	movlw	0
  7467  0011DA  6E0C               	movwf	___flmul@a+3,c
  7468  0011DC                     l6573:
  7469  0011DC  8E0B               	bsf	___flmul@a+2,7,c
  7470  0011DE  D008               	goto	l1445
  7471  0011E0                     l6575:
  7472  0011E0  0E00               	movlw	0
  7473  0011E2  6E09               	movwf	___flmul@a,c
  7474  0011E4  0E00               	movlw	0
  7475  0011E6  6E0A               	movwf	___flmul@a+1,c
  7476  0011E8  0E00               	movlw	0
  7477  0011EA  6E0B               	movwf	___flmul@a+2,c
  7478  0011EC  0E00               	movlw	0
  7479  0011EE  6E0C               	movwf	___flmul@a+3,c
  7480  0011F0                     l1445:
  7481  0011F0  5012               	movf	___flmul@aexp,w,c
  7482  0011F2  B4D8               	btfsc	status,2,c
  7483  0011F4  D003               	goto	u8510
  7484  0011F6  5017               	movf	___flmul@bexp,w,c
  7485  0011F8  A4D8               	btfss	status,2,c
  7486  0011FA  D009               	goto	l6583
  7487  0011FC                     u8510:
  7488  0011FC  0E00               	movlw	0
  7489  0011FE  6E05               	movwf	?___flmul,c
  7490  001200  0E00               	movlw	0
  7491  001202  6E06               	movwf	?___flmul+1,c
  7492  001204  0E00               	movlw	0
  7493  001206  6E07               	movwf	?___flmul+2,c
  7494  001208  0E00               	movlw	0
  7495  00120A  6E08               	movwf	?___flmul+3,c
  7496  00120C  0012               	return	
  7497  00120E                     l6583:
  7498  00120E  500B               	movf	___flmul@a+2,w,c
  7499  001210  0205               	mulwf	___flmul@b,c
  7500  001212  CFF3 F01C          	movff	prodl,___flmul@temp
  7501  001216  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7502  00121A  501C               	movf	___flmul@temp,w,c
  7503  00121C  6E13               	movwf	___flmul@grs,c
  7504  00121E  6A14               	clrf	___flmul@grs+1,c
  7505  001220  6A15               	clrf	___flmul@grs+2,c
  7506  001222  6A16               	clrf	___flmul@grs+3,c
  7507  001224  501D               	movf	___flmul@temp+1,w,c
  7508  001226  6E18               	movwf	___flmul@prod,c
  7509  001228  6A19               	clrf	___flmul@prod+1,c
  7510  00122A  6A1A               	clrf	___flmul@prod+2,c
  7511  00122C  6A1B               	clrf	___flmul@prod+3,c
  7512  00122E  500A               	movf	___flmul@a+1,w,c
  7513  001230  0206               	mulwf	___flmul@b+1,c
  7514  001232  CFF3 F01C          	movff	prodl,___flmul@temp
  7515  001236  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7516  00123A  501C               	movf	___flmul@temp,w,c
  7517  00123C  2613               	addwf	___flmul@grs,f,c
  7518  00123E  0E00               	movlw	0
  7519  001240  2214               	addwfc	___flmul@grs+1,f,c
  7520  001242  2215               	addwfc	___flmul@grs+2,f,c
  7521  001244  2216               	addwfc	___flmul@grs+3,f,c
  7522  001246  501D               	movf	___flmul@temp+1,w,c
  7523  001248  2618               	addwf	___flmul@prod,f,c
  7524  00124A  0E00               	movlw	0
  7525  00124C  2219               	addwfc	___flmul@prod+1,f,c
  7526  00124E  221A               	addwfc	___flmul@prod+2,f,c
  7527  001250  221B               	addwfc	___flmul@prod+3,f,c
  7528  001252  5009               	movf	___flmul@a,w,c
  7529  001254  0207               	mulwf	___flmul@b+2,c
  7530  001256  CFF3 F01C          	movff	prodl,___flmul@temp
  7531  00125A  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7532  00125E  501C               	movf	___flmul@temp,w,c
  7533  001260  2613               	addwf	___flmul@grs,f,c
  7534  001262  0E00               	movlw	0
  7535  001264  2214               	addwfc	___flmul@grs+1,f,c
  7536  001266  2215               	addwfc	___flmul@grs+2,f,c
  7537  001268  2216               	addwfc	___flmul@grs+3,f,c
  7538  00126A  501D               	movf	___flmul@temp+1,w,c
  7539  00126C  2618               	addwf	___flmul@prod,f,c
  7540  00126E  0E00               	movlw	0
  7541  001270  2219               	addwfc	___flmul@prod+1,f,c
  7542  001272  221A               	addwfc	___flmul@prod+2,f,c
  7543  001274  221B               	addwfc	___flmul@prod+3,f,c
  7544  001276  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  7545  00127A  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  7546  00127E  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  7547  001282  6A13               	clrf	___flmul@grs,c
  7548  001284  5009               	movf	___flmul@a,w,c
  7549  001286  0206               	mulwf	___flmul@b+1,c
  7550  001288  CFF3 F01C          	movff	prodl,___flmul@temp
  7551  00128C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7552  001290  501C               	movf	___flmul@temp,w,c
  7553  001292  2613               	addwf	___flmul@grs,f,c
  7554  001294  501D               	movf	___flmul@temp+1,w,c
  7555  001296  2214               	addwfc	___flmul@grs+1,f,c
  7556  001298  0E00               	movlw	0
  7557  00129A  2215               	addwfc	___flmul@grs+2,f,c
  7558  00129C  0E00               	movlw	0
  7559  00129E  2216               	addwfc	___flmul@grs+3,f,c
  7560  0012A0  500A               	movf	___flmul@a+1,w,c
  7561  0012A2  0205               	mulwf	___flmul@b,c
  7562  0012A4  CFF3 F01C          	movff	prodl,___flmul@temp
  7563  0012A8  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7564  0012AC  501C               	movf	___flmul@temp,w,c
  7565  0012AE  2613               	addwf	___flmul@grs,f,c
  7566  0012B0  501D               	movf	___flmul@temp+1,w,c
  7567  0012B2  2214               	addwfc	___flmul@grs+1,f,c
  7568  0012B4  0E00               	movlw	0
  7569  0012B6  2215               	addwfc	___flmul@grs+2,f,c
  7570  0012B8  0E00               	movlw	0
  7571  0012BA  2216               	addwfc	___flmul@grs+3,f,c
  7572  0012BC  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  7573  0012C0  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  7574  0012C4  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  7575  0012C8  6A13               	clrf	___flmul@grs,c
  7576  0012CA  5009               	movf	___flmul@a,w,c
  7577  0012CC  0205               	mulwf	___flmul@b,c
  7578  0012CE  CFF3 F01C          	movff	prodl,___flmul@temp
  7579  0012D2  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7580  0012D6  501C               	movf	___flmul@temp,w,c
  7581  0012D8  2613               	addwf	___flmul@grs,f,c
  7582  0012DA  501D               	movf	___flmul@temp+1,w,c
  7583  0012DC  2214               	addwfc	___flmul@grs+1,f,c
  7584  0012DE  0E00               	movlw	0
  7585  0012E0  2215               	addwfc	___flmul@grs+2,f,c
  7586  0012E2  0E00               	movlw	0
  7587  0012E4  2216               	addwfc	___flmul@grs+3,f,c
  7588  0012E6  500B               	movf	___flmul@a+2,w,c
  7589  0012E8  0206               	mulwf	___flmul@b+1,c
  7590  0012EA  CFF3 F01C          	movff	prodl,___flmul@temp
  7591  0012EE  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7592  0012F2  501C               	movf	___flmul@temp,w,c
  7593  0012F4  2618               	addwf	___flmul@prod,f,c
  7594  0012F6  501D               	movf	___flmul@temp+1,w,c
  7595  0012F8  2219               	addwfc	___flmul@prod+1,f,c
  7596  0012FA  0E00               	movlw	0
  7597  0012FC  221A               	addwfc	___flmul@prod+2,f,c
  7598  0012FE  0E00               	movlw	0
  7599  001300  221B               	addwfc	___flmul@prod+3,f,c
  7600  001302  500A               	movf	___flmul@a+1,w,c
  7601  001304  0207               	mulwf	___flmul@b+2,c
  7602  001306  CFF3 F01C          	movff	prodl,___flmul@temp
  7603  00130A  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7604  00130E  501C               	movf	___flmul@temp,w,c
  7605  001310  2618               	addwf	___flmul@prod,f,c
  7606  001312  501D               	movf	___flmul@temp+1,w,c
  7607  001314  2219               	addwfc	___flmul@prod+1,f,c
  7608  001316  0E00               	movlw	0
  7609  001318  221A               	addwfc	___flmul@prod+2,f,c
  7610  00131A  0E00               	movlw	0
  7611  00131C  221B               	addwfc	___flmul@prod+3,f,c
  7612  00131E  500B               	movf	___flmul@a+2,w,c
  7613  001320  0207               	mulwf	___flmul@b+2,c
  7614  001322  CFF3 F01C          	movff	prodl,___flmul@temp
  7615  001326  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7616  00132A  501C               	movf	___flmul@temp,w,c
  7617  00132C  6E0D               	movwf	??___flmul& (0+255),c
  7618  00132E  501D               	movf	___flmul@temp+1,w,c
  7619  001330  6E0E               	movwf	(??___flmul+1)& (0+255),c
  7620  001332  6A0F               	clrf	(??___flmul+2)& (0+255),c
  7621  001334  6A10               	clrf	(??___flmul+3)& (0+255),c
  7622  001336  C00F  F010         	movff	??___flmul+2,??___flmul+3
  7623  00133A  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  7624  00133E  C00D  F00E         	movff	??___flmul,??___flmul+1
  7625  001342  6A0D               	clrf	??___flmul,c
  7626  001344  500D               	movf	??___flmul,w,c
  7627  001346  2618               	addwf	___flmul@prod,f,c
  7628  001348  500E               	movf	??___flmul+1,w,c
  7629  00134A  2219               	addwfc	___flmul@prod+1,f,c
  7630  00134C  500F               	movf	??___flmul+2,w,c
  7631  00134E  221A               	addwfc	___flmul@prod+2,f,c
  7632  001350  5010               	movf	??___flmul+3,w,c
  7633  001352  221B               	addwfc	___flmul@prod+3,f,c
  7634  001354  C013  F00D         	movff	___flmul@grs,??___flmul
  7635  001358  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  7636  00135C  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  7637  001360  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  7638  001364  0E19               	movlw	25
  7639  001366  D005               	goto	u8520
  7640  001368                     u8525:
  7641  001368  90D8               	bcf	status,0,c
  7642  00136A  3210               	rrcf	??___flmul+3,f,c
  7643  00136C  320F               	rrcf	??___flmul+2,f,c
  7644  00136E  320E               	rrcf	??___flmul+1,f,c
  7645  001370  320D               	rrcf	??___flmul,f,c
  7646  001372                     u8520:
  7647  001372  2EE8               	decfsz	wreg,f,c
  7648  001374  D7F9               	goto	u8525
  7649  001376  500D               	movf	??___flmul,w,c
  7650  001378  2618               	addwf	___flmul@prod,f,c
  7651  00137A  500E               	movf	??___flmul+1,w,c
  7652  00137C  2219               	addwfc	___flmul@prod+1,f,c
  7653  00137E  500F               	movf	??___flmul+2,w,c
  7654  001380  221A               	addwfc	___flmul@prod+2,f,c
  7655  001382  5010               	movf	??___flmul+3,w,c
  7656  001384  221B               	addwfc	___flmul@prod+3,f,c
  7657  001386  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  7658  00138A  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  7659  00138E  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  7660  001392  6A13               	clrf	___flmul@grs,c
  7661  001394  5012               	movf	___flmul@aexp,w,c
  7662  001396  C017  F00D         	movff	___flmul@bexp,??___flmul
  7663  00139A  6A0E               	clrf	(??___flmul+1)& (0+255),c
  7664  00139C  260D               	addwf	??___flmul,f,c
  7665  00139E  0E00               	movlw	0
  7666  0013A0  220E               	addwfc	??___flmul+1,f,c
  7667  0013A2  0E82               	movlw	130
  7668  0013A4  240D               	addwf	??___flmul,w,c
  7669  0013A6  6E1C               	movwf	___flmul@temp,c
  7670  0013A8  0EFF               	movlw	255
  7671  0013AA  200E               	addwfc	??___flmul+1,w,c
  7672  0013AC  6E1D               	movwf	___flmul@temp+1,c
  7673  0013AE  D00F               	goto	l6631
  7674  0013B0                     l6625:
  7675  0013B0  90D8               	bcf	status,0,c
  7676  0013B2  3618               	rlcf	___flmul@prod,f,c
  7677  0013B4  3619               	rlcf	___flmul@prod+1,f,c
  7678  0013B6  361A               	rlcf	___flmul@prod+2,f,c
  7679  0013B8  361B               	rlcf	___flmul@prod+3,f,c
  7680  0013BA  BE16               	btfsc	___flmul@grs+3,7,c
  7681  0013BC  8018               	bsf	___flmul@prod,0,c
  7682  0013BE  90D8               	bcf	status,0,c
  7683  0013C0  3613               	rlcf	___flmul@grs,f,c
  7684  0013C2  3614               	rlcf	___flmul@grs+1,f,c
  7685  0013C4  3615               	rlcf	___flmul@grs+2,f,c
  7686  0013C6  3616               	rlcf	___flmul@grs+3,f,c
  7687  0013C8  061C               	decf	___flmul@temp,f,c
  7688  0013CA  A0D8               	btfss	status,0,c
  7689  0013CC  061D               	decf	___flmul@temp+1,f,c
  7690  0013CE                     l6631:
  7691  0013CE  AE1A               	btfss	___flmul@prod+2,7,c
  7692  0013D0  D7EF               	goto	l6625
  7693  0013D2  0E00               	movlw	0
  7694  0013D4  6E12               	movwf	___flmul@aexp,c
  7695  0013D6  AE16               	btfss	___flmul@grs+3,7,c
  7696  0013D8  D017               	goto	l1454
  7697  0013DA  0EFF               	movlw	255
  7698  0013DC  1413               	andwf	___flmul@grs,w,c
  7699  0013DE  6E0D               	movwf	??___flmul& (0+255),c
  7700  0013E0  0EFF               	movlw	255
  7701  0013E2  1414               	andwf	___flmul@grs+1,w,c
  7702  0013E4  6E0E               	movwf	(??___flmul+1)& (0+255),c
  7703  0013E6  0EFF               	movlw	255
  7704  0013E8  1415               	andwf	___flmul@grs+2,w,c
  7705  0013EA  6E0F               	movwf	(??___flmul+2)& (0+255),c
  7706  0013EC  0E7F               	movlw	127
  7707  0013EE  1416               	andwf	___flmul@grs+3,w,c
  7708  0013F0  6E10               	movwf	(??___flmul+3)& (0+255),c
  7709  0013F2  500D               	movf	??___flmul,w,c
  7710  0013F4  100E               	iorwf	??___flmul+1,w,c
  7711  0013F6  100F               	iorwf	??___flmul+2,w,c
  7712  0013F8  1010               	iorwf	??___flmul+3,w,c
  7713  0013FA  B4D8               	btfsc	status,2,c
  7714  0013FC  D003               	goto	l1455
  7715  0013FE                     u8560:
  7716  0013FE  0E01               	movlw	1
  7717  001400  6E12               	movwf	___flmul@aexp,c
  7718  001402  D002               	goto	l1454
  7719  001404                     l1455:
  7720  001404  B018               	btfsc	___flmul@prod,0,c
  7721  001406  D7FB               	goto	u8560
  7722  001408                     l1454:
  7723  001408  5012               	movf	___flmul@aexp,w,c
  7724  00140A  B4D8               	btfsc	status,2,c
  7725  00140C  D01F               	goto	l6651
  7726  00140E  0E01               	movlw	1
  7727  001410  2618               	addwf	___flmul@prod,f,c
  7728  001412  0E00               	movlw	0
  7729  001414  2219               	addwfc	___flmul@prod+1,f,c
  7730  001416  221A               	addwfc	___flmul@prod+2,f,c
  7731  001418  221B               	addwfc	___flmul@prod+3,f,c
  7732  00141A  A01B               	btfss	___flmul@prod+3,0,c
  7733  00141C  D017               	goto	l6651
  7734  00141E  C018  F00D         	movff	___flmul@prod,??___flmul
  7735  001422  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  7736  001426  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  7737  00142A  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  7738  00142E  3410               	rlcf	??___flmul+3,w,c
  7739  001430  3210               	rrcf	??___flmul+3,f,c
  7740  001432  320F               	rrcf	??___flmul+2,f,c
  7741  001434  320E               	rrcf	??___flmul+1,f,c
  7742  001436  320D               	rrcf	??___flmul,f,c
  7743  001438  C00D  F018         	movff	??___flmul,___flmul@prod
  7744  00143C  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  7745  001440  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  7746  001444  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  7747  001448  4A1C               	infsnz	___flmul@temp,f,c
  7748  00144A  2A1D               	incf	___flmul@temp+1,f,c
  7749  00144C                     l6651:
  7750  00144C  BE1D               	btfsc	___flmul@temp+1,7,c
  7751  00144E  D00D               	goto	l6655
  7752  001450  501D               	movf	___flmul@temp+1,w,c
  7753  001452  E103               	bnz	u8600
  7754  001454  281C               	incf	___flmul@temp,w,c
  7755  001456  A0D8               	btfss	status,0,c
  7756  001458  D008               	goto	l6655
  7757  00145A                     u8600:
  7758  00145A  0E00               	movlw	0
  7759  00145C  6E18               	movwf	___flmul@prod,c
  7760  00145E  0E00               	movlw	0
  7761  001460  6E19               	movwf	___flmul@prod+1,c
  7762  001462  0E80               	movlw	128
  7763  001464  6E1A               	movwf	___flmul@prod+2,c
  7764  001466  0E7F               	movlw	127
  7765  001468  D020               	goto	L12
  7766  00146A                     l6655:
  7767  00146A  BE1D               	btfsc	___flmul@temp+1,7,c
  7768  00146C  D005               	goto	u8610
  7769  00146E  501D               	movf	___flmul@temp+1,w,c
  7770  001470  E10E               	bnz	l1462
  7771  001472  041C               	decf	___flmul@temp,w,c
  7772  001474  B0D8               	btfsc	status,0,c
  7773  001476  D00B               	goto	l1462
  7774  001478                     u8610:
  7775  001478  0E00               	movlw	0
  7776  00147A  6E18               	movwf	___flmul@prod,c
  7777  00147C  0E00               	movlw	0
  7778  00147E  6E19               	movwf	___flmul@prod+1,c
  7779  001480  0E00               	movlw	0
  7780  001482  6E1A               	movwf	___flmul@prod+2,c
  7781  001484  0E00               	movlw	0
  7782  001486  6E1B               	movwf	___flmul@prod+3,c
  7783  001488  0E00               	movlw	0
  7784  00148A  6E11               	movwf	___flmul@sign,c
  7785  00148C  D00F               	goto	l6667
  7786  00148E                     l1462:
  7787  00148E  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  7788  001492  0EFF               	movlw	255
  7789  001494  1618               	andwf	___flmul@prod,f,c
  7790  001496  0EFF               	movlw	255
  7791  001498  1619               	andwf	___flmul@prod+1,f,c
  7792  00149A  0E7F               	movlw	127
  7793  00149C  161A               	andwf	___flmul@prod+2,f,c
  7794  00149E  0E00               	movlw	0
  7795  0014A0  161B               	andwf	___flmul@prod+3,f,c
  7796  0014A2  B017               	btfsc	___flmul@bexp,0,c
  7797  0014A4  8E1A               	bsf	___flmul@prod+2,7,c
  7798  0014A6  90D8               	bcf	status,0,c
  7799  0014A8  3017               	rrcf	___flmul@bexp,w,c
  7800  0014AA                     L12:
  7801  0014AA  6E1B               	movwf	___flmul@prod+3,c
  7802  0014AC                     l6667:
  7803  0014AC  5011               	movf	___flmul@sign,w,c
  7804  0014AE  121B               	iorwf	___flmul@prod+3,f,c
  7805  0014B0  C018  F005         	movff	___flmul@prod,?___flmul
  7806  0014B4  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  7807  0014B8  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  7808  0014BC  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  7809  0014C0  0012               	return		;funcret
  7810  0014C2                     __end_of___flmul:
  7811                           	opt callstack 0
  7812                           
  7813 ;; *************** function ___flge *****************
  7814 ;; Defined at:
  7815 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  ff1             4   29[COMRAM] unsigned char 
  7818 ;;  ff2             4   33[COMRAM] unsigned char 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;		None               void
  7823 ;; Registers used:
  7824 ;;		wreg, status,2, status,0
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7830 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7834 ;;Total ram usage:       12 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    4
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_efgtoa
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           	psect	text22
  7845  0025DC                     __ptext22:
  7846                           	opt callstack 0
  7847  0025DC                     ___flge:
  7848                           	opt callstack 21
  7849                           
  7850                           ;incstack = 0
  7851  0025DC  0E00               	movlw	0
  7852  0025DE  141E               	andwf	___flge@ff1,w,c
  7853  0025E0  6E26               	movwf	??___flge& (0+255),c
  7854  0025E2  0E00               	movlw	0
  7855  0025E4  141F               	andwf	___flge@ff1+1,w,c
  7856  0025E6  6E27               	movwf	(??___flge+1)& (0+255),c
  7857  0025E8  0E80               	movlw	128
  7858  0025EA  1420               	andwf	___flge@ff1+2,w,c
  7859  0025EC  6E28               	movwf	(??___flge+2)& (0+255),c
  7860  0025EE  0E7F               	movlw	127
  7861  0025F0  1421               	andwf	___flge@ff1+3,w,c
  7862  0025F2  6E29               	movwf	(??___flge+3)& (0+255),c
  7863  0025F4  5026               	movf	??___flge,w,c
  7864  0025F6  1027               	iorwf	??___flge+1,w,c
  7865  0025F8  1028               	iorwf	??___flge+2,w,c
  7866  0025FA  1029               	iorwf	??___flge+3,w,c
  7867  0025FC  A4D8               	btfss	status,2,c
  7868  0025FE  D008               	goto	l6779
  7869  002600  0E00               	movlw	0
  7870  002602  6E1E               	movwf	___flge@ff1,c
  7871  002604  0E00               	movlw	0
  7872  002606  6E1F               	movwf	___flge@ff1+1,c
  7873  002608  0E00               	movlw	0
  7874  00260A  6E20               	movwf	___flge@ff1+2,c
  7875  00260C  0E00               	movlw	0
  7876  00260E  6E21               	movwf	___flge@ff1+3,c
  7877  002610                     l6779:
  7878  002610  0E00               	movlw	0
  7879  002612  1422               	andwf	___flge@ff2,w,c
  7880  002614  6E26               	movwf	??___flge& (0+255),c
  7881  002616  0E00               	movlw	0
  7882  002618  1423               	andwf	___flge@ff2+1,w,c
  7883  00261A  6E27               	movwf	(??___flge+1)& (0+255),c
  7884  00261C  0E80               	movlw	128
  7885  00261E  1424               	andwf	___flge@ff2+2,w,c
  7886  002620  6E28               	movwf	(??___flge+2)& (0+255),c
  7887  002622  0E7F               	movlw	127
  7888  002624  1425               	andwf	___flge@ff2+3,w,c
  7889  002626  6E29               	movwf	(??___flge+3)& (0+255),c
  7890  002628  5026               	movf	??___flge,w,c
  7891  00262A  1027               	iorwf	??___flge+1,w,c
  7892  00262C  1028               	iorwf	??___flge+2,w,c
  7893  00262E  1029               	iorwf	??___flge+3,w,c
  7894  002630  A4D8               	btfss	status,2,c
  7895  002632  D008               	goto	l6783
  7896  002634  0E00               	movlw	0
  7897  002636  6E22               	movwf	___flge@ff2,c
  7898  002638  0E00               	movlw	0
  7899  00263A  6E23               	movwf	___flge@ff2+1,c
  7900  00263C  0E00               	movlw	0
  7901  00263E  6E24               	movwf	___flge@ff2+2,c
  7902  002640  0E00               	movlw	0
  7903  002642  6E25               	movwf	___flge@ff2+3,c
  7904  002644                     l6783:
  7905  002644  AE21               	btfss	___flge@ff1+3,7,c
  7906  002646  D009               	goto	l6787
  7907  002648  6C1E               	negf	___flge@ff1,c
  7908  00264A  1E1F               	comf	___flge@ff1+1,f,c
  7909  00264C  B0D8               	btfsc	status,0,c
  7910  00264E  2A1F               	incf	___flge@ff1+1,f,c
  7911  002650  1E20               	comf	___flge@ff1+2,f,c
  7912  002652  B0D8               	btfsc	status,0,c
  7913  002654  2A20               	incf	___flge@ff1+2,f,c
  7914  002656  0E80               	movlw	128
  7915  002658  5621               	subfwb	___flge@ff1+3,f,c
  7916  00265A                     l6787:
  7917  00265A  AE25               	btfss	___flge@ff2+3,7,c
  7918  00265C  D009               	goto	l1096
  7919  00265E  6C22               	negf	___flge@ff2,c
  7920  002660  1E23               	comf	___flge@ff2+1,f,c
  7921  002662  B0D8               	btfsc	status,0,c
  7922  002664  2A23               	incf	___flge@ff2+1,f,c
  7923  002666  1E24               	comf	___flge@ff2+2,f,c
  7924  002668  B0D8               	btfsc	status,0,c
  7925  00266A  2A24               	incf	___flge@ff2+2,f,c
  7926  00266C  0E80               	movlw	128
  7927  00266E  5625               	subfwb	___flge@ff2+3,f,c
  7928  002670                     l1096:
  7929  002670  0E00               	movlw	0
  7930  002672  1A1E               	xorwf	___flge@ff1,f,c
  7931  002674  0E00               	movlw	0
  7932  002676  1A1F               	xorwf	___flge@ff1+1,f,c
  7933  002678  0E00               	movlw	0
  7934  00267A  1A20               	xorwf	___flge@ff1+2,f,c
  7935  00267C  0E80               	movlw	128
  7936  00267E  1A21               	xorwf	___flge@ff1+3,f,c
  7937  002680  0E00               	movlw	0
  7938  002682  1A22               	xorwf	___flge@ff2,f,c
  7939  002684  0E00               	movlw	0
  7940  002686  1A23               	xorwf	___flge@ff2+1,f,c
  7941  002688  0E00               	movlw	0
  7942  00268A  1A24               	xorwf	___flge@ff2+2,f,c
  7943  00268C  0E80               	movlw	128
  7944  00268E  1A25               	xorwf	___flge@ff2+3,f,c
  7945  002690  5022               	movf	___flge@ff2,w,c
  7946  002692  5C1E               	subwf	___flge@ff1,w,c
  7947  002694  5023               	movf	___flge@ff2+1,w,c
  7948  002696  581F               	subwfb	___flge@ff1+1,w,c
  7949  002698  5024               	movf	___flge@ff2+2,w,c
  7950  00269A  5820               	subwfb	___flge@ff1+2,w,c
  7951  00269C  5025               	movf	___flge@ff2+3,w,c
  7952  00269E  5821               	subwfb	___flge@ff1+3,w,c
  7953  0026A0  B0D8               	btfsc	status,0,c
  7954  0026A2  D002               	goto	l6793
  7955  0026A4  90D8               	bcf	status,0,c
  7956  0026A6  0012               	return	
  7957  0026A8                     l6793:
  7958  0026A8  80D8               	bsf	status,0,c
  7959  0026AA  0012               	return		;funcret
  7960  0026AC                     __end_of___flge:
  7961                           	opt callstack 0
  7962                           
  7963 ;; *************** function ___fleq *****************
  7964 ;; Defined at:
  7965 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  ff1             4    4[COMRAM] unsigned char 
  7968 ;;  ff2             4    8[COMRAM] unsigned char 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;		None
  7971 ;; Return value:  Size  Location     Type
  7972 ;;		None               void
  7973 ;; Registers used:
  7974 ;;		wreg, status,2, status,0
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7980 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;Total ram usage:       12 bytes
  7985 ;; Hardware stack levels used:    1
  7986 ;; Hardware stack levels required when called:    4
  7987 ;; This function calls:
  7988 ;;		Nothing
  7989 ;; This function is called by:
  7990 ;;		_efgtoa
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text23
  7995  002B40                     __ptext23:
  7996                           	opt callstack 0
  7997  002B40                     ___fleq:
  7998                           	opt callstack 21
  7999                           
  8000                           ;incstack = 0
  8001  002B40  0E00               	movlw	0
  8002  002B42  1405               	andwf	___fleq@ff1,w,c
  8003  002B44  6E0D               	movwf	??___fleq& (0+255),c
  8004  002B46  0E00               	movlw	0
  8005  002B48  1406               	andwf	___fleq@ff1+1,w,c
  8006  002B4A  6E0E               	movwf	(??___fleq+1)& (0+255),c
  8007  002B4C  0E80               	movlw	128
  8008  002B4E  1407               	andwf	___fleq@ff1+2,w,c
  8009  002B50  6E0F               	movwf	(??___fleq+2)& (0+255),c
  8010  002B52  0E7F               	movlw	127
  8011  002B54  1408               	andwf	___fleq@ff1+3,w,c
  8012  002B56  6E10               	movwf	(??___fleq+3)& (0+255),c
  8013  002B58  500D               	movf	??___fleq,w,c
  8014  002B5A  100E               	iorwf	??___fleq+1,w,c
  8015  002B5C  100F               	iorwf	??___fleq+2,w,c
  8016  002B5E  1010               	iorwf	??___fleq+3,w,c
  8017  002B60  A4D8               	btfss	status,2,c
  8018  002B62  D008               	goto	l6763
  8019  002B64  0E00               	movlw	0
  8020  002B66  6E05               	movwf	___fleq@ff1,c
  8021  002B68  0E00               	movlw	0
  8022  002B6A  6E06               	movwf	___fleq@ff1+1,c
  8023  002B6C  0E00               	movlw	0
  8024  002B6E  6E07               	movwf	___fleq@ff1+2,c
  8025  002B70  0E00               	movlw	0
  8026  002B72  6E08               	movwf	___fleq@ff1+3,c
  8027  002B74                     l6763:
  8028  002B74  0E00               	movlw	0
  8029  002B76  1409               	andwf	___fleq@ff2,w,c
  8030  002B78  6E0D               	movwf	??___fleq& (0+255),c
  8031  002B7A  0E00               	movlw	0
  8032  002B7C  140A               	andwf	___fleq@ff2+1,w,c
  8033  002B7E  6E0E               	movwf	(??___fleq+1)& (0+255),c
  8034  002B80  0E80               	movlw	128
  8035  002B82  140B               	andwf	___fleq@ff2+2,w,c
  8036  002B84  6E0F               	movwf	(??___fleq+2)& (0+255),c
  8037  002B86  0E7F               	movlw	127
  8038  002B88  140C               	andwf	___fleq@ff2+3,w,c
  8039  002B8A  6E10               	movwf	(??___fleq+3)& (0+255),c
  8040  002B8C  500D               	movf	??___fleq,w,c
  8041  002B8E  100E               	iorwf	??___fleq+1,w,c
  8042  002B90  100F               	iorwf	??___fleq+2,w,c
  8043  002B92  1010               	iorwf	??___fleq+3,w,c
  8044  002B94  A4D8               	btfss	status,2,c
  8045  002B96  D008               	goto	l6767
  8046  002B98  0E00               	movlw	0
  8047  002B9A  6E09               	movwf	___fleq@ff2,c
  8048  002B9C  0E00               	movlw	0
  8049  002B9E  6E0A               	movwf	___fleq@ff2+1,c
  8050  002BA0  0E00               	movlw	0
  8051  002BA2  6E0B               	movwf	___fleq@ff2+2,c
  8052  002BA4  0E00               	movlw	0
  8053  002BA6  6E0C               	movwf	___fleq@ff2+3,c
  8054  002BA8                     l6767:
  8055  002BA8  5009               	movf	___fleq@ff2,w,c
  8056  002BAA  1805               	xorwf	___fleq@ff1,w,c
  8057  002BAC  E10A               	bnz	u8770
  8058  002BAE  500A               	movf	___fleq@ff2+1,w,c
  8059  002BB0  1806               	xorwf	___fleq@ff1+1,w,c
  8060  002BB2  E107               	bnz	u8770
  8061  002BB4  500B               	movf	___fleq@ff2+2,w,c
  8062  002BB6  1807               	xorwf	___fleq@ff1+2,w,c
  8063  002BB8  E104               	bnz	u8770
  8064  002BBA  500C               	movf	___fleq@ff2+3,w,c
  8065  002BBC  1808               	xorwf	___fleq@ff1+3,w,c
  8066  002BBE  B4D8               	btfsc	status,2,c
  8067  002BC0  D002               	goto	l6771
  8068  002BC2                     u8770:
  8069  002BC2  90D8               	bcf	status,0,c
  8070  002BC4  0012               	return	
  8071  002BC6                     l6771:
  8072  002BC6  80D8               	bsf	status,0,c
  8073  002BC8  0012               	return		;funcret
  8074  002BCA                     __end_of___fleq:
  8075                           	opt callstack 0
  8076                           
  8077 ;; *************** function ___fldiv *****************
  8078 ;; Defined at:
  8079 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  b               4    4[COMRAM] unsigned char 
  8082 ;;  a               4    8[COMRAM] unsigned char 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  grs             4   23[COMRAM] unsigned long 
  8085 ;;  rem             4   16[COMRAM] unsigned long 
  8086 ;;  new_exp         2   21[COMRAM] short 
  8087 ;;  aexp            1   28[COMRAM] unsigned char 
  8088 ;;  bexp            1   27[COMRAM] unsigned char 
  8089 ;;  sign            1   20[COMRAM] unsigned char 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  4    4[COMRAM] unsigned char 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8099 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8103 ;;Total ram usage:       25 bytes
  8104 ;; Hardware stack levels used:    1
  8105 ;; Hardware stack levels required when called:    4
  8106 ;; This function calls:
  8107 ;;		Nothing
  8108 ;; This function is called by:
  8109 ;;		_efgtoa
  8110 ;;		_getReading
  8111 ;;		_adafruit
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text24
  8116  0017CE                     __ptext24:
  8117                           	opt callstack 0
  8118  0017CE                     ___fldiv:
  8119                           	opt callstack 21
  8120                           
  8121                           ;incstack = 0
  8122  0017CE  5008               	movf	___fldiv@b+3,w,c
  8123  0017D0  0B80               	andlw	128
  8124  0017D2  6E15               	movwf	___fldiv@sign,c
  8125  0017D4  5008               	movf	___fldiv@b+3,w,c
  8126  0017D6  2408               	addwf	___fldiv@b+3,w,c
  8127  0017D8  6E1C               	movwf	___fldiv@bexp,c
  8128  0017DA  BE07               	btfsc	___fldiv@b+2,7,c
  8129  0017DC  801C               	bsf	___fldiv@bexp,0,c
  8130  0017DE  501C               	movf	___fldiv@bexp,w,c
  8131  0017E0  B4D8               	btfsc	status,2,c
  8132  0017E2  D00D               	goto	l6421
  8133  0017E4  281C               	incf	___fldiv@bexp,w,c
  8134  0017E6  A4D8               	btfss	status,2,c
  8135  0017E8  D008               	goto	l6417
  8136  0017EA  0E00               	movlw	0
  8137  0017EC  6E05               	movwf	___fldiv@b,c
  8138  0017EE  0E00               	movlw	0
  8139  0017F0  6E06               	movwf	___fldiv@b+1,c
  8140  0017F2  0E00               	movlw	0
  8141  0017F4  6E07               	movwf	___fldiv@b+2,c
  8142  0017F6  0E00               	movlw	0
  8143  0017F8  6E08               	movwf	___fldiv@b+3,c
  8144  0017FA                     l6417:
  8145  0017FA  8E07               	bsf	___fldiv@b+2,7,c
  8146  0017FC  D006               	goto	L13
  8147  0017FE                     l6421:
  8148  0017FE  0E00               	movlw	0
  8149  001800  6E05               	movwf	___fldiv@b,c
  8150  001802  0E00               	movlw	0
  8151  001804  6E06               	movwf	___fldiv@b+1,c
  8152  001806  0E00               	movlw	0
  8153  001808  6E07               	movwf	___fldiv@b+2,c
  8154  00180A                     L13:
  8155  00180A  0E00               	movlw	0
  8156  00180C  6E08               	movwf	___fldiv@b+3,c
  8157  00180E  500C               	movf	___fldiv@a+3,w,c
  8158  001810  0B80               	andlw	128
  8159  001812  1A15               	xorwf	___fldiv@sign,f,c
  8160  001814  500C               	movf	___fldiv@a+3,w,c
  8161  001816  240C               	addwf	___fldiv@a+3,w,c
  8162  001818  6E1D               	movwf	___fldiv@aexp,c
  8163  00181A  BE0B               	btfsc	___fldiv@a+2,7,c
  8164  00181C  801D               	bsf	___fldiv@aexp,0,c
  8165  00181E  501D               	movf	___fldiv@aexp,w,c
  8166  001820  B4D8               	btfsc	status,2,c
  8167  001822  D00D               	goto	l6441
  8168  001824  281D               	incf	___fldiv@aexp,w,c
  8169  001826  A4D8               	btfss	status,2,c
  8170  001828  D008               	goto	l6437
  8171  00182A  0E00               	movlw	0
  8172  00182C  6E09               	movwf	___fldiv@a,c
  8173  00182E  0E00               	movlw	0
  8174  001830  6E0A               	movwf	___fldiv@a+1,c
  8175  001832  0E00               	movlw	0
  8176  001834  6E0B               	movwf	___fldiv@a+2,c
  8177  001836  0E00               	movlw	0
  8178  001838  6E0C               	movwf	___fldiv@a+3,c
  8179  00183A                     l6437:
  8180  00183A  8E0B               	bsf	___fldiv@a+2,7,c
  8181  00183C  D006               	goto	L14
  8182  00183E                     l6441:
  8183  00183E  0E00               	movlw	0
  8184  001840  6E09               	movwf	___fldiv@a,c
  8185  001842  0E00               	movlw	0
  8186  001844  6E0A               	movwf	___fldiv@a+1,c
  8187  001846  0E00               	movlw	0
  8188  001848  6E0B               	movwf	___fldiv@a+2,c
  8189  00184A                     L14:
  8190  00184A  0E00               	movlw	0
  8191  00184C  6E0C               	movwf	___fldiv@a+3,c
  8192  00184E  5009               	movf	___fldiv@a,w,c
  8193  001850  100A               	iorwf	___fldiv@a+1,w,c
  8194  001852  100B               	iorwf	___fldiv@a+2,w,c
  8195  001854  100C               	iorwf	___fldiv@a+3,w,c
  8196  001856  A4D8               	btfss	status,2,c
  8197  001858  D017               	goto	l6455
  8198  00185A  0E00               	movlw	0
  8199  00185C  6E05               	movwf	___fldiv@b,c
  8200  00185E  0E00               	movlw	0
  8201  001860  6E06               	movwf	___fldiv@b+1,c
  8202  001862  0E00               	movlw	0
  8203  001864  6E07               	movwf	___fldiv@b+2,c
  8204  001866  0E00               	movlw	0
  8205  001868  6E08               	movwf	___fldiv@b+3,c
  8206  00186A  0E80               	movlw	128
  8207  00186C  1207               	iorwf	___fldiv@b+2,f,c
  8208  00186E  0E7F               	movlw	127
  8209  001870  1208               	iorwf	___fldiv@b+3,f,c
  8210  001872                     l6449:
  8211  001872  5015               	movf	___fldiv@sign,w,c
  8212  001874  1208               	iorwf	___fldiv@b+3,f,c
  8213  001876  C005  F005         	movff	___fldiv@b,?___fldiv
  8214  00187A  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  8215  00187E  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  8216  001882  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  8217  001886  0012               	return	
  8218  001888                     l6455:
  8219  001888  501C               	movf	___fldiv@bexp,w,c
  8220  00188A  A4D8               	btfss	status,2,c
  8221  00188C  D009               	goto	l6463
  8222  00188E  0E00               	movlw	0
  8223  001890  6E05               	movwf	?___fldiv,c
  8224  001892  0E00               	movlw	0
  8225  001894  6E06               	movwf	?___fldiv+1,c
  8226  001896  0E00               	movlw	0
  8227  001898  6E07               	movwf	?___fldiv+2,c
  8228  00189A  0E00               	movlw	0
  8229  00189C  6E08               	movwf	?___fldiv+3,c
  8230  00189E  0012               	return	
  8231  0018A0                     l6463:
  8232  0018A0  501D               	movf	___fldiv@aexp,w,c
  8233  0018A2  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  8234  0018A6  6A0E               	clrf	(??___fldiv+1)& (0+255),c
  8235  0018A8  5E0D               	subwf	??___fldiv,f,c
  8236  0018AA  0E00               	movlw	0
  8237  0018AC  5A0E               	subwfb	??___fldiv+1,f,c
  8238  0018AE  0E7F               	movlw	127
  8239  0018B0  240D               	addwf	??___fldiv,w,c
  8240  0018B2  6E16               	movwf	___fldiv@new_exp,c
  8241  0018B4  0E00               	movlw	0
  8242  0018B6  200E               	addwfc	??___fldiv+1,w,c
  8243  0018B8  6E17               	movwf	___fldiv@new_exp+1,c
  8244  0018BA  C005  F011         	movff	___fldiv@b,___fldiv@rem
  8245  0018BE  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  8246  0018C2  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  8247  0018C6  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  8248  0018CA  0E00               	movlw	0
  8249  0018CC  6E05               	movwf	___fldiv@b,c
  8250  0018CE  0E00               	movlw	0
  8251  0018D0  6E06               	movwf	___fldiv@b+1,c
  8252  0018D2  0E00               	movlw	0
  8253  0018D4  6E07               	movwf	___fldiv@b+2,c
  8254  0018D6  0E00               	movlw	0
  8255  0018D8  6E08               	movwf	___fldiv@b+3,c
  8256  0018DA  0E00               	movlw	0
  8257  0018DC  6E18               	movwf	___fldiv@grs,c
  8258  0018DE  0E00               	movlw	0
  8259  0018E0  6E19               	movwf	___fldiv@grs+1,c
  8260  0018E2  0E00               	movlw	0
  8261  0018E4  6E1A               	movwf	___fldiv@grs+2,c
  8262  0018E6  0E00               	movlw	0
  8263  0018E8  6E1B               	movwf	___fldiv@grs+3,c
  8264  0018EA  0E00               	movlw	0
  8265  0018EC  6E1D               	movwf	___fldiv@aexp,c
  8266  0018EE  D028               	goto	l1415
  8267  0018F0                     l6473:
  8268  0018F0  501D               	movf	___fldiv@aexp,w,c
  8269  0018F2  B4D8               	btfsc	status,2,c
  8270  0018F4  D011               	goto	l6481
  8271  0018F6  90D8               	bcf	status,0,c
  8272  0018F8  3611               	rlcf	___fldiv@rem,f,c
  8273  0018FA  3612               	rlcf	___fldiv@rem+1,f,c
  8274  0018FC  3613               	rlcf	___fldiv@rem+2,f,c
  8275  0018FE  3614               	rlcf	___fldiv@rem+3,f,c
  8276  001900  90D8               	bcf	status,0,c
  8277  001902  3605               	rlcf	___fldiv@b,f,c
  8278  001904  3606               	rlcf	___fldiv@b+1,f,c
  8279  001906  3607               	rlcf	___fldiv@b+2,f,c
  8280  001908  3608               	rlcf	___fldiv@b+3,f,c
  8281  00190A  BE1B               	btfsc	___fldiv@grs+3,7,c
  8282  00190C  8005               	bsf	___fldiv@b,0,c
  8283  00190E  90D8               	bcf	status,0,c
  8284  001910  3618               	rlcf	___fldiv@grs,f,c
  8285  001912  3619               	rlcf	___fldiv@grs+1,f,c
  8286  001914  361A               	rlcf	___fldiv@grs+2,f,c
  8287  001916  361B               	rlcf	___fldiv@grs+3,f,c
  8288  001918                     l6481:
  8289  001918  5009               	movf	___fldiv@a,w,c
  8290  00191A  5C11               	subwf	___fldiv@rem,w,c
  8291  00191C  500A               	movf	___fldiv@a+1,w,c
  8292  00191E  5812               	subwfb	___fldiv@rem+1,w,c
  8293  001920  500B               	movf	___fldiv@a+2,w,c
  8294  001922  5813               	subwfb	___fldiv@rem+2,w,c
  8295  001924  500C               	movf	___fldiv@a+3,w,c
  8296  001926  5814               	subwfb	___fldiv@rem+3,w,c
  8297  001928  A0D8               	btfss	status,0,c
  8298  00192A  D009               	goto	l6487
  8299  00192C  8C1B               	bsf	___fldiv@grs+3,6,c
  8300  00192E  5009               	movf	___fldiv@a,w,c
  8301  001930  5E11               	subwf	___fldiv@rem,f,c
  8302  001932  500A               	movf	___fldiv@a+1,w,c
  8303  001934  5A12               	subwfb	___fldiv@rem+1,f,c
  8304  001936  500B               	movf	___fldiv@a+2,w,c
  8305  001938  5A13               	subwfb	___fldiv@rem+2,f,c
  8306  00193A  500C               	movf	___fldiv@a+3,w,c
  8307  00193C  5A14               	subwfb	___fldiv@rem+3,f,c
  8308  00193E                     l6487:
  8309  00193E  2A1D               	incf	___fldiv@aexp,f,c
  8310  001940                     l1415:
  8311  001940  0E19               	movlw	25
  8312  001942  641D               	cpfsgt	___fldiv@aexp,c
  8313  001944  D7D5               	goto	l6473
  8314  001946  5011               	movf	___fldiv@rem,w,c
  8315  001948  1012               	iorwf	___fldiv@rem+1,w,c
  8316  00194A  1013               	iorwf	___fldiv@rem+2,w,c
  8317  00194C  1014               	iorwf	___fldiv@rem+3,w,c
  8318  00194E  B4D8               	btfsc	status,2,c
  8319  001950  D011               	goto	l6499
  8320  001952  8018               	bsf	___fldiv@grs,0,c
  8321  001954  D00F               	goto	l6499
  8322  001956                     l6493:
  8323  001956  90D8               	bcf	status,0,c
  8324  001958  3605               	rlcf	___fldiv@b,f,c
  8325  00195A  3606               	rlcf	___fldiv@b+1,f,c
  8326  00195C  3607               	rlcf	___fldiv@b+2,f,c
  8327  00195E  3608               	rlcf	___fldiv@b+3,f,c
  8328  001960  BE1B               	btfsc	___fldiv@grs+3,7,c
  8329  001962  8005               	bsf	___fldiv@b,0,c
  8330  001964  90D8               	bcf	status,0,c
  8331  001966  3618               	rlcf	___fldiv@grs,f,c
  8332  001968  3619               	rlcf	___fldiv@grs+1,f,c
  8333  00196A  361A               	rlcf	___fldiv@grs+2,f,c
  8334  00196C  361B               	rlcf	___fldiv@grs+3,f,c
  8335  00196E  0616               	decf	___fldiv@new_exp,f,c
  8336  001970  A0D8               	btfss	status,0,c
  8337  001972  0617               	decf	___fldiv@new_exp+1,f,c
  8338  001974                     l6499:
  8339  001974  AE07               	btfss	___fldiv@b+2,7,c
  8340  001976  D7EF               	goto	l6493
  8341  001978  0E00               	movlw	0
  8342  00197A  6E1D               	movwf	___fldiv@aexp,c
  8343  00197C  AE1B               	btfss	___fldiv@grs+3,7,c
  8344  00197E  D017               	goto	l1426
  8345  001980  0EFF               	movlw	255
  8346  001982  1418               	andwf	___fldiv@grs,w,c
  8347  001984  6E0D               	movwf	??___fldiv& (0+255),c
  8348  001986  0EFF               	movlw	255
  8349  001988  1419               	andwf	___fldiv@grs+1,w,c
  8350  00198A  6E0E               	movwf	(??___fldiv+1)& (0+255),c
  8351  00198C  0EFF               	movlw	255
  8352  00198E  141A               	andwf	___fldiv@grs+2,w,c
  8353  001990  6E0F               	movwf	(??___fldiv+2)& (0+255),c
  8354  001992  0E7F               	movlw	127
  8355  001994  141B               	andwf	___fldiv@grs+3,w,c
  8356  001996  6E10               	movwf	(??___fldiv+3)& (0+255),c
  8357  001998  500D               	movf	??___fldiv,w,c
  8358  00199A  100E               	iorwf	??___fldiv+1,w,c
  8359  00199C  100F               	iorwf	??___fldiv+2,w,c
  8360  00199E  1010               	iorwf	??___fldiv+3,w,c
  8361  0019A0  B4D8               	btfsc	status,2,c
  8362  0019A2  D003               	goto	l1427
  8363  0019A4                     u8370:
  8364  0019A4  0E01               	movlw	1
  8365  0019A6  6E1D               	movwf	___fldiv@aexp,c
  8366  0019A8  D002               	goto	l1426
  8367  0019AA                     l1427:
  8368  0019AA  B005               	btfsc	___fldiv@b,0,c
  8369  0019AC  D7FB               	goto	u8370
  8370  0019AE                     l1426:
  8371  0019AE  501D               	movf	___fldiv@aexp,w,c
  8372  0019B0  B4D8               	btfsc	status,2,c
  8373  0019B2  D01F               	goto	l6519
  8374  0019B4  0E01               	movlw	1
  8375  0019B6  2605               	addwf	___fldiv@b,f,c
  8376  0019B8  0E00               	movlw	0
  8377  0019BA  2206               	addwfc	___fldiv@b+1,f,c
  8378  0019BC  2207               	addwfc	___fldiv@b+2,f,c
  8379  0019BE  2208               	addwfc	___fldiv@b+3,f,c
  8380  0019C0  A008               	btfss	___fldiv@b+3,0,c
  8381  0019C2  D017               	goto	l6519
  8382  0019C4  C005  F00D         	movff	___fldiv@b,??___fldiv
  8383  0019C8  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  8384  0019CC  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  8385  0019D0  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  8386  0019D4  3410               	rlcf	??___fldiv+3,w,c
  8387  0019D6  3210               	rrcf	??___fldiv+3,f,c
  8388  0019D8  320F               	rrcf	??___fldiv+2,f,c
  8389  0019DA  320E               	rrcf	??___fldiv+1,f,c
  8390  0019DC  320D               	rrcf	??___fldiv,f,c
  8391  0019DE  C00D  F005         	movff	??___fldiv,___fldiv@b
  8392  0019E2  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  8393  0019E6  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  8394  0019EA  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  8395  0019EE  4A16               	infsnz	___fldiv@new_exp,f,c
  8396  0019F0  2A17               	incf	___fldiv@new_exp+1,f,c
  8397  0019F2                     l6519:
  8398  0019F2  BE17               	btfsc	___fldiv@new_exp+1,7,c
  8399  0019F4  D010               	goto	l6523
  8400  0019F6  5017               	movf	___fldiv@new_exp+1,w,c
  8401  0019F8  E103               	bnz	u8410
  8402  0019FA  2816               	incf	___fldiv@new_exp,w,c
  8403  0019FC  A0D8               	btfss	status,0,c
  8404  0019FE  D00B               	goto	l6523
  8405  001A00                     u8410:
  8406  001A00  0E00               	movlw	0
  8407  001A02  6E17               	movwf	___fldiv@new_exp+1,c
  8408  001A04  6816               	setf	___fldiv@new_exp,c
  8409  001A06  0E00               	movlw	0
  8410  001A08  6E05               	movwf	___fldiv@b,c
  8411  001A0A  0E00               	movlw	0
  8412  001A0C  6E06               	movwf	___fldiv@b+1,c
  8413  001A0E  0E00               	movlw	0
  8414  001A10  6E07               	movwf	___fldiv@b+2,c
  8415  001A12  0E00               	movlw	0
  8416  001A14  6E08               	movwf	___fldiv@b+3,c
  8417  001A16                     l6523:
  8418  001A16  BE17               	btfsc	___fldiv@new_exp+1,7,c
  8419  001A18  D005               	goto	u8420
  8420  001A1A  5017               	movf	___fldiv@new_exp+1,w,c
  8421  001A1C  E111               	bnz	l6527
  8422  001A1E  0416               	decf	___fldiv@new_exp,w,c
  8423  001A20  B0D8               	btfsc	status,0,c
  8424  001A22  D00E               	goto	l6527
  8425  001A24                     u8420:
  8426  001A24  0E00               	movlw	0
  8427  001A26  6E17               	movwf	___fldiv@new_exp+1,c
  8428  001A28  0E00               	movlw	0
  8429  001A2A  6E16               	movwf	___fldiv@new_exp,c
  8430  001A2C  0E00               	movlw	0
  8431  001A2E  6E05               	movwf	___fldiv@b,c
  8432  001A30  0E00               	movlw	0
  8433  001A32  6E06               	movwf	___fldiv@b+1,c
  8434  001A34  0E00               	movlw	0
  8435  001A36  6E07               	movwf	___fldiv@b+2,c
  8436  001A38  0E00               	movlw	0
  8437  001A3A  6E08               	movwf	___fldiv@b+3,c
  8438  001A3C  0E00               	movlw	0
  8439  001A3E  6E15               	movwf	___fldiv@sign,c
  8440  001A40                     l6527:
  8441  001A40  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  8442  001A44  A01C               	btfss	___fldiv@bexp,0,c
  8443  001A46  D002               	goto	l6533
  8444  001A48  8E07               	bsf	___fldiv@b+2,7,c
  8445  001A4A  D001               	goto	l6535
  8446  001A4C                     l6533:
  8447  001A4C  9E07               	bcf	___fldiv@b+2,7,c
  8448  001A4E                     l6535:
  8449  001A4E  90D8               	bcf	status,0,c
  8450  001A50  301C               	rrcf	___fldiv@bexp,w,c
  8451  001A52  6E08               	movwf	___fldiv@b+3,c
  8452  001A54  D70E               	goto	l6449
  8453  001A56                     __end_of___fldiv:
  8454                           	opt callstack 0
  8455                           
  8456 ;; *************** function ___awmod *****************
  8457 ;; Defined at:
  8458 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  dividend        2    4[COMRAM] int 
  8461 ;;  divisor         2    6[COMRAM] int 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;  sign            1    9[COMRAM] unsigned char 
  8464 ;;  counter         1    8[COMRAM] unsigned char 
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  2    4[COMRAM] int 
  8467 ;; Registers used:
  8468 ;;		wreg, status,2, status,0
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8477 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;Total ram usage:        6 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; Hardware stack levels required when called:    4
  8481 ;; This function calls:
  8482 ;;		Nothing
  8483 ;; This function is called by:
  8484 ;;		_efgtoa
  8485 ;;		_updateMoist
  8486 ;;		_updateTemperature
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           	psect	text25
  8491  002DC2                     __ptext25:
  8492                           	opt callstack 0
  8493  002DC2                     ___awmod:
  8494                           	opt callstack 21
  8495                           
  8496                           ;incstack = 0
  8497  002DC2  0E00               	movlw	0
  8498  002DC4  6E0A               	movwf	___awmod@sign,c
  8499  002DC6  AE06               	btfss	___awmod@dividend+1,7,c
  8500  002DC8  D006               	goto	l6731
  8501  002DCA  6C05               	negf	___awmod@dividend,c
  8502  002DCC  1E06               	comf	___awmod@dividend+1,f,c
  8503  002DCE  B0D8               	btfsc	status,0,c
  8504  002DD0  2A06               	incf	___awmod@dividend+1,f,c
  8505  002DD2  0E01               	movlw	1
  8506  002DD4  6E0A               	movwf	___awmod@sign,c
  8507  002DD6                     l6731:
  8508  002DD6  AE08               	btfss	___awmod@divisor+1,7,c
  8509  002DD8  D004               	goto	l6735
  8510  002DDA  6C07               	negf	___awmod@divisor,c
  8511  002DDC  1E08               	comf	___awmod@divisor+1,f,c
  8512  002DDE  B0D8               	btfsc	status,0,c
  8513  002DE0  2A08               	incf	___awmod@divisor+1,f,c
  8514  002DE2                     l6735:
  8515  002DE2  5007               	movf	___awmod@divisor,w,c
  8516  002DE4  1008               	iorwf	___awmod@divisor+1,w,c
  8517  002DE6  B4D8               	btfsc	status,2,c
  8518  002DE8  D018               	goto	l6751
  8519  002DEA  0E01               	movlw	1
  8520  002DEC  6E09               	movwf	___awmod@counter,c
  8521  002DEE  D004               	goto	l6741
  8522  002DF0                     l6739:
  8523  002DF0  90D8               	bcf	status,0,c
  8524  002DF2  3607               	rlcf	___awmod@divisor,f,c
  8525  002DF4  3608               	rlcf	___awmod@divisor+1,f,c
  8526  002DF6  2A09               	incf	___awmod@counter,f,c
  8527  002DF8                     l6741:
  8528  002DF8  AE08               	btfss	___awmod@divisor+1,7,c
  8529  002DFA  D7FA               	goto	l6739
  8530  002DFC                     u8720:
  8531  002DFC  5007               	movf	___awmod@divisor,w,c
  8532  002DFE  5C05               	subwf	___awmod@dividend,w,c
  8533  002E00  5008               	movf	___awmod@divisor+1,w,c
  8534  002E02  5806               	subwfb	___awmod@dividend+1,w,c
  8535  002E04  A0D8               	btfss	status,0,c
  8536  002E06  D004               	goto	l6747
  8537  002E08  5007               	movf	___awmod@divisor,w,c
  8538  002E0A  5E05               	subwf	___awmod@dividend,f,c
  8539  002E0C  5008               	movf	___awmod@divisor+1,w,c
  8540  002E0E  5A06               	subwfb	___awmod@dividend+1,f,c
  8541  002E10                     l6747:
  8542  002E10  90D8               	bcf	status,0,c
  8543  002E12  3208               	rrcf	___awmod@divisor+1,f,c
  8544  002E14  3207               	rrcf	___awmod@divisor,f,c
  8545  002E16  2E09               	decfsz	___awmod@counter,f,c
  8546  002E18  D7F1               	goto	u8720
  8547  002E1A                     l6751:
  8548  002E1A  500A               	movf	___awmod@sign,w,c
  8549  002E1C  B4D8               	btfsc	status,2,c
  8550  002E1E  D004               	goto	l6755
  8551  002E20  6C05               	negf	___awmod@dividend,c
  8552  002E22  1E06               	comf	___awmod@dividend+1,f,c
  8553  002E24  B0D8               	btfsc	status,0,c
  8554  002E26  2A06               	incf	___awmod@dividend+1,f,c
  8555  002E28                     l6755:
  8556  002E28  C005  F005         	movff	___awmod@dividend,?___awmod
  8557  002E2C  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  8558  002E30  0012               	return		;funcret
  8559  002E32                     __end_of___awmod:
  8560                           	opt callstack 0
  8561                           
  8562 ;; *************** function ___awdiv *****************
  8563 ;; Defined at:
  8564 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  dividend        2    4[COMRAM] int 
  8567 ;;  divisor         2    6[COMRAM] int 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;  quotient        2   10[COMRAM] int 
  8570 ;;  sign            1    9[COMRAM] unsigned char 
  8571 ;;  counter         1    8[COMRAM] unsigned char 
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  2    4[COMRAM] int 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8584 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8585 ;;Total ram usage:        8 bytes
  8586 ;; Hardware stack levels used:    1
  8587 ;; Hardware stack levels required when called:    4
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_efgtoa
  8592 ;;		_updateMoist
  8593 ;;		_updateTemperature
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text26
  8598  002C52                     __ptext26:
  8599                           	opt callstack 0
  8600  002C52                     ___awdiv:
  8601                           	opt callstack 21
  8602                           
  8603                           ;incstack = 0
  8604  002C52  0E00               	movlw	0
  8605  002C54  6E0A               	movwf	___awdiv@sign,c
  8606  002C56  AE08               	btfss	___awdiv@divisor+1,7,c
  8607  002C58  D006               	goto	l6687
  8608  002C5A  6C07               	negf	___awdiv@divisor,c
  8609  002C5C  1E08               	comf	___awdiv@divisor+1,f,c
  8610  002C5E  B0D8               	btfsc	status,0,c
  8611  002C60  2A08               	incf	___awdiv@divisor+1,f,c
  8612  002C62  0E01               	movlw	1
  8613  002C64  6E0A               	movwf	___awdiv@sign,c
  8614  002C66                     l6687:
  8615  002C66  AE06               	btfss	___awdiv@dividend+1,7,c
  8616  002C68  D006               	goto	l6693
  8617  002C6A  6C05               	negf	___awdiv@dividend,c
  8618  002C6C  1E06               	comf	___awdiv@dividend+1,f,c
  8619  002C6E  B0D8               	btfsc	status,0,c
  8620  002C70  2A06               	incf	___awdiv@dividend+1,f,c
  8621  002C72  0E01               	movlw	1
  8622  002C74  1A0A               	xorwf	___awdiv@sign,f,c
  8623  002C76                     l6693:
  8624  002C76  0E00               	movlw	0
  8625  002C78  6E0C               	movwf	___awdiv@quotient+1,c
  8626  002C7A  0E00               	movlw	0
  8627  002C7C  6E0B               	movwf	___awdiv@quotient,c
  8628  002C7E  5007               	movf	___awdiv@divisor,w,c
  8629  002C80  1008               	iorwf	___awdiv@divisor+1,w,c
  8630  002C82  B4D8               	btfsc	status,2,c
  8631  002C84  D01C               	goto	l6715
  8632  002C86  0E01               	movlw	1
  8633  002C88  6E09               	movwf	___awdiv@counter,c
  8634  002C8A  D004               	goto	l6701
  8635  002C8C                     l6699:
  8636  002C8C  90D8               	bcf	status,0,c
  8637  002C8E  3607               	rlcf	___awdiv@divisor,f,c
  8638  002C90  3608               	rlcf	___awdiv@divisor+1,f,c
  8639  002C92  2A09               	incf	___awdiv@counter,f,c
  8640  002C94                     l6701:
  8641  002C94  AE08               	btfss	___awdiv@divisor+1,7,c
  8642  002C96  D7FA               	goto	l6699
  8643  002C98                     u8660:
  8644  002C98  90D8               	bcf	status,0,c
  8645  002C9A  360B               	rlcf	___awdiv@quotient,f,c
  8646  002C9C  360C               	rlcf	___awdiv@quotient+1,f,c
  8647  002C9E  5007               	movf	___awdiv@divisor,w,c
  8648  002CA0  5C05               	subwf	___awdiv@dividend,w,c
  8649  002CA2  5008               	movf	___awdiv@divisor+1,w,c
  8650  002CA4  5806               	subwfb	___awdiv@dividend+1,w,c
  8651  002CA6  A0D8               	btfss	status,0,c
  8652  002CA8  D005               	goto	l6711
  8653  002CAA  5007               	movf	___awdiv@divisor,w,c
  8654  002CAC  5E05               	subwf	___awdiv@dividend,f,c
  8655  002CAE  5008               	movf	___awdiv@divisor+1,w,c
  8656  002CB0  5A06               	subwfb	___awdiv@dividend+1,f,c
  8657  002CB2  800B               	bsf	___awdiv@quotient,0,c
  8658  002CB4                     l6711:
  8659  002CB4  90D8               	bcf	status,0,c
  8660  002CB6  3208               	rrcf	___awdiv@divisor+1,f,c
  8661  002CB8  3207               	rrcf	___awdiv@divisor,f,c
  8662  002CBA  2E09               	decfsz	___awdiv@counter,f,c
  8663  002CBC  D7ED               	goto	u8660
  8664  002CBE                     l6715:
  8665  002CBE  500A               	movf	___awdiv@sign,w,c
  8666  002CC0  B4D8               	btfsc	status,2,c
  8667  002CC2  D004               	goto	l6719
  8668  002CC4  6C0B               	negf	___awdiv@quotient,c
  8669  002CC6  1E0C               	comf	___awdiv@quotient+1,f,c
  8670  002CC8  B0D8               	btfsc	status,0,c
  8671  002CCA  2A0C               	incf	___awdiv@quotient+1,f,c
  8672  002CCC                     l6719:
  8673  002CCC  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  8674  002CD0  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  8675  002CD4  0012               	return		;funcret
  8676  002CD6                     __end_of___awdiv:
  8677                           	opt callstack 0
  8678                           
  8679 ;; *************** function _dtoa *****************
  8680 ;; Defined at:
  8681 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  8684 ;;		 -> sprintf@f(6), NULL(0), 
  8685 ;;  d               8   35[COMRAM] long long 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;  n               8   59[COMRAM] long long 
  8688 ;;  i               2   67[COMRAM] int 
  8689 ;;  s               2   57[COMRAM] int 
  8690 ;;  w               2   55[COMRAM] int 
  8691 ;;  p               2   53[COMRAM] int 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  2   33[COMRAM] int 
  8694 ;; Registers used:
  8695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8701 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8702 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8705 ;;Total ram usage:       36 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    9
  8708 ;; This function calls:
  8709 ;;		___aodiv
  8710 ;;		___aomod
  8711 ;;		_abs
  8712 ;;		_pad
  8713 ;; This function is called by:
  8714 ;;		_vfpfcnvrt
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           	psect	text27
  8719  001A56                     __ptext27:
  8720                           	opt callstack 0
  8721  001A56                     _dtoa:
  8722                           	opt callstack 17
  8723                           
  8724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 274: static int dtoa(FILE *fp, long long d);C:\Program Files (x86)\
      +                          Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Micro
      +                          chip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x8
      +                          6)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 276:     int i, p, s, w;
  8725                           
  8726                           ;incstack = 0
  8727  001A56  C024  F03C         	movff	dtoa@d,dtoa@n
  8728  001A5A  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  8729  001A5E  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  8730  001A62  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  8731  001A66  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  8732  001A6A  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  8733  001A6E  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  8734  001A72  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  8735                           
  8736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprn
      +                          t.c: 281:     s = n < 0 ? 1 : 0;
  8737  001A76  AE43               	btfss	dtoa@n+7,7,c
  8738  001A78  D002               	goto	u9060
  8739  001A7A  0E01               	movlw	1
  8740  001A7C  D001               	goto	u9070
  8741  001A7E                     u9060:
  8742  001A7E  0E00               	movlw	0
  8743  001A80                     u9070:
  8744  001A80  6E3A               	movwf	dtoa@s,c
  8745  001A82  6A3B               	clrf	dtoa@s+1,c
  8746                           
  8747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282: 
      +                              if (s) {
  8748  001A84  503A               	movf	dtoa@s,w,c
  8749  001A86  103B               	iorwf	dtoa@s+1,w,c
  8750  001A88  B4D8               	btfsc	status,2,c
  8751  001A8A  D010               	goto	l6923
  8752                           
  8753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 28
      +                          3:         n = -n;
  8754  001A8C  1E43               	comf	dtoa@n+7,f,c
  8755  001A8E  1E42               	comf	dtoa@n+6,f,c
  8756  001A90  1E41               	comf	dtoa@n+5,f,c
  8757  001A92  1E40               	comf	dtoa@n+4,f,c
  8758  001A94  1E3F               	comf	dtoa@n+3,f,c
  8759  001A96  1E3E               	comf	dtoa@n+2,f,c
  8760  001A98  1E3D               	comf	dtoa@n+1,f,c
  8761  001A9A  6C3C               	negf	dtoa@n,c
  8762  001A9C  0E00               	movlw	0
  8763  001A9E  223D               	addwfc	dtoa@n+1,f,c
  8764  001AA0  223E               	addwfc	dtoa@n+2,f,c
  8765  001AA2  223F               	addwfc	dtoa@n+3,f,c
  8766  001AA4  2240               	addwfc	dtoa@n+4,f,c
  8767  001AA6  2241               	addwfc	dtoa@n+5,f,c
  8768  001AA8  2242               	addwfc	dtoa@n+6,f,c
  8769  001AAA  2243               	addwfc	dtoa@n+7,f,c
  8770  001AAC                     l6923:
  8771                           
  8772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprn
      +                          t.c: 287:     if (!(prec < 0)) {
  8773  001AAC  0100               	movlb	0	; () banked
  8774  001AAE  AFE4               	btfss	(_prec+1)& (0+255),7,b
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\
      +                          doprnt.c: 288:         flags &= ~(1 << 1);
  8778  001AB0  9257               	bcf	_flags,1,c
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\comm
      +                          on\doprnt.c: 290:     p = (0 < prec) ? prec : 1;
  8782  001AB2  BFE4               	btfsc	(_prec+1)& (0+255),7,b
  8783  001AB4  D005               	goto	u9100
  8784  001AB6  51E4               	movf	(_prec+1)& (0+255),w,b
  8785  001AB8  E108               	bnz	l603
  8786  001ABA  05E3               	decf	_prec& (0+255),w,b
  8787  001ABC  B0D8               	btfsc	status,0,c
  8788  001ABE  D005               	goto	l603
  8789  001AC0                     u9100:
  8790                           
  8791                           ; BSR set to: 0
  8792  001AC0  0E00               	movlw	0
  8793  001AC2  6E37               	movwf	dtoa@p+1,c
  8794  001AC4  0E01               	movlw	1
  8795  001AC6  6E36               	movwf	dtoa@p,c
  8796  001AC8  D004               	goto	l605
  8797  001ACA                     l603:
  8798                           
  8799                           ; BSR set to: 0
  8800  001ACA  C0E3  F036         	movff	_prec,dtoa@p
  8801  001ACE  C0E4  F037         	movff	_prec+1,dtoa@p+1
  8802  001AD2                     l605:
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291
      +                          :     w = width;
  8806  001AD2  C0E1  F038         	movff	_width,dtoa@w
  8807  001AD6  C0E2  F039         	movff	_width+1,dtoa@w+1
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 292:     if (s || (flags & (1 << 2))) {
  8811  001ADA  503A               	movf	dtoa@s,w,c
  8812  001ADC  103B               	iorwf	dtoa@s+1,w,c
  8813  001ADE  A4D8               	btfss	status,2,c
  8814  001AE0  D002               	goto	u9120
  8815                           
  8816                           ; BSR set to: 0
  8817  001AE2  A457               	btfss	_flags,2,c
  8818  001AE4  D003               	goto	l6937
  8819  001AE6                     u9120:
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293: 
      +                                  --w;
  8823  001AE6  0638               	decf	dtoa@w,f,c
  8824  001AE8  A0D8               	btfss	status,0,c
  8825  001AEA  0639               	decf	dtoa@w+1,f,c
  8826  001AEC                     l6937:
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\do
      +                          prnt.c: 297:     i = sizeof(dbuf) - 1;
  8830  001AEC  0E00               	movlw	0
  8831  001AEE  6E45               	movwf	dtoa@i+1,c
  8832  001AF0  0E4F               	movlw	79
  8833  001AF2  6E44               	movwf	dtoa@i,c
  8834                           
  8835                           ; BSR set to: 0
  8836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 298:     dbuf[i] = '\0';
  8837  001AF4  0E00               	movlw	0
  8838  001AF6  0101               	movlb	1	; () banked
  8839  001AF8  6F66               	movwf	(_dbuf+79)& (0+255),b
  8840                           
  8841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {;C:\Program Files (
      +                          x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n
      +                           || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8842  001AFA  D07C               	goto	l6951
  8843  001AFC                     l6941:
  8844                           
  8845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300: 
      +                                  --i;
  8846  001AFC  0644               	decf	dtoa@i,f,c
  8847  001AFE  A0D8               	btfss	status,0,c
  8848  001B00  0645               	decf	dtoa@i+1,f,c
  8849                           
  8850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c9
      +                          9\common\doprnt.c: 301:         dbuf[i] = '0' + abs(n % 10);
  8851  001B02  0E17               	movlw	low _dbuf
  8852  001B04  2444               	addwf	dtoa@i,w,c
  8853  001B06  6ED9               	movwf	fsr2l,c
  8854  001B08  0E01               	movlw	high _dbuf
  8855  001B0A  2045               	addwfc	dtoa@i+1,w,c
  8856  001B0C  6EDA               	movwf	fsr2h,c
  8857  001B0E  C03C  F005         	movff	dtoa@n,___aomod@dividend
  8858  001B12  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  8859  001B16  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  8860  001B1A  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  8861  001B1E  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  8862  001B22  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  8863  001B26  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  8864  001B2A  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  8865  001B2E  0E0A               	movlw	10
  8866  001B30  6E0D               	movwf	___aomod@divisor,c
  8867  001B32  0E00               	movlw	0
  8868  001B34  6E0E               	movwf	___aomod@divisor+1,c
  8869  001B36  0E00               	movlw	0
  8870  001B38  6E0F               	movwf	___aomod@divisor+2,c
  8871  001B3A  0E00               	movlw	0
  8872  001B3C  6E10               	movwf	___aomod@divisor+3,c
  8873  001B3E  0E00               	movlw	0
  8874  001B40  6E11               	movwf	___aomod@divisor+4,c
  8875  001B42  0E00               	movlw	0
  8876  001B44  6E12               	movwf	___aomod@divisor+5,c
  8877  001B46  0E00               	movlw	0
  8878  001B48  6E13               	movwf	___aomod@divisor+6,c
  8879  001B4A  0E00               	movlw	0
  8880  001B4C  6E14               	movwf	___aomod@divisor+7,c
  8881  001B4E  EC5C  F012         	call	___aomod	;wreg free
  8882  001B52  C005  F02C         	movff	?___aomod,??_dtoa
  8883  001B56  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  8884  001B5A  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  8885  001B5E  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  8886  001B62  C009  F030         	movff	?___aomod+4,??_dtoa+4
  8887  001B66  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  8888  001B6A  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  8889  001B6E  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  8890  001B72  C02C  F017         	movff	??_dtoa,abs@a
  8891  001B76  C02E  F018         	movff	??_dtoa+2,abs@a+1
  8892  001B7A  ECCB  F018         	call	_abs	;wreg free
  8893  001B7E  5017               	movf	?_abs,w,c
  8894  001B80  0F30               	addlw	48
  8895  001B82  6EDF               	movwf	indf2,c
  8896                           
  8897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302: 
      +                                  --p;
  8898  001B84  0636               	decf	dtoa@p,f,c
  8899  001B86  A0D8               	btfss	status,0,c
  8900  001B88  0637               	decf	dtoa@p+1,f,c
  8901                           
  8902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303: 
      +                                  --w;
  8903  001B8A  0638               	decf	dtoa@w,f,c
  8904  001B8C  A0D8               	btfss	status,0,c
  8905  001B8E  0639               	decf	dtoa@w+1,f,c
  8906                           
  8907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 304:         n = n / 10;
  8908  001B90  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  8909  001B94  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  8910  001B98  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  8911  001B9C  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  8912  001BA0  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  8913  001BA4  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  8914  001BA8  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  8915  001BAC  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  8916  001BB0  0E0A               	movlw	10
  8917  001BB2  6E0D               	movwf	___aodiv@divisor,c
  8918  001BB4  0E00               	movlw	0
  8919  001BB6  6E0E               	movwf	___aodiv@divisor+1,c
  8920  001BB8  0E00               	movlw	0
  8921  001BBA  6E0F               	movwf	___aodiv@divisor+2,c
  8922  001BBC  0E00               	movlw	0
  8923  001BBE  6E10               	movwf	___aodiv@divisor+3,c
  8924  001BC0  0E00               	movlw	0
  8925  001BC2  6E11               	movwf	___aodiv@divisor+4,c
  8926  001BC4  0E00               	movlw	0
  8927  001BC6  6E12               	movwf	___aodiv@divisor+5,c
  8928  001BC8  0E00               	movlw	0
  8929  001BCA  6E13               	movwf	___aodiv@divisor+6,c
  8930  001BCC  0E00               	movlw	0
  8931  001BCE  6E14               	movwf	___aodiv@divisor+7,c
  8932  001BD0  EC18  F011         	call	___aodiv	;wreg free
  8933  001BD4  C005  F03C         	movff	?___aodiv,dtoa@n
  8934  001BD8  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  8935  001BDC  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  8936  001BE0  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  8937  001BE4  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  8938  001BE8  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  8939  001BEC  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  8940  001BF0  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  8941  001BF4                     l6951:
  8942                           
  8943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {;C:\Program Files (
      +                          x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n
      +                           || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8944  001BF4  BE45               	btfsc	dtoa@i+1,7,c
  8945  001BF6  D01F               	goto	u9170
  8946  001BF8  5045               	movf	dtoa@i+1,w,c
  8947  001BFA  E103               	bnz	u9130
  8948  001BFC  0444               	decf	dtoa@i,w,c
  8949  001BFE  A0D8               	btfss	status,0,c
  8950  001C00  D01A               	goto	u9170
  8951  001C02                     u9130:
  8952  001C02  503C               	movf	dtoa@n,w,c
  8953  001C04  103D               	iorwf	dtoa@n+1,w,c
  8954  001C06  103E               	iorwf	dtoa@n+2,w,c
  8955  001C08  103F               	iorwf	dtoa@n+3,w,c
  8956  001C0A  1040               	iorwf	dtoa@n+4,w,c
  8957  001C0C  1041               	iorwf	dtoa@n+5,w,c
  8958  001C0E  1042               	iorwf	dtoa@n+6,w,c
  8959  001C10  1043               	iorwf	dtoa@n+7,w,c
  8960  001C12  A4D8               	btfss	status,2,c
  8961  001C14  D773               	goto	l6941
  8962  001C16  BE37               	btfsc	dtoa@p+1,7,c
  8963  001C18  D005               	goto	u9150
  8964  001C1A  5037               	movf	dtoa@p+1,w,c
  8965  001C1C  E102               	bnz	u9151
  8966  001C1E  0436               	decf	dtoa@p,w,c
  8967  001C20  B0D8               	btfsc	status,0,c
  8968  001C22                     u9151:
  8969  001C22  D76C               	goto	l6941
  8970  001C24                     u9150:
  8971  001C24  BE39               	btfsc	dtoa@w+1,7,c
  8972  001C26  D007               	goto	u9170
  8973  001C28  5039               	movf	dtoa@w+1,w,c
  8974  001C2A  E103               	bnz	u9160
  8975  001C2C  0438               	decf	dtoa@w,w,c
  8976  001C2E  A0D8               	btfss	status,0,c
  8977  001C30  D002               	goto	u9170
  8978  001C32                     u9160:
  8979  001C32  B257               	btfsc	_flags,1,c
  8980  001C34  D763               	goto	l6941
  8981  001C36                     u9170:
  8982                           
  8983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 308:     if (s || (flags & (1 << 2))) {
  8984  001C36  503A               	movf	dtoa@s,w,c
  8985  001C38  103B               	iorwf	dtoa@s+1,w,c
  8986  001C3A  A4D8               	btfss	status,2,c
  8987  001C3C  D002               	goto	u9190
  8988  001C3E  A457               	btfss	_flags,2,c
  8989  001C40  D017               	goto	l6975
  8990  001C42                     u9190:
  8991                           
  8992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309: 
      +                                  --i;
  8993  001C42  0644               	decf	dtoa@i,f,c
  8994  001C44  A0D8               	btfss	status,0,c
  8995  001C46  0645               	decf	dtoa@i+1,f,c
  8996                           
  8997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 310:         dbuf[i] = s ? '-' : '+';
  8998  001C48  503A               	movf	dtoa@s,w,c
  8999  001C4A  103B               	iorwf	dtoa@s+1,w,c
  9000  001C4C  A4D8               	btfss	status,2,c
  9001  001C4E  D004               	goto	l6971
  9002  001C50  0E00               	movlw	0
  9003  001C52  6E35               	movwf	_dtoa$1369+1,c
  9004  001C54  0E2B               	movlw	43
  9005  001C56  D003               	goto	L15
  9006  001C58                     l6971:
  9007  001C58  0E00               	movlw	0
  9008  001C5A  6E35               	movwf	_dtoa$1369+1,c
  9009  001C5C  0E2D               	movlw	45
  9010  001C5E                     L15:
  9011  001C5E  6E34               	movwf	_dtoa$1369,c
  9012  001C60  0E17               	movlw	low _dbuf
  9013  001C62  2444               	addwf	dtoa@i,w,c
  9014  001C64  6ED9               	movwf	fsr2l,c
  9015  001C66  0E01               	movlw	high _dbuf
  9016  001C68  2045               	addwfc	dtoa@i+1,w,c
  9017  001C6A  6EDA               	movwf	fsr2h,c
  9018  001C6C  C034  FFDF         	movff	_dtoa$1369,indf2
  9019  001C70                     l6975:
  9020                           
  9021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 314:     return pad(fp, &dbuf[i], w);
  9022  001C70  C022  F017         	movff	dtoa@fp,pad@fp
  9023  001C74  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  9024  001C78  0E17               	movlw	low _dbuf
  9025  001C7A  2444               	addwf	dtoa@i,w,c
  9026  001C7C  6E19               	movwf	pad@buf,c
  9027  001C7E  0E01               	movlw	high _dbuf
  9028  001C80  2045               	addwfc	dtoa@i+1,w,c
  9029  001C82  6E1A               	movwf	pad@buf+1,c
  9030  001C84  C038  F01B         	movff	dtoa@w,pad@p
  9031  001C88  C039  F01C         	movff	dtoa@w+1,pad@p+1
  9032  001C8C  EC55  F015         	call	_pad	;wreg free
  9033  001C90  C017  F022         	movff	?_pad,?_dtoa
  9034  001C94  C018  F023         	movff	?_pad+1,?_dtoa+1
  9035  001C98  0012               	return		;funcret
  9036  001C9A                     __end_of_dtoa:
  9037                           	opt callstack 0
  9038                           
  9039 ;; *************** function _abs *****************
  9040 ;; Defined at:
  9041 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;  a               2   22[COMRAM] int 
  9044 ;; Auto vars:     Size  Location     Type
  9045 ;;		None
  9046 ;; Return value:  Size  Location     Type
  9047 ;;                  2   22[COMRAM] int 
  9048 ;; Registers used:
  9049 ;;		wreg, status,2, status,0
  9050 ;; Tracked objects:
  9051 ;;		On entry : 0/0
  9052 ;;		On exit  : 0/0
  9053 ;;		Unchanged: 0/0
  9054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9057 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9059 ;;Total ram usage:        4 bytes
  9060 ;; Hardware stack levels used:    1
  9061 ;; Hardware stack levels required when called:    4
  9062 ;; This function calls:
  9063 ;;		Nothing
  9064 ;; This function is called by:
  9065 ;;		_dtoa
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           	psect	text28
  9070  003196                     __ptext28:
  9071                           	opt callstack 0
  9072  003196                     _abs:
  9073                           	opt callstack 21
  9074                           
  9075                           ;incstack = 0
  9076  003196  BE18               	btfsc	abs@a+1,7,c
  9077  003198  D005               	goto	u7780
  9078  00319A  5018               	movf	abs@a+1,w,c
  9079  00319C  E110               	bnz	l1517
  9080  00319E  0417               	decf	abs@a,w,c
  9081  0031A0  B0D8               	btfsc	status,0,c
  9082  0031A2  D00D               	goto	l1517
  9083  0031A4                     u7780:
  9084  0031A4  C017  F019         	movff	abs@a,??_abs
  9085  0031A8  C018  F01A         	movff	abs@a+1,??_abs+1
  9086  0031AC  1E19               	comf	??_abs,f,c
  9087  0031AE  1E1A               	comf	??_abs+1,f,c
  9088  0031B0  4A19               	infsnz	??_abs,f,c
  9089  0031B2  2A1A               	incf	??_abs+1,f,c
  9090  0031B4  C019  F017         	movff	??_abs,?_abs
  9091  0031B8  C01A  F018         	movff	??_abs+1,?_abs+1
  9092  0031BC  0012               	return	
  9093  0031BE                     l1517:
  9094  0031BE  C017  F017         	movff	abs@a,?_abs
  9095  0031C2  C018  F018         	movff	abs@a+1,?_abs+1
  9096  0031C6  0012               	return		;funcret
  9097  0031C8                     __end_of_abs:
  9098                           	opt callstack 0
  9099                           
  9100 ;; *************** function ___aomod *****************
  9101 ;; Defined at:
  9102 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  dividend        8    4[COMRAM] long long 
  9105 ;;  divisor         8   12[COMRAM] long long 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;  sign            1   21[COMRAM] unsigned char 
  9108 ;;  counter         1   20[COMRAM] unsigned char 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  8    4[COMRAM] long long 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9118 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;Total ram usage:       18 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    4
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_dtoa
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text29
  9133  0024B8                     __ptext29:
  9134                           	opt callstack 0
  9135  0024B8                     ___aomod:
  9136                           	opt callstack 21
  9137                           
  9138                           ;incstack = 0
  9139  0024B8  0E00               	movlw	0
  9140  0024BA  6E16               	movwf	___aomod@sign,c
  9141  0024BC  AE0C               	btfss	___aomod@dividend+7,7,c
  9142  0024BE  D012               	goto	l6377
  9143  0024C0  1E0C               	comf	___aomod@dividend+7,f,c
  9144  0024C2  1E0B               	comf	___aomod@dividend+6,f,c
  9145  0024C4  1E0A               	comf	___aomod@dividend+5,f,c
  9146  0024C6  1E09               	comf	___aomod@dividend+4,f,c
  9147  0024C8  1E08               	comf	___aomod@dividend+3,f,c
  9148  0024CA  1E07               	comf	___aomod@dividend+2,f,c
  9149  0024CC  1E06               	comf	___aomod@dividend+1,f,c
  9150  0024CE  6C05               	negf	___aomod@dividend,c
  9151  0024D0  0E00               	movlw	0
  9152  0024D2  2206               	addwfc	___aomod@dividend+1,f,c
  9153  0024D4  2207               	addwfc	___aomod@dividend+2,f,c
  9154  0024D6  2208               	addwfc	___aomod@dividend+3,f,c
  9155  0024D8  2209               	addwfc	___aomod@dividend+4,f,c
  9156  0024DA  220A               	addwfc	___aomod@dividend+5,f,c
  9157  0024DC  220B               	addwfc	___aomod@dividend+6,f,c
  9158  0024DE  220C               	addwfc	___aomod@dividend+7,f,c
  9159  0024E0  0E01               	movlw	1
  9160  0024E2  6E16               	movwf	___aomod@sign,c
  9161  0024E4                     l6377:
  9162  0024E4  AE14               	btfss	___aomod@divisor+7,7,c
  9163  0024E6  D010               	goto	l6381
  9164  0024E8  1E14               	comf	___aomod@divisor+7,f,c
  9165  0024EA  1E13               	comf	___aomod@divisor+6,f,c
  9166  0024EC  1E12               	comf	___aomod@divisor+5,f,c
  9167  0024EE  1E11               	comf	___aomod@divisor+4,f,c
  9168  0024F0  1E10               	comf	___aomod@divisor+3,f,c
  9169  0024F2  1E0F               	comf	___aomod@divisor+2,f,c
  9170  0024F4  1E0E               	comf	___aomod@divisor+1,f,c
  9171  0024F6  6C0D               	negf	___aomod@divisor,c
  9172  0024F8  0E00               	movlw	0
  9173  0024FA  220E               	addwfc	___aomod@divisor+1,f,c
  9174  0024FC  220F               	addwfc	___aomod@divisor+2,f,c
  9175  0024FE  2210               	addwfc	___aomod@divisor+3,f,c
  9176  002500  2211               	addwfc	___aomod@divisor+4,f,c
  9177  002502  2212               	addwfc	___aomod@divisor+5,f,c
  9178  002504  2213               	addwfc	___aomod@divisor+6,f,c
  9179  002506  2214               	addwfc	___aomod@divisor+7,f,c
  9180  002508                     l6381:
  9181  002508  500D               	movf	___aomod@divisor,w,c
  9182  00250A  100E               	iorwf	___aomod@divisor+1,w,c
  9183  00250C  100F               	iorwf	___aomod@divisor+2,w,c
  9184  00250E  1010               	iorwf	___aomod@divisor+3,w,c
  9185  002510  1011               	iorwf	___aomod@divisor+4,w,c
  9186  002512  1012               	iorwf	___aomod@divisor+5,w,c
  9187  002514  1013               	iorwf	___aomod@divisor+6,w,c
  9188  002516  1014               	iorwf	___aomod@divisor+7,w,c
  9189  002518  B4D8               	btfsc	status,2,c
  9190  00251A  D03C               	goto	l6397
  9191  00251C  0E01               	movlw	1
  9192  00251E  6E15               	movwf	___aomod@counter,c
  9193  002520  D00A               	goto	l6387
  9194  002522                     l6385:
  9195  002522  90D8               	bcf	status,0,c
  9196  002524  360D               	rlcf	___aomod@divisor,f,c
  9197  002526  360E               	rlcf	___aomod@divisor+1,f,c
  9198  002528  360F               	rlcf	___aomod@divisor+2,f,c
  9199  00252A  3610               	rlcf	___aomod@divisor+3,f,c
  9200  00252C  3611               	rlcf	___aomod@divisor+4,f,c
  9201  00252E  3612               	rlcf	___aomod@divisor+5,f,c
  9202  002530  3613               	rlcf	___aomod@divisor+6,f,c
  9203  002532  3614               	rlcf	___aomod@divisor+7,f,c
  9204  002534  2A15               	incf	___aomod@counter,f,c
  9205  002536                     l6387:
  9206  002536  AE14               	btfss	___aomod@divisor+7,7,c
  9207  002538  D7F4               	goto	l6385
  9208  00253A                     u8180:
  9209  00253A  500D               	movf	___aomod@divisor,w,c
  9210  00253C  5C05               	subwf	___aomod@dividend,w,c
  9211  00253E  500E               	movf	___aomod@divisor+1,w,c
  9212  002540  5806               	subwfb	___aomod@dividend+1,w,c
  9213  002542  500F               	movf	___aomod@divisor+2,w,c
  9214  002544  5807               	subwfb	___aomod@dividend+2,w,c
  9215  002546  5010               	movf	___aomod@divisor+3,w,c
  9216  002548  5808               	subwfb	___aomod@dividend+3,w,c
  9217  00254A  5011               	movf	___aomod@divisor+4,w,c
  9218  00254C  5809               	subwfb	___aomod@dividend+4,w,c
  9219  00254E  5012               	movf	___aomod@divisor+5,w,c
  9220  002550  580A               	subwfb	___aomod@dividend+5,w,c
  9221  002552  5013               	movf	___aomod@divisor+6,w,c
  9222  002554  580B               	subwfb	___aomod@dividend+6,w,c
  9223  002556  5014               	movf	___aomod@divisor+7,w,c
  9224  002558  580C               	subwfb	___aomod@dividend+7,w,c
  9225  00255A  A0D8               	btfss	status,0,c
  9226  00255C  D010               	goto	l6393
  9227  00255E  500D               	movf	___aomod@divisor,w,c
  9228  002560  5E05               	subwf	___aomod@dividend,f,c
  9229  002562  500E               	movf	___aomod@divisor+1,w,c
  9230  002564  5A06               	subwfb	___aomod@dividend+1,f,c
  9231  002566  500F               	movf	___aomod@divisor+2,w,c
  9232  002568  5A07               	subwfb	___aomod@dividend+2,f,c
  9233  00256A  5010               	movf	___aomod@divisor+3,w,c
  9234  00256C  5A08               	subwfb	___aomod@dividend+3,f,c
  9235  00256E  5011               	movf	___aomod@divisor+4,w,c
  9236  002570  5A09               	subwfb	___aomod@dividend+4,f,c
  9237  002572  5012               	movf	___aomod@divisor+5,w,c
  9238  002574  5A0A               	subwfb	___aomod@dividend+5,f,c
  9239  002576  5013               	movf	___aomod@divisor+6,w,c
  9240  002578  5A0B               	subwfb	___aomod@dividend+6,f,c
  9241  00257A  5014               	movf	___aomod@divisor+7,w,c
  9242  00257C  5A0C               	subwfb	___aomod@dividend+7,f,c
  9243  00257E                     l6393:
  9244  00257E  90D8               	bcf	status,0,c
  9245  002580  3214               	rrcf	___aomod@divisor+7,f,c
  9246  002582  3213               	rrcf	___aomod@divisor+6,f,c
  9247  002584  3212               	rrcf	___aomod@divisor+5,f,c
  9248  002586  3211               	rrcf	___aomod@divisor+4,f,c
  9249  002588  3210               	rrcf	___aomod@divisor+3,f,c
  9250  00258A  320F               	rrcf	___aomod@divisor+2,f,c
  9251  00258C  320E               	rrcf	___aomod@divisor+1,f,c
  9252  00258E  320D               	rrcf	___aomod@divisor,f,c
  9253  002590  2E15               	decfsz	___aomod@counter,f,c
  9254  002592  D7D3               	goto	u8180
  9255  002594                     l6397:
  9256  002594  5016               	movf	___aomod@sign,w,c
  9257  002596  B4D8               	btfsc	status,2,c
  9258  002598  D010               	goto	l6401
  9259  00259A  1E0C               	comf	___aomod@dividend+7,f,c
  9260  00259C  1E0B               	comf	___aomod@dividend+6,f,c
  9261  00259E  1E0A               	comf	___aomod@dividend+5,f,c
  9262  0025A0  1E09               	comf	___aomod@dividend+4,f,c
  9263  0025A2  1E08               	comf	___aomod@dividend+3,f,c
  9264  0025A4  1E07               	comf	___aomod@dividend+2,f,c
  9265  0025A6  1E06               	comf	___aomod@dividend+1,f,c
  9266  0025A8  6C05               	negf	___aomod@dividend,c
  9267  0025AA  0E00               	movlw	0
  9268  0025AC  2206               	addwfc	___aomod@dividend+1,f,c
  9269  0025AE  2207               	addwfc	___aomod@dividend+2,f,c
  9270  0025B0  2208               	addwfc	___aomod@dividend+3,f,c
  9271  0025B2  2209               	addwfc	___aomod@dividend+4,f,c
  9272  0025B4  220A               	addwfc	___aomod@dividend+5,f,c
  9273  0025B6  220B               	addwfc	___aomod@dividend+6,f,c
  9274  0025B8  220C               	addwfc	___aomod@dividend+7,f,c
  9275  0025BA                     l6401:
  9276  0025BA  C005  F005         	movff	___aomod@dividend,?___aomod
  9277  0025BE  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  9278  0025C2  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  9279  0025C6  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  9280  0025CA  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  9281  0025CE  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  9282  0025D2  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  9283  0025D6  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  9284  0025DA  0012               	return		;funcret
  9285  0025DC                     __end_of___aomod:
  9286                           	opt callstack 0
  9287                           
  9288 ;; *************** function ___aodiv *****************
  9289 ;; Defined at:
  9290 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;  dividend        8    4[COMRAM] long long 
  9293 ;;  divisor         8   12[COMRAM] long long 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  quotient        8   22[COMRAM] long long 
  9296 ;;  sign            1   21[COMRAM] unsigned char 
  9297 ;;  counter         1   20[COMRAM] unsigned char 
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  8    4[COMRAM] long long 
  9300 ;; Registers used:
  9301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9307 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9310 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;Total ram usage:       26 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:    4
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_dtoa
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text30
  9322  002230                     __ptext30:
  9323                           	opt callstack 0
  9324  002230                     ___aodiv:
  9325                           	opt callstack 21
  9326                           
  9327                           ;incstack = 0
  9328  002230  0E00               	movlw	0
  9329  002232  6E16               	movwf	___aodiv@sign,c
  9330  002234  AE14               	btfss	___aodiv@divisor+7,7,c
  9331  002236  D012               	goto	l6333
  9332  002238  1E14               	comf	___aodiv@divisor+7,f,c
  9333  00223A  1E13               	comf	___aodiv@divisor+6,f,c
  9334  00223C  1E12               	comf	___aodiv@divisor+5,f,c
  9335  00223E  1E11               	comf	___aodiv@divisor+4,f,c
  9336  002240  1E10               	comf	___aodiv@divisor+3,f,c
  9337  002242  1E0F               	comf	___aodiv@divisor+2,f,c
  9338  002244  1E0E               	comf	___aodiv@divisor+1,f,c
  9339  002246  6C0D               	negf	___aodiv@divisor,c
  9340  002248  0E00               	movlw	0
  9341  00224A  220E               	addwfc	___aodiv@divisor+1,f,c
  9342  00224C  220F               	addwfc	___aodiv@divisor+2,f,c
  9343  00224E  2210               	addwfc	___aodiv@divisor+3,f,c
  9344  002250  2211               	addwfc	___aodiv@divisor+4,f,c
  9345  002252  2212               	addwfc	___aodiv@divisor+5,f,c
  9346  002254  2213               	addwfc	___aodiv@divisor+6,f,c
  9347  002256  2214               	addwfc	___aodiv@divisor+7,f,c
  9348  002258  0E01               	movlw	1
  9349  00225A  6E16               	movwf	___aodiv@sign,c
  9350  00225C                     l6333:
  9351  00225C  AE0C               	btfss	___aodiv@dividend+7,7,c
  9352  00225E  D012               	goto	l6339
  9353  002260  1E0C               	comf	___aodiv@dividend+7,f,c
  9354  002262  1E0B               	comf	___aodiv@dividend+6,f,c
  9355  002264  1E0A               	comf	___aodiv@dividend+5,f,c
  9356  002266  1E09               	comf	___aodiv@dividend+4,f,c
  9357  002268  1E08               	comf	___aodiv@dividend+3,f,c
  9358  00226A  1E07               	comf	___aodiv@dividend+2,f,c
  9359  00226C  1E06               	comf	___aodiv@dividend+1,f,c
  9360  00226E  6C05               	negf	___aodiv@dividend,c
  9361  002270  0E00               	movlw	0
  9362  002272  2206               	addwfc	___aodiv@dividend+1,f,c
  9363  002274  2207               	addwfc	___aodiv@dividend+2,f,c
  9364  002276  2208               	addwfc	___aodiv@dividend+3,f,c
  9365  002278  2209               	addwfc	___aodiv@dividend+4,f,c
  9366  00227A  220A               	addwfc	___aodiv@dividend+5,f,c
  9367  00227C  220B               	addwfc	___aodiv@dividend+6,f,c
  9368  00227E  220C               	addwfc	___aodiv@dividend+7,f,c
  9369  002280  0E01               	movlw	1
  9370  002282  1A16               	xorwf	___aodiv@sign,f,c
  9371  002284                     l6339:
  9372  002284  EE20  F017         	lfsr	2,___aodiv@quotient
  9373  002288  0E07               	movlw	7
  9374  00228A                     u8101:
  9375  00228A  6ADE               	clrf	postinc2,c
  9376  00228C  06E8               	decf	wreg,f,c
  9377  00228E  E2FD               	bc	u8101
  9378  002290  500D               	movf	___aodiv@divisor,w,c
  9379  002292  100E               	iorwf	___aodiv@divisor+1,w,c
  9380  002294  100F               	iorwf	___aodiv@divisor+2,w,c
  9381  002296  1010               	iorwf	___aodiv@divisor+3,w,c
  9382  002298  1011               	iorwf	___aodiv@divisor+4,w,c
  9383  00229A  1012               	iorwf	___aodiv@divisor+5,w,c
  9384  00229C  1013               	iorwf	___aodiv@divisor+6,w,c
  9385  00229E  1014               	iorwf	___aodiv@divisor+7,w,c
  9386  0022A0  B4D8               	btfsc	status,2,c
  9387  0022A2  D046               	goto	l6361
  9388  0022A4  0E01               	movlw	1
  9389  0022A6  6E15               	movwf	___aodiv@counter,c
  9390  0022A8  D00A               	goto	l6347
  9391  0022AA                     l6345:
  9392  0022AA  90D8               	bcf	status,0,c
  9393  0022AC  360D               	rlcf	___aodiv@divisor,f,c
  9394  0022AE  360E               	rlcf	___aodiv@divisor+1,f,c
  9395  0022B0  360F               	rlcf	___aodiv@divisor+2,f,c
  9396  0022B2  3610               	rlcf	___aodiv@divisor+3,f,c
  9397  0022B4  3611               	rlcf	___aodiv@divisor+4,f,c
  9398  0022B6  3612               	rlcf	___aodiv@divisor+5,f,c
  9399  0022B8  3613               	rlcf	___aodiv@divisor+6,f,c
  9400  0022BA  3614               	rlcf	___aodiv@divisor+7,f,c
  9401  0022BC  2A15               	incf	___aodiv@counter,f,c
  9402  0022BE                     l6347:
  9403  0022BE  AE14               	btfss	___aodiv@divisor+7,7,c
  9404  0022C0  D7F4               	goto	l6345
  9405  0022C2                     u8120:
  9406  0022C2  90D8               	bcf	status,0,c
  9407  0022C4  3617               	rlcf	___aodiv@quotient,f,c
  9408  0022C6  3618               	rlcf	___aodiv@quotient+1,f,c
  9409  0022C8  3619               	rlcf	___aodiv@quotient+2,f,c
  9410  0022CA  361A               	rlcf	___aodiv@quotient+3,f,c
  9411  0022CC  361B               	rlcf	___aodiv@quotient+4,f,c
  9412  0022CE  361C               	rlcf	___aodiv@quotient+5,f,c
  9413  0022D0  361D               	rlcf	___aodiv@quotient+6,f,c
  9414  0022D2  361E               	rlcf	___aodiv@quotient+7,f,c
  9415  0022D4  500D               	movf	___aodiv@divisor,w,c
  9416  0022D6  5C05               	subwf	___aodiv@dividend,w,c
  9417  0022D8  500E               	movf	___aodiv@divisor+1,w,c
  9418  0022DA  5806               	subwfb	___aodiv@dividend+1,w,c
  9419  0022DC  500F               	movf	___aodiv@divisor+2,w,c
  9420  0022DE  5807               	subwfb	___aodiv@dividend+2,w,c
  9421  0022E0  5010               	movf	___aodiv@divisor+3,w,c
  9422  0022E2  5808               	subwfb	___aodiv@dividend+3,w,c
  9423  0022E4  5011               	movf	___aodiv@divisor+4,w,c
  9424  0022E6  5809               	subwfb	___aodiv@dividend+4,w,c
  9425  0022E8  5012               	movf	___aodiv@divisor+5,w,c
  9426  0022EA  580A               	subwfb	___aodiv@dividend+5,w,c
  9427  0022EC  5013               	movf	___aodiv@divisor+6,w,c
  9428  0022EE  580B               	subwfb	___aodiv@dividend+6,w,c
  9429  0022F0  5014               	movf	___aodiv@divisor+7,w,c
  9430  0022F2  580C               	subwfb	___aodiv@dividend+7,w,c
  9431  0022F4  A0D8               	btfss	status,0,c
  9432  0022F6  D011               	goto	l6357
  9433  0022F8  500D               	movf	___aodiv@divisor,w,c
  9434  0022FA  5E05               	subwf	___aodiv@dividend,f,c
  9435  0022FC  500E               	movf	___aodiv@divisor+1,w,c
  9436  0022FE  5A06               	subwfb	___aodiv@dividend+1,f,c
  9437  002300  500F               	movf	___aodiv@divisor+2,w,c
  9438  002302  5A07               	subwfb	___aodiv@dividend+2,f,c
  9439  002304  5010               	movf	___aodiv@divisor+3,w,c
  9440  002306  5A08               	subwfb	___aodiv@dividend+3,f,c
  9441  002308  5011               	movf	___aodiv@divisor+4,w,c
  9442  00230A  5A09               	subwfb	___aodiv@dividend+4,f,c
  9443  00230C  5012               	movf	___aodiv@divisor+5,w,c
  9444  00230E  5A0A               	subwfb	___aodiv@dividend+5,f,c
  9445  002310  5013               	movf	___aodiv@divisor+6,w,c
  9446  002312  5A0B               	subwfb	___aodiv@dividend+6,f,c
  9447  002314  5014               	movf	___aodiv@divisor+7,w,c
  9448  002316  5A0C               	subwfb	___aodiv@dividend+7,f,c
  9449  002318  8017               	bsf	___aodiv@quotient,0,c
  9450  00231A                     l6357:
  9451  00231A  90D8               	bcf	status,0,c
  9452  00231C  3214               	rrcf	___aodiv@divisor+7,f,c
  9453  00231E  3213               	rrcf	___aodiv@divisor+6,f,c
  9454  002320  3212               	rrcf	___aodiv@divisor+5,f,c
  9455  002322  3211               	rrcf	___aodiv@divisor+4,f,c
  9456  002324  3210               	rrcf	___aodiv@divisor+3,f,c
  9457  002326  320F               	rrcf	___aodiv@divisor+2,f,c
  9458  002328  320E               	rrcf	___aodiv@divisor+1,f,c
  9459  00232A  320D               	rrcf	___aodiv@divisor,f,c
  9460  00232C  2E15               	decfsz	___aodiv@counter,f,c
  9461  00232E  D7C9               	goto	u8120
  9462  002330                     l6361:
  9463  002330  5016               	movf	___aodiv@sign,w,c
  9464  002332  B4D8               	btfsc	status,2,c
  9465  002334  D010               	goto	l6365
  9466  002336  1E1E               	comf	___aodiv@quotient+7,f,c
  9467  002338  1E1D               	comf	___aodiv@quotient+6,f,c
  9468  00233A  1E1C               	comf	___aodiv@quotient+5,f,c
  9469  00233C  1E1B               	comf	___aodiv@quotient+4,f,c
  9470  00233E  1E1A               	comf	___aodiv@quotient+3,f,c
  9471  002340  1E19               	comf	___aodiv@quotient+2,f,c
  9472  002342  1E18               	comf	___aodiv@quotient+1,f,c
  9473  002344  6C17               	negf	___aodiv@quotient,c
  9474  002346  0E00               	movlw	0
  9475  002348  2218               	addwfc	___aodiv@quotient+1,f,c
  9476  00234A  2219               	addwfc	___aodiv@quotient+2,f,c
  9477  00234C  221A               	addwfc	___aodiv@quotient+3,f,c
  9478  00234E  221B               	addwfc	___aodiv@quotient+4,f,c
  9479  002350  221C               	addwfc	___aodiv@quotient+5,f,c
  9480  002352  221D               	addwfc	___aodiv@quotient+6,f,c
  9481  002354  221E               	addwfc	___aodiv@quotient+7,f,c
  9482  002356                     l6365:
  9483  002356  C017  F005         	movff	___aodiv@quotient,?___aodiv
  9484  00235A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  9485  00235E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  9486  002362  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  9487  002366  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  9488  00236A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  9489  00236E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  9490  002372  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  9491  002376  0012               	return		;funcret
  9492  002378                     __end_of___aodiv:
  9493                           	opt callstack 0
  9494                           
  9495 ;; *************** function _ctoa *****************
  9496 ;; Defined at:
  9497 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  9500 ;;		 -> sprintf@f(6), NULL(0), 
  9501 ;;  c               1   35[COMRAM] unsigned char 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  w               2   36[COMRAM] int 
  9504 ;;  l               2    0        int 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  2   33[COMRAM] int 
  9507 ;; Registers used:
  9508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9514 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9515 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9517 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9518 ;;Total ram usage:        5 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    9
  9521 ;; This function calls:
  9522 ;;		_pad
  9523 ;; This function is called by:
  9524 ;;		_vfpfcnvrt
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           	psect	text31
  9529  002F44                     __ptext31:
  9530                           	opt callstack 0
  9531  002F44                     _ctoa:
  9532                           	opt callstack 17
  9533                           
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 259: static int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8
      +                          \v2.05\pic\sources\c99\common\doprnt.c: 261:     int l, w;
  9535                           
  9536                           ;incstack = 0
  9537  002F44  0100               	movlb	0	; () banked
  9538  002F46  51E1               	movf	_width& (0+255),w,b
  9539  002F48  11E2               	iorwf	(_width+1)& (0+255),w,b
  9540  002F4A  A4D8               	btfss	status,2,c
  9541  002F4C  D005               	goto	l6907
  9542                           
  9543                           ; BSR set to: 0
  9544  002F4E  C0E1  F025         	movff	_width,ctoa@w
  9545  002F52  C0E2  F026         	movff	_width+1,ctoa@w+1
  9546  002F56  D006               	goto	l6909
  9547  002F58                     l6907:
  9548                           
  9549                           ; BSR set to: 0
  9550  002F58  0EFF               	movlw	255
  9551  002F5A  25E1               	addwf	_width& (0+255),w,b
  9552  002F5C  6E25               	movwf	ctoa@w,c
  9553  002F5E  0EFF               	movlw	255
  9554  002F60  21E2               	addwfc	(_width+1)& (0+255),w,b
  9555  002F62  6E26               	movwf	ctoa@w+1,c
  9556  002F64                     l6909:
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 2
      +                          67:     dbuf[0] = c;
  9560  002F64  C024  F117         	movff	ctoa@c,_dbuf
  9561                           
  9562                           ; BSR set to: 0
  9563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 268:     dbuf[1] = '\0';
  9564  002F68  0E00               	movlw	0
  9565  002F6A  0101               	movlb	1	; () banked
  9566  002F6C  6F18               	movwf	(_dbuf+1)& (0+255),b
  9567                           
  9568                           ; BSR set to: 1
  9569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\co
      +                          mmon\doprnt.c: 269:     return pad(fp, &dbuf[0], w);
  9570  002F6E  C022  F017         	movff	ctoa@fp,pad@fp
  9571  002F72  C023  F018         	movff	ctoa@fp+1,pad@fp+1
  9572  002F76  0E17               	movlw	low _dbuf
  9573  002F78  6E19               	movwf	pad@buf,c
  9574  002F7A  0E01               	movlw	high _dbuf
  9575  002F7C  6E1A               	movwf	pad@buf+1,c
  9576  002F7E  C025  F01B         	movff	ctoa@w,pad@p
  9577  002F82  C026  F01C         	movff	ctoa@w+1,pad@p+1
  9578  002F86  EC55  F015         	call	_pad	;wreg free
  9579  002F8A  C017  F022         	movff	?_pad,?_ctoa
  9580  002F8E  C018  F023         	movff	?_pad+1,?_ctoa+1
  9581  002F92  0012               	return		;funcret
  9582  002F94                     __end_of_ctoa:
  9583                           	opt callstack 0
  9584                           
  9585 ;; *************** function _pad *****************
  9586 ;; Defined at:
  9587 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  9590 ;;		 -> sprintf@f(6), NULL(0), 
  9591 ;;  buf             2   24[COMRAM] PTR unsigned char 
  9592 ;;		 -> dbuf(80), 
  9593 ;;  p               2   26[COMRAM] int 
  9594 ;; Auto vars:     Size  Location     Type
  9595 ;;  w               2   31[COMRAM] int 
  9596 ;;  i               2   29[COMRAM] int 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  2   22[COMRAM] int 
  9599 ;; Registers used:
  9600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9606 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9607 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9609 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;Total ram usage:       11 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:    8
  9613 ;; This function calls:
  9614 ;;		_fputc
  9615 ;;		_fputs
  9616 ;;		_strlen
  9617 ;; This function is called by:
  9618 ;;		_ctoa
  9619 ;;		_dtoa
  9620 ;;		_efgtoa
  9621 ;;		_xtoa
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           	psect	text32
  9626  002AAA                     __ptext32:
  9627                           	opt callstack 0
  9628  002AAA                     _pad:
  9629                           	opt callstack 17
  9630                           
  9631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 72: static int pad(FILE *fp, char *buf, int p);C:\Program Files 
      +                          (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\
      +                          Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microc
      +                          hip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\
      +                          Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 74:     int i, w;
  9632                           
  9633                           ;incstack = 0
  9634  002AAA  A057               	btfss	_flags,0,c
  9635  002AAC  D00A               	goto	l6215
  9636                           
  9637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c9
      +                          9\common\doprnt.c: 78:         fputs((const char *)buf, fp);
  9638  002AAE  C019  F010         	movff	pad@buf,fputs@s
  9639  002AB2  C01A  F011         	movff	pad@buf+1,fputs@s+1
  9640  002AB6  C017  F012         	movff	pad@fp,fputs@fp
  9641  002ABA  C018  F013         	movff	pad@fp+1,fputs@fp+1
  9642  002ABE  EC79  F018         	call	_fputs	;wreg free
  9643  002AC2                     l6215:
  9644                           
  9645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\dopr
      +                          nt.c: 82:     w = (p < 0) ? 0 : p;
  9646  002AC2  BE1C               	btfsc	pad@p+1,7,c
  9647  002AC4  D005               	goto	l6219
  9648  002AC6  C01B  F020         	movff	pad@p,pad@w
  9649  002ACA  C01C  F021         	movff	pad@p+1,pad@w+1
  9650  002ACE  D004               	goto	l585
  9651  002AD0                     l6219:
  9652  002AD0  0E00               	movlw	0
  9653  002AD2  6E21               	movwf	pad@w+1,c
  9654  002AD4  0E00               	movlw	0
  9655  002AD6  6E20               	movwf	pad@w,c
  9656  002AD8                     l585:
  9657                           
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     
      +                          i = 0;
  9659  002AD8  0E00               	movlw	0
  9660  002ADA  6E1F               	movwf	pad@i+1,c
  9661  002ADC  0E00               	movlw	0
  9662  002ADE  6E1E               	movwf	pad@i,c
  9663                           
  9664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           84:     while (i < w) {
  9665  002AE0  D00C               	goto	l6225
  9666  002AE2                     l6221:
  9667                           
  9668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprn
      +                          t.c: 85:         fputc(' ', fp);
  9669  002AE2  0E00               	movlw	0
  9670  002AE4  6E08               	movwf	fputc@c+1,c
  9671  002AE6  0E20               	movlw	32
  9672  002AE8  6E07               	movwf	fputc@c,c
  9673  002AEA  C017  F009         	movff	pad@fp,fputc@fp
  9674  002AEE  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  9675  002AF2  EC6D  F014         	call	_fputc	;wreg free
  9676                           
  9677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:   
      +                                ++i;
  9678  002AF6  4A1E               	infsnz	pad@i,f,c
  9679  002AF8  2A1F               	incf	pad@i+1,f,c
  9680  002AFA                     l6225:
  9681                           
  9682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c:
      +                           84:     while (i < w) {
  9683  002AFA  5020               	movf	pad@w,w,c
  9684  002AFC  5C1E               	subwf	pad@i,w,c
  9685  002AFE  501F               	movf	pad@i+1,w,c
  9686  002B00  0A80               	xorlw	128
  9687  002B02  6E1D               	movwf	??_pad& (0+255),c
  9688  002B04  5021               	movf	pad@w+1,w,c
  9689  002B06  0A80               	xorlw	128
  9690  002B08  581D               	subwfb	??_pad& (0+255),w,c
  9691  002B0A  A0D8               	btfss	status,0,c
  9692  002B0C  D7EA               	goto	l6221
  9693                           
  9694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 90:     if (!(flags & (1 << 0))) {
  9695  002B0E  B057               	btfsc	_flags,0,c
  9696  002B10  D00A               	goto	l6229
  9697                           
  9698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c9
      +                          9\common\doprnt.c: 91:         fputs((const char *)buf, fp);
  9699  002B12  C019  F010         	movff	pad@buf,fputs@s
  9700  002B16  C01A  F011         	movff	pad@buf+1,fputs@s+1
  9701  002B1A  C017  F012         	movff	pad@fp,fputs@fp
  9702  002B1E  C018  F013         	movff	pad@fp+1,fputs@fp+1
  9703  002B22  EC79  F018         	call	_fputs	;wreg free
  9704  002B26                     l6229:
  9705                           
  9706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\d
      +                          oprnt.c: 94:     return strlen(buf) + w;
  9707  002B26  C019  F005         	movff	pad@buf,strlen@s
  9708  002B2A  C01A  F006         	movff	pad@buf+1,strlen@s+1
  9709  002B2E  EC38  F018         	call	_strlen	;wreg free
  9710  002B32  5020               	movf	pad@w,w,c
  9711  002B34  2405               	addwf	?_strlen,w,c
  9712  002B36  6E17               	movwf	?_pad,c
  9713  002B38  5021               	movf	pad@w+1,w,c
  9714  002B3A  2006               	addwfc	?_strlen+1,w,c
  9715  002B3C  6E18               	movwf	?_pad+1,c
  9716  002B3E  0012               	return		;funcret
  9717  002B40                     __end_of_pad:
  9718                           	opt callstack 0
  9719                           
  9720 ;; *************** function _strlen *****************
  9721 ;; Defined at:
  9722 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;  s               2    4[COMRAM] PTR const unsigned char 
  9725 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(80), 
  9726 ;;		 -> STR_60(9), STR_58(9), STR_56(8), STR_54(9), 
  9727 ;;		 -> STR_52(8), STR_50(9), STR_48(8), STR_46(3), 
  9728 ;;		 -> STR_44(10), STR_42(10), STR_40(9), STR_38(11), 
  9729 ;;		 -> STR_36(8), STR_34(6), STR_32(6), STR_30(5), 
  9730 ;;		 -> STR_28(7), STR_26(7), STR_24(9), STR_22(8), 
  9731 ;;		 -> day_string(20), rtc_get_time@mo(20), getReading@outT(5), temperature_read(5), 
  9732 ;;		 -> getReading@outH(5), getReading@rh_code(4), 
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;  a               2    6[COMRAM] PTR const unsigned char 
  9735 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(80), 
  9736 ;;		 -> STR_60(9), STR_58(9), STR_56(8), STR_54(9), 
  9737 ;;		 -> STR_52(8), STR_50(9), STR_48(8), STR_46(3), 
  9738 ;;		 -> STR_44(10), STR_42(10), STR_40(9), STR_38(11), 
  9739 ;;		 -> STR_36(8), STR_34(6), STR_32(6), STR_30(5), 
  9740 ;;		 -> STR_28(7), STR_26(7), STR_24(9), STR_22(8), 
  9741 ;;		 -> day_string(20), rtc_get_time@mo(20), getReading@outT(5), temperature_read(5), 
  9742 ;;		 -> getReading@outH(5), getReading@rh_code(4), 
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  2    4[COMRAM] unsigned int 
  9745 ;; Registers used:
  9746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9756 ;;Total ram usage:        4 bytes
  9757 ;; Hardware stack levels used:    1
  9758 ;; Hardware stack levels required when called:    4
  9759 ;; This function calls:
  9760 ;;		Nothing
  9761 ;; This function is called by:
  9762 ;;		_pad
  9763 ;;		_stoa
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	text33
  9768  003070                     __ptext33:
  9769                           	opt callstack 0
  9770  003070                     _strlen:
  9771                           	opt callstack 20
  9772                           
  9773                           ;incstack = 0
  9774  003070  C005  F007         	movff	strlen@s,strlen@a
  9775  003074  C006  F008         	movff	strlen@s+1,strlen@a+1
  9776  003078  D002               	goto	l5995
  9777  00307A                     l5993:
  9778  00307A  4A05               	infsnz	strlen@s,f,c
  9779  00307C  2A06               	incf	strlen@s+1,f,c
  9780  00307E                     l5995:
  9781  00307E  C005  FFF6         	movff	strlen@s,tblptrl
  9782  003082  C006  FFF7         	movff	strlen@s+1,tblptrh
  9783  003086  0E00               	movlw	low (__mediumconst shr (0+16))
  9784  003088  6EF8               	movwf	tblptru,c
  9785  00308A  0E0F               	movlw	(high __ramtop+-1)
  9786  00308C  64F7               	cpfsgt	tblptrh,c
  9787  00308E  D003               	bra	u7297
  9788  003090  0008               	tblrd		*
  9789  003092  50F5               	movf	tablat,w,c
  9790  003094  D005               	bra	u7290
  9791  003096                     u7297:
  9792  003096  CFF6 FFE9          	movff	tblptrl,fsr0l
  9793  00309A  CFF7 FFEA          	movff	tblptrh,fsr0h
  9794  00309E  50EF               	movf	indf0,w,c
  9795  0030A0                     u7290:
  9796  0030A0  0900               	iorlw	0
  9797  0030A2  A4D8               	btfss	status,2,c
  9798  0030A4  D7EA               	goto	l5993
  9799  0030A6  5007               	movf	strlen@a,w,c
  9800  0030A8  5C05               	subwf	strlen@s,w,c
  9801  0030AA  6E05               	movwf	?_strlen,c
  9802  0030AC  5008               	movf	strlen@a+1,w,c
  9803  0030AE  5806               	subwfb	strlen@s+1,w,c
  9804  0030B0  6E06               	movwf	?_strlen+1,c
  9805  0030B2  0012               	return		;funcret
  9806  0030B4                     __end_of_strlen:
  9807                           	opt callstack 0
  9808                           
  9809 ;; *************** function _fputs *****************
  9810 ;; Defined at:
  9811 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  s               2   15[COMRAM] PTR const unsigned char 
  9814 ;;		 -> dbuf(80), 
  9815 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  9816 ;;		 -> sprintf@f(6), NULL(0), 
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;  i               2   20[COMRAM] int 
  9819 ;;  c               1   19[COMRAM] unsigned char 
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  2   15[COMRAM] int 
  9822 ;; Registers used:
  9823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9830 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;Total ram usage:        7 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:    7
  9836 ;; This function calls:
  9837 ;;		_fputc
  9838 ;; This function is called by:
  9839 ;;		_pad
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           	psect	text34
  9844  0030F2                     __ptext34:
  9845                           	opt callstack 0
  9846  0030F2                     _fputs:
  9847                           	opt callstack 17
  9848                           
  9849                           ;incstack = 0
  9850  0030F2  0E00               	movlw	0
  9851  0030F4  6E16               	movwf	fputs@i+1,c
  9852  0030F6  0E00               	movlw	0
  9853  0030F8  6E15               	movwf	fputs@i,c
  9854  0030FA  D00B               	goto	l5989
  9855  0030FC                     l5985:
  9856  0030FC  C014  F007         	movff	fputs@c,fputc@c
  9857  003100  6A08               	clrf	fputc@c+1,c
  9858  003102  C012  F009         	movff	fputs@fp,fputc@fp
  9859  003106  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  9860  00310A  EC6D  F014         	call	_fputc	;wreg free
  9861  00310E  4A15               	infsnz	fputs@i,f,c
  9862  003110  2A16               	incf	fputs@i+1,f,c
  9863  003112                     l5989:
  9864  003112  5015               	movf	fputs@i,w,c
  9865  003114  2410               	addwf	fputs@s,w,c
  9866  003116  6ED9               	movwf	fsr2l,c
  9867  003118  5016               	movf	fputs@i+1,w,c
  9868  00311A  2011               	addwfc	fputs@s+1,w,c
  9869  00311C  6EDA               	movwf	fsr2h,c
  9870  00311E  50DF               	movf	indf2,w,c
  9871  003120  6E14               	movwf	fputs@c,c
  9872  003122  5014               	movf	fputs@c,w,c
  9873  003124  B4D8               	btfsc	status,2,c
  9874  003126  0012               	return	
  9875  003128  D7E9               	goto	l5985
  9876  00312A                     __end_of_fputs:
  9877                           	opt callstack 0
  9878                           
  9879 ;; *************** function _fputc *****************
  9880 ;; Defined at:
  9881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;  c               2    6[COMRAM] int 
  9884 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  9885 ;;		 -> sprintf@f(6), NULL(0), 
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;		None
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  2    6[COMRAM] int 
  9890 ;; Registers used:
  9891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9899 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9900 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9901 ;;Total ram usage:        9 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; Hardware stack levels required when called:    6
  9904 ;; This function calls:
  9905 ;;		_putch
  9906 ;; This function is called by:
  9907 ;;		_pad
  9908 ;;		_stoa
  9909 ;;		_vfpfcnvrt
  9910 ;;		_fputs
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           	psect	text35
  9915  0028DA                     __ptext35:
  9916                           	opt callstack 0
  9917  0028DA                     _fputc:
  9918                           	opt callstack 17
  9919                           
  9920                           ;incstack = 0
  9921  0028DA  5009               	movf	fputc@fp,w,c
  9922  0028DC  100A               	iorwf	fputc@fp+1,w,c
  9923  0028DE  B4D8               	btfsc	status,2,c
  9924  0028E0  D004               	goto	u7250
  9925  0028E2  5009               	movf	fputc@fp,w,c
  9926  0028E4  100A               	iorwf	fputc@fp+1,w,c
  9927  0028E6  A4D8               	btfss	status,2,c
  9928  0028E8  D004               	goto	l5975
  9929  0028EA                     u7250:
  9930  0028EA  5007               	movf	fputc@c,w,c
  9931  0028EC  ECC5  F019         	call	_putch
  9932  0028F0  0012               	return	
  9933  0028F2                     l5975:
  9934  0028F2  EE20 F004          	lfsr	2,4
  9935  0028F6  5009               	movf	fputc@fp,w,c
  9936  0028F8  26D9               	addwf	fsr2l,f,c
  9937  0028FA  500A               	movf	fputc@fp+1,w,c
  9938  0028FC  22DA               	addwfc	fsr2h,f,c
  9939  0028FE  50DE               	movf	postinc2,w,c
  9940  002900  10DE               	iorwf	postinc2,w,c
  9941  002902  B4D8               	btfsc	status,2,c
  9942  002904  D016               	goto	u7270
  9943  002906  EE20 F004          	lfsr	2,4
  9944  00290A  5009               	movf	fputc@fp,w,c
  9945  00290C  26D9               	addwf	fsr2l,f,c
  9946  00290E  500A               	movf	fputc@fp+1,w,c
  9947  002910  22DA               	addwfc	fsr2h,f,c
  9948  002912  EE10 F002          	lfsr	1,2
  9949  002916  5009               	movf	fputc@fp,w,c
  9950  002918  26E1               	addwf	fsr1l,f,c
  9951  00291A  500A               	movf	fputc@fp+1,w,c
  9952  00291C  22E2               	addwfc	fsr1h,f,c
  9953  00291E  50DE               	movf	postinc2,w,c
  9954  002920  5CE6               	subwf	postinc1,w,c
  9955  002922  50E6               	movf	postinc1,w,c
  9956  002924  0A80               	xorlw	128
  9957  002926  6E0F               	movwf	(??_fputc+4)& (0+255),c
  9958  002928  50DE               	movf	postinc2,w,c
  9959  00292A  0A80               	xorlw	128
  9960  00292C  580F               	subwfb	(??_fputc+4)& (0+255),w,c
  9961  00292E  B0D8               	btfsc	status,0,c
  9962  002930  0012               	return	
  9963  002932                     u7270:
  9964  002932  EE20 F002          	lfsr	2,2
  9965  002936  5009               	movf	fputc@fp,w,c
  9966  002938  26D9               	addwf	fsr2l,f,c
  9967  00293A  500A               	movf	fputc@fp+1,w,c
  9968  00293C  22DA               	addwfc	fsr2h,f,c
  9969  00293E  CFDE F00B          	movff	postinc2,??_fputc
  9970  002942  CFDD F00C          	movff	postdec2,??_fputc+1
  9971  002946  C009  FFD9         	movff	fputc@fp,fsr2l
  9972  00294A  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  9973  00294E  CFDE F00D          	movff	postinc2,??_fputc+2
  9974  002952  CFDD F00E          	movff	postdec2,??_fputc+3
  9975  002956  500B               	movf	??_fputc,w,c
  9976  002958  240D               	addwf	??_fputc+2,w,c
  9977  00295A  6ED9               	movwf	fsr2l,c
  9978  00295C  500C               	movf	??_fputc+1,w,c
  9979  00295E  200E               	addwfc	??_fputc+3,w,c
  9980  002960  6EDA               	movwf	fsr2h,c
  9981  002962  C007  FFDF         	movff	fputc@c,indf2
  9982  002966  EE20 F002          	lfsr	2,2
  9983  00296A  5009               	movf	fputc@fp,w,c
  9984  00296C  26D9               	addwf	fsr2l,f,c
  9985  00296E  500A               	movf	fputc@fp+1,w,c
  9986  002970  22DA               	addwfc	fsr2h,f,c
  9987  002972  2ADE               	incf	postinc2,f,c
  9988  002974  0E00               	movlw	0
  9989  002976  22DD               	addwfc	postdec2,f,c
  9990  002978  0012               	return		;funcret
  9991  00297A                     __end_of_fputc:
  9992                           	opt callstack 0
  9993                           
  9994 ;; *************** function _putch *****************
  9995 ;; Defined at:
  9996 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  txData          1    wreg     unsigned char 
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;  txData          1    5[COMRAM] unsigned char 
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  1    wreg      void 
 10003 ;; Registers used:
 10004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;Total ram usage:        1 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    5
 10017 ;; This function calls:
 10018 ;;		_EUSART1_Write
 10019 ;; This function is called by:
 10020 ;;		_fputc
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text36
 10025  00338A                     __ptext36:
 10026                           	opt callstack 0
 10027  00338A                     _putch:
 10028                           	opt callstack 17
 10029                           
 10030                           ;incstack = 0
 10031                           ;putch@txData stored from wreg
 10032  00338A  6E06               	movwf	putch@txData,c
 10033                           
 10034                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
 10035  00338C  5006               	movf	putch@txData,w,c
 10036  00338E  EC95  F018         	call	_EUSART1_Write
 10037  003392  0012               	return		;funcret
 10038  003394                     __end_of_putch:
 10039                           	opt callstack 0
 10040                           
 10041 ;; *************** function _EUSART1_Write *****************
 10042 ;; Defined at:
 10043 ;;		line 173 in file "mcc_generated_files/eusart1.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  txData          1    wreg     unsigned char 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;  txData          1    4[COMRAM] unsigned char 
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      void 
 10050 ;; Registers used:
 10051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;Total ram usage:        1 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:    4
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_putch
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text37
 10072  00312A                     __ptext37:
 10073                           	opt callstack 0
 10074  00312A                     _EUSART1_Write:
 10075                           	opt callstack 17
 10076                           
 10077                           ;incstack = 0
 10078                           ;EUSART1_Write@txData stored from wreg
 10079  00312A  6E05               	movwf	EUSART1_Write@txData,c
 10080  00312C                     
 10081                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
 10082                           
 10083                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
 10084  00312C  0100               	movlb	0	; () banked
 10085  00312E  51F4               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
 10086  003130  B4D8               	btfsc	status,2,c
 10087  003132  D7FC               	goto	l5949
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
 10091  003134  B89D               	btfsc	3997,4,c	;volatile
 10092  003136  D003               	goto	l155
 10093                           
 10094                           ; BSR set to: 0
 10095                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
 10096  003138  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 10097                           
 10098                           ;mcc_generated_files/eusart1.c: 182:     }
 10099  00313C  D010               	goto	l5965
 10100  00313E                     l155:
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
 10104  00313E  989D               	bcf	3997,4,c	;volatile
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
 10108  003140  0E80               	movlw	low _eusart1TxBuffer
 10109  003142  25F6               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
 10110  003144  6ED9               	movwf	fsr2l,c
 10111  003146  6ADA               	clrf	fsr2h,c
 10112  003148  0E02               	movlw	high _eusart1TxBuffer
 10113  00314A  22DA               	addwfc	fsr2h,f,c
 10114  00314C  C005  FFDF         	movff	EUSART1_Write@txData,indf2
 10115                           
 10116                           ; BSR set to: 0
 10117  003150  2BF6               	incf	_eusart1TxHead& (0+255),f,b	;volatile
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
 10121  003152  0E3F               	movlw	63
 10122  003154  65F6               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
 10123  003156  D002               	goto	l5963
 10124                           
 10125                           ; BSR set to: 0
 10126                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
 10127  003158  0E00               	movlw	0
 10128  00315A  6FF6               	movwf	_eusart1TxHead& (0+255),b	;volatile
 10129  00315C                     l5963:
 10130                           
 10131                           ; BSR set to: 0
 10132                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
 10133  00315C  07F4               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 10134  00315E                     l5965:
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
 10138  00315E  889D               	bsf	3997,4,c	;volatile
 10139                           
 10140                           ; BSR set to: 0
 10141  003160  0012               	return		;funcret
 10142  003162                     __end_of_EUSART1_Write:
 10143                           	opt callstack 0
 10144                           
 10145 ;; *************** function _atoi *****************
 10146 ;; Defined at:
 10147 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;  s               2   11[COMRAM] PTR const unsigned char 
 10150 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
 10151 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
 10152 ;;		 -> STR_43(3), STR_41(3), STR_39(3), STR_37(3), 
 10153 ;;		 -> STR_35(3), STR_33(3), STR_31(3), STR_29(3), 
 10154 ;;		 -> STR_27(3), STR_25(3), STR_23(3), STR_21(3), 
 10155 ;;		 -> STR_20(38), STR_19(5), rtc_get_time@mo(20), STR_18(5), 
 10156 ;;		 -> STR_17(14), STR_16(5), STR_15(15), STR_14(17), 
 10157 ;;		 -> STR_13(15), STR_12(14), STR_11(13), STR_10(33), 
 10158 ;;		 -> STR_9(18), STR_8(16), STR_7(39), STR_6(17), 
 10159 ;;		 -> STR_5(26), STR_4(31), STR_3(23), STR_2(18), 
 10160 ;;		 -> STR_1(16), 
 10161 ;; Auto vars:     Size  Location     Type
 10162 ;;  n               2   24[COMRAM] int 
 10163 ;;  neg             2   17[COMRAM] int 
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  2   11[COMRAM] int 
 10166 ;; Registers used:
 10167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10174 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;Total ram usage:       15 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:    5
 10180 ;; This function calls:
 10181 ;;		___wmul
 10182 ;;		_isdigit
 10183 ;;		_isspace
 10184 ;; This function is called by:
 10185 ;;		_vfpfcnvrt
 10186 ;;		_rtc_get_time
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text38
 10191  00207E                     __ptext38:
 10192                           	opt callstack 0
 10193  00207E                     _atoi:
 10194                           	opt callstack 21
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;incstack = 0
 10198  00207E  0E00               	movlw	0
 10199  002080  6E1A               	movwf	atoi@n+1,c
 10200  002082  0E00               	movlw	0
 10201  002084  6E19               	movwf	atoi@n,c
 10202  002086  0E00               	movlw	0
 10203  002088  6E13               	movwf	atoi@neg+1,c
 10204  00208A  0E00               	movlw	0
 10205  00208C  6E12               	movwf	atoi@neg,c
 10206  00208E  D002               	goto	l6865
 10207  002090                     l6863:
 10208  002090  4A0C               	infsnz	atoi@s,f,c
 10209  002092  2A0D               	incf	atoi@s+1,f,c
 10210  002094                     l6865:
 10211  002094  0E01               	movlw	1
 10212  002096  6E18               	movwf	_atoi$1922,c
 10213  002098  C00C  FFF6         	movff	atoi@s,tblptrl
 10214  00209C  C00D  FFF7         	movff	atoi@s+1,tblptrh
 10215  0020A0  0E00               	movlw	low (__mediumconst shr (0+16))
 10216  0020A2  6EF8               	movwf	tblptru,c
 10217  0020A4  0E0F               	movlw	(high __ramtop+-1)
 10218  0020A6  64F7               	cpfsgt	tblptrh,c
 10219  0020A8  D003               	bra	u8937
 10220  0020AA  0008               	tblrd		*
 10221  0020AC  50F5               	movf	tablat,w,c
 10222  0020AE  D005               	bra	u8930
 10223  0020B0                     u8937:
 10224  0020B0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10225  0020B4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10226  0020B8  50EF               	movf	indf0,w,c
 10227  0020BA                     u8930:
 10228  0020BA  0A20               	xorlw	32
 10229  0020BC  B4D8               	btfsc	status,2,c
 10230  0020BE  D023               	goto	l6873
 10231  0020C0  0EF7               	movlw	247
 10232  0020C2  6E0E               	movwf	??_atoi& (0+255),c
 10233  0020C4  0EFF               	movlw	255
 10234  0020C6  6E0F               	movwf	(??_atoi+1)& (0+255),c
 10235  0020C8  C00C  FFF6         	movff	atoi@s,tblptrl
 10236  0020CC  C00D  FFF7         	movff	atoi@s+1,tblptrh
 10237  0020D0  0E00               	movlw	low (__mediumconst shr (0+16))
 10238  0020D2  6EF8               	movwf	tblptru,c
 10239  0020D4  0E0F               	movlw	(high __ramtop+-1)
 10240  0020D6  64F7               	cpfsgt	tblptrh,c
 10241  0020D8  D003               	bra	u8957
 10242  0020DA  0008               	tblrd		*
 10243  0020DC  50F5               	movf	tablat,w,c
 10244  0020DE  D005               	bra	u8950
 10245  0020E0                     u8957:
 10246  0020E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10247  0020E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10248  0020E8  50EF               	movf	indf0,w,c
 10249  0020EA                     u8950:
 10250  0020EA  6E10               	movwf	(??_atoi+2)& (0+255),c
 10251  0020EC  6A11               	clrf	(??_atoi+3)& (0+255),c
 10252  0020EE  500E               	movf	??_atoi,w,c
 10253  0020F0  2610               	addwf	??_atoi+2,f,c
 10254  0020F2  500F               	movf	??_atoi+1,w,c
 10255  0020F4  2211               	addwfc	??_atoi+3,f,c
 10256  0020F6  5011               	movf	??_atoi+3,w,c
 10257  0020F8  E104               	bnz	u8960
 10258  0020FA  0E05               	movlw	5
 10259  0020FC  5C10               	subwf	??_atoi+2,w,c
 10260  0020FE  A0D8               	btfss	status,0,c
 10261  002100  D002               	goto	l6873
 10262  002102                     u8960:
 10263  002102  0E00               	movlw	0
 10264  002104  6E18               	movwf	_atoi$1922,c
 10265  002106                     l6873:
 10266  002106  C018  F014         	movff	_atoi$1922,_atoi$1921
 10267  00210A  6A15               	clrf	_atoi$1921+1,c
 10268  00210C  5014               	movf	_atoi$1921,w,c
 10269  00210E  1015               	iorwf	_atoi$1921+1,w,c
 10270  002110  B4D8               	btfsc	status,2,c
 10271  002112  D008               	goto	l6883
 10272  002114  D7BD               	goto	l6863
 10273  002116                     l6879:
 10274  002116  0E00               	movlw	0
 10275  002118  6E13               	movwf	atoi@neg+1,c
 10276  00211A  0E01               	movlw	1
 10277  00211C  6E12               	movwf	atoi@neg,c
 10278  00211E                     l6881:
 10279  00211E  4A0C               	infsnz	atoi@s,f,c
 10280  002120  2A0D               	incf	atoi@s+1,f,c
 10281  002122  D046               	goto	l6889
 10282  002124                     l6883:
 10283  002124  C00C  FFF6         	movff	atoi@s,tblptrl
 10284  002128  C00D  FFF7         	movff	atoi@s+1,tblptrh
 10285  00212C  0E00               	movlw	low (__mediumconst shr (0+16))
 10286  00212E  6EF8               	movwf	tblptru,c
 10287  002130  0E0F               	movlw	(high __ramtop+-1)
 10288  002132  64F7               	cpfsgt	tblptrh,c
 10289  002134  D003               	bra	u8987
 10290  002136  0008               	tblrd		*
 10291  002138  50F5               	movf	tablat,w,c
 10292  00213A  D005               	bra	u8980
 10293  00213C                     u8987:
 10294  00213C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10295  002140  CFF7 FFEA          	movff	tblptrh,fsr0h
 10296  002144  50EF               	movf	indf0,w,c
 10297  002146                     u8980:
 10298  002146  6E0E               	movwf	??_atoi& (0+255),c
 10299  002148  6A0F               	clrf	(??_atoi+1)& (0+255),c
 10300                           
 10301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10302                           ; Switch size 1, requested type "simple"
 10303                           ; Number of cases is 1, Range of values is 0 to 0
 10304                           ; switch strategies available:
 10305                           ; Name         Instructions Cycles
 10306                           ; simple_byte            4     3 (average)
 10307                           ;	Chosen strategy is simple_byte
 10308  00214A  500F               	movf	??_atoi+1,w,c
 10309  00214C  0A00               	xorlw	0	; case 0
 10310  00214E  A4D8               	btfss	status,2,c
 10311  002150  D02F               	goto	l6889
 10312                           
 10313                           ; Switch size 1, requested type "simple"
 10314                           ; Number of cases is 2, Range of values is 43 to 45
 10315                           ; switch strategies available:
 10316                           ; Name         Instructions Cycles
 10317                           ; simple_byte            7     4 (average)
 10318                           ;	Chosen strategy is simple_byte
 10319  002152  500E               	movf	??_atoi,w,c
 10320  002154  0A2B               	xorlw	43	; case 43
 10321  002156  B4D8               	btfsc	status,2,c
 10322  002158  D7E2               	goto	l6881
 10323  00215A  0A06               	xorlw	6	; case 45
 10324  00215C  B4D8               	btfsc	status,2,c
 10325  00215E  D7DB               	goto	l6879
 10326  002160  D027               	goto	l6889
 10327  002162                     l6885:
 10328  002162  C019  F005         	movff	atoi@n,___wmul@multiplier
 10329  002166  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
 10330  00216A  0E00               	movlw	0
 10331  00216C  6E08               	movwf	___wmul@multiplicand+1,c
 10332  00216E  0E0A               	movlw	10
 10333  002170  6E07               	movwf	___wmul@multiplicand,c
 10334  002172  EC83  F019         	call	___wmul	;wreg free
 10335  002176  C00C  FFF6         	movff	atoi@s,tblptrl
 10336  00217A  C00D  FFF7         	movff	atoi@s+1,tblptrh
 10337  00217E  0E00               	movlw	low (__mediumconst shr (0+16))
 10338  002180  6EF8               	movwf	tblptru,c
 10339  002182  0E0F               	movlw	(high __ramtop+-1)
 10340  002184  64F7               	cpfsgt	tblptrh,c
 10341  002186  D003               	bra	u8997
 10342  002188  0008               	tblrd		*
 10343  00218A  50F5               	movf	tablat,w,c
 10344  00218C  D005               	bra	u8990
 10345  00218E                     u8997:
 10346  00218E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10347  002192  CFF7 FFEA          	movff	tblptrh,fsr0h
 10348  002196  50EF               	movf	indf0,w,c
 10349  002198                     u8990:
 10350  002198  6E0E               	movwf	??_atoi& (0+255),c
 10351  00219A  500E               	movf	??_atoi,w,c
 10352  00219C  5E05               	subwf	?___wmul,f,c
 10353  00219E  0E00               	movlw	0
 10354  0021A0  5A06               	subwfb	?___wmul+1,f,c
 10355  0021A2  0E30               	movlw	48
 10356  0021A4  2405               	addwf	?___wmul,w,c
 10357  0021A6  6E19               	movwf	atoi@n,c
 10358  0021A8  0E00               	movlw	0
 10359  0021AA  2006               	addwfc	?___wmul+1,w,c
 10360  0021AC  6E1A               	movwf	atoi@n+1,c
 10361  0021AE  D7B7               	goto	l6881
 10362  0021B0                     l6889:
 10363  0021B0  0ED0               	movlw	208
 10364  0021B2  6E0E               	movwf	??_atoi& (0+255),c
 10365  0021B4  0EFF               	movlw	255
 10366  0021B6  6E0F               	movwf	(??_atoi+1)& (0+255),c
 10367  0021B8  C00C  FFF6         	movff	atoi@s,tblptrl
 10368  0021BC  C00D  FFF7         	movff	atoi@s+1,tblptrh
 10369  0021C0  0E00               	movlw	low (__mediumconst shr (0+16))
 10370  0021C2  6EF8               	movwf	tblptru,c
 10371  0021C4  0E0F               	movlw	(high __ramtop+-1)
 10372  0021C6  64F7               	cpfsgt	tblptrh,c
 10373  0021C8  D003               	bra	u9007
 10374  0021CA  0008               	tblrd		*
 10375  0021CC  50F5               	movf	tablat,w,c
 10376  0021CE  D005               	bra	u9000
 10377  0021D0                     u9007:
 10378  0021D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10379  0021D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10380  0021D8  50EF               	movf	indf0,w,c
 10381  0021DA                     u9000:
 10382  0021DA  6E10               	movwf	(??_atoi+2)& (0+255),c
 10383  0021DC  6A11               	clrf	(??_atoi+3)& (0+255),c
 10384  0021DE  500E               	movf	??_atoi,w,c
 10385  0021E0  2610               	addwf	??_atoi+2,f,c
 10386  0021E2  500F               	movf	??_atoi+1,w,c
 10387  0021E4  2211               	addwfc	??_atoi+3,f,c
 10388  0021E6  5011               	movf	??_atoi+3,w,c
 10389  0021E8  E106               	bnz	u9010
 10390  0021EA  0E0A               	movlw	10
 10391  0021EC  5C10               	subwf	??_atoi+2,w,c
 10392  0021EE  B0D8               	btfsc	status,0,c
 10393  0021F0  D002               	goto	u9010
 10394  0021F2  0E01               	movlw	1
 10395  0021F4  D001               	goto	u9020
 10396  0021F6                     u9010:
 10397  0021F6  0E00               	movlw	0
 10398  0021F8                     u9020:
 10399  0021F8  6E16               	movwf	_atoi$1923,c
 10400  0021FA  6A17               	clrf	_atoi$1923+1,c
 10401  0021FC  5016               	movf	_atoi$1923,w,c
 10402  0021FE  1017               	iorwf	_atoi$1923+1,w,c
 10403  002200  A4D8               	btfss	status,2,c
 10404  002202  D7AF               	goto	l6885
 10405  002204  5012               	movf	atoi@neg,w,c
 10406  002206  1013               	iorwf	atoi@neg+1,w,c
 10407  002208  A4D8               	btfss	status,2,c
 10408  00220A  D00D               	goto	l1548
 10409  00220C  C019  F00E         	movff	atoi@n,??_atoi
 10410  002210  C01A  F00F         	movff	atoi@n+1,??_atoi+1
 10411  002214  1E0E               	comf	??_atoi,f,c
 10412  002216  1E0F               	comf	??_atoi+1,f,c
 10413  002218  4A0E               	infsnz	??_atoi,f,c
 10414  00221A  2A0F               	incf	??_atoi+1,f,c
 10415  00221C  C00E  F00C         	movff	??_atoi,?_atoi
 10416  002220  C00F  F00D         	movff	??_atoi+1,?_atoi+1
 10417  002224  0012               	return	
 10418  002226                     l1548:
 10419  002226  C019  F00C         	movff	atoi@n,?_atoi
 10420  00222A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
 10421  00222E  0012               	return		;funcret
 10422  002230                     __end_of_atoi:
 10423                           	opt callstack 0
 10424                           
 10425 ;; *************** function _isspace *****************
 10426 ;; Defined at:
 10427 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  c               2    4[COMRAM] int 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  2    4[COMRAM] int 
 10434 ;; Registers used:
 10435 ;;		wreg, status,2, status,0
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10444 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10445 ;;Total ram usage:        7 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:    4
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		_atoi
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text39
 10456  0030B4                     __ptext39:
 10457                           	opt callstack 0
 10458  0030B4                     _isspace:
 10459                           	opt callstack 21
 10460                           
 10461                           ;incstack = 0
 10462  0030B4  0E01               	movlw	1
 10463  0030B6  6E0B               	movwf	_isspace$1961,c
 10464  0030B8  0E20               	movlw	32
 10465  0030BA  1805               	xorwf	isspace@c,w,c
 10466  0030BC  1006               	iorwf	isspace@c+1,w,c
 10467  0030BE  B4D8               	btfsc	status,2,c
 10468  0030C0  D014               	goto	l6857
 10469  0030C2  0EF7               	movlw	247
 10470  0030C4  6E07               	movwf	??_isspace& (0+255),c
 10471  0030C6  0EFF               	movlw	255
 10472  0030C8  6E08               	movwf	(??_isspace+1)& (0+255),c
 10473  0030CA  C005  F009         	movff	isspace@c,??_isspace+2
 10474  0030CE  C006  F00A         	movff	isspace@c+1,??_isspace+3
 10475  0030D2  5007               	movf	??_isspace,w,c
 10476  0030D4  2609               	addwf	??_isspace+2,f,c
 10477  0030D6  5008               	movf	??_isspace+1,w,c
 10478  0030D8  220A               	addwfc	??_isspace+3,f,c
 10479  0030DA  500A               	movf	??_isspace+3,w,c
 10480  0030DC  E104               	bnz	u8920
 10481  0030DE  0E05               	movlw	5
 10482  0030E0  5C09               	subwf	??_isspace+2,w,c
 10483  0030E2  A0D8               	btfss	status,0,c
 10484  0030E4  D002               	goto	l6857
 10485  0030E6                     u8920:
 10486  0030E6  0E00               	movlw	0
 10487  0030E8  6E0B               	movwf	_isspace$1961,c
 10488  0030EA                     l6857:
 10489  0030EA  C00B  F005         	movff	_isspace$1961,?_isspace
 10490  0030EE  6A06               	clrf	?_isspace+1,c
 10491  0030F0  0012               	return		;funcret
 10492  0030F2                     __end_of_isspace:
 10493                           	opt callstack 0
 10494                           
 10495 ;; *************** function _isdigit *****************
 10496 ;; Defined at:
 10497 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;  c               2    4[COMRAM] int 
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;		None
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  2    4[COMRAM] int 
 10504 ;; Registers used:
 10505 ;;		wreg, status,2, status,0
 10506 ;; Tracked objects:
 10507 ;;		On entry : 0/0
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10513 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10514 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;Total ram usage:        6 bytes
 10516 ;; Hardware stack levels used:    1
 10517 ;; Hardware stack levels required when called:    4
 10518 ;; This function calls:
 10519 ;;		Nothing
 10520 ;; This function is called by:
 10521 ;;		_vfpfcnvrt
 10522 ;;		_atoi
 10523 ;; This function uses a non-reentrant model
 10524 ;;
 10525                           
 10526                           	psect	text40
 10527  003228                     __ptext40:
 10528                           	opt callstack 0
 10529  003228                     _isdigit:
 10530                           	opt callstack 22
 10531                           
 10532                           ;incstack = 0
 10533  003228  0ED0               	movlw	208
 10534  00322A  6E07               	movwf	??_isdigit& (0+255),c
 10535  00322C  0EFF               	movlw	255
 10536  00322E  6E08               	movwf	(??_isdigit+1)& (0+255),c
 10537  003230  C005  F009         	movff	isdigit@c,??_isdigit+2
 10538  003234  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
 10539  003238  5007               	movf	??_isdigit,w,c
 10540  00323A  2609               	addwf	??_isdigit+2,f,c
 10541  00323C  5008               	movf	??_isdigit+1,w,c
 10542  00323E  220A               	addwfc	??_isdigit+3,f,c
 10543  003240  500A               	movf	??_isdigit+3,w,c
 10544  003242  E106               	bnz	u8060
 10545  003244  0E0A               	movlw	10
 10546  003246  5C09               	subwf	??_isdigit+2,w,c
 10547  003248  B0D8               	btfsc	status,0,c
 10548  00324A  D002               	goto	u8060
 10549  00324C  0E01               	movlw	1
 10550  00324E  D001               	goto	u8070
 10551  003250                     u8060:
 10552  003250  0E00               	movlw	0
 10553  003252                     u8070:
 10554  003252  6E05               	movwf	?_isdigit,c
 10555  003254  6A06               	clrf	?_isdigit+1,c
 10556  003256  0012               	return		;funcret
 10557  003258                     __end_of_isdigit:
 10558                           	opt callstack 0
 10559                           
 10560 ;; *************** function ___wmul *****************
 10561 ;; Defined at:
 10562 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  multiplier      2    4[COMRAM] unsigned int 
 10565 ;;  multiplicand    2    6[COMRAM] unsigned int 
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;  product         2    8[COMRAM] unsigned int 
 10568 ;; Return value:  Size  Location     Type
 10569 ;;                  2    4[COMRAM] unsigned int 
 10570 ;; Registers used:
 10571 ;;		wreg, status,2, status,0, prodl, prodh
 10572 ;; Tracked objects:
 10573 ;;		On entry : 0/0
 10574 ;;		On exit  : 0/0
 10575 ;;		Unchanged: 0/0
 10576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10581 ;;Total ram usage:        6 bytes
 10582 ;; Hardware stack levels used:    1
 10583 ;; Hardware stack levels required when called:    4
 10584 ;; This function calls:
 10585 ;;		Nothing
 10586 ;; This function is called by:
 10587 ;;		_atoi
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           	psect	text41
 10592  003306                     __ptext41:
 10593                           	opt callstack 0
 10594  003306                     ___wmul:
 10595                           	opt callstack 21
 10596                           
 10597                           ;incstack = 0
 10598  003306  5005               	movf	___wmul@multiplier,w,c
 10599  003308  0207               	mulwf	___wmul@multiplicand,c
 10600  00330A  CFF3 F009          	movff	prodl,___wmul@product
 10601  00330E  CFF4 F00A          	movff	prodh,___wmul@product+1
 10602  003312  5005               	movf	___wmul@multiplier,w,c
 10603  003314  0208               	mulwf	___wmul@multiplicand+1,c
 10604  003316  50F3               	movf	prodl,w,c
 10605  003318  260A               	addwf	___wmul@product+1,f,c
 10606  00331A  5006               	movf	___wmul@multiplier+1,w,c
 10607  00331C  0207               	mulwf	___wmul@multiplicand,c
 10608  00331E  50F3               	movf	prodl,w,c
 10609  003320  260A               	addwf	___wmul@product+1,f,c
 10610  003322  C009  F005         	movff	___wmul@product,?___wmul
 10611  003326  C00A  F006         	movff	___wmul@product+1,?___wmul+1
 10612  00332A  0012               	return		;funcret
 10613  00332C                     __end_of___wmul:
 10614                           	opt callstack 0
 10615                           
 10616 ;; *************** function _i2c_init *****************
 10617 ;; Defined at:
 10618 ;;		line 24 in file "./i2c.h"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;		None
 10621 ;; Auto vars:     Size  Location     Type
 10622 ;;		None
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  1    wreg      void 
 10625 ;; Registers used:
 10626 ;;		wreg, status,2
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10636 ;;Total ram usage:        0 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; Hardware stack levels required when called:    4
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_main
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text42
 10647  00334E                     __ptext42:
 10648                           	opt callstack 0
 10649  00334E                     _i2c_init:
 10650                           	opt callstack 26
 10651                           
 10652                           ;./i2c.h: 25:     TRISCbits.RC3=1;;./i2c.h: 25:     TRISCbits.RC3=1;
 10653                           
 10654                           ;incstack = 0
 10655  00334E  8694               	bsf	3988,3,c	;volatile
 10656                           
 10657                           ;./i2c.h: 26:     TRISCbits.RC4=1;;./i2c.h: 26:     TRISCbits.RC4=1;
 10658  003350  8894               	bsf	3988,4,c	;volatile
 10659                           
 10660                           ;./i2c.h: 28:     ANSELCbits.ANSC3 = 0;;./i2c.h: 28:     ANSELCbits.ANSC3 = 0;
 10661  003352  010F               	movlb	15	; () banked
 10662  003354  973A               	bcf	58,3,b	;volatile
 10663                           
 10664                           ;./i2c.h: 29:     ANSELCbits.ANSC4 = 0;;./i2c.h: 29:     ANSELCbits.ANSC4 = 0;
 10665  003356  993A               	bcf	58,4,b	;volatile
 10666                           
 10667                           ; BSR set to: 15
 10668                           ;./i2c.h: 33:     SSP1ADD = 0x9F;;./i2c.h: 33:     SSP1ADD = 0x9F;
 10669  003358  0E9F               	movlw	159
 10670  00335A  6EC8               	movwf	4040,c	;volatile
 10671                           
 10672                           ;./i2c.h: 34:     SSP1CON1 = 0x28;;./i2c.h: 34:     SSP1CON1 = 0x28;
 10673  00335C  0E28               	movlw	40
 10674  00335E  6EC6               	movwf	4038,c	;volatile
 10675                           
 10676                           ;./i2c.h: 35:     SSP1CON2 = 0;;./i2c.h: 35:     SSP1CON2 = 0;
 10677  003360  0E00               	movlw	0
 10678  003362  6EC5               	movwf	4037,c	;volatile
 10679                           
 10680                           ; BSR set to: 15
 10681  003364  0012               	return		;funcret
 10682  003366                     __end_of_i2c_init:
 10683                           	opt callstack 0
 10684                           
 10685 ;; *************** function _SYSTEM_Initialize *****************
 10686 ;; Defined at:
 10687 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;		None
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;		None
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  1    wreg      void 
 10694 ;; Registers used:
 10695 ;;		wreg, status,2, status,0, cstack
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10705 ;;Total ram usage:        0 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; Hardware stack levels required when called:    6
 10708 ;; This function calls:
 10709 ;;		_EUSART1_Initialize
 10710 ;;		_INTERRUPT_Initialize
 10711 ;;		_OSCILLATOR_Initialize
 10712 ;;		_PIN_MANAGER_Initialize
 10713 ;; This function is called by:
 10714 ;;		_main
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           	psect	text43
 10719  003366                     __ptext43:
 10720                           	opt callstack 0
 10721  003366                     _SYSTEM_Initialize:
 10722                           	opt callstack 24
 10723                           
 10724                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 10725                           
 10726                           ; BSR set to: 15
 10727                           ;incstack = 0
 10728  003366  ECEE  F019         	call	_INTERRUPT_Initialize	;wreg free
 10729                           
 10730                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10731  00336A  EC43  F019         	call	_PIN_MANAGER_Initialize	;wreg free
 10732                           
 10733                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10734  00336E  ECBC  F019         	call	_OSCILLATOR_Initialize	;wreg free
 10735                           
 10736                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
 10737  003372  ECA6  F016         	call	_EUSART1_Initialize	;wreg free
 10738  003376  0012               	return		;funcret
 10739  003378                     __end_of_SYSTEM_Initialize:
 10740                           	opt callstack 0
 10741                           
 10742 ;; *************** function _PIN_MANAGER_Initialize *****************
 10743 ;; Defined at:
 10744 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;		None
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;		None
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  1    wreg      void 
 10751 ;; Registers used:
 10752 ;;		wreg, status,2
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/0
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;Total ram usage:        0 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; Hardware stack levels required when called:    4
 10765 ;; This function calls:
 10766 ;;		Nothing
 10767 ;; This function is called by:
 10768 ;;		_SYSTEM_Initialize
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           
 10772                           	psect	text44
 10773  003286                     __ptext44:
 10774                           	opt callstack 0
 10775  003286                     _PIN_MANAGER_Initialize:
 10776                           	opt callstack 25
 10777                           
 10778                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 10779                           
 10780                           ;incstack = 0
 10781  003286  0E00               	movlw	0
 10782  003288  6E89               	movwf	3977,c	;volatile
 10783                           
 10784                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 10785  00328A  0E00               	movlw	0
 10786  00328C  6E8A               	movwf	3978,c	;volatile
 10787                           
 10788                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 10789  00328E  0E00               	movlw	0
 10790  003290  6E8B               	movwf	3979,c	;volatile
 10791                           
 10792                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
 10793  003292  6892               	setf	3986,c	;volatile
 10794                           
 10795                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
 10796  003294  0EDF               	movlw	223
 10797  003296  6E93               	movwf	3987,c	;volatile
 10798                           
 10799                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
 10800  003298  0EBF               	movlw	191
 10801  00329A  6E94               	movwf	3988,c	;volatile
 10802                           
 10803                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
 10804  00329C  0E3C               	movlw	60
 10805  00329E  010F               	movlb	15	; () banked
 10806  0032A0  6F3A               	movwf	58,b	;volatile
 10807                           
 10808                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x1F;
 10809  0032A2  0E1F               	movlw	31
 10810  0032A4  6F39               	movwf	57,b	;volatile
 10811                           
 10812                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
 10813  0032A6  0E2F               	movlw	47
 10814  0032A8  6F38               	movwf	56,b	;volatile
 10815                           
 10816                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 10817  0032AA  0E00               	movlw	0
 10818  0032AC  6E61               	movwf	3937,c	;volatile
 10819                           
 10820                           ; BSR set to: 15
 10821                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
 10822  0032AE  8EF1               	bsf	4081,7,c	;volatile
 10823                           
 10824                           ; BSR set to: 15
 10825  0032B0  0012               	return		;funcret
 10826  0032B2                     __end_of_PIN_MANAGER_Initialize:
 10827                           	opt callstack 0
 10828                           
 10829 ;; *************** function _OSCILLATOR_Initialize *****************
 10830 ;; Defined at:
 10831 ;;		line 59 in file "mcc_generated_files/mcc.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;		None
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;		None
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  1    wreg      void 
 10838 ;; Registers used:
 10839 ;;		wreg, status,2
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;Total ram usage:        0 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; Hardware stack levels required when called:    4
 10852 ;; This function calls:
 10853 ;;		Nothing
 10854 ;; This function is called by:
 10855 ;;		_SYSTEM_Initialize
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text45
 10860  003378                     __ptext45:
 10861                           	opt callstack 0
 10862  003378                     _OSCILLATOR_Initialize:
 10863                           	opt callstack 25
 10864                           
 10865                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
 10866                           
 10867                           ; BSR set to: 15
 10868                           ;incstack = 0
 10869  003378  0E70               	movlw	112
 10870  00337A  6ED3               	movwf	4051,c	;volatile
 10871                           
 10872                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
 10873  00337C  0E04               	movlw	4
 10874  00337E  6ED2               	movwf	4050,c	;volatile
 10875                           
 10876                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
 10877  003380  0E40               	movlw	64
 10878  003382  6E9B               	movwf	3995,c	;volatile
 10879  003384                     l22:
 10880                           
 10881                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
 10882  003384  BED2               	btfsc	4050,7,c	;volatile
 10883  003386  0012               	return	
 10884  003388  D7FD               	goto	l22
 10885  00338A                     __end_of_OSCILLATOR_Initialize:
 10886                           	opt callstack 0
 10887                           
 10888 ;; *************** function _INTERRUPT_Initialize *****************
 10889 ;; Defined at:
 10890 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10891 ;; Parameters:    Size  Location     Type
 10892 ;;		None
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;		None
 10895 ;; Return value:  Size  Location     Type
 10896 ;;                  1    wreg      void 
 10897 ;; Registers used:
 10898 ;;		None
 10899 ;; Tracked objects:
 10900 ;;		On entry : 0/0
 10901 ;;		On exit  : 0/0
 10902 ;;		Unchanged: 0/0
 10903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10908 ;;Total ram usage:        0 bytes
 10909 ;; Hardware stack levels used:    1
 10910 ;; Hardware stack levels required when called:    4
 10911 ;; This function calls:
 10912 ;;		Nothing
 10913 ;; This function is called by:
 10914 ;;		_SYSTEM_Initialize
 10915 ;; This function uses a non-reentrant model
 10916 ;;
 10917                           
 10918                           	psect	text46
 10919  0033DC                     __ptext46:
 10920                           	opt callstack 0
 10921  0033DC                     _INTERRUPT_Initialize:
 10922                           	opt callstack 25
 10923                           
 10924                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 10925                           
 10926                           ;incstack = 0
 10927  0033DC  9ED0               	bcf	4048,7,c	;volatile
 10928  0033DE  0012               	return		;funcret
 10929  0033E0                     __end_of_INTERRUPT_Initialize:
 10930                           	opt callstack 0
 10931                           
 10932 ;; *************** function _EUSART1_Initialize *****************
 10933 ;; Defined at:
 10934 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;		None
 10937 ;; Auto vars:     Size  Location     Type
 10938 ;;		None
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  1    wreg      void 
 10941 ;; Registers used:
 10942 ;;		wreg, status,2, status,0, cstack
 10943 ;; Tracked objects:
 10944 ;;		On entry : 0/0
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10952 ;;Total ram usage:        0 bytes
 10953 ;; Hardware stack levels used:    1
 10954 ;; Hardware stack levels required when called:    5
 10955 ;; This function calls:
 10956 ;;		_EUSART1_SetErrorHandler
 10957 ;;		_EUSART1_SetFramingErrorHandler
 10958 ;;		_EUSART1_SetOverrunErrorHandler
 10959 ;;		_EUSART1_SetRxInterruptHandler
 10960 ;;		_EUSART1_SetTxInterruptHandler
 10961 ;; This function is called by:
 10962 ;;		_SYSTEM_Initialize
 10963 ;;		_main
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           	psect	text47
 10968  002D4C                     __ptext47:
 10969                           	opt callstack 0
 10970  002D4C                     _EUSART1_Initialize:
 10971                           	opt callstack 24
 10972                           
 10973                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
 10974                           
 10975                           ;incstack = 0
 10976  002D4C  9A9D               	bcf	3997,5,c	;volatile
 10977                           
 10978                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 10979  002D4E  0E12               	movlw	low _EUSART1_Receive_ISR
 10980  002D50  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
 10981  002D52  0E2A               	movlw	high _EUSART1_Receive_ISR
 10982  002D54  6E06               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
 10983  002D56  ECCF  F019         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 10984                           
 10985                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
 10986  002D5A  989D               	bcf	3997,4,c	;volatile
 10987                           
 10988                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 10989  002D5C  0EB2               	movlw	low _EUSART1_Transmit_ISR
 10990  002D5E  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
 10991  002D60  0E32               	movlw	high _EUSART1_Transmit_ISR
 10992  002D62  6E06               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
 10993  002D64  ECCA  F019         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 10994                           
 10995                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
 10996  002D68  0E08               	movlw	8
 10997  002D6A  6EB8               	movwf	4024,c	;volatile
 10998                           
 10999                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
 11000  002D6C  0E90               	movlw	144
 11001  002D6E  6EAB               	movwf	4011,c	;volatile
 11002                           
 11003                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
 11004  002D70  0E24               	movlw	36
 11005  002D72  6EAC               	movwf	4012,c	;volatile
 11006                           
 11007                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x15;
 11008  002D74  0E15               	movlw	21
 11009  002D76  6EAF               	movwf	4015,c	;volatile
 11010                           
 11011                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x01;
 11012  002D78  0E01               	movlw	1
 11013  002D7A  6EB0               	movwf	4016,c	;volatile
 11014                           
 11015                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 11016  002D7C  0EE0               	movlw	low _EUSART1_DefaultFramingErrorHandler
 11017  002D7E  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
 11018  002D80  0E33               	movlw	high _EUSART1_DefaultFramingErrorHandler
 11019  002D82  6E06               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
 11020  002D84  ECD9  F019         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 11021                           
 11022                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 11023  002D88  0ED0               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 11024  002D8A  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
 11025  002D8C  0E33               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 11026  002D8E  6E06               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
 11027  002D90  ECD4  F019         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 11028                           
 11029                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 11030  002D94  0ED6               	movlw	low _EUSART1_DefaultErrorHandler
 11031  002D96  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
 11032  002D98  0E33               	movlw	high _EUSART1_DefaultErrorHandler
 11033  002D9A  6E06               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
 11034  002D9C  ECDE  F019         	call	_EUSART1_SetErrorHandler	;wreg free
 11035                           
 11036                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 11037  002DA0  0E00               	movlw	0
 11038  002DA2  0100               	movlb	0	; () banked
 11039  002DA4  6FF2               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 11040                           
 11041                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 11042  002DA6  0E00               	movlw	0
 11043  002DA8  6FF6               	movwf	_eusart1TxHead& (0+255),b	;volatile
 11044                           
 11045                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 11046  002DAA  0E00               	movlw	0
 11047  002DAC  6FF5               	movwf	_eusart1TxTail& (0+255),b	;volatile
 11048                           
 11049                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 11050  002DAE  0E40               	movlw	64
 11051  002DB0  6FF4               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 11052                           
 11053                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 11054  002DB2  0E00               	movlw	0
 11055  002DB4  6E5A               	movwf	_eusart1RxHead,c	;volatile
 11056                           
 11057                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 11058  002DB6  0E00               	movlw	0
 11059  002DB8  6E59               	movwf	_eusart1RxTail,c	;volatile
 11060                           
 11061                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 11062  002DBA  0E00               	movlw	0
 11063  002DBC  6FF3               	movwf	_eusart1RxCount& (0+255),b	;volatile
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
 11067  002DBE  8A9D               	bsf	3997,5,c	;volatile
 11068                           
 11069                           ; BSR set to: 0
 11070  002DC0  0012               	return		;funcret
 11071  002DC2                     __end_of_EUSART1_Initialize:
 11072                           	opt callstack 0
 11073                           
 11074 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 11075 ;; Defined at:
 11076 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 11077 ;; Parameters:    Size  Location     Type
 11078 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 11079 ;;		 -> EUSART1_Transmit_ISR(1), 
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;		None
 11082 ;; Return value:  Size  Location     Type
 11083 ;;                  1    wreg      void 
 11084 ;; Registers used:
 11085 ;;		wreg, status,2, status,0
 11086 ;; Tracked objects:
 11087 ;;		On entry : 0/0
 11088 ;;		On exit  : 0/0
 11089 ;;		Unchanged: 0/0
 11090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11094 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11095 ;;Total ram usage:        2 bytes
 11096 ;; Hardware stack levels used:    1
 11097 ;; Hardware stack levels required when called:    4
 11098 ;; This function calls:
 11099 ;;		Nothing
 11100 ;; This function is called by:
 11101 ;;		_EUSART1_Initialize
 11102 ;; This function uses a non-reentrant model
 11103 ;;
 11104                           
 11105                           	psect	text48
 11106  003394                     __ptext48:
 11107                           	opt callstack 0
 11108  003394                     _EUSART1_SetTxInterruptHandler:
 11109                           	opt callstack 24
 11110                           
 11111                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 11112                           
 11113                           ; BSR set to: 0
 11114                           ;incstack = 0
 11115  003394  C005  F0ED         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 11116  003398  C006  F0EE         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 11117  00339C  0012               	return		;funcret
 11118  00339E                     __end_of_EUSART1_SetTxInterruptHandler:
 11119                           	opt callstack 0
 11120                           
 11121 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 11122 ;; Defined at:
 11123 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 11126 ;;		 -> EUSART1_Receive_ISR(1), 
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;		None
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  1    wreg      void 
 11131 ;; Registers used:
 11132 ;;		wreg, status,2, status,0
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11142 ;;Total ram usage:        2 bytes
 11143 ;; Hardware stack levels used:    1
 11144 ;; Hardware stack levels required when called:    4
 11145 ;; This function calls:
 11146 ;;		Nothing
 11147 ;; This function is called by:
 11148 ;;		_EUSART1_Initialize
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152                           	psect	text49
 11153  00339E                     __ptext49:
 11154                           	opt callstack 0
 11155  00339E                     _EUSART1_SetRxInterruptHandler:
 11156                           	opt callstack 24
 11157                           
 11158                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 11159                           
 11160                           ;incstack = 0
 11161  00339E  C005  F0EB         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 11162  0033A2  C006  F0EC         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 11163  0033A6  0012               	return		;funcret
 11164  0033A8                     __end_of_EUSART1_SetRxInterruptHandler:
 11165                           	opt callstack 0
 11166                           
 11167 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 11168 ;; Defined at:
 11169 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 11172 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;		None
 11175 ;; Return value:  Size  Location     Type
 11176 ;;                  1    wreg      void 
 11177 ;; Registers used:
 11178 ;;		wreg, status,2, status,0
 11179 ;; Tracked objects:
 11180 ;;		On entry : 0/0
 11181 ;;		On exit  : 0/0
 11182 ;;		Unchanged: 0/0
 11183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11188 ;;Total ram usage:        2 bytes
 11189 ;; Hardware stack levels used:    1
 11190 ;; Hardware stack levels required when called:    4
 11191 ;; This function calls:
 11192 ;;		Nothing
 11193 ;; This function is called by:
 11194 ;;		_EUSART1_Initialize
 11195 ;; This function uses a non-reentrant model
 11196 ;;
 11197                           
 11198                           	psect	text50
 11199  0033A8                     __ptext50:
 11200                           	opt callstack 0
 11201  0033A8                     _EUSART1_SetOverrunErrorHandler:
 11202                           	opt callstack 24
 11203                           
 11204                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 11205                           
 11206                           ;incstack = 0
 11207  0033A8  C005  F0E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 11208  0033AC  C006  F0E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 11209  0033B0  0012               	return		;funcret
 11210  0033B2                     __end_of_EUSART1_SetOverrunErrorHandler:
 11211                           	opt callstack 0
 11212                           
 11213 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 11214 ;; Defined at:
 11215 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 11218 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 11219 ;; Auto vars:     Size  Location     Type
 11220 ;;		None
 11221 ;; Return value:  Size  Location     Type
 11222 ;;                  1    wreg      void 
 11223 ;; Registers used:
 11224 ;;		wreg, status,2, status,0
 11225 ;; Tracked objects:
 11226 ;;		On entry : 0/0
 11227 ;;		On exit  : 0/0
 11228 ;;		Unchanged: 0/0
 11229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11233 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11234 ;;Total ram usage:        2 bytes
 11235 ;; Hardware stack levels used:    1
 11236 ;; Hardware stack levels required when called:    4
 11237 ;; This function calls:
 11238 ;;		Nothing
 11239 ;; This function is called by:
 11240 ;;		_EUSART1_Initialize
 11241 ;; This function uses a non-reentrant model
 11242 ;;
 11243                           
 11244                           	psect	text51
 11245  0033B2                     __ptext51:
 11246                           	opt callstack 0
 11247  0033B2                     _EUSART1_SetFramingErrorHandler:
 11248                           	opt callstack 24
 11249                           
 11250                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 11251                           
 11252                           ;incstack = 0
 11253  0033B2  C005  F0E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 11254  0033B6  C006  F0EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 11255  0033BA  0012               	return		;funcret
 11256  0033BC                     __end_of_EUSART1_SetFramingErrorHandler:
 11257                           	opt callstack 0
 11258                           
 11259 ;; *************** function _EUSART1_SetErrorHandler *****************
 11260 ;; Defined at:
 11261 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 11262 ;; Parameters:    Size  Location     Type
 11263 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 11264 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 11265 ;; Auto vars:     Size  Location     Type
 11266 ;;		None
 11267 ;; Return value:  Size  Location     Type
 11268 ;;                  1    wreg      void 
 11269 ;; Registers used:
 11270 ;;		wreg, status,2, status,0
 11271 ;; Tracked objects:
 11272 ;;		On entry : 0/0
 11273 ;;		On exit  : 0/0
 11274 ;;		Unchanged: 0/0
 11275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11280 ;;Total ram usage:        2 bytes
 11281 ;; Hardware stack levels used:    1
 11282 ;; Hardware stack levels required when called:    4
 11283 ;; This function calls:
 11284 ;;		Nothing
 11285 ;; This function is called by:
 11286 ;;		_EUSART1_Initialize
 11287 ;; This function uses a non-reentrant model
 11288 ;;
 11289                           
 11290                           	psect	text52
 11291  0033BC                     __ptext52:
 11292                           	opt callstack 0
 11293  0033BC                     _EUSART1_SetErrorHandler:
 11294                           	opt callstack 24
 11295                           
 11296                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 11297                           
 11298                           ;incstack = 0
 11299  0033BC  C005  F0E5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 11300  0033C0  C006  F0E6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 11301  0033C4  0012               	return		;funcret
 11302  0033C6                     __end_of_EUSART1_SetErrorHandler:
 11303                           	opt callstack 0
 11304                           
 11305 ;; *************** function _INTERRUPT_InterruptManager *****************
 11306 ;; Defined at:
 11307 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 11308 ;; Parameters:    Size  Location     Type
 11309 ;;		None
 11310 ;; Auto vars:     Size  Location     Type
 11311 ;;		None
 11312 ;; Return value:  Size  Location     Type
 11313 ;;                  1    wreg      void 
 11314 ;; Registers used:
 11315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11316 ;; Tracked objects:
 11317 ;;		On entry : 0/0
 11318 ;;		On exit  : 0/0
 11319 ;;		Unchanged: 0/0
 11320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11323 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11324 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11325 ;;Total ram usage:        4 bytes
 11326 ;; Hardware stack levels used:    1
 11327 ;; Hardware stack levels required when called:    3
 11328 ;; This function calls:
 11329 ;;		Absolute function
 11330 ;;		_EUSART1_Receive_ISR
 11331 ;;		_EUSART1_Transmit_ISR
 11332 ;; This function is called by:
 11333 ;;		Interrupt level 2
 11334 ;; This function uses a non-reentrant model
 11335 ;;
 11336                           
 11337                           	psect	intcode
 11338  000008                     __pintcode:
 11339                           	opt callstack 0
 11340  000008                     _INTERRUPT_InterruptManager:
 11341                           	opt callstack 17
 11342                           
 11343                           ;incstack = 0
 11344  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11345  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 11346  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11347  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 11348  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 11349                           
 11350                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 11351  00001A  ACF2               	btfss	4082,6,c	;volatile
 11352  00001C  D01B               	goto	i2u706_49
 11353                           
 11354                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 11355  00001E  B89D               	btfsc	3997,4,c	;volatile
 11356  000020  A89E               	btfss	3998,4,c	;volatile
 11357  000022  D009               	goto	i2l226
 11358                           
 11359                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
 11360  000024  D801               	call	i2u703_48
 11361  000026  D016               	goto	i2u706_49
 11362  000028                     i2u703_48:
 11363  000028  0005               	push	
 11364  00002A  6EFA               	movwf	pclath,c
 11365  00002C  0100               	movlb	0	; () banked
 11366  00002E  51ED               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 11367  000030  6EFD               	movwf	tosl,c
 11368  000032  51EE               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 11369  000034  D00B               	goto	L16
 11370  000036                     i2l226:
 11371  000036  BA9D               	btfsc	3997,5,c	;volatile
 11372  000038  AA9E               	btfss	3998,5,c	;volatile
 11373  00003A  D00C               	goto	i2u706_49
 11374                           
 11375                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
 11376  00003C  D801               	call	i2u706_48
 11377  00003E  D00A               	goto	i2u706_49
 11378  000040                     i2u706_48:
 11379  000040  0005               	push	
 11380  000042  6EFA               	movwf	pclath,c
 11381  000044  0100               	movlb	0	; () banked
 11382  000046  51EB               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 11383  000048  6EFD               	movwf	tosl,c
 11384  00004A  51EC               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 11385  00004C                     L16:
 11386  00004C  6EFE               	movwf	tosh,c
 11387  00004E  6AFF               	clrf	tosu,c
 11388  000050  50FA               	movf	pclath,w,c
 11389  000052  0012               	return		;indir
 11390  000054                     i2u706_49:
 11391                           
 11392                           ;mcc_generated_files/interrupt_manager.c: 75:     }
 11393                           
 11394                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 11395  000054  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 11396  000058  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 11397  00005C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11398  000060  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11399  000064  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11400  000066  0011               	retfie		f
 11401  000068                     __end_of_INTERRUPT_InterruptManager:
 11402                           	opt callstack 0
 11403                           
 11404 ;; *************** function _EUSART1_Transmit_ISR *****************
 11405 ;; Defined at:
 11406 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;		None
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;		None
 11411 ;; Return value:  Size  Location     Type
 11412 ;;                  1    wreg      void 
 11413 ;; Registers used:
 11414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11415 ;; Tracked objects:
 11416 ;;		On entry : 0/0
 11417 ;;		On exit  : 0/0
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11424 ;;Total ram usage:        0 bytes
 11425 ;; Hardware stack levels used:    1
 11426 ;; This function calls:
 11427 ;;		Nothing
 11428 ;; This function is called by:
 11429 ;;		_EUSART1_Initialize
 11430 ;;		_INTERRUPT_InterruptManager
 11431 ;; This function uses a non-reentrant model
 11432 ;;
 11433                           
 11434                           	psect	text54
 11435  0032B2                     __ptext54:
 11436                           	opt callstack 0
 11437  0032B2                     _EUSART1_Transmit_ISR:
 11438                           	opt callstack 19
 11439                           
 11440                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 11441                           
 11442                           ;incstack = 0
 11443  0032B2  0E40               	movlw	64
 11444  0032B4  0100               	movlb	0	; () banked
 11445  0032B6  61F4               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 11446  0032B8  D010               	goto	i2l167
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
 11450  0032BA  0E80               	movlw	low _eusart1TxBuffer
 11451  0032BC  25F5               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
 11452  0032BE  6ED9               	movwf	fsr2l,c
 11453  0032C0  6ADA               	clrf	fsr2h,c
 11454  0032C2  0E02               	movlw	high _eusart1TxBuffer
 11455  0032C4  22DA               	addwfc	fsr2h,f,c
 11456  0032C6  50DF               	movf	indf2,w,c
 11457  0032C8  6EAD               	movwf	4013,c	;volatile
 11458                           
 11459                           ; BSR set to: 0
 11460  0032CA  2BF5               	incf	_eusart1TxTail& (0+255),f,b	;volatile
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 11464  0032CC  0E3F               	movlw	63
 11465  0032CE  65F5               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
 11466  0032D0  D002               	goto	i2l5531
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 11470  0032D2  0E00               	movlw	0
 11471  0032D4  6FF5               	movwf	_eusart1TxTail& (0+255),b	;volatile
 11472  0032D6                     i2l5531:
 11473                           
 11474                           ; BSR set to: 0
 11475                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 11476  0032D6  2BF4               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 11477                           
 11478                           ;mcc_generated_files/eusart1.c: 218:     }
 11479  0032D8  0012               	return	
 11480  0032DA                     i2l167:
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
 11484  0032DA  989D               	bcf	3997,4,c	;volatile
 11485                           
 11486                           ; BSR set to: 0
 11487  0032DC  0012               	return		;funcret
 11488  0032DE                     __end_of_EUSART1_Transmit_ISR:
 11489                           	opt callstack 0
 11490                           
 11491 ;; *************** function _EUSART1_Receive_ISR *****************
 11492 ;; Defined at:
 11493 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;		None
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;		None
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  1    wreg      void 
 11500 ;; Registers used:
 11501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11511 ;;Total ram usage:        0 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; Hardware stack levels required when called:    2
 11514 ;; This function calls:
 11515 ;;		Absolute function
 11516 ;;		_EUSART1_DefaultErrorHandler
 11517 ;;		_EUSART1_DefaultFramingErrorHandler
 11518 ;;		_EUSART1_DefaultOverrunErrorHandler
 11519 ;;		_EUSART1_RxDataHandler
 11520 ;; This function is called by:
 11521 ;;		_EUSART1_Initialize
 11522 ;;		_INTERRUPT_InterruptManager
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           	psect	text55
 11527  002A12                     __ptext55:
 11528                           	opt callstack 0
 11529  002A12                     _EUSART1_Receive_ISR:
 11530                           	opt callstack 17
 11531                           
 11532                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;incstack = 0
 11536  002A12  0E00               	movlw	low _eusart1RxStatusBuffer
 11537  002A14  245A               	addwf	_eusart1RxHead,w,c	;volatile
 11538  002A16  6ED9               	movwf	fsr2l,c
 11539  002A18  6ADA               	clrf	fsr2h,c
 11540  002A1A  0E02               	movlw	high _eusart1RxStatusBuffer
 11541  002A1C  22DA               	addwfc	fsr2h,f,c
 11542  002A1E  0E00               	movlw	0
 11543  002A20  6EDF               	movwf	indf2,c
 11544                           
 11545                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
 11546  002A22  A4AB               	btfss	4011,2,c	;volatile
 11547  002A24  D014               	goto	i2u675_49
 11548                           
 11549                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 11550  002A26  0E00               	movlw	low _eusart1RxStatusBuffer
 11551  002A28  245A               	addwf	_eusart1RxHead,w,c	;volatile
 11552  002A2A  6ED9               	movwf	fsr2l,c
 11553  002A2C  6ADA               	clrf	fsr2h,c
 11554  002A2E  0E02               	movlw	high _eusart1RxStatusBuffer
 11555  002A30  22DA               	addwfc	fsr2h,f,c
 11556  002A32  0102               	movlb	2	; () banked
 11557  002A34  82DF               	bsf	indf2,1,c
 11558                           
 11559                           ; BSR set to: 2
 11560                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 11561  002A36  D801               	call	i2u675_48
 11562  002A38  D00A               	goto	i2u675_49
 11563  002A3A                     i2u675_48:
 11564  002A3A  0005               	push	
 11565  002A3C  6EFA               	movwf	pclath,c
 11566  002A3E  0100               	movlb	0	; () banked
 11567  002A40  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 11568  002A42  6EFD               	movwf	tosl,c
 11569  002A44  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 11570  002A46  6EFE               	movwf	tosh,c
 11571  002A48  6AFF               	clrf	tosu,c
 11572  002A4A  50FA               	movf	pclath,w,c
 11573  002A4C  0012               	return		;indir
 11574  002A4E                     i2u675_49:
 11575                           
 11576                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
 11577  002A4E  A2AB               	btfss	4011,1,c	;volatile
 11578  002A50  D014               	goto	i2u677_49
 11579                           
 11580                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 11581  002A52  0E00               	movlw	low _eusart1RxStatusBuffer
 11582  002A54  245A               	addwf	_eusart1RxHead,w,c	;volatile
 11583  002A56  6ED9               	movwf	fsr2l,c
 11584  002A58  6ADA               	clrf	fsr2h,c
 11585  002A5A  0E02               	movlw	high _eusart1RxStatusBuffer
 11586  002A5C  22DA               	addwfc	fsr2h,f,c
 11587  002A5E  0102               	movlb	2	; () banked
 11588  002A60  84DF               	bsf	indf2,2,c
 11589                           
 11590                           ; BSR set to: 2
 11591                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 11592  002A62  D801               	call	i2u677_48
 11593  002A64  D00A               	goto	i2u677_49
 11594  002A66                     i2u677_48:
 11595  002A66  0005               	push	
 11596  002A68  6EFA               	movwf	pclath,c
 11597  002A6A  0100               	movlb	0	; () banked
 11598  002A6C  51E7               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 11599  002A6E  6EFD               	movwf	tosl,c
 11600  002A70  51E8               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 11601  002A72  6EFE               	movwf	tosh,c
 11602  002A74  6AFF               	clrf	tosu,c
 11603  002A76  50FA               	movf	pclath,w,c
 11604  002A78  0012               	return		;indir
 11605  002A7A                     i2u677_49:
 11606                           
 11607                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 11608  002A7A  0E00               	movlw	low _eusart1RxStatusBuffer
 11609  002A7C  245A               	addwf	_eusart1RxHead,w,c	;volatile
 11610  002A7E  6ED9               	movwf	fsr2l,c
 11611  002A80  6ADA               	clrf	fsr2h,c
 11612  002A82  0E02               	movlw	high _eusart1RxStatusBuffer
 11613  002A84  22DA               	addwfc	fsr2h,f,c
 11614  002A86  50DF               	movf	indf2,w,c
 11615  002A88  B4D8               	btfsc	status,2,c
 11616  002A8A  D00C               	goto	i2l5551
 11617                           
 11618                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 11619  002A8C  D801               	call	i2u679_48
 11620  002A8E  0012               	return	
 11621  002A90                     i2u679_48:
 11622  002A90  0005               	push	
 11623  002A92  6EFA               	movwf	pclath,c
 11624  002A94  0100               	movlb	0	; () banked
 11625  002A96  51E5               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 11626  002A98  6EFD               	movwf	tosl,c
 11627  002A9A  51E6               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 11628  002A9C  6EFE               	movwf	tosh,c
 11629  002A9E  6AFF               	clrf	tosu,c
 11630  002AA0  50FA               	movf	pclath,w,c
 11631  002AA2  0012               	return		;indir
 11632  002AA4                     i2l5551:
 11633                           
 11634                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 11635  002AA4  EC96  F019         	call	_EUSART1_RxDataHandler	;wreg free
 11636  002AA8  0012               	return		;funcret
 11637  002AAA                     __end_of_EUSART1_Receive_ISR:
 11638                           	opt callstack 0
 11639                           
 11640 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 11641 ;; Defined at:
 11642 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 11643 ;; Parameters:    Size  Location     Type
 11644 ;;		None
 11645 ;; Auto vars:     Size  Location     Type
 11646 ;;		None
 11647 ;; Return value:  Size  Location     Type
 11648 ;;                  1    wreg      void 
 11649 ;; Registers used:
 11650 ;;		None
 11651 ;; Tracked objects:
 11652 ;;		On entry : 0/0
 11653 ;;		On exit  : 0/0
 11654 ;;		Unchanged: 0/0
 11655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11660 ;;Total ram usage:        0 bytes
 11661 ;; Hardware stack levels used:    1
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_EUSART1_Initialize
 11666 ;;		_EUSART1_Receive_ISR
 11667 ;; This function uses a non-reentrant model
 11668 ;;
 11669                           
 11670                           	psect	text56
 11671  0033D0                     __ptext56:
 11672                           	opt callstack 0
 11673  0033D0                     _EUSART1_DefaultOverrunErrorHandler:
 11674                           	opt callstack 18
 11675                           
 11676                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
 11677                           
 11678                           ;incstack = 0
 11679  0033D0  98AB               	bcf	4011,4,c	;volatile
 11680                           
 11681                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
 11682  0033D2  88AB               	bsf	4011,4,c	;volatile
 11683  0033D4  0012               	return		;funcret
 11684  0033D6                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 11685                           	opt callstack 0
 11686                           
 11687 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 11688 ;; Defined at:
 11689 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;		None
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;		None
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      void 
 11696 ;; Registers used:
 11697 ;;		None
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;Total ram usage:        0 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; This function calls:
 11710 ;;		Nothing
 11711 ;; This function is called by:
 11712 ;;		_EUSART1_Initialize
 11713 ;;		_EUSART1_Receive_ISR
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           	psect	text57
 11718  0033E0                     __ptext57:
 11719                           	opt callstack 0
 11720  0033E0                     _EUSART1_DefaultFramingErrorHandler:
 11721                           	opt callstack 18
 11722                           
 11723                           ;incstack = 0
 11724  0033E0  0012               	return		;funcret
 11725  0033E2                     __end_of_EUSART1_DefaultFramingErrorHandler:
 11726                           	opt callstack 0
 11727                           
 11728 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 11729 ;; Defined at:
 11730 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 11731 ;; Parameters:    Size  Location     Type
 11732 ;;		None
 11733 ;; Auto vars:     Size  Location     Type
 11734 ;;		None
 11735 ;; Return value:  Size  Location     Type
 11736 ;;                  1    wreg      void 
 11737 ;; Registers used:
 11738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11739 ;; Tracked objects:
 11740 ;;		On entry : 0/0
 11741 ;;		On exit  : 0/0
 11742 ;;		Unchanged: 0/0
 11743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11748 ;;Total ram usage:        0 bytes
 11749 ;; Hardware stack levels used:    1
 11750 ;; Hardware stack levels required when called:    1
 11751 ;; This function calls:
 11752 ;;		_EUSART1_RxDataHandler
 11753 ;; This function is called by:
 11754 ;;		_EUSART1_Initialize
 11755 ;;		_EUSART1_Receive_ISR
 11756 ;; This function uses a non-reentrant model
 11757 ;;
 11758                           
 11759                           	psect	text58
 11760  0033D6                     __ptext58:
 11761                           	opt callstack 0
 11762  0033D6                     _EUSART1_DefaultErrorHandler:
 11763                           	opt callstack 17
 11764                           
 11765                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 11766                           
 11767                           ;incstack = 0
 11768  0033D6  EC96  F019         	call	_EUSART1_RxDataHandler	;wreg free
 11769  0033DA  0012               	return		;funcret
 11770  0033DC                     __end_of_EUSART1_DefaultErrorHandler:
 11771                           	opt callstack 0
 11772                           
 11773 ;; *************** function _EUSART1_RxDataHandler *****************
 11774 ;; Defined at:
 11775 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 11776 ;; Parameters:    Size  Location     Type
 11777 ;;		None
 11778 ;; Auto vars:     Size  Location     Type
 11779 ;;		None
 11780 ;; Return value:  Size  Location     Type
 11781 ;;                  1    wreg      void 
 11782 ;; Registers used:
 11783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11784 ;; Tracked objects:
 11785 ;;		On entry : 0/0
 11786 ;;		On exit  : 0/0
 11787 ;;		Unchanged: 0/0
 11788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11793 ;;Total ram usage:        0 bytes
 11794 ;; Hardware stack levels used:    1
 11795 ;; This function calls:
 11796 ;;		Nothing
 11797 ;; This function is called by:
 11798 ;;		_EUSART1_Receive_ISR
 11799 ;;		_EUSART1_DefaultErrorHandler
 11800 ;; This function uses a non-reentrant model
 11801 ;;
 11802                           
 11803                           	psect	text59
 11804  00332C                     __ptext59:
 11805                           	opt callstack 0
 11806  00332C                     _EUSART1_RxDataHandler:
 11807                           	opt callstack 18
 11808                           
 11809                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 11810                           
 11811                           ;incstack = 0
 11812  00332C  0E40               	movlw	low _eusart1RxBuffer
 11813  00332E  245A               	addwf	_eusart1RxHead,w,c	;volatile
 11814  003330  6ED9               	movwf	fsr2l,c
 11815  003332  6ADA               	clrf	fsr2h,c
 11816  003334  0E02               	movlw	high _eusart1RxBuffer
 11817  003336  22DA               	addwfc	fsr2h,f,c
 11818  003338  CFAE FFDF          	movff	4014,indf2	;volatile
 11819  00333C  2A5A               	incf	_eusart1RxHead,f,c	;volatile
 11820                           
 11821                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 11822  00333E  0E3F               	movlw	63
 11823  003340  645A               	cpfsgt	_eusart1RxHead,c	;volatile
 11824  003342  D002               	goto	i2l5437
 11825                           
 11826                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 11827  003344  0E00               	movlw	0
 11828  003346  6E5A               	movwf	_eusart1RxHead,c	;volatile
 11829  003348                     i2l5437:
 11830                           
 11831                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 11832  003348  0100               	movlb	0	; () banked
 11833  00334A  2BF3               	incf	_eusart1RxCount& (0+255),f,b	;volatile
 11834                           
 11835                           ; BSR set to: 0
 11836  00334C  0012               	return		;funcret
 11837  00334E                     __end_of_EUSART1_RxDataHandler:
 11838                           	opt callstack 0
 11839                           
 11840                           	psect	text60
 11841  000000                     __ptext60:
 11842                           	opt callstack 0
 11843                           
 11844                           	psect	rparam
 11845  0000                     
 11846                           	psect	temp
 11847  00005B                     btemp:
 11848                           	opt callstack 0
 11849  00005B                     	ds	1
 11850  0000                     int$flags	set	btemp
 11851  0000                     wtemp8	set	btemp+1
 11852  0000                     ttemp5	set	btemp+1
 11853  0000                     ttemp6	set	btemp+4
 11854  0000                     ttemp7	set	btemp+8
 11855                           tosu	equ	0xFFF
 11856                           tosh	equ	0xFFE
 11857                           tosl	equ	0xFFD
 11858                           stkptr	equ	0xFFC
 11859                           pclatu	equ	0xFFB
 11860                           pclath	equ	0xFFA
 11861                           pcl	equ	0xFF9
 11862                           tblptru	equ	0xFF8
 11863                           tblptrh	equ	0xFF7
 11864                           tblptrl	equ	0xFF6
 11865                           tablat	equ	0xFF5
 11866                           prodh	equ	0xFF4
 11867                           prodl	equ	0xFF3
 11868                           indf0	equ	0xFEF
 11869                           postinc0	equ	0xFEE
 11870                           postdec0	equ	0xFED
 11871                           preinc0	equ	0xFEC
 11872                           plusw0	equ	0xFEB
 11873                           fsr0h	equ	0xFEA
 11874                           fsr0l	equ	0xFE9
 11875                           wreg	equ	0xFE8
 11876                           indf1	equ	0xFE7
 11877                           postinc1	equ	0xFE6
 11878                           postdec1	equ	0xFE5
 11879                           preinc1	equ	0xFE4
 11880                           plusw1	equ	0xFE3
 11881                           fsr1h	equ	0xFE2
 11882                           fsr1l	equ	0xFE1
 11883                           bsr	equ	0xFE0
 11884                           indf2	equ	0xFDF
 11885                           postinc2	equ	0xFDE
 11886                           postdec2	equ	0xFDD
 11887                           preinc2	equ	0xFDC
 11888                           plusw2	equ	0xFDB
 11889                           fsr2h	equ	0xFDA
 11890                           fsr2l	equ	0xFD9
 11891                           status	equ	0xFD8


Data Sizes:
    Strings     503
    Constant    65
    Data        111
    BSS         421
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    119     160
    BANK1           256      0     255
    BANK2           256      3     235
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_71(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_71(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK0[2]), ?_sprintf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> STR_60(CODE[9]), STR_58(CODE[9]), STR_56(CODE[8]), STR_54(CODE[9]), 
		 -> STR_52(CODE[8]), STR_50(CODE[9]), STR_48(CODE[8]), STR_46(CODE[3]), 
		 -> STR_44(CODE[10]), STR_42(CODE[10]), STR_40(CODE[9]), STR_38(CODE[11]), 
		 -> STR_36(CODE[8]), STR_34(CODE[6]), STR_32(CODE[6]), STR_30(CODE[5]), 
		 -> STR_28(CODE[7]), STR_26(CODE[7]), STR_24(CODE[9]), STR_22(CODE[8]), 
		 -> day_string(BANK1[20]), rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), temperature_read(BANK1[5]), 
		 -> getReading@outH(COMRAM[5]), getReading@rh_code(COMRAM[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(BANK0[2]), ?_sprintf(COMRAM[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), 
		 -> STR_60(CODE[9]), STR_58(CODE[9]), STR_56(CODE[8]), STR_54(CODE[9]), 
		 -> STR_52(CODE[8]), STR_50(CODE[9]), STR_48(CODE[8]), STR_46(CODE[3]), 
		 -> STR_44(CODE[10]), STR_42(CODE[10]), STR_40(CODE[9]), STR_38(CODE[11]), 
		 -> STR_36(CODE[8]), STR_34(CODE[6]), STR_32(CODE[6]), STR_30(CODE[5]), 
		 -> STR_28(CODE[7]), STR_26(CODE[7]), STR_24(CODE[9]), STR_22(CODE[8]), 
		 -> day_string(BANK1[20]), rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), temperature_read(BANK1[5]), 
		 -> getReading@outH(COMRAM[5]), getReading@rh_code(COMRAM[4]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_66(CODE[4]), STR_65(CODE[4]), STR_62(CODE[4]), STR_61(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_66(CODE[4]), STR_65(CODE[4]), STR_62(CODE[4]), STR_61(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_20(CODE[38]), STR_18(CODE[5]), STR_16(CODE[5]), STR_14(CODE[17]), 
		 -> STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[33]), 
		 -> STR_9(CODE[18]), STR_8(CODE[16]), STR_7(CODE[39]), STR_6(CODE[17]), 
		 -> STR_5(CODE[26]), STR_4(CODE[31]), STR_3(CODE[23]), STR_2(CODE[18]), 
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> month_string(BANK1[20]), day_string(BANK1[20]), rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), 
		 -> getReading@outH(COMRAM[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), NULL(NULL[0]), 

    S1974_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> month_string(BANK1[20]), day_string(BANK1[20]), rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), 
		 -> getReading@outH(COMRAM[5]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> month_string(BANK1[20]), day_string(BANK1[20]), rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), 
		 -> getReading@outH(COMRAM[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), 
		 -> STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), STR_29(CODE[3]), 
		 -> STR_27(CODE[3]), STR_25(CODE[3]), STR_23(CODE[3]), STR_21(CODE[3]), 
		 -> STR_20(CODE[38]), STR_19(CODE[5]), rtc_get_time@mo(COMRAM[20]), STR_18(CODE[5]), 
		 -> STR_17(CODE[14]), STR_16(CODE[5]), STR_15(CODE[15]), STR_14(CODE[17]), 
		 -> STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[33]), 
		 -> STR_9(CODE[18]), STR_8(CODE[16]), STR_7(CODE[39]), STR_6(CODE[17]), 
		 -> STR_5(CODE[26]), STR_4(CODE[31]), STR_3(CODE[23]), STR_2(CODE[18]), 
		 -> STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), 
		 -> STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), STR_29(CODE[3]), 
		 -> STR_27(CODE[3]), STR_25(CODE[3]), STR_23(CODE[3]), STR_21(CODE[3]), 
		 -> STR_20(CODE[38]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[14]), 
		 -> STR_16(CODE[5]), STR_15(CODE[15]), STR_14(CODE[17]), STR_13(CODE[15]), 
		 -> STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[33]), STR_9(CODE[18]), 
		 -> STR_8(CODE[16]), STR_7(CODE[39]), STR_6(CODE[17]), STR_5(CODE[26]), 
		 -> STR_4(CODE[31]), STR_3(CODE[23]), STR_2(CODE[18]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 39
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), 
		 -> STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), STR_29(CODE[3]), 
		 -> STR_27(CODE[3]), STR_25(CODE[3]), STR_23(CODE[3]), STR_21(CODE[3]), 
		 -> STR_20(CODE[38]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[14]), 
		 -> STR_16(CODE[5]), STR_15(CODE[15]), STR_14(CODE[17]), STR_13(CODE[15]), 
		 -> STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[33]), STR_9(CODE[18]), 
		 -> STR_8(CODE[16]), STR_7(CODE[39]), STR_6(CODE[17]), STR_5(CODE[26]), 
		 -> STR_4(CODE[31]), STR_3(CODE[23]), STR_2(CODE[18]), STR_1(CODE[16]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(COMRAM[2]), STR_60(CODE[9]), STR_58(CODE[9]), 
		 -> STR_56(CODE[8]), STR_54(CODE[9]), STR_52(CODE[8]), STR_50(CODE[9]), 
		 -> STR_48(CODE[8]), STR_46(CODE[3]), STR_44(CODE[10]), STR_42(CODE[10]), 
		 -> STR_40(CODE[9]), STR_38(CODE[11]), STR_36(CODE[8]), STR_34(CODE[6]), 
		 -> STR_32(CODE[6]), STR_30(CODE[5]), STR_28(CODE[7]), STR_26(CODE[7]), 
		 -> STR_24(CODE[9]), STR_22(CODE[8]), day_string(BANK1[20]), rtc_get_time@mo(COMRAM[20]), 
		 -> getReading@outT(COMRAM[5]), temperature_read(BANK1[5]), getReading@outH(COMRAM[5]), getReading@rh_code(COMRAM[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(COMRAM[2]), STR_60(CODE[9]), STR_58(CODE[9]), 
		 -> STR_56(CODE[8]), STR_54(CODE[9]), STR_52(CODE[8]), STR_50(CODE[9]), 
		 -> STR_48(CODE[8]), STR_46(CODE[3]), STR_44(CODE[10]), STR_42(CODE[10]), 
		 -> STR_40(CODE[9]), STR_38(CODE[11]), STR_36(CODE[8]), STR_34(CODE[6]), 
		 -> STR_32(CODE[6]), STR_30(CODE[5]), STR_28(CODE[7]), STR_26(CODE[7]), 
		 -> STR_24(CODE[9]), STR_22(CODE[8]), day_string(BANK1[20]), rtc_get_time@mo(COMRAM[20]), 
		 -> getReading@outT(COMRAM[5]), temperature_read(BANK1[5]), getReading@outH(COMRAM[5]), getReading@rh_code(COMRAM[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(COMRAM[2]), stoa@nuls(COMRAM[7]), STR_60(CODE[9]), 
		 -> STR_58(CODE[9]), STR_56(CODE[8]), STR_54(CODE[9]), STR_52(CODE[8]), 
		 -> STR_50(CODE[9]), STR_48(CODE[8]), STR_46(CODE[3]), STR_44(CODE[10]), 
		 -> STR_42(CODE[10]), STR_40(CODE[9]), STR_38(CODE[11]), STR_36(CODE[8]), 
		 -> STR_34(CODE[6]), STR_32(CODE[6]), STR_30(CODE[5]), STR_28(CODE[7]), 
		 -> STR_26(CODE[7]), STR_24(CODE[9]), STR_22(CODE[8]), day_string(BANK1[20]), 
		 -> rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), temperature_read(BANK1[5]), getReading@outH(COMRAM[5]), 
		 -> getReading@rh_code(COMRAM[4]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    i2c_write_serial@data	PTR unsigned char  size(2) Largest target is 14
		 -> hello_string(BANK1[14]), display_init(BANK1[4]), rtc_test(BANK0[1]), rtc_first_run@rtc_clock_set(CODE[11]), 
		 -> updateTemperature@output(COMRAM[4]), minus(CODE[2]), temp_pos(CODE[2]), humid_pos(CODE[2]), 
		 -> updateMoist@output(COMRAM[3]), getReading@outT(COMRAM[5]), first_line(BANK0[2]), adafruit_temp_command(CODE[1]), 
		 -> getReading@outH(COMRAM[5]), second_line(BANK0[2]), adafruit_humid_command(CODE[1]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_i2c_write_serial
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_i2c_write_serial
    _i2c_write_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_i2c_write_serial

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   76972
                                            117 BANK0      2     2      0
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                           _i2c_init
                   _i2c_write_serial
 ---------------------------------------------------------------------------------
 (1) _i2c_write_serial                                     8     5      3   75992
                                             84 COMRAM     2     2      0
                                            114 BANK0      3     0      3
                                              0 BANK2      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              18     4     14   72340
                                             96 BANK0     18     4     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   70681
                                             82 COMRAM     2     2      0
                                             90 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           49    43      6   69830
                                             72 COMRAM    10     4      6
                                             56 BANK0     34    34      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8603
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2825
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   34093
                                             49 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4547
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3982
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3773
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     973
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     985
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8389
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6402
                                             33 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6123
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2170
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1670
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2085
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _i2c_init
   _i2c_write_serial
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      3      EB       9       91.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2E4      12        0.0%
DATA                 0      0     2E4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Oct 06 19:53:34 2020

                      _eusart1TxBufferRemaining 00F4                                    ___fldiv@aexp 001D  
                                  ___fldiv@bexp 001C                                    ___fldiv@sign 0015  
                                            l22 3384                                    ___awdiv@sign 000A  
                           ___wmul@multiplicand 0007                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l301 2BF0                                             l310 2C00  
                                           l312 2C36                                             l155 313E  
                                           l325 2C4C                                             l603 1ACA  
                                           l605 1AD2                                             l294 2BE8  
                                           l287 2BD6                                             l535 2A10  
                                           l723 23DE                                             l742 1CB8  
                                           l744 1CC0                                             l585 2AD8  
                                           l659 03A8                                             l685 068A  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                                           _abs 3196                                             _pad 2AAA  
                                  ___awmod@sign 000A                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  ___flmul@aexp 0012                                    ___flmul@bexp 0017  
                                  ___flmul@sign 0011                                    ___flmul@temp 001C  
                                  ___flmul@prod 0018                                    ___fltol@exp1 000E  
                                          ?_abs 0017                                            l1415 1940  
                                          l1096 2670                                            l1360 1604  
                                          l1361 15E2                                            l1426 19AE  
                                          l1427 19AA                                            l1517 31BE  
                                          l1445 11F0                                            l1462 148E  
                                          l1454 1408                                            l1455 1404  
                                          l1376 16D6                                            l1560 1FDE  
                                          l1385 173C                                            l1386 1738  
                                          l1650 2FD6                                            l1548 2226  
                                          l1663 3020                                            l6021 14F2  
                                          l6111 1628                                            l6121 164E  
                                          l6041 1536                                            l6017 14EE  
                                          l7001 00E4                                            l6221 2AE2  
                                          l6053 155A                                            l6045 153A  
                                          l7021 017E                                            ?_pad 0017  
                                          l6215 2AC2                                            l6119 164A  
                                          l7103 0422                                            l7023 0188  
                                          l6225 2AFA                                            l6401 25BA  
                                          l6129 1660                                            l7113 0456  
                                          l7009 00FA                                            l6219 2AD0  
                                          l6147 16FA                                            l6163 171A  
                                          l6139 16C6                                            l6083 1596  
                                          l7211 0874                                            l7051 0278  
                                          l7019 0166                                            l7027 01AE  
                                          l6229 2B26                                            l6333 225C  
                                          l6421 17FE                                            l6157 1710  
                                          l6245 2724                                            l6261 2F00  
                                          l7141 062A                                            l7109 0446  
                                          l7061 033C                                            l7037 021A  
                                          l7045 0234                                            l6191 17A8  
                                          l6183 1782                                            l6095 15F0  
                                          l6255 276E                                            l7151 06A4  
                                          l7135 05EC                                            l7119 0480  
                                          l7127 0576                                            l7055 02B2  
                                          l7303 242A                                            l6345 22AA  
                                          l6361 2330                                            l6441 183E  
                                          l6417 17FA                                            l6097 15F4  
                                          l6249 272E                                            l7073 0390  
                                          l7057 0300                                            l7313 2482  
                                          l6347 22BE                                            l6339 2284  
                                          l6523 1A16                                            l6195 17B0  
                                          l7227 08C0                                            l7163 0726  
                                          l7091 0400                                            l7083 03B8  
                                          l6365 2356                                            l6357 231A  
                                          l6381 2508                                            l6701 2C94  
                                          l6533 1A4C                                            l6437 183A  
                                          l6197 17B2                                            l6293 203E  
                                          l7229 08CA                                            l7149 0682  
                                          l7093 0404                                            l7077 03B2  
                                          l7317 249A                                            l7309 2468  
                                          l7501 0D82                                            l6711 2CB4  
                                          l6535 1A4E                                            l6527 1A40  
                                          l6519 19F2                                            l6463 18A0  
                                          l6455 1888                                            l6631 13CE  
                                          l6279 1F40                                            l7239 0920  
                                          l7175 0756                                            l7183 0776  
                                          l7191 079A                                            l7343 1D26  
                                          l7335 1D04                                            l7511 0E38  
                                          l7431 0A50                                            l7423 0A48  
                                          l7415 0A32                                            l6393 257E  
                                          l6385 2522                                            l6377 24E4  
                                          l6481 1918                                            l6473 18F0  
                                          l6449 1872                                            l6625 13B0  
                                          l6801 3274                                            l6297 206C  
                                          l6289 2000                                            l7265 09AC  
                                          l7249 094C                                            l7329 1CD4  
                                          l7417 0A34                                            l7441 0AA2  
                                          l7601 2ED2                                            l6387 2536  
                                          l6715 2CBE                                            l6731 2DD6  
                                          l6651 144C                                            l6555 119C  
                                          l6811 2796                                            l7523 0EC0  
                                          l7435 0A54                                            l7427 0A4C  
                                          l7419 0A44                                            l6397 2594  
                                          l6741 2DF8                                            l6493 1956  
                                          l6573 11DC                                            l6557 11A0  
                                          l7285 23A2                                            l7381 1E9E  
                                          l7357 1DB4                                            l7365 1E2A  
                                          l7453 0B10                                            l6719 2CCC  
                                          l6751 2E1A                                            l6735 2DE2  
                                          l6487 193E                                            l6655 146A  
                                          l6583 120E                                            l6575 11E0  
                                          l6559 11B0                                            l6831 27F0  
                                          l7199 0832                                            l7295 23F4  
                                          l7391 285C                                            l7519 0E96  
                                          l7455 0B2E                                            l7439 0A5E  
                                          l7393 286A                                            l7561 10DA  
                                          l7473 0C0C                                            l7457 0B3C  
                                          l5963 315C                                            l6907 2F58  
                                          l6923 1AAC                                            l6755 2E28  
                                          l6747 2E10                                            l6739 2DF0  
                                          l6499 1974                                            l6771 2BC6  
                                          l6763 2B74                                            l6667 14AC  
                                          l6827 27E0                                            l7299 240C  
                                          l7571 1122                                            l7547 1004  
                                          l7539 0F94                                            l7475 0C2A  
                                          l5965 315E                                            l5949 312C  
                                          l6909 2F64                                            l6941 1AFC  
                                          l6693 2C76                                            l6845 2820  
                                          l6837 27F8                                            l7493 0D1A  
                                          l7477 0C38                                            l7629 2C3E  
                                          l6863 2090                                            l5975 28F2  
                                          l6951 1BF4                                            l6687 2C66  
                                          l6767 2BA8                                            l6783 2644  
                                          l6839 2804                                            l7567 1118  
                                          l6857 30EA                                            l6881 211E  
                                          l6873 2106                                            l6865 2094  
                                          l5985 30FC                                            l5993 307A  
                                          l6937 1AEC                                            l6793 26A8  
                                          l7577 113A                                            l6883 2124  
                                          l5995 307E                                            l6971 1C58  
                                          l6699 2C8C                                            l6787 265A  
                                          l6779 2610                                            l6885 2162  
                                          l5989 3112                                            l6879 2116  
                                          l6975 1C70                                            l7599 2EAC  
                                          l6889 21B0                                            l6989 00B6  
                                          STR_1 FEE9                                            STR_2 FEC6  
                                          STR_3 FEAF                                            STR_4 FE76  
                                          STR_5 FE95                                            STR_6 FED8  
                                          STR_7 FE08                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u8010 318E                                            u8020 3190  
                                          u8101 228A                                            u7310 3220  
                                          u8030 3008                                            u9000 21DA  
                                          u8120 22C2                                            u7320 3222  
                                          u8040 300A                                            u9010 21F6  
                                          u7250 28EA                                            u8060 3250  
                                          u9020 21F8                                            u9100 1AC0  
                                          u7420 15B8                                            u8070 3252  
                                          u7270 2932                                            u7430 15C8  
                                          u9007 21D0                                            u9120 1AE6  
                                          u7600 171E                                            u7440 15CA  
                                          u7290 30A0                                            u9130 1C02  
                                          u8410 1A00                                            u8180 253A  
                                          u9060 1A7E                                            u8420 1A24  
                                          u7620 1732                                            u9300 01F0  
                                          u9150 1C24                                            u9070 1A80  
                                          u8510 11FC                                            u7470 160C  
                                          u9310 01F2                                            u9230 00D4  
                                          u9151 1C22                                            u9160 1C32  
                                          u8600 145A                                            u8520 1372  
                                          u7720 31F0                                            u7297 3096  
                                          u9170 1C36                                            u8370 19A4  
                                          u8610 1478                                            u9410 03D0  
                                          u7730 31F2                                            u9260 013C  
                                          u8525 1368                                            u9190 1C42  
                                          u7910 1F0E                                            u9350 0364  
                                          u9270 013E                                            u8720 2DFC  
                                          u8560 13FE                                            u7680 178E  
                                          u7840 2766                                            u7920 1F2E  
                                          u7850 2768                                            u9450 041E  
                                          u7835 2748                                            u7915 1F04  
                                          u7780 31A4                                            u8660 2C98  
                                          u7860 2F3A                                            u9700 0996  
                                          u9620 0856                                            u9380 039E  
                                          u7790 26EA                                            u9710 0998  
                                          u8920 30E6                                            u8840 2784  
                                          u7960 1FBE                                            u7880 2FBC  
                                          u7945 1F58                                            u8930 20BA  
                                          u8770 2BC2                                            u8850 27B4  
                                          u7946 1F5E                                            u7890 2FBE  
                                          u7795 26E0                                            u7947 1F6C  
                                          u7867 2F30                                            u9731 2382  
                                          u7980 201E                                            u9820 24AE  
                                          u9900 1D92                                            u7965 1FB4  
                                          u8950 20EA                                            u9910 1D94  
                                          u8855 27AA                                            u8960 2102  
                                          u9680 0936                                            u9840 1CAE  
                                          u8937 20B0                                            u7985 2014  
                                          u8890 280A                                            u9930 1E06  
                                          u8980 2146                                            u9780 2420  
                                          u9940 1E3A                                            u9860 1D22  
                                          u8957 20E0                                            u8990 2198  
                                          u9790 244C                                            u9870 1D58  
                                          u9935 1DF4                                            u9960 1E5C  
                                          u9880 1D5A                                            u9961 1E5A  
                                          u9970 1E6A                                            u8987 213C  
                                          u9980 1E6E                                            u8997 218E  
                                          u9797 2442                                            _WPUB 000F61  
                                 _EUSART1_Write 312A                                            abs@a 0017  
                                          _dbuf 0117                                            _atoi 207E  
                                          _ctoa 2F44                                            _main 297A  
                                          _dtoa 1A56                                            _prec 00E3  
                                          _nout 00DF                                            pad@i 001E  
                                          pad@p 001B                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0020                                            fsr2l 000FD9  
                                          _stoa 2378                                            btemp 005B  
                                 __CFG_BORV$190 000000                                            _xtoa 1C9A  
                                 ___fpclassifyf 26AC                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0068  
                                 __CFG_IESO$OFF 000000                                 ___fldiv@new_exp 0016  
                                  _tolower$2051 0011                                    ___param_bank 000000  
                                         ??_abs 0019                                           ??_pad 001D  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 338A  
                         _eusart1RxStatusBuffer 0200                                   ___fltol@sign1 000D  
                               __end_of___aodiv 2378                                           ?_atoi 000C  
                                         ?_ctoa 0022                                 __end_of___fladd 17CE  
                                         ?_main 0001                                           ?_dtoa 0022  
                               __end_of___aomod 25DC                                 __end_of___fldiv 1A56  
                               __end_of___awdiv 2CD6                                 __end_of___flneg 3286  
                                         STR_10 FE55                                           STR_11 FF33  
                                         STR_12 FF25                                           STR_20 FE2F  
                                         STR_21 FFFC                                           STR_13 FEF9  
                                         STR_30 FFD7                                           STR_22 FFAD  
                                         STR_15 FF08                                           STR_16 FFDC  
                                         STR_32 FFD1                                           STR_40 FF8C  
                                         STR_24 FF83                                           STR_17 FF17  
                                         STR_34 FFCB                                           STR_26 FFC4  
                                         STR_50 FF71                                           STR_42 FF55  
                                         STR_19 FFE1                                           STR_28 FFBD  
                                         STR_36 FFB5                                           STR_52 FFA5  
                                         STR_60 FF5F                                           STR_44 FF4B  
                               __end_of___awmod 2E32                                           STR_61 FFE6  
                                         STR_46 FFF9                                           STR_62 FFEE  
                                         STR_54 FF7A                                           STR_38 FF40  
                                         STR_71 FFF6                                           STR_48 FF9D  
                                         STR_56 FF95                                           STR_65 FFEA  
                                         STR_66 FFF2                                           STR_58 FF68  
                                         STR_69 FFF6                                 __end_of___flmul 14C2  
                               __end_of___flsub 3070                                 __end_of___fltol 2832  
                                         ?_stoa 0010                                           u10100 0B76  
                                         u10110 0B78                                           u10040 28B4  
                                         u10120 0B86                                           u10300 103C  
                                         u10220 0DBA                                           u10150 0C72  
                                         u10160 0C74                                           u10400 2C3A  
                                         u10250 0F46                                           u10170 0C82  
                                         u10410 2C4A                                           u10260 0F48  
                               ___awdiv@divisor 0007                                           u10390 2C34  
                                         ?_xtoa 0022                                           u10397 2C2A  
                                         u10577 2992                                           u10587 29AA  
                                         u10597 2A02                                  __CFG_DEBUG$OFF 000000  
                                         _AElig 01C5                                           i2l226 0036  
                                         i2l167 32DA                                 ___awdiv@counter 0009  
                                  vfpfcnvrt@fmt 004B                                    vfpfcnvrt@llu 00A0  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _Aring 0199  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 32B2                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                           _aelig 01D0  
                                __CFG_EBTRB$OFF 000000                                           _debug 00F1  
                             i2c_write_serial@i 02EA                                           _flags 0057  
                                         _aring 01A4                                           _error 00F0  
                                         _fputc 28DA                                 __end_of_isalpha 3196  
                                         _fputs 30F2                                 __end_of_isdigit 3258  
                                         _minus FE00                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0019                                           pad@fp 0017  
                                         atoi@s 000C                                           _width 00E1  
                                         ctoa@c 0024                                           _putch 338A  
                                         ctoa@w 0025                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 31F8  
                               __end_of_isspace 30F2                                  ?_EUSART1_Write 0001  
                               __end_of_isupper 3228                                           pclath 000FFA  
                                         tablat 000FF5                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 001C  
                                         stoa@l 0024                                           stoa@p 0022  
                                         stoa@s 0012                                           stoa@w 001E  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                  ?___fpclassifyf 0005  
                               __end_of_tolower 2FE0                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                                __CFG_HFOFST$ON 000000                                 __end_of_strncmp 28DA  
                               __end_of_toupper 302A      __end_of_EUSART1_DefaultFramingErrorHandler 33E2  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 33E0  
                                __CFG_PBADEN$ON 000000                                    _toupper$2066 0011  
            __end_ofrtc_first_run@rtc_clock_set FE00                      rtc_first_run@rtc_clock_set FDF5  
                               __initialization 2CD6                                    __end_of_atoi 2230  
                                  __end_of_ctoa 2F94                      __end_of_EUSART1_Initialize 2DC2  
                                  __end_of_main 2A12                                    __end_of_dtoa 1C9A  
                                  __end_of_stoa 24B8                                    __end_of_xtoa 1EC8  
                              __end_of_i2c_init 3366                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 000E                                          ??_ctoa 0025  
                                        ??_main 00D5                                          ??_dtoa 002C  
                                        ??_stoa 0014                                          ??_xtoa 002D  
                                 __activetblptr 000003                           ?_EUSART1_Transmit_ISR 0001  
                                        ?_fputc 0007                                          ?_fputs 0010  
                              ___awdiv@dividend 0005                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                        __end_of_i2c_write_serial 2C52  
                                __CFG_WDTEN$OFF 000000                                          i2l5531 32D6  
                                        i2l5437 3348                                          i2l5551 2AA4  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 00AA                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0053  
                                        ___flge 25DC                                          ___fleq 2B40  
                                     ??___aodiv 0015                                       ??___fladd 000D  
                                     ??___aomod 0015                                          ___wmul 3306  
                                     ??___fldiv 000D                                       ??___awdiv 0009  
                                     ??___flneg 0009                                  __CFG_STVREN$ON 000000  
                                     ??___awmod 0009                                       ??___flmul 000D  
                                     ??___flsub 0026                                       ??___fltol 0009  
                                        _efgtoa 006C                        ?_EUSART1_SetErrorHandler 0005  
                                        _floorf 1EC8                          _adafruit_humid_command FE07  
                                        clear_0 2D1C                                          clear_1 2D28  
                                        clear_2 2D34                                ___awdiv@quotient 000B  
                               ___awmod@divisor 0007                                          _oslash 01BA  
                               ___awmod@counter 0009                                          _printf 32DE  
                                        pad@buf 0019                ??_EUSART1_SetOverrunErrorHandler 0007  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          ctoa@fp 0022  
                                        dtoa@fp 0022                                          _strcpy 2EF0  
                                        _strlen 3070                                          fputc@c 0007  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                 ___fpclassifyf@e 000D  
                              __end_of_temp_pos FE06                                 ___fpclassifyf@u 000F  
                               ___fpclassifyf@x 0005                                __end_of_rtc_addr FDF4  
                                     ??_islower 0007                                    __mediumconst FDC6  
                                     ??_isspace 0007                                          tblptrh 000FF7  
                                     ??_isupper 0007                                          tblptrl 000FF6  
                                        tblptru 000FF8                                          stoa@cp 0020  
                                        stoa@fp 0010                                __end_of_vfprintf 2EF0  
                               ??_EUSART1_Write 0005                                       ??_tolower 000D  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0240  
                                     ??_strncmp 000B                                       ??_toupper 000D  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 0280  
                                    ___flge@ff1 001E                                      ___flge@ff2 0022  
                               ??___fpclassifyf 0009                          updateTemperature@F6433 010F  
                             _SYSTEM_Initialize 3366                                      ___fleq@ff1 0005  
                                    ___fleq@ff2 0009                                      __accesstop 0060  
                       __end_of__initialization 2D42                                      ___flneg@f1 0005  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                    ___fltol@f1 0005                  __size_of_EUSART1_RxDataHandler 0022  
                 __end_of_EUSART1_RxDataHandler 334E                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 33C6                                    __pidataBANK1 2E32  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 297A  
                                 __end_of_fputs 312A                                   __end_of_minus FE02  
                                 __end_of_putch 3394                          ??_EUSART1_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 2AAA                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 3378                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 005A  
                                 _eusart1TxHead 00F6                                   _eusart1RxTail 0059  
                                    __pbssBANK0 00D7                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                   _eusart1TxTail 00F5  
             _EUSART1_TxDefaultInterruptHandler 00ED                 ??_EUSART1_SetRxInterruptHandler 0007  
                               __CFG_PLLCFG$OFF 000000                                       ?_i2c_init 0001  
                                    _degree_pos FDF1                 __end_of_EUSART1_SetErrorHandler 33C6  
                            __CFG_CCP2MX$PORTC1 000000                                         ?___flge 001E  
                                       ?___fleq 0005                                         ?___wmul 0005  
                            __CFG_CCP3MX$PORTB5 000000                                      _day_string 0167  
                                       ?_efgtoa 0032                                         ?_floorf 001E  
                        i2c_write_serial@length 00D4                                         ?_printf 00C0  
                                       ?_strcpy 0005                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 33BC         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 33B2                    ?_EUSART1_DefaultErrorHandler 0001  
                              _rtc_reset_string FDED                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0786                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                                       _SSP1BUF 000FC9                                      ??_i2c_init 0005  
                                       _O_slash 01AF                                      _first_line 00FD  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                                 __size_of___flge 00D0  
                               __size_of___fleq 008A                                         ___aodiv 2230  
                                       ___fladd 14C2                                         ___aomod 24B8  
                                       ___fldiv 17CE                                         ___awdiv 2C52  
                                       ___flneg 3258                                         ___awmod 2DC2  
                                       ___flmul 1170                                         ___flsub 302A  
                                       ___fltol 2778                                 __size_of___wmul 0026  
                                     ?_vfprintf 00BA                                 __size_of_efgtoa 097E  
                               __size_of_floorf 01B6                                         __pcinit 2CD6  
                                       __ramtop 1000                                         __ptext0 297A  
                                       __ptext1 2BCA                                         __ptext2 32DE  
                                       __ptext3 2E98                                         __ptext4 09EA  
                                       __ptext5 1C9A                                         __ptext6 2FE0  
                                       __ptext7 31C8                                         __ptext8 3162  
                                       __ptext9 2832                                 __size_of_printf 0028  
                               __size_of_strcpy 0054                                 __size_of_strlen 0044  
                         _OSCILLATOR_Initialize 3378                                    __size_of_abs 0032  
                                  __size_of_pad 0096                                         _isalpha 3162  
                                       _isdigit 3228                   __end_of_adafruit_temp_command FE07  
                              ___awmod@dividend 0005                              _EUSART1_Initialize 2D4C  
                                       _islower 31C8                                         _minutes 00F7  
                      ??_PIN_MANAGER_Initialize 0005                                         _isspace 30B4  
                                    _humid_read 0194                                         _isupper 31F8  
                                       efgtoa@c 0038                                         efgtoa@d 0078  
                                       efgtoa@e 0090                                         efgtoa@f 0034  
                                       efgtoa@g 008C                                         efgtoa@h 0082  
                                       efgtoa@i 008A                                         efgtoa@l 0086  
                                       efgtoa@m 0074                                         efgtoa@n 0092  
                                       efgtoa@p 007C                                         efgtoa@t 0070  
                                       efgtoa@u 0094                                         efgtoa@w 007F  
                 ??_EUSART1_DefaultErrorHandler 0001                               __end_of_humid_pos FE04  
                                       atoi@neg 0012                      __size_of_SYSTEM_Initialize 0012  
                                       _tolower 2F94                                         _strncmp 2832  
                                       _toupper 2FE0                            end_of_initialization 2D42  
                                       floorf@e 002C                                         floorf@m 0028  
                                       floorf@u 002E                                         floorf@x 001E  
                           ?_EUSART1_Initialize 0001                               ?_i2c_write_serial 00D2  
                                       fputc@fp 0009                     _EUSART1_OverrunErrorHandler 00E7  
                                       fputs@fp 0012                              ??_i2c_write_serial 0055  
         __end_of_EUSART1_SetRxInterruptHandler 33A8          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 339E                               __end_of_vfpfcnvrt 1170  
                                    efgtoa@mode 0081                                      efgtoa@sign 007A  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                    _precission 00FA                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                                    ??_vfprintf 0053                            ??_EUSART1_Initialize 0007  
                                       strcpy@d 000D                                         strlen@a 0007  
                                       strcpy@s 000B                                         strlen@s 0005  
                                    _rtc_buffer 02C0                                    _display_addr 00F9  
                                  _hello_string 01ED                                    _display_init 01FB  
                                   ___fladd@grs 0014                            __end_of_humid_string FDD9  
                                     _TRISCbits 000F94                                     ___fldiv@grs 0018  
                                   ___fldiv@rem 0011                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0005                                      _tmp_string 0100  
                                   ___flmul@grs 0013                  __end_of_adafruit_humid_command FE08  
          __size_of_EUSART1_DefaultErrorHandler 0006                             __end_of_degree_sign FDF1  
                  __end_of_INTERRUPT_Initialize 33E0                                  __end_of___flge 26AC  
                                __end_of___fleq 2BCA                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@cp 00A8                                     vfpfcnvrt@ct 00B6  
                                   vfpfcnvrt@fp 0049                                     vfpfcnvrt@ll 0098  
                                __end_of___wmul 332C                                  __end_of_efgtoa 09EA  
                                __end_of_floorf 207E                          ?_OSCILLATOR_Initialize 0001  
                                    floorf@F524 00D7                                  __end_of_printf 3306  
                                __end_of_strcpy 2F44                                  __end_of_strlen 30B4  
                           start_initialization 2CD6                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 31C8                                     __end_of_pad 2B40  
 EUSART1_SetRxInterruptHandler@interruptHandler 0005   EUSART1_SetTxInterruptHandler@interruptHandler 0005  
                                   putch@txData 0006                           __end_of_EUSART1_Write 3162  
                         __end_of___fpclassifyf 2778                                _temperature_read 018F  
                             __size_of_i2c_init 0018                        __end_of_rtc_reset_string FDEF  
                                   vfprintf@fmt 00BC                                        ??___flge 0026  
                                      ??___fleq 000D                                        ??___wmul 0009  
                         _EUSART1_RxDataHandler 332C                                        ??_efgtoa 0039  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00F7  
                                   __pdataBANK1 0199                                        ??_floorf 0022  
                                      ??_printf 0055                                        ??_strcpy 0009  
                                      ??_strlen 0007                                  _eusart1RxCount 00F3  
                                     ___fladd@a 0009                                       ___fladd@b 0005  
                                     ___fldiv@a 0009                                       ___fldiv@b 0005  
                                     ___flmul@a 0009                                       ___flmul@b 0005  
                                   __pbssCOMRAM 0057                                       ___flsub@a 0022  
                                     ___flsub@b 001E               _EUSART1_RxDefaultInterruptHandler 00EB  
                 __size_of_EUSART1_Transmit_ISR 002C                                   __pcstackBANK0 0060  
                                 __pcstackBANK2 02E8                                ___aodiv@dividend 0005  
               ??_EUSART1_SetTxInterruptHandler 0007                ??_EUSART1_SetFramingErrorHandler 0007  
               ?_EUSART1_SetFramingErrorHandler 0005                    __size_of_EUSART1_Receive_ISR 0098  
                                   _degree_sign FDEF                                       _atoi$1921 0014  
                                     _atoi$1922 0018                                       _atoi$1923 0016  
                                   _efgtoa$1401 006A                                     _efgtoa$1402 006C  
                                   _efgtoa$1403 006E                                     _efgtoa$1392 0064  
                                   _efgtoa$1393 0066                                     _efgtoa$1397 0068  
                        _PIN_MANAGER_Initialize 3286                                       _dtoa$1369 0034  
                                     __pintcode 0008                                   __pmediumconst FDC6  
                                      ?___aodiv 0005                                        ?___fladd 0005  
                                      ?___aomod 0005                                        ?___fldiv 0005  
                                      ?___awdiv 0005                                ___aodiv@quotient 0017  
                                      ?___flneg 0005                                        ?___awmod 0005  
                                      ?___flmul 0005                                        ?___flsub 001E  
                                      ?___fltol 0005                      __end_of_adafruit_temp_addr FDF5  
                                  _custom_char0 01DB                    ??_INTERRUPT_InterruptManager 0001  
                              __CFG_PRICLKEN$ON 000000                               __size_of_vfprintf 0058  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 33D6  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 33D0  
                                      ?_isalpha 0005                                        ?_isdigit 0005  
                          _EUSART1_ErrorHandler 00E5                                        ?_islower 0005  
                                      ?_isspace 0005                                        ?_isupper 0005  
                       _EUSART1_SetErrorHandler 33BC                                        ?_tolower 000B  
                                __size_of_fputc 00A0                                  __size_of_fputs 0038  
                                      ?_strncmp 0005                                        ?_toupper 000B  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 33DC  
                               _rtc_time_string FDEB                                       _humid_pos FE02  
                                ___wmul@product 0009         EUSART1_SetErrorHandler@interruptHandler 0005  
                                      _PIE1bits 000F9D             __size_of_INTERRUPT_InterruptManager 0060  
                                      _PIR1bits 000F9E                                        i2u703_48 0028  
                                      i2u706_48 0040                                        i2u706_49 0054  
                                  _humid_string FDC7                                        i2u675_48 2A3A  
                                      i2u675_49 2A4E                                        i2u677_48 2A66  
                                      i2u677_49 2A7A                                        i2u679_48 2A90  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 000FD0  
                              __CFG_WDTPS$32768 000000                                        _SSP1CON1 000FC6  
                                      _SSP1CON2 000FC5                                        _SSP1STAT 000FC7  
                     __size_of_i2c_write_serial 0088                                       _vfpfcnvrt 09EA  
                                     _xtoa$1424 0035                                       _xtoa$1425 0037  
                             ___wmul@multiplier 0005                      i2c_write_serial@targetAddr 02E9  
                                  _isspace$1961 000B                              __end_of_degree_pos FDF3  
                         _adafruit_temp_command FE06                                      vfpfcnvrt@c 00B9  
                                    vfpfcnvrt@f 00B2                                     _INTCON2bits 000FF1  
                                     copy_data0 2CEA                                       copy_data1 2D0A  
                         ?_INTERRUPT_Initialize 0001                                        _i2c_init 334E  
         __end_of_EUSART1_SetTxInterruptHandler 339E          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 3394                                        __Hrparam 0000  
                                    vfprintf@ap 00BE                                        __Lrparam 0000  
                                    vfprintf@fp 00BA                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0005  
                              __size_of___aodiv 0148                                __size_of___fladd 030C  
                              __size_of___aomod 0124                                __size_of___fldiv 0288  
                              __size_of___awdiv 0084                                __size_of___flneg 002E  
                              __size_of___awmod 0070                                __size_of___flmul 0352  
                              __size_of___flsub 0046                                __size_of___fltol 00BA  
                   __size_of_EUSART1_Initialize 0076                                      ?_vfpfcnvrt 0049  
                               ___aodiv@divisor 000D                                 ___aodiv@counter 0015  
                                    _ANSELCbits 000F3A                              ___fpclassifyf@F463 00DB  
                     ??_EUSART1_SetErrorHandler 0007             __end_of_EUSART1_DefaultErrorHandler 33DC  
                   _EUSART1_DefaultErrorHandler 33D6                         __end_of_rtc_time_string FDED  
                                      _data_out 0113                                __size_of_isalpha 0034  
                              __size_of_isdigit 0030                            i2c_write_serial@addr 02E8  
                          i2c_write_serial@data 00D2                                __size_of_islower 0030  
                              __size_of_isspace 003E                             __end_of_temp_string FDEB  
                                      __ptext10 2378                                        __ptext11 006C  
                                      __ptext20 3258                                        __ptext12 2F94  
                                      __ptext21 1170                                        __ptext13 31F8  
                                      __ptext30 2230                                        __ptext22 25DC  
                                      __ptext14 2EF0                                        __ptext31 2F44  
                                      __ptext23 2B40                                        __ptext15 1EC8  
                                      __ptext40 3228                                        __ptext32 2AAA  
                                      __ptext24 17CE                                        __ptext16 26AC  
                                      __ptext41 3306                                        __ptext33 3070  
                                      __ptext25 2DC2                                        __ptext17 2778  
                                      __ptext50 33A8                                        __ptext42 334E  
                                      __ptext34 30F2                                        __ptext26 2C52  
                                      __ptext18 302A                                        __ptext51 33B2  
                                      __ptext43 3366                                        __ptext35 28DA  
                                      __ptext27 1A56                                        __ptext19 14C2  
                                      __ptext60 0000                                        __ptext52 33BC  
                                      __ptext44 3286                                        __ptext36 338A  
                                      __ptext28 3196                                        __ptext45 3378  
                                      __ptext37 312A                                        __ptext29 24B8  
                                      __ptext54 32B2                                        __ptext46 33DC  
                                      __ptext38 207E                                        __ptext55 2A12  
                                      __ptext47 2D4C                                        __ptext39 30B4  
                                      __ptext56 33D0                                        __ptext48 3394  
                                      __ptext57 33E0                                        __ptext49 339E  
                                      __ptext58 33D6                                        __ptext59 332C  
                              __size_of_isupper 0030                                    _SSP1CON2bits 000FC5  
                                  _SSP2CON2bits 000F6B                                __size_of_tolower 004C  
                                    strcpy@dest 0005                                __size_of_strncmp 00A8  
                              __size_of_toupper 004A                                   __size_of_atoi 01B2  
                                 __size_of_ctoa 0050                                   __size_of_main 0098  
                                 __size_of_dtoa 0244                                   __size_of_stoa 0140  
                                 __size_of_xtoa 022E                                    _month_string 017B  
                                      efgtoa@fp 0032                                        efgtoa@ne 0076  
                                      efgtoa@pp 0072                                        efgtoa@ou 0060  
                                     stoa@F1166 01E6  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
                                      _temp_pos FE04                                        _rtc_addr FDF3  
                                      _rtc_test 00FF                                        int$flags 005B  
                                      _vfprintf 2E98              __end_of_INTERRUPT_InterruptManager 0068  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00C0  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 00E9  
                           _EUSART1_Receive_ISR 2A12                                ___aomod@dividend 0005  
                                _vfpfcnvrt$1440 00AE                                  _vfpfcnvrt$1446 00B0  
                                _vfpfcnvrt$1439 00AC                                     _second_line 00FB  
                                    _INTCONbits 000FF2                                        isalpha@c 0005  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                                      islower@c 0005                                        isspace@c 0005  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 33B2  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 33A8  
                                     strcpy@src 0007                                      _RCSTA1bits 000FAB  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 32DE  
                                     strncmp@_l 0005                                       strncmp@_r 0007  
                                   efgtoa@nmode 007E                                        printf@ap 00D0  
EUSART1_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                               ___aomod@divisor 000D                                _i2c_write_serial 2BCA  
                                   ??_vfpfcnvrt 004F                                        stoa@nuls 0015  
                               ___aomod@counter 0015                          __size_of_EUSART1_Write 0038  
                            _eusart1RxLastError 00F2                                     _temp_string FDD9  
                                      tolower@c 000B                          __size_of___fpclassifyf 00CC  
                                      strncmp@l 000C                                        strncmp@n 0009  
                                      strncmp@r 000E                                        toupper@c 000B  
                             __CFG_T3CMX$PORTC0 000000                              _adafruit_temp_addr FDF4  
                                _display_toogle 00EF                                   ___fladd@signs 0011  
                                  ___aodiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 32B2                                    ___fladd@aexp 0012  
                                  ___fladd@bexp 0013                               __CFG_FOSC$INTIO67 000000  
                       ??_EUSART1_RxDataHandler 0001                                    ___aomod@sign 0016  
