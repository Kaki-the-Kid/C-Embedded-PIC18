

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 12 10:58:36 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67  0000                     
    68                           ; Version 2.32
    69                           ; Generated 02/02/2021 GMT
    70                           ; 
    71                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F26K22 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  001C70                     __pidataBANK0:
   106                           	callstack 0
   107                           
   108                           ;initializer for stoa@F1146
   109  001C70  28                 	db	40
   110  001C71  6E                 	db	110
   111  001C72  75                 	db	117
   112  001C73  6C                 	db	108
   113  001C74  6C                 	db	108
   114  001C75  29                 	db	41
   115  001C76  00                 	db	0
   116                           
   117                           ;initializer for _minutes
   118  001C77  04                 	db	4
   119  001C78  45                 	db	69
   120                           
   121                           ;initializer for _display_addr
   122  001C79  3C                 	db	60
   123                           
   124                           ;initializer for _precission
   125  001C7A  01                 	db	1
   126                           
   127                           ;initializer for _display_init
   128  001C7B  00                 	db	0
   129  001C7C  38                 	db	56
   130  001C7D  0C                 	db	12
   131  001C7E  06                 	db	6
   132                           
   133                           ;initializer for _second_line
   134  001C7F  00                 	db	0
   135  001C80  C0                 	db	192
   136                           
   137                           ;initializer for _first_line
   138  001C81  00                 	db	0
   139  001C82  80                 	db	128
   140                           
   141                           ;initializer for _rtc_test
   142  001C83  03                 	db	3
   143                           
   144                           	psect	idataBANK1
   145  001896                     __pidataBANK1:
   146                           	callstack 0
   147                           
   148                           ;initializer for _Aring
   149  001896  80                 	db	128
   150  001897  78                 	db	120
   151  001898  40                 	db	64
   152  001899  0E                 	db	14
   153  00189A  0E                 	db	14
   154  00189B  11                 	db	17
   155  00189C  11                 	db	17
   156  00189D  1F                 	db	31
   157  00189E  11                 	db	17
   158  00189F  11                 	db	17
   159  0018A0  00                 	db	0
   160                           
   161                           ;initializer for _aring
   162  0018A1  80                 	db	128
   163  0018A2  70                 	db	112
   164  0018A3  40                 	db	64
   165  0018A4  0E                 	db	14
   166  0018A5  0A                 	db	10
   167  0018A6  0E                 	db	14
   168  0018A7  01                 	db	1
   169  0018A8  0F                 	db	15
   170  0018A9  11                 	db	17
   171  0018AA  0F                 	db	15
   172  0018AB  00                 	db	0
   173                           
   174                           ;initializer for _O_slash
   175  0018AC  80                 	db	128
   176  0018AD  68                 	db	104
   177  0018AE  40                 	db	64
   178  0018AF  0E                 	db	14
   179  0018B0  13                 	db	19
   180  0018B1  15                 	db	21
   181  0018B2  15                 	db	21
   182  0018B3  15                 	db	21
   183  0018B4  19                 	db	25
   184  0018B5  0E                 	db	14
   185  0018B6  00                 	db	0
   186                           
   187                           ;initializer for _oslash
   188  0018B7  80                 	db	128
   189  0018B8  60                 	db	96
   190  0018B9  40                 	db	64
   191  0018BA  00                 	db	0
   192  0018BB  00                 	db	0
   193  0018BC  0E                 	db	14
   194  0018BD  13                 	db	19
   195  0018BE  15                 	db	21
   196  0018BF  19                 	db	25
   197  0018C0  0E                 	db	14
   198  0018C1  00                 	db	0
   199                           
   200                           ;initializer for _AElig
   201  0018C2  80                 	db	128
   202  0018C3  58                 	db	88
   203  0018C4  40                 	db	64
   204  0018C5  0F                 	db	15
   205  0018C6  14                 	db	20
   206  0018C7  14                 	db	20
   207  0018C8  1F                 	db	31
   208  0018C9  14                 	db	20
   209  0018CA  14                 	db	20
   210  0018CB  17                 	db	23
   211  0018CC  00                 	db	0
   212                           
   213                           ;initializer for _aelig
   214  0018CD  80                 	db	128
   215  0018CE  50                 	db	80
   216  0018CF  40                 	db	64
   217  0018D0  00                 	db	0
   218  0018D1  00                 	db	0
   219  0018D2  0E                 	db	14
   220  0018D3  05                 	db	5
   221  0018D4  0F                 	db	15
   222  0018D5  14                 	db	20
   223  0018D6  0F                 	db	15
   224  0018D7  00                 	db	0
   225                           
   226                           ;initializer for _custom_char0
   227  0018D8  80                 	db	128
   228  0018D9  40                 	db	64
   229  0018DA  40                 	db	64
   230  0018DB  0C                 	db	12
   231  0018DC  12                 	db	18
   232  0018DD  12                 	db	18
   233  0018DE  0C                 	db	12
   234  0018DF  00                 	db	0
   235  0018E0  00                 	db	0
   236  0018E1  00                 	db	0
   237  0018E2  00                 	db	0
   238                           
   239                           ;initializer for _hello_string
   240  0018E3  40                 	db	64
   241  0018E4  48                 	db	72
   242  0018E5  65                 	db	101
   243  0018E6  6C                 	db	108
   244  0018E7  6C                 	db	108
   245  0018E8  6F                 	db	111
   246  0018E9  20                 	db	32
   247  0018EA  57                 	db	87
   248  0018EB  6F                 	db	111
   249  0018EC  72                 	db	114
   250  0018ED  6C                 	db	108
   251  0018EE  64                 	db	100
   252  0018EF  21                 	db	33
   253  0018F0  00                 	db	0
   254                           
   255                           	psect	mediumconst
   256  00FDD8                     __pmediumconst:
   257                           	callstack 0
   258  00FDD8  00                 	db	0
   259  00FDD9                     _humid_string:
   260                           	callstack 0
   261  00FDD9  40                 	db	64
   262  00FDDA  48                 	db	72
   263  00FDDB  75                 	db	117
   264  00FDDC  6D                 	db	109
   265  00FDDD  69                 	db	105
   266  00FDDE  64                 	db	100
   267  00FDDF  3A                 	db	58
   268  00FDE0  20                 	db	32
   269  00FDE1  20                 	db	32
   270  00FDE2  20                 	db	32
   271  00FDE3  20                 	db	32
   272  00FDE4  25                 	db	37
   273  00FDE5  20                 	db	32
   274  00FDE6  20                 	db	32
   275  00FDE7  20                 	db	32
   276  00FDE8  20                 	db	32
   277  00FDE9  20                 	db	32
   278  00FDEA  00                 	db	0
   279  00FDEB                     __end_of_humid_string:
   280                           	callstack 0
   281  00FDEB                     _temp_string:
   282                           	callstack 0
   283  00FDEB  40                 	db	64
   284  00FDEC  54                 	db	84
   285  00FDED  6D                 	db	109
   286  00FDEE  70                 	db	112
   287  00FDEF  3A                 	db	58
   288  00FDF0  78                 	db	120
   289  00FDF1  78                 	db	120
   290  00FDF2  2C                 	db	44
   291  00FDF3  78                 	db	120
   292  00FDF4  6F                 	db	111
   293  00FDF5  20                 	db	32
   294  00FDF6  20                 	db	32
   295  00FDF7  20                 	db	32
   296  00FDF8  20                 	db	32
   297  00FDF9  20                 	db	32
   298  00FDFA  20                 	db	32
   299  00FDFB  20                 	db	32
   300  00FDFC  00                 	db	0
   301  00FDFD                     __end_of_temp_string:
   302                           	callstack 0
   303  00FDFD                     rtc_first_run@F6460:
   304                           	callstack 0
   305  00FDFD  00                 	db	0
   306  00FDFE  00                 	db	0
   307  00FDFF  00                 	db	0
   308  00FE00  E0                 	db	224
   309  00FE01  56                 	db	86
   310  00FE02  34                 	db	52
   311  00FE03  12                 	db	18
   312  00FE04  05                 	db	5
   313  00FE05  01                 	db	1
   314  00FE06  10                 	db	16
   315  00FE07  20                 	db	32
   316  00FE08                     __end_ofrtc_first_run@F6460:
   317                           	callstack 0
   318  00FE08                     _rtc_time_string:
   319                           	callstack 0
   320  00FE08  00                 	db	0
   321  00FE09  42                 	db	66
   322  00FE0A                     __end_of_rtc_time_string:
   323                           	callstack 0
   324  00FE0A                     _rtc_reset_string:
   325                           	callstack 0
   326  00FE0A  00                 	db	0
   327  00FE0B  58                 	db	88
   328  00FE0C                     __end_of_rtc_reset_string:
   329                           	callstack 0
   330  00FE0C                     _degree_sign:
   331                           	callstack 0
   332  00FE0C  40                 	db	64
   333  00FE0D  DF                 	db	223
   334  00FE0E                     __end_of_degree_sign:
   335                           	callstack 0
   336  00FE0E                     _degree_pos:
   337                           	callstack 0
   338  00FE0E  00                 	db	0
   339  00FE0F  8A                 	db	138
   340  00FE10                     __end_of_degree_pos:
   341                           	callstack 0
   342  00FE10  68                 	db	104
   343  00FE11                     __end_of_rtc_addr:
   344                           	callstack 0
   345  00FE11  40                 	db	64
   346  00FE12                     __end_of_adafruit_temp_addr:
   347                           	callstack 0
   348  00FE12                     _minus:
   349                           	callstack 0
   350  00FE12  40                 	db	64
   351  00FE13  2D                 	db	45
   352  00FE14                     __end_of_minus:
   353                           	callstack 0
   354  00FE14                     _humid_pos:
   355                           	callstack 0
   356  00FE14  00                 	db	0
   357  00FE15  C6                 	db	198
   358  00FE16                     __end_of_humid_pos:
   359                           	callstack 0
   360  00FE16                     _temp_pos:
   361                           	callstack 0
   362  00FE16  00                 	db	0
   363  00FE17  84                 	db	132
   364  00FE18                     __end_of_temp_pos:
   365                           	callstack 0
   366  00FE18                     _adafruit_temp_command:
   367                           	callstack 0
   368  00FE18  E3                 	db	227
   369  00FE19                     __end_of_adafruit_temp_command:
   370                           	callstack 0
   371  00FE19                     _adafruit_humid_command:
   372                           	callstack 0
   373  00FE19  E5                 	db	229
   374  00FE1A                     __end_of_adafruit_humid_command:
   375                           	callstack 0
   376  0000                     _ANSELCbits	set	3898
   377  0000                     _ANSELA	set	3896
   378  0000                     _ANSELB	set	3897
   379  0000                     _ANSELC	set	3898
   380  0000                     _SSP2CON2bits	set	3947
   381  0000                     _SSP1STATbits	set	4039
   382  0000                     _SSP1BUF	set	4041
   383  0000                     _SSP1CON2bits	set	4037
   384  0000                     _SSP1STAT	set	4039
   385  0000                     _SSP1CON2	set	4037
   386  0000                     _SSP1CON1	set	4038
   387  0000                     _SSP1ADD	set	4040
   388  0000                     _TRISCbits	set	3988
   389  0000                     _PIR1bits	set	3998
   390  0000                     _RCONbits	set	4048
   391  0000                     _RCREG1	set	4014
   392  0000                     _RCSTA1bits	set	4011
   393  0000                     _TXREG1	set	4013
   394  0000                     _TXSTA1bits	set	4012
   395  0000                     _SPBRGH1	set	4016
   396  0000                     _SPBRG1	set	4015
   397  0000                     _TXSTA1	set	4012
   398  0000                     _RCSTA1	set	4011
   399  0000                     _BAUDCON1	set	4024
   400  0000                     _PIE1bits	set	3997
   401  0000                     _INTCONbits	set	4082
   402  0000                     _INTCON2bits	set	4081
   403  0000                     _WPUB	set	3937
   404  0000                     _TRISC	set	3988
   405  0000                     _TRISB	set	3987
   406  0000                     _TRISA	set	3986
   407  0000                     _LATC	set	3979
   408  0000                     _LATB	set	3978
   409  0000                     _LATA	set	3977
   410  0000                     _OSCTUNE	set	3995
   411  0000                     _OSCCON2	set	4050
   412  0000                     _OSCCON	set	4051
   413  0000                     _PLLRDY	set	32407
   414  00FE1A                     
   415                           ; BSR set to: 0
   416  00FE1A  2F                 	db	47
   417  00FE1B  6E                 	db	110	;'n'
   418  00FE1C  2F                 	db	47
   419  00FE1D  72                 	db	114	;'r'
   420  00FE1E  2A                 	db	42
   421  00FE1F  2A                 	db	42
   422  00FE20  2A                 	db	42
   423  00FE21  2A                 	db	42
   424  00FE22  2A                 	db	42
   425  00FE23  2A                 	db	42
   426  00FE24  2A                 	db	42
   427  00FE25  2A                 	db	42
   428  00FE26  2A                 	db	42
   429  00FE27  2A                 	db	42
   430  00FE28  2A                 	db	42
   431  00FE29  52                 	db	82	;'R'
   432  00FE2A  45                 	db	69	;'E'
   433  00FE2B  41                 	db	65	;'A'
   434  00FE2C  44                 	db	68	;'D'
   435  00FE2D  2A                 	db	42
   436  00FE2E  2A                 	db	42
   437  00FE2F  2A                 	db	42
   438  00FE30  2A                 	db	42
   439  00FE31  2A                 	db	42
   440  00FE32  2A                 	db	42
   441  00FE33  2A                 	db	42
   442  00FE34  2A                 	db	42
   443  00FE35  2A                 	db	42
   444  00FE36  2A                 	db	42
   445  00FE37  2A                 	db	42
   446  00FE38  2A                 	db	42
   447  00FE39  2A                 	db	42
   448  00FE3A  2A                 	db	42
   449  00FE3B  2A                 	db	42
   450  00FE3C  2A                 	db	42
   451  00FE3D  2A                 	db	42
   452  00FE3E  0A                 	db	10
   453  00FE3F  0D                 	db	13
   454  00FE40  00                 	db	0
   455  00FE41                     
   456                           ; BSR set to: 0
   457  00FE41  25                 	db	37
   458  00FE42  73                 	db	115	;'s'
   459  00FE43  20                 	db	32
   460  00FE44  64                 	db	100	;'d'
   461  00FE45  2E                 	db	46
   462  00FE46  20                 	db	32
   463  00FE47  25                 	db	37
   464  00FE48  30                 	db	48	;'0'
   465  00FE49  32                 	db	50	;'2'
   466  00FE4A  58                 	db	88	;'X'
   467  00FE4B  2E                 	db	46
   468  00FE4C  20                 	db	32
   469  00FE4D  25                 	db	37
   470  00FE4E  73                 	db	115	;'s'
   471  00FE4F  20                 	db	32
   472  00FE50  32                 	db	50	;'2'
   473  00FE51  30                 	db	48	;'0'
   474  00FE52  25                 	db	37
   475  00FE53  30                 	db	48	;'0'
   476  00FE54  32                 	db	50	;'2'
   477  00FE55  58                 	db	88	;'X'
   478  00FE56  20                 	db	32
   479  00FE57  6B                 	db	107	;'k'
   480  00FE58  6C                 	db	108	;'l'
   481  00FE59  2E                 	db	46
   482  00FE5A  20                 	db	32
   483  00FE5B  25                 	db	37
   484  00FE5C  30                 	db	48	;'0'
   485  00FE5D  32                 	db	50	;'2'
   486  00FE5E  58                 	db	88	;'X'
   487  00FE5F  3A                 	db	58	;':'
   488  00FE60  25                 	db	37
   489  00FE61  30                 	db	48	;'0'
   490  00FE62  32                 	db	50	;'2'
   491  00FE63  58                 	db	88	;'X'
   492  00FE64  0D                 	db	13
   493  00FE65  0A                 	db	10
   494  00FE66  00                 	db	0
   495  00FE67                     
   496                           ; BSR set to: 0
   497  00FE67  53                 	db	83	;'S'
   498  00FE68  6B                 	db	107	;'k'
   499  00FE69  72                 	db	114	;'r'
   500  00FE6A  69                 	db	105	;'i'
   501  00FE6B  76                 	db	118	;'v'
   502  00FE6C  65                 	db	101	;'e'
   503  00FE6D  72                 	db	114	;'r'
   504  00FE6E  20                 	db	32
   505  00FE6F  74                 	db	116	;'t'
   506  00FE70  69                 	db	105	;'i'
   507  00FE71  6C                 	db	108	;'l'
   508  00FE72  20                 	db	32
   509  00FE73  61                 	db	97	;'a'
   510  00FE74  64                 	db	100	;'d'
   511  00FE75  72                 	db	114	;'r'
   512  00FE76  65                 	db	101	;'e'
   513  00FE77  73                 	db	115	;'s'
   514  00FE78  73                 	db	115	;'s'
   515  00FE79  65                 	db	101	;'e'
   516  00FE7A  3A                 	db	58	;':'
   517  00FE7B  20                 	db	32
   518  00FE7C  25                 	db	37
   519  00FE7D  30                 	db	48	;'0'
   520  00FE7E  32                 	db	50	;'2'
   521  00FE7F  58                 	db	88	;'X'
   522  00FE80  20                 	db	32
   523  00FE81  2D                 	db	45
   524  00FE82  20                 	db	32
   525  00FE83  25                 	db	37
   526  00FE84  64                 	db	100	;'d'
   527  00FE85  0A                 	db	10
   528  00FE86  0D                 	db	13
   529  00FE87  00                 	db	0
   530  00FE88                     
   531                           ; BSR set to: 0
   532  00FE88  53                 	db	83	;'S'
   533  00FE89  6B                 	db	107	;'k'
   534  00FE8A  72                 	db	114	;'r'
   535  00FE8B  69                 	db	105	;'i'
   536  00FE8C  76                 	db	118	;'v'
   537  00FE8D  65                 	db	101	;'e'
   538  00FE8E  72                 	db	114	;'r'
   539  00FE8F  20                 	db	32
   540  00FE90  64                 	db	100	;'d'
   541  00FE91  61                 	db	97	;'a'
   542  00FE92  74                 	db	116	;'t'
   543  00FE93  61                 	db	97	;'a'
   544  00FE94  3A                 	db	58	;':'
   545  00FE95  20                 	db	32
   546  00FE96  25                 	db	37
   547  00FE97  30                 	db	48	;'0'
   548  00FE98  32                 	db	50	;'2'
   549  00FE99  78                 	db	120	;'x'
   550  00FE9A  20                 	db	32
   551  00FE9B  2D                 	db	45
   552  00FE9C  20                 	db	32
   553  00FE9D  25                 	db	37
   554  00FE9E  64                 	db	100	;'d'
   555  00FE9F  20                 	db	32
   556  00FEA0  2D                 	db	45
   557  00FEA1  20                 	db	32
   558  00FEA2  25                 	db	37
   559  00FEA3  63                 	db	99	;'c'
   560  00FEA4  0A                 	db	10
   561  00FEA5  0D                 	db	13
   562  00FEA6  00                 	db	0
   563  00FEA7                     
   564                           ; BSR set to: 0
   565  00FEA7  46                 	db	70	;'F'
   566  00FEA8  65                 	db	101	;'e'
   567  00FEA9  6A                 	db	106	;'j'
   568  00FEAA  6C                 	db	108	;'l'
   569  00FEAB  20                 	db	32
   570  00FEAC  69                 	db	105	;'i'
   571  00FEAD  20                 	db	32
   572  00FEAE  6C                 	db	108	;'l'
   573  00FEAF  61                 	db	97	;'a'
   574  00FEB0  65                 	db	101	;'e'
   575  00FEB1  73                 	db	115	;'s'
   576  00FEB2  6E                 	db	110	;'n'
   577  00FEB3  69                 	db	105	;'i'
   578  00FEB4  6E                 	db	110	;'n'
   579  00FEB5  67                 	db	103	;'g'
   580  00FEB6  20                 	db	32
   581  00FEB7  61                 	db	97	;'a'
   582  00FEB8  66                 	db	102	;'f'
   583  00FEB9  20                 	db	32
   584  00FEBA  64                 	db	100	;'d'
   585  00FEBB  61                 	db	97	;'a'
   586  00FEBC  74                 	db	116	;'t'
   587  00FEBD  61                 	db	97	;'a'
   588  00FEBE  0D                 	db	13
   589  00FEBF  0A                 	db	10
   590  00FEC0  00                 	db	0
   591  00FEC1                     
   592                           ; BSR set to: 0
   593  00FEC1  53                 	db	83	;'S'
   594  00FEC2  6B                 	db	107	;'k'
   595  00FEC3  72                 	db	114	;'r'
   596  00FEC4  69                 	db	105	;'i'
   597  00FEC5  76                 	db	118	;'v'
   598  00FEC6  65                 	db	101	;'e'
   599  00FEC7  72                 	db	114	;'r'
   600  00FEC8  3A                 	db	58	;':'
   601  00FEC9  20                 	db	32
   602  00FECA  61                 	db	97	;'a'
   603  00FECB  64                 	db	100	;'d'
   604  00FECC  72                 	db	114	;'r'
   605  00FECD  65                 	db	101	;'e'
   606  00FECE  73                 	db	115	;'s'
   607  00FECF  73                 	db	115	;'s'
   608  00FED0  65                 	db	101	;'e'
   609  00FED1  3A                 	db	58	;':'
   610  00FED2  20                 	db	32
   611  00FED3  25                 	db	37
   612  00FED4  64                 	db	100	;'d'
   613  00FED5  0A                 	db	10
   614  00FED6  0D                 	db	13
   615  00FED7  00                 	db	0
   616  00FED8                     STR_2:
   617                           
   618                           ; BSR set to: 0
   619  00FED8  48                 	db	72	;'H'
   620  00FED9  61                 	db	97	;'a'
   621  00FEDA  72                 	db	114	;'r'
   622  00FEDB  20                 	db	32
   623  00FEDC  73                 	db	115	;'s'
   624  00FEDD  65                 	db	101	;'e'
   625  00FEDE  6E                 	db	110	;'n'
   626  00FEDF  64                 	db	100	;'d'
   627  00FEE0  74                 	db	116	;'t'
   628  00FEE1  20                 	db	32
   629  00FEE2  73                 	db	115	;'s'
   630  00FEE3  74                 	db	116	;'t'
   631  00FEE4  61                 	db	97	;'a'
   632  00FEE5  72                 	db	114	;'r'
   633  00FEE6  74                 	db	116	;'t'
   634  00FEE7  0A                 	db	10
   635  00FEE8  0D                 	db	13
   636  00FEE9  00                 	db	0
   637  00FEEA                     STR_6:
   638                           
   639                           ; BSR set to: 0
   640  00FEEA  48                 	db	72	;'H'
   641  00FEEB  61                 	db	97	;'a'
   642  00FEEC  72                 	db	114	;'r'
   643  00FEED  20                 	db	32
   644  00FEEE  73                 	db	115	;'s'
   645  00FEEF  65                 	db	101	;'e'
   646  00FEF0  6E                 	db	110	;'n'
   647  00FEF1  64                 	db	100	;'d'
   648  00FEF2  74                 	db	116	;'t'
   649  00FEF3  20                 	db	32
   650  00FEF4  73                 	db	115	;'s'
   651  00FEF5  74                 	db	116	;'t'
   652  00FEF6  6F                 	db	111	;'o'
   653  00FEF7  70                 	db	112	;'p'
   654  00FEF8  0A                 	db	10
   655  00FEF9  0D                 	db	13
   656  00FEFA  00                 	db	0
   657  00FEFB                     STR_1:
   658                           
   659                           ; BSR set to: 0
   660  00FEFB  42                 	db	66	;'B'
   661  00FEFC  75                 	db	117	;'u'
   662  00FEFD  73                 	db	115	;'s'
   663  00FEFE  73                 	db	115	;'s'
   664  00FEFF  65                 	db	101	;'e'
   665  00FF00  6E                 	db	110	;'n'
   666  00FF01  65                 	db	101	;'e'
   667  00FF02  72                 	db	114	;'r'
   668  00FF03  20                 	db	32
   669  00FF04  6B                 	db	107	;'k'
   670  00FF05  6C                 	db	108	;'l'
   671  00FF06  61                 	db	97	;'a'
   672  00FF07  72                 	db	114	;'r'
   673  00FF08  0A                 	db	10
   674  00FF09  0D                 	db	13
   675  00FF0A  00                 	db	0
   676  00FF0B                     
   677                           ; BSR set to: 0
   678  00FF0B  53                 	db	83	;'S'
   679  00FF0C  65                 	db	101	;'e'
   680  00FF0D  6E                 	db	110	;'n'
   681  00FF0E  64                 	db	100	;'d'
   682  00FF0F  74                 	db	116	;'t'
   683  00FF10  65                 	db	101	;'e'
   684  00FF11  3A                 	db	58	;':'
   685  00FF12  20                 	db	32
   686  00FF13  4E                 	db	78	;'N'
   687  00FF14  41                 	db	65	;'A'
   688  00FF15  43                 	db	67	;'C'
   689  00FF16  4B                 	db	75	;'K'
   690  00FF17  0A                 	db	10
   691  00FF18  0D                 	db	13
   692  00FF19  00                 	db	0
   693  00FF1A                     
   694                           ; BSR set to: 0
   695  00FF1A  40                 	db	64	;'@'
   696  00FF1B  48                 	db	72	;'H'
   697  00FF1C  75                 	db	117	;'u'
   698  00FF1D  6D                 	db	109	;'m'
   699  00FF1E  69                 	db	105	;'i'
   700  00FF1F  64                 	db	100	;'d'
   701  00FF20  3A                 	db	58	;':'
   702  00FF21  20                 	db	32
   703  00FF22  25                 	db	37
   704  00FF23  2E                 	db	46
   705  00FF24  31                 	db	49	;'1'
   706  00FF25  66                 	db	102	;'f'
   707  00FF26  25                 	db	37
   708  00FF27  25                 	db	37
   709  00FF28  00                 	db	0
   710  00FF29                     
   711                           ; BSR set to: 0
   712  00FF29  40                 	db	64	;'@'
   713  00FF2A  40                 	db	64	;'@'
   714  00FF2B  54                 	db	84	;'T'
   715  00FF2C  6D                 	db	109	;'m'
   716  00FF2D  70                 	db	112	;'p'
   717  00FF2E  3A                 	db	58	;':'
   718  00FF2F  20                 	db	32
   719  00FF30  25                 	db	37
   720  00FF31  2E                 	db	46
   721  00FF32  31                 	db	49	;'1'
   722  00FF33  66                 	db	102	;'f'
   723  00FF34  43                 	db	67	;'C'
   724  00FF35  00                 	db	0
   725  00FF36  00                 	db	0
   726  00FF37                     
   727                           ; BSR set to: 0
   728  00FF37  53                 	db	83	;'S'
   729  00FF38  65                 	db	101	;'e'
   730  00FF39  6E                 	db	110	;'n'
   731  00FF3A  64                 	db	100	;'d'
   732  00FF3B  74                 	db	116	;'t'
   733  00FF3C  65                 	db	101	;'e'
   734  00FF3D  3A                 	db	58	;':'
   735  00FF3E  20                 	db	32
   736  00FF3F  41                 	db	65	;'A'
   737  00FF40  43                 	db	67	;'C'
   738  00FF41  4B                 	db	75	;'K'
   739  00FF42  0A                 	db	10
   740  00FF43  0D                 	db	13
   741  00FF44  00                 	db	0
   742  00FF45                     
   743                           ; BSR set to: 0
   744  00FF45  4C                 	db	76	;'L'
   745  00FF46  61                 	db	97	;'a'
   746  00FF47  65                 	db	101	;'e'
   747  00FF48  73                 	db	115	;'s'
   748  00FF49  74                 	db	116	;'t'
   749  00FF4A  65                 	db	101	;'e'
   750  00FF4B  3A                 	db	58	;':'
   751  00FF4C  20                 	db	32
   752  00FF4D  25                 	db	37
   753  00FF4E  64                 	db	100	;'d'
   754  00FF4F  0A                 	db	10
   755  00FF50  0D                 	db	13
   756  00FF51  00                 	db	0
   757  00FF52                     
   758                           ; BSR set to: 0
   759  00FF52  53                 	db	83	;'S'
   760  00FF53  65                 	db	101	;'e'
   761  00FF54  70                 	db	112	;'p'
   762  00FF55  74                 	db	116	;'t'
   763  00FF56  65                 	db	101	;'e'
   764  00FF57  6D                 	db	109	;'m'
   765  00FF58  62                 	db	98	;'b'
   766  00FF59  65                 	db	101	;'e'
   767  00FF5A  72                 	db	114	;'r'
   768  00FF5B  00                 	db	0
   769  00FF5C  00                 	db	0
   770  00FF5D                     
   771                           ; BSR set to: 0
   772  00FF5D  44                 	db	68	;'D'
   773  00FF5E  65                 	db	101	;'e'
   774  00FF5F  63                 	db	99	;'c'
   775  00FF60  65                 	db	101	;'e'
   776  00FF61  6D                 	db	109	;'m'
   777  00FF62  62                 	db	98	;'b'
   778  00FF63  65                 	db	101	;'e'
   779  00FF64  72                 	db	114	;'r'
   780  00FF65  00                 	db	0
   781  00FF66  00                 	db	0
   782  00FF67                     
   783                           ; BSR set to: 0
   784  00FF67  4E                 	db	78	;'N'
   785  00FF68  6F                 	db	111	;'o'
   786  00FF69  76                 	db	118	;'v'
   787  00FF6A  65                 	db	101	;'e'
   788  00FF6B  6D                 	db	109	;'m'
   789  00FF6C  62                 	db	98	;'b'
   790  00FF6D  65                 	db	101	;'e'
   791  00FF6E  72                 	db	114	;'r'
   792  00FF6F  00                 	db	0
   793  00FF70  00                 	db	0
   794  00FF71                     
   795                           ; BSR set to: 0
   796  00FF71  53                 	db	83	;'S'
   797  00FF72  6F                 	db	111	;'o'
   798  00FF73  65                 	db	101	;'e'
   799  00FF74  6E                 	db	110	;'n'
   800  00FF75  64                 	db	100	;'d'
   801  00FF76  61                 	db	97	;'a'
   802  00FF77  67                 	db	103	;'g'
   803  00FF78  00                 	db	0
   804  00FF79  00                 	db	0
   805  00FF7A                     
   806                           ; BSR set to: 0
   807  00FF7A  4C                 	db	76	;'L'
   808  00FF7B  6F                 	db	111	;'o'
   809  00FF7C  65                 	db	101	;'e'
   810  00FF7D  72                 	db	114	;'r'
   811  00FF7E  64                 	db	100	;'d'
   812  00FF7F  61                 	db	97	;'a'
   813  00FF80  67                 	db	103	;'g'
   814  00FF81  00                 	db	0
   815  00FF82  00                 	db	0
   816  00FF83                     
   817                           ; BSR set to: 0
   818  00FF83  54                 	db	84	;'T'
   819  00FF84  69                 	db	105	;'i'
   820  00FF85  72                 	db	114	;'r'
   821  00FF86  73                 	db	115	;'s'
   822  00FF87  64                 	db	100	;'d'
   823  00FF88  61                 	db	97	;'a'
   824  00FF89  67                 	db	103	;'g'
   825  00FF8A  00                 	db	0
   826  00FF8B  00                 	db	0
   827  00FF8C                     
   828                           ; BSR set to: 0
   829  00FF8C  54                 	db	84	;'T'
   830  00FF8D  6F                 	db	111	;'o'
   831  00FF8E  72                 	db	114	;'r'
   832  00FF8F  73                 	db	115	;'s'
   833  00FF90  64                 	db	100	;'d'
   834  00FF91  61                 	db	97	;'a'
   835  00FF92  67                 	db	103	;'g'
   836  00FF93  00                 	db	0
   837  00FF94  00                 	db	0
   838  00FF95                     
   839                           ; BSR set to: 0
   840  00FF95  46                 	db	70	;'F'
   841  00FF96  65                 	db	101	;'e'
   842  00FF97  62                 	db	98	;'b'
   843  00FF98  72                 	db	114	;'r'
   844  00FF99  75                 	db	117	;'u'
   845  00FF9A  61                 	db	97	;'a'
   846  00FF9B  72                 	db	114	;'r'
   847  00FF9C  00                 	db	0
   848  00FF9D  00                 	db	0
   849  00FF9E                     
   850                           ; BSR set to: 0
   851  00FF9E  4F                 	db	79	;'O'
   852  00FF9F  6B                 	db	107	;'k'
   853  00FFA0  74                 	db	116	;'t'
   854  00FFA1  6F                 	db	111	;'o'
   855  00FFA2  62                 	db	98	;'b'
   856  00FFA3  65                 	db	101	;'e'
   857  00FFA4  72                 	db	114	;'r'
   858  00FFA5  00                 	db	0
   859  00FFA6  00                 	db	0
   860  00FFA7                     
   861                           ; BSR set to: 0
   862  00FFA7  46                 	db	70	;'F'
   863  00FFA8  72                 	db	114	;'r'
   864  00FFA9  65                 	db	101	;'e'
   865  00FFAA  64                 	db	100	;'d'
   866  00FFAB  61                 	db	97	;'a'
   867  00FFAC  67                 	db	103	;'g'
   868  00FFAD  00                 	db	0
   869  00FFAE  00                 	db	0
   870  00FFAF                     
   871                           ; BSR set to: 0
   872  00FFAF  4D                 	db	77	;'M'
   873  00FFB0  61                 	db	97	;'a'
   874  00FFB1  6E                 	db	110	;'n'
   875  00FFB2  64                 	db	100	;'d'
   876  00FFB3  61                 	db	97	;'a'
   877  00FFB4  67                 	db	103	;'g'
   878  00FFB5  00                 	db	0
   879  00FFB6  00                 	db	0
   880  00FFB7                     
   881                           ; BSR set to: 0
   882  00FFB7  4F                 	db	79	;'O'
   883  00FFB8  6E                 	db	110	;'n'
   884  00FFB9  73                 	db	115	;'s'
   885  00FFBA  64                 	db	100	;'d'
   886  00FFBB  61                 	db	97	;'a'
   887  00FFBC  67                 	db	103	;'g'
   888  00FFBD  00                 	db	0
   889  00FFBE  00                 	db	0
   890  00FFBF                     
   891                           ; BSR set to: 0
   892  00FFBF  4A                 	db	74	;'J'
   893  00FFC0  61                 	db	97	;'a'
   894  00FFC1  6E                 	db	110	;'n'
   895  00FFC2  75                 	db	117	;'u'
   896  00FFC3  61                 	db	97	;'a'
   897  00FFC4  72                 	db	114	;'r'
   898  00FFC5  00                 	db	0
   899  00FFC6  00                 	db	0
   900  00FFC7                     
   901                           ; BSR set to: 0
   902  00FFC7  41                 	db	65	;'A'
   903  00FFC8  75                 	db	117	;'u'
   904  00FFC9  67                 	db	103	;'g'
   905  00FFCA  75                 	db	117	;'u'
   906  00FFCB  73                 	db	115	;'s'
   907  00FFCC  74                 	db	116	;'t'
   908  00FFCD  00                 	db	0
   909  00FFCE  00                 	db	0
   910  00FFCF                     
   911                           ; BSR set to: 0
   912  00FFCF  41                 	db	65	;'A'
   913  00FFD0  70                 	db	112	;'p'
   914  00FFD1  72                 	db	114	;'r'
   915  00FFD2  69                 	db	105	;'i'
   916  00FFD3  6C                 	db	108	;'l'
   917  00FFD4  00                 	db	0
   918  00FFD5  00                 	db	0
   919  00FFD6                     
   920                           ; BSR set to: 0
   921  00FFD6  4D                 	db	77	;'M'
   922  00FFD7  61                 	db	97	;'a'
   923  00FFD8  72                 	db	114	;'r'
   924  00FFD9  74                 	db	116	;'t'
   925  00FFDA  73                 	db	115	;'s'
   926  00FFDB  00                 	db	0
   927  00FFDC  00                 	db	0
   928  00FFDD                     
   929                           ; BSR set to: 0
   930  00FFDD  4A                 	db	74	;'J'
   931  00FFDE  75                 	db	117	;'u'
   932  00FFDF  6C                 	db	108	;'l'
   933  00FFE0  69                 	db	105	;'i'
   934  00FFE1  00                 	db	0
   935  00FFE2  00                 	db	0
   936  00FFE3                     
   937                           ; BSR set to: 0
   938  00FFE3  4A                 	db	74	;'J'
   939  00FFE4  75                 	db	117	;'u'
   940  00FFE5  6E                 	db	110	;'n'
   941  00FFE6  69                 	db	105	;'i'
   942  00FFE7  00                 	db	0
   943  00FFE8  00                 	db	0
   944  00FFE9                     
   945                           ; BSR set to: 0
   946  00FFE9  4D                 	db	77	;'M'
   947  00FFEA  61                 	db	97	;'a'
   948  00FFEB  6A                 	db	106	;'j'
   949  00FFEC  00                 	db	0
   950  00FFED  00                 	db	0
   951  00FFEE                     STR_16:
   952                           
   953                           ; BSR set to: 0
   954  00FFEE  25                 	db	37
   955  00FFEF  73                 	db	115	;'s'
   956  00FFF0  0D                 	db	13
   957  00FFF1  0A                 	db	10
   958  00FFF2  00                 	db	0
   959  00FFF3                     
   960                           ; BSR set to: 0
   961  00FFF3  25                 	db	37
   962  00FFF4  30                 	db	48	;'0'
   963  00FFF5  32                 	db	50	;'2'
   964  00FFF6  48                 	db	72	;'H'
   965  00FFF7  00                 	db	0
   966  00FFF8                     
   967                           ; BSR set to: 0
   968  00FFF8  3F                 	db	63	;'?'
   969  00FFF9  00                 	db	0
   970  00FFFA  00                 	db	0
   971  00FFFB                     STR_21:
   972                           
   973                           ; BSR set to: 0
   974  00FFFB  25                 	db	37
   975  00FFFC  73                 	db	115	;'s'
   976  00FFFD  00                 	db	0
   977  00FFFE  00                 	db	0	; dummy byte at the end
   978  0000                     
   979                           ; #config settings
   980                           
   981                           	psect	cinit
   982  0016E8                     __pcinit:
   983                           	callstack 0
   984  0016E8                     start_initialization:
   985                           	callstack 0
   986  0016E8                     __initialization:
   987                           	callstack 0
   988                           
   989                           ; Initialize objects allocated to BANK1 (91 bytes)
   990                           ; load TBLPTR registers with __pidataBANK1
   991  0016E8  0E96               	movlw	low __pidataBANK1
   992  0016EA  6EF6               	movwf	tblptrl,c
   993  0016EC  0E18               	movlw	high __pidataBANK1
   994  0016EE  6EF7               	movwf	tblptrh,c
   995  0016F0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   996  0016F2  6EF8               	movwf	tblptru,c
   997  0016F4  EE01  F097         	lfsr	0,__pdataBANK1
   998  0016F8  EE10 F05B          	lfsr	1,91
   999  0016FC                     copy_data0:
  1000  0016FC  0009               	tblrd		*+
  1001  0016FE  CFF5 FFEE          	movff	tablat,postinc0
  1002  001702  50E5               	movf	postdec1,w,c
  1003  001704  50E1               	movf	fsr1l,w,c
  1004  001706  E1FA               	bnz	copy_data0
  1005                           
  1006                           ; Initialize objects allocated to BANK0 (20 bytes)
  1007                           ; load TBLPTR registers with __pidataBANK0
  1008  001708  0E70               	movlw	low __pidataBANK0
  1009  00170A  6EF6               	movwf	tblptrl,c
  1010  00170C  0E1C               	movlw	high __pidataBANK0
  1011  00170E  6EF7               	movwf	tblptrh,c
  1012  001710  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1013  001712  6EF8               	movwf	tblptru,c
  1014  001714  EE00  F0E7         	lfsr	0,__pdataBANK0
  1015  001718  EE10 F014          	lfsr	1,20
  1016  00171C                     copy_data1:
  1017  00171C  0009               	tblrd		*+
  1018  00171E  CFF5 FFEE          	movff	tablat,postinc0
  1019  001722  50E5               	movf	postdec1,w,c
  1020  001724  50E1               	movf	fsr1l,w,c
  1021  001726  E1FA               	bnz	copy_data1
  1022                           
  1023                           ; Clear objects allocated to BANK2 (128 bytes)
  1024  001728  EE02  F000         	lfsr	0,__pbssBANK2
  1025  00172C  0E80               	movlw	128
  1026  00172E                     clear_0:
  1027  00172E  6AEE               	clrf	postinc0,c
  1028  001730  06E8               	decf	wreg,f,c
  1029  001732  E1FD               	bnz	clear_0
  1030                           
  1031                           ; Clear objects allocated to BANK1 (151 bytes)
  1032  001734  EE01  F000         	lfsr	0,__pbssBANK1
  1033  001738  0E97               	movlw	151
  1034  00173A                     clear_1:
  1035  00173A  6AEE               	clrf	postinc0,c
  1036  00173C  06E8               	decf	wreg,f,c
  1037  00173E  E1FD               	bnz	clear_1
  1038                           
  1039                           ; Clear objects allocated to BANK0 (82 bytes)
  1040  001740  EE00  F060         	lfsr	0,__pbssBANK0
  1041  001744  0E52               	movlw	82
  1042  001746                     clear_2:
  1043  001746  6AEE               	clrf	postinc0,c
  1044  001748  06E8               	decf	wreg,f,c
  1045  00174A  E1FD               	bnz	clear_2
  1046                           
  1047                           ; Clear objects allocated to COMRAM (4 bytes)
  1048  00174C  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1049  00174E  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1050  001750  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1051  001752  6A57               	clrf	__pbssCOMRAM& (0+255),c
  1052  001754                     end_of_initialization:
  1053                           	callstack 0
  1054  001754                     __end_of__initialization:
  1055                           	callstack 0
  1056  001754  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1057  001756  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1058  001758  0100               	movlb	0
  1059  00175A  EF25  F00B         	goto	_main	;jump to C main() function
  1060                           
  1061                           	psect	bssCOMRAM
  1062  000057                     __pbssCOMRAM:
  1063                           	callstack 0
  1064  000057                     _flags:
  1065                           	callstack 0
  1066  000057                     	ds	2
  1067  000059                     _eusart1RxTail:
  1068                           	callstack 0
  1069  000059                     	ds	1
  1070  00005A                     _eusart1RxHead:
  1071                           	callstack 0
  1072  00005A                     	ds	1
  1073                           
  1074                           	psect	bssBANK0
  1075  000060                     __pbssBANK0:
  1076                           	callstack 0
  1077  000060                     	ds	4
  1078  000064                     _data_out:
  1079                           	callstack 0
  1080  000064                     	ds	4
  1081  000068                     _nout:
  1082                           	callstack 0
  1083  000068                     	ds	2
  1084  00006A                     _width:
  1085                           	callstack 0
  1086  00006A                     	ds	2
  1087  00006C                     _prec:
  1088                           	callstack 0
  1089  00006C                     	ds	2
  1090  00006E                     _EUSART1_ErrorHandler:
  1091                           	callstack 0
  1092  00006E                     	ds	2
  1093  000070                     _EUSART1_OverrunErrorHandler:
  1094                           	callstack 0
  1095  000070                     	ds	2
  1096  000072                     _EUSART1_FramingErrorHandler:
  1097                           	callstack 0
  1098  000072                     	ds	2
  1099  000074                     _EUSART1_RxDefaultInterruptHandler:
  1100                           	callstack 0
  1101  000074                     	ds	2
  1102  000076                     _EUSART1_TxDefaultInterruptHandler:
  1103                           	callstack 0
  1104  000076                     	ds	2
  1105  000078                     _display_toogle:
  1106                           	callstack 0
  1107  000078                     	ds	1
  1108  000079                     _error:
  1109                           	callstack 0
  1110  000079                     	ds	1
  1111  00007A                     _debug:
  1112                           	callstack 0
  1113  00007A                     	ds	1
  1114  00007B                     _eusart1RxLastError:
  1115                           	callstack 0
  1116  00007B                     	ds	1
  1117  00007C                     _eusart1RxCount:
  1118                           	callstack 0
  1119  00007C                     	ds	1
  1120  00007D                     _eusart1TxBufferRemaining:
  1121                           	callstack 0
  1122  00007D                     	ds	1
  1123  00007E                     _eusart1TxTail:
  1124                           	callstack 0
  1125  00007E                     	ds	1
  1126  00007F                     _eusart1TxHead:
  1127                           	callstack 0
  1128  00007F                     	ds	1
  1129  000080                     _day_string:
  1130                           	callstack 0
  1131  000080                     	ds	20
  1132  000094                     _month_string:
  1133                           	callstack 0
  1134  000094                     	ds	20
  1135  0000A8                     _temperature_read:
  1136                           	callstack 0
  1137  0000A8                     	ds	5
  1138  0000AD                     _humid_read:
  1139                           	callstack 0
  1140  0000AD                     	ds	5
  1141                           
  1142                           	psect	dataBANK0
  1143  0000E7                     __pdataBANK0:
  1144                           	callstack 0
  1145  0000E7                     stoa@F1146:
  1146                           	callstack 0
  1147  0000E7                     	ds	7
  1148  0000EE                     _minutes:
  1149                           	callstack 0
  1150  0000EE                     	ds	2
  1151  0000F0                     _display_addr:
  1152                           	callstack 0
  1153  0000F0                     	ds	1
  1154  0000F1                     _precission:
  1155                           	callstack 0
  1156  0000F1                     	ds	1
  1157  0000F2                     _display_init:
  1158                           	callstack 0
  1159  0000F2                     	ds	4
  1160  0000F6                     _second_line:
  1161                           	callstack 0
  1162  0000F6                     	ds	2
  1163  0000F8                     _first_line:
  1164                           	callstack 0
  1165  0000F8                     	ds	2
  1166  0000FA                     _rtc_test:
  1167                           	callstack 0
  1168  0000FA                     	ds	1
  1169                           
  1170                           	psect	bssBANK1
  1171  000100                     __pbssBANK1:
  1172                           	callstack 0
  1173  000100                     _eusart1RxStatusBuffer:
  1174                           	callstack 0
  1175  000100                     	ds	64
  1176  000140                     _tmp_string:
  1177                           	callstack 0
  1178  000140                     	ds	15
  1179  00014F                     _rtc_buffer:
  1180                           	callstack 0
  1181  00014F                     	ds	40
  1182  000177                     _dbuf:
  1183                           	callstack 0
  1184  000177                     	ds	32
  1185                           
  1186                           	psect	dataBANK1
  1187  000197                     __pdataBANK1:
  1188                           	callstack 0
  1189  000197                     _Aring:
  1190                           	callstack 0
  1191  000197                     	ds	11
  1192  0001A2                     _aring:
  1193                           	callstack 0
  1194  0001A2                     	ds	11
  1195  0001AD                     _O_slash:
  1196                           	callstack 0
  1197  0001AD                     	ds	11
  1198  0001B8                     _oslash:
  1199                           	callstack 0
  1200  0001B8                     	ds	11
  1201  0001C3                     _AElig:
  1202                           	callstack 0
  1203  0001C3                     	ds	11
  1204  0001CE                     _aelig:
  1205                           	callstack 0
  1206  0001CE                     	ds	11
  1207  0001D9                     _custom_char0:
  1208                           	callstack 0
  1209  0001D9                     	ds	11
  1210  0001E4                     _hello_string:
  1211                           	callstack 0
  1212  0001E4                     	ds	14
  1213                           
  1214                           	psect	bssBANK2
  1215  000200                     __pbssBANK2:
  1216                           	callstack 0
  1217  000200                     _eusart1RxBuffer:
  1218                           	callstack 0
  1219  000200                     	ds	64
  1220  000240                     _eusart1TxBuffer:
  1221                           	callstack 0
  1222  000240                     	ds	64
  1223                           
  1224                           	psect	cstackBANK0
  1225  0000B2                     __pcstackBANK0:
  1226                           	callstack 0
  1227  0000B2                     vfpfcnvrt@ll:
  1228                           	callstack 0
  1229                           
  1230                           ; 8 bytes @ 0x0
  1231  0000B2                     	ds	8
  1232  0000BA                     vfpfcnvrt@llu:
  1233                           	callstack 0
  1234                           
  1235                           ; 8 bytes @ 0x8
  1236  0000BA                     	ds	8
  1237  0000C2                     vfpfcnvrt@cp:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x10
  1241  0000C2                     	ds	2
  1242  0000C4                     vfpfcnvrt@done:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x12
  1246  0000C4                     	ds	2
  1247  0000C6                     _vfpfcnvrt$1873:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x14
  1251  0000C6                     	ds	2
  1252  0000C8                     vfpfcnvrt@c:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x16
  1256  0000C8                     	ds	1
  1257  0000C9                     ?_vfprintf:
  1258                           	callstack 0
  1259  0000C9                     vfprintf@fp:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x17
  1263  0000C9                     	ds	2
  1264  0000CB                     vfprintf@fmt:
  1265                           	callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x19
  1268  0000CB                     	ds	2
  1269  0000CD                     vfprintf@ap:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x1B
  1273  0000CD                     	ds	2
  1274  0000CF                     ?_printf:
  1275                           	callstack 0
  1276  0000CF                     printf@fmt:
  1277                           	callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x1D
  1280  0000CF                     	ds	14
  1281  0000DD                     i2c_write_serial@data:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x2B
  1285  0000DD                     	ds	2
  1286  0000DF                     i2c_write_serial@length:
  1287                           	callstack 0
  1288                           
  1289                           ; 1 bytes @ 0x2D
  1290  0000DF                     	ds	1
  1291  0000E0                     ??_i2c_write_serial:
  1292                           
  1293                           ; 1 bytes @ 0x2E
  1294  0000E0                     	ds	2
  1295  0000E2                     i2c_write_serial@addr:
  1296                           	callstack 0
  1297                           
  1298                           ; 1 bytes @ 0x30
  1299  0000E2                     	ds	1
  1300  0000E3                     i2c_write_serial@targetAddr:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x31
  1304  0000E3                     	ds	1
  1305  0000E4                     i2c_write_serial@i:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x32
  1309  0000E4                     	ds	1
  1310  0000E5                     ??_main:
  1311                           
  1312                           ; 1 bytes @ 0x33
  1313  0000E5                     	ds	2
  1314                           
  1315                           	psect	cstackCOMRAM
  1316  000001                     __pcstackCOMRAM:
  1317                           	callstack 0
  1318  000001                     ??_INTERRUPT_InterruptManager:
  1319  000001                     
  1320                           ; 1 bytes @ 0x0
  1321  000001                     	ds	4
  1322  000005                     ?_isspace:
  1323                           	callstack 0
  1324  000005                     ?_isdigit:
  1325                           	callstack 0
  1326  000005                     ?_strlen:
  1327                           	callstack 0
  1328  000005                     ?_isupper:
  1329                           	callstack 0
  1330  000005                     ?_isalpha:
  1331                           	callstack 0
  1332  000005                     ?_islower:
  1333                           	callstack 0
  1334  000005                     ?___wmul:
  1335                           	callstack 0
  1336  000005                     ?___aodiv:
  1337                           	callstack 0
  1338  000005                     ?___aomod:
  1339                           	callstack 0
  1340  000005                     EUSART1_Write@txData:
  1341                           	callstack 0
  1342  000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1343                           	callstack 0
  1344  000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1345                           	callstack 0
  1346  000005                     EUSART1_SetErrorHandler@interruptHandler:
  1347                           	callstack 0
  1348  000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1349                           	callstack 0
  1350  000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1351                           	callstack 0
  1352  000005                     ___wmul@multiplier:
  1353                           	callstack 0
  1354  000005                     isdigit@c:
  1355                           	callstack 0
  1356  000005                     isspace@c:
  1357                           	callstack 0
  1358  000005                     isalpha@c:
  1359                           	callstack 0
  1360  000005                     isupper@c:
  1361                           	callstack 0
  1362  000005                     strlen@s:
  1363                           	callstack 0
  1364  000005                     islower@c:
  1365                           	callstack 0
  1366  000005                     ___aodiv@dividend:
  1367                           	callstack 0
  1368  000005                     ___aomod@dividend:
  1369                           	callstack 0
  1370                           
  1371                           ; 8 bytes @ 0x4
  1372  000005                     	ds	1
  1373  000006                     putch@txData:
  1374                           	callstack 0
  1375                           
  1376                           ; 1 bytes @ 0x5
  1377  000006                     	ds	1
  1378  000007                     ??_isspace:
  1379  000007                     ??_isdigit:
  1380  000007                     ??_isupper:
  1381  000007                     ??_isalpha:
  1382  000007                     ??_islower:
  1383  000007                     ___wmul@multiplicand:
  1384                           	callstack 0
  1385  000007                     fputc@c:
  1386                           	callstack 0
  1387  000007                     strlen@a:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x6
  1391  000007                     	ds	2
  1392  000009                     ___wmul@product:
  1393                           	callstack 0
  1394  000009                     fputc@fp:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x8
  1398  000009                     	ds	2
  1399  00000B                     ??_fputc:
  1400  00000B                     ?_toupper:
  1401                           	callstack 0
  1402  00000B                     _isspace$1737:
  1403                           	callstack 0
  1404  00000B                     toupper@c:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0xA
  1408  00000B                     	ds	1
  1409  00000C                     ?_atoi:
  1410                           	callstack 0
  1411  00000C                     atoi@s:
  1412                           	callstack 0
  1413                           
  1414                           ; 2 bytes @ 0xB
  1415  00000C                     	ds	1
  1416  00000D                     ??_toupper:
  1417  00000D                     ___aodiv@divisor:
  1418                           	callstack 0
  1419  00000D                     ___aomod@divisor:
  1420                           	callstack 0
  1421                           
  1422                           ; 8 bytes @ 0xC
  1423  00000D                     	ds	1
  1424  00000E                     ??_atoi:
  1425                           
  1426                           ; 1 bytes @ 0xD
  1427  00000E                     	ds	2
  1428  000010                     ?_ctoa:
  1429                           	callstack 0
  1430  000010                     ?_stoa:
  1431                           	callstack 0
  1432  000010                     ctoa@fp:
  1433                           	callstack 0
  1434  000010                     stoa@fp:
  1435                           	callstack 0
  1436  000010                     fputs@s:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0xF
  1440  000010                     	ds	1
  1441  000011                     _toupper$1951:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x10
  1445  000011                     	ds	1
  1446  000012                     ctoa@c:
  1447                           	callstack 0
  1448  000012                     atoi@neg:
  1449                           	callstack 0
  1450  000012                     stoa@s:
  1451                           	callstack 0
  1452  000012                     fputs@fp:
  1453                           	callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x11
  1456  000012                     	ds	1
  1457  000013                     ??_ctoa:
  1458                           
  1459                           ; 1 bytes @ 0x12
  1460  000013                     	ds	1
  1461  000014                     ??_stoa:
  1462  000014                     fputs@c:
  1463                           	callstack 0
  1464  000014                     _atoi$1719:
  1465                           	callstack 0
  1466  000014                     ctoa@l:
  1467                           	callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x13
  1470  000014                     	ds	1
  1471  000015                     ___aodiv@counter:
  1472                           	callstack 0
  1473  000015                     ___aomod@counter:
  1474                           	callstack 0
  1475  000015                     fputs@i:
  1476                           	callstack 0
  1477  000015                     stoa@nuls:
  1478                           	callstack 0
  1479                           
  1480                           ; 7 bytes @ 0x14
  1481  000015                     	ds	1
  1482  000016                     ___aodiv@sign:
  1483                           	callstack 0
  1484  000016                     ___aomod@sign:
  1485                           	callstack 0
  1486  000016                     _atoi$1721:
  1487                           	callstack 0
  1488  000016                     ctoa@w:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x15
  1492  000016                     	ds	1
  1493  000017                     ?_abs:
  1494                           	callstack 0
  1495  000017                     ?_pad:
  1496                           	callstack 0
  1497  000017                     pad@fp:
  1498                           	callstack 0
  1499  000017                     abs@a:
  1500                           	callstack 0
  1501  000017                     ___aodiv@quotient:
  1502                           	callstack 0
  1503                           
  1504                           ; 8 bytes @ 0x16
  1505  000017                     	ds	1
  1506  000018                     _atoi$1720:
  1507                           	callstack 0
  1508                           
  1509                           ; 1 bytes @ 0x17
  1510  000018                     	ds	1
  1511  000019                     ??_abs:
  1512  000019                     atoi@n:
  1513                           	callstack 0
  1514  000019                     pad@buf:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x18
  1518  000019                     	ds	2
  1519  00001B                     pad@p:
  1520                           	callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x1A
  1523  00001B                     	ds	1
  1524  00001C                     stoa@i:
  1525                           	callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x1B
  1528  00001C                     	ds	1
  1529  00001D                     ??_pad:
  1530                           
  1531                           ; 1 bytes @ 0x1C
  1532  00001D                     	ds	1
  1533  00001E                     pad@i:
  1534                           	callstack 0
  1535  00001E                     stoa@w:
  1536                           	callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x1D
  1539  00001E                     	ds	2
  1540  000020                     pad@w:
  1541                           	callstack 0
  1542  000020                     stoa@cp:
  1543                           	callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x1F
  1546  000020                     	ds	2
  1547  000022                     ?_dtoa:
  1548                           	callstack 0
  1549  000022                     ?_xtoa:
  1550                           	callstack 0
  1551  000022                     dtoa@fp:
  1552                           	callstack 0
  1553  000022                     stoa@p:
  1554                           	callstack 0
  1555  000022                     xtoa@fp:
  1556                           	callstack 0
  1557                           
  1558                           ; 2 bytes @ 0x21
  1559  000022                     	ds	2
  1560  000024                     stoa@l:
  1561                           	callstack 0
  1562  000024                     dtoa@d:
  1563                           	callstack 0
  1564  000024                     xtoa@d:
  1565                           	callstack 0
  1566                           
  1567                           ; 8 bytes @ 0x23
  1568  000024                     	ds	8
  1569  00002C                     ??_dtoa:
  1570  00002C                     xtoa@x:
  1571                           	callstack 0
  1572                           
  1573                           ; 1 bytes @ 0x2B
  1574  00002C                     	ds	1
  1575  00002D                     ??_xtoa:
  1576                           
  1577                           ; 1 bytes @ 0x2C
  1578  00002D                     	ds	7
  1579  000034                     _dtoa$1836:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x33
  1583  000034                     	ds	1
  1584  000035                     _xtoa$1858:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x34
  1588  000035                     	ds	1
  1589  000036                     dtoa@p:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x35
  1593  000036                     	ds	1
  1594  000037                     _xtoa$1859:
  1595                           	callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x36
  1598  000037                     	ds	1
  1599  000038                     dtoa@w:
  1600                           	callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x37
  1603  000038                     	ds	1
  1604  000039                     xtoa@p:
  1605                           	callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x38
  1608  000039                     	ds	1
  1609  00003A                     dtoa@s:
  1610                           	callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x39
  1613  00003A                     	ds	1
  1614  00003B                     xtoa@w:
  1615                           	callstack 0
  1616                           
  1617                           ; 2 bytes @ 0x3A
  1618  00003B                     	ds	1
  1619  00003C                     dtoa@n:
  1620                           	callstack 0
  1621                           
  1622                           ; 8 bytes @ 0x3B
  1623  00003C                     	ds	1
  1624  00003D                     xtoa@n:
  1625                           	callstack 0
  1626                           
  1627                           ; 8 bytes @ 0x3C
  1628  00003D                     	ds	7
  1629  000044                     dtoa@i:
  1630                           	callstack 0
  1631                           
  1632                           ; 2 bytes @ 0x43
  1633  000044                     	ds	1
  1634  000045                     xtoa@i:
  1635                           	callstack 0
  1636                           
  1637                           ; 2 bytes @ 0x44
  1638  000045                     	ds	2
  1639  000047                     xtoa@c:
  1640                           	callstack 0
  1641                           
  1642                           ; 2 bytes @ 0x46
  1643  000047                     	ds	2
  1644  000049                     ?_vfpfcnvrt:
  1645                           	callstack 0
  1646  000049                     vfpfcnvrt@fp:
  1647                           	callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x48
  1650  000049                     	ds	2
  1651  00004B                     vfpfcnvrt@fmt:
  1652                           	callstack 0
  1653                           
  1654                           ; 2 bytes @ 0x4A
  1655  00004B                     	ds	2
  1656  00004D                     vfpfcnvrt@ap:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x4C
  1660  00004D                     	ds	2
  1661  00004F                     ??_vfpfcnvrt:
  1662                           
  1663                           ; 1 bytes @ 0x4E
  1664  00004F                     	ds	4
  1665  000053                     vfprintf@cfmt:
  1666                           	callstack 0
  1667                           
  1668                           ; 2 bytes @ 0x52
  1669  000053                     	ds	2
  1670  000055                     printf@ap:
  1671                           	callstack 0
  1672                           
  1673                           ; 2 bytes @ 0x54
  1674  000055                     	ds	2
  1675                           
  1676 ;;
  1677 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1678 ;;
  1679 ;; *************** function _main *****************
  1680 ;; Defined at:
  1681 ;;		line 32 in file "main.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;Total ram usage:        2 bytes
  1700 ;; Hardware stack levels required when called: 14
  1701 ;; This function calls:
  1702 ;;		_EUSART1_Initialize
  1703 ;;		_SYSTEM_Initialize
  1704 ;;		_i2c_init
  1705 ;;		_i2c_write_serial
  1706 ;; This function is called by:
  1707 ;;		Startup code after reset
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text0
  1712  00164A                     __ptext0:
  1713                           	callstack 0
  1714  00164A                     _main:
  1715                           	callstack 17
  1716  00164A                     
  1717                           ;main.c: 35:     SYSTEM_Initialize();
  1718  00164A  EC42  F00E         	call	_SYSTEM_Initialize	;wreg free
  1719                           
  1720                           ;main.c: 36:     EUSART1_Initialize();
  1721  00164E  ECAF  F00B         	call	_EUSART1_Initialize	;wreg free
  1722  001652                     
  1723                           ;main.c: 37:     INTCONbits.GIE = 1;
  1724  001652  8EF2               	bsf	242,7,c	;volatile
  1725  001654                     
  1726                           ;main.c: 38:     INTCONbits.PEIE = 1;
  1727  001654  8CF2               	bsf	242,6,c	;volatile
  1728  001656                     
  1729                           ;main.c: 40:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  1730  001656  0EF4               	movlw	244
  1731  001658  0100               	movlb	0	; () banked
  1732  00165A  6FE6               	movwf	(??_main+1)& (0+255),b
  1733  00165C  0E82               	movlw	130
  1734  00165E  6FE5               	movwf	??_main& (0+255),b
  1735  001660  0E05               	movlw	5
  1736  001662                     u5657:
  1737  001662  2EE8               	decfsz	wreg,f,c
  1738  001664  D7FE               	bra	u5657
  1739  001666  2FE5               	decfsz	??_main& (0+255),f,b
  1740  001668  D7FC               	bra	u5657
  1741  00166A  2FE6               	decfsz	(??_main+1)& (0+255),f,b
  1742  00166C  D7FA               	bra	u5657
  1743  00166E                     
  1744                           ;main.c: 41:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  1745  00166E  0EF4               	movlw	244
  1746  001670  0100               	movlb	0	; () banked
  1747  001672  6FE6               	movwf	(??_main+1)& (0+255),b
  1748  001674  0E82               	movlw	130
  1749  001676  6FE5               	movwf	??_main& (0+255),b
  1750  001678  0E05               	movlw	5
  1751  00167A                     u5667:
  1752  00167A  2EE8               	decfsz	wreg,f,c
  1753  00167C  D7FE               	bra	u5667
  1754  00167E  2FE5               	decfsz	??_main& (0+255),f,b
  1755  001680  D7FC               	bra	u5667
  1756  001682  2FE6               	decfsz	(??_main+1)& (0+255),f,b
  1757  001684  D7FA               	bra	u5667
  1758  001686                     
  1759                           ;main.c: 43:     i2c_init();
  1760  001686  EC2C  F00E         	call	_i2c_init	;wreg free
  1761  00168A  0EF2               	movlw	low _display_init
  1762  00168C  0100               	movlb	0	; () banked
  1763  00168E  6FDD               	movwf	i2c_write_serial@data& (0+255),b
  1764  001690  0E00               	movlw	high _display_init
  1765  001692  6FDE               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1766  001694  0E04               	movlw	4
  1767  001696  6FDF               	movwf	i2c_write_serial@length& (0+255),b
  1768  001698  0E3C               	movlw	60
  1769  00169A  EC24  F009         	call	_i2c_write_serial
  1770  00169E  0EF8               	movlw	low _first_line
  1771  0016A0  0100               	movlb	0	; () banked
  1772  0016A2  6FDD               	movwf	i2c_write_serial@data& (0+255),b
  1773  0016A4  0E00               	movlw	high _first_line
  1774  0016A6  6FDE               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1775  0016A8  0E02               	movlw	2
  1776  0016AA  6FDF               	movwf	i2c_write_serial@length& (0+255),b
  1777  0016AC  0E3C               	movlw	60
  1778  0016AE  EC24  F009         	call	_i2c_write_serial
  1779  0016B2  0EE4               	movlw	low _hello_string
  1780  0016B4  0100               	movlb	0	; () banked
  1781  0016B6  6FDD               	movwf	i2c_write_serial@data& (0+255),b
  1782  0016B8  0E01               	movlw	high _hello_string
  1783  0016BA  6FDE               	movwf	(i2c_write_serial@data+1)& (0+255),b
  1784  0016BC  0E0D               	movlw	13
  1785  0016BE  6FDF               	movwf	i2c_write_serial@length& (0+255),b
  1786  0016C0  0E3C               	movlw	60
  1787  0016C2  EC24  F009         	call	_i2c_write_serial
  1788  0016C6                     
  1789                           ;main.c: 49:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1790  0016C6  0E09               	movlw	9
  1791  0016C8  0100               	movlb	0	; () banked
  1792  0016CA  6FE6               	movwf	(??_main+1)& (0+255),b
  1793  0016CC  0E1E               	movlw	30
  1794  0016CE  6FE5               	movwf	??_main& (0+255),b
  1795  0016D0  0EE4               	movlw	228
  1796  0016D2                     u5677:
  1797  0016D2  2EE8               	decfsz	wreg,f,c
  1798  0016D4  D7FE               	bra	u5677
  1799  0016D6  2FE5               	decfsz	??_main& (0+255),f,b
  1800  0016D8  D7FC               	bra	u5677
  1801  0016DA  2FE6               	decfsz	(??_main+1)& (0+255),f,b
  1802  0016DC  D7FA               	bra	u5677
  1803  0016DE  F000               	nop	
  1804  0016E0                     l535:
  1805  0016E0  EF70  F00B         	goto	l535
  1806  0016E4  EF58  F000         	goto	start
  1807  0016E8                     __end_of_main:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function _i2c_write_serial *****************
  1811 ;; Defined at:
  1812 ;;		line 38 in file "./i2c.h"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  addr            1    wreg     unsigned char 
  1815 ;;  data            2   43[BANK0 ] PTR unsigned char 
  1816 ;;		 -> hello_string(14), display_init(4), rtc_test(1), rtc_first_run@rtc_clock_set(11), 
  1817 ;;		 -> updateTemperature@output(4), minus(2), temp_pos(2), humid_pos(2), 
  1818 ;;		 -> updateMoist@output(3), getReading@outT(5), first_line(2), adafruit_temp_command(1), 
  1819 ;;		 -> getReading@outH(5), second_line(2), adafruit_humid_command(1), 
  1820 ;;  length          1   45[BANK0 ] unsigned char 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  addr            1   48[BANK0 ] unsigned char 
  1823 ;;  i               1   50[BANK0 ] unsigned char 
  1824 ;;  targetAddr      1   49[BANK0 ] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1834 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;Total ram usage:        8 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 13
  1841 ;; This function calls:
  1842 ;;		_printf
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;;		_getReading
  1846 ;;		_updateMoist
  1847 ;;		_updateTemperature
  1848 ;;		_adafruit
  1849 ;;		_rtc_first_run
  1850 ;;		_rtc_get_time
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text1
  1855  001248                     __ptext1:
  1856                           	callstack 0
  1857  001248                     _i2c_write_serial:
  1858                           	callstack 17
  1859                           
  1860                           ;incstack = 0
  1861                           ;i2c_write_serial@addr stored from wreg
  1862  001248  0100               	movlb	0	; () banked
  1863  00124A  6FE2               	movwf	i2c_write_serial@addr& (0+255),b
  1864  00124C                     
  1865                           ;./i2c.h: 39:     uint8_t targetAddr = addr<<1;
  1866  00124C  0100               	movlb	0	; () banked
  1867  00124E  51E2               	movf	i2c_write_serial@addr& (0+255),w,b
  1868  001250  25E2               	addwf	i2c_write_serial@addr& (0+255),w,b
  1869  001252  6FE3               	movwf	i2c_write_serial@targetAddr& (0+255),b
  1870  001254                     l287:
  1871  001254  B4C7               	btfsc	199,2,c	;volatile
  1872  001256  EF2F  F009         	goto	u5401
  1873  00125A  EF31  F009         	goto	u5400
  1874  00125E                     u5401:
  1875  00125E  EF2A  F009         	goto	l287
  1876  001262                     u5400:
  1877  001262  CFC5 F0E0          	movff	4037,??_i2c_write_serial	;volatile
  1878  001266  0E1F               	movlw	31
  1879  001268  0100               	movlb	0	; () banked
  1880  00126A  17E0               	andwf	??_i2c_write_serial& (0+255),f,b
  1881  00126C  A4D8               	btfss	status,2,c
  1882  00126E  EF3B  F009         	goto	u5411
  1883  001272  EF3D  F009         	goto	u5410
  1884  001276                     u5411:
  1885  001276  EF2A  F009         	goto	l287
  1886  00127A                     u5410:
  1887  00127A                     
  1888                           ; BSR set to: 0
  1889                           ;./i2c.h: 46:     SSP1CON2bits.SEN = 1;
  1890  00127A  80C5               	bsf	197,0,c	;volatile
  1891  00127C                     l294:
  1892  00127C  B0C5               	btfsc	197,0,c	;volatile
  1893  00127E  EF43  F009         	goto	u5421
  1894  001282  EF45  F009         	goto	u5420
  1895  001286                     u5421:
  1896  001286  EF3E  F009         	goto	l294
  1897  00128A                     u5420:
  1898  00128A                     
  1899                           ;./i2c.h: 52:     SSP1BUF = targetAddr;
  1900  00128A  C0E3  FFC9         	movff	i2c_write_serial@targetAddr,4041	;volatile
  1901  00128E                     l301:
  1902  00128E  B4C7               	btfsc	199,2,c	;volatile
  1903  001290  EF4C  F009         	goto	u5431
  1904  001294  EF4E  F009         	goto	u5430
  1905  001298                     u5431:
  1906  001298  EF47  F009         	goto	l301
  1907  00129C                     u5430:
  1908  00129C                     
  1909                           ;./i2c.h: 56:     if(SSP2CON2bits.ACKSTAT == 0) {
  1910  00129C  BC6B               	btfsc	107,6,c	;volatile
  1911  00129E  EF53  F009         	goto	u5441
  1912  0012A2  EF55  F009         	goto	u5440
  1913  0012A6                     u5441:
  1914  0012A6  EF8B  F009         	goto	l308
  1915  0012AA                     u5440:
  1916  0012AA                     
  1917                           ;./i2c.h: 57:         for (uint8_t i=0; i < length ; i++) {
  1918  0012AA  0E00               	movlw	0
  1919  0012AC  0100               	movlb	0	; () banked
  1920  0012AE  6FE4               	movwf	i2c_write_serial@i& (0+255),b
  1921  0012B0  EF82  F009         	goto	l4803
  1922  0012B4                     l310:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;./i2c.h: 58:             if( SSP1CON2bits.ACKSTAT == 0 ) {
  1926  0012B4  BCC5               	btfsc	197,6,c	;volatile
  1927  0012B6  EF5F  F009         	goto	u5451
  1928  0012BA  EF61  F009         	goto	u5450
  1929  0012BE                     u5451:
  1930  0012BE  EF80  F009         	goto	l4801
  1931  0012C2                     u5450:
  1932  0012C2                     
  1933                           ; BSR set to: 0
  1934                           ;./i2c.h: 59:                 SSP1BUF = (uint8_t) data[i];
  1935  0012C2  51E4               	movf	i2c_write_serial@i& (0+255),w,b
  1936  0012C4  25DD               	addwf	i2c_write_serial@data& (0+255),w,b
  1937  0012C6  6FE0               	movwf	??_i2c_write_serial& (0+255),b
  1938  0012C8  0E00               	movlw	0
  1939  0012CA  21DE               	addwfc	(i2c_write_serial@data+1)& (0+255),w,b
  1940  0012CC  6FE1               	movwf	(??_i2c_write_serial+1)& (0+255),b
  1941  0012CE  C0E0  FFF6         	movff	??_i2c_write_serial,tblptrl
  1942  0012D2  C0E1  FFF7         	movff	??_i2c_write_serial+1,tblptrh
  1943  0012D6  0E00               	movlw	low (__mediumconst shr (0+16))
  1944  0012D8  6EF8               	movwf	tblptru,c
  1945  0012DA  0E0F               	movlw	(high __ramtop+-1)
  1946  0012DC  64F7               	cpfsgt	tblptrh,c
  1947  0012DE  D003               	bra	u5467
  1948  0012E0  0008               	tblrd		*
  1949  0012E2  50F5               	movf	tablat,w,c
  1950  0012E4  D005               	bra	u5460
  1951  0012E6                     u5467:
  1952  0012E6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1953  0012EA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1954  0012EE  50EF               	movf	indf0,w,c
  1955  0012F0                     u5460:
  1956  0012F0  6EC9               	movwf	201,c	;volatile
  1957  0012F2                     l312:
  1958  0012F2  B4C7               	btfsc	199,2,c	;volatile
  1959  0012F4  EF7E  F009         	goto	u5471
  1960  0012F8  EF80  F009         	goto	u5470
  1961  0012FC                     u5471:
  1962  0012FC  EF79  F009         	goto	l312
  1963  001300                     u5470:
  1964  001300                     l4801:
  1965                           
  1966                           ;./i2c.h: 65:         }
  1967  001300  0100               	movlb	0	; () banked
  1968  001302  2BE4               	incf	i2c_write_serial@i& (0+255),f,b
  1969  001304                     l4803:
  1970                           
  1971                           ; BSR set to: 0
  1972  001304  51DF               	movf	i2c_write_serial@length& (0+255),w,b
  1973  001306  5DE4               	subwf	i2c_write_serial@i& (0+255),w,b
  1974  001308  A0D8               	btfss	status,0,c
  1975  00130A  EF89  F009         	goto	u5481
  1976  00130E  EF8B  F009         	goto	u5480
  1977  001312                     u5481:
  1978  001312  EF5A  F009         	goto	l310
  1979  001316                     u5480:
  1980  001316                     l308:
  1981                           
  1982                           ;./i2c.h: 69:     SSP1CON2bits.PEN = 1;
  1983  001316  84C5               	bsf	197,2,c	;volatile
  1984  001318                     l325:
  1985  001318  B4C5               	btfsc	197,2,c	;volatile
  1986  00131A  EF91  F009         	goto	u5491
  1987  00131E  EF93  F009         	goto	u5490
  1988  001322                     u5491:
  1989  001322  EF8C  F009         	goto	l325
  1990  001326                     u5490:
  1991  001326  0012               	return		;funcret
  1992  001328                     __end_of_i2c_write_serial:
  1993                           	callstack 0
  1994                           
  1995 ;; *************** function _printf *****************
  1996 ;; Defined at:
  1997 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  fmt             2   29[BANK0 ] PTR const unsigned char 
  2000 ;;		 -> STR_20(38), STR_18(5), STR_16(5), STR_14(17), 
  2001 ;;		 -> STR_13(15), STR_12(14), STR_11(13), STR_10(33), 
  2002 ;;		 -> STR_9(18), STR_8(16), STR_7(39), STR_6(17), 
  2003 ;;		 -> STR_5(26), STR_4(31), STR_3(23), STR_2(18), 
  2004 ;;		 -> STR_1(16), 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  ap              2   84[COMRAM] PTR void [1]
  2007 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2008 ;;  ret             2    0        int 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  2   29[BANK0 ] int 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2018 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;Total ram usage:       16 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 12
  2025 ;; This function calls:
  2026 ;;		_vfprintf
  2027 ;; This function is called by:
  2028 ;;		_i2c_write_serial
  2029 ;;		_i2c_read_serial
  2030 ;;		_getReading
  2031 ;;		_rtc_get_time
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text2
  2036  001BEE                     __ptext2:
  2037                           	callstack 0
  2038  001BEE                     _printf:
  2039                           	callstack 17
  2040  001BEE  0ED1               	movlw	low (?_printf+2)
  2041  001BF0  6E55               	movwf	printf@ap^0,c
  2042  001BF2  0E00               	movlw	high (?_printf+2)
  2043  001BF4  6E56               	movwf	(printf@ap+1)^0,c
  2044  001BF6  0E00               	movlw	0
  2045  001BF8  0100               	movlb	0	; () banked
  2046  001BFA  6FC9               	movwf	vfprintf@fp& (0+255),b
  2047  001BFC  0E00               	movlw	0
  2048  001BFE  6FCA               	movwf	(vfprintf@fp+1)& (0+255),b
  2049  001C00  C0CF  F0CB         	movff	printf@fmt,vfprintf@fmt
  2050  001C04  C0D0  F0CC         	movff	printf@fmt+1,vfprintf@fmt+1
  2051  001C08  0E55               	movlw	low printf@ap
  2052  001C0A  6FCD               	movwf	vfprintf@ap& (0+255),b
  2053  001C0C  0E00               	movlw	high printf@ap
  2054  001C0E  6FCE               	movwf	(vfprintf@ap+1)& (0+255),b
  2055  001C10  ECEA  F00B         	call	_vfprintf	;wreg free
  2056  001C14  0012               	return		;funcret
  2057  001C16                     __end_of_printf:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _vfprintf *****************
  2061 ;; Defined at:
  2062 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  2065 ;;		 -> NULL(0), sprintf@f(6), 
  2066 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
  2067 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
  2068 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
  2069 ;;		 -> STR_43(3), STR_41(3), STR_39(3), STR_37(3), 
  2070 ;;		 -> STR_35(3), STR_33(3), STR_31(3), STR_29(3), 
  2071 ;;		 -> STR_27(3), STR_25(3), STR_23(3), STR_21(3), 
  2072 ;;		 -> STR_20(38), STR_19(5), STR_18(5), STR_17(14), 
  2073 ;;		 -> STR_16(5), STR_15(15), STR_14(17), STR_13(15), 
  2074 ;;		 -> STR_12(14), STR_11(13), STR_10(33), STR_9(18), 
  2075 ;;		 -> STR_8(16), STR_7(39), STR_6(17), STR_5(26), 
  2076 ;;		 -> STR_4(31), STR_3(23), STR_2(18), STR_1(16), 
  2077 ;;  ap              2   27[BANK0 ] PTR PTR void 
  2078 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  2081 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
  2082 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
  2083 ;;		 -> STR_43(3), STR_41(3), STR_39(3), STR_37(3), 
  2084 ;;		 -> STR_35(3), STR_33(3), STR_31(3), STR_29(3), 
  2085 ;;		 -> STR_27(3), STR_25(3), STR_23(3), STR_21(3), 
  2086 ;;		 -> STR_20(38), STR_19(5), STR_18(5), STR_17(14), 
  2087 ;;		 -> STR_16(5), STR_15(15), STR_14(17), STR_13(15), 
  2088 ;;		 -> STR_12(14), STR_11(13), STR_10(33), STR_9(18), 
  2089 ;;		 -> STR_8(16), STR_7(39), STR_6(17), STR_5(26), 
  2090 ;;		 -> STR_4(31), STR_3(23), STR_2(18), STR_1(16), 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  2   23[BANK0 ] int 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2100 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;Total ram usage:        8 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 11
  2107 ;; This function calls:
  2108 ;;		_vfpfcnvrt
  2109 ;; This function is called by:
  2110 ;;		_printf
  2111 ;;		_sprintf
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text3
  2116  0017D4                     __ptext3:
  2117                           	callstack 0
  2118  0017D4                     _vfprintf:
  2119                           	callstack 17
  2120  0017D4                     
  2121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2122  0017D4  C0CB  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  2123  0017D8  C0CC  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2124  0017DC                     
  2125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2126  0017DC  0E00               	movlw	0
  2127  0017DE  0100               	movlb	0	; () banked
  2128  0017E0  6F69               	movwf	(_nout+1)& (0+255),b
  2129  0017E2  0E00               	movlw	0
  2130  0017E4  6F68               	movwf	_nout& (0+255),b
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2133  0017E6  EF08  F00C         	goto	l4775
  2134  0017EA                     l4773:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2138  0017EA  C0C9  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
  2139  0017EE  C0CA  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2140  0017F2  0E53               	movlw	low vfprintf@cfmt
  2141  0017F4  6E4B               	movwf	vfpfcnvrt@fmt^0,c
  2142  0017F6  0E00               	movlw	high vfprintf@cfmt
  2143  0017F8  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2144  0017FA  C0CD  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2145  0017FE  C0CE  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2146  001802  EC5A  F000         	call	_vfpfcnvrt	;wreg free
  2147  001806  5049               	movf	?_vfpfcnvrt^0,w,c
  2148  001808  0100               	movlb	0	; () banked
  2149  00180A  2768               	addwf	_nout& (0+255),f,b
  2150  00180C  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
  2151  00180E  2369               	addwfc	(_nout+1)& (0+255),f,b
  2152  001810                     l4775:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2156  001810  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  2157  001814  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2158  001818                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2159  001818  6AF8               	clrf	tblptru,c
  2160  00181A                     	endif
  2161  00181A                     	if	0	;tblptru may be non-zero
  2162  00181A                     	endif
  2163  00181A  0008               	tblrd		*
  2164  00181C  50F5               	movf	tablat,w,c
  2165  00181E  0900               	iorlw	0
  2166  001820  A4D8               	btfss	status,2,c
  2167  001822  EF15  F00C         	goto	u5391
  2168  001826  EF17  F00C         	goto	u5390
  2169  00182A                     u5391:
  2170  00182A  EFF5  F00B         	goto	l4773
  2171  00182E                     u5390:
  2172  00182E                     
  2173                           ; BSR set to: 0
  2174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2175  00182E  C068  F0C9         	movff	_nout,?_vfprintf
  2176  001832  C069  F0CA         	movff	_nout+1,?_vfprintf+1
  2177  001836                     
  2178                           ; BSR set to: 0
  2179  001836  0012               	return		;funcret
  2180  001838                     __end_of_vfprintf:
  2181                           	callstack 0
  2182                           
  2183 ;; *************** function _vfpfcnvrt *****************
  2184 ;; Defined at:
  2185 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
  2188 ;;		 -> NULL(0), sprintf@f(6), 
  2189 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
  2190 ;;		 -> vfprintf@cfmt(2), 
  2191 ;;  ap              2   76[COMRAM] PTR PTR void 
  2192 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  llu             8    8[BANK0 ] unsigned long long 
  2195 ;;  ll              8    0[BANK0 ] long long 
  2196 ;;  f               4    0        long long 
  2197 ;;  vp              3    0        PTR void 
  2198 ;;  ct              3    0        unsigned char [3]
  2199 ;;  done            2   18[BANK0 ] int 
  2200 ;;  cp              2   16[BANK0 ] PTR unsigned char 
  2201 ;;		 -> ?_printf(2), ?_sprintf(2), STR_60(9), STR_58(9), 
  2202 ;;		 -> STR_56(8), STR_54(9), STR_52(8), STR_50(9), 
  2203 ;;		 -> STR_48(8), STR_46(3), STR_44(10), STR_42(10), 
  2204 ;;		 -> STR_40(9), STR_38(11), STR_36(8), STR_34(6), 
  2205 ;;		 -> STR_32(6), STR_30(5), STR_28(7), STR_26(7), 
  2206 ;;		 -> STR_24(9), STR_22(8), day_string(20), rtc_get_time@mo(20), 
  2207 ;;		 -> getReading@outT(5), temperature_read(5), getReading@outH(5), getReading@rh_code(4), 
  2208 ;;  i               2    0        int 
  2209 ;;  c               1   22[BANK0 ] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  2   72[COMRAM] int 
  2212 ;; Registers used:
  2213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2219 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Totals:        10      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;Total ram usage:       33 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 10
  2226 ;; This function calls:
  2227 ;;		_atoi
  2228 ;;		_ctoa
  2229 ;;		_dtoa
  2230 ;;		_fputc
  2231 ;;		_isdigit
  2232 ;;		_stoa
  2233 ;;		_xtoa
  2234 ;; This function is called by:
  2235 ;;		_vfprintf
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text4
  2240  0000B4                     __ptext4:
  2241                           	callstack 0
  2242  0000B4                     _vfpfcnvrt:
  2243                           	callstack 17
  2244  0000B4                     
  2245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2246  0000B4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2247  0000B8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2248  0000BC  CFDE FFF6          	movff	postinc2,tblptrl
  2249  0000C0  CFDD FFF7          	movff	postdec2,tblptrh
  2250  0000C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2251  0000C4  6AF8               	clrf	tblptru,c
  2252  0000C6                     	endif
  2253  0000C6                     	if	0	;tblptru may be non-zero
  2254  0000C6                     	endif
  2255  0000C6  0008               	tblrd		*
  2256  0000C8  50F5               	movf	tablat,w,c
  2257  0000CA  0A25               	xorlw	37
  2258  0000CC  A4D8               	btfss	status,2,c
  2259  0000CE  EF6B  F000         	goto	u5241
  2260  0000D2  EF6D  F000         	goto	u5240
  2261  0000D6                     u5241:
  2262  0000D6  EFE8  F002         	goto	l4751
  2263  0000DA                     u5240:
  2264  0000DA                     
  2265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2266  0000DA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2267  0000DE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2268  0000E2  2ADE               	incf	postinc2,f,c
  2269  0000E4  0E00               	movlw	0
  2270  0000E6  22DD               	addwfc	postdec2,f,c
  2271  0000E8                     
  2272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2273  0000E8  0E00               	movlw	0
  2274  0000EA  0100               	movlb	0	; () banked
  2275  0000EC  6F6B               	movwf	(_width+1)& (0+255),b
  2276  0000EE  0E00               	movlw	0
  2277  0000F0  6F6A               	movwf	_width& (0+255),b
  2278  0000F2  C06A  F057         	movff	_width,_flags
  2279  0000F6  C06B  F058         	movff	_width+1,_flags+1
  2280  0000FA                     
  2281                           ; BSR set to: 0
  2282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2283  0000FA  696C               	setf	_prec& (0+255),b
  2284  0000FC  696D               	setf	(_prec+1)& (0+255),b
  2285  0000FE                     
  2286                           ; BSR set to: 0
  2287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2288  0000FE  0E00               	movlw	0
  2289  000100  6FC5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2290  000102  0E00               	movlw	0
  2291  000104  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2294  000106  EFCC  F000         	goto	l4673
  2295  00010A                     l4647:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2299  00010A  8057               	bsf	_flags^0,0,c
  2300  00010C                     l4649:
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2304  00010C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2305  000110  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2306  000114  2ADE               	incf	postinc2,f,c
  2307  000116  0E00               	movlw	0
  2308  000118  22DD               	addwfc	postdec2,f,c
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2311  00011A  EFCC  F000         	goto	l4673
  2312  00011E                     l4651:
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2316  00011E  8257               	bsf	_flags^0,1,c
  2317  000120  EF86  F000         	goto	l4649
  2318  000124                     l4655:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2322  000124  8457               	bsf	_flags^0,2,c
  2323  000126  EF86  F000         	goto	l4649
  2324  00012A                     l4659:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2328  00012A  8657               	bsf	_flags^0,3,c
  2329  00012C  EF86  F000         	goto	l4649
  2330  000130                     l4663:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2334  000130  8857               	bsf	_flags^0,4,c
  2335  000132  EF86  F000         	goto	l4649
  2336  000136                     l4667:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2340  000136  0E00               	movlw	0
  2341  000138  6FC5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2342  00013A  0E01               	movlw	1
  2343  00013C  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2346  00013E  EFCC  F000         	goto	l4673
  2347  000142                     l4671:
  2348                           
  2349                           ; BSR set to: 0
  2350  000142  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351  000146  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352  00014A  CFDE FFF6          	movff	postinc2,tblptrl
  2353  00014E  CFDD FFF7          	movff	postdec2,tblptrh
  2354  000152                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2355  000152  6AF8               	clrf	tblptru,c
  2356  000154                     	endif
  2357  000154                     	if	0	;tblptru may be non-zero
  2358  000154                     	endif
  2359  000154  0008               	tblrd		*
  2360  000156  50F5               	movf	tablat,w,c
  2361  000158  6E4F               	movwf	??_vfpfcnvrt^0,c
  2362  00015A  6A50               	clrf	(??_vfpfcnvrt+1)^0,c
  2363                           
  2364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2365                           ; Switch size 1, requested type "simple"
  2366                           ; Number of cases is 1, Range of values is 0 to 0
  2367                           ; switch strategies available:
  2368                           ; Name         Instructions Cycles
  2369                           ; simple_byte            4     3 (average)
  2370                           ;	Chosen strategy is simple_byte
  2371  00015C  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2372  00015E  0A00               	xorlw	0	; case 0
  2373  000160  B4D8               	btfsc	status,2,c
  2374  000162  EFB5  F000         	goto	l5115
  2375  000166  EF9B  F000         	goto	l4667
  2376  00016A                     l5115:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ; Switch size 1, requested type "simple"
  2380                           ; Number of cases is 5, Range of values is 32 to 48
  2381                           ; switch strategies available:
  2382                           ; Name         Instructions Cycles
  2383                           ; simple_byte           16     9 (average)
  2384                           ;	Chosen strategy is simple_byte
  2385  00016A  504F               	movf	??_vfpfcnvrt^0,w,c
  2386  00016C  0A20               	xorlw	32	; case 32
  2387  00016E  B4D8               	btfsc	status,2,c
  2388  000170  EF95  F000         	goto	l4659
  2389  000174  0A03               	xorlw	3	; case 35
  2390  000176  B4D8               	btfsc	status,2,c
  2391  000178  EF98  F000         	goto	l4663
  2392  00017C  0A08               	xorlw	8	; case 43
  2393  00017E  B4D8               	btfsc	status,2,c
  2394  000180  EF92  F000         	goto	l4655
  2395  000184  0A06               	xorlw	6	; case 45
  2396  000186  B4D8               	btfsc	status,2,c
  2397  000188  EF85  F000         	goto	l4647
  2398  00018C  0A1D               	xorlw	29	; case 48
  2399  00018E  B4D8               	btfsc	status,2,c
  2400  000190  EF8F  F000         	goto	l4651
  2401  000194  EF9B  F000         	goto	l4667
  2402  000198                     l4673:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2406  000198  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  2407  00019A  11C5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2408  00019C  B4D8               	btfsc	status,2,c
  2409  00019E  EFD3  F000         	goto	u5251
  2410  0001A2  EFD5  F000         	goto	u5250
  2411  0001A6                     u5251:
  2412  0001A6  EFA1  F000         	goto	l4671
  2413  0001AA                     u5250:
  2414  0001AA                     
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2417  0001AA  A057               	btfss	_flags^0,0,c
  2418  0001AC  EFDA  F000         	goto	u5261
  2419  0001B0  EFDC  F000         	goto	u5260
  2420  0001B4                     u5261:
  2421  0001B4  EFDD  F000         	goto	l4677
  2422  0001B8                     u5260:
  2423  0001B8                     
  2424                           ; BSR set to: 0
  2425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2426  0001B8  9257               	bcf	_flags^0,1,c
  2427  0001BA                     l4677:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2431  0001BA  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432  0001BE  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  0001C2  CFDE FFF6          	movff	postinc2,tblptrl
  2434  0001C6  CFDD FFF7          	movff	postdec2,tblptrh
  2435  0001CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2436  0001CA  6AF8               	clrf	tblptru,c
  2437  0001CC                     	endif
  2438  0001CC                     	if	0	;tblptru may be non-zero
  2439  0001CC                     	endif
  2440  0001CC  0008               	tblrd		*
  2441  0001CE  50F5               	movf	tablat,w,c
  2442  0001D0  0A2A               	xorlw	42
  2443  0001D2  A4D8               	btfss	status,2,c
  2444  0001D4  EFEE  F000         	goto	u5271
  2445  0001D8  EFF0  F000         	goto	u5270
  2446  0001DC                     u5271:
  2447  0001DC  EF19  F001         	goto	l4685
  2448  0001E0                     u5270:
  2449  0001E0                     
  2450                           ; BSR set to: 0
  2451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2452  0001E0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2453  0001E4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2454  0001E8  2ADE               	incf	postinc2,f,c
  2455  0001EA  0E00               	movlw	0
  2456  0001EC  22DD               	addwfc	postdec2,f,c
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2459  0001EE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2460  0001F2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2461  0001F6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2462  0001FA  0E02               	movlw	2
  2463  0001FC  26DE               	addwf	postinc2,f,c
  2464  0001FE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2465  000202  0E00               	movlw	0
  2466  000204  22DD               	addwfc	postdec2,f,c
  2467  000206  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2468  00020A  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2469  00020E  CFDE F06A          	movff	postinc2,_width
  2470  000212  CFDD F06B          	movff	postdec2,_width+1
  2471  000216                     
  2472                           ; BSR set to: 0
  2473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2474  000216  BF6B               	btfsc	(_width+1)& (0+255),7,b
  2475  000218  EF12  F001         	goto	u5280
  2476  00021C  EF10  F001         	goto	u5281
  2477  000220                     u5281:
  2478  000220  EF5E  F001         	goto	l4695
  2479  000224                     u5280:
  2480  000224                     
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2483  000224  8057               	bsf	_flags^0,0,c
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2486  000226  6D6A               	negf	_width& (0+255),b
  2487  000228  1F6B               	comf	(_width+1)& (0+255),f,b
  2488  00022A  B0D8               	btfsc	status,0,c
  2489  00022C  2B6B               	incf	(_width+1)& (0+255),f,b
  2490  00022E  EF5E  F001         	goto	l4695
  2491  000232                     l4685:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2495  000232  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2496  000236  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2497  00023A  CFDE F00C          	movff	postinc2,atoi@s
  2498  00023E  CFDD F00D          	movff	postdec2,atoi@s+1
  2499  000242  ECE0  F005         	call	_atoi	;wreg free
  2500  000246  C00C  F06A         	movff	?_atoi,_width
  2501  00024A  C00D  F06B         	movff	?_atoi+1,_width+1
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2504  00024E  EF30  F001         	goto	l4689
  2505  000252                     l4687:
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2509  000252  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2510  000256  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2511  00025A  2ADE               	incf	postinc2,f,c
  2512  00025C  0E00               	movlw	0
  2513  00025E  22DD               	addwfc	postdec2,f,c
  2514  000260                     l4689:
  2515  000260  0ED0               	movlw	208
  2516  000262  6E4F               	movwf	??_vfpfcnvrt^0,c
  2517  000264  0EFF               	movlw	255
  2518  000266  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
  2519  000268  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2520  00026C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2521  000270  CFDE FFF6          	movff	postinc2,tblptrl
  2522  000274  CFDD FFF7          	movff	postdec2,tblptrh
  2523  000278                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2524  000278  6AF8               	clrf	tblptru,c
  2525  00027A                     	endif
  2526  00027A                     	if	0	;tblptru may be non-zero
  2527  00027A                     	endif
  2528  00027A  0008               	tblrd		*
  2529  00027C  50F5               	movf	tablat,w,c
  2530  00027E  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
  2531  000280  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
  2532  000282  504F               	movf	??_vfpfcnvrt^0,w,c
  2533  000284  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2534  000286  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
  2535  000288  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2536  00028A  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
  2537  00028C  E10A               	bnz	u5290
  2538  00028E  0E0A               	movlw	10
  2539  000290  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2540  000292  A0D8               	btfss	status,0,c
  2541  000294  EF4E  F001         	goto	u5291
  2542  000298  EF51  F001         	goto	u5290
  2543  00029C                     u5291:
  2544  00029C  0E01               	movlw	1
  2545  00029E  EF52  F001         	goto	u5300
  2546  0002A2                     u5290:
  2547  0002A2  0E00               	movlw	0
  2548  0002A4                     u5300:
  2549  0002A4  0100               	movlb	0	; () banked
  2550  0002A6  6FC6               	movwf	_vfpfcnvrt$1873& (0+255),b
  2551  0002A8  6BC7               	clrf	(_vfpfcnvrt$1873+1)& (0+255),b
  2552  0002AA                     
  2553                           ; BSR set to: 0
  2554  0002AA  51C6               	movf	_vfpfcnvrt$1873& (0+255),w,b
  2555  0002AC  11C7               	iorwf	(_vfpfcnvrt$1873+1)& (0+255),w,b
  2556  0002AE  A4D8               	btfss	status,2,c
  2557  0002B0  EF5C  F001         	goto	u5311
  2558  0002B4  EF5E  F001         	goto	u5310
  2559  0002B8                     u5311:
  2560  0002B8  EF29  F001         	goto	l4687
  2561  0002BC                     u5310:
  2562  0002BC                     l4695:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2566  0002BC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2567  0002C0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2568  0002C4  CFDE FFF6          	movff	postinc2,tblptrl
  2569  0002C8  CFDD FFF7          	movff	postdec2,tblptrh
  2570  0002CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2571  0002CC  6AF8               	clrf	tblptru,c
  2572  0002CE                     	endif
  2573  0002CE                     	if	0	;tblptru may be non-zero
  2574  0002CE                     	endif
  2575  0002CE  0008               	tblrd		*
  2576  0002D0  50F5               	movf	tablat,w,c
  2577  0002D2  0A63               	xorlw	99
  2578  0002D4  A4D8               	btfss	status,2,c
  2579  0002D6  EF6F  F001         	goto	u5321
  2580  0002DA  EF71  F001         	goto	u5320
  2581  0002DE                     u5321:
  2582  0002DE  EF98  F001         	goto	l4703
  2583  0002E2                     u5320:
  2584  0002E2                     
  2585                           ; BSR set to: 0
  2586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2587  0002E2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2588  0002E6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2589  0002EA  2ADE               	incf	postinc2,f,c
  2590  0002EC  0E00               	movlw	0
  2591  0002EE  22DD               	addwfc	postdec2,f,c
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2594  0002F0  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2595  0002F4  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2596  0002F8  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2597  0002FC  0E02               	movlw	2
  2598  0002FE  26DE               	addwf	postinc2,f,c
  2599  000300  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2600  000304  0E00               	movlw	0
  2601  000306  22DD               	addwfc	postdec2,f,c
  2602  000308  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2603  00030C  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2604  000310  50DF               	movf	indf2,w,c
  2605  000312  6FC8               	movwf	vfpfcnvrt@c& (0+255),b
  2606  000314                     
  2607                           ; BSR set to: 0
  2608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2609  000314  C049  F010         	movff	vfpfcnvrt@fp,ctoa@fp
  2610  000318  C04A  F011         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2611  00031C  C0C8  F012         	movff	vfpfcnvrt@c,ctoa@c
  2612  000320  EC94  F009         	call	_ctoa	;wreg free
  2613  000324  C010  F049         	movff	?_ctoa,?_vfpfcnvrt
  2614  000328  C011  F04A         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2615  00032C  EF04  F003         	goto	l1428
  2616  000330                     l4703:
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2620  000330  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2621  000334  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2622  000338  CFDE FFF6          	movff	postinc2,tblptrl
  2623  00033C  CFDD FFF7          	movff	postdec2,tblptrh
  2624  000340                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2625  000340  6AF8               	clrf	tblptru,c
  2626  000342                     	endif
  2627  000342                     	if	0	;tblptru may be non-zero
  2628  000342                     	endif
  2629  000342  0008               	tblrd		*
  2630  000344  50F5               	movf	tablat,w,c
  2631  000346  0A64               	xorlw	100
  2632  000348  B4D8               	btfsc	status,2,c
  2633  00034A  EFA9  F001         	goto	u5331
  2634  00034E  EFAB  F001         	goto	u5330
  2635  000352                     u5331:
  2636  000352  EFBE  F001         	goto	l4707
  2637  000356                     u5330:
  2638  000356                     
  2639                           ; BSR set to: 0
  2640  000356  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2641  00035A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2642  00035E  CFDE FFF6          	movff	postinc2,tblptrl
  2643  000362  CFDD FFF7          	movff	postdec2,tblptrh
  2644  000366                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2645  000366  6AF8               	clrf	tblptru,c
  2646  000368                     	endif
  2647  000368                     	if	0	;tblptru may be non-zero
  2648  000368                     	endif
  2649  000368  0008               	tblrd		*
  2650  00036A  50F5               	movf	tablat,w,c
  2651  00036C  0A69               	xorlw	105
  2652  00036E  A4D8               	btfss	status,2,c
  2653  000370  EFBC  F001         	goto	u5341
  2654  000374  EFBE  F001         	goto	u5340
  2655  000378                     u5341:
  2656  000378  EFFE  F001         	goto	l4713
  2657  00037C                     u5340:
  2658  00037C                     l4707:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2662  00037C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2663  000380  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2664  000384  2ADE               	incf	postinc2,f,c
  2665  000386  0E00               	movlw	0
  2666  000388  22DD               	addwfc	postdec2,f,c
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2669  00038A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2670  00038E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2671  000392  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2672  000396  0E02               	movlw	2
  2673  000398  26DE               	addwf	postinc2,f,c
  2674  00039A  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2675  00039E  0E00               	movlw	0
  2676  0003A0  22DD               	addwfc	postdec2,f,c
  2677  0003A2  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2678  0003A6  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2679  0003AA  CFDE F0B2          	movff	postinc2,vfpfcnvrt@ll
  2680  0003AE  CFDD F0B3          	movff	postdec2,vfpfcnvrt@ll+1
  2681  0003B2  0E00               	movlw	0
  2682  0003B4  BFB3               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2683  0003B6  0EFF               	movlw	-1
  2684  0003B8  6FB4               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2685  0003BA  6FB5               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2686  0003BC  6FB6               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2687  0003BE  6FB7               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2688  0003C0  6FB8               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2689  0003C2  6FB9               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2690  0003C4                     
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2693  0003C4  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  2694  0003C8  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2695  0003CC  C0B2  F024         	movff	vfpfcnvrt@ll,dtoa@d
  2696  0003D0  C0B3  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2697  0003D4  C0B4  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2698  0003D8  C0B5  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2699  0003DC  C0B6  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2700  0003E0  C0B7  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2701  0003E4  C0B8  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2702  0003E8  C0B9  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2703  0003EC  EC05  F003         	call	_dtoa	;wreg free
  2704  0003F0  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
  2705  0003F4  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2706  0003F8  EF04  F003         	goto	l1428
  2707  0003FC                     l4713:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  2711  0003FC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2712  000400  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2713  000404  CFDE FFF6          	movff	postinc2,tblptrl
  2714  000408  CFDD FFF7          	movff	postdec2,tblptrh
  2715  00040C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2716  00040C  6AF8               	clrf	tblptru,c
  2717  00040E                     	endif
  2718  00040E                     	if	0	;tblptru may be non-zero
  2719  00040E                     	endif
  2720  00040E  0008               	tblrd		*
  2721  000410  50F5               	movf	tablat,w,c
  2722  000412  0A73               	xorlw	115
  2723  000414  A4D8               	btfss	status,2,c
  2724  000416  EF0F  F002         	goto	u5351
  2725  00041A  EF11  F002         	goto	u5350
  2726  00041E                     u5351:
  2727  00041E  EF3C  F002         	goto	l4721
  2728  000422                     u5350:
  2729  000422                     
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  2732  000422  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2733  000426  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2734  00042A  2ADE               	incf	postinc2,f,c
  2735  00042C  0E00               	movlw	0
  2736  00042E  22DD               	addwfc	postdec2,f,c
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2739  000430  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2740  000434  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2741  000438  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2742  00043C  0E02               	movlw	2
  2743  00043E  26DE               	addwf	postinc2,f,c
  2744  000440  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2745  000444  0E00               	movlw	0
  2746  000446  22DD               	addwfc	postdec2,f,c
  2747  000448  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2748  00044C  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2749  000450  CFDE F0C2          	movff	postinc2,vfpfcnvrt@cp
  2750  000454  CFDD F0C3          	movff	postdec2,vfpfcnvrt@cp+1
  2751  000458                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  2754  000458  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
  2755  00045C  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2756  000460  C0C2  F012         	movff	vfpfcnvrt@cp,stoa@s
  2757  000464  C0C3  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2758  000468  ECE1  F006         	call	_stoa	;wreg free
  2759  00046C  C010  F049         	movff	?_stoa,?_vfpfcnvrt
  2760  000470  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
  2761  000474  EF04  F003         	goto	l1428
  2762  000478                     l4721:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2766  000478  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2767  00047C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2768  000480  CFDE FFF6          	movff	postinc2,tblptrl
  2769  000484  CFDD FFF7          	movff	postdec2,tblptrh
  2770  000488                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2771  000488  6AF8               	clrf	tblptru,c
  2772  00048A                     	endif
  2773  00048A                     	if	0	;tblptru may be non-zero
  2774  00048A                     	endif
  2775  00048A  0008               	tblrd		*
  2776  00048C  50F5               	movf	tablat,w,c
  2777  00048E  0A78               	xorlw	120
  2778  000490  B4D8               	btfsc	status,2,c
  2779  000492  EF4D  F002         	goto	u5361
  2780  000496  EF4F  F002         	goto	u5360
  2781  00049A                     u5361:
  2782  00049A  EF62  F002         	goto	l4725
  2783  00049E                     u5360:
  2784  00049E                     
  2785                           ; BSR set to: 0
  2786  00049E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2787  0004A2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2788  0004A6  CFDE FFF6          	movff	postinc2,tblptrl
  2789  0004AA  CFDD FFF7          	movff	postdec2,tblptrh
  2790  0004AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2791  0004AE  6AF8               	clrf	tblptru,c
  2792  0004B0                     	endif
  2793  0004B0                     	if	0	;tblptru may be non-zero
  2794  0004B0                     	endif
  2795  0004B0  0008               	tblrd		*
  2796  0004B2  50F5               	movf	tablat,w,c
  2797  0004B4  0A58               	xorlw	88
  2798  0004B6  A4D8               	btfss	status,2,c
  2799  0004B8  EF60  F002         	goto	u5371
  2800  0004BC  EF62  F002         	goto	u5370
  2801  0004C0                     u5371:
  2802  0004C0  EFB1  F002         	goto	l4735
  2803  0004C4                     u5370:
  2804  0004C4                     l4725:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  2808  0004C4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2809  0004C8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2810  0004CC  CFDE FFF6          	movff	postinc2,tblptrl
  2811  0004D0  CFDD FFF7          	movff	postdec2,tblptrh
  2812  0004D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2813  0004D4  6AF8               	clrf	tblptru,c
  2814  0004D6                     	endif
  2815  0004D6                     	if	0	;tblptru may be non-zero
  2816  0004D6                     	endif
  2817  0004D6  0008               	tblrd		*
  2818  0004D8  CFF5 F0C8          	movff	tablat,vfpfcnvrt@c
  2819  0004DC                     
  2820                           ; BSR set to: 0
  2821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  2822  0004DC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2823  0004E0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2824  0004E4  2ADE               	incf	postinc2,f,c
  2825  0004E6  0E00               	movlw	0
  2826  0004E8  22DD               	addwfc	postdec2,f,c
  2827  0004EA                     
  2828                           ; BSR set to: 0
  2829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2830  0004EA  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2831  0004EE  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2832  0004F2  CFDF F04F          	movff	indf2,??_vfpfcnvrt
  2833  0004F6  0E02               	movlw	2
  2834  0004F8  26DE               	addwf	postinc2,f,c
  2835  0004FA  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
  2836  0004FE  0E00               	movlw	0
  2837  000500  22DD               	addwfc	postdec2,f,c
  2838  000502  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2839  000506  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2840  00050A  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
  2841  00050E  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
  2842  000512  C051  F0BA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2843  000516  C052  F0BB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2844  00051A  6BBC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2845  00051C  6BBD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2846  00051E  6BBE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2847  000520  6BBF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2848  000522  6BC0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2849  000524  6BC1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2850  000526                     
  2851                           ; BSR set to: 0
  2852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  2853  000526  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
  2854  00052A  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2855  00052E  C0BA  F024         	movff	vfpfcnvrt@llu,xtoa@d
  2856  000532  C0BB  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2857  000536  C0BC  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2858  00053A  C0BD  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2859  00053E  C0BE  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2860  000542  C0BF  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2861  000546  C0C0  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2862  00054A  C0C1  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2863  00054E  C0C8  F02C         	movff	vfpfcnvrt@c,xtoa@x
  2864  000552  EC75  F004         	call	_xtoa	;wreg free
  2865  000556  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
  2866  00055A  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2867  00055E  EF04  F003         	goto	l1428
  2868  000562                     l4735:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2872  000562  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2873  000566  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2874  00056A  CFDE FFF6          	movff	postinc2,tblptrl
  2875  00056E  CFDD FFF7          	movff	postdec2,tblptrh
  2876  000572                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2877  000572  6AF8               	clrf	tblptru,c
  2878  000574                     	endif
  2879  000574                     	if	0	;tblptru may be non-zero
  2880  000574                     	endif
  2881  000574  0008               	tblrd		*
  2882  000576  50F5               	movf	tablat,w,c
  2883  000578  0A25               	xorlw	37
  2884  00057A  A4D8               	btfss	status,2,c
  2885  00057C  EFC2  F002         	goto	u5381
  2886  000580  EFC4  F002         	goto	u5380
  2887  000584                     u5381:
  2888  000584  EFDB  F002         	goto	l4745
  2889  000588                     u5380:
  2890  000588                     
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2893  000588  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2894  00058C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2895  000590  2ADE               	incf	postinc2,f,c
  2896  000592  0E00               	movlw	0
  2897  000594  22DD               	addwfc	postdec2,f,c
  2898  000596                     
  2899                           ; BSR set to: 0
  2900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2901  000596  0E00               	movlw	0
  2902  000598  6E08               	movwf	(fputc@c+1)^0,c
  2903  00059A  0E25               	movlw	37
  2904  00059C  6E07               	movwf	fputc@c^0,c
  2905  00059E  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2906  0005A2  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2907  0005A6  ECFF  F009         	call	_fputc	;wreg free
  2908  0005AA                     l4741:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2911  0005AA  0E00               	movlw	0
  2912  0005AC  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  2913  0005AE  0E01               	movlw	1
  2914  0005B0  6E49               	movwf	?_vfpfcnvrt^0,c
  2915  0005B2  EF04  F003         	goto	l1428
  2916  0005B6                     l4745:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2920  0005B6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2921  0005BA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2922  0005BE  2ADE               	incf	postinc2,f,c
  2923  0005C0  0E00               	movlw	0
  2924  0005C2  22DD               	addwfc	postdec2,f,c
  2925  0005C4                     
  2926                           ; BSR set to: 0
  2927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2928  0005C4  0E00               	movlw	0
  2929  0005C6  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
  2930  0005C8  0E00               	movlw	0
  2931  0005CA  6E49               	movwf	?_vfpfcnvrt^0,c
  2932  0005CC  EF04  F003         	goto	l1428
  2933  0005D0                     l4751:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2936  0005D0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2937  0005D4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2938  0005D8  CFDE FFF6          	movff	postinc2,tblptrl
  2939  0005DC  CFDD FFF7          	movff	postdec2,tblptrh
  2940  0005E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2941  0005E0  6AF8               	clrf	tblptru,c
  2942  0005E2                     	endif
  2943  0005E2                     	if	0	;tblptru may be non-zero
  2944  0005E2                     	endif
  2945  0005E2  0008               	tblrd		*
  2946  0005E4  50F5               	movf	tablat,w,c
  2947  0005E6  6E07               	movwf	fputc@c^0,c
  2948  0005E8  6A08               	clrf	(fputc@c+1)^0,c
  2949  0005EA  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2950  0005EE  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2951  0005F2  ECFF  F009         	call	_fputc	;wreg free
  2952  0005F6                     
  2953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2954  0005F6  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2955  0005FA  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2956  0005FE  2ADE               	incf	postinc2,f,c
  2957  000600  0E00               	movlw	0
  2958  000602  22DD               	addwfc	postdec2,f,c
  2959  000604  EFD5  F002         	goto	l4741
  2960  000608                     l1428:
  2961  000608  0012               	return		;funcret
  2962  00060A                     __end_of_vfpfcnvrt:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function _xtoa *****************
  2966 ;; Defined at:
  2967 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  2970 ;;		 -> NULL(0), sprintf@f(6), 
  2971 ;;  d               8   35[COMRAM] unsigned long long 
  2972 ;;  x               1   43[COMRAM] unsigned char 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  n               8   60[COMRAM] unsigned long long 
  2975 ;;  c               2   70[COMRAM] int 
  2976 ;;  i               2   68[COMRAM] int 
  2977 ;;  w               2   58[COMRAM] int 
  2978 ;;  p               2   56[COMRAM] int 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  2   33[COMRAM] int 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2988 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;Total ram usage:       39 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 9
  2995 ;; This function calls:
  2996 ;;		_isalpha
  2997 ;;		_isupper
  2998 ;;		_pad
  2999 ;;		_toupper
  3000 ;; This function is called by:
  3001 ;;		_vfpfcnvrt
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text5
  3006  0008EA                     __ptext5:
  3007                           	callstack 0
  3008  0008EA                     _xtoa:
  3009                           	callstack 17
  3010  0008EA                     
  3011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3012  0008EA  0100               	movlb	0	; () banked
  3013  0008EC  BF6D               	btfsc	(_prec+1)& (0+255),7,b
  3014  0008EE  EF7B  F004         	goto	u5071
  3015  0008F2  EF7D  F004         	goto	u5070
  3016  0008F6                     u5071:
  3017  0008F6  EF7E  F004         	goto	l4575
  3018  0008FA                     u5070:
  3019  0008FA                     
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3022  0008FA  9257               	bcf	_flags^0,1,c
  3023  0008FC                     l4575:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3027  0008FC  BF6D               	btfsc	(_prec+1)& (0+255),7,b
  3028  0008FE  EF8B  F004         	goto	u5080
  3029  000902  516D               	movf	(_prec+1)& (0+255),w,b
  3030  000904  E106               	bnz	u5081
  3031  000906  056C               	decf	_prec& (0+255),w,b
  3032  000908  B0D8               	btfsc	status,0,c
  3033  00090A  EF89  F004         	goto	u5081
  3034  00090E  EF8B  F004         	goto	u5080
  3035  000912                     u5081:
  3036  000912  EF91  F004         	goto	l1376
  3037  000916                     u5080:
  3038  000916                     
  3039                           ; BSR set to: 0
  3040  000916  0E00               	movlw	0
  3041  000918  6E3A               	movwf	(xtoa@p+1)^0,c
  3042  00091A  0E01               	movlw	1
  3043  00091C  6E39               	movwf	xtoa@p^0,c
  3044  00091E  EF95  F004         	goto	l1378
  3045  000922                     l1376:
  3046                           
  3047                           ; BSR set to: 0
  3048  000922  C06C  F039         	movff	_prec,xtoa@p
  3049  000926  C06D  F03A         	movff	_prec+1,xtoa@p+1
  3050  00092A                     l1378:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3054  00092A  C06A  F03B         	movff	_width,xtoa@w
  3055  00092E  C06B  F03C         	movff	_width+1,xtoa@w+1
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3058  000932  A857               	btfss	_flags^0,4,c
  3059  000934  EF9E  F004         	goto	u5091
  3060  000938  EFA0  F004         	goto	u5090
  3061  00093C                     u5091:
  3062  00093C  EFA4  F004         	goto	l4581
  3063  000940                     u5090:
  3064  000940                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3067  000940  0EFE               	movlw	254
  3068  000942  263B               	addwf	xtoa@w^0,f,c
  3069  000944  0EFF               	movlw	255
  3070  000946  223C               	addwfc	(xtoa@w+1)^0,f,c
  3071  000948                     l4581:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3075  000948  C024  F03D         	movff	xtoa@d,xtoa@n
  3076  00094C  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
  3077  000950  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
  3078  000954  C027  F040         	movff	xtoa@d+3,xtoa@n+3
  3079  000958  C028  F041         	movff	xtoa@d+4,xtoa@n+4
  3080  00095C  C029  F042         	movff	xtoa@d+5,xtoa@n+5
  3081  000960  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
  3082  000964  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
  3083  000968                     
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3086  000968  0E00               	movlw	0
  3087  00096A  6E46               	movwf	(xtoa@i+1)^0,c
  3088  00096C  0E1F               	movlw	31
  3089  00096E  6E45               	movwf	xtoa@i^0,c
  3090  000970                     
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3093  000970  0E00               	movlw	0
  3094  000972  0101               	movlb	1	; () banked
  3095  000974  6F96               	movwf	(_dbuf+31)& (0+255),b
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3098  000976  EF70  F005         	goto	l4617
  3099  00097A                     l4587:
  3100                           
  3101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  3102  00097A  0645               	decf	xtoa@i^0,f,c
  3103  00097C  A0D8               	btfss	status,0,c
  3104  00097E  0646               	decf	(xtoa@i+1)^0,f,c
  3105  000980                     
  3106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  3107  000980  0E0F               	movlw	15
  3108  000982  143D               	andwf	xtoa@n^0,w,c
  3109  000984  6E47               	movwf	xtoa@c^0,c
  3110  000986  6A48               	clrf	(xtoa@c+1)^0,c
  3111  000988                     
  3112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3113  000988  BE48               	btfsc	(xtoa@c+1)^0,7,c
  3114  00098A  EFD0  F004         	goto	u5101
  3115  00098E  5048               	movf	(xtoa@c+1)^0,w,c
  3116  000990  E109               	bnz	u5100
  3117  000992  0E0A               	movlw	10
  3118  000994  5C47               	subwf	xtoa@c^0,w,c
  3119  000996  A0D8               	btfss	status,0,c
  3120  000998  EFD0  F004         	goto	u5101
  3121  00099C  EFD2  F004         	goto	u5100
  3122  0009A0                     u5101:
  3123  0009A0  EFDA  F004         	goto	l4595
  3124  0009A4                     u5100:
  3125  0009A4  0E57               	movlw	87
  3126  0009A6  2447               	addwf	xtoa@c^0,w,c
  3127  0009A8  6E47               	movwf	xtoa@c^0,c
  3128  0009AA  0E00               	movlw	0
  3129  0009AC  2048               	addwfc	(xtoa@c+1)^0,w,c
  3130  0009AE  6E48               	movwf	(xtoa@c+1)^0,c
  3131  0009B0  EFE0  F004         	goto	l1385
  3132  0009B4                     l4595:
  3133  0009B4  0E30               	movlw	48
  3134  0009B6  2447               	addwf	xtoa@c^0,w,c
  3135  0009B8  6E47               	movwf	xtoa@c^0,c
  3136  0009BA  0E00               	movlw	0
  3137  0009BC  2048               	addwfc	(xtoa@c+1)^0,w,c
  3138  0009BE  6E48               	movwf	(xtoa@c+1)^0,c
  3139  0009C0                     l1385:
  3140  0009C0  0EBF               	movlw	191
  3141  0009C2  6E2D               	movwf	??_xtoa^0,c
  3142  0009C4  0EFF               	movlw	255
  3143  0009C6  6E2E               	movwf	(??_xtoa+1)^0,c
  3144  0009C8  502C               	movf	xtoa@x^0,w,c
  3145  0009CA  6E2F               	movwf	(??_xtoa+2)^0,c
  3146  0009CC  6A30               	clrf	(??_xtoa+3)^0,c
  3147  0009CE  502D               	movf	??_xtoa^0,w,c
  3148  0009D0  262F               	addwf	(??_xtoa+2)^0,f,c
  3149  0009D2  502E               	movf	(??_xtoa+1)^0,w,c
  3150  0009D4  2230               	addwfc	(??_xtoa+3)^0,f,c
  3151  0009D6  5030               	movf	(??_xtoa+3)^0,w,c
  3152  0009D8  E10A               	bnz	u5110
  3153  0009DA  0E1A               	movlw	26
  3154  0009DC  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3155  0009DE  A0D8               	btfss	status,0,c
  3156  0009E0  EFF4  F004         	goto	u5111
  3157  0009E4  EFF7  F004         	goto	u5110
  3158  0009E8                     u5111:
  3159  0009E8  0E01               	movlw	1
  3160  0009EA  EFF8  F004         	goto	u5120
  3161  0009EE                     u5110:
  3162  0009EE  0E00               	movlw	0
  3163  0009F0                     u5120:
  3164  0009F0  6E35               	movwf	_xtoa$1858^0,c
  3165  0009F2  6A36               	clrf	(_xtoa$1858+1)^0,c
  3166  0009F4  5035               	movf	_xtoa$1858^0,w,c
  3167  0009F6  1036               	iorwf	(_xtoa$1858+1)^0,w,c
  3168  0009F8  B4D8               	btfsc	status,2,c
  3169  0009FA  EF01  F005         	goto	u5131
  3170  0009FE  EF03  F005         	goto	u5130
  3171  000A02                     u5131:
  3172  000A02  EF33  F005         	goto	l4609
  3173  000A06                     u5130:
  3174  000A06  0E9F               	movlw	159
  3175  000A08  6E2D               	movwf	??_xtoa^0,c
  3176  000A0A  0EFF               	movlw	255
  3177  000A0C  6E2E               	movwf	(??_xtoa+1)^0,c
  3178  000A0E  0E20               	movlw	32
  3179  000A10  1047               	iorwf	xtoa@c^0,w,c
  3180  000A12  6E2F               	movwf	(??_xtoa+2)^0,c
  3181  000A14  0E00               	movlw	0
  3182  000A16  1048               	iorwf	(xtoa@c+1)^0,w,c
  3183  000A18  6E30               	movwf	(??_xtoa+3)^0,c
  3184  000A1A  502D               	movf	??_xtoa^0,w,c
  3185  000A1C  262F               	addwf	(??_xtoa+2)^0,f,c
  3186  000A1E  502E               	movf	(??_xtoa+1)^0,w,c
  3187  000A20  2230               	addwfc	(??_xtoa+3)^0,f,c
  3188  000A22  5030               	movf	(??_xtoa+3)^0,w,c
  3189  000A24  E10A               	bnz	u5140
  3190  000A26  0E1A               	movlw	26
  3191  000A28  5C2F               	subwf	(??_xtoa+2)^0,w,c
  3192  000A2A  A0D8               	btfss	status,0,c
  3193  000A2C  EF1A  F005         	goto	u5141
  3194  000A30  EF1D  F005         	goto	u5140
  3195  000A34                     u5141:
  3196  000A34  0E01               	movlw	1
  3197  000A36  EF1E  F005         	goto	u5150
  3198  000A3A                     u5140:
  3199  000A3A  0E00               	movlw	0
  3200  000A3C                     u5150:
  3201  000A3C  6E37               	movwf	_xtoa$1859^0,c
  3202  000A3E  6A38               	clrf	(_xtoa$1859+1)^0,c
  3203  000A40  5037               	movf	_xtoa$1859^0,w,c
  3204  000A42  1038               	iorwf	(_xtoa$1859+1)^0,w,c
  3205  000A44  B4D8               	btfsc	status,2,c
  3206  000A46  EF27  F005         	goto	u5161
  3207  000A4A  EF29  F005         	goto	u5160
  3208  000A4E                     u5161:
  3209  000A4E  EF33  F005         	goto	l4609
  3210  000A52                     u5160:
  3211  000A52                     
  3212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  3213  000A52  C047  F00B         	movff	xtoa@c,toupper@c
  3214  000A56  C048  F00C         	movff	xtoa@c+1,toupper@c+1
  3215  000A5A  EC1C  F00C         	call	_toupper	;wreg free
  3216  000A5E  C00B  F047         	movff	?_toupper,xtoa@c
  3217  000A62  C00C  F048         	movff	?_toupper+1,xtoa@c+1
  3218  000A66                     l4609:
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  3221  000A66  0E77               	movlw	low _dbuf
  3222  000A68  2445               	addwf	xtoa@i^0,w,c
  3223  000A6A  6ED9               	movwf	fsr2l,c
  3224  000A6C  0E01               	movlw	high _dbuf
  3225  000A6E  2046               	addwfc	(xtoa@i+1)^0,w,c
  3226  000A70  6EDA               	movwf	fsr2h,c
  3227  000A72  C047  FFDF         	movff	xtoa@c,indf2
  3228  000A76                     
  3229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  3230  000A76  0639               	decf	xtoa@p^0,f,c
  3231  000A78  A0D8               	btfss	status,0,c
  3232  000A7A  063A               	decf	(xtoa@p+1)^0,f,c
  3233  000A7C                     
  3234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  3235  000A7C  063B               	decf	xtoa@w^0,f,c
  3236  000A7E  A0D8               	btfss	status,0,c
  3237  000A80  063C               	decf	(xtoa@w+1)^0,f,c
  3238  000A82                     
  3239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3240  000A82  C03D  F02D         	movff	xtoa@n,??_xtoa
  3241  000A86  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
  3242  000A8A  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
  3243  000A8E  C040  F030         	movff	xtoa@n+3,??_xtoa+3
  3244  000A92  C041  F031         	movff	xtoa@n+4,??_xtoa+4
  3245  000A96  C042  F032         	movff	xtoa@n+5,??_xtoa+5
  3246  000A9A  C043  F033         	movff	xtoa@n+6,??_xtoa+6
  3247  000A9E  C044  F034         	movff	xtoa@n+7,??_xtoa+7
  3248  000AA2  0E05               	movlw	5
  3249  000AA4  EF5D  F005         	goto	u5170
  3250  000AA8                     u5175:
  3251  000AA8  90D8               	bcf	status,0,c
  3252  000AAA  3234               	rrcf	(??_xtoa+7)^0,f,c
  3253  000AAC  3233               	rrcf	(??_xtoa+6)^0,f,c
  3254  000AAE  3232               	rrcf	(??_xtoa+5)^0,f,c
  3255  000AB0  3231               	rrcf	(??_xtoa+4)^0,f,c
  3256  000AB2  3230               	rrcf	(??_xtoa+3)^0,f,c
  3257  000AB4  322F               	rrcf	(??_xtoa+2)^0,f,c
  3258  000AB6  322E               	rrcf	(??_xtoa+1)^0,f,c
  3259  000AB8  322D               	rrcf	??_xtoa^0,f,c
  3260  000ABA                     u5170:
  3261  000ABA  2EE8               	decfsz	wreg,f,c
  3262  000ABC  EF54  F005         	goto	u5175
  3263  000AC0  C02D  F03D         	movff	??_xtoa,xtoa@n
  3264  000AC4  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
  3265  000AC8  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
  3266  000ACC  C030  F040         	movff	??_xtoa+3,xtoa@n+3
  3267  000AD0  C031  F041         	movff	??_xtoa+4,xtoa@n+4
  3268  000AD4  C032  F042         	movff	??_xtoa+5,xtoa@n+5
  3269  000AD8  C033  F043         	movff	??_xtoa+6,xtoa@n+6
  3270  000ADC  C034  F044         	movff	??_xtoa+7,xtoa@n+7
  3271  000AE0                     l4617:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3274  000AE0  BE46               	btfsc	(xtoa@i+1)^0,7,c
  3275  000AE2  EF7C  F005         	goto	u5181
  3276  000AE6  5046               	movf	(xtoa@i+1)^0,w,c
  3277  000AE8  E109               	bnz	u5180
  3278  000AEA  0E02               	movlw	2
  3279  000AEC  5C45               	subwf	xtoa@i^0,w,c
  3280  000AEE  A0D8               	btfss	status,0,c
  3281  000AF0  EF7C  F005         	goto	u5181
  3282  000AF4  EF7E  F005         	goto	u5180
  3283  000AF8                     u5181:
  3284  000AF8  EFAE  F005         	goto	l1399
  3285  000AFC                     u5180:
  3286  000AFC  503D               	movf	xtoa@n^0,w,c
  3287  000AFE  103E               	iorwf	(xtoa@n+1)^0,w,c
  3288  000B00  103F               	iorwf	(xtoa@n+2)^0,w,c
  3289  000B02  1040               	iorwf	(xtoa@n+3)^0,w,c
  3290  000B04  1041               	iorwf	(xtoa@n+4)^0,w,c
  3291  000B06  1042               	iorwf	(xtoa@n+5)^0,w,c
  3292  000B08  1043               	iorwf	(xtoa@n+6)^0,w,c
  3293  000B0A  1044               	iorwf	(xtoa@n+7)^0,w,c
  3294  000B0C  A4D8               	btfss	status,2,c
  3295  000B0E  EF8B  F005         	goto	u5191
  3296  000B12  EF8D  F005         	goto	u5190
  3297  000B16                     u5191:
  3298  000B16  EFBD  F004         	goto	l4587
  3299  000B1A                     u5190:
  3300  000B1A  BE3A               	btfsc	(xtoa@p+1)^0,7,c
  3301  000B1C  EF9A  F005         	goto	u5200
  3302  000B20  503A               	movf	(xtoa@p+1)^0,w,c
  3303  000B22  E106               	bnz	u5201
  3304  000B24  0439               	decf	xtoa@p^0,w,c
  3305  000B26  B0D8               	btfsc	status,0,c
  3306  000B28  EF98  F005         	goto	u5201
  3307  000B2C  EF9A  F005         	goto	u5200
  3308  000B30                     u5201:
  3309  000B30  EFBD  F004         	goto	l4587
  3310  000B34                     u5200:
  3311  000B34  BE3C               	btfsc	(xtoa@w+1)^0,7,c
  3312  000B36  EFA5  F005         	goto	u5211
  3313  000B3A  503C               	movf	(xtoa@w+1)^0,w,c
  3314  000B3C  E108               	bnz	u5210
  3315  000B3E  043B               	decf	xtoa@w^0,w,c
  3316  000B40  A0D8               	btfss	status,0,c
  3317  000B42  EFA5  F005         	goto	u5211
  3318  000B46  EFA7  F005         	goto	u5210
  3319  000B4A                     u5211:
  3320  000B4A  EFAE  F005         	goto	l1399
  3321  000B4E                     u5210:
  3322  000B4E  B257               	btfsc	_flags^0,1,c
  3323  000B50  EFAC  F005         	goto	u5221
  3324  000B54  EFAE  F005         	goto	u5220
  3325  000B58                     u5221:
  3326  000B58  EFBD  F004         	goto	l4587
  3327  000B5C                     u5220:
  3328  000B5C                     l1399:
  3329                           
  3330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3331  000B5C  A857               	btfss	_flags^0,4,c
  3332  000B5E  EFB3  F005         	goto	u5231
  3333  000B62  EFB5  F005         	goto	u5230
  3334  000B66                     u5231:
  3335  000B66  EFCB  F005         	goto	l4633
  3336  000B6A                     u5230:
  3337  000B6A                     
  3338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  3339  000B6A  0645               	decf	xtoa@i^0,f,c
  3340  000B6C  A0D8               	btfss	status,0,c
  3341  000B6E  0646               	decf	(xtoa@i+1)^0,f,c
  3342  000B70                     
  3343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3344  000B70  0E77               	movlw	low _dbuf
  3345  000B72  2445               	addwf	xtoa@i^0,w,c
  3346  000B74  6ED9               	movwf	fsr2l,c
  3347  000B76  0E01               	movlw	high _dbuf
  3348  000B78  2046               	addwfc	(xtoa@i+1)^0,w,c
  3349  000B7A  6EDA               	movwf	fsr2h,c
  3350  000B7C  C02C  FFDF         	movff	xtoa@x,indf2
  3351  000B80                     
  3352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  3353  000B80  0645               	decf	xtoa@i^0,f,c
  3354  000B82  A0D8               	btfss	status,0,c
  3355  000B84  0646               	decf	(xtoa@i+1)^0,f,c
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3358  000B86  0E77               	movlw	low _dbuf
  3359  000B88  2445               	addwf	xtoa@i^0,w,c
  3360  000B8A  6ED9               	movwf	fsr2l,c
  3361  000B8C  0E01               	movlw	high _dbuf
  3362  000B8E  2046               	addwfc	(xtoa@i+1)^0,w,c
  3363  000B90  6EDA               	movwf	fsr2h,c
  3364  000B92  0E30               	movlw	48
  3365  000B94  6EDF               	movwf	indf2,c
  3366  000B96                     l4633:
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3369  000B96  C022  F017         	movff	xtoa@fp,pad@fp
  3370  000B9A  C023  F018         	movff	xtoa@fp+1,pad@fp+1
  3371  000B9E  0E77               	movlw	low _dbuf
  3372  000BA0  2445               	addwf	xtoa@i^0,w,c
  3373  000BA2  6E19               	movwf	pad@buf^0,c
  3374  000BA4  0E01               	movlw	high _dbuf
  3375  000BA6  2046               	addwfc	(xtoa@i+1)^0,w,c
  3376  000BA8  6E1A               	movwf	(pad@buf+1)^0,c
  3377  000BAA  C03B  F01B         	movff	xtoa@w,pad@p
  3378  000BAE  C03C  F01C         	movff	xtoa@w+1,pad@p+1
  3379  000BB2  EC64  F00A         	call	_pad	;wreg free
  3380  000BB6  C017  F022         	movff	?_pad,?_xtoa
  3381  000BBA  C018  F023         	movff	?_pad+1,?_xtoa+1
  3382  000BBE  0012               	return		;funcret
  3383  000BC0                     __end_of_xtoa:
  3384                           	callstack 0
  3385                           
  3386 ;; *************** function _toupper *****************
  3387 ;; Defined at:
  3388 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  c               2   10[COMRAM] int 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  2   10[COMRAM] int 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;Total ram usage:        8 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; Hardware stack levels required when called: 5
  3409 ;; This function calls:
  3410 ;;		_islower
  3411 ;; This function is called by:
  3412 ;;		_xtoa
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text6
  3417  001838                     __ptext6:
  3418                           	callstack 0
  3419  001838                     _toupper:
  3420                           	callstack 20
  3421  001838  0E9F               	movlw	159
  3422  00183A  6E0D               	movwf	??_toupper^0,c
  3423  00183C  0EFF               	movlw	255
  3424  00183E  6E0E               	movwf	(??_toupper+1)^0,c
  3425  001840  C00B  F00F         	movff	toupper@c,??_toupper+2
  3426  001844  C00C  F010         	movff	toupper@c+1,??_toupper+3
  3427  001848  500D               	movf	??_toupper^0,w,c
  3428  00184A  260F               	addwf	(??_toupper+2)^0,f,c
  3429  00184C  500E               	movf	(??_toupper+1)^0,w,c
  3430  00184E  2210               	addwfc	(??_toupper+3)^0,f,c
  3431  001850  5010               	movf	(??_toupper+3)^0,w,c
  3432  001852  E10A               	bnz	u4620
  3433  001854  0E1A               	movlw	26
  3434  001856  5C0F               	subwf	(??_toupper+2)^0,w,c
  3435  001858  A0D8               	btfss	status,0,c
  3436  00185A  EF31  F00C         	goto	u4621
  3437  00185E  EF34  F00C         	goto	u4620
  3438  001862                     u4621:
  3439  001862  0E01               	movlw	1
  3440  001864  EF35  F00C         	goto	u4630
  3441  001868                     u4620:
  3442  001868  0E00               	movlw	0
  3443  00186A                     u4630:
  3444  00186A  6E11               	movwf	_toupper$1951^0,c
  3445  00186C  6A12               	clrf	(_toupper$1951+1)^0,c
  3446  00186E  5011               	movf	_toupper$1951^0,w,c
  3447  001870  1012               	iorwf	(_toupper$1951+1)^0,w,c
  3448  001872  B4D8               	btfsc	status,2,c
  3449  001874  EF3E  F00C         	goto	u4641
  3450  001878  EF40  F00C         	goto	u4640
  3451  00187C                     u4641:
  3452  00187C  EF46  F00C         	goto	l1499
  3453  001880                     u4640:
  3454  001880  0E5F               	movlw	95
  3455  001882  140B               	andwf	toupper@c^0,w,c
  3456  001884  6E0B               	movwf	?_toupper^0,c
  3457  001886  6A0C               	clrf	(?_toupper+1)^0,c
  3458  001888  EF4A  F00C         	goto	l1504
  3459  00188C                     l1499:
  3460  00188C  C00B  F00B         	movff	toupper@c,?_toupper
  3461  001890  C00C  F00C         	movff	toupper@c+1,?_toupper+1
  3462  001894                     l1504:
  3463  001894  0012               	return		;funcret
  3464  001896                     __end_of_toupper:
  3465                           	callstack 0
  3466                           
  3467 ;; *************** function _islower *****************
  3468 ;; Defined at:
  3469 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  c               2    4[COMRAM] int 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  2    4[COMRAM] int 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;Total ram usage:        6 bytes
  3488 ;; Hardware stack levels used: 1
  3489 ;; Hardware stack levels required when called: 4
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_toupper
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text7
  3498  001AEE                     __ptext7:
  3499                           	callstack 0
  3500  001AEE                     _islower:
  3501                           	callstack 20
  3502  001AEE  0E9F               	movlw	159
  3503  001AF0  6E07               	movwf	??_islower^0,c
  3504  001AF2  0EFF               	movlw	255
  3505  001AF4  6E08               	movwf	(??_islower+1)^0,c
  3506  001AF6  C005  F009         	movff	islower@c,??_islower+2
  3507  001AFA  C006  F00A         	movff	islower@c+1,??_islower+3
  3508  001AFE  5007               	movf	??_islower^0,w,c
  3509  001B00  2609               	addwf	(??_islower+2)^0,f,c
  3510  001B02  5008               	movf	(??_islower+1)^0,w,c
  3511  001B04  220A               	addwfc	(??_islower+3)^0,f,c
  3512  001B06  500A               	movf	(??_islower+3)^0,w,c
  3513  001B08  E10A               	bnz	u4340
  3514  001B0A  0E1A               	movlw	26
  3515  001B0C  5C09               	subwf	(??_islower+2)^0,w,c
  3516  001B0E  A0D8               	btfss	status,0,c
  3517  001B10  EF8C  F00D         	goto	u4341
  3518  001B14  EF8F  F00D         	goto	u4340
  3519  001B18                     u4341:
  3520  001B18  0E01               	movlw	1
  3521  001B1A  EF90  F00D         	goto	u4350
  3522  001B1E                     u4340:
  3523  001B1E  0E00               	movlw	0
  3524  001B20                     u4350:
  3525  001B20  6E05               	movwf	?_islower^0,c
  3526  001B22  6A06               	clrf	(?_islower+1)^0,c
  3527  001B24  0012               	return		;funcret
  3528  001B26                     __end_of_islower:
  3529                           	callstack 0
  3530                           
  3531 ;; *************** function _isupper *****************
  3532 ;; Defined at:
  3533 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  c               2    4[COMRAM] int 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  2    4[COMRAM] int 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;Total ram usage:        6 bytes
  3552 ;; Hardware stack levels used: 1
  3553 ;; Hardware stack levels required when called: 4
  3554 ;; This function calls:
  3555 ;;		Nothing
  3556 ;; This function is called by:
  3557 ;;		_xtoa
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text8
  3562  001B26                     __ptext8:
  3563                           	callstack 0
  3564  001B26                     _isupper:
  3565                           	callstack 21
  3566  001B26  0EBF               	movlw	191
  3567  001B28  6E07               	movwf	??_isupper^0,c
  3568  001B2A  0EFF               	movlw	255
  3569  001B2C  6E08               	movwf	(??_isupper+1)^0,c
  3570  001B2E  C005  F009         	movff	isupper@c,??_isupper+2
  3571  001B32  C006  F00A         	movff	isupper@c+1,??_isupper+3
  3572  001B36  5007               	movf	??_isupper^0,w,c
  3573  001B38  2609               	addwf	(??_isupper+2)^0,f,c
  3574  001B3A  5008               	movf	(??_isupper+1)^0,w,c
  3575  001B3C  220A               	addwfc	(??_isupper+3)^0,f,c
  3576  001B3E  500A               	movf	(??_isupper+3)^0,w,c
  3577  001B40  E10A               	bnz	u4580
  3578  001B42  0E1A               	movlw	26
  3579  001B44  5C09               	subwf	(??_isupper+2)^0,w,c
  3580  001B46  A0D8               	btfss	status,0,c
  3581  001B48  EFA8  F00D         	goto	u4581
  3582  001B4C  EFAB  F00D         	goto	u4580
  3583  001B50                     u4581:
  3584  001B50  0E01               	movlw	1
  3585  001B52  EFAC  F00D         	goto	u4590
  3586  001B56                     u4580:
  3587  001B56  0E00               	movlw	0
  3588  001B58                     u4590:
  3589  001B58  6E05               	movwf	?_isupper^0,c
  3590  001B5A  6A06               	clrf	(?_isupper+1)^0,c
  3591  001B5C  0012               	return		;funcret
  3592  001B5E                     __end_of_isupper:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function _isalpha *****************
  3596 ;; Defined at:
  3597 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  c               2    4[COMRAM] int 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  2    4[COMRAM] int 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;Total ram usage:        6 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 4
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_xtoa
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text9
  3626  001AB2                     __ptext9:
  3627                           	callstack 0
  3628  001AB2                     _isalpha:
  3629                           	callstack 21
  3630  001AB2  0E9F               	movlw	159
  3631  001AB4  6E07               	movwf	??_isalpha^0,c
  3632  001AB6  0EFF               	movlw	255
  3633  001AB8  6E08               	movwf	(??_isalpha+1)^0,c
  3634  001ABA  0E20               	movlw	32
  3635  001ABC  1005               	iorwf	isalpha@c^0,w,c
  3636  001ABE  6E09               	movwf	(??_isalpha+2)^0,c
  3637  001AC0  0E00               	movlw	0
  3638  001AC2  1006               	iorwf	(isalpha@c+1)^0,w,c
  3639  001AC4  6E0A               	movwf	(??_isalpha+3)^0,c
  3640  001AC6  5007               	movf	??_isalpha^0,w,c
  3641  001AC8  2609               	addwf	(??_isalpha+2)^0,f,c
  3642  001ACA  5008               	movf	(??_isalpha+1)^0,w,c
  3643  001ACC  220A               	addwfc	(??_isalpha+3)^0,f,c
  3644  001ACE  500A               	movf	(??_isalpha+3)^0,w,c
  3645  001AD0  E10A               	bnz	u4600
  3646  001AD2  0E1A               	movlw	26
  3647  001AD4  5C09               	subwf	(??_isalpha+2)^0,w,c
  3648  001AD6  A0D8               	btfss	status,0,c
  3649  001AD8  EF70  F00D         	goto	u4601
  3650  001ADC  EF73  F00D         	goto	u4600
  3651  001AE0                     u4601:
  3652  001AE0  0E01               	movlw	1
  3653  001AE2  EF74  F00D         	goto	u4610
  3654  001AE6                     u4600:
  3655  001AE6  0E00               	movlw	0
  3656  001AE8                     u4610:
  3657  001AE8  6E05               	movwf	?_isalpha^0,c
  3658  001AEA  6A06               	clrf	(?_isalpha+1)^0,c
  3659  001AEC  0012               	return		;funcret
  3660  001AEE                     __end_of_isalpha:
  3661                           	callstack 0
  3662                           
  3663 ;; *************** function _stoa *****************
  3664 ;; Defined at:
  3665 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  3668 ;;		 -> NULL(0), sprintf@f(6), 
  3669 ;;  s               2   17[COMRAM] PTR unsigned char 
  3670 ;;		 -> ?_printf(2), ?_sprintf(2), STR_60(9), STR_58(9), 
  3671 ;;		 -> STR_56(8), STR_54(9), STR_52(8), STR_50(9), 
  3672 ;;		 -> STR_48(8), STR_46(3), STR_44(10), STR_42(10), 
  3673 ;;		 -> STR_40(9), STR_38(11), STR_36(8), STR_34(6), 
  3674 ;;		 -> STR_32(6), STR_30(5), STR_28(7), STR_26(7), 
  3675 ;;		 -> STR_24(9), STR_22(8), day_string(20), rtc_get_time@mo(20), 
  3676 ;;		 -> getReading@outT(5), temperature_read(5), getReading@outH(5), getReading@rh_code(4), 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  nuls            7   20[COMRAM] unsigned char [7]
  3679 ;;  l               2   35[COMRAM] int 
  3680 ;;  p               2   33[COMRAM] int 
  3681 ;;  cp              2   31[COMRAM] PTR unsigned char 
  3682 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), STR_60(9), 
  3683 ;;		 -> STR_58(9), STR_56(8), STR_54(9), STR_52(8), 
  3684 ;;		 -> STR_50(9), STR_48(8), STR_46(3), STR_44(10), 
  3685 ;;		 -> STR_42(10), STR_40(9), STR_38(11), STR_36(8), 
  3686 ;;		 -> STR_34(6), STR_32(6), STR_30(5), STR_28(7), 
  3687 ;;		 -> STR_26(7), STR_24(9), STR_22(8), day_string(20), 
  3688 ;;		 -> rtc_get_time@mo(20), getReading@outT(5), temperature_read(5), getReading@outH(5), 
  3689 ;;		 -> getReading@rh_code(4), 
  3690 ;;  w               2   29[COMRAM] int 
  3691 ;;  i               2   27[COMRAM] int 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  2   15[COMRAM] int 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3701 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3702 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;Total ram usage:       22 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 7
  3708 ;; This function calls:
  3709 ;;		_fputc
  3710 ;;		_strlen
  3711 ;; This function is called by:
  3712 ;;		_vfpfcnvrt
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text10
  3717  000DC2                     __ptext10:
  3718                           	callstack 0
  3719  000DC2                     _stoa:
  3720                           	callstack 19
  3721  000DC2                     
  3722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  3723  000DC2  EE20  F0E7         	lfsr	2,stoa@F1146
  3724  000DC6  EE10  F015         	lfsr	1,stoa@nuls
  3725  000DCA  0E06               	movlw	6
  3726  000DCC                     u4971:
  3727  000DCC  CFDB FFE3          	movff	plusw2,plusw1
  3728  000DD0  06E8               	decf	wreg,f,c
  3729  000DD2  E2FC               	bc	u4971
  3730  000DD4                     
  3731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  3732  000DD4  C012  F020         	movff	stoa@s,stoa@cp
  3733  000DD8  C013  F021         	movff	stoa@s+1,stoa@cp+1
  3734  000DDC                     
  3735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  3736  000DDC  5020               	movf	stoa@cp^0,w,c
  3737  000DDE  1021               	iorwf	(stoa@cp+1)^0,w,c
  3738  000DE0  A4D8               	btfss	status,2,c
  3739  000DE2  EFF5  F006         	goto	u4981
  3740  000DE6  EFF7  F006         	goto	u4980
  3741  000DEA                     u4981:
  3742  000DEA  EFFB  F006         	goto	l4537
  3743  000DEE                     u4980:
  3744  000DEE                     
  3745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  3746  000DEE  0E15               	movlw	low stoa@nuls
  3747  000DF0  6E20               	movwf	stoa@cp^0,c
  3748  000DF2  0E00               	movlw	high stoa@nuls
  3749  000DF4  6E21               	movwf	(stoa@cp+1)^0,c
  3750  000DF6                     l4537:
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  3753  000DF6  C020  F005         	movff	stoa@cp,strlen@s
  3754  000DFA  C021  F006         	movff	stoa@cp+1,strlen@s+1
  3755  000DFE  ECCE  F00C         	call	_strlen	;wreg free
  3756  000E02  C005  F024         	movff	?_strlen,stoa@l
  3757  000E06  C006  F025         	movff	?_strlen+1,stoa@l+1
  3758  000E0A                     
  3759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  3760  000E0A  C06C  F022         	movff	_prec,stoa@p
  3761  000E0E  C06D  F023         	movff	_prec+1,stoa@p+1
  3762  000E12                     
  3763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  3764  000E12  BE23               	btfsc	(stoa@p+1)^0,7,c
  3765  000E14  EF0E  F007         	goto	u4991
  3766  000E18  EF10  F007         	goto	u4990
  3767  000E1C                     u4991:
  3768  000E1C  EF25  F007         	goto	l1357
  3769  000E20                     u4990:
  3770  000E20  5024               	movf	stoa@l^0,w,c
  3771  000E22  5C22               	subwf	stoa@p^0,w,c
  3772  000E24  5023               	movf	(stoa@p+1)^0,w,c
  3773  000E26  0A80               	xorlw	128
  3774  000E28  6E14               	movwf	??_stoa^0,c
  3775  000E2A  5025               	movf	(stoa@l+1)^0,w,c
  3776  000E2C  0A80               	xorlw	128
  3777  000E2E  5814               	subwfb	??_stoa^0,w,c
  3778  000E30  A0D8               	btfss	status,0,c
  3779  000E32  EF1D  F007         	goto	u5001
  3780  000E36  EF1F  F007         	goto	u5000
  3781  000E3A                     u5001:
  3782  000E3A  EF21  F007         	goto	l1355
  3783  000E3E                     u5000:
  3784  000E3E  EF25  F007         	goto	l1357
  3785  000E42                     l1355:
  3786  000E42  C022  F024         	movff	stoa@p,stoa@l
  3787  000E46  C023  F025         	movff	stoa@p+1,stoa@l+1
  3788  000E4A                     l1357:
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  3791  000E4A  C024  F022         	movff	stoa@l,stoa@p
  3792  000E4E  C025  F023         	movff	stoa@l+1,stoa@p+1
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  3795  000E52  C06A  F01E         	movff	_width,stoa@w
  3796  000E56  C06B  F01F         	movff	_width+1,stoa@w+1
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  3799  000E5A  B057               	btfsc	_flags^0,0,c
  3800  000E5C  EF32  F007         	goto	u5011
  3801  000E60  EF34  F007         	goto	u5010
  3802  000E64                     u5011:
  3803  000E64  EF51  F007         	goto	l4553
  3804  000E68                     u5010:
  3805  000E68  EF42  F007         	goto	l4551
  3806  000E6C                     l4547:
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  3809  000E6C  0E00               	movlw	0
  3810  000E6E  6E08               	movwf	(fputc@c+1)^0,c
  3811  000E70  0E20               	movlw	32
  3812  000E72  6E07               	movwf	fputc@c^0,c
  3813  000E74  C010  F009         	movff	stoa@fp,fputc@fp
  3814  000E78  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  3815  000E7C  ECFF  F009         	call	_fputc	;wreg free
  3816  000E80                     
  3817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  3818  000E80  4A24               	infsnz	stoa@l^0,f,c
  3819  000E82  2A25               	incf	(stoa@l+1)^0,f,c
  3820  000E84                     l4551:
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  3823  000E84  501E               	movf	stoa@w^0,w,c
  3824  000E86  5C24               	subwf	stoa@l^0,w,c
  3825  000E88  5025               	movf	(stoa@l+1)^0,w,c
  3826  000E8A  0A80               	xorlw	128
  3827  000E8C  6E14               	movwf	??_stoa^0,c
  3828  000E8E  501F               	movf	(stoa@w+1)^0,w,c
  3829  000E90  0A80               	xorlw	128
  3830  000E92  5814               	subwfb	??_stoa^0,w,c
  3831  000E94  A0D8               	btfss	status,0,c
  3832  000E96  EF4F  F007         	goto	u5021
  3833  000E9A  EF51  F007         	goto	u5020
  3834  000E9E                     u5021:
  3835  000E9E  EF36  F007         	goto	l4547
  3836  000EA2                     u5020:
  3837  000EA2                     l4553:
  3838                           
  3839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  3840  000EA2  0E00               	movlw	0
  3841  000EA4  6E1D               	movwf	(stoa@i+1)^0,c
  3842  000EA6  0E00               	movlw	0
  3843  000EA8  6E1C               	movwf	stoa@i^0,c
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  3846  000EAA  EF76  F007         	goto	l4561
  3847  000EAE                     l4555:
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  3850  000EAE  C020  FFF6         	movff	stoa@cp,tblptrl
  3851  000EB2  C021  FFF7         	movff	stoa@cp+1,tblptrh
  3852  000EB6  0E00               	movlw	low (__mediumconst shr (0+16))
  3853  000EB8  6EF8               	movwf	tblptru,c
  3854  000EBA  0E0F               	movlw	(high __ramtop+-1)
  3855  000EBC  64F7               	cpfsgt	tblptrh,c
  3856  000EBE  D003               	bra	u5037
  3857  000EC0  0008               	tblrd		*
  3858  000EC2  50F5               	movf	tablat,w,c
  3859  000EC4  D005               	bra	u5030
  3860  000EC6                     u5037:
  3861  000EC6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3862  000ECA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3863  000ECE  50EF               	movf	indf0,w,c
  3864  000ED0                     u5030:
  3865  000ED0  6E14               	movwf	??_stoa^0,c
  3866  000ED2  5014               	movf	??_stoa^0,w,c
  3867  000ED4  6E07               	movwf	fputc@c^0,c
  3868  000ED6  6A08               	clrf	(fputc@c+1)^0,c
  3869  000ED8  C010  F009         	movff	stoa@fp,fputc@fp
  3870  000EDC  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  3871  000EE0  ECFF  F009         	call	_fputc	;wreg free
  3872  000EE4                     
  3873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  3874  000EE4  4A20               	infsnz	stoa@cp^0,f,c
  3875  000EE6  2A21               	incf	(stoa@cp+1)^0,f,c
  3876  000EE8                     
  3877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  3878  000EE8  4A1C               	infsnz	stoa@i^0,f,c
  3879  000EEA  2A1D               	incf	(stoa@i+1)^0,f,c
  3880  000EEC                     l4561:
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  3883  000EEC  5022               	movf	stoa@p^0,w,c
  3884  000EEE  5C1C               	subwf	stoa@i^0,w,c
  3885  000EF0  501D               	movf	(stoa@i+1)^0,w,c
  3886  000EF2  0A80               	xorlw	128
  3887  000EF4  6E14               	movwf	??_stoa^0,c
  3888  000EF6  5023               	movf	(stoa@p+1)^0,w,c
  3889  000EF8  0A80               	xorlw	128
  3890  000EFA  5814               	subwfb	??_stoa^0,w,c
  3891  000EFC  A0D8               	btfss	status,0,c
  3892  000EFE  EF83  F007         	goto	u5041
  3893  000F02  EF85  F007         	goto	u5040
  3894  000F06                     u5041:
  3895  000F06  EF57  F007         	goto	l4555
  3896  000F0A                     u5040:
  3897  000F0A                     
  3898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  3899  000F0A  A057               	btfss	_flags^0,0,c
  3900  000F0C  EF8A  F007         	goto	u5051
  3901  000F10  EF8C  F007         	goto	u5050
  3902  000F14                     u5051:
  3903  000F14  EFA9  F007         	goto	l1367
  3904  000F18                     u5050:
  3905  000F18  EF9A  F007         	goto	l4569
  3906  000F1C                     l4565:
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  3909  000F1C  0E00               	movlw	0
  3910  000F1E  6E08               	movwf	(fputc@c+1)^0,c
  3911  000F20  0E20               	movlw	32
  3912  000F22  6E07               	movwf	fputc@c^0,c
  3913  000F24  C010  F009         	movff	stoa@fp,fputc@fp
  3914  000F28  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  3915  000F2C  ECFF  F009         	call	_fputc	;wreg free
  3916  000F30                     
  3917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  3918  000F30  4A24               	infsnz	stoa@l^0,f,c
  3919  000F32  2A25               	incf	(stoa@l+1)^0,f,c
  3920  000F34                     l4569:
  3921                           
  3922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  3923  000F34  501E               	movf	stoa@w^0,w,c
  3924  000F36  5C24               	subwf	stoa@l^0,w,c
  3925  000F38  5025               	movf	(stoa@l+1)^0,w,c
  3926  000F3A  0A80               	xorlw	128
  3927  000F3C  6E14               	movwf	??_stoa^0,c
  3928  000F3E  501F               	movf	(stoa@w+1)^0,w,c
  3929  000F40  0A80               	xorlw	128
  3930  000F42  5814               	subwfb	??_stoa^0,w,c
  3931  000F44  A0D8               	btfss	status,0,c
  3932  000F46  EFA7  F007         	goto	u5061
  3933  000F4A  EFA9  F007         	goto	u5060
  3934  000F4E                     u5061:
  3935  000F4E  EF8E  F007         	goto	l4565
  3936  000F52                     u5060:
  3937  000F52                     l1367:
  3938                           
  3939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  3940  000F52  C024  F010         	movff	stoa@l,?_stoa
  3941  000F56  C025  F011         	movff	stoa@l+1,?_stoa+1
  3942  000F5A  0012               	return		;funcret
  3943  000F5C                     __end_of_stoa:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _dtoa *****************
  3947 ;; Defined at:
  3948 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  3951 ;;		 -> NULL(0), sprintf@f(6), 
  3952 ;;  d               8   35[COMRAM] long long 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  n               8   59[COMRAM] long long 
  3955 ;;  i               2   67[COMRAM] int 
  3956 ;;  s               2   57[COMRAM] int 
  3957 ;;  w               2   55[COMRAM] int 
  3958 ;;  p               2   53[COMRAM] int 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  2   33[COMRAM] int 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3968 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;Total ram usage:       36 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; Hardware stack levels required when called: 9
  3975 ;; This function calls:
  3976 ;;		___aodiv
  3977 ;;		___aomod
  3978 ;;		_abs
  3979 ;;		_pad
  3980 ;; This function is called by:
  3981 ;;		_vfpfcnvrt
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text11
  3986  00060A                     __ptext11:
  3987                           	callstack 0
  3988  00060A                     _dtoa:
  3989                           	callstack 17
  3990  00060A                     
  3991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3992  00060A  C024  F03C         	movff	dtoa@d,dtoa@n
  3993  00060E  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  3994  000612  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  3995  000616  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  3996  00061A  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  3997  00061E  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  3998  000622  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  3999  000626  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  4000  00062A                     
  4001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4002  00062A  BE43               	btfsc	(dtoa@n+7)^0,7,c
  4003  00062C  EF1A  F003         	goto	u4821
  4004  000630  EF1D  F003         	goto	u4820
  4005  000634                     u4821:
  4006  000634  0E01               	movlw	1
  4007  000636  EF1E  F003         	goto	u4830
  4008  00063A                     u4820:
  4009  00063A  0E00               	movlw	0
  4010  00063C                     u4830:
  4011  00063C  6E3A               	movwf	dtoa@s^0,c
  4012  00063E  6A3B               	clrf	(dtoa@s+1)^0,c
  4013                           
  4014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4015  000640  503A               	movf	dtoa@s^0,w,c
  4016  000642  103B               	iorwf	(dtoa@s+1)^0,w,c
  4017  000644  B4D8               	btfsc	status,2,c
  4018  000646  EF27  F003         	goto	u4841
  4019  00064A  EF29  F003         	goto	u4840
  4020  00064E                     u4841:
  4021  00064E  EF39  F003         	goto	l4473
  4022  000652                     u4840:
  4023  000652                     
  4024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4025  000652  1E43               	comf	(dtoa@n+7)^0,f,c
  4026  000654  1E42               	comf	(dtoa@n+6)^0,f,c
  4027  000656  1E41               	comf	(dtoa@n+5)^0,f,c
  4028  000658  1E40               	comf	(dtoa@n+4)^0,f,c
  4029  00065A  1E3F               	comf	(dtoa@n+3)^0,f,c
  4030  00065C  1E3E               	comf	(dtoa@n+2)^0,f,c
  4031  00065E  1E3D               	comf	(dtoa@n+1)^0,f,c
  4032  000660  6C3C               	negf	dtoa@n^0,c
  4033  000662  0E00               	movlw	0
  4034  000664  223D               	addwfc	(dtoa@n+1)^0,f,c
  4035  000666  223E               	addwfc	(dtoa@n+2)^0,f,c
  4036  000668  223F               	addwfc	(dtoa@n+3)^0,f,c
  4037  00066A  2240               	addwfc	(dtoa@n+4)^0,f,c
  4038  00066C  2241               	addwfc	(dtoa@n+5)^0,f,c
  4039  00066E  2242               	addwfc	(dtoa@n+6)^0,f,c
  4040  000670  2243               	addwfc	(dtoa@n+7)^0,f,c
  4041  000672                     l4473:
  4042                           
  4043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4044  000672  0100               	movlb	0	; () banked
  4045  000674  BF6D               	btfsc	(_prec+1)& (0+255),7,b
  4046  000676  EF3F  F003         	goto	u4851
  4047  00067A  EF41  F003         	goto	u4850
  4048  00067E                     u4851:
  4049  00067E  EF42  F003         	goto	l4477
  4050  000682                     u4850:
  4051  000682                     
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4054  000682  9257               	bcf	_flags^0,1,c
  4055  000684                     l4477:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4059  000684  BF6D               	btfsc	(_prec+1)& (0+255),7,b
  4060  000686  EF4F  F003         	goto	u4860
  4061  00068A  516D               	movf	(_prec+1)& (0+255),w,b
  4062  00068C  E106               	bnz	u4861
  4063  00068E  056C               	decf	_prec& (0+255),w,b
  4064  000690  B0D8               	btfsc	status,0,c
  4065  000692  EF4D  F003         	goto	u4861
  4066  000696  EF4F  F003         	goto	u4860
  4067  00069A                     u4861:
  4068  00069A  EF55  F003         	goto	l1328
  4069  00069E                     u4860:
  4070  00069E                     
  4071                           ; BSR set to: 0
  4072  00069E  0E00               	movlw	0
  4073  0006A0  6E37               	movwf	(dtoa@p+1)^0,c
  4074  0006A2  0E01               	movlw	1
  4075  0006A4  6E36               	movwf	dtoa@p^0,c
  4076  0006A6  EF59  F003         	goto	l1330
  4077  0006AA                     l1328:
  4078                           
  4079                           ; BSR set to: 0
  4080  0006AA  C06C  F036         	movff	_prec,dtoa@p
  4081  0006AE  C06D  F037         	movff	_prec+1,dtoa@p+1
  4082  0006B2                     l1330:
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4086  0006B2  C06A  F038         	movff	_width,dtoa@w
  4087  0006B6  C06B  F039         	movff	_width+1,dtoa@w+1
  4088  0006BA                     
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4091  0006BA  503A               	movf	dtoa@s^0,w,c
  4092  0006BC  103B               	iorwf	(dtoa@s+1)^0,w,c
  4093  0006BE  A4D8               	btfss	status,2,c
  4094  0006C0  EF64  F003         	goto	u4871
  4095  0006C4  EF66  F003         	goto	u4870
  4096  0006C8                     u4871:
  4097  0006C8  EF6D  F003         	goto	l4485
  4098  0006CC                     u4870:
  4099  0006CC                     
  4100                           ; BSR set to: 0
  4101  0006CC  A457               	btfss	_flags^0,2,c
  4102  0006CE  EF6B  F003         	goto	u4881
  4103  0006D2  EF6D  F003         	goto	u4880
  4104  0006D6                     u4881:
  4105  0006D6  EF70  F003         	goto	l4487
  4106  0006DA                     u4880:
  4107  0006DA                     l4485:
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  4111  0006DA  0638               	decf	dtoa@w^0,f,c
  4112  0006DC  A0D8               	btfss	status,0,c
  4113  0006DE  0639               	decf	(dtoa@w+1)^0,f,c
  4114  0006E0                     l4487:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4118  0006E0  0E00               	movlw	0
  4119  0006E2  6E45               	movwf	(dtoa@i+1)^0,c
  4120  0006E4  0E1F               	movlw	31
  4121  0006E6  6E44               	movwf	dtoa@i^0,c
  4122  0006E8                     
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4125  0006E8  0E00               	movlw	0
  4126  0006EA  0101               	movlb	1	; () banked
  4127  0006EC  6F96               	movwf	(_dbuf+31)& (0+255),b
  4128                           
  4129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4130  0006EE  EFF5  F003         	goto	l4501
  4131  0006F2                     l4491:
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  4134  0006F2  0644               	decf	dtoa@i^0,f,c
  4135  0006F4  A0D8               	btfss	status,0,c
  4136  0006F6  0645               	decf	(dtoa@i+1)^0,f,c
  4137  0006F8                     
  4138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4139  0006F8  0E77               	movlw	low _dbuf
  4140  0006FA  2444               	addwf	dtoa@i^0,w,c
  4141  0006FC  6ED9               	movwf	fsr2l,c
  4142  0006FE  0E01               	movlw	high _dbuf
  4143  000700  2045               	addwfc	(dtoa@i+1)^0,w,c
  4144  000702  6EDA               	movwf	fsr2h,c
  4145  000704  C03C  F005         	movff	dtoa@n,___aomod@dividend
  4146  000708  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  4147  00070C  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  4148  000710  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  4149  000714  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  4150  000718  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  4151  00071C  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  4152  000720  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  4153  000724  0E0A               	movlw	10
  4154  000726  6E0D               	movwf	___aomod@divisor^0,c
  4155  000728  0E00               	movlw	0
  4156  00072A  6E0E               	movwf	(___aomod@divisor+1)^0,c
  4157  00072C  0E00               	movlw	0
  4158  00072E  6E0F               	movwf	(___aomod@divisor+2)^0,c
  4159  000730  0E00               	movlw	0
  4160  000732  6E10               	movwf	(___aomod@divisor+3)^0,c
  4161  000734  0E00               	movlw	0
  4162  000736  6E11               	movwf	(___aomod@divisor+4)^0,c
  4163  000738  0E00               	movlw	0
  4164  00073A  6E12               	movwf	(___aomod@divisor+5)^0,c
  4165  00073C  0E00               	movlw	0
  4166  00073E  6E13               	movwf	(___aomod@divisor+6)^0,c
  4167  000740  0E00               	movlw	0
  4168  000742  6E14               	movwf	(___aomod@divisor+7)^0,c
  4169  000744  EC72  F008         	call	___aomod	;wreg free
  4170  000748  C005  F02C         	movff	?___aomod,??_dtoa
  4171  00074C  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  4172  000750  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  4173  000754  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  4174  000758  C009  F030         	movff	?___aomod+4,??_dtoa+4
  4175  00075C  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  4176  000760  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  4177  000764  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  4178  000768  C02C  F017         	movff	??_dtoa,abs@a
  4179  00076C  C02E  F018         	movff	??_dtoa+2,abs@a+1
  4180  000770  EC39  F00D         	call	_abs	;wreg free
  4181  000774  5017               	movf	?_abs^0,w,c
  4182  000776  0F30               	addlw	48
  4183  000778  6EDF               	movwf	indf2,c
  4184  00077A                     
  4185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  4186  00077A  0636               	decf	dtoa@p^0,f,c
  4187  00077C  A0D8               	btfss	status,0,c
  4188  00077E  0637               	decf	(dtoa@p+1)^0,f,c
  4189  000780                     
  4190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  4191  000780  0638               	decf	dtoa@w^0,f,c
  4192  000782  A0D8               	btfss	status,0,c
  4193  000784  0639               	decf	(dtoa@w+1)^0,f,c
  4194  000786                     
  4195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4196  000786  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  4197  00078A  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  4198  00078E  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  4199  000792  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  4200  000796  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  4201  00079A  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  4202  00079E  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  4203  0007A2  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  4204  0007A6  0E0A               	movlw	10
  4205  0007A8  6E0D               	movwf	___aodiv@divisor^0,c
  4206  0007AA  0E00               	movlw	0
  4207  0007AC  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  4208  0007AE  0E00               	movlw	0
  4209  0007B0  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  4210  0007B2  0E00               	movlw	0
  4211  0007B4  6E10               	movwf	(___aodiv@divisor+3)^0,c
  4212  0007B6  0E00               	movlw	0
  4213  0007B8  6E11               	movwf	(___aodiv@divisor+4)^0,c
  4214  0007BA  0E00               	movlw	0
  4215  0007BC  6E12               	movwf	(___aodiv@divisor+5)^0,c
  4216  0007BE  0E00               	movlw	0
  4217  0007C0  6E13               	movwf	(___aodiv@divisor+6)^0,c
  4218  0007C2  0E00               	movlw	0
  4219  0007C4  6E14               	movwf	(___aodiv@divisor+7)^0,c
  4220  0007C6  ECAE  F007         	call	___aodiv	;wreg free
  4221  0007CA  C005  F03C         	movff	?___aodiv,dtoa@n
  4222  0007CE  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  4223  0007D2  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  4224  0007D6  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  4225  0007DA  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  4226  0007DE  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  4227  0007E2  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  4228  0007E6  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  4229  0007EA                     l4501:
  4230                           
  4231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4232  0007EA  BE45               	btfsc	(dtoa@i+1)^0,7,c
  4233  0007EC  EF00  F004         	goto	u4891
  4234  0007F0  5045               	movf	(dtoa@i+1)^0,w,c
  4235  0007F2  E108               	bnz	u4890
  4236  0007F4  0444               	decf	dtoa@i^0,w,c
  4237  0007F6  A0D8               	btfss	status,0,c
  4238  0007F8  EF00  F004         	goto	u4891
  4239  0007FC  EF02  F004         	goto	u4890
  4240  000800                     u4891:
  4241  000800  EF32  F004         	goto	l4511
  4242  000804                     u4890:
  4243  000804  503C               	movf	dtoa@n^0,w,c
  4244  000806  103D               	iorwf	(dtoa@n+1)^0,w,c
  4245  000808  103E               	iorwf	(dtoa@n+2)^0,w,c
  4246  00080A  103F               	iorwf	(dtoa@n+3)^0,w,c
  4247  00080C  1040               	iorwf	(dtoa@n+4)^0,w,c
  4248  00080E  1041               	iorwf	(dtoa@n+5)^0,w,c
  4249  000810  1042               	iorwf	(dtoa@n+6)^0,w,c
  4250  000812  1043               	iorwf	(dtoa@n+7)^0,w,c
  4251  000814  A4D8               	btfss	status,2,c
  4252  000816  EF0F  F004         	goto	u4901
  4253  00081A  EF11  F004         	goto	u4900
  4254  00081E                     u4901:
  4255  00081E  EF79  F003         	goto	l4491
  4256  000822                     u4900:
  4257  000822  BE37               	btfsc	(dtoa@p+1)^0,7,c
  4258  000824  EF1E  F004         	goto	u4910
  4259  000828  5037               	movf	(dtoa@p+1)^0,w,c
  4260  00082A  E106               	bnz	u4911
  4261  00082C  0436               	decf	dtoa@p^0,w,c
  4262  00082E  B0D8               	btfsc	status,0,c
  4263  000830  EF1C  F004         	goto	u4911
  4264  000834  EF1E  F004         	goto	u4910
  4265  000838                     u4911:
  4266  000838  EF79  F003         	goto	l4491
  4267  00083C                     u4910:
  4268  00083C  BE39               	btfsc	(dtoa@w+1)^0,7,c
  4269  00083E  EF29  F004         	goto	u4921
  4270  000842  5039               	movf	(dtoa@w+1)^0,w,c
  4271  000844  E108               	bnz	u4920
  4272  000846  0438               	decf	dtoa@w^0,w,c
  4273  000848  A0D8               	btfss	status,0,c
  4274  00084A  EF29  F004         	goto	u4921
  4275  00084E  EF2B  F004         	goto	u4920
  4276  000852                     u4921:
  4277  000852  EF32  F004         	goto	l4511
  4278  000856                     u4920:
  4279  000856  B257               	btfsc	_flags^0,1,c
  4280  000858  EF30  F004         	goto	u4931
  4281  00085C  EF32  F004         	goto	u4930
  4282  000860                     u4931:
  4283  000860  EF79  F003         	goto	l4491
  4284  000864                     u4930:
  4285  000864                     l4511:
  4286                           
  4287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4288  000864  503A               	movf	dtoa@s^0,w,c
  4289  000866  103B               	iorwf	(dtoa@s+1)^0,w,c
  4290  000868  A4D8               	btfss	status,2,c
  4291  00086A  EF39  F004         	goto	u4941
  4292  00086E  EF3B  F004         	goto	u4940
  4293  000872                     u4941:
  4294  000872  EF42  F004         	goto	l4515
  4295  000876                     u4940:
  4296  000876  A457               	btfss	_flags^0,2,c
  4297  000878  EF40  F004         	goto	u4951
  4298  00087C  EF42  F004         	goto	u4950
  4299  000880                     u4951:
  4300  000880  EF60  F004         	goto	l4525
  4301  000884                     u4950:
  4302  000884                     l4515:
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4305  000884  0644               	decf	dtoa@i^0,f,c
  4306  000886  A0D8               	btfss	status,0,c
  4307  000888  0645               	decf	(dtoa@i+1)^0,f,c
  4308  00088A                     
  4309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4310  00088A  503A               	movf	dtoa@s^0,w,c
  4311  00088C  103B               	iorwf	(dtoa@s+1)^0,w,c
  4312  00088E  A4D8               	btfss	status,2,c
  4313  000890  EF4C  F004         	goto	u4961
  4314  000894  EF4E  F004         	goto	u4960
  4315  000898                     u4961:
  4316  000898  EF54  F004         	goto	l4521
  4317  00089C                     u4960:
  4318  00089C  0E00               	movlw	0
  4319  00089E  6E35               	movwf	(_dtoa$1836+1)^0,c
  4320  0008A0  0E2B               	movlw	43
  4321  0008A2  6E34               	movwf	_dtoa$1836^0,c
  4322  0008A4  EF58  F004         	goto	l4523
  4323  0008A8                     l4521:
  4324  0008A8  0E00               	movlw	0
  4325  0008AA  6E35               	movwf	(_dtoa$1836+1)^0,c
  4326  0008AC  0E2D               	movlw	45
  4327  0008AE  6E34               	movwf	_dtoa$1836^0,c
  4328  0008B0                     l4523:
  4329  0008B0  0E77               	movlw	low _dbuf
  4330  0008B2  2444               	addwf	dtoa@i^0,w,c
  4331  0008B4  6ED9               	movwf	fsr2l,c
  4332  0008B6  0E01               	movlw	high _dbuf
  4333  0008B8  2045               	addwfc	(dtoa@i+1)^0,w,c
  4334  0008BA  6EDA               	movwf	fsr2h,c
  4335  0008BC  C034  FFDF         	movff	_dtoa$1836,indf2
  4336  0008C0                     l4525:
  4337                           
  4338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4339  0008C0  C022  F017         	movff	dtoa@fp,pad@fp
  4340  0008C4  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  4341  0008C8  0E77               	movlw	low _dbuf
  4342  0008CA  2444               	addwf	dtoa@i^0,w,c
  4343  0008CC  6E19               	movwf	pad@buf^0,c
  4344  0008CE  0E01               	movlw	high _dbuf
  4345  0008D0  2045               	addwfc	(dtoa@i+1)^0,w,c
  4346  0008D2  6E1A               	movwf	(pad@buf+1)^0,c
  4347  0008D4  C038  F01B         	movff	dtoa@w,pad@p
  4348  0008D8  C039  F01C         	movff	dtoa@w+1,pad@p+1
  4349  0008DC  EC64  F00A         	call	_pad	;wreg free
  4350  0008E0  C017  F022         	movff	?_pad,?_dtoa
  4351  0008E4  C018  F023         	movff	?_pad+1,?_dtoa+1
  4352  0008E8  0012               	return		;funcret
  4353  0008EA                     __end_of_dtoa:
  4354                           	callstack 0
  4355                           
  4356 ;; *************** function _pad *****************
  4357 ;; Defined at:
  4358 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4361 ;;		 -> NULL(0), sprintf@f(6), 
  4362 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4363 ;;		 -> dbuf(32), 
  4364 ;;  p               2   26[COMRAM] int 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  w               2   31[COMRAM] int 
  4367 ;;  i               2   29[COMRAM] int 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  2   22[COMRAM] int 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4377 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;Total ram usage:       11 bytes
  4382 ;; Hardware stack levels used: 1
  4383 ;; Hardware stack levels required when called: 8
  4384 ;; This function calls:
  4385 ;;		_fputc
  4386 ;;		_fputs
  4387 ;;		_strlen
  4388 ;; This function is called by:
  4389 ;;		_dtoa
  4390 ;;		_xtoa
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text12
  4395  0014C8                     __ptext12:
  4396                           	callstack 0
  4397  0014C8                     _pad:
  4398                           	callstack 17
  4399  0014C8                     
  4400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4401  0014C8  A057               	btfss	_flags^0,0,c
  4402  0014CA  EF69  F00A         	goto	u4531
  4403  0014CE  EF6B  F00A         	goto	u4530
  4404  0014D2                     u4531:
  4405  0014D2  EF75  F00A         	goto	l4357
  4406  0014D6                     u4530:
  4407  0014D6                     
  4408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4409  0014D6  C019  F010         	movff	pad@buf,fputs@s
  4410  0014DA  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4411  0014DE  C017  F012         	movff	pad@fp,fputs@fp
  4412  0014E2  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4413  0014E6  ECF6  F00C         	call	_fputs	;wreg free
  4414  0014EA                     l4357:
  4415                           
  4416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4417  0014EA  BE1C               	btfsc	(pad@p+1)^0,7,c
  4418  0014EC  EF7A  F00A         	goto	u4541
  4419  0014F0  EF7C  F00A         	goto	u4540
  4420  0014F4                     u4541:
  4421  0014F4  EF82  F00A         	goto	l4361
  4422  0014F8                     u4540:
  4423  0014F8  C01B  F020         	movff	pad@p,pad@w
  4424  0014FC  C01C  F021         	movff	pad@p+1,pad@w+1
  4425  001500  EF86  F00A         	goto	l1301
  4426  001504                     l4361:
  4427  001504  0E00               	movlw	0
  4428  001506  6E21               	movwf	(pad@w+1)^0,c
  4429  001508  0E00               	movlw	0
  4430  00150A  6E20               	movwf	pad@w^0,c
  4431  00150C                     l1301:
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4434  00150C  0E00               	movlw	0
  4435  00150E  6E1F               	movwf	(pad@i+1)^0,c
  4436  001510  0E00               	movlw	0
  4437  001512  6E1E               	movwf	pad@i^0,c
  4438                           
  4439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4440  001514  EF98  F00A         	goto	l4367
  4441  001518                     l4363:
  4442                           
  4443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4444  001518  0E00               	movlw	0
  4445  00151A  6E08               	movwf	(fputc@c+1)^0,c
  4446  00151C  0E20               	movlw	32
  4447  00151E  6E07               	movwf	fputc@c^0,c
  4448  001520  C017  F009         	movff	pad@fp,fputc@fp
  4449  001524  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4450  001528  ECFF  F009         	call	_fputc	;wreg free
  4451  00152C                     
  4452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4453  00152C  4A1E               	infsnz	pad@i^0,f,c
  4454  00152E  2A1F               	incf	(pad@i+1)^0,f,c
  4455  001530                     l4367:
  4456                           
  4457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4458  001530  5020               	movf	pad@w^0,w,c
  4459  001532  5C1E               	subwf	pad@i^0,w,c
  4460  001534  501F               	movf	(pad@i+1)^0,w,c
  4461  001536  0A80               	xorlw	128
  4462  001538  6E1D               	movwf	??_pad^0,c
  4463  00153A  5021               	movf	(pad@w+1)^0,w,c
  4464  00153C  0A80               	xorlw	128
  4465  00153E  581D               	subwfb	??_pad^0,w,c
  4466  001540  A0D8               	btfss	status,0,c
  4467  001542  EFA5  F00A         	goto	u4551
  4468  001546  EFA7  F00A         	goto	u4550
  4469  00154A                     u4551:
  4470  00154A  EF8C  F00A         	goto	l4363
  4471  00154E                     u4550:
  4472  00154E                     
  4473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4474  00154E  B057               	btfsc	_flags^0,0,c
  4475  001550  EFAC  F00A         	goto	u4561
  4476  001554  EFAE  F00A         	goto	u4560
  4477  001558                     u4561:
  4478  001558  EFB8  F00A         	goto	l4371
  4479  00155C                     u4560:
  4480  00155C                     
  4481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4482  00155C  C019  F010         	movff	pad@buf,fputs@s
  4483  001560  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4484  001564  C017  F012         	movff	pad@fp,fputs@fp
  4485  001568  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4486  00156C  ECF6  F00C         	call	_fputs	;wreg free
  4487  001570                     l4371:
  4488                           
  4489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4490  001570  C019  F005         	movff	pad@buf,strlen@s
  4491  001574  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4492  001578  ECCE  F00C         	call	_strlen	;wreg free
  4493  00157C  5020               	movf	pad@w^0,w,c
  4494  00157E  2405               	addwf	?_strlen^0,w,c
  4495  001580  6E17               	movwf	?_pad^0,c
  4496  001582  5021               	movf	(pad@w+1)^0,w,c
  4497  001584  2006               	addwfc	(?_strlen+1)^0,w,c
  4498  001586  6E18               	movwf	(?_pad+1)^0,c
  4499  001588  0012               	return		;funcret
  4500  00158A                     __end_of_pad:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function _strlen *****************
  4504 ;; Defined at:
  4505 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4508 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ?_sprintf(2), 
  4509 ;;		 -> STR_60(9), STR_58(9), STR_56(8), STR_54(9), 
  4510 ;;		 -> STR_52(8), STR_50(9), STR_48(8), STR_46(3), 
  4511 ;;		 -> STR_44(10), STR_42(10), STR_40(9), STR_38(11), 
  4512 ;;		 -> STR_36(8), STR_34(6), STR_32(6), STR_30(5), 
  4513 ;;		 -> STR_28(7), STR_26(7), STR_24(9), STR_22(8), 
  4514 ;;		 -> day_string(20), rtc_get_time@mo(20), getReading@outT(5), temperature_read(5), 
  4515 ;;		 -> getReading@outH(5), getReading@rh_code(4), 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4518 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ?_sprintf(2), 
  4519 ;;		 -> STR_60(9), STR_58(9), STR_56(8), STR_54(9), 
  4520 ;;		 -> STR_52(8), STR_50(9), STR_48(8), STR_46(3), 
  4521 ;;		 -> STR_44(10), STR_42(10), STR_40(9), STR_38(11), 
  4522 ;;		 -> STR_36(8), STR_34(6), STR_32(6), STR_30(5), 
  4523 ;;		 -> STR_28(7), STR_26(7), STR_24(9), STR_22(8), 
  4524 ;;		 -> day_string(20), rtc_get_time@mo(20), getReading@outT(5), temperature_read(5), 
  4525 ;;		 -> getReading@outH(5), getReading@rh_code(4), 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  2    4[COMRAM] unsigned int 
  4528 ;; Registers used:
  4529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;Total ram usage:        4 bytes
  4540 ;; Hardware stack levels used: 1
  4541 ;; Hardware stack levels required when called: 4
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_pad
  4546 ;;		_stoa
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           	psect	text13
  4551  00199C                     __ptext13:
  4552                           	callstack 0
  4553  00199C                     _strlen:
  4554                           	callstack 20
  4555  00199C  C005  F007         	movff	strlen@s,strlen@a
  4556  0019A0  C006  F008         	movff	strlen@s+1,strlen@a+1
  4557  0019A4  EFD6  F00C         	goto	l4241
  4558  0019A8                     l4239:
  4559  0019A8  4A05               	infsnz	strlen@s^0,f,c
  4560  0019AA  2A06               	incf	(strlen@s+1)^0,f,c
  4561  0019AC                     l4241:
  4562  0019AC  C005  FFF6         	movff	strlen@s,tblptrl
  4563  0019B0  C006  FFF7         	movff	strlen@s+1,tblptrh
  4564  0019B4  0E00               	movlw	low (__mediumconst shr (0+16))
  4565  0019B6  6EF8               	movwf	tblptru,c
  4566  0019B8  0E0F               	movlw	(high __ramtop+-1)
  4567  0019BA  64F7               	cpfsgt	tblptrh,c
  4568  0019BC  D003               	bra	u4327
  4569  0019BE  0008               	tblrd		*
  4570  0019C0  50F5               	movf	tablat,w,c
  4571  0019C2  D005               	bra	u4320
  4572  0019C4                     u4327:
  4573  0019C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4574  0019C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4575  0019CC  50EF               	movf	indf0,w,c
  4576  0019CE                     u4320:
  4577  0019CE  0900               	iorlw	0
  4578  0019D0  A4D8               	btfss	status,2,c
  4579  0019D2  EFED  F00C         	goto	u4331
  4580  0019D6  EFEF  F00C         	goto	u4330
  4581  0019DA                     u4331:
  4582  0019DA  EFD4  F00C         	goto	l4239
  4583  0019DE                     u4330:
  4584  0019DE  5007               	movf	strlen@a^0,w,c
  4585  0019E0  5C05               	subwf	strlen@s^0,w,c
  4586  0019E2  6E05               	movwf	?_strlen^0,c
  4587  0019E4  5008               	movf	(strlen@a+1)^0,w,c
  4588  0019E6  5806               	subwfb	(strlen@s+1)^0,w,c
  4589  0019E8  6E06               	movwf	(?_strlen+1)^0,c
  4590  0019EA  0012               	return		;funcret
  4591  0019EC                     __end_of_strlen:
  4592                           	callstack 0
  4593                           
  4594 ;; *************** function _fputs *****************
  4595 ;; Defined at:
  4596 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4599 ;;		 -> dbuf(32), 
  4600 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4601 ;;		 -> NULL(0), sprintf@f(6), 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  i               2   20[COMRAM] int 
  4604 ;;  c               1   19[COMRAM] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  2   15[COMRAM] int 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4614 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;Total ram usage:        7 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; Hardware stack levels required when called: 7
  4621 ;; This function calls:
  4622 ;;		_fputc
  4623 ;; This function is called by:
  4624 ;;		_pad
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text14
  4629  0019EC                     __ptext14:
  4630                           	callstack 0
  4631  0019EC                     _fputs:
  4632                           	callstack 17
  4633  0019EC  0E00               	movlw	0
  4634  0019EE  6E16               	movwf	(fputs@i+1)^0,c
  4635  0019F0  0E00               	movlw	0
  4636  0019F2  6E15               	movwf	fputs@i^0,c
  4637  0019F4  EF07  F00D         	goto	l4235
  4638  0019F8                     l4231:
  4639  0019F8  C014  F007         	movff	fputs@c,fputc@c
  4640  0019FC  6A08               	clrf	(fputc@c+1)^0,c
  4641  0019FE  C012  F009         	movff	fputs@fp,fputc@fp
  4642  001A02  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4643  001A06  ECFF  F009         	call	_fputc	;wreg free
  4644  001A0A  4A15               	infsnz	fputs@i^0,f,c
  4645  001A0C  2A16               	incf	(fputs@i+1)^0,f,c
  4646  001A0E                     l4235:
  4647  001A0E  5015               	movf	fputs@i^0,w,c
  4648  001A10  2410               	addwf	fputs@s^0,w,c
  4649  001A12  6ED9               	movwf	fsr2l,c
  4650  001A14  5016               	movf	(fputs@i+1)^0,w,c
  4651  001A16  2011               	addwfc	(fputs@s+1)^0,w,c
  4652  001A18  6EDA               	movwf	fsr2h,c
  4653  001A1A  50DF               	movf	indf2,w,c
  4654  001A1C  6E14               	movwf	fputs@c^0,c
  4655  001A1E  5014               	movf	fputs@c^0,w,c
  4656  001A20  A4D8               	btfss	status,2,c
  4657  001A22  EF15  F00D         	goto	u4311
  4658  001A26  EF17  F00D         	goto	u4310
  4659  001A2A                     u4311:
  4660  001A2A  EFFC  F00C         	goto	l4231
  4661  001A2E                     u4310:
  4662  001A2E  0012               	return		;funcret
  4663  001A30                     __end_of_fputs:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function _abs *****************
  4667 ;; Defined at:
  4668 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  a               2   22[COMRAM] int 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  2   22[COMRAM] int 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;Total ram usage:        4 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 4
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_dtoa
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text15
  4697  001A72                     __ptext15:
  4698                           	callstack 0
  4699  001A72                     _abs:
  4700                           	callstack 21
  4701  001A72  BE18               	btfsc	(abs@a+1)^0,7,c
  4702  001A74  EF46  F00D         	goto	u4570
  4703  001A78  5018               	movf	(abs@a+1)^0,w,c
  4704  001A7A  E106               	bnz	u4571
  4705  001A7C  0417               	decf	abs@a^0,w,c
  4706  001A7E  B0D8               	btfsc	status,0,c
  4707  001A80  EF44  F00D         	goto	u4571
  4708  001A84  EF46  F00D         	goto	u4570
  4709  001A88                     u4571:
  4710  001A88  EF54  F00D         	goto	l1446
  4711  001A8C                     u4570:
  4712  001A8C  C017  F019         	movff	abs@a,??_abs
  4713  001A90  C018  F01A         	movff	abs@a+1,??_abs+1
  4714  001A94  1E19               	comf	??_abs^0,f,c
  4715  001A96  1E1A               	comf	(??_abs+1)^0,f,c
  4716  001A98  4A19               	infsnz	??_abs^0,f,c
  4717  001A9A  2A1A               	incf	(??_abs+1)^0,f,c
  4718  001A9C  C019  F017         	movff	??_abs,?_abs
  4719  001AA0  C01A  F018         	movff	??_abs+1,?_abs+1
  4720  001AA4  EF58  F00D         	goto	l1449
  4721  001AA8                     l1446:
  4722  001AA8  C017  F017         	movff	abs@a,?_abs
  4723  001AAC  C018  F018         	movff	abs@a+1,?_abs+1
  4724  001AB0                     l1449:
  4725  001AB0  0012               	return		;funcret
  4726  001AB2                     __end_of_abs:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function ___aomod *****************
  4730 ;; Defined at:
  4731 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  dividend        8    4[COMRAM] long long 
  4734 ;;  divisor         8   12[COMRAM] long long 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  sign            1   21[COMRAM] unsigned char 
  4737 ;;  counter         1   20[COMRAM] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  8    4[COMRAM] long long 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4747 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;Total ram usage:       18 bytes
  4752 ;; Hardware stack levels used: 1
  4753 ;; Hardware stack levels required when called: 4
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_dtoa
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text16
  4762  0010E4                     __ptext16:
  4763                           	callstack 0
  4764  0010E4                     ___aomod:
  4765                           	callstack 21
  4766  0010E4  0E00               	movlw	0
  4767  0010E6  6E16               	movwf	___aomod@sign^0,c
  4768  0010E8  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  4769  0010EA  EF7B  F008         	goto	u4430
  4770  0010EE  EF79  F008         	goto	u4431
  4771  0010F2                     u4431:
  4772  0010F2  EF8D  F008         	goto	l4309
  4773  0010F6                     u4430:
  4774  0010F6  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4775  0010F8  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4776  0010FA  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4777  0010FC  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4778  0010FE  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4779  001100  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4780  001102  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4781  001104  6C05               	negf	___aomod@dividend^0,c
  4782  001106  0E00               	movlw	0
  4783  001108  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4784  00110A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4785  00110C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4786  00110E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4787  001110  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4788  001112  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4789  001114  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4790  001116  0E01               	movlw	1
  4791  001118  6E16               	movwf	___aomod@sign^0,c
  4792  00111A                     l4309:
  4793  00111A  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  4794  00111C  EF94  F008         	goto	u4440
  4795  001120  EF92  F008         	goto	u4441
  4796  001124                     u4441:
  4797  001124  EFA4  F008         	goto	l4313
  4798  001128                     u4440:
  4799  001128  1E14               	comf	(___aomod@divisor+7)^0,f,c
  4800  00112A  1E13               	comf	(___aomod@divisor+6)^0,f,c
  4801  00112C  1E12               	comf	(___aomod@divisor+5)^0,f,c
  4802  00112E  1E11               	comf	(___aomod@divisor+4)^0,f,c
  4803  001130  1E10               	comf	(___aomod@divisor+3)^0,f,c
  4804  001132  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  4805  001134  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  4806  001136  6C0D               	negf	___aomod@divisor^0,c
  4807  001138  0E00               	movlw	0
  4808  00113A  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  4809  00113C  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  4810  00113E  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  4811  001140  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  4812  001142  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  4813  001144  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  4814  001146  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  4815  001148                     l4313:
  4816  001148  500D               	movf	___aomod@divisor^0,w,c
  4817  00114A  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  4818  00114C  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  4819  00114E  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  4820  001150  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  4821  001152  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  4822  001154  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  4823  001156  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  4824  001158  B4D8               	btfsc	status,2,c
  4825  00115A  EFB1  F008         	goto	u4451
  4826  00115E  EFB3  F008         	goto	u4450
  4827  001162                     u4451:
  4828  001162  EFFB  F008         	goto	l4329
  4829  001166                     u4450:
  4830  001166  0E01               	movlw	1
  4831  001168  6E15               	movwf	___aomod@counter^0,c
  4832  00116A  EFC1  F008         	goto	l4319
  4833  00116E                     l4317:
  4834  00116E  90D8               	bcf	status,0,c
  4835  001170  360D               	rlcf	___aomod@divisor^0,f,c
  4836  001172  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  4837  001174  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  4838  001176  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  4839  001178  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  4840  00117A  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  4841  00117C  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  4842  00117E  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  4843  001180  2A15               	incf	___aomod@counter^0,f,c
  4844  001182                     l4319:
  4845  001182  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  4846  001184  EFC6  F008         	goto	u4461
  4847  001188  EFC8  F008         	goto	u4460
  4848  00118C                     u4461:
  4849  00118C  EFB7  F008         	goto	l4317
  4850  001190                     u4460:
  4851  001190                     l4321:
  4852  001190  500D               	movf	___aomod@divisor^0,w,c
  4853  001192  5C05               	subwf	___aomod@dividend^0,w,c
  4854  001194  500E               	movf	(___aomod@divisor+1)^0,w,c
  4855  001196  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  4856  001198  500F               	movf	(___aomod@divisor+2)^0,w,c
  4857  00119A  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  4858  00119C  5010               	movf	(___aomod@divisor+3)^0,w,c
  4859  00119E  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  4860  0011A0  5011               	movf	(___aomod@divisor+4)^0,w,c
  4861  0011A2  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  4862  0011A4  5012               	movf	(___aomod@divisor+5)^0,w,c
  4863  0011A6  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  4864  0011A8  5013               	movf	(___aomod@divisor+6)^0,w,c
  4865  0011AA  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  4866  0011AC  5014               	movf	(___aomod@divisor+7)^0,w,c
  4867  0011AE  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  4868  0011B0  A0D8               	btfss	status,0,c
  4869  0011B2  EFDD  F008         	goto	u4471
  4870  0011B6  EFDF  F008         	goto	u4470
  4871  0011BA                     u4471:
  4872  0011BA  EFEF  F008         	goto	l4325
  4873  0011BE                     u4470:
  4874  0011BE  500D               	movf	___aomod@divisor^0,w,c
  4875  0011C0  5E05               	subwf	___aomod@dividend^0,f,c
  4876  0011C2  500E               	movf	(___aomod@divisor+1)^0,w,c
  4877  0011C4  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  4878  0011C6  500F               	movf	(___aomod@divisor+2)^0,w,c
  4879  0011C8  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  4880  0011CA  5010               	movf	(___aomod@divisor+3)^0,w,c
  4881  0011CC  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  4882  0011CE  5011               	movf	(___aomod@divisor+4)^0,w,c
  4883  0011D0  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  4884  0011D2  5012               	movf	(___aomod@divisor+5)^0,w,c
  4885  0011D4  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  4886  0011D6  5013               	movf	(___aomod@divisor+6)^0,w,c
  4887  0011D8  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  4888  0011DA  5014               	movf	(___aomod@divisor+7)^0,w,c
  4889  0011DC  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  4890  0011DE                     l4325:
  4891  0011DE  90D8               	bcf	status,0,c
  4892  0011E0  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  4893  0011E2  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  4894  0011E4  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  4895  0011E6  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  4896  0011E8  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  4897  0011EA  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  4898  0011EC  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  4899  0011EE  320D               	rrcf	___aomod@divisor^0,f,c
  4900  0011F0  2E15               	decfsz	___aomod@counter^0,f,c
  4901  0011F2  EFC8  F008         	goto	l4321
  4902  0011F6                     l4329:
  4903  0011F6  5016               	movf	___aomod@sign^0,w,c
  4904  0011F8  B4D8               	btfsc	status,2,c
  4905  0011FA  EF01  F009         	goto	u4481
  4906  0011FE  EF03  F009         	goto	u4480
  4907  001202                     u4481:
  4908  001202  EF13  F009         	goto	l4333
  4909  001206                     u4480:
  4910  001206  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  4911  001208  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  4912  00120A  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  4913  00120C  1E09               	comf	(___aomod@dividend+4)^0,f,c
  4914  00120E  1E08               	comf	(___aomod@dividend+3)^0,f,c
  4915  001210  1E07               	comf	(___aomod@dividend+2)^0,f,c
  4916  001212  1E06               	comf	(___aomod@dividend+1)^0,f,c
  4917  001214  6C05               	negf	___aomod@dividend^0,c
  4918  001216  0E00               	movlw	0
  4919  001218  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  4920  00121A  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  4921  00121C  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  4922  00121E  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  4923  001220  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  4924  001222  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  4925  001224  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  4926  001226                     l4333:
  4927  001226  C005  F005         	movff	___aomod@dividend,?___aomod
  4928  00122A  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  4929  00122E  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  4930  001232  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  4931  001236  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  4932  00123A  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  4933  00123E  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  4934  001242  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  4935  001246  0012               	return		;funcret
  4936  001248                     __end_of___aomod:
  4937                           	callstack 0
  4938                           
  4939 ;; *************** function ___aodiv *****************
  4940 ;; Defined at:
  4941 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  dividend        8    4[COMRAM] long long 
  4944 ;;  divisor         8   12[COMRAM] long long 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  quotient        8   22[COMRAM] long long 
  4947 ;;  sign            1   21[COMRAM] unsigned char 
  4948 ;;  counter         1   20[COMRAM] unsigned char 
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  8    4[COMRAM] long long 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4958 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;Total ram usage:       26 bytes
  4963 ;; Hardware stack levels used: 1
  4964 ;; Hardware stack levels required when called: 4
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_dtoa
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text17
  4973  000F5C                     __ptext17:
  4974                           	callstack 0
  4975  000F5C                     ___aodiv:
  4976                           	callstack 21
  4977  000F5C  0E00               	movlw	0
  4978  000F5E  6E16               	movwf	___aodiv@sign^0,c
  4979  000F60  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  4980  000F62  EFB7  F007         	goto	u4360
  4981  000F66  EFB5  F007         	goto	u4361
  4982  000F6A                     u4361:
  4983  000F6A  EFC9  F007         	goto	l4265
  4984  000F6E                     u4360:
  4985  000F6E  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  4986  000F70  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  4987  000F72  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  4988  000F74  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  4989  000F76  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  4990  000F78  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  4991  000F7A  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  4992  000F7C  6C0D               	negf	___aodiv@divisor^0,c
  4993  000F7E  0E00               	movlw	0
  4994  000F80  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  4995  000F82  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  4996  000F84  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  4997  000F86  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  4998  000F88  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  4999  000F8A  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  5000  000F8C  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  5001  000F8E  0E01               	movlw	1
  5002  000F90  6E16               	movwf	___aodiv@sign^0,c
  5003  000F92                     l4265:
  5004  000F92  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  5005  000F94  EFD0  F007         	goto	u4370
  5006  000F98  EFCE  F007         	goto	u4371
  5007  000F9C                     u4371:
  5008  000F9C  EFE2  F007         	goto	l4271
  5009  000FA0                     u4370:
  5010  000FA0  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  5011  000FA2  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  5012  000FA4  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  5013  000FA6  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  5014  000FA8  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  5015  000FAA  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  5016  000FAC  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  5017  000FAE  6C05               	negf	___aodiv@dividend^0,c
  5018  000FB0  0E00               	movlw	0
  5019  000FB2  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  5020  000FB4  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  5021  000FB6  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  5022  000FB8  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  5023  000FBA  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  5024  000FBC  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  5025  000FBE  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  5026  000FC0  0E01               	movlw	1
  5027  000FC2  1A16               	xorwf	___aodiv@sign^0,f,c
  5028  000FC4                     l4271:
  5029  000FC4  EE20  F017         	lfsr	2,___aodiv@quotient
  5030  000FC8  0E07               	movlw	7
  5031  000FCA                     u4381:
  5032  000FCA  6ADE               	clrf	postinc2,c
  5033  000FCC  06E8               	decf	wreg,f,c
  5034  000FCE  E2FD               	bc	u4381
  5035  000FD0  500D               	movf	___aodiv@divisor^0,w,c
  5036  000FD2  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  5037  000FD4  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  5038  000FD6  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  5039  000FD8  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  5040  000FDA  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  5041  000FDC  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  5042  000FDE  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  5043  000FE0  B4D8               	btfsc	status,2,c
  5044  000FE2  EFF5  F007         	goto	u4391
  5045  000FE6  EFF7  F007         	goto	u4390
  5046  000FEA                     u4391:
  5047  000FEA  EF49  F008         	goto	l4293
  5048  000FEE                     u4390:
  5049  000FEE  0E01               	movlw	1
  5050  000FF0  6E15               	movwf	___aodiv@counter^0,c
  5051  000FF2  EF05  F008         	goto	l4279
  5052  000FF6                     l4277:
  5053  000FF6  90D8               	bcf	status,0,c
  5054  000FF8  360D               	rlcf	___aodiv@divisor^0,f,c
  5055  000FFA  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  5056  000FFC  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  5057  000FFE  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  5058  001000  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  5059  001002  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  5060  001004  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  5061  001006  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  5062  001008  2A15               	incf	___aodiv@counter^0,f,c
  5063  00100A                     l4279:
  5064  00100A  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  5065  00100C  EF0A  F008         	goto	u4401
  5066  001010  EF0C  F008         	goto	u4400
  5067  001014                     u4401:
  5068  001014  EFFB  F007         	goto	l4277
  5069  001018                     u4400:
  5070  001018                     l4281:
  5071  001018  90D8               	bcf	status,0,c
  5072  00101A  3617               	rlcf	___aodiv@quotient^0,f,c
  5073  00101C  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  5074  00101E  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  5075  001020  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  5076  001022  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  5077  001024  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  5078  001026  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  5079  001028  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  5080  00102A  500D               	movf	___aodiv@divisor^0,w,c
  5081  00102C  5C05               	subwf	___aodiv@dividend^0,w,c
  5082  00102E  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5083  001030  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  5084  001032  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5085  001034  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  5086  001036  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5087  001038  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  5088  00103A  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5089  00103C  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  5090  00103E  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5091  001040  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  5092  001042  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5093  001044  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  5094  001046  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5095  001048  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  5096  00104A  A0D8               	btfss	status,0,c
  5097  00104C  EF2A  F008         	goto	u4411
  5098  001050  EF2C  F008         	goto	u4410
  5099  001054                     u4411:
  5100  001054  EF3D  F008         	goto	l4289
  5101  001058                     u4410:
  5102  001058  500D               	movf	___aodiv@divisor^0,w,c
  5103  00105A  5E05               	subwf	___aodiv@dividend^0,f,c
  5104  00105C  500E               	movf	(___aodiv@divisor+1)^0,w,c
  5105  00105E  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  5106  001060  500F               	movf	(___aodiv@divisor+2)^0,w,c
  5107  001062  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  5108  001064  5010               	movf	(___aodiv@divisor+3)^0,w,c
  5109  001066  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  5110  001068  5011               	movf	(___aodiv@divisor+4)^0,w,c
  5111  00106A  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  5112  00106C  5012               	movf	(___aodiv@divisor+5)^0,w,c
  5113  00106E  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  5114  001070  5013               	movf	(___aodiv@divisor+6)^0,w,c
  5115  001072  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  5116  001074  5014               	movf	(___aodiv@divisor+7)^0,w,c
  5117  001076  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  5118  001078  8017               	bsf	___aodiv@quotient^0,0,c
  5119  00107A                     l4289:
  5120  00107A  90D8               	bcf	status,0,c
  5121  00107C  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  5122  00107E  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  5123  001080  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  5124  001082  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  5125  001084  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  5126  001086  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  5127  001088  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  5128  00108A  320D               	rrcf	___aodiv@divisor^0,f,c
  5129  00108C  2E15               	decfsz	___aodiv@counter^0,f,c
  5130  00108E  EF0C  F008         	goto	l4281
  5131  001092                     l4293:
  5132  001092  5016               	movf	___aodiv@sign^0,w,c
  5133  001094  B4D8               	btfsc	status,2,c
  5134  001096  EF4F  F008         	goto	u4421
  5135  00109A  EF51  F008         	goto	u4420
  5136  00109E                     u4421:
  5137  00109E  EF61  F008         	goto	l4297
  5138  0010A2                     u4420:
  5139  0010A2  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  5140  0010A4  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  5141  0010A6  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  5142  0010A8  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  5143  0010AA  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  5144  0010AC  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  5145  0010AE  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  5146  0010B0  6C17               	negf	___aodiv@quotient^0,c
  5147  0010B2  0E00               	movlw	0
  5148  0010B4  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  5149  0010B6  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  5150  0010B8  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  5151  0010BA  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  5152  0010BC  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  5153  0010BE  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  5154  0010C0  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  5155  0010C2                     l4297:
  5156  0010C2  C017  F005         	movff	___aodiv@quotient,?___aodiv
  5157  0010C6  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  5158  0010CA  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  5159  0010CE  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  5160  0010D2  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  5161  0010D6  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  5162  0010DA  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  5163  0010DE  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  5164  0010E2  0012               	return		;funcret
  5165  0010E4                     __end_of___aodiv:
  5166                           	callstack 0
  5167                           
  5168 ;; *************** function _ctoa *****************
  5169 ;; Defined at:
  5170 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5173 ;;		 -> NULL(0), sprintf@f(6), 
  5174 ;;  c               1   17[COMRAM] unsigned char 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  w               2   21[COMRAM] int 
  5177 ;;  l               2   19[COMRAM] int 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  2   15[COMRAM] int 
  5180 ;; Registers used:
  5181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5187 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;Total ram usage:        8 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; Hardware stack levels required when called: 7
  5194 ;; This function calls:
  5195 ;;		_fputc
  5196 ;; This function is called by:
  5197 ;;		_vfpfcnvrt
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text18
  5202  001328                     __ptext18:
  5203                           	callstack 0
  5204  001328                     _ctoa:
  5205                           	callstack 19
  5206  001328                     
  5207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  5208  001328  0100               	movlb	0	; () banked
  5209  00132A  516A               	movf	_width& (0+255),w,b
  5210  00132C  116B               	iorwf	(_width+1)& (0+255),w,b
  5211  00132E  A4D8               	btfss	status,2,c
  5212  001330  EF9C  F009         	goto	u4771
  5213  001334  EF9E  F009         	goto	u4770
  5214  001338                     u4771:
  5215  001338  EFA4  F009         	goto	l4443
  5216  00133C                     u4770:
  5217  00133C                     
  5218                           ; BSR set to: 0
  5219  00133C  C06A  F016         	movff	_width,ctoa@w
  5220  001340  C06B  F017         	movff	_width+1,ctoa@w+1
  5221  001344  EFAA  F009         	goto	l4445
  5222  001348                     l4443:
  5223                           
  5224                           ; BSR set to: 0
  5225  001348  0EFF               	movlw	255
  5226  00134A  256A               	addwf	_width& (0+255),w,b
  5227  00134C  6E16               	movwf	ctoa@w^0,c
  5228  00134E  0EFF               	movlw	255
  5229  001350  216B               	addwfc	(_width+1)& (0+255),w,b
  5230  001352  6E17               	movwf	(ctoa@w+1)^0,c
  5231  001354                     l4445:
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  5235  001354  A057               	btfss	_flags^0,0,c
  5236  001356  EFAF  F009         	goto	u4781
  5237  00135A  EFB1  F009         	goto	u4780
  5238  00135E                     u4781:
  5239  00135E  EFBA  F009         	goto	l4449
  5240  001362                     u4780:
  5241  001362                     
  5242                           ; BSR set to: 0
  5243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  5244  001362  C012  F007         	movff	ctoa@c,fputc@c
  5245  001366  6A08               	clrf	(fputc@c+1)^0,c
  5246  001368  C010  F009         	movff	ctoa@fp,fputc@fp
  5247  00136C  C011  F00A         	movff	ctoa@fp+1,fputc@fp+1
  5248  001370  ECFF  F009         	call	_fputc	;wreg free
  5249  001374                     l4449:
  5250                           
  5251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  5252  001374  BE17               	btfsc	(ctoa@w+1)^0,7,c
  5253  001376  EFBF  F009         	goto	u4791
  5254  00137A  EFC1  F009         	goto	u4790
  5255  00137E                     u4791:
  5256  00137E  EFC3  F009         	goto	l4453
  5257  001382                     u4790:
  5258  001382  EFC7  F009         	goto	l1317
  5259  001386                     l4453:
  5260  001386  0E00               	movlw	0
  5261  001388  6E17               	movwf	(ctoa@w+1)^0,c
  5262  00138A  0E00               	movlw	0
  5263  00138C  6E16               	movwf	ctoa@w^0,c
  5264  00138E                     l1317:
  5265                           
  5266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  5267  00138E  0E00               	movlw	0
  5268  001390  6E15               	movwf	(ctoa@l+1)^0,c
  5269  001392  0E00               	movlw	0
  5270  001394  6E14               	movwf	ctoa@l^0,c
  5271                           
  5272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  5273  001396  EFD9  F009         	goto	l4459
  5274  00139A                     l4455:
  5275                           
  5276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  5277  00139A  0E00               	movlw	0
  5278  00139C  6E08               	movwf	(fputc@c+1)^0,c
  5279  00139E  0E20               	movlw	32
  5280  0013A0  6E07               	movwf	fputc@c^0,c
  5281  0013A2  C010  F009         	movff	ctoa@fp,fputc@fp
  5282  0013A6  C011  F00A         	movff	ctoa@fp+1,fputc@fp+1
  5283  0013AA  ECFF  F009         	call	_fputc	;wreg free
  5284  0013AE                     
  5285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  5286  0013AE  4A14               	infsnz	ctoa@l^0,f,c
  5287  0013B0  2A15               	incf	(ctoa@l+1)^0,f,c
  5288  0013B2                     l4459:
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  5291  0013B2  5016               	movf	ctoa@w^0,w,c
  5292  0013B4  5C14               	subwf	ctoa@l^0,w,c
  5293  0013B6  5015               	movf	(ctoa@l+1)^0,w,c
  5294  0013B8  0A80               	xorlw	128
  5295  0013BA  6E13               	movwf	??_ctoa^0,c
  5296  0013BC  5017               	movf	(ctoa@w+1)^0,w,c
  5297  0013BE  0A80               	xorlw	128
  5298  0013C0  5813               	subwfb	??_ctoa^0,w,c
  5299  0013C2  A0D8               	btfss	status,0,c
  5300  0013C4  EFE6  F009         	goto	u4801
  5301  0013C8  EFE8  F009         	goto	u4800
  5302  0013CC                     u4801:
  5303  0013CC  EFCD  F009         	goto	l4455
  5304  0013D0                     u4800:
  5305  0013D0                     
  5306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  5307  0013D0  B057               	btfsc	_flags^0,0,c
  5308  0013D2  EFED  F009         	goto	u4811
  5309  0013D6  EFEF  F009         	goto	u4810
  5310  0013DA                     u4811:
  5311  0013DA  EFF8  F009         	goto	l4463
  5312  0013DE                     u4810:
  5313  0013DE                     
  5314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  5315  0013DE  C012  F007         	movff	ctoa@c,fputc@c
  5316  0013E2  6A08               	clrf	(fputc@c+1)^0,c
  5317  0013E4  C010  F009         	movff	ctoa@fp,fputc@fp
  5318  0013E8  C011  F00A         	movff	ctoa@fp+1,fputc@fp+1
  5319  0013EC  ECFF  F009         	call	_fputc	;wreg free
  5320  0013F0                     l4463:
  5321                           
  5322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  5323  0013F0  0E01               	movlw	1
  5324  0013F2  2414               	addwf	ctoa@l^0,w,c
  5325  0013F4  6E10               	movwf	?_ctoa^0,c
  5326  0013F6  0E00               	movlw	0
  5327  0013F8  2015               	addwfc	(ctoa@l+1)^0,w,c
  5328  0013FA  6E11               	movwf	(?_ctoa+1)^0,c
  5329  0013FC  0012               	return		;funcret
  5330  0013FE                     __end_of_ctoa:
  5331                           	callstack 0
  5332                           
  5333 ;; *************** function _fputc *****************
  5334 ;; Defined at:
  5335 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  c               2    6[COMRAM] int 
  5338 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  5339 ;;		 -> NULL(0), sprintf@f(6), 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  2    6[COMRAM] int 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:        9 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 6
  5358 ;; This function calls:
  5359 ;;		_putch
  5360 ;; This function is called by:
  5361 ;;		_pad
  5362 ;;		_ctoa
  5363 ;;		_stoa
  5364 ;;		_vfpfcnvrt
  5365 ;;		_fputs
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text19
  5370  0013FE                     __ptext19:
  5371                           	callstack 0
  5372  0013FE                     _fputc:
  5373                           	callstack 17
  5374  0013FE  5009               	movf	fputc@fp^0,w,c
  5375  001400  100A               	iorwf	(fputc@fp+1)^0,w,c
  5376  001402  B4D8               	btfsc	status,2,c
  5377  001404  EF06  F00A         	goto	u4271
  5378  001408  EF08  F00A         	goto	u4270
  5379  00140C                     u4271:
  5380  00140C  EF11  F00A         	goto	l4219
  5381  001410                     u4270:
  5382  001410  5009               	movf	fputc@fp^0,w,c
  5383  001412  100A               	iorwf	(fputc@fp+1)^0,w,c
  5384  001414  A4D8               	btfss	status,2,c
  5385  001416  EF0F  F00A         	goto	u4281
  5386  00141A  EF11  F00A         	goto	u4280
  5387  00141E                     u4281:
  5388  00141E  EF16  F00A         	goto	l4221
  5389  001422                     u4280:
  5390  001422                     l4219:
  5391  001422  5007               	movf	fputc@c^0,w,c
  5392  001424  EC4B  F00E         	call	_putch
  5393  001428  EF63  F00A         	goto	l1473
  5394  00142C                     l4221:
  5395  00142C  EE20 F004          	lfsr	2,4
  5396  001430  5009               	movf	fputc@fp^0,w,c
  5397  001432  26D9               	addwf	fsr2l,f,c
  5398  001434  500A               	movf	(fputc@fp+1)^0,w,c
  5399  001436  22DA               	addwfc	fsr2h,f,c
  5400  001438  50DE               	movf	postinc2,w,c
  5401  00143A  10DE               	iorwf	postinc2,w,c
  5402  00143C  B4D8               	btfsc	status,2,c
  5403  00143E  EF23  F00A         	goto	u4291
  5404  001442  EF25  F00A         	goto	u4290
  5405  001446                     u4291:
  5406  001446  EF40  F00A         	goto	l4225
  5407  00144A                     u4290:
  5408  00144A  EE20 F004          	lfsr	2,4
  5409  00144E  5009               	movf	fputc@fp^0,w,c
  5410  001450  26D9               	addwf	fsr2l,f,c
  5411  001452  500A               	movf	(fputc@fp+1)^0,w,c
  5412  001454  22DA               	addwfc	fsr2h,f,c
  5413  001456  EE10 F002          	lfsr	1,2
  5414  00145A  5009               	movf	fputc@fp^0,w,c
  5415  00145C  26E1               	addwf	fsr1l,f,c
  5416  00145E  500A               	movf	(fputc@fp+1)^0,w,c
  5417  001460  22E2               	addwfc	fsr1h,f,c
  5418  001462  50DE               	movf	postinc2,w,c
  5419  001464  5CE6               	subwf	postinc1,w,c
  5420  001466  50E6               	movf	postinc1,w,c
  5421  001468  0A80               	xorlw	128
  5422  00146A  6E0F               	movwf	(??_fputc+4)^0,c
  5423  00146C  50DE               	movf	postinc2,w,c
  5424  00146E  0A80               	xorlw	128
  5425  001470  580F               	subwfb	(??_fputc+4)^0,w,c
  5426  001472  B0D8               	btfsc	status,0,c
  5427  001474  EF3E  F00A         	goto	u4301
  5428  001478  EF40  F00A         	goto	u4300
  5429  00147C                     u4301:
  5430  00147C  EF63  F00A         	goto	l1473
  5431  001480                     u4300:
  5432  001480                     l4225:
  5433  001480  EE20 F002          	lfsr	2,2
  5434  001484  5009               	movf	fputc@fp^0,w,c
  5435  001486  26D9               	addwf	fsr2l,f,c
  5436  001488  500A               	movf	(fputc@fp+1)^0,w,c
  5437  00148A  22DA               	addwfc	fsr2h,f,c
  5438  00148C  CFDE F00B          	movff	postinc2,??_fputc
  5439  001490  CFDD F00C          	movff	postdec2,??_fputc+1
  5440  001494  C009  FFD9         	movff	fputc@fp,fsr2l
  5441  001498  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  5442  00149C  CFDE F00D          	movff	postinc2,??_fputc+2
  5443  0014A0  CFDD F00E          	movff	postdec2,??_fputc+3
  5444  0014A4  500B               	movf	??_fputc^0,w,c
  5445  0014A6  240D               	addwf	(??_fputc+2)^0,w,c
  5446  0014A8  6ED9               	movwf	fsr2l,c
  5447  0014AA  500C               	movf	(??_fputc+1)^0,w,c
  5448  0014AC  200E               	addwfc	(??_fputc+3)^0,w,c
  5449  0014AE  6EDA               	movwf	fsr2h,c
  5450  0014B0  C007  FFDF         	movff	fputc@c,indf2
  5451  0014B4  EE20 F002          	lfsr	2,2
  5452  0014B8  5009               	movf	fputc@fp^0,w,c
  5453  0014BA  26D9               	addwf	fsr2l,f,c
  5454  0014BC  500A               	movf	(fputc@fp+1)^0,w,c
  5455  0014BE  22DA               	addwfc	fsr2h,f,c
  5456  0014C0  2ADE               	incf	postinc2,f,c
  5457  0014C2  0E00               	movlw	0
  5458  0014C4  22DD               	addwfc	postdec2,f,c
  5459  0014C6                     l1473:
  5460  0014C6  0012               	return		;funcret
  5461  0014C8                     __end_of_fputc:
  5462                           	callstack 0
  5463                           
  5464 ;; *************** function _putch *****************
  5465 ;; Defined at:
  5466 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  txData          1    wreg     unsigned char 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  txData          1    5[COMRAM] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;Total ram usage:        1 bytes
  5485 ;; Hardware stack levels used: 1
  5486 ;; Hardware stack levels required when called: 5
  5487 ;; This function calls:
  5488 ;;		_EUSART1_Write
  5489 ;; This function is called by:
  5490 ;;		_fputc
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text20
  5495  001C96                     __ptext20:
  5496                           	callstack 0
  5497  001C96                     _putch:
  5498                           	callstack 17
  5499                           
  5500                           ;incstack = 0
  5501                           ;putch@txData stored from wreg
  5502  001C96  6E06               	movwf	putch@txData^0,c
  5503  001C98                     
  5504                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  5505  001C98  5006               	movf	putch@txData^0,w,c
  5506  001C9A  EC79  F00C         	call	_EUSART1_Write
  5507  001C9E  0012               	return		;funcret
  5508  001CA0                     __end_of_putch:
  5509                           	callstack 0
  5510                           
  5511 ;; *************** function _EUSART1_Write *****************
  5512 ;; Defined at:
  5513 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  txData          1    wreg     unsigned char 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  txData          1    4[COMRAM] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5531 ;;Total ram usage:        1 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 4
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_putch
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text21
  5542  0018F2                     __ptext21:
  5543                           	callstack 0
  5544  0018F2                     _EUSART1_Write:
  5545                           	callstack 17
  5546                           
  5547                           ;incstack = 0
  5548                           ;EUSART1_Write@txData stored from wreg
  5549  0018F2  6E05               	movwf	EUSART1_Write@txData^0,c
  5550  0018F4                     l4197:
  5551                           
  5552                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  5553  0018F4  0100               	movlb	0	; () banked
  5554  0018F6  517D               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  5555  0018F8  B4D8               	btfsc	status,2,c
  5556  0018FA  EF81  F00C         	goto	u4241
  5557  0018FE  EF83  F00C         	goto	u4240
  5558  001902                     u4241:
  5559  001902  EF7A  F00C         	goto	l4197
  5560  001906                     u4240:
  5561  001906                     
  5562                           ; BSR set to: 0
  5563                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  5564  001906  B89D               	btfsc	157,4,c	;volatile
  5565  001908  EF88  F00C         	goto	u4251
  5566  00190C  EF8A  F00C         	goto	u4250
  5567  001910                     u4251:
  5568  001910  EF8E  F00C         	goto	l155
  5569  001914                     u4250:
  5570  001914                     
  5571                           ; BSR set to: 0
  5572                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  5573  001914  C005  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5574                           
  5575                           ;mcc_generated_files/eusart1.c: 182:     }
  5576  001918  EFA3  F00C         	goto	l4211
  5577  00191C                     l155:
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  5581  00191C  989D               	bcf	157,4,c	;volatile
  5582  00191E                     
  5583                           ; BSR set to: 0
  5584                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5585  00191E  0E40               	movlw	low _eusart1TxBuffer
  5586  001920  257F               	addwf	_eusart1TxHead& (0+255),w,b	;volatile
  5587  001922  6ED9               	movwf	fsr2l,c
  5588  001924  6ADA               	clrf	fsr2h,c
  5589  001926  0E02               	movlw	high _eusart1TxBuffer
  5590  001928  22DA               	addwfc	fsr2h,f,c
  5591  00192A  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  5592  00192E                     
  5593                           ; BSR set to: 0
  5594  00192E  2B7F               	incf	_eusart1TxHead& (0+255),f,b	;volatile
  5595  001930                     
  5596                           ; BSR set to: 0
  5597                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5598  001930  0E3F               	movlw	63
  5599  001932  657F               	cpfsgt	_eusart1TxHead& (0+255),b	;volatile
  5600  001934  EF9E  F00C         	goto	u4261
  5601  001938  EFA0  F00C         	goto	u4260
  5602  00193C                     u4261:
  5603  00193C  EFA2  F00C         	goto	l4209
  5604  001940                     u4260:
  5605  001940                     
  5606                           ; BSR set to: 0
  5607                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5608  001940  0E00               	movlw	0
  5609  001942  6F7F               	movwf	_eusart1TxHead& (0+255),b	;volatile
  5610  001944                     l4209:
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5614  001944  077D               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  5615  001946                     l4211:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  5619  001946  889D               	bsf	157,4,c	;volatile
  5620  001948                     
  5621                           ; BSR set to: 0
  5622  001948  0012               	return		;funcret
  5623  00194A                     __end_of_EUSART1_Write:
  5624                           	callstack 0
  5625                           
  5626 ;; *************** function _atoi *****************
  5627 ;; Defined at:
  5628 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5631 ;;		 -> STR_59(3), STR_57(3), STR_55(3), STR_53(3), 
  5632 ;;		 -> STR_51(3), STR_49(3), STR_47(3), STR_45(3), 
  5633 ;;		 -> STR_43(3), STR_41(3), STR_39(3), STR_37(3), 
  5634 ;;		 -> STR_35(3), STR_33(3), STR_31(3), STR_29(3), 
  5635 ;;		 -> STR_27(3), STR_25(3), STR_23(3), STR_21(3), 
  5636 ;;		 -> STR_20(38), STR_19(5), rtc_get_time@mo(20), STR_18(5), 
  5637 ;;		 -> STR_17(14), STR_16(5), STR_15(15), STR_14(17), 
  5638 ;;		 -> STR_13(15), STR_12(14), STR_11(13), STR_10(33), 
  5639 ;;		 -> STR_9(18), STR_8(16), STR_7(39), STR_6(17), 
  5640 ;;		 -> STR_5(26), STR_4(31), STR_3(23), STR_2(18), 
  5641 ;;		 -> STR_1(16), 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  n               2   24[COMRAM] int 
  5644 ;;  neg             2   17[COMRAM] int 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  2   11[COMRAM] int 
  5647 ;; Registers used:
  5648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;Total ram usage:       15 bytes
  5659 ;; Hardware stack levels used: 1
  5660 ;; Hardware stack levels required when called: 5
  5661 ;; This function calls:
  5662 ;;		___wmul
  5663 ;;		_isdigit
  5664 ;;		_isspace
  5665 ;; This function is called by:
  5666 ;;		_vfpfcnvrt
  5667 ;;		_rtc_get_time
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text22
  5672  000BC0                     __ptext22:
  5673                           	callstack 0
  5674  000BC0                     _atoi:
  5675                           	callstack 21
  5676  000BC0  0E00               	movlw	0
  5677  000BC2  6E1A               	movwf	(atoi@n+1)^0,c
  5678  000BC4  0E00               	movlw	0
  5679  000BC6  6E19               	movwf	atoi@n^0,c
  5680  000BC8  0E00               	movlw	0
  5681  000BCA  6E13               	movwf	(atoi@neg+1)^0,c
  5682  000BCC  0E00               	movlw	0
  5683  000BCE  6E12               	movwf	atoi@neg^0,c
  5684  000BD0  EFEC  F005         	goto	l4401
  5685  000BD4                     l4399:
  5686  000BD4  4A0C               	infsnz	atoi@s^0,f,c
  5687  000BD6  2A0D               	incf	(atoi@s+1)^0,f,c
  5688  000BD8                     l4401:
  5689  000BD8  0E01               	movlw	1
  5690  000BDA  6E18               	movwf	_atoi$1720^0,c
  5691  000BDC  C00C  FFF6         	movff	atoi@s,tblptrl
  5692  000BE0  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5693  000BE4  0E00               	movlw	low (__mediumconst shr (0+16))
  5694  000BE6  6EF8               	movwf	tblptru,c
  5695  000BE8  0E0F               	movlw	(high __ramtop+-1)
  5696  000BEA  64F7               	cpfsgt	tblptrh,c
  5697  000BEC  D003               	bra	u4657
  5698  000BEE  0008               	tblrd		*
  5699  000BF0  50F5               	movf	tablat,w,c
  5700  000BF2  D005               	bra	u4650
  5701  000BF4                     u4657:
  5702  000BF4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5703  000BF8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5704  000BFC  50EF               	movf	indf0,w,c
  5705  000BFE                     u4650:
  5706  000BFE  0A20               	xorlw	32
  5707  000C00  B4D8               	btfsc	status,2,c
  5708  000C02  EF05  F006         	goto	u4661
  5709  000C06  EF07  F006         	goto	u4660
  5710  000C0A                     u4661:
  5711  000C0A  EF2F  F006         	goto	l4409
  5712  000C0E                     u4660:
  5713  000C0E  0EF7               	movlw	247
  5714  000C10  6E0E               	movwf	??_atoi^0,c
  5715  000C12  0EFF               	movlw	255
  5716  000C14  6E0F               	movwf	(??_atoi+1)^0,c
  5717  000C16  C00C  FFF6         	movff	atoi@s,tblptrl
  5718  000C1A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5719  000C1E  0E00               	movlw	low (__mediumconst shr (0+16))
  5720  000C20  6EF8               	movwf	tblptru,c
  5721  000C22  0E0F               	movlw	(high __ramtop+-1)
  5722  000C24  64F7               	cpfsgt	tblptrh,c
  5723  000C26  D003               	bra	u4677
  5724  000C28  0008               	tblrd		*
  5725  000C2A  50F5               	movf	tablat,w,c
  5726  000C2C  D005               	bra	u4670
  5727  000C2E                     u4677:
  5728  000C2E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5729  000C32  CFF7 FFEA          	movff	tblptrh,fsr0h
  5730  000C36  50EF               	movf	indf0,w,c
  5731  000C38                     u4670:
  5732  000C38  6E10               	movwf	(??_atoi+2)^0,c
  5733  000C3A  6A11               	clrf	(??_atoi+3)^0,c
  5734  000C3C  500E               	movf	??_atoi^0,w,c
  5735  000C3E  2610               	addwf	(??_atoi+2)^0,f,c
  5736  000C40  500F               	movf	(??_atoi+1)^0,w,c
  5737  000C42  2211               	addwfc	(??_atoi+3)^0,f,c
  5738  000C44  5011               	movf	(??_atoi+3)^0,w,c
  5739  000C46  E109               	bnz	u4680
  5740  000C48  0E05               	movlw	5
  5741  000C4A  5C10               	subwf	(??_atoi+2)^0,w,c
  5742  000C4C  A0D8               	btfss	status,0,c
  5743  000C4E  EF2B  F006         	goto	u4681
  5744  000C52  EF2D  F006         	goto	u4680
  5745  000C56                     u4681:
  5746  000C56  EF2F  F006         	goto	l4409
  5747  000C5A                     u4680:
  5748  000C5A  0E00               	movlw	0
  5749  000C5C  6E18               	movwf	_atoi$1720^0,c
  5750  000C5E                     l4409:
  5751  000C5E  C018  F014         	movff	_atoi$1720,_atoi$1719
  5752  000C62  6A15               	clrf	(_atoi$1719+1)^0,c
  5753  000C64  5014               	movf	_atoi$1719^0,w,c
  5754  000C66  1015               	iorwf	(_atoi$1719+1)^0,w,c
  5755  000C68  A4D8               	btfss	status,2,c
  5756  000C6A  EF39  F006         	goto	u4691
  5757  000C6E  EF3B  F006         	goto	u4690
  5758  000C72                     u4691:
  5759  000C72  EFEA  F005         	goto	l4399
  5760  000C76                     u4690:
  5761  000C76  EF45  F006         	goto	l4419
  5762  000C7A                     l4415:
  5763  000C7A  0E00               	movlw	0
  5764  000C7C  6E13               	movwf	(atoi@neg+1)^0,c
  5765  000C7E  0E01               	movlw	1
  5766  000C80  6E12               	movwf	atoi@neg^0,c
  5767  000C82                     l4417:
  5768  000C82  4A0C               	infsnz	atoi@s^0,f,c
  5769  000C84  2A0D               	incf	(atoi@s+1)^0,f,c
  5770  000C86  EF92  F006         	goto	l4425
  5771  000C8A                     l4419:
  5772  000C8A  C00C  FFF6         	movff	atoi@s,tblptrl
  5773  000C8E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5774  000C92  0E00               	movlw	low (__mediumconst shr (0+16))
  5775  000C94  6EF8               	movwf	tblptru,c
  5776  000C96  0E0F               	movlw	(high __ramtop+-1)
  5777  000C98  64F7               	cpfsgt	tblptrh,c
  5778  000C9A  D003               	bra	u4707
  5779  000C9C  0008               	tblrd		*
  5780  000C9E  50F5               	movf	tablat,w,c
  5781  000CA0  D005               	bra	u4700
  5782  000CA2                     u4707:
  5783  000CA2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5784  000CA6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5785  000CAA  50EF               	movf	indf0,w,c
  5786  000CAC                     u4700:
  5787  000CAC  6E0E               	movwf	??_atoi^0,c
  5788  000CAE  6A0F               	clrf	(??_atoi+1)^0,c
  5789                           
  5790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5791                           ; Switch size 1, requested type "simple"
  5792                           ; Number of cases is 1, Range of values is 0 to 0
  5793                           ; switch strategies available:
  5794                           ; Name         Instructions Cycles
  5795                           ; simple_byte            4     3 (average)
  5796                           ;	Chosen strategy is simple_byte
  5797  000CB0  500F               	movf	(??_atoi+1)^0,w,c
  5798  000CB2  0A00               	xorlw	0	; case 0
  5799  000CB4  B4D8               	btfsc	status,2,c
  5800  000CB6  EF5F  F006         	goto	l5117
  5801  000CBA  EF92  F006         	goto	l4425
  5802  000CBE                     l5117:
  5803                           
  5804                           ; Switch size 1, requested type "simple"
  5805                           ; Number of cases is 2, Range of values is 43 to 45
  5806                           ; switch strategies available:
  5807                           ; Name         Instructions Cycles
  5808                           ; simple_byte            7     4 (average)
  5809                           ;	Chosen strategy is simple_byte
  5810  000CBE  500E               	movf	??_atoi^0,w,c
  5811  000CC0  0A2B               	xorlw	43	; case 43
  5812  000CC2  B4D8               	btfsc	status,2,c
  5813  000CC4  EF41  F006         	goto	l4417
  5814  000CC8  0A06               	xorlw	6	; case 45
  5815  000CCA  B4D8               	btfsc	status,2,c
  5816  000CCC  EF3D  F006         	goto	l4415
  5817  000CD0  EF92  F006         	goto	l4425
  5818  000CD4                     l4421:
  5819  000CD4  C019  F005         	movff	atoi@n,___wmul@multiplier
  5820  000CD8  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  5821  000CDC  0E00               	movlw	0
  5822  000CDE  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5823  000CE0  0E0A               	movlw	10
  5824  000CE2  6E07               	movwf	___wmul@multiplicand^0,c
  5825  000CE4  EC0B  F00E         	call	___wmul	;wreg free
  5826  000CE8  C00C  FFF6         	movff	atoi@s,tblptrl
  5827  000CEC  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5828  000CF0  0E00               	movlw	low (__mediumconst shr (0+16))
  5829  000CF2  6EF8               	movwf	tblptru,c
  5830  000CF4  0E0F               	movlw	(high __ramtop+-1)
  5831  000CF6  64F7               	cpfsgt	tblptrh,c
  5832  000CF8  D003               	bra	u4717
  5833  000CFA  0008               	tblrd		*
  5834  000CFC  50F5               	movf	tablat,w,c
  5835  000CFE  D005               	bra	u4710
  5836  000D00                     u4717:
  5837  000D00  CFF6 FFE9          	movff	tblptrl,fsr0l
  5838  000D04  CFF7 FFEA          	movff	tblptrh,fsr0h
  5839  000D08  50EF               	movf	indf0,w,c
  5840  000D0A                     u4710:
  5841  000D0A  6E0E               	movwf	??_atoi^0,c
  5842  000D0C  500E               	movf	??_atoi^0,w,c
  5843  000D0E  5E05               	subwf	?___wmul^0,f,c
  5844  000D10  0E00               	movlw	0
  5845  000D12  5A06               	subwfb	(?___wmul+1)^0,f,c
  5846  000D14  0E30               	movlw	48
  5847  000D16  2405               	addwf	?___wmul^0,w,c
  5848  000D18  6E19               	movwf	atoi@n^0,c
  5849  000D1A  0E00               	movlw	0
  5850  000D1C  2006               	addwfc	(?___wmul+1)^0,w,c
  5851  000D1E  6E1A               	movwf	(atoi@n+1)^0,c
  5852  000D20  EF41  F006         	goto	l4417
  5853  000D24                     l4425:
  5854  000D24  0ED0               	movlw	208
  5855  000D26  6E0E               	movwf	??_atoi^0,c
  5856  000D28  0EFF               	movlw	255
  5857  000D2A  6E0F               	movwf	(??_atoi+1)^0,c
  5858  000D2C  C00C  FFF6         	movff	atoi@s,tblptrl
  5859  000D30  C00D  FFF7         	movff	atoi@s+1,tblptrh
  5860  000D34  0E00               	movlw	low (__mediumconst shr (0+16))
  5861  000D36  6EF8               	movwf	tblptru,c
  5862  000D38  0E0F               	movlw	(high __ramtop+-1)
  5863  000D3A  64F7               	cpfsgt	tblptrh,c
  5864  000D3C  D003               	bra	u4727
  5865  000D3E  0008               	tblrd		*
  5866  000D40  50F5               	movf	tablat,w,c
  5867  000D42  D005               	bra	u4720
  5868  000D44                     u4727:
  5869  000D44  CFF6 FFE9          	movff	tblptrl,fsr0l
  5870  000D48  CFF7 FFEA          	movff	tblptrh,fsr0h
  5871  000D4C  50EF               	movf	indf0,w,c
  5872  000D4E                     u4720:
  5873  000D4E  6E10               	movwf	(??_atoi+2)^0,c
  5874  000D50  6A11               	clrf	(??_atoi+3)^0,c
  5875  000D52  500E               	movf	??_atoi^0,w,c
  5876  000D54  2610               	addwf	(??_atoi+2)^0,f,c
  5877  000D56  500F               	movf	(??_atoi+1)^0,w,c
  5878  000D58  2211               	addwfc	(??_atoi+3)^0,f,c
  5879  000D5A  5011               	movf	(??_atoi+3)^0,w,c
  5880  000D5C  E10A               	bnz	u4730
  5881  000D5E  0E0A               	movlw	10
  5882  000D60  5C10               	subwf	(??_atoi+2)^0,w,c
  5883  000D62  A0D8               	btfss	status,0,c
  5884  000D64  EFB6  F006         	goto	u4731
  5885  000D68  EFB9  F006         	goto	u4730
  5886  000D6C                     u4731:
  5887  000D6C  0E01               	movlw	1
  5888  000D6E  EFBA  F006         	goto	u4740
  5889  000D72                     u4730:
  5890  000D72  0E00               	movlw	0
  5891  000D74                     u4740:
  5892  000D74  6E16               	movwf	_atoi$1721^0,c
  5893  000D76  6A17               	clrf	(_atoi$1721+1)^0,c
  5894  000D78  5016               	movf	_atoi$1721^0,w,c
  5895  000D7A  1017               	iorwf	(_atoi$1721+1)^0,w,c
  5896  000D7C  A4D8               	btfss	status,2,c
  5897  000D7E  EFC3  F006         	goto	u4751
  5898  000D82  EFC5  F006         	goto	u4750
  5899  000D86                     u4751:
  5900  000D86  EF6A  F006         	goto	l4421
  5901  000D8A                     u4750:
  5902  000D8A  5012               	movf	atoi@neg^0,w,c
  5903  000D8C  1013               	iorwf	(atoi@neg+1)^0,w,c
  5904  000D8E  A4D8               	btfss	status,2,c
  5905  000D90  EFCC  F006         	goto	u4761
  5906  000D94  EFCE  F006         	goto	u4760
  5907  000D98                     u4761:
  5908  000D98  EFDC  F006         	goto	l1240
  5909  000D9C                     u4760:
  5910  000D9C  C019  F00E         	movff	atoi@n,??_atoi
  5911  000DA0  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  5912  000DA4  1E0E               	comf	??_atoi^0,f,c
  5913  000DA6  1E0F               	comf	(??_atoi+1)^0,f,c
  5914  000DA8  4A0E               	infsnz	??_atoi^0,f,c
  5915  000DAA  2A0F               	incf	(??_atoi+1)^0,f,c
  5916  000DAC  C00E  F00C         	movff	??_atoi,?_atoi
  5917  000DB0  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  5918  000DB4  EFE0  F006         	goto	l1243
  5919  000DB8                     l1240:
  5920  000DB8  C019  F00C         	movff	atoi@n,?_atoi
  5921  000DBC  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  5922  000DC0                     l1243:
  5923  000DC0  0012               	return		;funcret
  5924  000DC2                     __end_of_atoi:
  5925                           	callstack 0
  5926                           
  5927 ;; *************** function _isspace *****************
  5928 ;; Defined at:
  5929 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;  c               2    4[COMRAM] int 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;		None
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  2    4[COMRAM] int 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;Total ram usage:        7 bytes
  5948 ;; Hardware stack levels used: 1
  5949 ;; Hardware stack levels required when called: 4
  5950 ;; This function calls:
  5951 ;;		Nothing
  5952 ;; This function is called by:
  5953 ;;		_atoi
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text23
  5958  00194A                     __ptext23:
  5959                           	callstack 0
  5960  00194A                     _isspace:
  5961                           	callstack 21
  5962  00194A  0E01               	movlw	1
  5963  00194C  6E0B               	movwf	_isspace$1737^0,c
  5964  00194E  0E20               	movlw	32
  5965  001950  1805               	xorwf	isspace@c^0,w,c
  5966  001952  1006               	iorwf	(isspace@c+1)^0,w,c
  5967  001954  B4D8               	btfsc	status,2,c
  5968  001956  EFAF  F00C         	goto	u4491
  5969  00195A  EFB1  F00C         	goto	u4490
  5970  00195E                     u4491:
  5971  00195E  EFCA  F00C         	goto	l4345
  5972  001962                     u4490:
  5973  001962  0EF7               	movlw	247
  5974  001964  6E07               	movwf	??_isspace^0,c
  5975  001966  0EFF               	movlw	255
  5976  001968  6E08               	movwf	(??_isspace+1)^0,c
  5977  00196A  C005  F009         	movff	isspace@c,??_isspace+2
  5978  00196E  C006  F00A         	movff	isspace@c+1,??_isspace+3
  5979  001972  5007               	movf	??_isspace^0,w,c
  5980  001974  2609               	addwf	(??_isspace+2)^0,f,c
  5981  001976  5008               	movf	(??_isspace+1)^0,w,c
  5982  001978  220A               	addwfc	(??_isspace+3)^0,f,c
  5983  00197A  500A               	movf	(??_isspace+3)^0,w,c
  5984  00197C  E109               	bnz	u4500
  5985  00197E  0E05               	movlw	5
  5986  001980  5C09               	subwf	(??_isspace+2)^0,w,c
  5987  001982  A0D8               	btfss	status,0,c
  5988  001984  EFC6  F00C         	goto	u4501
  5989  001988  EFC8  F00C         	goto	u4500
  5990  00198C                     u4501:
  5991  00198C  EFCA  F00C         	goto	l4345
  5992  001990                     u4500:
  5993  001990  0E00               	movlw	0
  5994  001992  6E0B               	movwf	_isspace$1737^0,c
  5995  001994                     l4345:
  5996  001994  C00B  F005         	movff	_isspace$1737,?_isspace
  5997  001998  6A06               	clrf	(?_isspace+1)^0,c
  5998  00199A  0012               	return		;funcret
  5999  00199C                     __end_of_isspace:
  6000                           	callstack 0
  6001                           
  6002 ;; *************** function _isdigit *****************
  6003 ;; Defined at:
  6004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  c               2    4[COMRAM] int 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  2    4[COMRAM] int 
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;Total ram usage:        6 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; Hardware stack levels required when called: 4
  6025 ;; This function calls:
  6026 ;;		Nothing
  6027 ;; This function is called by:
  6028 ;;		_atoi
  6029 ;;		_vfpfcnvrt
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text24
  6034  001B5E                     __ptext24:
  6035                           	callstack 0
  6036  001B5E                     _isdigit:
  6037                           	callstack 22
  6038  001B5E  0ED0               	movlw	208
  6039  001B60  6E07               	movwf	??_isdigit^0,c
  6040  001B62  0EFF               	movlw	255
  6041  001B64  6E08               	movwf	(??_isdigit+1)^0,c
  6042  001B66  C005  F009         	movff	isdigit@c,??_isdigit+2
  6043  001B6A  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  6044  001B6E  5007               	movf	??_isdigit^0,w,c
  6045  001B70  2609               	addwf	(??_isdigit+2)^0,f,c
  6046  001B72  5008               	movf	(??_isdigit+1)^0,w,c
  6047  001B74  220A               	addwfc	(??_isdigit+3)^0,f,c
  6048  001B76  500A               	movf	(??_isdigit+3)^0,w,c
  6049  001B78  E10A               	bnz	u4510
  6050  001B7A  0E0A               	movlw	10
  6051  001B7C  5C09               	subwf	(??_isdigit+2)^0,w,c
  6052  001B7E  A0D8               	btfss	status,0,c
  6053  001B80  EFC4  F00D         	goto	u4511
  6054  001B84  EFC7  F00D         	goto	u4510
  6055  001B88                     u4511:
  6056  001B88  0E01               	movlw	1
  6057  001B8A  EFC8  F00D         	goto	u4520
  6058  001B8E                     u4510:
  6059  001B8E  0E00               	movlw	0
  6060  001B90                     u4520:
  6061  001B90  6E05               	movwf	?_isdigit^0,c
  6062  001B92  6A06               	clrf	(?_isdigit+1)^0,c
  6063  001B94  0012               	return		;funcret
  6064  001B96                     __end_of_isdigit:
  6065                           	callstack 0
  6066                           
  6067 ;; *************** function ___wmul *****************
  6068 ;; Defined at:
  6069 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  multiplier      2    4[COMRAM] unsigned int 
  6072 ;;  multiplicand    2    6[COMRAM] unsigned int 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  product         2    8[COMRAM] unsigned int 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  2    4[COMRAM] unsigned int 
  6077 ;; Registers used:
  6078 ;;		wreg, status,2, status,0, prodl, prodh
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;Total ram usage:        6 bytes
  6089 ;; Hardware stack levels used: 1
  6090 ;; Hardware stack levels required when called: 4
  6091 ;; This function calls:
  6092 ;;		Nothing
  6093 ;; This function is called by:
  6094 ;;		_atoi
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text25
  6099  001C16                     __ptext25:
  6100                           	callstack 0
  6101  001C16                     ___wmul:
  6102                           	callstack 21
  6103  001C16  5005               	movf	___wmul@multiplier^0,w,c
  6104  001C18  0207               	mulwf	___wmul@multiplicand^0,c
  6105  001C1A  CFF3 F009          	movff	prodl,___wmul@product
  6106  001C1E  CFF4 F00A          	movff	prodh,___wmul@product+1
  6107  001C22  5005               	movf	___wmul@multiplier^0,w,c
  6108  001C24  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  6109  001C26  50F3               	movf	243,w,c
  6110  001C28  260A               	addwf	(___wmul@product+1)^0,f,c
  6111  001C2A  5006               	movf	(___wmul@multiplier+1)^0,w,c
  6112  001C2C  0207               	mulwf	___wmul@multiplicand^0,c
  6113  001C2E  50F3               	movf	243,w,c
  6114  001C30  260A               	addwf	(___wmul@product+1)^0,f,c
  6115  001C32  C009  F005         	movff	___wmul@product,?___wmul
  6116  001C36  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  6117  001C3A  0012               	return		;funcret
  6118  001C3C                     __end_of___wmul:
  6119                           	callstack 0
  6120                           
  6121 ;; *************** function _i2c_init *****************
  6122 ;; Defined at:
  6123 ;;		line 23 in file "./i2c.h"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;		None
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;		None
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      void 
  6130 ;; Registers used:
  6131 ;;		wreg, status,2
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;Total ram usage:        0 bytes
  6142 ;; Hardware stack levels used: 1
  6143 ;; Hardware stack levels required when called: 4
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_main
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text26
  6152  001C58                     __ptext26:
  6153                           	callstack 0
  6154  001C58                     _i2c_init:
  6155                           	callstack 26
  6156  001C58                     
  6157                           ;./i2c.h: 24:     TRISCbits.RC3=1;
  6158  001C58  8694               	bsf	148,3,c	;volatile
  6159                           
  6160                           ;./i2c.h: 25:     TRISCbits.RC4=1;
  6161  001C5A  8894               	bsf	148,4,c	;volatile
  6162                           
  6163                           ;./i2c.h: 27:     ANSELCbits.ANSC3 = 0;
  6164  001C5C  010F               	movlb	15	; () banked
  6165  001C5E  973A               	bcf	58,3,b	;volatile
  6166                           
  6167                           ;./i2c.h: 28:     ANSELCbits.ANSC4 = 0;
  6168  001C60  993A               	bcf	58,4,b	;volatile
  6169  001C62                     
  6170                           ; BSR set to: 15
  6171                           ;./i2c.h: 32:     SSP1ADD = 0x9F;
  6172  001C62  0E9F               	movlw	159
  6173  001C64  6EC8               	movwf	200,c	;volatile
  6174                           
  6175                           ;./i2c.h: 33:     SSP1CON1 = 0x28;
  6176  001C66  0E28               	movlw	40
  6177  001C68  6EC6               	movwf	198,c	;volatile
  6178                           
  6179                           ;./i2c.h: 34:     SSP1CON2 = 0;
  6180  001C6A  0E00               	movlw	0
  6181  001C6C  6EC5               	movwf	197,c	;volatile
  6182  001C6E                     
  6183                           ; BSR set to: 15
  6184  001C6E  0012               	return		;funcret
  6185  001C70                     __end_of_i2c_init:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function _SYSTEM_Initialize *****************
  6189 ;; Defined at:
  6190 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 6
  6211 ;; This function calls:
  6212 ;;		_EUSART1_Initialize
  6213 ;;		_INTERRUPT_Initialize
  6214 ;;		_OSCILLATOR_Initialize
  6215 ;;		_PIN_MANAGER_Initialize
  6216 ;; This function is called by:
  6217 ;;		_main
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           	psect	text27
  6222  001C84                     __ptext27:
  6223                           	callstack 0
  6224  001C84                     _SYSTEM_Initialize:
  6225                           	callstack 24
  6226  001C84                     
  6227                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  6228  001C84  EC6F  F00E         	call	_INTERRUPT_Initialize	;wreg free
  6229  001C88                     
  6230                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6231  001C88  ECCB  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  6232  001C8C                     
  6233                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6234  001C8C  EC1E  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  6235  001C90                     
  6236                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  6237  001C90  ECAF  F00B         	call	_EUSART1_Initialize	;wreg free
  6238  001C94  0012               	return		;funcret
  6239  001C96                     __end_of_SYSTEM_Initialize:
  6240                           	callstack 0
  6241                           
  6242 ;; *************** function _PIN_MANAGER_Initialize *****************
  6243 ;; Defined at:
  6244 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;Total ram usage:        0 bytes
  6263 ;; Hardware stack levels used: 1
  6264 ;; Hardware stack levels required when called: 4
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_SYSTEM_Initialize
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text28
  6273  001B96                     __ptext28:
  6274                           	callstack 0
  6275  001B96                     _PIN_MANAGER_Initialize:
  6276                           	callstack 25
  6277  001B96                     
  6278                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6279  001B96  0E00               	movlw	0
  6280  001B98  6E89               	movwf	137,c	;volatile
  6281                           
  6282                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6283  001B9A  0E00               	movlw	0
  6284  001B9C  6E8A               	movwf	138,c	;volatile
  6285                           
  6286                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6287  001B9E  0E00               	movlw	0
  6288  001BA0  6E8B               	movwf	139,c	;volatile
  6289  001BA2                     
  6290                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  6291  001BA2  6892               	setf	146,c	;volatile
  6292                           
  6293                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  6294  001BA4  0EDF               	movlw	223
  6295  001BA6  6E93               	movwf	147,c	;volatile
  6296                           
  6297                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  6298  001BA8  0EBF               	movlw	191
  6299  001BAA  6E94               	movwf	148,c	;volatile
  6300                           
  6301                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  6302  001BAC  0E3C               	movlw	60
  6303  001BAE  010F               	movlb	15	; () banked
  6304  001BB0  6F3A               	movwf	58,b	;volatile
  6305                           
  6306                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x1F;
  6307  001BB2  0E1F               	movlw	31
  6308  001BB4  6F39               	movwf	57,b	;volatile
  6309                           
  6310                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  6311  001BB6  0E2F               	movlw	47
  6312  001BB8  6F38               	movwf	56,b	;volatile
  6313                           
  6314                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6315  001BBA  0E00               	movlw	0
  6316  001BBC  6E61               	movwf	97,c	;volatile
  6317  001BBE                     
  6318                           ; BSR set to: 15
  6319                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  6320  001BBE  8EF1               	bsf	241,7,c	;volatile
  6321  001BC0                     
  6322                           ; BSR set to: 15
  6323  001BC0  0012               	return		;funcret
  6324  001BC2                     __end_of_PIN_MANAGER_Initialize:
  6325                           	callstack 0
  6326                           
  6327 ;; *************** function _OSCILLATOR_Initialize *****************
  6328 ;; Defined at:
  6329 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;		None
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;		None
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;Total ram usage:        0 bytes
  6348 ;; Hardware stack levels used: 1
  6349 ;; Hardware stack levels required when called: 4
  6350 ;; This function calls:
  6351 ;;		Nothing
  6352 ;; This function is called by:
  6353 ;;		_SYSTEM_Initialize
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text29
  6358  001C3C                     __ptext29:
  6359                           	callstack 0
  6360  001C3C                     _OSCILLATOR_Initialize:
  6361                           	callstack 25
  6362  001C3C                     
  6363                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  6364  001C3C  0E70               	movlw	112
  6365  001C3E  6ED3               	movwf	211,c	;volatile
  6366                           
  6367                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
  6368  001C40  0E04               	movlw	4
  6369  001C42  6ED2               	movwf	210,c	;volatile
  6370                           
  6371                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
  6372  001C44  0E40               	movlw	64
  6373  001C46  6E9B               	movwf	155,c	;volatile
  6374  001C48                     l22:
  6375                           
  6376                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
  6377  001C48  AED2               	btfss	4050,7,c	;volatile
  6378  001C4A  EF29  F00E         	goto	u2781
  6379  001C4E  EF2B  F00E         	goto	u2780
  6380  001C52                     u2781:
  6381  001C52  EF24  F00E         	goto	l22
  6382  001C56                     u2780:
  6383  001C56  0012               	return		;funcret
  6384  001C58                     __end_of_OSCILLATOR_Initialize:
  6385                           	callstack 0
  6386                           
  6387 ;; *************** function _INTERRUPT_Initialize *****************
  6388 ;; Defined at:
  6389 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		None
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used: 1
  6409 ;; Hardware stack levels required when called: 4
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_SYSTEM_Initialize
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text30
  6418  001CDE                     __ptext30:
  6419                           	callstack 0
  6420  001CDE                     _INTERRUPT_Initialize:
  6421                           	callstack 25
  6422  001CDE                     
  6423                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6424  001CDE  9ED0               	bcf	208,7,c	;volatile
  6425  001CE0  0012               	return		;funcret
  6426  001CE2                     __end_of_INTERRUPT_Initialize:
  6427                           	callstack 0
  6428                           
  6429 ;; *************** function _EUSART1_Initialize *****************
  6430 ;; Defined at:
  6431 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;Total ram usage:        0 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; Hardware stack levels required when called: 5
  6452 ;; This function calls:
  6453 ;;		_EUSART1_SetErrorHandler
  6454 ;;		_EUSART1_SetFramingErrorHandler
  6455 ;;		_EUSART1_SetOverrunErrorHandler
  6456 ;;		_EUSART1_SetRxInterruptHandler
  6457 ;;		_EUSART1_SetTxInterruptHandler
  6458 ;; This function is called by:
  6459 ;;		_SYSTEM_Initialize
  6460 ;;		_main
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text31
  6465  00175E                     __ptext31:
  6466                           	callstack 0
  6467  00175E                     _EUSART1_Initialize:
  6468                           	callstack 24
  6469  00175E                     
  6470                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  6471  00175E  9A9D               	bcf	157,5,c	;volatile
  6472  001760                     
  6473                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  6474  001760  0E8A               	movlw	low _EUSART1_Receive_ISR
  6475  001762  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  6476  001764  0E15               	movlw	high _EUSART1_Receive_ISR
  6477  001766  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  6478  001768  EC55  F00E         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  6479  00176C                     
  6480                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  6481  00176C  989D               	bcf	157,4,c	;volatile
  6482                           
  6483                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  6484  00176E  0E30               	movlw	low _EUSART1_Transmit_ISR
  6485  001770  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  6486  001772  0E1A               	movlw	high _EUSART1_Transmit_ISR
  6487  001774  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  6488  001776  EC50  F00E         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  6489  00177A                     
  6490                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  6491  00177A  0E08               	movlw	8
  6492  00177C  6EB8               	movwf	184,c	;volatile
  6493  00177E                     
  6494                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  6495  00177E  0E90               	movlw	144
  6496  001780  6EAB               	movwf	171,c	;volatile
  6497  001782                     
  6498                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  6499  001782  0E24               	movlw	36
  6500  001784  6EAC               	movwf	172,c	;volatile
  6501  001786                     
  6502                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x15;
  6503  001786  0E15               	movlw	21
  6504  001788  6EAF               	movwf	175,c	;volatile
  6505  00178A                     
  6506                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x01;
  6507  00178A  0E01               	movlw	1
  6508  00178C  6EB0               	movwf	176,c	;volatile
  6509  00178E                     
  6510                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  6511  00178E  0EE2               	movlw	low _EUSART1_DefaultFramingErrorHandler
  6512  001790  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6513  001792  0E1C               	movlw	high _EUSART1_DefaultFramingErrorHandler
  6514  001794  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6515  001796  EC5F  F00E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6516  00179A                     
  6517                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  6518  00179A  0ED2               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  6519  00179C  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6520  00179E  0E1C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  6521  0017A0  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6522  0017A2  EC5A  F00E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6523  0017A6                     
  6524                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  6525  0017A6  0ED8               	movlw	low _EUSART1_DefaultErrorHandler
  6526  0017A8  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6527  0017AA  0E1C               	movlw	high _EUSART1_DefaultErrorHandler
  6528  0017AC  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6529  0017AE  EC64  F00E         	call	_EUSART1_SetErrorHandler	;wreg free
  6530                           
  6531                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  6532  0017B2  0E00               	movlw	0
  6533  0017B4  0100               	movlb	0	; () banked
  6534  0017B6  6F7B               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6535                           
  6536                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  6537  0017B8  0E00               	movlw	0
  6538  0017BA  6F7F               	movwf	_eusart1TxHead& (0+255),b	;volatile
  6539                           
  6540                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  6541  0017BC  0E00               	movlw	0
  6542  0017BE  6F7E               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6543                           
  6544                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  6545  0017C0  0E40               	movlw	64
  6546  0017C2  6F7D               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6547                           
  6548                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  6549  0017C4  0E00               	movlw	0
  6550  0017C6  6E5A               	movwf	_eusart1RxHead^0,c	;volatile
  6551                           
  6552                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  6553  0017C8  0E00               	movlw	0
  6554  0017CA  6E59               	movwf	_eusart1RxTail^0,c	;volatile
  6555                           
  6556                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  6557  0017CC  0E00               	movlw	0
  6558  0017CE  6F7C               	movwf	_eusart1RxCount& (0+255),b	;volatile
  6559  0017D0                     
  6560                           ; BSR set to: 0
  6561                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  6562  0017D0  8A9D               	bsf	157,5,c	;volatile
  6563  0017D2                     
  6564                           ; BSR set to: 0
  6565  0017D2  0012               	return		;funcret
  6566  0017D4                     __end_of_EUSART1_Initialize:
  6567                           	callstack 0
  6568                           
  6569 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  6570 ;; Defined at:
  6571 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6574 ;;		 -> EUSART1_Transmit_ISR(1), 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  1    wreg      void 
  6579 ;; Registers used:
  6580 ;;		wreg, status,2, status,0
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;Total ram usage:        2 bytes
  6591 ;; Hardware stack levels used: 1
  6592 ;; Hardware stack levels required when called: 4
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_EUSART1_Initialize
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text32
  6601  001CA0                     __ptext32:
  6602                           	callstack 0
  6603  001CA0                     _EUSART1_SetTxInterruptHandler:
  6604                           	callstack 24
  6605  001CA0                     
  6606                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6607  001CA0  C005  F076         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  6608  001CA4  C006  F077         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  6609  001CA8  0012               	return		;funcret
  6610  001CAA                     __end_of_EUSART1_SetTxInterruptHandler:
  6611                           	callstack 0
  6612                           
  6613 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  6614 ;; Defined at:
  6615 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6618 ;;		 -> EUSART1_Receive_ISR(1), 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;		None
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      void 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;Total ram usage:        2 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; Hardware stack levels required when called: 4
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_EUSART1_Initialize
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text33
  6645  001CAA                     __ptext33:
  6646                           	callstack 0
  6647  001CAA                     _EUSART1_SetRxInterruptHandler:
  6648                           	callstack 24
  6649  001CAA                     
  6650                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6651  001CAA  C005  F074         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  6652  001CAE  C006  F075         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  6653  001CB2  0012               	return		;funcret
  6654  001CB4                     __end_of_EUSART1_SetRxInterruptHandler:
  6655                           	callstack 0
  6656                           
  6657 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6658 ;; Defined at:
  6659 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6662 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;		None
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;Total ram usage:        2 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 4
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_EUSART1_Initialize
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text34
  6689  001CB4                     __ptext34:
  6690                           	callstack 0
  6691  001CB4                     _EUSART1_SetOverrunErrorHandler:
  6692                           	callstack 24
  6693  001CB4                     
  6694                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  6695  001CB4  C005  F070         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6696  001CB8  C006  F071         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6697  001CBC  0012               	return		;funcret
  6698  001CBE                     __end_of_EUSART1_SetOverrunErrorHandler:
  6699                           	callstack 0
  6700                           
  6701 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6702 ;; Defined at:
  6703 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6706 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;		None
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      void 
  6711 ;; Registers used:
  6712 ;;		wreg, status,2, status,0
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;Total ram usage:        2 bytes
  6723 ;; Hardware stack levels used: 1
  6724 ;; Hardware stack levels required when called: 4
  6725 ;; This function calls:
  6726 ;;		Nothing
  6727 ;; This function is called by:
  6728 ;;		_EUSART1_Initialize
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           	psect	text35
  6733  001CBE                     __ptext35:
  6734                           	callstack 0
  6735  001CBE                     _EUSART1_SetFramingErrorHandler:
  6736                           	callstack 24
  6737  001CBE                     
  6738                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  6739  001CBE  C005  F072         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6740  001CC2  C006  F073         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6741  001CC6  0012               	return		;funcret
  6742  001CC8                     __end_of_EUSART1_SetFramingErrorHandler:
  6743                           	callstack 0
  6744                           
  6745 ;; *************** function _EUSART1_SetErrorHandler *****************
  6746 ;; Defined at:
  6747 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  6750 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;Total ram usage:        2 bytes
  6767 ;; Hardware stack levels used: 1
  6768 ;; Hardware stack levels required when called: 4
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_EUSART1_Initialize
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text36
  6777  001CC8                     __ptext36:
  6778                           	callstack 0
  6779  001CC8                     _EUSART1_SetErrorHandler:
  6780                           	callstack 24
  6781  001CC8                     
  6782                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  6783  001CC8  C005  F06E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6784  001CCC  C006  F06F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6785  001CD0  0012               	return		;funcret
  6786  001CD2                     __end_of_EUSART1_SetErrorHandler:
  6787                           	callstack 0
  6788                           
  6789 ;; *************** function _INTERRUPT_InterruptManager *****************
  6790 ;; Defined at:
  6791 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;		None
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;		None
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;Total ram usage:        4 bytes
  6810 ;; Hardware stack levels used: 1
  6811 ;; Hardware stack levels required when called: 3
  6812 ;; This function calls:
  6813 ;;		Absolute function
  6814 ;;		_EUSART1_Receive_ISR
  6815 ;;		_EUSART1_Transmit_ISR
  6816 ;; This function is called by:
  6817 ;;		Interrupt level 2
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	intcode
  6822  000008                     __pintcode:
  6823                           	callstack 0
  6824  000008                     _INTERRUPT_InterruptManager:
  6825                           	callstack 17
  6826                           
  6827                           ;incstack = 0
  6828  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6829  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6830  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6831  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6832  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6833  00001A                     
  6834                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6835  00001A  ACF2               	btfss	242,6,c	;volatile
  6836  00001C  EF12  F000         	goto	i2u348_41
  6837  000020  EF14  F000         	goto	i2u348_40
  6838  000024                     i2u348_41:
  6839  000024  EF4E  F000         	goto	i2l231
  6840  000028                     i2u348_40:
  6841  000028                     
  6842                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  6843  000028  A89D               	btfss	157,4,c	;volatile
  6844  00002A  EF19  F000         	goto	i2u349_41
  6845  00002E  EF1B  F000         	goto	i2u349_40
  6846  000032                     i2u349_41:
  6847  000032  EF31  F000         	goto	i2l226
  6848  000036                     i2u349_40:
  6849  000036  A89E               	btfss	158,4,c	;volatile
  6850  000038  EF20  F000         	goto	i2u350_41
  6851  00003C  EF22  F000         	goto	i2u350_40
  6852  000040                     i2u350_41:
  6853  000040  EF31  F000         	goto	i2l226
  6854  000044                     i2u350_40:
  6855  000044                     
  6856                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  6857  000044  D802               	call	i2u351_48
  6858  000046  EF2F  F000         	goto	i2u351_49
  6859  00004A                     i2u351_48:
  6860  00004A  0005               	push	
  6861  00004C  6EFA               	movwf	pclath,c
  6862  00004E  0100               	movlb	0	; () banked
  6863  000050  5176               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  6864  000052  6EFD               	movwf	tosl,c
  6865  000054  5177               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  6866  000056  6EFE               	movwf	tosh,c
  6867  000058  6AFF               	clrf	tosu,c
  6868  00005A  50FA               	movf	pclath,w,c
  6869  00005C  0012               	return		;indir
  6870  00005E                     i2u351_49:
  6871                           
  6872                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  6873  00005E  EF4E  F000         	goto	i2l231
  6874  000062                     i2l226:
  6875  000062  AA9D               	btfss	157,5,c	;volatile
  6876  000064  EF36  F000         	goto	i2u352_41
  6877  000068  EF38  F000         	goto	i2u352_40
  6878  00006C                     i2u352_41:
  6879  00006C  EF4E  F000         	goto	i2l227
  6880  000070                     i2u352_40:
  6881  000070  AA9E               	btfss	158,5,c	;volatile
  6882  000072  EF3D  F000         	goto	i2u353_41
  6883  000076  EF3F  F000         	goto	i2u353_40
  6884  00007A                     i2u353_41:
  6885  00007A  EF4E  F000         	goto	i2l227
  6886  00007E                     i2u353_40:
  6887  00007E                     
  6888                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  6889  00007E  D802               	call	i2u354_48
  6890  000080  EF4C  F000         	goto	i2u354_49
  6891  000084                     i2u354_48:
  6892  000084  0005               	push	
  6893  000086  6EFA               	movwf	pclath,c
  6894  000088  0100               	movlb	0	; () banked
  6895  00008A  5174               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  6896  00008C  6EFD               	movwf	tosl,c
  6897  00008E  5175               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  6898  000090  6EFE               	movwf	tosh,c
  6899  000092  6AFF               	clrf	tosu,c
  6900  000094  50FA               	movf	pclath,w,c
  6901  000096  0012               	return		;indir
  6902  000098                     i2u354_49:
  6903                           
  6904                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  6905  000098  EF4E  F000         	goto	i2l231
  6906  00009C                     i2l227:
  6907  00009C                     i2l231:
  6908  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6909  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6910  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6911  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6912  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6913  0000AE  0011               	retfie		f
  6914  0000B0                     __end_of_INTERRUPT_InterruptManager:
  6915                           	callstack 0
  6916                           
  6917 ;; *************** function _EUSART1_Transmit_ISR *****************
  6918 ;; Defined at:
  6919 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;		None
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  1    wreg      void 
  6926 ;; Registers used:
  6927 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;Total ram usage:        0 bytes
  6938 ;; Hardware stack levels used: 1
  6939 ;; This function calls:
  6940 ;;		Nothing
  6941 ;; This function is called by:
  6942 ;;		_EUSART1_Initialize
  6943 ;;		_INTERRUPT_InterruptManager
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           	psect	text38
  6948  001A30                     __ptext38:
  6949                           	callstack 0
  6950  001A30                     _EUSART1_Transmit_ISR:
  6951                           	callstack 19
  6952  001A30                     
  6953                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  6954  001A30  0E40               	movlw	64
  6955  001A32  0100               	movlb	0	; () banked
  6956  001A34  617D               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
  6957  001A36  EF1F  F00D         	goto	i2u281_41
  6958  001A3A  EF21  F00D         	goto	i2u281_40
  6959  001A3E                     i2u281_41:
  6960  001A3E  EF37  F00D         	goto	i2l167
  6961  001A42                     i2u281_40:
  6962  001A42                     
  6963                           ; BSR set to: 0
  6964                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  6965  001A42  0E40               	movlw	low _eusart1TxBuffer
  6966  001A44  257E               	addwf	_eusart1TxTail& (0+255),w,b	;volatile
  6967  001A46  6ED9               	movwf	fsr2l,c
  6968  001A48  6ADA               	clrf	fsr2h,c
  6969  001A4A  0E02               	movlw	high _eusart1TxBuffer
  6970  001A4C  22DA               	addwfc	fsr2h,f,c
  6971  001A4E  50DF               	movf	indf2,w,c
  6972  001A50  6EAD               	movwf	173,c	;volatile
  6973  001A52                     
  6974                           ; BSR set to: 0
  6975  001A52  2B7E               	incf	_eusart1TxTail& (0+255),f,b	;volatile
  6976  001A54                     
  6977                           ; BSR set to: 0
  6978                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6979  001A54  0E3F               	movlw	63
  6980  001A56  657E               	cpfsgt	_eusart1TxTail& (0+255),b	;volatile
  6981  001A58  EF30  F00D         	goto	i2u282_41
  6982  001A5C  EF32  F00D         	goto	i2u282_40
  6983  001A60                     i2u282_41:
  6984  001A60  EF34  F00D         	goto	i2l3225
  6985  001A64                     i2u282_40:
  6986  001A64                     
  6987                           ; BSR set to: 0
  6988                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  6989  001A64  0E00               	movlw	0
  6990  001A66  6F7E               	movwf	_eusart1TxTail& (0+255),b	;volatile
  6991  001A68                     i2l3225:
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  6995  001A68  2B7D               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  6996                           
  6997                           ;mcc_generated_files/eusart1.c: 218:     }
  6998  001A6A  EF38  F00D         	goto	i2l170
  6999  001A6E                     i2l167:
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  7003  001A6E  989D               	bcf	157,4,c	;volatile
  7004  001A70                     i2l170:
  7005                           
  7006                           ; BSR set to: 0
  7007  001A70  0012               	return		;funcret
  7008  001A72                     __end_of_EUSART1_Transmit_ISR:
  7009                           	callstack 0
  7010                           
  7011 ;; *************** function _EUSART1_Receive_ISR *****************
  7012 ;; Defined at:
  7013 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;Total ram usage:        0 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; Hardware stack levels required when called: 2
  7034 ;; This function calls:
  7035 ;;		Absolute function
  7036 ;;		_EUSART1_DefaultErrorHandler
  7037 ;;		_EUSART1_DefaultFramingErrorHandler
  7038 ;;		_EUSART1_DefaultOverrunErrorHandler
  7039 ;;		_EUSART1_RxDataHandler
  7040 ;; This function is called by:
  7041 ;;		_EUSART1_Initialize
  7042 ;;		_INTERRUPT_InterruptManager
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text39
  7047  00158A                     __ptext39:
  7048                           	callstack 0
  7049  00158A                     _EUSART1_Receive_ISR:
  7050                           	callstack 17
  7051  00158A                     
  7052                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  7053  00158A  0E00               	movlw	low _eusart1RxStatusBuffer
  7054  00158C  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  7055  00158E  6ED9               	movwf	fsr2l,c
  7056  001590  6ADA               	clrf	fsr2h,c
  7057  001592  0E01               	movlw	high _eusart1RxStatusBuffer
  7058  001594  22DA               	addwfc	fsr2h,f,c
  7059  001596  0E00               	movlw	0
  7060  001598  6EDF               	movwf	indf2,c
  7061  00159A                     
  7062                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  7063  00159A  A4AB               	btfss	171,2,c	;volatile
  7064  00159C  EFD2  F00A         	goto	i2u283_41
  7065  0015A0  EFD4  F00A         	goto	i2u283_40
  7066  0015A4                     i2u283_41:
  7067  0015A4  EFE9  F00A         	goto	i2l3235
  7068  0015A8                     i2u283_40:
  7069  0015A8                     
  7070                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  7071  0015A8  0E00               	movlw	low _eusart1RxStatusBuffer
  7072  0015AA  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  7073  0015AC  6ED9               	movwf	fsr2l,c
  7074  0015AE  6ADA               	clrf	fsr2h,c
  7075  0015B0  0E01               	movlw	high _eusart1RxStatusBuffer
  7076  0015B2  22DA               	addwfc	fsr2h,f,c
  7077  0015B4  0101               	movlb	1	; () banked
  7078  0015B6  82DF               	bsf	indf2,1,c
  7079  0015B8                     
  7080                           ; BSR set to: 1
  7081                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  7082  0015B8  D802               	call	i2u284_48
  7083  0015BA  EFE9  F00A         	goto	i2u284_49
  7084  0015BE                     i2u284_48:
  7085  0015BE  0005               	push	
  7086  0015C0  6EFA               	movwf	pclath,c
  7087  0015C2  0100               	movlb	0	; () banked
  7088  0015C4  5172               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  7089  0015C6  6EFD               	movwf	tosl,c
  7090  0015C8  5173               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  7091  0015CA  6EFE               	movwf	tosh,c
  7092  0015CC  6AFF               	clrf	tosu,c
  7093  0015CE  50FA               	movf	pclath,w,c
  7094  0015D0  0012               	return		;indir
  7095  0015D2                     i2u284_49:
  7096  0015D2                     i2l3235:
  7097                           
  7098                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  7099  0015D2  A2AB               	btfss	171,1,c	;volatile
  7100  0015D4  EFEE  F00A         	goto	i2u285_41
  7101  0015D8  EFF0  F00A         	goto	i2u285_40
  7102  0015DC                     i2u285_41:
  7103  0015DC  EF05  F00B         	goto	i2l3241
  7104  0015E0                     i2u285_40:
  7105  0015E0                     
  7106                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  7107  0015E0  0E00               	movlw	low _eusart1RxStatusBuffer
  7108  0015E2  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  7109  0015E4  6ED9               	movwf	fsr2l,c
  7110  0015E6  6ADA               	clrf	fsr2h,c
  7111  0015E8  0E01               	movlw	high _eusart1RxStatusBuffer
  7112  0015EA  22DA               	addwfc	fsr2h,f,c
  7113  0015EC  0101               	movlb	1	; () banked
  7114  0015EE  84DF               	bsf	indf2,2,c
  7115  0015F0                     
  7116                           ; BSR set to: 1
  7117                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  7118  0015F0  D802               	call	i2u286_48
  7119  0015F2  EF05  F00B         	goto	i2u286_49
  7120  0015F6                     i2u286_48:
  7121  0015F6  0005               	push	
  7122  0015F8  6EFA               	movwf	pclath,c
  7123  0015FA  0100               	movlb	0	; () banked
  7124  0015FC  5170               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  7125  0015FE  6EFD               	movwf	tosl,c
  7126  001600  5171               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  7127  001602  6EFE               	movwf	tosh,c
  7128  001604  6AFF               	clrf	tosu,c
  7129  001606  50FA               	movf	pclath,w,c
  7130  001608  0012               	return		;indir
  7131  00160A                     i2u286_49:
  7132  00160A                     i2l3241:
  7133                           
  7134                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  7135  00160A  0E00               	movlw	low _eusart1RxStatusBuffer
  7136  00160C  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  7137  00160E  6ED9               	movwf	fsr2l,c
  7138  001610  6ADA               	clrf	fsr2h,c
  7139  001612  0E01               	movlw	high _eusart1RxStatusBuffer
  7140  001614  22DA               	addwfc	fsr2h,f,c
  7141  001616  50DF               	movf	indf2,w,c
  7142  001618  B4D8               	btfsc	status,2,c
  7143  00161A  EF11  F00B         	goto	i2u287_41
  7144  00161E  EF13  F00B         	goto	i2u287_40
  7145  001622                     i2u287_41:
  7146  001622  EF22  F00B         	goto	i2l3245
  7147  001626                     i2u287_40:
  7148  001626                     
  7149                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  7150  001626  D802               	call	i2u288_48
  7151  001628  EF20  F00B         	goto	i2u288_49
  7152  00162C                     i2u288_48:
  7153  00162C  0005               	push	
  7154  00162E  6EFA               	movwf	pclath,c
  7155  001630  0100               	movlb	0	; () banked
  7156  001632  516E               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  7157  001634  6EFD               	movwf	tosl,c
  7158  001636  516F               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  7159  001638  6EFE               	movwf	tosh,c
  7160  00163A  6AFF               	clrf	tosu,c
  7161  00163C  50FA               	movf	pclath,w,c
  7162  00163E  0012               	return		;indir
  7163  001640                     i2u288_49:
  7164                           
  7165                           ;mcc_generated_files/eusart1.c: 242:     } else {
  7166  001640  EF24  F00B         	goto	i2l177
  7167  001644                     i2l3245:
  7168                           
  7169                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  7170  001644  ECE1  F00D         	call	_EUSART1_RxDataHandler	;wreg free
  7171  001648                     i2l177:
  7172  001648  0012               	return		;funcret
  7173  00164A                     __end_of_EUSART1_Receive_ISR:
  7174                           	callstack 0
  7175                           
  7176 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7177 ;; Defined at:
  7178 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;		None
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		None
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;Total ram usage:        0 bytes
  7197 ;; Hardware stack levels used: 1
  7198 ;; This function calls:
  7199 ;;		Nothing
  7200 ;; This function is called by:
  7201 ;;		_EUSART1_Initialize
  7202 ;;		_EUSART1_Receive_ISR
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text40
  7207  001CD2                     __ptext40:
  7208                           	callstack 0
  7209  001CD2                     _EUSART1_DefaultOverrunErrorHandler:
  7210                           	callstack 18
  7211  001CD2                     
  7212                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  7213  001CD2  98AB               	bcf	171,4,c	;volatile
  7214                           
  7215                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  7216  001CD4  88AB               	bsf	171,4,c	;volatile
  7217  001CD6  0012               	return		;funcret
  7218  001CD8                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7219                           	callstack 0
  7220                           
  7221 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7222 ;; Defined at:
  7223 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;		None
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		None
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7241 ;;Total ram usage:        0 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; This function calls:
  7244 ;;		Nothing
  7245 ;; This function is called by:
  7246 ;;		_EUSART1_Initialize
  7247 ;;		_EUSART1_Receive_ISR
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text41
  7252  001CE2                     __ptext41:
  7253                           	callstack 0
  7254  001CE2                     _EUSART1_DefaultFramingErrorHandler:
  7255                           	callstack 18
  7256  001CE2  0012               	return		;funcret
  7257  001CE4                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7258                           	callstack 0
  7259                           
  7260 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7261 ;; Defined at:
  7262 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;		None
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;		None
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  1    wreg      void 
  7269 ;; Registers used:
  7270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;Total ram usage:        0 bytes
  7281 ;; Hardware stack levels used: 1
  7282 ;; Hardware stack levels required when called: 1
  7283 ;; This function calls:
  7284 ;;		_EUSART1_RxDataHandler
  7285 ;; This function is called by:
  7286 ;;		_EUSART1_Initialize
  7287 ;;		_EUSART1_Receive_ISR
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text42
  7292  001CD8                     __ptext42:
  7293                           	callstack 0
  7294  001CD8                     _EUSART1_DefaultErrorHandler:
  7295                           	callstack 17
  7296  001CD8                     
  7297                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  7298  001CD8  ECE1  F00D         	call	_EUSART1_RxDataHandler	;wreg free
  7299  001CDC  0012               	return		;funcret
  7300  001CDE                     __end_of_EUSART1_DefaultErrorHandler:
  7301                           	callstack 0
  7302                           
  7303 ;; *************** function _EUSART1_RxDataHandler *****************
  7304 ;; Defined at:
  7305 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;		None
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;		None
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  1    wreg      void 
  7312 ;; Registers used:
  7313 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;Total ram usage:        0 bytes
  7324 ;; Hardware stack levels used: 1
  7325 ;; This function calls:
  7326 ;;		Nothing
  7327 ;; This function is called by:
  7328 ;;		_EUSART1_Receive_ISR
  7329 ;;		_EUSART1_DefaultErrorHandler
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text43
  7334  001BC2                     __ptext43:
  7335                           	callstack 0
  7336  001BC2                     _EUSART1_RxDataHandler:
  7337                           	callstack 18
  7338  001BC2                     
  7339                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  7340  001BC2  0E00               	movlw	low _eusart1RxBuffer
  7341  001BC4  245A               	addwf	_eusart1RxHead^0,w,c	;volatile
  7342  001BC6  6ED9               	movwf	fsr2l,c
  7343  001BC8  6ADA               	clrf	fsr2h,c
  7344  001BCA  0E02               	movlw	high _eusart1RxBuffer
  7345  001BCC  22DA               	addwfc	fsr2h,f,c
  7346  001BCE  CFAE FFDF          	movff	4014,indf2	;volatile
  7347  001BD2  2A5A               	incf	_eusart1RxHead^0,f,c	;volatile
  7348  001BD4                     
  7349                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7350  001BD4  0E3F               	movlw	63
  7351  001BD6  645A               	cpfsgt	_eusart1RxHead^0,c	;volatile
  7352  001BD8  EFF0  F00D         	goto	i2u276_41
  7353  001BDC  EFF2  F00D         	goto	i2u276_40
  7354  001BE0                     i2u276_41:
  7355  001BE0  EFF4  F00D         	goto	i2l3131
  7356  001BE4                     i2u276_40:
  7357  001BE4                     
  7358                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  7359  001BE4  0E00               	movlw	0
  7360  001BE6  6E5A               	movwf	_eusart1RxHead^0,c	;volatile
  7361  001BE8                     i2l3131:
  7362                           
  7363                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  7364  001BE8  0100               	movlb	0	; () banked
  7365  001BEA  2B7C               	incf	_eusart1RxCount& (0+255),f,b	;volatile
  7366  001BEC                     
  7367                           ; BSR set to: 0
  7368  001BEC  0012               	return		;funcret
  7369  001BEE                     __end_of_EUSART1_RxDataHandler:
  7370                           	callstack 0
  7371                           
  7372                           	psect	text44
  7373  000000                     __ptext44:
  7374                           	callstack 0
  7375  000000                     
  7376                           	psect	rparam
  7377  0000                     
  7378                           	psect	temp
  7379  00005B                     btemp:
  7380                           	callstack 0
  7381  00005B                     	ds	1
  7382  0000                     int$flags	set	btemp
  7383  0000                     wtemp8	set	btemp+1
  7384  0000                     ttemp5	set	btemp+1
  7385  0000                     ttemp6	set	btemp+4
  7386  0000                     ttemp7	set	btemp+8
  7387                           
  7388                           	psect	idloc
  7389                           
  7390                           ;Config register IDLOC0 @ 0x200000
  7391                           ;	unspecified, using default values
  7392  200000                     	org	2097152
  7393  200000  FF                 	db	255
  7394                           
  7395                           ;Config register IDLOC1 @ 0x200001
  7396                           ;	unspecified, using default values
  7397  200001                     	org	2097153
  7398  200001  FF                 	db	255
  7399                           
  7400                           ;Config register IDLOC2 @ 0x200002
  7401                           ;	unspecified, using default values
  7402  200002                     	org	2097154
  7403  200002  FF                 	db	255
  7404                           
  7405                           ;Config register IDLOC3 @ 0x200003
  7406                           ;	unspecified, using default values
  7407  200003                     	org	2097155
  7408  200003  FF                 	db	255
  7409                           
  7410                           ;Config register IDLOC4 @ 0x200004
  7411                           ;	unspecified, using default values
  7412  200004                     	org	2097156
  7413  200004  FF                 	db	255
  7414                           
  7415                           ;Config register IDLOC5 @ 0x200005
  7416                           ;	unspecified, using default values
  7417  200005                     	org	2097157
  7418  200005  FF                 	db	255
  7419                           
  7420                           ;Config register IDLOC6 @ 0x200006
  7421                           ;	unspecified, using default values
  7422  200006                     	org	2097158
  7423  200006  FF                 	db	255
  7424                           
  7425                           ;Config register IDLOC7 @ 0x200007
  7426                           ;	unspecified, using default values
  7427  200007                     	org	2097159
  7428  200007  FF                 	db	255
  7429                           
  7430                           	psect	config
  7431                           
  7432                           ; Padding undefined space
  7433  300000                     	org	3145728
  7434  300000  FF                 	db	255
  7435                           
  7436                           ;Config register CONFIG1H @ 0x300001
  7437                           ;	Oscillator Selection bits
  7438                           ;	FOSC = INTIO67, Internal oscillator block
  7439                           ;	4X PLL Enable
  7440                           ;	PLLCFG = OFF, Oscillator used directly
  7441                           ;	Primary clock enable bit
  7442                           ;	PRICLKEN = ON, Primary clock enabled
  7443                           ;	Fail-Safe Clock Monitor Enable bit
  7444                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7445                           ;	Internal/External Oscillator Switchover bit
  7446                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7447  300001                     	org	3145729
  7448  300001  28                 	db	40
  7449                           
  7450                           ;Config register CONFIG2L @ 0x300002
  7451                           ;	Power-up Timer Enable bit
  7452                           ;	PWRTEN = OFF, Power up timer disabled
  7453                           ;	Brown-out Reset Enable bits
  7454                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7455                           ;	Brown Out Reset Voltage bits
  7456                           ;	BORV = 190, VBOR set to 1.90 V nominal
  7457  300002                     	org	3145730
  7458  300002  1F                 	db	31
  7459                           
  7460                           ;Config register CONFIG2H @ 0x300003
  7461                           ;	Watchdog Timer Enable bits
  7462                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  7463                           ;	Watchdog Timer Postscale Select bits
  7464                           ;	WDTPS = 32768, 1:32768
  7465  300003                     	org	3145731
  7466  300003  3C                 	db	60
  7467                           
  7468                           ; Padding undefined space
  7469  300004                     	org	3145732
  7470  300004  FF                 	db	255
  7471                           
  7472                           ;Config register CONFIG3H @ 0x300005
  7473                           ;	CCP2 MUX bit
  7474                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  7475                           ;	PORTB A/D Enable bit
  7476                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7477                           ;	P3A/CCP3 Mux bit
  7478                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  7479                           ;	HFINTOSC Fast Start-up
  7480                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  7481                           ;	Timer3 Clock input mux bit
  7482                           ;	T3CMX = PORTC0, T3CKI is on RC0
  7483                           ;	ECCP2 B output mux bit
  7484                           ;	P2BMX = PORTB5, P2B is on RB5
  7485                           ;	MCLR Pin Enable bit
  7486                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  7487  300005                     	org	3145733
  7488  300005  BF                 	db	191
  7489                           
  7490                           ;Config register CONFIG4L @ 0x300006
  7491                           ;	Stack Full/Underflow Reset Enable bit
  7492                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7493                           ;	Single-Supply ICSP Enable bit
  7494                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  7495                           ;	Extended Instruction Set Enable bit
  7496                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7497                           ;	Background Debug
  7498                           ;	DEBUG = OFF, Disabled
  7499  300006                     	org	3145734
  7500  300006  85                 	db	133
  7501                           
  7502                           ; Padding undefined space
  7503  300007                     	org	3145735
  7504  300007  FF                 	db	255
  7505                           
  7506                           ;Config register CONFIG5L @ 0x300008
  7507                           ;	Code Protection Block 0
  7508                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7509                           ;	Code Protection Block 1
  7510                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7511                           ;	Code Protection Block 2
  7512                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7513                           ;	Code Protection Block 3
  7514                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7515  300008                     	org	3145736
  7516  300008  0F                 	db	15
  7517                           
  7518                           ;Config register CONFIG5H @ 0x300009
  7519                           ;	Boot Block Code Protection bit
  7520                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7521                           ;	Data EEPROM Code Protection bit
  7522                           ;	CPD = OFF, Data EEPROM not code-protected
  7523  300009                     	org	3145737
  7524  300009  C0                 	db	192
  7525                           
  7526                           ;Config register CONFIG6L @ 0x30000A
  7527                           ;	Write Protection Block 0
  7528                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7529                           ;	Write Protection Block 1
  7530                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7531                           ;	Write Protection Block 2
  7532                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7533                           ;	Write Protection Block 3
  7534                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7535  30000A                     	org	3145738
  7536  30000A  0F                 	db	15
  7537                           
  7538                           ;Config register CONFIG6H @ 0x30000B
  7539                           ;	Configuration Register Write Protection bit
  7540                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7541                           ;	Boot Block Write Protection bit
  7542                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7543                           ;	Data EEPROM Write Protection bit
  7544                           ;	WRTD = OFF, Data EEPROM not write-protected
  7545  30000B                     	org	3145739
  7546  30000B  E0                 	db	224
  7547                           
  7548                           ;Config register CONFIG7L @ 0x30000C
  7549                           ;	Table Read Protection Block 0
  7550                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7551                           ;	Table Read Protection Block 1
  7552                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7553                           ;	Table Read Protection Block 2
  7554                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7555                           ;	Table Read Protection Block 3
  7556                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7557  30000C                     	org	3145740
  7558  30000C  0F                 	db	15
  7559                           
  7560                           ;Config register CONFIG7H @ 0x30000D
  7561                           ;	Boot Block Table Read Protection bit
  7562                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7563  30000D                     	org	3145741
  7564  30000D  40                 	db	64
  7565                           tosu	equ	0xFFF
  7566                           tosh	equ	0xFFE
  7567                           tosl	equ	0xFFD
  7568                           stkptr	equ	0xFFC
  7569                           pclatu	equ	0xFFB
  7570                           pclath	equ	0xFFA
  7571                           pcl	equ	0xFF9
  7572                           tblptru	equ	0xFF8
  7573                           tblptrh	equ	0xFF7
  7574                           tblptrl	equ	0xFF6
  7575                           tablat	equ	0xFF5
  7576                           prodh	equ	0xFF4
  7577                           prodl	equ	0xFF3
  7578                           indf0	equ	0xFEF
  7579                           postinc0	equ	0xFEE
  7580                           postdec0	equ	0xFED
  7581                           preinc0	equ	0xFEC
  7582                           plusw0	equ	0xFEB
  7583                           fsr0h	equ	0xFEA
  7584                           fsr0l	equ	0xFE9
  7585                           wreg	equ	0xFE8
  7586                           indf1	equ	0xFE7
  7587                           postinc1	equ	0xFE6
  7588                           postdec1	equ	0xFE5
  7589                           preinc1	equ	0xFE4
  7590                           plusw1	equ	0xFE3
  7591                           fsr1h	equ	0xFE2
  7592                           fsr1l	equ	0xFE1
  7593                           bsr	equ	0xFE0
  7594                           indf2	equ	0xFDF
  7595                           postinc2	equ	0xFDE
  7596                           postdec2	equ	0xFDD
  7597                           preinc2	equ	0xFDC
  7598                           plusw2	equ	0xFDB
  7599                           fsr2h	equ	0xFDA
  7600                           fsr2l	equ	0xFD9
  7601                           status	equ	0xFD8

Data Sizes:
    Strings     484
    Constant    65
    Data        111
    BSS         365
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     53     155
    BANK1           256      0     242
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_sprintf(COMRAM[2]), 
		 -> STR_60(CODE[9]), STR_58(CODE[9]), STR_56(CODE[8]), STR_54(CODE[9]), 
		 -> STR_52(CODE[8]), STR_50(CODE[9]), STR_48(CODE[8]), STR_46(CODE[3]), 
		 -> STR_44(CODE[10]), STR_42(CODE[10]), STR_40(CODE[9]), STR_38(CODE[11]), 
		 -> STR_36(CODE[8]), STR_34(CODE[6]), STR_32(CODE[6]), STR_30(CODE[5]), 
		 -> STR_28(CODE[7]), STR_26(CODE[7]), STR_24(CODE[9]), STR_22(CODE[8]), 
		 -> day_string(BANK0[20]), rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), temperature_read(BANK0[5]), 
		 -> getReading@outH(COMRAM[5]), getReading@rh_code(COMRAM[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_sprintf(COMRAM[2]), 
		 -> STR_60(CODE[9]), STR_58(CODE[9]), STR_56(CODE[8]), STR_54(CODE[9]), 
		 -> STR_52(CODE[8]), STR_50(CODE[9]), STR_48(CODE[8]), STR_46(CODE[3]), 
		 -> STR_44(CODE[10]), STR_42(CODE[10]), STR_40(CODE[9]), STR_38(CODE[11]), 
		 -> STR_36(CODE[8]), STR_34(CODE[6]), STR_32(CODE[6]), STR_30(CODE[5]), 
		 -> STR_28(CODE[7]), STR_26(CODE[7]), STR_24(CODE[9]), STR_22(CODE[8]), 
		 -> day_string(BANK0[20]), rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), temperature_read(BANK0[5]), 
		 -> getReading@outH(COMRAM[5]), getReading@rh_code(COMRAM[4]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_20(CODE[38]), STR_18(CODE[5]), STR_16(CODE[5]), STR_14(CODE[17]), 
		 -> STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[33]), 
		 -> STR_9(CODE[18]), STR_8(CODE[16]), STR_7(CODE[39]), STR_6(CODE[17]), 
		 -> STR_5(CODE[26]), STR_4(CODE[31]), STR_3(CODE[23]), STR_2(CODE[18]), 
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> month_string(BANK0[20]), day_string(BANK0[20]), rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), 
		 -> getReading@outH(COMRAM[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), 
		 -> STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), STR_29(CODE[3]), 
		 -> STR_27(CODE[3]), STR_25(CODE[3]), STR_23(CODE[3]), STR_21(CODE[3]), 
		 -> STR_20(CODE[38]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[14]), 
		 -> STR_16(CODE[5]), STR_15(CODE[15]), STR_14(CODE[17]), STR_13(CODE[15]), 
		 -> STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[33]), STR_9(CODE[18]), 
		 -> STR_8(CODE[16]), STR_7(CODE[39]), STR_6(CODE[17]), STR_5(CODE[26]), 
		 -> STR_4(CODE[31]), STR_3(CODE[23]), STR_2(CODE[18]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 39
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), 
		 -> STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), STR_29(CODE[3]), 
		 -> STR_27(CODE[3]), STR_25(CODE[3]), STR_23(CODE[3]), STR_21(CODE[3]), 
		 -> STR_20(CODE[38]), STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[14]), 
		 -> STR_16(CODE[5]), STR_15(CODE[15]), STR_14(CODE[17]), STR_13(CODE[15]), 
		 -> STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[33]), STR_9(CODE[18]), 
		 -> STR_8(CODE[16]), STR_7(CODE[39]), STR_6(CODE[17]), STR_5(CODE[26]), 
		 -> STR_4(CODE[31]), STR_3(CODE[23]), STR_2(CODE[18]), STR_1(CODE[16]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(COMRAM[2]), STR_60(CODE[9]), STR_58(CODE[9]), 
		 -> STR_56(CODE[8]), STR_54(CODE[9]), STR_52(CODE[8]), STR_50(CODE[9]), 
		 -> STR_48(CODE[8]), STR_46(CODE[3]), STR_44(CODE[10]), STR_42(CODE[10]), 
		 -> STR_40(CODE[9]), STR_38(CODE[11]), STR_36(CODE[8]), STR_34(CODE[6]), 
		 -> STR_32(CODE[6]), STR_30(CODE[5]), STR_28(CODE[7]), STR_26(CODE[7]), 
		 -> STR_24(CODE[9]), STR_22(CODE[8]), day_string(BANK0[20]), rtc_get_time@mo(COMRAM[20]), 
		 -> getReading@outT(COMRAM[5]), temperature_read(BANK0[5]), getReading@outH(COMRAM[5]), getReading@rh_code(COMRAM[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(COMRAM[2]), STR_60(CODE[9]), STR_58(CODE[9]), 
		 -> STR_56(CODE[8]), STR_54(CODE[9]), STR_52(CODE[8]), STR_50(CODE[9]), 
		 -> STR_48(CODE[8]), STR_46(CODE[3]), STR_44(CODE[10]), STR_42(CODE[10]), 
		 -> STR_40(CODE[9]), STR_38(CODE[11]), STR_36(CODE[8]), STR_34(CODE[6]), 
		 -> STR_32(CODE[6]), STR_30(CODE[5]), STR_28(CODE[7]), STR_26(CODE[7]), 
		 -> STR_24(CODE[9]), STR_22(CODE[8]), day_string(BANK0[20]), rtc_get_time@mo(COMRAM[20]), 
		 -> getReading@outT(COMRAM[5]), temperature_read(BANK0[5]), getReading@outH(COMRAM[5]), getReading@rh_code(COMRAM[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_60(CODE[9]), 
		 -> STR_58(CODE[9]), STR_56(CODE[8]), STR_54(CODE[9]), STR_52(CODE[8]), 
		 -> STR_50(CODE[9]), STR_48(CODE[8]), STR_46(CODE[3]), STR_44(CODE[10]), 
		 -> STR_42(CODE[10]), STR_40(CODE[9]), STR_38(CODE[11]), STR_36(CODE[8]), 
		 -> STR_34(CODE[6]), STR_32(CODE[6]), STR_30(CODE[5]), STR_28(CODE[7]), 
		 -> STR_26(CODE[7]), STR_24(CODE[9]), STR_22(CODE[8]), day_string(BANK0[20]), 
		 -> rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), temperature_read(BANK0[5]), getReading@outH(COMRAM[5]), 
		 -> getReading@rh_code(COMRAM[4]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    S1741_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> month_string(BANK0[20]), day_string(BANK0[20]), rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), 
		 -> getReading@outH(COMRAM[5]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> month_string(BANK0[20]), day_string(BANK0[20]), rtc_get_time@mo(COMRAM[20]), getReading@outT(COMRAM[5]), 
		 -> getReading@outH(COMRAM[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_59(CODE[3]), STR_57(CODE[3]), STR_55(CODE[3]), STR_53(CODE[3]), 
		 -> STR_51(CODE[3]), STR_49(CODE[3]), STR_47(CODE[3]), STR_45(CODE[3]), 
		 -> STR_43(CODE[3]), STR_41(CODE[3]), STR_39(CODE[3]), STR_37(CODE[3]), 
		 -> STR_35(CODE[3]), STR_33(CODE[3]), STR_31(CODE[3]), STR_29(CODE[3]), 
		 -> STR_27(CODE[3]), STR_25(CODE[3]), STR_23(CODE[3]), STR_21(CODE[3]), 
		 -> STR_20(CODE[38]), STR_19(CODE[5]), rtc_get_time@mo(COMRAM[20]), STR_18(CODE[5]), 
		 -> STR_17(CODE[14]), STR_16(CODE[5]), STR_15(CODE[15]), STR_14(CODE[17]), 
		 -> STR_13(CODE[15]), STR_12(CODE[14]), STR_11(CODE[13]), STR_10(CODE[33]), 
		 -> STR_9(CODE[18]), STR_8(CODE[16]), STR_7(CODE[39]), STR_6(CODE[17]), 
		 -> STR_5(CODE[26]), STR_4(CODE[31]), STR_3(CODE[23]), STR_2(CODE[18]), 
		 -> STR_1(CODE[16]), 

    i2c_write_serial@data	PTR unsigned char  size(2) Largest target is 14
		 -> hello_string(BANK1[14]), display_init(BANK0[4]), rtc_test(BANK0[1]), rtc_first_run@rtc_clock_set(COMRAM[11]), 
		 -> updateTemperature@output(COMRAM[4]), minus(CODE[2]), temp_pos(CODE[2]), humid_pos(CODE[2]), 
		 -> updateMoist@output(COMRAM[3]), getReading@outT(COMRAM[5]), first_line(BANK0[2]), adafruit_temp_command(CODE[1]), 
		 -> getReading@outH(COMRAM[5]), second_line(BANK0[2]), adafruit_humid_command(CODE[1]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _i2c_write_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_i2c_write_serial
    _i2c_write_serial->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   35824
                                             51 BANK0      2     2      0
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                           _i2c_init
                   _i2c_write_serial
 ---------------------------------------------------------------------------------
 (1) _i2c_write_serial                                     8     5      3   34844
                                             43 BANK0      8     5      3
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              18     4     14   31192
                                             84 COMRAM     2     2      0
                                             29 BANK0     14     0     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   29557
                                             82 COMRAM     2     2      0
                                             23 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           45    39      6   28772
                                             72 COMRAM    10     4      6
                                              0 BANK0     23    23      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8153
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             10 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    3365
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8389
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6123
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2710
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    2684
                                             15 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    2210
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1905
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     712
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _i2c_init
   _i2c_write_serial
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
           _stoa
             _fputc
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     267      12        0.0%
DATA                 0      0     267       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 12 10:58:36 2021

                      _eusart1TxBufferRemaining 007D                                              l22 1C48  
                                            l25 1C56                                              l19 1C94  
                                            l52 1BC0                             ___wmul@multiplicand 0007  
                                           l202 1CA8                                             l130 17D2  
                                           l220 1CE0                                             l300 128A  
                                           l205 1CB2                                             l301 128E  
                                           l310 12B4                                             l312 12F2  
                                           l154 1906                                             l155 191C  
                                           l307 129C                                             l164 1C9E  
                                           l332 1326                                             l308 1316  
                                           l325 1318                                             l158 1948  
                                           l193 1CC6                                             l196 1CBC  
                                           l284 1C6E                                             l541 1C3A  
                                           l293 127A                                             l294 127C  
                                           l199 1CD0                                             l287 1254  
                                           l535 16E0                                             l536 16E0  
                                           l655 10E2                                             l668 1246  
                                           _abs 1A72                                             _pad 14C8  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            ?_abs 0017  
                                          l1301 150C                                            l1240 0DB8  
                                          l1320 13D0                                            l1304 154E  
                                          l1401 0BBE                                            l1322 13FC  
                                          l1306 1588                                            l1330 06B2  
                                          l1243 0DC0                                            l1317 138E  
                                          l1246 1B94                                            l1254 199A  
                                          l1510 1B24                                            l1415 01AA  
                                          l1328 06AA                                            l1504 1894  
                                          l3121 1CC8                                            l3113 1CAA  
                                          l1441 182E                                            l1442 1836  
                                          l3115 1CA0                                            l1371 0F5A  
                                          l1355 0E42                                            l1348 08E8  
                                          l1452 1AEC                                            l1428 0608  
                                          l3117 1CBE                                            l3141 1CDE  
                                          l1357 0E4A                                            l1446 1AA8  
                                          l1366 0F0A                                            l3119 1CB4  
                                          l3151 175E                                            l3143 1B96  
                                          l1367 0F52                                            l1376 0922  
                                          l3161 1782                                            l3153 1760  
                                          l3145 1BA2                                            l4201 191E  
                                          l1473 14C6                                            l1449 1AB0  
                                          l1481 1A2E                                            l1385 09C0  
                                          l1458 1B5C                                            l1378 092A  
                                          l3171 17A6                                            l3163 1786  
                                          l3155 176C                                            l3147 1BBE  
                                          l4203 192E                                            l4211 1946  
                                          l3173 17D0                                            l3165 178A  
                                          l3157 177A                                            l3149 1C3C  
                                          l4205 1930                                            l4213 1C98  
                                          l4221 142C                                            l4301 10E4  
                                          l1494 19EA                                            l3167 178E  
                                          l3159 177E                                            l3191 1C90  
                                          l3247 1C58                                            l4207 1940  
                                          l4223 144A                                            l4215 13FE  
                                          l4311 1128                                            l4303 10E8  
                                          l4231 19F8                                            l1399 0B5C  
                                          l5031 1656                                            l1488 1C14  
                                          l3169 179A                                            l3185 1C84  
                                          l3249 1C62                                            l4401 0BD8  
                                          l4209 1944                                            l4225 1480  
                                          l4217 1410                                            l4321 1190  
                                          l4313 1148                                            l4305 10F6  
                                          l4233 1A0A                                            l4241 19AC  
                                          l5041 16B2                                            l5033 166E  
                                          l5025 164A                                            l3187 1C88  
                                          l4251 1C16                                            l4403 0BDC  
                                          l4219 1422                                            l4331 1206  
                                          l4323 11BE                                            l4315 1166  
                                          l4307 1116                                            l4235 1A0E  
                                          l4243 19DE                                            l1499 188C  
                                          l5115 016A                                            l5043 16C6  
                                          l5035 1686                                            l5027 1652  
                                          l3189 1C8C                                            l4253 1C32  
                                          l4341 1962                                            l4421 0CD4  
                                          l5117 0CBE                                            l4413 0C64  
                                          l4405 0C0E                                            l4261 0F6E  
                                          l4333 1226                                            l4325 11DE  
                                          l4317 116E                                            l4309 111A  
                                          l4229 19EC                                            l4237 199C  
                                          l4501 07EA                                            l5037 168A  
                                          l5029 1654                                            l4343 1990  
                                          l4431 0D8A                                            l4415 0C7A  
                                          l4407 0C5A                                            l4271 0FC4  
                                          l4263 0F8E                                            l4327 11F0  
                                          l4319 1182                                            l4239 19A8  
                                          l4503 0804                                            l4511 0864  
                                          l4247 1AEE                                            l5039 169E  
                                          l4345 1994                                            l4337 194A  
                                          l4433 0D9C                                            l4425 0D24  
                                          l4417 0C82                                            l4409 0C5E  
                                          l4441 133C                                            l4281 1018  
                                          l4273 0FD0                                            l4265 0F92  
                                          l4257 0F5C                                            l4329 11F6  
                                          l4361 1504                                            l4353 14C8  
                                          l4521 08A8                                            l4513 0876  
                                          l4505 0822                                            l4601 0A06  
                                          l4339 194E                                            l4419 0C8A  
                                          l4195 18F4                                            l4443 1348  
                                          l4291 108C                                            l4283 102A  
                                          l4275 0FEE                                            l4267 0FA0  
                                          l4259 0F60                                            l4371 1570  
                                          l4363 1518                                            l4355 14D6  
                                          l4523 08B0                                            l4515 0884  
                                          l4507 083C                                            l4531 0DD4  
                                          l4611 0A76                                            l4349 1B5E  
                                          l4429 0D78                                            l4197 18F4  
                                          l4461 13DE                                            l4453 1386  
                                          l4445 1354                                            l4285 1058  
                                          l4277 0FF6                                            l4293 1092  
                                          l4269 0FC0                                            l4365 152C  
                                          l4357 14EA                                            l4517 088A  
                                          l4525 08C0                                            l4509 0856  
                                          l4541 0E12                                            l4533 0DDC  
                                          l4621 0B1A                                            l4613 0A7C  
                                          l4605 0A40                                            ?_pad 0017  
                                          l4199 1914                                            l4463 13F0  
                                          l4455 139A                                            l4447 1362  
                                          l4439 1328                                            l4295 10A2  
                                          l4287 1078                                            l4279 100A  
                                          l4375 1A72                                            l4367 1530  
                                          l4359 14F8                                            l4519 089C  
                                          l4471 0652                                            l4551 0E84  
                                          l4543 0E20                                            l4535 0DEE  
                                          l4383 1AB2                                            l4391 186E  
                                          l4631 0B80                                            l4623 0B34  
                                          l4615 0A82                                            l4607 0A52  
                                          l4703 0330                                            l4457 13AE  
                                          l4449 1374                                            l4297 10C2  
                                          l4289 107A                                            l4377 1A8C  
                                          l4369 155C                                            l4481 06BA  
                                          l4473 0672                                            l4561 0EEC  
                                          l4553 0EA2                                            l4537 0DF6  
                                          l4529 0DC2                                            l4393 1880  
                                          l4633 0B96                                            l4625 0B4E  
                                          l4609 0A66                                            l4617 0AE0  
                                          l4721 0478                                            l4713 03FC  
                                          l4705 0356                                            l4641 00E8  
                                          l4801 1300                                            l4459 13B2  
                                          l4491 06F2                                            l4483 06CC  
                                          l4475 0682                                            l4467 060A  
                                          l4555 0EAE                                            l4547 0E6C  
                                          l4539 0E0A                                            l4379 1B26  
                                          l4387 1838                                            l4627 0B6A  
                                          l4619 0AFC                                            l4571 08EA  
                                          l4731 0526                                            l4723 049E  
                                          l4715 0422                                            l4707 037C  
                                          l4651 011E                                            l4643 00FA  
                                          l4803 1304                                            l4397 0BC0  
                                          l4493 06F8                                            l4485 06DA  
                                          l4477 0684                                            l4469 062A  
                                          l4565 0F1C                                            l4557 0EE4  
                                          l4549 0E80                                            l4629 0B70  
                                          l4581 0948                                            l4573 08FA  
                                          l4741 05AA                                            l4725 04C4  
                                          l4717 0458                                            l4709 03C4  
                                          l4645 00FE                                            l4637 00B4  
                                          l4399 0BD4                                            l4495 077A  
                                          l4487 06E0                                            l4479 069E  
                                          l4567 0F30                                            l4559 0EE8  
                                          l4591 0988                                            l4583 0968  
                                          l4575 08FC                                            l4727 04DC  
                                          l4735 0562                                            l4671 0142  
                                          l4663 0130                                            l4655 0124  
                                          l4647 010A                                            l4639 00DA  
                                          l4751 05D0                                            l4497 0780  
                                          l4489 06E8                                            l4569 0F34  
                                          l4593 09A4                                            l4585 0970  
                                          l4577 0916                                            l4753 05F6  
                                          l4737 0588                                            l4745 05B6  
                                          l4729 04EA                                            l4681 0216  
                                          l4649 010C                                            l4673 0198  
                                          l4499 0786                                            l4595 09B4  
                                          l4587 097A                                            l4579 0940  
                                          l4747 05C4                                            l4739 0596  
                                          l4683 0224                                            l4675 01B8  
                                          l4667 0136                                            l4659 012A  
                                          l4771 17DC                                            l4589 0980  
                                          l4693 02AA                                            l4685 0232  
                                          l4677 01BA                                            l4773 17EA  
                                          l4599 09F4                                            l4687 0252  
                                          l4695 02BC                                            l4679 01E0  
                                          l4775 1810                                            l4783 124C  
                                          l4697 02E2                                            l4689 0260  
                                          l4769 17D4                                            l4777 1BEE  
                                          l4793 12AA                                            l4785 1262  
                                          l4699 0314                                            l4779 1BF6  
                                          l4795 12C2                                            STR_1 FEFB  
                                          STR_2 FED8                                            STR_3 FEC1  
                                          STR_4 FE88                                            STR_5 FEA7  
                                          STR_6 FEEA                                            STR_7 FE1A  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u5000 0E3E  
                                          u5001 0E3A                                            u5010 0E68  
                                          u5011 0E64                                            u4300 1480  
                                          u5020 0EA2                                            u5100 09A4  
                                          u4301 147C                                            u5021 0E9E  
                                          u5101 09A0                                            u4310 1A2E  
                                          u5030 0ED0                                            u5110 09EE  
                                          u4311 1A2A                                            u5111 09E8  
                                          u4240 1906                                            u4400 1018  
                                          u4320 19CE                                            u5040 0F0A  
                                          u5200 0B34                                            u5120 09F0  
                                          u4241 1902                                            u4401 1014  
                                          u5041 0F06                                            u5201 0B30  
                                          u4250 1914                                            u4410 1058  
                                          u4330 19DE                                            u5050 0F18  
                                          u5210 0B4E                                            u5130 0A06  
                                          u4251 1910                                            u4411 1054  
                                          u4331 19DA                                            u5051 0F14  
                                          u5211 0B4A                                            u5131 0A02  
                                          u4500 1990                                            u4260 1940  
                                          u4420 10A2                                            u5060 0F52  
                                          u4340 1B1E                                            u5220 0B5C  
                                          u5140 0A3A                                            u5300 02A4  
                                          u4501 198C                                            u4261 193C  
                                          u4421 109E                                            u5061 0F4E  
                                          u5037 0EC6                                            u4341 1B18  
                                          u5221 0B58                                            u5141 0A34  
                                          u4510 1B8E                                            u4270 1410  
                                          u4430 10F6                                            u4350 1B20  
                                          u5230 0B6A                                            u5150 0A3C  
                                          u5070 08FA                                            u5310 02BC  
                                          u4511 1B88                                            u4271 140C  
                                          u4431 10F2                                            u4327 19C4  
                                          u5231 0B66                                            u5071 08F6  
                                          u5311 02B8                                            u4520 1B90  
                                          u4280 1422                                            u4360 0F6E  
                                          u4440 1128                                            u4600 1AE6  
                                          u5160 0A52                                            u5080 0916  
                                          u5320 02E2                                            u5240 00DA  
                                          u5400 1262                                            u4281 141E  
                                          u4361 0F6A                                            u4441 1124  
                                          u4601 1AE0                                            u5161 0A4E  
                                          u5081 0912                                            u5321 02DE  
                                          u5241 00D6                                            u5401 125E  
                                          u4290 144A                                            u4370 0FA0  
                                          u4450 1166                                            u4530 14D6  
                                          u4610 1AE8                                            u5170 0ABA  
                                          u5090 0940                                            u5330 0356  
                                          u5250 01AA                                            u5410 127A  
                                          u4291 1446                                            u4371 0F9C  
                                          u4451 1162                                            u4531 14D2  
                                          u5091 093C                                            u5331 0352  
                                          u5251 01A6                                            u5411 1276  
                                          u2780 1C56                                            u4700 0CAC  
                                          u4460 1190                                            u4540 14F8  
                                          u4620 1868                                            u5180 0AFC  
                                          u5340 037C                                            u5260 01B8  
                                          u5420 128A                                            u2781 1C52  
                                          u4381 0FCA                                            u4461 118C  
                                          u4541 14F4                                            u4621 1862  
                                          u5181 0AF8                                            u5341 0378  
                                          u5261 01B4                                            u5421 1286  
                                          u4710 0D0A                                            u4390 0FEE  
                                          u4470 11BE                                            u4550 154E  
                                          u4630 186A                                            u5190 0B1A  
                                          u5350 0422                                            u5270 01E0  
                                          u5430 129C                                            u4391 0FEA  
                                          u4471 11BA                                            u4551 154A  
                                          u5191 0B16                                            u5175 0AA8  
                                          u5351 041E                                            u5271 01DC  
                                          u5431 1298                                            u4720 0D4E  
                                          u4800 13D0                                            u4480 1206  
                                          u4560 155C                                            u4640 1880  
                                          u5360 049E                                            u5280 0224  
                                          u5440 12AA                                            u4801 13CC  
                                          u4481 1202                                            u4561 1558  
                                          u4641 187C                                            u5361 049A  
                                          u5281 0220                                            u5441 12A6  
                                          u4490 1962                                            u4730 0D72  
                                          u4650 0BFE                                            u4810 13DE  
                                          u4570 1A8C                                            u5370 04C4  
                                          u5290 02A2                                            u5450 12C2  
                                          u4491 195E                                            u4731 0D6C  
                                          u4707 0CA2                                            u4811 13DA  
                                          u4571 1A88                                            u5371 04C0  
                                          u5291 029C                                            u5451 12BE  
                                          u4740 0D74                                            u4660 0C0E  
                                          u4900 0822                                            u4820 063A  
                                          u4580 1B56                                            u5380 0588  
                                          u5460 12F0                                            u4717 0D00  
                                          u4661 0C0A                                            u4901 081E  
                                          u4821 0634                                            u4581 1B50  
                                          u5381 0584                                            u4750 0D8A  
                                          u4670 0C38                                            u4910 083C  
                                          u4830 063C                                            u4590 1B58  
                                          u5390 182E                                            u5470 1300  
                                          u4751 0D86                                            u4727 0D44  
                                          u4911 0838                                            u5391 182A  
                                          u5471 12FC                                            u4760 0D9C  
                                          u4680 0C5A                                            u4920 0856  
                                          u4840 0652                                            u5480 1316  
                                          u4761 0D98                                            u4681 0C56  
                                          u4657 0BF4                                            u4921 0852  
                                          u4841 064E                                            u5481 1312  
                                          u4690 0C76                                            u4770 133C  
                                          u4930 0864                                            u4850 0682  
                                          u5490 1326                                            u4691 0C72  
                                          u4771 1338                                            u4931 0860  
                                          u4851 067E                                            u5491 1322  
                                          u5467 12E6                                            u4780 1362  
                                          u4940 0876                                            u4860 069E  
                                          u4677 0C2E                                            u4781 135E  
                                          u4941 0872                                            u4861 069A  
                                          u4790 1382                                            u4950 0884  
                                          u4870 06CC                                            u4791 137E  
                                          u4951 0880                                            u4871 06C8  
                                          u4960 089C                                            u4880 06DA  
                                          u4961 0898                                            u4881 06D6  
                                          u5657 1662                                            u4890 0804  
                                          u4891 0800                                            u4971 0DCC  
                                          u5667 167A                                            u4980 0DEE  
                                          u4981 0DEA                                            u5677 16D2  
                                          u4990 0E20                                            u4991 0E1C  
                                          _WPUB 000F61                                   _EUSART1_Write 18F2  
                                          abs@a 0017                                            _dbuf 0177  
                                          _atoi 0BC0                                            _ctoa 1328  
                                          _main 164A                                            _dtoa 060A  
                                          _prec 006C                                            _nout 0068  
                                          pad@i 001E                                            pad@p 001B  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0020  
                                          fsr2l 000FD9                                            _stoa 0DC2  
                                          btemp 005B                                            _xtoa 08EA  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00B0                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                                           ??_abs 0019  
                                         ??_pad 001D                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 1C58                           _eusart1RxStatusBuffer 0100  
                               __end_of___aodiv 10E4                                           ?_atoi 000C  
                                         ?_ctoa 0010                                           ?_main 0001  
                                         ?_dtoa 0022                                 __end_of___aomod 1248  
                                         STR_10 FE67                                           STR_11 FF45  
                                         STR_12 FF37                                           STR_20 FE41  
                                         STR_21 FFFB                                           STR_13 FF0B  
                                         STR_30 FFE9                                           STR_22 FFBF  
                                         STR_15 FF1A                                           STR_16 FFEE  
                                         STR_32 FFE3                                           STR_40 FF9E  
                                         STR_24 FF95                                           STR_17 FF29  
                                         STR_34 FFDD                                           STR_26 FFD6  
                                         STR_50 FF83                                           STR_42 FF67  
                                         STR_19 FFF3                                           STR_28 FFCF  
                                         STR_36 FFC7                                           STR_52 FFB7  
                                         STR_60 FF71                                           STR_44 FF5D  
                                         STR_46 FFF8                                           STR_54 FF8C  
                                         STR_38 FF52                                           STR_48 FFAF  
                                         STR_56 FFA7                                           STR_58 FF7A  
                                         ?_stoa 0010                                           ?_xtoa 0022  
                                         i2l231 009C                                           _AElig 01C3  
                                         i2l170 1A70                                           i2l226 0062  
                                         i2l227 009C                                           i2l181 1BEC  
                                         i2l190 1CDC                                           i2l167 1A6E  
                                         i2l184 1CE2                                           i2l177 1648  
                                         i2l187 1CD6                                    vfpfcnvrt@fmt 004B  
                                  vfpfcnvrt@llu 00BA                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _Aring 0197                            _EUSART1_Transmit_ISR 1A30  
                                         _aelig 01CE                                           _debug 007A  
                             i2c_write_serial@i 00E4                                           _flags 0057  
                                         _aring 01A2                                           _error 0079  
                                         _fputc 13FE                                 __end_of_isalpha 1AEE  
                                         _fputs 19EC                                 __end_of_isdigit 1B96  
                                         _minus FE12                                           atoi@n 0019  
                                         pad@fp 0017                                           atoi@s 000C  
                                         _width 006A                                           ctoa@c 0012  
                                         _putch 1C96                                           ctoa@l 0014  
                                         ctoa@w 0016                                           dtoa@d 0024  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0036                                           dtoa@s 003A  
                                         dtoa@w 0038                                 __end_of_islower 1B26  
                               __end_of_isspace 199C                                  ?_EUSART1_Write 0001  
                               __end_of_isupper 1B5E                                           pclath 000FFA  
                                         tablat 000FF5                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 001C  
                                         stoa@l 0024                                           stoa@p 0022  
                                         stoa@s 0012                                           stoa@w 001E  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 000FD8  
                                         wtemp8 005C                                           xtoa@c 0047  
                                         xtoa@d 0024                                           xtoa@i 0045  
                                         xtoa@n 003D                                           xtoa@p 0039  
                                         xtoa@w 003B                                           xtoa@x 002C  
                               __end_of_toupper 1896           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 1CE4     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 1CE2                                    _toupper$1951 0011  
                               __initialization 16E8                                    __end_of_atoi 0DC2  
                                  __end_of_ctoa 13FE                      __end_of_EUSART1_Initialize 17D4  
                                  __end_of_main 16E8                                    __end_of_dtoa 08EA  
                                  __end_of_stoa 0F5C                                    __end_of_xtoa 0BC0  
                              __end_of_i2c_init 1C70                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 000E                                          ??_ctoa 0013  
                                        ??_main 00E5                                          ??_dtoa 002C  
                                        ??_stoa 0014                                          ??_xtoa 002D  
                                 __activetblptr 000003                           ?_EUSART1_Transmit_ISR 0001  
                                        ?_fputc 0007                                          ?_fputs 0010  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                      __end_of_i2c_write_serial 1328                                          i2l3131 1BE8  
                                        i2l3123 1BC2                                          i2l3125 1BD2  
                                        i2l3221 1A54                                          i2l3127 1BD4  
                                        i2l3231 15A8                                          i2l3223 1A64  
                                        i2l3215 1A30                                          i2l3129 1BE4  
                                        i2l3241 160A                                          i2l3233 15B8  
                                        i2l3225 1A68                                          i2l3217 1A42  
                                        i2l3243 1626                                          i2l3235 15D2  
                                        i2l3227 158A                                          i2l3219 1A52  
                                        i2l3245 1644                                          i2l3237 15E0  
                                        i2l3229 159A                                          i2l3175 1CD2  
                                        i2l3239 15F0                                          i2l3177 1CD8  
                                        i2l3521 0070                                          i2l3513 001A  
                                        i2l3523 007E                                          i2l3515 0028  
                                        i2l3517 0036                                          i2l3519 0044  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 00C4                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                  vfprintf@cfmt 0053                                       ??___aodiv 0015  
                                     ??___aomod 0015                                          ___wmul 1C16  
                            rtc_first_run@F6460 FDFD                        ?_EUSART1_SetErrorHandler 0005  
                        _adafruit_humid_command FE19                                          clear_0 172E  
                                        clear_1 173A                                          clear_2 1746  
                                        isa$std 000001                                          _oslash 01B8  
                                        _printf 1BEE                                          pad@buf 0019  
              ??_EUSART1_SetOverrunErrorHandler 0007                 ?_EUSART1_SetOverrunErrorHandler 0005  
                                        ctoa@fp 0010                                          dtoa@fp 0022  
                                        _strlen 199C                                          fputc@c 0007  
                                        fputs@c 0014                                          fputs@i 0015  
                                        fputs@s 0010                                       ??_isalpha 0007  
                                     ??_isdigit 0007                                __end_of_temp_pos FE18  
                              __end_of_rtc_addr FE11                                       ??_islower 0007  
                                  __mediumconst FDD8                                       ??_isspace 0007  
                                        tblptrh 000FF7                                       ??_isupper 0007  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                        stoa@cp 0020                                          stoa@fp 0010  
                              __end_of_vfprintf 1838                                 ??_EUSART1_Write 0005  
                                        xtoa@fp 0022                                 _eusart1RxBuffer 0200  
                                     ??_toupper 000D                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0240                          updateTemperature@F6435 0060  
                             _SYSTEM_Initialize 1C84                                      __accesstop 0060  
                       __end_of__initialization 1754                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 002C  
                 __end_of_EUSART1_RxDataHandler 1BEE                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 1C70                                    __pidataBANK1 1896  
                           ??_SYSTEM_Initialize 0007                                   __end_of_fputc 14C8  
                                 __end_of_fputs 1A30                                   __end_of_minus FE14  
                                 __end_of_putch 1CA0                          ??_EUSART1_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 164A                                         ??_fputc 000B  
                     __end_of_SYSTEM_Initialize 1C96                                         ??_fputs 0014  
                                       ??_putch 0006                                   _eusart1RxHead 005A  
                                 _eusart1TxHead 007F                                   _eusart1RxTail 0059  
                                    __pbssBANK0 0060                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                   _eusart1TxTail 007E  
             _EUSART1_TxDefaultInterruptHandler 0076                 ??_EUSART1_SetRxInterruptHandler 0007  
                                     ?_i2c_init 0001                                      _degree_pos FE0E  
               __end_of_EUSART1_SetErrorHandler 1CD2                                         ?___wmul 0005  
                                    _day_string 0080                          i2c_write_serial@length 00DF  
                                       ?_printf 00CF                                         ?_strlen 0005  
        __end_of_EUSART1_SetFramingErrorHandler 1CC8         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 1CBE                    ?_EUSART1_DefaultErrorHandler 0001  
                              _rtc_reset_string FE0A                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0556                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP1ADD 000FC8  
                                       _SSP1BUF 000FC9                                      ??_i2c_init 0005  
                                       _O_slash 01AD                                      _first_line 00F8  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aodiv 0F5C                                         ___aomod 10E4  
                               __size_of___wmul 0026                                       ?_vfprintf 00C9  
                                       __pcinit 16E8                                         __ramtop 1000  
                                       __ptext0 164A                                         __ptext1 1248  
                                       __ptext2 1BEE                                         __ptext3 17D4  
                                       __ptext4 00B4                                         __ptext5 08EA  
                                       __ptext6 1838                                         __ptext7 1AEE  
                                       __ptext8 1B26                                         __ptext9 1AB2  
                               __size_of_printf 0028                                 __size_of_strlen 0050  
                         _OSCILLATOR_Initialize 1C3C                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 1AB2  
                                       _isdigit 1B5E                   __end_of_adafruit_temp_command FE19  
                            _EUSART1_Initialize 175E                                         _islower 1AEE  
                                       _minutes 00EE                        ??_PIN_MANAGER_Initialize 0005  
                                       _isspace 194A                                      _humid_read 00AD  
                                       _isupper 1B26                   ??_EUSART1_DefaultErrorHandler 0001  
                             __end_of_humid_pos FE16                                         atoi@neg 0012  
                    __size_of_SYSTEM_Initialize 0012                                         _toupper 1838  
                          end_of_initialization 1754                             ?_EUSART1_Initialize 0001  
                             ?_i2c_write_serial 00DD                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 0070                                         fputs@fp 0012  
                            ??_i2c_write_serial 00E0           __end_of_EUSART1_SetRxInterruptHandler 1CB4  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 1CAA  
                             __end_of_vfpfcnvrt 060A                                         postdec1 000FE5  
                                       postdec2 000FDD                                      _precission 00F1  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                      ??_vfprintf 0053  
                          ??_EUSART1_Initialize 0007                                         strlen@a 0007  
                                       strlen@s 0005                                      _rtc_buffer 014F  
                                  _display_addr 00F0                                    _hello_string 01E4  
                                  _display_init 00F2                            __end_of_humid_string FDEB  
                                     _TRISCbits 000F94                         fp__EUSART1_Transmit_ISR 0000  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0005  
                                    _tmp_string 0140                  __end_of_adafruit_humid_command FE1A  
          __size_of_EUSART1_DefaultErrorHandler 0006                             __end_of_degree_sign FE0E  
                  __end_of_INTERRUPT_Initialize 1CE2                                     vfpfcnvrt@ap 004D  
                                   vfpfcnvrt@cp 00C2                                     vfpfcnvrt@fp 0049  
                                   vfpfcnvrt@ll 00B2                                  __end_of___wmul 1C3C  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 1C16  
                                __end_of_strlen 19EC                             start_initialization 16E8  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 1AB2  
                                   __end_of_pad 158A   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005                                     putch@txData 0006  
                         __end_of_EUSART1_Write 194A                          fp__EUSART1_Receive_ISR 0000  
                              _temperature_read 00A8                               __size_of_i2c_init 0018  
                      __end_of_rtc_reset_string FE0C                                     vfprintf@fmt 00CB  
                                      ??___wmul 0009                           _EUSART1_RxDataHandler 1BC2  
                ?_EUSART1_SetRxInterruptHandler 0005                                     __pdataBANK0 00E7  
                                   __pdataBANK1 0197                                        ??_printf 0055  
                                      ??_strlen 0007                                  _eusart1RxCount 007C  
                                   __pbssCOMRAM 0057               _EUSART1_RxDefaultInterruptHandler 0074  
                 __size_of_EUSART1_Transmit_ISR 0042                                   __pcstackBANK0 00B2  
                              ___aodiv@dividend 0005                 ??_EUSART1_SetTxInterruptHandler 0007  
              ??_EUSART1_SetFramingErrorHandler 0007                 ?_EUSART1_SetFramingErrorHandler 0005  
                  __size_of_EUSART1_Receive_ISR 00C0                                     _degree_sign FE0C  
                                     _atoi$1720 0018                                       _atoi$1721 0016  
                                     _atoi$1719 0014                          _PIN_MANAGER_Initialize 1B96  
                                     _dtoa$1836 0034                                       __pintcode 0008  
                                 __pmediumconst FDD8                                        ?___aodiv 0005  
                                      ?___aomod 0005                                ___aodiv@quotient 0017  
                    __end_of_adafruit_temp_addr FE12                                    _custom_char0 01D9  
                  ??_INTERRUPT_InterruptManager 0001                               __size_of_vfprintf 0064  
                                      _BAUDCON1 000FB8           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1CD8     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 1CD2                                        ?_isalpha 0005  
                                      ?_isdigit 0005                            _EUSART1_ErrorHandler 006E  
                                      ?_islower 0005                                        ?_isspace 0005  
                                      ?_isupper 0005                         _EUSART1_SetErrorHandler 1CC8  
                                __size_of_fputc 00CA                                  __size_of_fputs 0044  
                                      ?_toupper 000B                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 1CDE                                 _rtc_time_string FE08  
                                     _humid_pos FE14                                  ___wmul@product 0009  
       EUSART1_SetErrorHandler@interruptHandler 0005                                        _PIE1bits 000F9D  
           __size_of_INTERRUPT_InterruptManager 00A8                                        i2u350_40 0044  
                                      i2u350_41 0040                                        i2u352_40 0070  
                                      i2u351_48 004A                                        i2u352_41 006C  
                                      i2u351_49 005E                                        i2u281_40 1A42  
                                      i2u353_40 007E                                        i2u281_41 1A3E  
                                      i2u353_41 007A                                        _PIR1bits 000F9E  
                                      i2u282_40 1A64                                        i2u282_41 1A60  
                                      i2u283_40 15A8                                        i2u354_48 0084  
                                      i2u283_41 15A4                                        i2u354_49 0098  
                                      i2u276_40 1BE4                                        i2u348_40 0028  
                                      i2u276_41 1BE0                                        i2u348_41 0024  
                                      i2u285_40 15E0                                        i2u284_48 15BE  
                                      i2u349_40 0036                                        i2u285_41 15DC  
                                      i2u284_49 15D2                                        i2u349_41 0032  
                                      i2u287_40 1626                                        i2u286_48 15F6  
                                      i2u287_41 1622                                        i2u286_49 160A  
                                      i2u288_48 162C                                        i2u288_49 1640  
                                  _humid_string FDD9                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                                        _SSP1CON1 000FC6  
                                      _SSP1CON2 000FC5                                        _SSP1STAT 000FC7  
                     __size_of_i2c_write_serial 00E0                                       _vfpfcnvrt 00B4  
                                     _xtoa$1858 0035                                       _xtoa$1859 0037  
                             ___wmul@multiplier 0005                      i2c_write_serial@targetAddr 00E3  
                                  _isspace$1737 000B                              __end_of_degree_pos FE10  
                         _adafruit_temp_command FE18                                      vfpfcnvrt@c 00C8  
                                   _INTCON2bits 000FF1                                       copy_data0 16FC  
                                     copy_data1 171C                           ?_INTERRUPT_Initialize 0001  
                                      _i2c_init 1C58           __end_of_EUSART1_SetTxInterruptHandler 1CAA  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 1CA0  
                                      __Hrparam 0000                                      vfprintf@ap 00CD  
                                      __Lrparam 0000                                      vfprintf@fp 00C9  
                       ??_OSCILLATOR_Initialize 0005                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 0076  
                                    ?_vfpfcnvrt 0049                                 ___aodiv@divisor 000D  
                               ___aodiv@counter 0015                                      _ANSELCbits 000F3A  
                     ??_EUSART1_SetErrorHandler 0007             __end_of_EUSART1_DefaultErrorHandler 1CDE  
                   _EUSART1_DefaultErrorHandler 1CD8                         __end_of_rtc_time_string FE0A  
                                      _data_out 0064                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                            i2c_write_serial@addr 00E2  
                          i2c_write_serial@data 00DD                                __size_of_islower 0038  
                              __size_of_isspace 0052                             __end_of_temp_string FDFD  
                                      __ptext10 0DC2                                        __ptext11 060A  
                                      __ptext20 1C96                                        __ptext12 14C8  
                                      __ptext21 18F2                                        __ptext13 199C  
                                      __ptext30 1CDE                                        __ptext22 0BC0  
                                      __ptext14 19EC                                        __ptext31 175E  
                                      __ptext23 194A                                        __ptext15 1A72  
                                      __ptext40 1CD2                                        __ptext32 1CA0  
                                      __ptext24 1B5E                                        __ptext16 10E4  
                                      __ptext41 1CE2                                        __ptext33 1CAA  
                                      __ptext25 1C16                                        __ptext17 0F5C  
                                      __ptext42 1CD8                                        __ptext34 1CB4  
                                      __ptext26 1C58                                        __ptext18 1328  
                                      __ptext43 1BC2                                        __ptext35 1CBE  
                                      __ptext27 1C84                                        __ptext19 13FE  
                                      __ptext44 0000                                        __ptext36 1CC8  
                                      __ptext28 1B96                                        __ptext29 1C3C  
                                      __ptext38 1A30                                        __ptext39 158A  
                              __size_of_isupper 0038                                    _SSP1CON2bits 000FC5  
                                  _SSP2CON2bits 000F6B                                __size_of_toupper 005E  
                                 __size_of_atoi 0202                                   __size_of_ctoa 00D6  
                                 __size_of_main 009E                                   __size_of_dtoa 02E0  
                                 __size_of_stoa 019A                                   __size_of_xtoa 02D6  
                                  _month_string 0094                                       stoa@F1146 00E7  
EUSART1_SetOverrunErrorHandler@interruptHandler 0005                                        _temp_pos FE16  
                                      isa$xinst 000000                                        _rtc_addr FE10  
                                      _rtc_test 00FA                                        int$flags 005B  
                                      _vfprintf 17D4              __end_of_INTERRUPT_InterruptManager 00B0  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00CF  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 0072  
                           _EUSART1_Receive_ISR 158A                                ___aomod@dividend 0005  
                                _vfpfcnvrt$1873 00C6                                     _second_line 00F6  
                                    _INTCONbits 000FF2                                        isalpha@c 0005  
                                      isdigit@c 0005                          ??_INTERRUPT_Initialize 0005  
                                      intlevel2 0000                      __end_ofrtc_first_run@F6460 FE08  
                          ?_EUSART1_Receive_ISR 0001                                        islower@c 0005  
                                      isspace@c 0005                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1CBE         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1CB4                                      _RCSTA1bits 000FAB  
                                      isupper@c 0005                    __end_of_EUSART1_Transmit_ISR 1A72  
                                      printf@ap 0055  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
                ?_EUSART1_SetTxInterruptHandler 0005                                 ___aomod@divisor 000D  
                              _i2c_write_serial 1248                                     ??_vfpfcnvrt 004F  
                                      stoa@nuls 0015                                 ___aomod@counter 0015  
                        __size_of_EUSART1_Write 0058                              _eusart1RxLastError 007B  
                                   _temp_string FDEB                                        toupper@c 000B  
                            _adafruit_temp_addr FE11                                  _display_toogle 0078  
                                  ___aodiv@sign 0016                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 1BC2                         ??_EUSART1_RxDataHandler 0001  
                                  ___aomod@sign 0016  
