

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 11 18:06:48 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.32
    37                           ; Generated 02/02/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F26K22 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     _ANSELA	set	3896
    72  0000                     _ANSELB	set	3897
    73  0000                     _ANSELC	set	3898
    74  0000                     _INTCON2bits	set	4081
    75  0000                     _WPUB	set	3937
    76  0000                     _TRISC	set	3988
    77  0000                     _TRISB	set	3987
    78  0000                     _TRISA	set	3986
    79  0000                     _LATC	set	3979
    80  0000                     _LATB	set	3978
    81  0000                     _LATA	set	3977
    82  0000                     _OSCTUNE	set	3995
    83  0000                     _OSCCON2	set	4050
    84  0000                     _OSCCON	set	4051
    85  0000                     _PIR1bits	set	3998
    86  0000                     _INTCONbits	set	4082
    87  0000                     _RCONbits	set	4048
    88  0000                     _RCREG1	set	4014
    89  0000                     _RCSTA1bits	set	4011
    90  0000                     _TXREG1	set	4013
    91  0000                     _TXSTA1bits	set	4012
    92  0000                     _SPBRGH1	set	4016
    93  0000                     _SPBRG1	set	4015
    94  0000                     _TXSTA1	set	4012
    95  0000                     _RCSTA1	set	4011
    96  0000                     _BAUDCON1	set	4024
    97  0000                     _PIE1bits	set	3997
    98  0000                     _PLLRDY	set	32407
    99                           
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103  0002CC                     __pcinit:
   104                           	callstack 0
   105  0002CC                     start_initialization:
   106                           	callstack 0
   107  0002CC                     __initialization:
   108                           	callstack 0
   109                           
   110                           ; Clear objects allocated to BANK0 (128 bytes)
   111  0002CC  EE00  F060         	lfsr	0,__pbssBANK0
   112  0002D0  0E80               	movlw	128
   113  0002D2                     clear_0:
   114  0002D2  6AEE               	clrf	postinc0,c
   115  0002D4  06E8               	decf	wreg,f,c
   116  0002D6  E1FD               	bnz	clear_0
   117                           
   118                           ; Clear objects allocated to COMRAM (25 bytes)
   119  0002D8  EE00  F001         	lfsr	0,__pbssCOMRAM
   120  0002DC  0E19               	movlw	25
   121  0002DE                     clear_1:
   122  0002DE  6AEE               	clrf	postinc0,c
   123  0002E0  06E8               	decf	wreg,f,c
   124  0002E2  E1FD               	bnz	clear_1
   125  0002E4                     end_of_initialization:
   126                           	callstack 0
   127  0002E4                     __end_of__initialization:
   128                           	callstack 0
   129  0002E4  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   130  0002E6  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   131  0002E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   132  0002EA  6EF8               	movwf	tblptru,c
   133  0002EC  0100               	movlb	0
   134  0002EE  EF79  F001         	goto	_main	;jump to C main() function
   135                           
   136                           	psect	bssCOMRAM
   137  000001                     __pbssCOMRAM:
   138                           	callstack 0
   139  000001                     _eusart1TxBuffer:
   140                           	callstack 0
   141  000001                     	ds	8
   142  000009                     _EUSART1_ErrorHandler:
   143                           	callstack 0
   144  000009                     	ds	2
   145  00000B                     _EUSART1_OverrunErrorHandler:
   146                           	callstack 0
   147  00000B                     	ds	2
   148  00000D                     _EUSART1_FramingErrorHandler:
   149                           	callstack 0
   150  00000D                     	ds	2
   151  00000F                     _EUSART1_RxDefaultInterruptHandler:
   152                           	callstack 0
   153  00000F                     	ds	2
   154  000011                     _EUSART1_TxDefaultInterruptHandler:
   155                           	callstack 0
   156  000011                     	ds	2
   157  000013                     _eusart1RxLastError:
   158                           	callstack 0
   159  000013                     	ds	1
   160  000014                     _eusart1RxCount:
   161                           	callstack 0
   162  000014                     	ds	1
   163  000015                     _eusart1RxTail:
   164                           	callstack 0
   165  000015                     	ds	1
   166  000016                     _eusart1RxHead:
   167                           	callstack 0
   168  000016                     	ds	1
   169  000017                     _eusart1TxBufferRemaining:
   170                           	callstack 0
   171  000017                     	ds	1
   172  000018                     _eusart1TxTail:
   173                           	callstack 0
   174  000018                     	ds	1
   175  000019                     _eusart1TxHead:
   176                           	callstack 0
   177  000019                     	ds	1
   178                           
   179                           	psect	bssBANK0
   180  000060                     __pbssBANK0:
   181                           	callstack 0
   182  000060                     _eusart1RxStatusBuffer:
   183                           	callstack 0
   184  000060                     	ds	64
   185  0000A0                     _eusart1RxBuffer:
   186                           	callstack 0
   187  0000A0                     	ds	64
   188                           
   189                           	psect	cstackCOMRAM
   190  00001A                     __pcstackCOMRAM:
   191                           	callstack 0
   192  00001A                     ??_INTERRUPT_InterruptManager:
   193  00001A                     
   194                           ; 1 bytes @ 0x0
   195  00001A                     	ds	4
   196  00001E                     EUSART1_Read@readValue:
   197                           	callstack 0
   198  00001E                     EUSART1_SetFramingErrorHandler@interruptHandler:
   199                           	callstack 0
   200  00001E                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   201                           	callstack 0
   202  00001E                     EUSART1_SetErrorHandler@interruptHandler:
   203                           	callstack 0
   204  00001E                     EUSART1_SetTxInterruptHandler@interruptHandler:
   205                           	callstack 0
   206  00001E                     EUSART1_SetRxInterruptHandler@interruptHandler:
   207                           	callstack 0
   208                           
   209                           ; 2 bytes @ 0x4
   210  00001E                     	ds	2
   211  000020                     
   212                           ; 1 bytes @ 0x6
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 49 in file "main.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;  tmp             1    0        unsigned char 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   236 ;;Total ram usage:        0 bytes
   237 ;; Hardware stack levels required when called: 7
   238 ;; This function calls:
   239 ;;		_EUSART1_Initialize
   240 ;;		_EUSART1_Read
   241 ;;		_EUSART1_is_rx_ready
   242 ;;		_SYSTEM_Initialize
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248                           	psect	text0
   249  0002F2                     __ptext0:
   250                           	callstack 0
   251  0002F2                     _main:
   252                           	callstack 24
   253  0002F2                     
   254                           ;main.c: 52:     SYSTEM_Initialize();
   255  0002F2  EC95  F001         	call	_SYSTEM_Initialize	;wreg free
   256  0002F6                     
   257                           ;main.c: 59:     (INTCONbits.GIE = 1);
   258  0002F6  8EF2               	bsf	242,7,c	;volatile
   259  0002F8                     
   260                           ;main.c: 65:     (INTCONbits.PEIE = 1);
   261  0002F8  8CF2               	bsf	242,6,c	;volatile
   262                           
   263                           ;main.c: 70:     EUSART1_Initialize();
   264  0002FA  ECBA  F000         	call	_EUSART1_Initialize	;wreg free
   265  0002FE                     l1225:
   266                           
   267                           ;main.c: 74:     {;main.c: 76:         EUSART1_is_rx_ready();
   268  0002FE  ECBF  F001         	call	_EUSART1_is_rx_ready	;wreg free
   269  000302  ECF4  F000         	call	_EUSART1_Read	;wreg free
   270  000306  EF7F  F001         	goto	l1225
   271  00030A  EF58  F000         	goto	start
   272  00030E                     __end_of_main:
   273                           	callstack 0
   274                           
   275 ;; *************** function _SYSTEM_Initialize *****************
   276 ;; Defined at:
   277 ;;		line 50 in file "mcc_generated_files/mcc.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, status,2, status,0, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   295 ;;Total ram usage:        0 bytes
   296 ;; Hardware stack levels used: 1
   297 ;; Hardware stack levels required when called: 6
   298 ;; This function calls:
   299 ;;		_EUSART1_Initialize
   300 ;;		_INTERRUPT_Initialize
   301 ;;		_OSCILLATOR_Initialize
   302 ;;		_PIN_MANAGER_Initialize
   303 ;; This function is called by:
   304 ;;		_main
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           	psect	text1
   309  00032A                     __ptext1:
   310                           	callstack 0
   311  00032A                     _SYSTEM_Initialize:
   312                           	callstack 24
   313  00032A                     
   314                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   315  00032A  ECBD  F001         	call	_INTERRUPT_Initialize	;wreg free
   316  00032E                     
   317                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   318  00032E  EC3C  F001         	call	_PIN_MANAGER_Initialize	;wreg free
   319  000332                     
   320                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   321  000332  EC87  F001         	call	_OSCILLATOR_Initialize	;wreg free
   322  000336                     
   323                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
   324  000336  ECBA  F000         	call	_EUSART1_Initialize	;wreg free
   325  00033A  0012               	return		;funcret
   326  00033C                     __end_of_SYSTEM_Initialize:
   327                           	callstack 0
   328                           
   329 ;; *************** function _PIN_MANAGER_Initialize *****************
   330 ;; Defined at:
   331 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;Total ram usage:        0 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; Hardware stack levels required when called: 4
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_SYSTEM_Initialize
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text2
   360  000278                     __ptext2:
   361                           	callstack 0
   362  000278                     _PIN_MANAGER_Initialize:
   363                           	callstack 25
   364  000278                     
   365                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   366  000278  0E00               	movlw	0
   367  00027A  6E89               	movwf	137,c	;volatile
   368                           
   369                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   370  00027C  0E00               	movlw	0
   371  00027E  6E8A               	movwf	138,c	;volatile
   372                           
   373                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   374  000280  0E00               	movlw	0
   375  000282  6E8B               	movwf	139,c	;volatile
   376  000284                     
   377                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   378  000284  6892               	setf	146,c	;volatile
   379  000286                     
   380                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   381  000286  6893               	setf	147,c	;volatile
   382                           
   383                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
   384  000288  0EBF               	movlw	191
   385  00028A  6E94               	movwf	148,c	;volatile
   386                           
   387                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
   388  00028C  0E3C               	movlw	60
   389  00028E  010F               	movlb	15	; () banked
   390  000290  6F3A               	movwf	58,b	;volatile
   391                           
   392                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
   393  000292  0E3F               	movlw	63
   394  000294  6F39               	movwf	57,b	;volatile
   395                           
   396                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
   397  000296  0E2F               	movlw	47
   398  000298  6F38               	movwf	56,b	;volatile
   399                           
   400                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   401  00029A  0E00               	movlw	0
   402  00029C  6E61               	movwf	97,c	;volatile
   403  00029E                     
   404                           ; BSR set to: 15
   405                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
   406  00029E  8EF1               	bsf	241,7,c	;volatile
   407  0002A0                     
   408                           ; BSR set to: 15
   409  0002A0  0012               	return		;funcret
   410  0002A2                     __end_of_PIN_MANAGER_Initialize:
   411                           	callstack 0
   412                           
   413 ;; *************** function _OSCILLATOR_Initialize *****************
   414 ;; Defined at:
   415 ;;		line 59 in file "mcc_generated_files/mcc.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; Hardware stack levels required when called: 4
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		_SYSTEM_Initialize
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	text3
   444  00030E                     __ptext3:
   445                           	callstack 0
   446  00030E                     _OSCILLATOR_Initialize:
   447                           	callstack 25
   448  00030E                     
   449                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
   450  00030E  0E70               	movlw	112
   451  000310  6ED3               	movwf	211,c	;volatile
   452                           
   453                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
   454  000312  0E04               	movlw	4
   455  000314  6ED2               	movwf	210,c	;volatile
   456                           
   457                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x40;
   458  000316  0E40               	movlw	64
   459  000318  6E9B               	movwf	155,c	;volatile
   460  00031A                     l198:
   461                           
   462                           ;mcc_generated_files/mcc.c: 68:     while(PLLRDY == 0)
   463  00031A  AED2               	btfss	4050,7,c	;volatile
   464  00031C  EF92  F001         	goto	u21
   465  000320  EF94  F001         	goto	u20
   466  000324                     u21:
   467  000324  EF8D  F001         	goto	l198
   468  000328                     u20:
   469  000328  0012               	return		;funcret
   470  00032A                     __end_of_OSCILLATOR_Initialize:
   471                           	callstack 0
   472                           
   473 ;; *************** function _INTERRUPT_Initialize *****************
   474 ;; Defined at:
   475 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		None
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;Total ram usage:        0 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 4
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_SYSTEM_Initialize
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text4
   504  00037A                     __ptext4:
   505                           	callstack 0
   506  00037A                     _INTERRUPT_Initialize:
   507                           	callstack 25
   508  00037A                     
   509                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
   510  00037A  9ED0               	bcf	208,7,c	;volatile
   511  00037C  0012               	return		;funcret
   512  00037E                     __end_of_INTERRUPT_Initialize:
   513                           	callstack 0
   514                           
   515 ;; *************** function _EUSART1_Initialize *****************
   516 ;; Defined at:
   517 ;;		line 88 in file "mcc_generated_files/eusart1.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; Hardware stack levels required when called: 5
   538 ;; This function calls:
   539 ;;		_EUSART1_SetErrorHandler
   540 ;;		_EUSART1_SetFramingErrorHandler
   541 ;;		_EUSART1_SetOverrunErrorHandler
   542 ;;		_EUSART1_SetRxInterruptHandler
   543 ;;		_EUSART1_SetTxInterruptHandler
   544 ;; This function is called by:
   545 ;;		_SYSTEM_Initialize
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text5
   551  000174                     __ptext5:
   552                           	callstack 0
   553  000174                     _EUSART1_Initialize:
   554                           	callstack 24
   555  000174                     
   556                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
   557  000174  9A9D               	bcf	157,5,c	;volatile
   558  000176                     
   559                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
   560  000176  0EB4               	movlw	low _EUSART1_Receive_ISR
   561  000178  6E1E               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
   562  00017A  0E00               	movlw	high _EUSART1_Receive_ISR
   563  00017C  6E1F               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
   564  00017E  ECA3  F001         	call	_EUSART1_SetRxInterruptHandler	;wreg free
   565  000182                     
   566                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
   567  000182  989D               	bcf	157,4,c	;volatile
   568                           
   569                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
   570  000184  0E38               	movlw	low _EUSART1_Transmit_ISR
   571  000186  6E1E               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
   572  000188  0E02               	movlw	high _EUSART1_Transmit_ISR
   573  00018A  6E1F               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
   574  00018C  EC9E  F001         	call	_EUSART1_SetTxInterruptHandler	;wreg free
   575  000190                     
   576                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
   577  000190  0E08               	movlw	8
   578  000192  6EB8               	movwf	184,c	;volatile
   579  000194                     
   580                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
   581  000194  0E90               	movlw	144
   582  000196  6EAB               	movwf	171,c	;volatile
   583  000198                     
   584                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
   585  000198  0E24               	movlw	36
   586  00019A  6EAC               	movwf	172,c	;volatile
   587  00019C                     
   588                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
   589  00019C  0E8A               	movlw	138
   590  00019E  6EAF               	movwf	175,c	;volatile
   591  0001A0                     
   592                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
   593  0001A0  0E00               	movlw	0
   594  0001A2  6EB0               	movwf	176,c	;volatile
   595  0001A4                     
   596                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
   597  0001A4  0E80               	movlw	low _EUSART1_DefaultFramingErrorHandler
   598  0001A6  6E1E               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
   599  0001A8  0E03               	movlw	high _EUSART1_DefaultFramingErrorHandler
   600  0001AA  6E1F               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
   601  0001AC  ECAD  F001         	call	_EUSART1_SetFramingErrorHandler	;wreg free
   602  0001B0                     
   603                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
   604  0001B0  0E6E               	movlw	low _EUSART1_DefaultOverrunErrorHandler
   605  0001B2  6E1E               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
   606  0001B4  0E03               	movlw	high _EUSART1_DefaultOverrunErrorHandler
   607  0001B6  6E1F               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
   608  0001B8  ECA8  F001         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
   609  0001BC                     
   610                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
   611  0001BC  0E74               	movlw	low _EUSART1_DefaultErrorHandler
   612  0001BE  6E1E               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
   613  0001C0  0E03               	movlw	high _EUSART1_DefaultErrorHandler
   614  0001C2  6E1F               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
   615  0001C4  ECB2  F001         	call	_EUSART1_SetErrorHandler	;wreg free
   616                           
   617                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
   618  0001C8  0E00               	movlw	0
   619  0001CA  6E13               	movwf	_eusart1RxLastError^0,c	;volatile
   620                           
   621                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
   622  0001CC  0E00               	movlw	0
   623  0001CE  6E19               	movwf	_eusart1TxHead^0,c	;volatile
   624                           
   625                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
   626  0001D0  0E00               	movlw	0
   627  0001D2  6E18               	movwf	_eusart1TxTail^0,c	;volatile
   628                           
   629                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
   630  0001D4  0E08               	movlw	8
   631  0001D6  6E17               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
   632                           
   633                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
   634  0001D8  0E00               	movlw	0
   635  0001DA  6E16               	movwf	_eusart1RxHead^0,c	;volatile
   636                           
   637                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
   638  0001DC  0E00               	movlw	0
   639  0001DE  6E15               	movwf	_eusart1RxTail^0,c	;volatile
   640                           
   641                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
   642  0001E0  0E00               	movlw	0
   643  0001E2  6E14               	movwf	_eusart1RxCount^0,c	;volatile
   644  0001E4                     
   645                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
   646  0001E4  8A9D               	bsf	157,5,c	;volatile
   647  0001E6  0012               	return		;funcret
   648  0001E8                     __end_of_EUSART1_Initialize:
   649                           	callstack 0
   650                           
   651 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
   652 ;; Defined at:
   653 ;;		line 285 in file "mcc_generated_files/eusart1.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   656 ;;		 -> EUSART1_Transmit_ISR(1), 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;Total ram usage:        2 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 4
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_EUSART1_Initialize
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text6
   683  00033C                     __ptext6:
   684                           	callstack 0
   685  00033C                     _EUSART1_SetTxInterruptHandler:
   686                           	callstack 24
   687  00033C                     
   688                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
   689  00033C  C01E  F011         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
   690  000340  C01F  F012         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
   691  000344  0012               	return		;funcret
   692  000346                     __end_of_EUSART1_SetTxInterruptHandler:
   693                           	callstack 0
   694                           
   695 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
   696 ;; Defined at:
   697 ;;		line 289 in file "mcc_generated_files/eusart1.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   700 ;;		 -> EUSART1_Receive_ISR(1), 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   716 ;;Total ram usage:        2 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; Hardware stack levels required when called: 4
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_EUSART1_Initialize
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text7
   727  000346                     __ptext7:
   728                           	callstack 0
   729  000346                     _EUSART1_SetRxInterruptHandler:
   730                           	callstack 24
   731  000346                     
   732                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
   733  000346  C01E  F00F         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
   734  00034A  C01F  F010         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
   735  00034E  0012               	return		;funcret
   736  000350                     __end_of_EUSART1_SetRxInterruptHandler:
   737                           	callstack 0
   738                           
   739 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
   740 ;; Defined at:
   741 ;;		line 277 in file "mcc_generated_files/eusart1.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   744 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;Total ram usage:        2 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 4
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_EUSART1_Initialize
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text8
   771  000350                     __ptext8:
   772                           	callstack 0
   773  000350                     _EUSART1_SetOverrunErrorHandler:
   774                           	callstack 24
   775  000350                     
   776                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
   777  000350  C01E  F00B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
   778  000354  C01F  F00C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
   779  000358  0012               	return		;funcret
   780  00035A                     __end_of_EUSART1_SetOverrunErrorHandler:
   781                           	callstack 0
   782                           
   783 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
   784 ;; Defined at:
   785 ;;		line 273 in file "mcc_generated_files/eusart1.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   788 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;Total ram usage:        2 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 4
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_EUSART1_Initialize
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text9
   815  00035A                     __ptext9:
   816                           	callstack 0
   817  00035A                     _EUSART1_SetFramingErrorHandler:
   818                           	callstack 24
   819  00035A                     
   820                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
   821  00035A  C01E  F00D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
   822  00035E  C01F  F00E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
   823  000362  0012               	return		;funcret
   824  000364                     __end_of_EUSART1_SetFramingErrorHandler:
   825                           	callstack 0
   826                           
   827 ;; *************** function _EUSART1_SetErrorHandler *****************
   828 ;; Defined at:
   829 ;;		line 281 in file "mcc_generated_files/eusart1.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
   832 ;;		 -> EUSART1_DefaultErrorHandler(1), 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:        2 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; Hardware stack levels required when called: 4
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_EUSART1_Initialize
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           	psect	text10
   859  000364                     __ptext10:
   860                           	callstack 0
   861  000364                     _EUSART1_SetErrorHandler:
   862                           	callstack 24
   863  000364                     
   864                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
   865  000364  C01E  F009         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
   866  000368  C01F  F00A         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
   867  00036C  0012               	return		;funcret
   868  00036E                     __end_of_EUSART1_SetErrorHandler:
   869                           	callstack 0
   870                           
   871 ;; *************** function _EUSART1_is_rx_ready *****************
   872 ;; Defined at:
   873 ;;		line 137 in file "mcc_generated_files/eusart1.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      _Bool 
   880 ;; Registers used:
   881 ;;		None
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used: 1
   893 ;; Hardware stack levels required when called: 4
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text11
   902  00037E                     __ptext11:
   903                           	callstack 0
   904  00037E                     _EUSART1_is_rx_ready:
   905                           	callstack 26
   906  00037E  0012               	return		;funcret
   907  000380                     __end_of_EUSART1_is_rx_ready:
   908                           	callstack 0
   909                           
   910 ;; *************** function _EUSART1_Read *****************
   911 ;; Defined at:
   912 ;;		line 151 in file "mcc_generated_files/eusart1.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  readValue       1    4[COMRAM] unsigned char 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      unsigned char 
   919 ;; Registers used:
   920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:        1 bytes
   931 ;; Hardware stack levels used: 1
   932 ;; Hardware stack levels required when called: 4
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_main
   937 ;;		_getch
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text12
   942  0001E8                     __ptext12:
   943                           	callstack 0
   944  0001E8                     _EUSART1_Read:
   945                           	callstack 26
   946  0001E8                     l1155:
   947                           
   948                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
   949  0001E8  5014               	movf	_eusart1RxCount^0,w,c	;volatile
   950  0001EA  B4D8               	btfsc	status,2,c
   951  0001EC  EFFA  F000         	goto	u241
   952  0001F0  EFFC  F000         	goto	u240
   953  0001F4                     u241:
   954  0001F4  EFF4  F000         	goto	l1155
   955  0001F8                     u240:
   956  0001F8                     
   957                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
   958  0001F8  0E60               	movlw	low _eusart1RxStatusBuffer
   959  0001FA  2415               	addwf	_eusart1RxTail^0,w,c	;volatile
   960  0001FC  6ED9               	movwf	fsr2l,c
   961  0001FE  6ADA               	clrf	fsr2h,c
   962  000200  0E00               	movlw	high _eusart1RxStatusBuffer
   963  000202  22DA               	addwfc	fsr2h,f,c
   964  000204  50DF               	movf	indf2,w,c
   965  000206  6E13               	movwf	_eusart1RxLastError^0,c	;volatile
   966                           
   967                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
   968  000208  0EA0               	movlw	low _eusart1RxBuffer
   969  00020A  2415               	addwf	_eusart1RxTail^0,w,c	;volatile
   970  00020C  6ED9               	movwf	fsr2l,c
   971  00020E  6ADA               	clrf	fsr2h,c
   972  000210  0E00               	movlw	high _eusart1RxBuffer
   973  000212  22DA               	addwfc	fsr2h,f,c
   974  000214  50DF               	movf	indf2,w,c
   975  000216  6E1E               	movwf	EUSART1_Read@readValue^0,c
   976  000218  2A15               	incf	_eusart1RxTail^0,f,c	;volatile
   977  00021A                     
   978                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
   979  00021A  0E3F               	movlw	63
   980  00021C  6415               	cpfsgt	_eusart1RxTail^0,c	;volatile
   981  00021E  EF13  F001         	goto	u251
   982  000222  EF15  F001         	goto	u250
   983  000226                     u251:
   984  000226  EF17  F001         	goto	l1165
   985  00022A                     u250:
   986  00022A                     
   987                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
   988  00022A  0E00               	movlw	0
   989  00022C  6E15               	movwf	_eusart1RxTail^0,c	;volatile
   990  00022E                     l1165:
   991                           
   992                           ;mcc_generated_files/eusart1.c: 166:     PIE1bits.RC1IE = 0;
   993  00022E  9A9D               	bcf	157,5,c	;volatile
   994  000230                     
   995                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
   996  000230  0614               	decf	_eusart1RxCount^0,f,c	;volatile
   997  000232                     
   998                           ;mcc_generated_files/eusart1.c: 168:     PIE1bits.RC1IE = 1;
   999  000232  8A9D               	bsf	157,5,c	;volatile
  1000  000234                     
  1001                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  1002  000234  501E               	movf	EUSART1_Read@readValue^0,w,c
  1003  000236  0012               	return		;funcret
  1004  000238                     __end_of_EUSART1_Read:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _INTERRUPT_InterruptManager *****************
  1008 ;; Defined at:
  1009 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;Total ram usage:        4 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; Hardware stack levels required when called: 3
  1030 ;; This function calls:
  1031 ;;		Absolute function
  1032 ;;		_EUSART1_Receive_ISR
  1033 ;;		_EUSART1_Transmit_ISR
  1034 ;; This function is called by:
  1035 ;;		Interrupt level 2
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	intcode
  1040  000008                     __pintcode:
  1041                           	callstack 0
  1042  000008                     _INTERRUPT_InterruptManager:
  1043                           	callstack 24
  1044                           
  1045                           ;incstack = 0
  1046  000008  8220               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1047  00000A  CFFA F01A          	movff	pclath,??_INTERRUPT_InterruptManager
  1048  00000E  CFFB F01B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1049  000012  CFD9 F01C          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  1050  000016  CFDA F01D          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  1051  00001A                     
  1052                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  1053  00001A  ACF2               	btfss	242,6,c	;volatile
  1054  00001C  EF12  F000         	goto	i2u32_41
  1055  000020  EF14  F000         	goto	i2u32_40
  1056  000024                     i2u32_41:
  1057  000024  EF4E  F000         	goto	i2l176
  1058  000028                     i2u32_40:
  1059  000028                     
  1060                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  1061  000028  A89D               	btfss	157,4,c	;volatile
  1062  00002A  EF19  F000         	goto	i2u33_41
  1063  00002E  EF1B  F000         	goto	i2u33_40
  1064  000032                     i2u33_41:
  1065  000032  EF31  F000         	goto	i2l171
  1066  000036                     i2u33_40:
  1067  000036  A89E               	btfss	158,4,c	;volatile
  1068  000038  EF20  F000         	goto	i2u34_41
  1069  00003C  EF22  F000         	goto	i2u34_40
  1070  000040                     i2u34_41:
  1071  000040  EF31  F000         	goto	i2l171
  1072  000044                     i2u34_40:
  1073  000044                     
  1074                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  1075  000044  D802               	call	i2u35_48
  1076  000046  EF2F  F000         	goto	i2u35_49
  1077  00004A                     i2u35_48:
  1078  00004A  0005               	push	
  1079  00004C  6EFA               	movwf	pclath,c
  1080  00004E  5011               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  1081  000050  6EFD               	movwf	tosl,c
  1082  000052  5012               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  1083  000054  6EFE               	movwf	tosh,c
  1084  000056  50F8               	movf	tblptru,w,c
  1085  000058  6EFF               	movwf	tosu,c
  1086  00005A  50FA               	movf	pclath,w,c
  1087  00005C  0012               	return		;indir
  1088  00005E                     i2u35_49:
  1089                           
  1090                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  1091  00005E  EF4E  F000         	goto	i2l176
  1092  000062                     i2l171:
  1093  000062  AA9D               	btfss	157,5,c	;volatile
  1094  000064  EF36  F000         	goto	i2u36_41
  1095  000068  EF38  F000         	goto	i2u36_40
  1096  00006C                     i2u36_41:
  1097  00006C  EF4E  F000         	goto	i2l172
  1098  000070                     i2u36_40:
  1099  000070  AA9E               	btfss	158,5,c	;volatile
  1100  000072  EF3D  F000         	goto	i2u37_41
  1101  000076  EF3F  F000         	goto	i2u37_40
  1102  00007A                     i2u37_41:
  1103  00007A  EF4E  F000         	goto	i2l172
  1104  00007E                     i2u37_40:
  1105  00007E                     
  1106                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  1107  00007E  D802               	call	i2u38_48
  1108  000080  EF4C  F000         	goto	i2u38_49
  1109  000084                     i2u38_48:
  1110  000084  0005               	push	
  1111  000086  6EFA               	movwf	pclath,c
  1112  000088  500F               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  1113  00008A  6EFD               	movwf	tosl,c
  1114  00008C  5010               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  1115  00008E  6EFE               	movwf	tosh,c
  1116  000090  50F8               	movf	tblptru,w,c
  1117  000092  6EFF               	movwf	tosu,c
  1118  000094  50FA               	movf	pclath,w,c
  1119  000096  0012               	return		;indir
  1120  000098                     i2u38_49:
  1121                           
  1122                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  1123  000098  EF4E  F000         	goto	i2l176
  1124  00009C                     i2l172:
  1125  00009C                     i2l176:
  1126  00009C  C01D  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  1127  0000A0  C01C  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  1128  0000A4  C01B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1129  0000A8  C01A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1130  0000AC  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1131  0000AE  0011               	retfie		f
  1132  0000B0                     __end_of_INTERRUPT_InterruptManager:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function _EUSART1_Transmit_ISR *****************
  1136 ;; Defined at:
  1137 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_EUSART1_Initialize
  1161 ;;		_INTERRUPT_InterruptManager
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text14
  1166  000238                     __ptext14:
  1167                           	callstack 0
  1168  000238                     _EUSART1_Transmit_ISR:
  1169                           	callstack 26
  1170  000238                     
  1171                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  1172  000238  0E08               	movlw	8
  1173  00023A  6017               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  1174  00023C  EF22  F001         	goto	i2u8_41
  1175  000240  EF24  F001         	goto	i2u8_40
  1176  000244                     i2u8_41:
  1177  000244  EF3A  F001         	goto	i2l112
  1178  000248                     i2u8_40:
  1179  000248                     
  1180                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  1181  000248  0E01               	movlw	low _eusart1TxBuffer
  1182  00024A  2418               	addwf	_eusart1TxTail^0,w,c	;volatile
  1183  00024C  6ED9               	movwf	fsr2l,c
  1184  00024E  6ADA               	clrf	fsr2h,c
  1185  000250  0E00               	movlw	high _eusart1TxBuffer
  1186  000252  22DA               	addwfc	fsr2h,f,c
  1187  000254  50DF               	movf	indf2,w,c
  1188  000256  6EAD               	movwf	173,c	;volatile
  1189  000258  2A18               	incf	_eusart1TxTail^0,f,c	;volatile
  1190  00025A                     
  1191                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  1192  00025A  0E07               	movlw	7
  1193  00025C  6418               	cpfsgt	_eusart1TxTail^0,c	;volatile
  1194  00025E  EF33  F001         	goto	i2u9_41
  1195  000262  EF35  F001         	goto	i2u9_40
  1196  000266                     i2u9_41:
  1197  000266  EF37  F001         	goto	i2l1037
  1198  00026A                     i2u9_40:
  1199  00026A                     
  1200                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  1201  00026A  0E00               	movlw	0
  1202  00026C  6E18               	movwf	_eusart1TxTail^0,c	;volatile
  1203  00026E                     i2l1037:
  1204                           
  1205                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  1206  00026E  2A17               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  1207                           
  1208                           ;mcc_generated_files/eusart1.c: 218:     }
  1209  000270  EF3B  F001         	goto	i2l115
  1210  000274                     i2l112:
  1211                           
  1212                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  1213  000274  989D               	bcf	157,4,c	;volatile
  1214  000276                     i2l115:
  1215  000276  0012               	return		;funcret
  1216  000278                     __end_of_EUSART1_Transmit_ISR:
  1217                           	callstack 0
  1218                           
  1219 ;; *************** function _EUSART1_Receive_ISR *****************
  1220 ;; Defined at:
  1221 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 2
  1242 ;; This function calls:
  1243 ;;		Absolute function
  1244 ;;		_EUSART1_DefaultErrorHandler
  1245 ;;		_EUSART1_DefaultFramingErrorHandler
  1246 ;;		_EUSART1_DefaultOverrunErrorHandler
  1247 ;;		_EUSART1_RxDataHandler
  1248 ;; This function is called by:
  1249 ;;		_EUSART1_Initialize
  1250 ;;		_INTERRUPT_InterruptManager
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text15
  1255  0000B4                     __ptext15:
  1256                           	callstack 0
  1257  0000B4                     _EUSART1_Receive_ISR:
  1258                           	callstack 24
  1259  0000B4                     
  1260                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  1261  0000B4  0E60               	movlw	low _eusart1RxStatusBuffer
  1262  0000B6  2416               	addwf	_eusart1RxHead^0,w,c	;volatile
  1263  0000B8  6ED9               	movwf	fsr2l,c
  1264  0000BA  6ADA               	clrf	fsr2h,c
  1265  0000BC  0E00               	movlw	high _eusart1RxStatusBuffer
  1266  0000BE  22DA               	addwfc	fsr2h,f,c
  1267  0000C0  0E00               	movlw	0
  1268  0000C2  6EDF               	movwf	indf2,c
  1269  0000C4                     
  1270                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  1271  0000C4  A4AB               	btfss	171,2,c	;volatile
  1272  0000C6  EF67  F000         	goto	i2u26_41
  1273  0000CA  EF69  F000         	goto	i2u26_40
  1274  0000CE                     i2u26_41:
  1275  0000CE  EF7E  F000         	goto	i2l1183
  1276  0000D2                     i2u26_40:
  1277  0000D2                     
  1278                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  1279  0000D2  0E60               	movlw	low _eusart1RxStatusBuffer
  1280  0000D4  2416               	addwf	_eusart1RxHead^0,w,c	;volatile
  1281  0000D6  6ED9               	movwf	fsr2l,c
  1282  0000D8  6ADA               	clrf	fsr2h,c
  1283  0000DA  0E00               	movlw	high _eusart1RxStatusBuffer
  1284  0000DC  22DA               	addwfc	fsr2h,f,c
  1285  0000DE  0100               	movlb	0	; () banked
  1286  0000E0  82DF               	bsf	indf2,1,c
  1287  0000E2                     
  1288                           ; BSR set to: 0
  1289                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  1290  0000E2  D802               	call	i2u27_48
  1291  0000E4  EF7E  F000         	goto	i2u27_49
  1292  0000E8                     i2u27_48:
  1293  0000E8  0005               	push	
  1294  0000EA  6EFA               	movwf	pclath,c
  1295  0000EC  500D               	movf	_EUSART1_FramingErrorHandler^0,w,c
  1296  0000EE  6EFD               	movwf	tosl,c
  1297  0000F0  500E               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  1298  0000F2  6EFE               	movwf	tosh,c
  1299  0000F4  50F8               	movf	tblptru,w,c
  1300  0000F6  6EFF               	movwf	tosu,c
  1301  0000F8  50FA               	movf	pclath,w,c
  1302  0000FA  0012               	return		;indir
  1303  0000FC                     i2u27_49:
  1304  0000FC                     i2l1183:
  1305                           
  1306                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  1307  0000FC  A2AB               	btfss	171,1,c	;volatile
  1308  0000FE  EF83  F000         	goto	i2u28_41
  1309  000102  EF85  F000         	goto	i2u28_40
  1310  000106                     i2u28_41:
  1311  000106  EF9A  F000         	goto	i2l1189
  1312  00010A                     i2u28_40:
  1313  00010A                     
  1314                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  1315  00010A  0E60               	movlw	low _eusart1RxStatusBuffer
  1316  00010C  2416               	addwf	_eusart1RxHead^0,w,c	;volatile
  1317  00010E  6ED9               	movwf	fsr2l,c
  1318  000110  6ADA               	clrf	fsr2h,c
  1319  000112  0E00               	movlw	high _eusart1RxStatusBuffer
  1320  000114  22DA               	addwfc	fsr2h,f,c
  1321  000116  0100               	movlb	0	; () banked
  1322  000118  84DF               	bsf	indf2,2,c
  1323  00011A                     
  1324                           ; BSR set to: 0
  1325                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  1326  00011A  D802               	call	i2u29_48
  1327  00011C  EF9A  F000         	goto	i2u29_49
  1328  000120                     i2u29_48:
  1329  000120  0005               	push	
  1330  000122  6EFA               	movwf	pclath,c
  1331  000124  500B               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  1332  000126  6EFD               	movwf	tosl,c
  1333  000128  500C               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  1334  00012A  6EFE               	movwf	tosh,c
  1335  00012C  50F8               	movf	tblptru,w,c
  1336  00012E  6EFF               	movwf	tosu,c
  1337  000130  50FA               	movf	pclath,w,c
  1338  000132  0012               	return		;indir
  1339  000134                     i2u29_49:
  1340  000134                     i2l1189:
  1341                           
  1342                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  1343  000134  0E60               	movlw	low _eusart1RxStatusBuffer
  1344  000136  2416               	addwf	_eusart1RxHead^0,w,c	;volatile
  1345  000138  6ED9               	movwf	fsr2l,c
  1346  00013A  6ADA               	clrf	fsr2h,c
  1347  00013C  0E00               	movlw	high _eusart1RxStatusBuffer
  1348  00013E  22DA               	addwfc	fsr2h,f,c
  1349  000140  50DF               	movf	indf2,w,c
  1350  000142  B4D8               	btfsc	status,2,c
  1351  000144  EFA6  F000         	goto	i2u30_41
  1352  000148  EFA8  F000         	goto	i2u30_40
  1353  00014C                     i2u30_41:
  1354  00014C  EFB7  F000         	goto	i2l1193
  1355  000150                     i2u30_40:
  1356  000150                     
  1357                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  1358  000150  D802               	call	i2u31_48
  1359  000152  EFB5  F000         	goto	i2u31_49
  1360  000156                     i2u31_48:
  1361  000156  0005               	push	
  1362  000158  6EFA               	movwf	pclath,c
  1363  00015A  5009               	movf	_EUSART1_ErrorHandler^0,w,c
  1364  00015C  6EFD               	movwf	tosl,c
  1365  00015E  500A               	movf	(_EUSART1_ErrorHandler+1)^0,w,c
  1366  000160  6EFE               	movwf	tosh,c
  1367  000162  50F8               	movf	tblptru,w,c
  1368  000164  6EFF               	movwf	tosu,c
  1369  000166  50FA               	movf	pclath,w,c
  1370  000168  0012               	return		;indir
  1371  00016A                     i2u31_49:
  1372                           
  1373                           ;mcc_generated_files/eusart1.c: 242:     } else {
  1374  00016A  EFB9  F000         	goto	i2l122
  1375  00016E                     i2l1193:
  1376                           
  1377                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  1378  00016E  EC51  F001         	call	_EUSART1_RxDataHandler	;wreg free
  1379  000172                     i2l122:
  1380  000172  0012               	return		;funcret
  1381  000174                     __end_of_EUSART1_Receive_ISR:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  1385 ;; Defined at:
  1386 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		None
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;Total ram usage:        0 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_EUSART1_Initialize
  1410 ;;		_EUSART1_Receive_ISR
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text16
  1415  00036E                     __ptext16:
  1416                           	callstack 0
  1417  00036E                     _EUSART1_DefaultOverrunErrorHandler:
  1418                           	callstack 25
  1419  00036E                     
  1420                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  1421  00036E  98AB               	bcf	171,4,c	;volatile
  1422                           
  1423                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  1424  000370  88AB               	bsf	171,4,c	;volatile
  1425  000372  0012               	return		;funcret
  1426  000374                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  1430 ;; Defined at:
  1431 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		None
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_EUSART1_Initialize
  1455 ;;		_EUSART1_Receive_ISR
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text17
  1460  000380                     __ptext17:
  1461                           	callstack 0
  1462  000380                     _EUSART1_DefaultFramingErrorHandler:
  1463                           	callstack 25
  1464  000380  0012               	return		;funcret
  1465  000382                     __end_of_EUSART1_DefaultFramingErrorHandler:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  1469 ;; Defined at:
  1470 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 1
  1491 ;; This function calls:
  1492 ;;		_EUSART1_RxDataHandler
  1493 ;; This function is called by:
  1494 ;;		_EUSART1_Initialize
  1495 ;;		_EUSART1_Receive_ISR
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text18
  1500  000374                     __ptext18:
  1501                           	callstack 0
  1502  000374                     _EUSART1_DefaultErrorHandler:
  1503                           	callstack 24
  1504  000374                     
  1505                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  1506  000374  EC51  F001         	call	_EUSART1_RxDataHandler	;wreg free
  1507  000378  0012               	return		;funcret
  1508  00037A                     __end_of_EUSART1_DefaultErrorHandler:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _EUSART1_RxDataHandler *****************
  1512 ;; Defined at:
  1513 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;Total ram usage:        0 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_EUSART1_Receive_ISR
  1537 ;;		_EUSART1_DefaultErrorHandler
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text19
  1542  0002A2                     __ptext19:
  1543                           	callstack 0
  1544  0002A2                     _EUSART1_RxDataHandler:
  1545                           	callstack 25
  1546  0002A2                     
  1547                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1548  0002A2  0EA0               	movlw	low _eusart1RxBuffer
  1549  0002A4  2416               	addwf	_eusart1RxHead^0,w,c	;volatile
  1550  0002A6  6ED9               	movwf	fsr2l,c
  1551  0002A8  6ADA               	clrf	fsr2h,c
  1552  0002AA  0E00               	movlw	high _eusart1RxBuffer
  1553  0002AC  22DA               	addwfc	fsr2h,f,c
  1554  0002AE  CFAE FFDF          	movff	4014,indf2	;volatile
  1555  0002B2  2A16               	incf	_eusart1RxHead^0,f,c	;volatile
  1556  0002B4                     
  1557                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1558  0002B4  0E3F               	movlw	63
  1559  0002B6  6416               	cpfsgt	_eusart1RxHead^0,c	;volatile
  1560  0002B8  EF60  F001         	goto	i2u23_41
  1561  0002BC  EF62  F001         	goto	i2u23_40
  1562  0002C0                     i2u23_41:
  1563  0002C0  EF64  F001         	goto	i2l1123
  1564  0002C4                     i2u23_40:
  1565  0002C4                     
  1566                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  1567  0002C4  0E00               	movlw	0
  1568  0002C6  6E16               	movwf	_eusart1RxHead^0,c	;volatile
  1569  0002C8                     i2l1123:
  1570                           
  1571                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  1572  0002C8  2A14               	incf	_eusart1RxCount^0,f,c	;volatile
  1573  0002CA  0012               	return		;funcret
  1574  0002CC                     __end_of_EUSART1_RxDataHandler:
  1575                           	callstack 0
  1576  0000                     
  1577                           	psect	text20
  1578  000000                     __ptext20:
  1579                           	callstack 0
  1580  000000                     
  1581                           	psect	rparam
  1582  0000                     
  1583                           	psect	temp
  1584  000020                     btemp:
  1585                           	callstack 0
  1586  000020                     	ds	1
  1587  0000                     int$flags	set	btemp
  1588  0000                     wtemp8	set	btemp+1
  1589  0000                     ttemp5	set	btemp+1
  1590  0000                     ttemp6	set	btemp+4
  1591  0000                     ttemp7	set	btemp+8
  1592                           
  1593                           	psect	idloc
  1594                           
  1595                           ;Config register IDLOC0 @ 0x200000
  1596                           ;	unspecified, using default values
  1597  200000                     	org	2097152
  1598  200000  FF                 	db	255
  1599                           
  1600                           ;Config register IDLOC1 @ 0x200001
  1601                           ;	unspecified, using default values
  1602  200001                     	org	2097153
  1603  200001  FF                 	db	255
  1604                           
  1605                           ;Config register IDLOC2 @ 0x200002
  1606                           ;	unspecified, using default values
  1607  200002                     	org	2097154
  1608  200002  FF                 	db	255
  1609                           
  1610                           ;Config register IDLOC3 @ 0x200003
  1611                           ;	unspecified, using default values
  1612  200003                     	org	2097155
  1613  200003  FF                 	db	255
  1614                           
  1615                           ;Config register IDLOC4 @ 0x200004
  1616                           ;	unspecified, using default values
  1617  200004                     	org	2097156
  1618  200004  FF                 	db	255
  1619                           
  1620                           ;Config register IDLOC5 @ 0x200005
  1621                           ;	unspecified, using default values
  1622  200005                     	org	2097157
  1623  200005  FF                 	db	255
  1624                           
  1625                           ;Config register IDLOC6 @ 0x200006
  1626                           ;	unspecified, using default values
  1627  200006                     	org	2097158
  1628  200006  FF                 	db	255
  1629                           
  1630                           ;Config register IDLOC7 @ 0x200007
  1631                           ;	unspecified, using default values
  1632  200007                     	org	2097159
  1633  200007  FF                 	db	255
  1634                           
  1635                           	psect	config
  1636                           
  1637                           ; Padding undefined space
  1638  300000                     	org	3145728
  1639  300000  FF                 	db	255
  1640                           
  1641                           ;Config register CONFIG1H @ 0x300001
  1642                           ;	Oscillator Selection bits
  1643                           ;	FOSC = INTIO67, Internal oscillator block
  1644                           ;	4X PLL Enable
  1645                           ;	PLLCFG = OFF, Oscillator used directly
  1646                           ;	Primary clock enable bit
  1647                           ;	PRICLKEN = ON, Primary clock enabled
  1648                           ;	Fail-Safe Clock Monitor Enable bit
  1649                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1650                           ;	Internal/External Oscillator Switchover bit
  1651                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1652  300001                     	org	3145729
  1653  300001  28                 	db	40
  1654                           
  1655                           ;Config register CONFIG2L @ 0x300002
  1656                           ;	Power-up Timer Enable bit
  1657                           ;	PWRTEN = OFF, Power up timer disabled
  1658                           ;	Brown-out Reset Enable bits
  1659                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1660                           ;	Brown Out Reset Voltage bits
  1661                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1662  300002                     	org	3145730
  1663  300002  1F                 	db	31
  1664                           
  1665                           ;Config register CONFIG2H @ 0x300003
  1666                           ;	Watchdog Timer Enable bits
  1667                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1668                           ;	Watchdog Timer Postscale Select bits
  1669                           ;	WDTPS = 32768, 1:32768
  1670  300003                     	org	3145731
  1671  300003  3C                 	db	60
  1672                           
  1673                           ; Padding undefined space
  1674  300004                     	org	3145732
  1675  300004  FF                 	db	255
  1676                           
  1677                           ;Config register CONFIG3H @ 0x300005
  1678                           ;	CCP2 MUX bit
  1679                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1680                           ;	PORTB A/D Enable bit
  1681                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1682                           ;	P3A/CCP3 Mux bit
  1683                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1684                           ;	HFINTOSC Fast Start-up
  1685                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1686                           ;	Timer3 Clock input mux bit
  1687                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1688                           ;	ECCP2 B output mux bit
  1689                           ;	P2BMX = PORTB5, P2B is on RB5
  1690                           ;	MCLR Pin Enable bit
  1691                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1692  300005                     	org	3145733
  1693  300005  BF                 	db	191
  1694                           
  1695                           ;Config register CONFIG4L @ 0x300006
  1696                           ;	Stack Full/Underflow Reset Enable bit
  1697                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1698                           ;	Single-Supply ICSP Enable bit
  1699                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1700                           ;	Extended Instruction Set Enable bit
  1701                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1702                           ;	Background Debug
  1703                           ;	DEBUG = OFF, Disabled
  1704  300006                     	org	3145734
  1705  300006  85                 	db	133
  1706                           
  1707                           ; Padding undefined space
  1708  300007                     	org	3145735
  1709  300007  FF                 	db	255
  1710                           
  1711                           ;Config register CONFIG5L @ 0x300008
  1712                           ;	Code Protection Block 0
  1713                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1714                           ;	Code Protection Block 1
  1715                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1716                           ;	Code Protection Block 2
  1717                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1718                           ;	Code Protection Block 3
  1719                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1720  300008                     	org	3145736
  1721  300008  0F                 	db	15
  1722                           
  1723                           ;Config register CONFIG5H @ 0x300009
  1724                           ;	Boot Block Code Protection bit
  1725                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1726                           ;	Data EEPROM Code Protection bit
  1727                           ;	CPD = OFF, Data EEPROM not code-protected
  1728  300009                     	org	3145737
  1729  300009  C0                 	db	192
  1730                           
  1731                           ;Config register CONFIG6L @ 0x30000A
  1732                           ;	Write Protection Block 0
  1733                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1734                           ;	Write Protection Block 1
  1735                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1736                           ;	Write Protection Block 2
  1737                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1738                           ;	Write Protection Block 3
  1739                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1740  30000A                     	org	3145738
  1741  30000A  0F                 	db	15
  1742                           
  1743                           ;Config register CONFIG6H @ 0x30000B
  1744                           ;	Configuration Register Write Protection bit
  1745                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1746                           ;	Boot Block Write Protection bit
  1747                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1748                           ;	Data EEPROM Write Protection bit
  1749                           ;	WRTD = OFF, Data EEPROM not write-protected
  1750  30000B                     	org	3145739
  1751  30000B  E0                 	db	224
  1752                           
  1753                           ;Config register CONFIG7L @ 0x30000C
  1754                           ;	Table Read Protection Block 0
  1755                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1756                           ;	Table Read Protection Block 1
  1757                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1758                           ;	Table Read Protection Block 2
  1759                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1760                           ;	Table Read Protection Block 3
  1761                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1762  30000C                     	org	3145740
  1763  30000C  0F                 	db	15
  1764                           
  1765                           ;Config register CONFIG7H @ 0x30000D
  1766                           ;	Boot Block Table Read Protection bit
  1767                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1768  30000D                     	org	3145741
  1769  30000D  40                 	db	64
  1770                           tosu	equ	0xFFF
  1771                           tosh	equ	0xFFE
  1772                           tosl	equ	0xFFD
  1773                           stkptr	equ	0xFFC
  1774                           pclatu	equ	0xFFB
  1775                           pclath	equ	0xFFA
  1776                           pcl	equ	0xFF9
  1777                           tblptru	equ	0xFF8
  1778                           tblptrh	equ	0xFF7
  1779                           tblptrl	equ	0xFF6
  1780                           tablat	equ	0xFF5
  1781                           prodh	equ	0xFF4
  1782                           prodl	equ	0xFF3
  1783                           indf0	equ	0xFEF
  1784                           postinc0	equ	0xFEE
  1785                           postdec0	equ	0xFED
  1786                           preinc0	equ	0xFEC
  1787                           plusw0	equ	0xFEB
  1788                           fsr0h	equ	0xFEA
  1789                           fsr0l	equ	0xFE9
  1790                           wreg	equ	0xFE8
  1791                           indf1	equ	0xFE7
  1792                           postinc1	equ	0xFE6
  1793                           postdec1	equ	0xFE5
  1794                           preinc1	equ	0xFE4
  1795                           plusw1	equ	0xFE3
  1796                           fsr1h	equ	0xFE2
  1797                           fsr1l	equ	0xFE1
  1798                           bsr	equ	0xFE0
  1799                           indf2	equ	0xFDF
  1800                           postinc2	equ	0xFDE
  1801                           postdec2	equ	0xFDD
  1802                           preinc2	equ	0xFDC
  1803                           plusw2	equ	0xFDB
  1804                           fsr2h	equ	0xFDA
  1805                           fsr2l	equ	0xFD9
  1806                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         153
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      31
    BANK0           160      0     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1005
                 _EUSART1_Initialize
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6      1F       1       33.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9F      12        0.0%
DATA                 0      0      9F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 11 18:06:48 2021

                      _eusart1TxBufferRemaining 0017                                              l81 037E  
                                            l75 01E6                                              l94 0236  
                                            u20 0328                                              u21 0324  
                                           l201 0328                                             l141 0358  
                                           l150 034E                                             l144 036C  
                                           l138 0362                                             l147 0344  
                                           l228 02A0                                             l165 037C  
                                           l195 033A                                             l198 031A  
                                           l973 037A                                             l981 029E  
                                           l983 030E                                             l975 0278  
                                           l985 037E                                             l977 0284  
                                           l979 0286                                             u240 01F8  
                                           u241 01F4                                             u250 022A  
                                           u251 0226                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1111 0350                                            l1113 0364  
                                          l1105 0346                                            l1201 0336  
                                          l1107 033C                                            l1131 0190  
                                          l1109 035A                                            l1141 01A4  
                                          l1133 0194                                            l1125 0174  
                                          l1221 02F6                                            l1143 01B0  
                                          l1135 0198                                            l1127 0176  
                                          l1223 02F8                                            l1161 021A  
                                          l1153 01E8                                            l1145 01BC  
                                          l1137 019C                                            l1129 0182  
                                          l1225 02FE                                            l1171 0234  
                                          l1163 022A                                            l1155 01E8  
                                          l1147 01E4                                            l1139 01A0  
                                          l1227 0302                                            l1219 02F2  
                                          l1165 022E                                            l1157 01F8  
                                          l1167 0230                                            l1159 0218  
                                          l1169 0232                                            l1195 032A  
                                          l1197 032E                                            l1199 0332  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _WPUB 000F61  
                                          _main 02F2                                   ?_EUSART1_Read 001A  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr2l 000FD9                                            btemp 0020  
                                          start 00B0                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 000000                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 032A                           _eusart1RxStatusBuffer 0060  
                                         ?_main 001A                                           i2l112 0274  
                                         i2l122 0172                                           i2l115 0276  
                                         i2l132 0372                                           i2l126 02CA  
                                         i2l135 0378                                           i2l129 0380  
                                         i2l171 0062                                           i2l172 009C  
                                         i2l176 009C                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                          _EUSART1_Transmit_ISR 0238                                           pclath 000FFA  
                                ??_EUSART1_Read 001E                                           ttemp5 0021  
                                         ttemp6 0024                                           ttemp7 0028  
                                         status 000FD8                                           wtemp8 0021  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 0382  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 001A  
           ?_EUSART1_DefaultFramingErrorHandler 001A              _EUSART1_DefaultFramingErrorHandler 0380  
                               __initialization 02CC                      __end_of_EUSART1_Initialize 01E8  
                                  __end_of_main 030E                     ?_INTERRUPT_InterruptManager 001A  
                                        ??_main 0020                                   __activetblptr 000002  
                         ?_EUSART1_Transmit_ISR 001A                                          _ANSELA 000F38  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0002                                          i2l1031 0258  
                                        i2l1121 02C4                                          i2l1033 025A  
                                        i2l1123 02C8                                          i2l1115 02A2  
                                        i2l1035 026A                                          i2l1027 0238  
                                        i2l1211 0036                                          i2l1117 02B2  
                                        i2l1037 026E                                          i2l1029 0248  
                                        i2l1213 0044                                          i2l1119 02B4  
                                        i2l1151 0374                                          i2l1215 0070  
                                        i2l1207 001A                                          i2l1217 007E  
                                        i2l1209 0028                                          i2l1149 036E  
                                        i2l1181 00E2                                          i2l1191 0150  
                                        i2l1183 00FC                                          i2l1175 00B4  
                                        i2l1193 016E                                          i2l1185 010A  
                                        i2l1177 00C4                                          i2l1187 011A  
                                        i2l1179 00D2                                          i2l1189 0134  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          i2u8_40 0248  
                                        i2u8_41 0244                                          i2u9_40 026A  
                                        i2u9_41 0266                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                        ?_EUSART1_SetErrorHandler 001E  
                                        clear_0 02D2                                          clear_1 02DE  
                                        isa$std 000001                ??_EUSART1_SetOverrunErrorHandler 0020  
               ?_EUSART1_SetOverrunErrorHandler 001E                                          tblptru 000FF8  
                               _eusart1RxBuffer 00A0                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0001                               _SYSTEM_Initialize 032A  
                                    __accesstop 0060                         __end_of__initialization 02E4  
                            ?_SYSTEM_Initialize 001A                                   ___rparam_used 000001  
                __size_of_EUSART1_RxDataHandler 002A                   __end_of_EUSART1_RxDataHandler 02CC  
                                __pcstackCOMRAM 001A                             ??_SYSTEM_Initialize 0020  
                          __end_of_EUSART1_Read 0238                          ??_EUSART1_Transmit_ISR 001A  
                   __end_of_EUSART1_Receive_ISR 0174                       __end_of_SYSTEM_Initialize 033C  
                                 _eusart1RxHead 0016                                   _eusart1TxHead 0019  
                                 _eusart1RxTail 0015                                      __pbssBANK0 0060  
                                 _eusart1TxTail 0018               _EUSART1_TxDefaultInterruptHandler 0011  
               ??_EUSART1_SetRxInterruptHandler 0020                 __end_of_EUSART1_SetErrorHandler 036E  
        __end_of_EUSART1_SetFramingErrorHandler 0364         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 035A                    ?_EUSART1_DefaultErrorHandler 001A  
                                       _OSCCON2 000FD2                                         i2u30_40 0150  
                                       i2u30_41 014C                                         i2u23_40 02C4  
                                       i2u23_41 02C0                                         i2u31_48 0156  
                                       i2u32_40 0028                                         i2u31_49 016A  
                                       i2u32_41 0024                                         i2u33_40 0036  
                                       i2u33_41 0032                                         i2u26_40 00D2  
                                       i2u34_40 0044                                         i2u26_41 00CE  
                                       i2u34_41 0040                                         i2u28_40 010A  
                                       i2u27_48 00E8                                         i2u36_40 0070  
                                       i2u35_48 004A                                         i2u28_41 0106  
                                       i2u27_49 00FC                                         i2u36_41 006C  
                                       i2u35_49 005E                                         i2u37_40 007E  
                                       i2u37_41 007A                                         i2u29_48 0120  
                                       i2u29_49 0134                                         _OSCTUNE 000F9B  
                                       i2u38_48 0084                                         i2u38_49 0098  
                                       _SPBRGH1 000FB0                                         __Hparam 0000  
                                       __Lparam 0000                             _EUSART1_is_rx_ready 037E  
                                       __pcinit 02CC                                         __ramtop 1000  
                                       __ptext0 02F2                                         __ptext1 032A  
                                       __ptext2 0278                                         __ptext3 030E  
                                       __ptext4 037A                                         __ptext5 0174  
                                       __ptext6 033C                                         __ptext7 0346  
                                       __ptext8 0350                                         __ptext9 035A  
                         _OSCILLATOR_Initialize 030E                              _EUSART1_Initialize 0174  
                      ??_PIN_MANAGER_Initialize 001E                   ??_EUSART1_DefaultErrorHandler 001A  
                    __size_of_SYSTEM_Initialize 0012                            end_of_initialization 02E4  
                          ?_EUSART1_is_rx_ready 001A                             ?_EUSART1_Initialize 001A  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 000B  
         __end_of_EUSART1_SetRxInterruptHandler 0350          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 0346                                         postinc0 000FEE  
                         __size_of_EUSART1_Read 0050                            ??_EUSART1_Initialize 0020  
                       fp__EUSART1_Transmit_ISR 0000                __size_of_EUSART1_SetErrorHandler 000A  
                         ??_EUSART1_is_rx_ready 001E                                    _EUSART1_Read 01E8  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 037E  
                        ?_OSCILLATOR_Initialize 001A                             start_initialization 02CC  
               __size_of_PIN_MANAGER_Initialize 002A   EUSART1_SetRxInterruptHandler@interruptHandler 001E  
 EUSART1_SetTxInterruptHandler@interruptHandler 001E                          fp__EUSART1_Receive_ISR 0000  
                         _EUSART1_RxDataHandler 02A2                  ?_EUSART1_SetRxInterruptHandler 001E  
                                _eusart1RxCount 0014                                     __pbssCOMRAM 0001  
             _EUSART1_RxDefaultInterruptHandler 000F                   __size_of_EUSART1_Transmit_ISR 0040  
               ??_EUSART1_SetTxInterruptHandler 0020                ??_EUSART1_SetFramingErrorHandler 0020  
               ?_EUSART1_SetFramingErrorHandler 001E                    __size_of_EUSART1_Receive_ISR 00C0  
                        _PIN_MANAGER_Initialize 0278                                       __pintcode 0008  
                  ??_INTERRUPT_InterruptManager 001A                                        _BAUDCON1 000FB8  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 0374  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 001A  
           ?_EUSART1_DefaultOverrunErrorHandler 001A              _EUSART1_DefaultOverrunErrorHandler 036E  
                          _EUSART1_ErrorHandler 0009                         _EUSART1_SetErrorHandler 0364  
                          _INTERRUPT_Initialize 037A         EUSART1_SetErrorHandler@interruptHandler 001E  
                                      _PIE1bits 000F9D             __size_of_INTERRUPT_InterruptManager 00A8  
                                      _PIR1bits 000F9E                          ?_EUSART1_RxDataHandler 001A  
                                      _RCONbits 000FD0                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 001A                           EUSART1_Read@readValue 001E  
         __end_of_EUSART1_SetTxInterruptHandler 0346          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 033C                                        __Hrparam 0000  
                                      __Lrparam 0000                         ??_OSCILLATOR_Initialize 001E  
                   __size_of_EUSART1_Initialize 0074                       ??_EUSART1_SetErrorHandler 0020  
           __end_of_EUSART1_DefaultErrorHandler 037A                     _EUSART1_DefaultErrorHandler 0374  
                   __end_of_EUSART1_is_rx_ready 0380                                        __ptext10 0364  
                                      __ptext11 037E                                        __ptext20 0000  
                                      __ptext12 01E8                                        __ptext14 0238  
                                      __ptext15 00B4                                        __ptext16 036E  
                                      __ptext17 0380                                        __ptext18 0374  
                                      __ptext19 02A2                                   __size_of_main 001C  
EUSART1_SetOverrunErrorHandler@interruptHandler 001E                                        isa$xinst 000000  
                                      int$flags 0020              __end_of_INTERRUPT_InterruptManager 00B0  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 000D  
                           _EUSART1_Receive_ISR 00B4                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 001E                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 001A                         ?_PIN_MANAGER_Initialize 001A  
        __end_of_EUSART1_SetOverrunErrorHandler 035A         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 0350                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 0278  EUSART1_SetFramingErrorHandler@interruptHandler 001E  
                ?_EUSART1_SetTxInterruptHandler 001E                              _eusart1RxLastError 0013  
                         ??_EUSART1_Receive_ISR 001A                  __end_of_PIN_MANAGER_Initialize 02A2  
                       ??_EUSART1_RxDataHandler 001A  
