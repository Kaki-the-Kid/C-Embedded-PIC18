

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Oct 21 13:14:20 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107  0000                     
   108                           ; Version 2.05
   109                           ; Generated 20/12/2018 GMT
   110                           ; 
   111                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18F26K22 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     
   143                           	psect	idataBANK0
   144  002B92                     __pidataBANK0:
   145                           	opt callstack 0
   146                           
   147                           ;initializer for stoa@F1144
   148  002B92  28                 	db	40
   149  002B93  6E                 	db	110
   150  002B94  75                 	db	117
   151  002B95  6C                 	db	108
   152  002B96  6C                 	db	108
   153  002B97  29                 	db	41
   154  002B98  00                 	db	0
   155                           
   156                           ;initializer for _USER_PASS
   157  002B99  B6                 	db	low STR_55
   158  002B9A  FF                 	db	high STR_55
   159                           
   160                           ;initializer for _USER_NAME
   161  002B9B  9A                 	db	low STR_54
   162  002B9C  FF                 	db	high STR_54
   163                           
   164                           ;initializer for _display1
   165  002B9D  FF                 	db	255
   166                           
   167                           ;initializer for _display0
   168  002B9E  FF                 	db	255
   169                           
   170                           	psect	idataBANK1
   171  002C2A                     __pidataBANK1:
   172                           	opt callstack 0
   173                           
   174                           ;initializer for _PORT
   175  002C2A  DF                 	db	low STR_2
   176  002C2B  FF                 	db	high STR_2
   177                           
   178                           	psect	idataBANK2
   179  002C2C                     __pidataBANK2:
   180                           	opt callstack 0
   181                           
   182                           ;initializer for _OS
   183  002C2C  BE                 	db	low STR_1
   184  002C2D  FF                 	db	high STR_1
   185                           
   186                           	psect	mediumconst
   187  00FBC2                     __pmediumconst:
   188                           	opt callstack 0
   189  00FBC2  00                 	db	0
   190  00FBC3  0000               	dw	0
   191  00FBC5  4B00               	dw	19200
   192  00FBC7                     __end_of_toint:
   193                           	opt callstack 0
   194  00FBC7  FF                 	db	255
   195  00FBC8                     __end_of_clear:
   196                           	opt callstack 0
   197  0000                     _VREFCON0bits	set	3906
   198  0000                     _VREFCON0	set	3906
   199  0000                     _ANSELA	set	3896
   200  0000                     _ANSELB	set	3897
   201  0000                     _ANSELC	set	3898
   202  0000                     _PORTB	set	3969
   203  0000                     _LATCbits	set	3979
   204  0000                     _LATAbits	set	3977
   205  0000                     _T2CONbits	set	4026
   206  0000                     _T2CON	set	4026
   207  0000                     _TMR2	set	4028
   208  0000                     _PR2	set	4027
   209  0000                     _ADCON0bits	set	4034
   210  0000                     _ADRESH	set	4036
   211  0000                     _ADRESL	set	4035
   212  0000                     _ADCON2	set	4032
   213  0000                     _ADCON1	set	4033
   214  0000                     _ADCON0	set	4034
   215  0000                     _INTCON2bits	set	4081
   216  0000                     _WPUB	set	3937
   217  0000                     _TRISC	set	3988
   218  0000                     _TRISB	set	3987
   219  0000                     _TRISA	set	3986
   220  0000                     _LATC	set	3979
   221  0000                     _LATB	set	3978
   222  0000                     _LATA	set	3977
   223  0000                     _OSCTUNE	set	3995
   224  0000                     _OSCCON2	set	4050
   225  0000                     _OSCCON	set	4051
   226  0000                     _PIR1bits	set	3998
   227  0000                     _INTCONbits	set	4082
   228  0000                     _RCONbits	set	4048
   229  0000                     _RCREG1	set	4014
   230  0000                     _RCSTA1bits	set	4011
   231  0000                     _TXREG1	set	4013
   232  0000                     _TXSTA1bits	set	4012
   233  0000                     _SPBRGH1	set	4016
   234  0000                     _SPBRG1	set	4015
   235  0000                     _TXSTA1	set	4012
   236  0000                     _RCSTA1	set	4011
   237  0000                     _BAUDCON1	set	4024
   238  0000                     _PIE1bits	set	3997
   239  0000                     _PLLRDY	set	32407
   240  00FBC8                     STR_37:
   241  00FBC8  54                 	db	84	;'T'
   242  00FBC9  68                 	db	104	;'h'
   243  00FBCA  65                 	db	101	;'e'
   244  00FBCB  73                 	db	115	;'s'
   245  00FBCC  65                 	db	101	;'e'
   246  00FBCD  20                 	db	32
   247  00FBCE  73                 	db	115	;'s'
   248  00FBCF  68                 	db	104	;'h'
   249  00FBD0  65                 	db	101	;'e'
   250  00FBD1  6C                 	db	108	;'l'
   251  00FBD2  6C                 	db	108	;'l'
   252  00FBD3  20                 	db	32
   253  00FBD4  63                 	db	99	;'c'
   254  00FBD5  6F                 	db	111	;'o'
   255  00FBD6  6D                 	db	109	;'m'
   256  00FBD7  6D                 	db	109	;'m'
   257  00FBD8  61                 	db	97	;'a'
   258  00FBD9  6E                 	db	110	;'n'
   259  00FBDA  64                 	db	100	;'d'
   260  00FBDB  73                 	db	115	;'s'
   261  00FBDC  20                 	db	32
   262  00FBDD  61                 	db	97	;'a'
   263  00FBDE  72                 	db	114	;'r'
   264  00FBDF  65                 	db	101	;'e'
   265  00FBE0  20                 	db	32
   266  00FBE1  64                 	db	100	;'d'
   267  00FBE2  65                 	db	101	;'e'
   268  00FBE3  66                 	db	102	;'f'
   269  00FBE4  69                 	db	105	;'i'
   270  00FBE5  6E                 	db	110	;'n'
   271  00FBE6  65                 	db	101	;'e'
   272  00FBE7  64                 	db	100	;'d'
   273  00FBE8  20                 	db	32
   274  00FBE9  69                 	db	105	;'i'
   275  00FBEA  6E                 	db	110	;'n'
   276  00FBEB  74                 	db	116	;'t'
   277  00FBEC  65                 	db	101	;'e'
   278  00FBED  72                 	db	114	;'r'
   279  00FBEE  6E                 	db	110	;'n'
   280  00FBEF  61                 	db	97	;'a'
   281  00FBF0  6C                 	db	108	;'l'
   282  00FBF1  6C                 	db	108	;'l'
   283  00FBF2  79                 	db	121	;'y'
   284  00FBF3  2E                 	db	46
   285  00FBF4  20                 	db	32
   286  00FBF5  54                 	db	84	;'T'
   287  00FBF6  79                 	db	121	;'y'
   288  00FBF7  70                 	db	112	;'p'
   289  00FBF8  65                 	db	101	;'e'
   290  00FBF9  20                 	db	32
   291  00FBFA  27                 	db	39
   292  00FBFB  68                 	db	104	;'h'
   293  00FBFC  65                 	db	101	;'e'
   294  00FBFD  6C                 	db	108	;'l'
   295  00FBFE  70                 	db	112	;'p'
   296  00FBFF  27                 	db	39
   297  00FC00  20                 	db	32
   298  00FC01  74                 	db	116	;'t'
   299  00FC02  6F                 	db	111	;'o'
   300  00FC03  20                 	db	32
   301  00FC04  73                 	db	115	;'s'
   302  00FC05  65                 	db	101	;'e'
   303  00FC06  65                 	db	101	;'e'
   304  00FC07  20                 	db	32
   305  00FC08  74                 	db	116	;'t'
   306  00FC09  68                 	db	104	;'h'
   307  00FC0A  69                 	db	105	;'i'
   308  00FC0B  73                 	db	115	;'s'
   309  00FC0C  20                 	db	32
   310  00FC0D  6C                 	db	108	;'l'
   311  00FC0E  69                 	db	105	;'i'
   312  00FC0F  73                 	db	115	;'s'
   313  00FC10  74                 	db	116	;'t'
   314  00FC11  2E                 	db	46
   315  00FC12  0D                 	db	13
   316  00FC13  0A                 	db	10
   317  00FC14  00                 	db	0
   318  00FC15                     STR_30:
   319  00FC15  20                 	db	32
   320  00FC16  20                 	db	32
   321  00FC17  73                 	db	115	;'s'
   322  00FC18  65                 	db	101	;'e'
   323  00FC19  74                 	db	116	;'t'
   324  00FC1A  20                 	db	32
   325  00FC1B  74                 	db	116	;'t'
   326  00FC1C  65                 	db	101	;'e'
   327  00FC1D  6D                 	db	109	;'m'
   328  00FC1E  70                 	db	112	;'p'
   329  00FC1F  65                 	db	101	;'e'
   330  00FC20  72                 	db	114	;'r'
   331  00FC21  61                 	db	97	;'a'
   332  00FC22  74                 	db	116	;'t'
   333  00FC23  75                 	db	117	;'u'
   334  00FC24  72                 	db	114	;'r'
   335  00FC25  65                 	db	101	;'e'
   336  00FC26  20                 	db	32
   337  00FC27  2D                 	db	45
   338  00FC28  20                 	db	32
   339  00FC29  42                 	db	66	;'B'
   340  00FC2A  69                 	db	105	;'i'
   341  00FC2B  6E                 	db	110	;'n'
   342  00FC2C  64                 	db	100	;'d'
   343  00FC2D  20                 	db	32
   344  00FC2E  74                 	db	116	;'t'
   345  00FC2F  68                 	db	104	;'h'
   346  00FC30  65                 	db	101	;'e'
   347  00FC31  20                 	db	32
   348  00FC32  74                 	db	116	;'t'
   349  00FC33  69                 	db	105	;'i'
   350  00FC34  6D                 	db	109	;'m'
   351  00FC35  65                 	db	101	;'e'
   352  00FC36  72                 	db	114	;'r'
   353  00FC37  20                 	db	32
   354  00FC38  76                 	db	118	;'v'
   355  00FC39  61                 	db	97	;'a'
   356  00FC3A  6C                 	db	108	;'l'
   357  00FC3B  75                 	db	117	;'u'
   358  00FC3C  65                 	db	101	;'e'
   359  00FC3D  20                 	db	32
   360  00FC3E  74                 	db	116	;'t'
   361  00FC3F  6F                 	db	111	;'o'
   362  00FC40  20                 	db	32
   363  00FC41  0D                 	db	13
   364  00FC42  0A                 	db	10
   365  00FC43  09                 	db	9
   366  00FC44  09                 	db	9
   367  00FC45  20                 	db	32
   368  00FC46  20                 	db	32
   369  00FC47  20                 	db	32
   370  00FC48  20                 	db	32
   371  00FC49  61                 	db	97	;'a'
   372  00FC4A  76                 	db	118	;'v'
   373  00FC4B  65                 	db	101	;'e'
   374  00FC4C  72                 	db	114	;'r'
   375  00FC4D  61                 	db	97	;'a'
   376  00FC4E  67                 	db	103	;'g'
   377  00FC4F  65                 	db	101	;'e'
   378  00FC50  20                 	db	32
   379  00FC51  74                 	db	116	;'t'
   380  00FC52  65                 	db	101	;'e'
   381  00FC53  6D                 	db	109	;'m'
   382  00FC54  70                 	db	112	;'p'
   383  00FC55  65                 	db	101	;'e'
   384  00FC56  72                 	db	114	;'r'
   385  00FC57  61                 	db	97	;'a'
   386  00FC58  74                 	db	116	;'t'
   387  00FC59  75                 	db	117	;'u'
   388  00FC5A  72                 	db	114	;'r'
   389  00FC5B  65                 	db	101	;'e'
   390  00FC5C  2E                 	db	46
   391  00FC5D  0D                 	db	13
   392  00FC5E  0A                 	db	10
   393  00FC5F  00                 	db	0
   394  00FC60                     STR_15:
   395  00FC60  4E                 	db	78	;'N'
   396  00FC61  6F                 	db	111	;'o'
   397  00FC62  74                 	db	116	;'t'
   398  00FC63  65                 	db	101	;'e'
   399  00FC64  3A                 	db	58	;':'
   400  00FC65  20                 	db	32
   401  00FC66  74                 	db	116	;'t'
   402  00FC67  69                 	db	105	;'i'
   403  00FC68  6D                 	db	109	;'m'
   404  00FC69  65                 	db	101	;'e'
   405  00FC6A  72                 	db	114	;'r'
   406  00FC6B  20                 	db	32
   407  00FC6C  69                 	db	105	;'i'
   408  00FC6D  73                 	db	115	;'s'
   409  00FC6E  20                 	db	32
   410  00FC6F  6E                 	db	110	;'n'
   411  00FC70  6F                 	db	111	;'o'
   412  00FC71  74                 	db	116	;'t'
   413  00FC72  20                 	db	32
   414  00FC73  72                 	db	114	;'r'
   415  00FC74  75                 	db	117	;'u'
   416  00FC75  6E                 	db	110	;'n'
   417  00FC76  6E                 	db	110	;'n'
   418  00FC77  69                 	db	105	;'i'
   419  00FC78  6E                 	db	110	;'n'
   420  00FC79  67                 	db	103	;'g'
   421  00FC7A  2C                 	db	44
   422  00FC7B  20                 	db	32
   423  00FC7C  75                 	db	117	;'u'
   424  00FC7D  73                 	db	115	;'s'
   425  00FC7E  65                 	db	101	;'e'
   426  00FC7F  20                 	db	32
   427  00FC80  27                 	db	39
   428  00FC81  74                 	db	116	;'t'
   429  00FC82  69                 	db	105	;'i'
   430  00FC83  6D                 	db	109	;'m'
   431  00FC84  65                 	db	101	;'e'
   432  00FC85  72                 	db	114	;'r'
   433  00FC86  20                 	db	32
   434  00FC87  73                 	db	115	;'s'
   435  00FC88  74                 	db	116	;'t'
   436  00FC89  61                 	db	97	;'a'
   437  00FC8A  72                 	db	114	;'r'
   438  00FC8B  74                 	db	116	;'t'
   439  00FC8C  27                 	db	39
   440  00FC8D  20                 	db	32
   441  00FC8E  74                 	db	116	;'t'
   442  00FC8F  6F                 	db	111	;'o'
   443  00FC90  20                 	db	32
   444  00FC91  73                 	db	115	;'s'
   445  00FC92  74                 	db	116	;'t'
   446  00FC93  61                 	db	97	;'a'
   447  00FC94  72                 	db	114	;'r'
   448  00FC95  74                 	db	116	;'t'
   449  00FC96  2E                 	db	46
   450  00FC97  0D                 	db	13
   451  00FC98  0A                 	db	10
   452  00FC99  00                 	db	0
   453  00FC9A                     STR_35:
   454  00FC9A  20                 	db	32
   455  00FC9B  20                 	db	32
   456  00FC9C  2D                 	db	45
   457  00FC9D  68                 	db	104	;'h'
   458  00FC9E  2C                 	db	44
   459  00FC9F  20                 	db	32
   460  00FCA0  2D                 	db	45
   461  00FCA1  2D                 	db	45
   462  00FCA2  68                 	db	104	;'h'
   463  00FCA3  65                 	db	101	;'e'
   464  00FCA4  6C                 	db	108	;'l'
   465  00FCA5  70                 	db	112	;'p'
   466  00FCA6  09                 	db	9
   467  00FCA7  20                 	db	32
   468  00FCA8  20                 	db	32
   469  00FCA9  2D                 	db	45
   470  00FCAA  20                 	db	32
   471  00FCAB  50                 	db	80	;'P'
   472  00FCAC  72                 	db	114	;'r'
   473  00FCAD  69                 	db	105	;'i'
   474  00FCAE  6E                 	db	110	;'n'
   475  00FCAF  74                 	db	116	;'t'
   476  00FCB0  73                 	db	115	;'s'
   477  00FCB1  20                 	db	32
   478  00FCB2  68                 	db	104	;'h'
   479  00FCB3  65                 	db	101	;'e'
   480  00FCB4  6C                 	db	108	;'l'
   481  00FCB5  70                 	db	112	;'p'
   482  00FCB6  20                 	db	32
   483  00FCB7  69                 	db	105	;'i'
   484  00FCB8  6E                 	db	110	;'n'
   485  00FCB9  66                 	db	102	;'f'
   486  00FCBA  6F                 	db	111	;'o'
   487  00FCBB  72                 	db	114	;'r'
   488  00FCBC  6D                 	db	109	;'m'
   489  00FCBD  61                 	db	97	;'a'
   490  00FCBE  74                 	db	116	;'t'
   491  00FCBF  69                 	db	105	;'i'
   492  00FCC0  6F                 	db	111	;'o'
   493  00FCC1  6E                 	db	110	;'n'
   494  00FCC2  2E                 	db	46
   495  00FCC3  0D                 	db	13
   496  00FCC4  0A                 	db	10
   497  00FCC5  00                 	db	0
   498  00FCC6                     STR_36:
   499  00FCC6  49                 	db	73	;'I'
   500  00FCC7  6E                 	db	110	;'n'
   501  00FCC8  63                 	db	99	;'c'
   502  00FCC9  6F                 	db	111	;'o'
   503  00FCCA  72                 	db	114	;'r'
   504  00FCCB  72                 	db	114	;'r'
   505  00FCCC  65                 	db	101	;'e'
   506  00FCCD  63                 	db	99	;'c'
   507  00FCCE  74                 	db	116	;'t'
   508  00FCCF  20                 	db	32
   509  00FCD0  75                 	db	117	;'u'
   510  00FCD1  73                 	db	115	;'s'
   511  00FCD2  61                 	db	97	;'a'
   512  00FCD3  67                 	db	103	;'g'
   513  00FCD4  65                 	db	101	;'e'
   514  00FCD5  2C                 	db	44
   515  00FCD6  20                 	db	32
   516  00FCD7  70                 	db	112	;'p'
   517  00FCD8  6C                 	db	108	;'l'
   518  00FCD9  65                 	db	101	;'e'
   519  00FCDA  61                 	db	97	;'a'
   520  00FCDB  73                 	db	115	;'s'
   521  00FCDC  65                 	db	101	;'e'
   522  00FCDD  20                 	db	32
   523  00FCDE  74                 	db	116	;'t'
   524  00FCDF  72                 	db	114	;'r'
   525  00FCE0  79                 	db	121	;'y'
   526  00FCE1  20                 	db	32
   527  00FCE2  27                 	db	39
   528  00FCE3  74                 	db	116	;'t'
   529  00FCE4  69                 	db	105	;'i'
   530  00FCE5  6D                 	db	109	;'m'
   531  00FCE6  65                 	db	101	;'e'
   532  00FCE7  72                 	db	114	;'r'
   533  00FCE8  20                 	db	32
   534  00FCE9  2D                 	db	45
   535  00FCEA  2D                 	db	45
   536  00FCEB  68                 	db	104	;'h'
   537  00FCEC  65                 	db	101	;'e'
   538  00FCED  6C                 	db	108	;'l'
   539  00FCEE  70                 	db	112	;'p'
   540  00FCEF  27                 	db	39
   541  00FCF0  00                 	db	0
   542  00FCF1                     STR_11:
   543  00FCF1  0D                 	db	13
   544  00FCF2  54                 	db	84	;'T'
   545  00FCF3  65                 	db	101	;'e'
   546  00FCF4  6D                 	db	109	;'m'
   547  00FCF5  70                 	db	112	;'p'
   548  00FCF6  65                 	db	101	;'e'
   549  00FCF7  72                 	db	114	;'r'
   550  00FCF8  61                 	db	97	;'a'
   551  00FCF9  74                 	db	116	;'t'
   552  00FCFA  75                 	db	117	;'u'
   553  00FCFB  72                 	db	114	;'r'
   554  00FCFC  65                 	db	101	;'e'
   555  00FCFD  3A                 	db	58	;':'
   556  00FCFE  20                 	db	32
   557  00FCFF  25                 	db	37
   558  00FD00  64                 	db	100	;'d'
   559  00FD01  20                 	db	32
   560  00FD02  7C                 	db	124
   561  00FD03  20                 	db	32
   562  00FD04  41                 	db	65	;'A'
   563  00FD05  76                 	db	118	;'v'
   564  00FD06  65                 	db	101	;'e'
   565  00FD07  72                 	db	114	;'r'
   566  00FD08  61                 	db	97	;'a'
   567  00FD09  67                 	db	103	;'g'
   568  00FD0A  65                 	db	101	;'e'
   569  00FD0B  20                 	db	32
   570  00FD0C  54                 	db	84	;'T'
   571  00FD0D  65                 	db	101	;'e'
   572  00FD0E  6D                 	db	109	;'m'
   573  00FD0F  70                 	db	112	;'p'
   574  00FD10  65                 	db	101	;'e'
   575  00FD11  72                 	db	114	;'r'
   576  00FD12  61                 	db	97	;'a'
   577  00FD13  74                 	db	116	;'t'
   578  00FD14  75                 	db	117	;'u'
   579  00FD15  72                 	db	114	;'r'
   580  00FD16  65                 	db	101	;'e'
   581  00FD17  3A                 	db	58	;':'
   582  00FD18  20                 	db	32
   583  00FD19  25                 	db	37
   584  00FD1A  64                 	db	100	;'d'
   585  00FD1B  00                 	db	0
   586  00FD1C                     STR_7:
   587  00FD1C  2D                 	db	45
   588  00FD1D  2D                 	db	45
   589  00FD1E  2D                 	db	45
   590  00FD1F  3D                 	db	61	;'='
   591  00FD20  3D                 	db	61	;'='
   592  00FD21  3D                 	db	61	;'='
   593  00FD22  3D                 	db	61	;'='
   594  00FD23  3D                 	db	61	;'='
   595  00FD24  5D                 	db	93	;']'
   596  00FD25  20                 	db	32
   597  00FD26  54                 	db	84	;'T'
   598  00FD27  65                 	db	101	;'e'
   599  00FD28  6D                 	db	109	;'m'
   600  00FD29  70                 	db	112	;'p'
   601  00FD2A  65                 	db	101	;'e'
   602  00FD2B  72                 	db	114	;'r'
   603  00FD2C  61                 	db	97	;'a'
   604  00FD2D  74                 	db	116	;'t'
   605  00FD2E  75                 	db	117	;'u'
   606  00FD2F  72                 	db	114	;'r'
   607  00FD30  65                 	db	101	;'e'
   608  00FD31  20                 	db	32
   609  00FD32  4D                 	db	77	;'M'
   610  00FD33  6F                 	db	111	;'o'
   611  00FD34  6E                 	db	110	;'n'
   612  00FD35  69                 	db	105	;'i'
   613  00FD36  74                 	db	116	;'t'
   614  00FD37  6F                 	db	111	;'o'
   615  00FD38  72                 	db	114	;'r'
   616  00FD39  20                 	db	32
   617  00FD3A  5B                 	db	91	;'['
   618  00FD3B  3D                 	db	61	;'='
   619  00FD3C  3D                 	db	61	;'='
   620  00FD3D  3D                 	db	61	;'='
   621  00FD3E  3D                 	db	61	;'='
   622  00FD3F  3D                 	db	61	;'='
   623  00FD40  2D                 	db	45
   624  00FD41  2D                 	db	45
   625  00FD42  2D                 	db	45
   626  00FD43  0D                 	db	13
   627  00FD44  0A                 	db	10
   628  00FD45  00                 	db	0
   629  00FD46                     STR_29:
   630  00FD46  20                 	db	32
   631  00FD47  20                 	db	32
   632  00FD48  73                 	db	115	;'s'
   633  00FD49  65                 	db	101	;'e'
   634  00FD4A  74                 	db	116	;'t'
   635  00FD4B  20                 	db	32
   636  00FD4C  3C                 	db	60	;'<'
   637  00FD4D  76                 	db	118	;'v'
   638  00FD4E  61                 	db	97	;'a'
   639  00FD4F  6C                 	db	108	;'l'
   640  00FD50  75                 	db	117	;'u'
   641  00FD51  65                 	db	101	;'e'
   642  00FD52  3E                 	db	62	;'>'
   643  00FD53  09                 	db	9
   644  00FD54  20                 	db	32
   645  00FD55  20                 	db	32
   646  00FD56  2D                 	db	45
   647  00FD57  20                 	db	32
   648  00FD58  53                 	db	83	;'S'
   649  00FD59  65                 	db	101	;'e'
   650  00FD5A  74                 	db	116	;'t'
   651  00FD5B  20                 	db	32
   652  00FD5C  74                 	db	116	;'t'
   653  00FD5D  68                 	db	104	;'h'
   654  00FD5E  65                 	db	101	;'e'
   655  00FD5F  20                 	db	32
   656  00FD60  74                 	db	116	;'t'
   657  00FD61  69                 	db	105	;'i'
   658  00FD62  6D                 	db	109	;'m'
   659  00FD63  65                 	db	101	;'e'
   660  00FD64  72                 	db	114	;'r'
   661  00FD65  20                 	db	32
   662  00FD66  76                 	db	118	;'v'
   663  00FD67  61                 	db	97	;'a'
   664  00FD68  6C                 	db	108	;'l'
   665  00FD69  75                 	db	117	;'u'
   666  00FD6A  65                 	db	101	;'e'
   667  00FD6B  2E                 	db	46
   668  00FD6C  0D                 	db	13
   669  00FD6D  0A                 	db	10
   670  00FD6E  00                 	db	0
   671  00FD6F                     STR_53:
   672  00FD6F  55                 	db	85	;'U'
   673  00FD70  6E                 	db	110	;'n'
   674  00FD71  6B                 	db	107	;'k'
   675  00FD72  6E                 	db	110	;'n'
   676  00FD73  6F                 	db	111	;'o'
   677  00FD74  77                 	db	119	;'w'
   678  00FD75  6E                 	db	110	;'n'
   679  00FD76  20                 	db	32
   680  00FD77  63                 	db	99	;'c'
   681  00FD78  6F                 	db	111	;'o'
   682  00FD79  6D                 	db	109	;'m'
   683  00FD7A  6D                 	db	109	;'m'
   684  00FD7B  61                 	db	97	;'a'
   685  00FD7C  6E                 	db	110	;'n'
   686  00FD7D  64                 	db	100	;'d'
   687  00FD7E  2C                 	db	44
   688  00FD7F  20                 	db	32
   689  00FD80  74                 	db	116	;'t'
   690  00FD81  79                 	db	121	;'y'
   691  00FD82  70                 	db	112	;'p'
   692  00FD83  65                 	db	101	;'e'
   693  00FD84  20                 	db	32
   694  00FD85  27                 	db	39
   695  00FD86  68                 	db	104	;'h'
   696  00FD87  65                 	db	101	;'e'
   697  00FD88  6C                 	db	108	;'l'
   698  00FD89  70                 	db	112	;'p'
   699  00FD8A  27                 	db	39
   700  00FD8B  20                 	db	32
   701  00FD8C  66                 	db	102	;'f'
   702  00FD8D  6F                 	db	111	;'o'
   703  00FD8E  72                 	db	114	;'r'
   704  00FD8F  20                 	db	32
   705  00FD90  68                 	db	104	;'h'
   706  00FD91  65                 	db	101	;'e'
   707  00FD92  6C                 	db	108	;'l'
   708  00FD93  70                 	db	112	;'p'
   709  00FD94  2E                 	db	46
   710  00FD95  0D                 	db	13
   711  00FD96  0A                 	db	10
   712  00FD97  00                 	db	0
   713  00FD98                     STR_8:
   714  00FD98  20                 	db	32
   715  00FD99  20                 	db	32
   716  00FD9A  49                 	db	73	;'I'
   717  00FD9B  66                 	db	102	;'f'
   718  00FD9C  20                 	db	32
   719  00FD9D  79                 	db	121	;'y'
   720  00FD9E  6F                 	db	111	;'o'
   721  00FD9F  75                 	db	117	;'u'
   722  00FDA0  20                 	db	32
   723  00FDA1  77                 	db	119	;'w'
   724  00FDA2  69                 	db	105	;'i'
   725  00FDA3  73                 	db	115	;'s'
   726  00FDA4  68                 	db	104	;'h'
   727  00FDA5  20                 	db	32
   728  00FDA6  74                 	db	116	;'t'
   729  00FDA7  6F                 	db	111	;'o'
   730  00FDA8  20                 	db	32
   731  00FDA9  65                 	db	101	;'e'
   732  00FDAA  78                 	db	120	;'x'
   733  00FDAB  69                 	db	105	;'i'
   734  00FDAC  74                 	db	116	;'t'
   735  00FDAD  2C                 	db	44
   736  00FDAE  20                 	db	32
   737  00FDAF  70                 	db	112	;'p'
   738  00FDB0  72                 	db	114	;'r'
   739  00FDB1  65                 	db	101	;'e'
   740  00FDB2  73                 	db	115	;'s'
   741  00FDB3  73                 	db	115	;'s'
   742  00FDB4  3A                 	db	58	;':'
   743  00FDB5  20                 	db	32
   744  00FDB6  63                 	db	99	;'c'
   745  00FDB7  74                 	db	116	;'t'
   746  00FDB8  72                 	db	114	;'r'
   747  00FDB9  6C                 	db	108	;'l'
   748  00FDBA  20                 	db	32
   749  00FDBB  2B                 	db	43
   750  00FDBC  20                 	db	32
   751  00FDBD  63                 	db	99	;'c'
   752  00FDBE  0D                 	db	13
   753  00FDBF  0A                 	db	10
   754  00FDC0  00                 	db	0
   755  00FDC1                     STR_9:
   756  00FDC1  20                 	db	32
   757  00FDC2  20                 	db	32
   758  00FDC3  49                 	db	73	;'I'
   759  00FDC4  66                 	db	102	;'f'
   760  00FDC5  20                 	db	32
   761  00FDC6  79                 	db	121	;'y'
   762  00FDC7  6F                 	db	111	;'o'
   763  00FDC8  75                 	db	117	;'u'
   764  00FDC9  20                 	db	32
   765  00FDCA  77                 	db	119	;'w'
   766  00FDCB  69                 	db	105	;'i'
   767  00FDCC  73                 	db	115	;'s'
   768  00FDCD  68                 	db	104	;'h'
   769  00FDCE  20                 	db	32
   770  00FDCF  74                 	db	116	;'t'
   771  00FDD0  6F                 	db	111	;'o'
   772  00FDD1  20                 	db	32
   773  00FDD2  75                 	db	117	;'u'
   774  00FDD3  70                 	db	112	;'p'
   775  00FDD4  64                 	db	100	;'d'
   776  00FDD5  61                 	db	97	;'a'
   777  00FDD6  74                 	db	116	;'t'
   778  00FDD7  65                 	db	101	;'e'
   779  00FDD8  2C                 	db	44
   780  00FDD9  20                 	db	32
   781  00FDDA  70                 	db	112	;'p'
   782  00FDDB  72                 	db	114	;'r'
   783  00FDDC  65                 	db	101	;'e'
   784  00FDDD  73                 	db	115	;'s'
   785  00FDDE  73                 	db	115	;'s'
   786  00FDDF  20                 	db	32
   787  00FDE0  61                 	db	97	;'a'
   788  00FDE1  6E                 	db	110	;'n'
   789  00FDE2  79                 	db	121	;'y'
   790  00FDE3  20                 	db	32
   791  00FDE4  6B                 	db	107	;'k'
   792  00FDE5  65                 	db	101	;'e'
   793  00FDE6  79                 	db	121	;'y'
   794  00FDE7  0D                 	db	13
   795  00FDE8  0A                 	db	10
   796  00FDE9  00                 	db	0
   797  00FDEA                     STR_22:
   798  00FDEA  43                 	db	67	;'C'
   799  00FDEB  68                 	db	104	;'h'
   800  00FDEC  72                 	db	114	;'r'
   801  00FDED  69                 	db	105	;'i'
   802  00FDEE  73                 	db	115	;'s'
   803  00FDEF  74                 	db	116	;'t'
   804  00FDF0  69                 	db	105	;'i'
   805  00FDF1  61                 	db	97	;'a'
   806  00FDF2  6E                 	db	110	;'n'
   807  00FDF3  20                 	db	32
   808  00FDF4  48                 	db	72	;'H'
   809  00FDF5  61                 	db	97	;'a'
   810  00FDF6  6E                 	db	110	;'n'
   811  00FDF7  73                 	db	115	;'s'
   812  00FDF8  65                 	db	101	;'e'
   813  00FDF9  6E                 	db	110	;'n'
   814  00FDFA  20                 	db	32
   815  00FDFB  3C                 	db	60	;'<'
   816  00FDFC  63                 	db	99	;'c'
   817  00FDFD  77                 	db	119	;'w'
   818  00FDFE  68                 	db	104	;'h'
   819  00FDFF  40                 	db	64	;'@'
   820  00FE00  62                 	db	98	;'b'
   821  00FE01  75                 	db	117	;'u'
   822  00FE02  69                 	db	105	;'i'
   823  00FE03  6C                 	db	108	;'l'
   824  00FE04  64                 	db	100	;'d'
   825  00FE05  75                 	db	117	;'u'
   826  00FE06  6E                 	db	110	;'n'
   827  00FE07  69                 	db	105	;'i'
   828  00FE08  74                 	db	116	;'t'
   829  00FE09  79                 	db	121	;'y'
   830  00FE0A  2E                 	db	46
   831  00FE0B  64                 	db	100	;'d'
   832  00FE0C  6B                 	db	107	;'k'
   833  00FE0D  3E                 	db	62	;'>'
   834  00FE0E  0D                 	db	13
   835  00FE0F  0A                 	db	10
   836  00FE10  00                 	db	0
   837  00FE11                     STR_26:
   838  00FE11  20                 	db	32
   839  00FE12  20                 	db	32
   840  00FE13  74                 	db	116	;'t'
   841  00FE14  69                 	db	105	;'i'
   842  00FE15  6D                 	db	109	;'m'
   843  00FE16  65                 	db	101	;'e'
   844  00FE17  72                 	db	114	;'r'
   845  00FE18  20                 	db	32
   846  00FE19  5B                 	db	91	;'['
   847  00FE1A  66                 	db	102	;'f'
   848  00FE1B  6C                 	db	108	;'l'
   849  00FE1C  61                 	db	97	;'a'
   850  00FE1D  67                 	db	103	;'g'
   851  00FE1E  73                 	db	115	;'s'
   852  00FE1F  5D                 	db	93	;']'
   853  00FE20  20                 	db	32
   854  00FE21  3C                 	db	60	;'<'
   855  00FE22  63                 	db	99	;'c'
   856  00FE23  6F                 	db	111	;'o'
   857  00FE24  6D                 	db	109	;'m'
   858  00FE25  6D                 	db	109	;'m'
   859  00FE26  61                 	db	97	;'a'
   860  00FE27  6E                 	db	110	;'n'
   861  00FE28  64                 	db	100	;'d'
   862  00FE29  3E                 	db	62	;'>'
   863  00FE2A  20                 	db	32
   864  00FE2B  5B                 	db	91	;'['
   865  00FE2C  61                 	db	97	;'a'
   866  00FE2D  72                 	db	114	;'r'
   867  00FE2E  67                 	db	103	;'g'
   868  00FE2F  73                 	db	115	;'s'
   869  00FE30  5D                 	db	93	;']'
   870  00FE31  0D                 	db	13
   871  00FE32  0A                 	db	10
   872  00FE33  00                 	db	0
   873  00FE34                     STR_44:
   874  00FE34  0D                 	db	13
   875  00FE35  0A                 	db	10
   876  00FE36  1B                 	db	27
   877  00FE37  5B                 	db	91	;'['
   878  00FE38  31                 	db	49	;'1'
   879  00FE39  3B                 	db	59	;';'
   880  00FE3A  33                 	db	51	;'3'
   881  00FE3B  32                 	db	50	;'2'
   882  00FE3C  6D                 	db	109	;'m'
   883  00FE3D  25                 	db	37
   884  00FE3E  73                 	db	115	;'s'
   885  00FE3F  1B                 	db	27
   886  00FE40  5B                 	db	91	;'['
   887  00FE41  30                 	db	48	;'0'
   888  00FE42  6D                 	db	109	;'m'
   889  00FE43  20                 	db	32
   890  00FE44  61                 	db	97	;'a'
   891  00FE45  74                 	db	116	;'t'
   892  00FE46  20                 	db	32
   893  00FE47  1B                 	db	27
   894  00FE48  5B                 	db	91	;'['
   895  00FE49  31                 	db	49	;'1'
   896  00FE4A  3B                 	db	59	;';'
   897  00FE4B  33                 	db	51	;'3'
   898  00FE4C  33                 	db	51	;'3'
   899  00FE4D  6D                 	db	109	;'m'
   900  00FE4E  25                 	db	37
   901  00FE4F  73                 	db	115	;'s'
   902  00FE50  1B                 	db	27
   903  00FE51  5B                 	db	91	;'['
   904  00FE52  30                 	db	48	;'0'
   905  00FE53  6D                 	db	109	;'m'
   906  00FE54  0D                 	db	13
   907  00FE55  0A                 	db	10
   908  00FE56  00                 	db	0
   909  00FE57                     STR_32:
   910  00FE57  20                 	db	32
   911  00FE58  20                 	db	32
   912  00FE59  73                 	db	115	;'s'
   913  00FE5A  74                 	db	116	;'t'
   914  00FE5B  61                 	db	97	;'a'
   915  00FE5C  72                 	db	114	;'r'
   916  00FE5D  74                 	db	116	;'t'
   917  00FE5E  09                 	db	9
   918  00FE5F  09                 	db	9
   919  00FE60  20                 	db	32
   920  00FE61  20                 	db	32
   921  00FE62  2D                 	db	45
   922  00FE63  20                 	db	32
   923  00FE64  53                 	db	83	;'S'
   924  00FE65  74                 	db	116	;'t'
   925  00FE66  61                 	db	97	;'a'
   926  00FE67  72                 	db	114	;'r'
   927  00FE68  74                 	db	116	;'t'
   928  00FE69  20                 	db	32
   929  00FE6A  74                 	db	116	;'t'
   930  00FE6B  68                 	db	104	;'h'
   931  00FE6C  65                 	db	101	;'e'
   932  00FE6D  20                 	db	32
   933  00FE6E  74                 	db	116	;'t'
   934  00FE6F  69                 	db	105	;'i'
   935  00FE70  6D                 	db	109	;'m'
   936  00FE71  65                 	db	101	;'e'
   937  00FE72  72                 	db	114	;'r'
   938  00FE73  2E                 	db	46
   939  00FE74  0D                 	db	13
   940  00FE75  0A                 	db	10
   941  00FE76  00                 	db	0
   942  00FE77                     STR_6:
   943  00FE77  46                 	db	70	;'F'
   944  00FE78  61                 	db	97	;'a'
   945  00FE79  69                 	db	105	;'i'
   946  00FE7A  6C                 	db	108	;'l'
   947  00FE7B  65                 	db	101	;'e'
   948  00FE7C  64                 	db	100	;'d'
   949  00FE7D  20                 	db	32
   950  00FE7E  74                 	db	116	;'t'
   951  00FE7F  6F                 	db	111	;'o'
   952  00FE80  20                 	db	32
   953  00FE81  6C                 	db	108	;'l'
   954  00FE82  6F                 	db	111	;'o'
   955  00FE83  67                 	db	103	;'g'
   956  00FE84  69                 	db	105	;'i'
   957  00FE85  6E                 	db	110	;'n'
   958  00FE86  2C                 	db	44
   959  00FE87  20                 	db	32
   960  00FE88  74                 	db	116	;'t'
   961  00FE89  72                 	db	114	;'r'
   962  00FE8A  79                 	db	121	;'y'
   963  00FE8B  20                 	db	32
   964  00FE8C  61                 	db	97	;'a'
   965  00FE8D  67                 	db	103	;'g'
   966  00FE8E  61                 	db	97	;'a'
   967  00FE8F  69                 	db	105	;'i'
   968  00FE90  6E                 	db	110	;'n'
   969  00FE91  21                 	db	33
   970  00FE92  0D                 	db	13
   971  00FE93  0A                 	db	10
   972  00FE94  00                 	db	0
   973  00FE95                     STR_31:
   974  00FE95  20                 	db	32
   975  00FE96  20                 	db	32
   976  00FE97  73                 	db	115	;'s'
   977  00FE98  74                 	db	116	;'t'
   978  00FE99  6F                 	db	111	;'o'
   979  00FE9A  70                 	db	112	;'p'
   980  00FE9B  09                 	db	9
   981  00FE9C  09                 	db	9
   982  00FE9D  20                 	db	32
   983  00FE9E  20                 	db	32
   984  00FE9F  2D                 	db	45
   985  00FEA0  20                 	db	32
   986  00FEA1  53                 	db	83	;'S'
   987  00FEA2  74                 	db	116	;'t'
   988  00FEA3  6F                 	db	111	;'o'
   989  00FEA4  70                 	db	112	;'p'
   990  00FEA5  20                 	db	32
   991  00FEA6  74                 	db	116	;'t'
   992  00FEA7  68                 	db	104	;'h'
   993  00FEA8  65                 	db	101	;'e'
   994  00FEA9  20                 	db	32
   995  00FEAA  74                 	db	116	;'t'
   996  00FEAB  69                 	db	105	;'i'
   997  00FEAC  6D                 	db	109	;'m'
   998  00FEAD  65                 	db	101	;'e'
   999  00FEAE  72                 	db	114	;'r'
  1000  00FEAF  2E                 	db	46
  1001  00FEB0  0D                 	db	13
  1002  00FEB1  0A                 	db	10
  1003  00FEB2  00                 	db	0
  1004  00FEB3                     STR_23:
  1005  00FEB3  53                 	db	83	;'S'
  1006  00FEB4  69                 	db	105	;'i'
  1007  00FEB5  6D                 	db	109	;'m'
  1008  00FEB6  70                 	db	112	;'p'
  1009  00FEB7  6C                 	db	108	;'l'
  1010  00FEB8  65                 	db	101	;'e'
  1011  00FEB9  20                 	db	32
  1012  00FEBA  74                 	db	116	;'t'
  1013  00FEBB  69                 	db	105	;'i'
  1014  00FEBC  6D                 	db	109	;'m'
  1015  00FEBD  65                 	db	101	;'e'
  1016  00FEBE  72                 	db	114	;'r'
  1017  00FEBF  20                 	db	32
  1018  00FEC0  49                 	db	73	;'I'
  1019  00FEC1  2F                 	db	47
  1020  00FEC2  4F                 	db	79	;'O'
  1021  00FEC3  20                 	db	32
  1022  00FEC4  63                 	db	99	;'c'
  1023  00FEC5  6F                 	db	111	;'o'
  1024  00FEC6  6E                 	db	110	;'n'
  1025  00FEC7  74                 	db	116	;'t'
  1026  00FEC8  72                 	db	114	;'r'
  1027  00FEC9  6F                 	db	111	;'o'
  1028  00FECA  6C                 	db	108	;'l'
  1029  00FECB  6C                 	db	108	;'l'
  1030  00FECC  65                 	db	101	;'e'
  1031  00FECD  72                 	db	114	;'r'
  1032  00FECE  0D                 	db	13
  1033  00FECF  0A                 	db	10
  1034  00FED0  00                 	db	0
  1035  00FED1                     STR_14:
  1036  00FED1  43                 	db	67	;'C'
  1037  00FED2  68                 	db	104	;'h'
  1038  00FED3  61                 	db	97	;'a'
  1039  00FED4  6E                 	db	110	;'n'
  1040  00FED5  67                 	db	103	;'g'
  1041  00FED6  69                 	db	105	;'i'
  1042  00FED7  6E                 	db	110	;'n'
  1043  00FED8  67                 	db	103	;'g'
  1044  00FED9  20                 	db	32
  1045  00FEDA  74                 	db	116	;'t'
  1046  00FEDB  69                 	db	105	;'i'
  1047  00FEDC  6D                 	db	109	;'m'
  1048  00FEDD  65                 	db	101	;'e'
  1049  00FEDE  72                 	db	114	;'r'
  1050  00FEDF  20                 	db	32
  1051  00FEE0  76                 	db	118	;'v'
  1052  00FEE1  61                 	db	97	;'a'
  1053  00FEE2  6C                 	db	108	;'l'
  1054  00FEE3  75                 	db	117	;'u'
  1055  00FEE4  65                 	db	101	;'e'
  1056  00FEE5  20                 	db	32
  1057  00FEE6  74                 	db	116	;'t'
  1058  00FEE7  6F                 	db	111	;'o'
  1059  00FEE8  20                 	db	32
  1060  00FEE9  25                 	db	37
  1061  00FEEA  64                 	db	100	;'d'
  1062  00FEEB  0D                 	db	13
  1063  00FEEC  0A                 	db	10
  1064  00FEED  00                 	db	0
  1065  00FEEE                     STR_19:
  1066  00FEEE  54                 	db	84	;'T'
  1067  00FEEF  69                 	db	105	;'i'
  1068  00FEF0  6D                 	db	109	;'m'
  1069  00FEF1  65                 	db	101	;'e'
  1070  00FEF2  72                 	db	114	;'r'
  1071  00FEF3  20                 	db	32
  1072  00FEF4  69                 	db	105	;'i'
  1073  00FEF5  73                 	db	115	;'s'
  1074  00FEF6  20                 	db	32
  1075  00FEF7  61                 	db	97	;'a'
  1076  00FEF8  6C                 	db	108	;'l'
  1077  00FEF9  72                 	db	114	;'r'
  1078  00FEFA  65                 	db	101	;'e'
  1079  00FEFB  61                 	db	97	;'a'
  1080  00FEFC  64                 	db	100	;'d'
  1081  00FEFD  79                 	db	121	;'y'
  1082  00FEFE  20                 	db	32
  1083  00FEFF  73                 	db	115	;'s'
  1084  00FF00  74                 	db	116	;'t'
  1085  00FF01  6F                 	db	111	;'o'
  1086  00FF02  70                 	db	112	;'p'
  1087  00FF03  70                 	db	112	;'p'
  1088  00FF04  65                 	db	101	;'e'
  1089  00FF05  64                 	db	100	;'d'
  1090  00FF06  21                 	db	33
  1091  00FF07  0D                 	db	13
  1092  00FF08  0A                 	db	10
  1093  00FF09  00                 	db	0
  1094  00FF0A                     STR_17:
  1095  00FF0A  54                 	db	84	;'T'
  1096  00FF0B  69                 	db	105	;'i'
  1097  00FF0C  6D                 	db	109	;'m'
  1098  00FF0D  65                 	db	101	;'e'
  1099  00FF0E  72                 	db	114	;'r'
  1100  00FF0F  20                 	db	32
  1101  00FF10  69                 	db	105	;'i'
  1102  00FF11  73                 	db	115	;'s'
  1103  00FF12  20                 	db	32
  1104  00FF13  61                 	db	97	;'a'
  1105  00FF14  6C                 	db	108	;'l'
  1106  00FF15  72                 	db	114	;'r'
  1107  00FF16  65                 	db	101	;'e'
  1108  00FF17  61                 	db	97	;'a'
  1109  00FF18  64                 	db	100	;'d'
  1110  00FF19  79                 	db	121	;'y'
  1111  00FF1A  20                 	db	32
  1112  00FF1B  73                 	db	115	;'s'
  1113  00FF1C  74                 	db	116	;'t'
  1114  00FF1D  61                 	db	97	;'a'
  1115  00FF1E  72                 	db	114	;'r'
  1116  00FF1F  74                 	db	116	;'t'
  1117  00FF20  65                 	db	101	;'e'
  1118  00FF21  64                 	db	100	;'d'
  1119  00FF22  21                 	db	33
  1120  00FF23  0D                 	db	13
  1121  00FF24  0A                 	db	10
  1122  00FF25  00                 	db	0
  1123  00FF26                     STR_43:
  1124  00FF26  55                 	db	85	;'U'
  1125  00FF27  6E                 	db	110	;'n'
  1126  00FF28  69                 	db	105	;'i'
  1127  00FF29  78                 	db	120	;'x'
  1128  00FF2A  20                 	db	32
  1129  00FF2B  30                 	db	48	;'0'
  1130  00FF2C  2E                 	db	46
  1131  00FF2D  30                 	db	48	;'0'
  1132  00FF2E  2E                 	db	46
  1133  00FF2F  31                 	db	49	;'1'
  1134  00FF30  20                 	db	32
  1135  00FF31  25                 	db	37
  1136  00FF32  73                 	db	115	;'s'
  1137  00FF33  20                 	db	32
  1138  00FF34  25                 	db	37
  1139  00FF35  73                 	db	115	;'s'
  1140  00FF36  0D                 	db	13
  1141  00FF37  0A                 	db	10
  1142  00FF38  0D                 	db	13
  1143  00FF39  0A                 	db	10
  1144  00FF3A  00                 	db	0
  1145  00FF3B                     STR_4:
  1146  00FF3B  25                 	db	37
  1147  00FF3C  73                 	db	115	;'s'
  1148  00FF3D  40                 	db	64	;'@'
  1149  00FF3E  25                 	db	37
  1150  00FF3F  73                 	db	115	;'s'
  1151  00FF40  27                 	db	39
  1152  00FF41  73                 	db	115	;'s'
  1153  00FF42  20                 	db	32
  1154  00FF43  70                 	db	112	;'p'
  1155  00FF44  61                 	db	97	;'a'
  1156  00FF45  73                 	db	115	;'s'
  1157  00FF46  73                 	db	115	;'s'
  1158  00FF47  77                 	db	119	;'w'
  1159  00FF48  6F                 	db	111	;'o'
  1160  00FF49  72                 	db	114	;'r'
  1161  00FF4A  64                 	db	100	;'d'
  1162  00FF4B  3A                 	db	58	;':'
  1163  00FF4C  20                 	db	32
  1164  00FF4D  00                 	db	0
  1165  00FF4E                     STR_41:
  1166  00FF4E  20                 	db	32
  1167  00FF4F  20                 	db	32
  1168  00FF50  74                 	db	116	;'t'
  1169  00FF51  65                 	db	101	;'e'
  1170  00FF52  6D                 	db	109	;'m'
  1171  00FF53  70                 	db	112	;'p'
  1172  00FF54  65                 	db	101	;'e'
  1173  00FF55  72                 	db	114	;'r'
  1174  00FF56  61                 	db	97	;'a'
  1175  00FF57  74                 	db	116	;'t'
  1176  00FF58  75                 	db	117	;'u'
  1177  00FF59  72                 	db	114	;'r'
  1178  00FF5A  65                 	db	101	;'e'
  1179  00FF5B  0D                 	db	13
  1180  00FF5C  0A                 	db	10
  1181  00FF5D  00                 	db	0
  1182  00FF5E                     STR_21:
  1183  00FF5E  74                 	db	116	;'t'
  1184  00FF5F  69                 	db	105	;'i'
  1185  00FF60  6D                 	db	109	;'m'
  1186  00FF61  65                 	db	101	;'e'
  1187  00FF62  72                 	db	114	;'r'
  1188  00FF63  20                 	db	32
  1189  00FF64  30                 	db	48	;'0'
  1190  00FF65  2E                 	db	46
  1191  00FF66  30                 	db	48	;'0'
  1192  00FF67  2E                 	db	46
  1193  00FF68  31                 	db	49	;'1'
  1194  00FF69  0D                 	db	13
  1195  00FF6A  0A                 	db	10
  1196  00FF6B  00                 	db	0
  1197  00FF6C                     STR_28:
  1198  00FF6C  43                 	db	67	;'C'
  1199  00FF6D  6F                 	db	111	;'o'
  1200  00FF6E  6D                 	db	109	;'m'
  1201  00FF6F  6D                 	db	109	;'m'
  1202  00FF70  61                 	db	97	;'a'
  1203  00FF71  6E                 	db	110	;'n'
  1204  00FF72  64                 	db	100	;'d'
  1205  00FF73  73                 	db	115	;'s'
  1206  00FF74  3A                 	db	58	;':'
  1207  00FF75  0D                 	db	13
  1208  00FF76  0A                 	db	10
  1209  00FF77  00                 	db	0
  1210  00FF78                     STR_13:
  1211  00FF78  74                 	db	116	;'t'
  1212  00FF79  65                 	db	101	;'e'
  1213  00FF7A  6D                 	db	109	;'m'
  1214  00FF7B  70                 	db	112	;'p'
  1215  00FF7C  65                 	db	101	;'e'
  1216  00FF7D  72                 	db	114	;'r'
  1217  00FF7E  61                 	db	97	;'a'
  1218  00FF7F  74                 	db	116	;'t'
  1219  00FF80  75                 	db	117	;'u'
  1220  00FF81  72                 	db	114	;'r'
  1221  00FF82  65                 	db	101	;'e'
  1222  00FF83  00                 	db	0
  1223  00FF84                     STR_42:
  1224  00FF84  20                 	db	32
  1225  00FF85  20                 	db	32
  1226  00FF86  6C                 	db	108	;'l'
  1227  00FF87  6F                 	db	111	;'o'
  1228  00FF88  67                 	db	103	;'g'
  1229  00FF89  6F                 	db	111	;'o'
  1230  00FF8A  75                 	db	117	;'u'
  1231  00FF8B  74                 	db	116	;'t'
  1232  00FF8C  0D                 	db	13
  1233  00FF8D  0A                 	db	10
  1234  00FF8E  00                 	db	0
  1235  00FF8F                     STR_3:
  1236  00FF8F  6C                 	db	108	;'l'
  1237  00FF90  6F                 	db	111	;'o'
  1238  00FF91  67                 	db	103	;'g'
  1239  00FF92  69                 	db	105	;'i'
  1240  00FF93  6E                 	db	110	;'n'
  1241  00FF94  20                 	db	32
  1242  00FF95  61                 	db	97	;'a'
  1243  00FF96  73                 	db	115	;'s'
  1244  00FF97  3A                 	db	58	;':'
  1245  00FF98  20                 	db	32
  1246  00FF99  00                 	db	0
  1247  00FF9A                     STR_54:
  1248  00FF9A  63                 	db	99	;'c'
  1249  00FF9B  68                 	db	104	;'h'
  1250  00FF9C  72                 	db	114	;'r'
  1251  00FF9D  69                 	db	105	;'i'
  1252  00FF9E  73                 	db	115	;'s'
  1253  00FF9F  74                 	db	116	;'t'
  1254  00FFA0  69                 	db	105	;'i'
  1255  00FFA1  61                 	db	97	;'a'
  1256  00FFA2  6E                 	db	110	;'n'
  1257  00FFA3  00                 	db	0
  1258  00FFA4                     STR_25:
  1259  00FFA4  55                 	db	85	;'U'
  1260  00FFA5  73                 	db	115	;'s'
  1261  00FFA6  61                 	db	97	;'a'
  1262  00FFA7  67                 	db	103	;'g'
  1263  00FFA8  65                 	db	101	;'e'
  1264  00FFA9  3A                 	db	58	;':'
  1265  00FFAA  0D                 	db	13
  1266  00FFAB  0A                 	db	10
  1267  00FFAC  00                 	db	0
  1268  00FFAD                     STR_34:
  1269  00FFAD  46                 	db	70	;'F'
  1270  00FFAE  6C                 	db	108	;'l'
  1271  00FFAF  61                 	db	97	;'a'
  1272  00FFB0  67                 	db	103	;'g'
  1273  00FFB1  73                 	db	115	;'s'
  1274  00FFB2  3A                 	db	58	;':'
  1275  00FFB3  0D                 	db	13
  1276  00FFB4  0A                 	db	10
  1277  00FFB5  00                 	db	0
  1278  00FFB6                     STR_55:
  1279  00FFB6  74                 	db	116	;'t'
  1280  00FFB7  65                 	db	101	;'e'
  1281  00FFB8  73                 	db	115	;'s'
  1282  00FFB9  74                 	db	116	;'t'
  1283  00FFBA  31                 	db	49	;'1'
  1284  00FFBB  32                 	db	50	;'2'
  1285  00FFBC  33                 	db	51	;'3'
  1286  00FFBD  00                 	db	0
  1287  00FFBE                     STR_1:
  1288  00FFBE  4C                 	db	76	;'L'
  1289  00FFBF  6F                 	db	111	;'o'
  1290  00FFC0  6F                 	db	111	;'o'
  1291  00FFC1  70                 	db	112	;'p'
  1292  00FFC2  65                 	db	101	;'e'
  1293  00FFC3  64                 	db	100	;'d'
  1294  00FFC4  00                 	db	0
  1295  00FFC5                     STR_20:
  1296  00FFC5  2D                 	db	45
  1297  00FFC6  2D                 	db	45
  1298  00FFC7  68                 	db	104	;'h'
  1299  00FFC8  65                 	db	101	;'e'
  1300  00FFC9  6C                 	db	108	;'l'
  1301  00FFCA  70                 	db	112	;'p'
  1302  00FFCB  00                 	db	0
  1303  00FFCC                     STR_51:
  1304  00FFCC  6C                 	db	108	;'l'
  1305  00FFCD  6F                 	db	111	;'o'
  1306  00FFCE  67                 	db	103	;'g'
  1307  00FFCF  6F                 	db	111	;'o'
  1308  00FFD0  75                 	db	117	;'u'
  1309  00FFD1  74                 	db	116	;'t'
  1310  00FFD2  00                 	db	0
  1311  00FFD3                     STR_50:
  1312  00FFD3  74                 	db	116	;'t'
  1313  00FFD4  69                 	db	105	;'i'
  1314  00FFD5  6D                 	db	109	;'m'
  1315  00FFD6  65                 	db	101	;'e'
  1316  00FFD7  72                 	db	114	;'r'
  1317  00FFD8  00                 	db	0
  1318  00FFD9                     STR_16:
  1319  00FFD9  73                 	db	115	;'s'
  1320  00FFDA  74                 	db	116	;'t'
  1321  00FFDB  61                 	db	97	;'a'
  1322  00FFDC  72                 	db	114	;'r'
  1323  00FFDD  74                 	db	116	;'t'
  1324  00FFDE  00                 	db	0
  1325  00FFDF                     STR_2:
  1326  00FFDF  43                 	db	67	;'C'
  1327  00FFE0  4F                 	db	79	;'O'
  1328  00FFE1  4D                 	db	77	;'M'
  1329  00FFE2  31                 	db	49	;'1'
  1330  00FFE3  00                 	db	0
  1331  00FFE4                     STR_48:
  1332  00FFE4  74                 	db	116	;'t'
  1333  00FFE5  65                 	db	101	;'e'
  1334  00FFE6  6D                 	db	109	;'m'
  1335  00FFE7  70                 	db	112	;'p'
  1336  00FFE8  00                 	db	0
  1337  00FFE9                     STR_18:
  1338  00FFE9  73                 	db	115	;'s'
  1339  00FFEA  74                 	db	116	;'t'
  1340  00FFEB  6F                 	db	111	;'o'
  1341  00FFEC  70                 	db	112	;'p'
  1342  00FFED  00                 	db	0
  1343  00FFEE                     STR_59:
  1344  00FFEE  08                 	db	8
  1345  00FFEF  20                 	db	32
  1346  00FFF0  08                 	db	8
  1347  00FFF1  00                 	db	0
  1348  00FFF2                     STR_12:
  1349  00FFF2  73                 	db	115	;'s'
  1350  00FFF3  65                 	db	101	;'e'
  1351  00FFF4  74                 	db	116	;'t'
  1352  00FFF5  00                 	db	0
  1353  00FFF6                     STR_61:
  1354  00FFF6  25                 	db	37
  1355  00FFF7  63                 	db	99	;'c'
  1356  00FFF8  00                 	db	0
  1357  00FFF9                     STR_45:
  1358  00FFF9  24                 	db	36
  1359  00FFFA  20                 	db	32
  1360  00FFFB  00                 	db	0
  1361  00FFFC                     STR_60:
  1362  00FFFC  2A                 	db	42
  1363  00FFFD  00                 	db	0
  1364  0000                     
  1365                           ; #config settings
  1366  00FFFE  00                 	db	0	; dummy byte at the end
  1367  0000                     
  1368                           	psect	cinit
  1369  0021D2                     __pcinit:
  1370                           	opt callstack 0
  1371  0021D2                     start_initialization:
  1372                           	opt callstack 0
  1373  0021D2                     __initialization:
  1374                           	opt callstack 0
  1375                           
  1376                           ; Initialize objects allocated to BANK2 (2 bytes)
  1377                           ; load TBLPTR registers with __pidataBANK2
  1378  0021D2  0E2C               	movlw	low __pidataBANK2
  1379  0021D4  6EF6               	movwf	tblptrl,c
  1380  0021D6  0E2C               	movlw	high __pidataBANK2
  1381  0021D8  6EF7               	movwf	tblptrh,c
  1382  0021DA  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1383  0021DC  6EF8               	movwf	tblptru,c
  1384  0021DE  0009               	tblrd		*+	;fetch initializer
  1385  0021E0  CFF5 F2C4          	movff	tablat,__pdataBANK2
  1386  0021E4  0009               	tblrd		*+	;fetch initializer
  1387  0021E6  CFF5 F2C5          	movff	tablat,__pdataBANK2+1
  1388                           
  1389                           ; Initialize objects allocated to BANK1 (2 bytes)
  1390                           ; load TBLPTR registers with __pidataBANK1
  1391  0021EA  0E2A               	movlw	low __pidataBANK1
  1392  0021EC  6EF6               	movwf	tblptrl,c
  1393  0021EE  0E2C               	movlw	high __pidataBANK1
  1394  0021F0  6EF7               	movwf	tblptrh,c
  1395  0021F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1396  0021F4  6EF8               	movwf	tblptru,c
  1397  0021F6  0009               	tblrd		*+	;fetch initializer
  1398  0021F8  CFF5 F1D7          	movff	tablat,__pdataBANK1
  1399  0021FC  0009               	tblrd		*+	;fetch initializer
  1400  0021FE  CFF5 F1D8          	movff	tablat,__pdataBANK1+1
  1401                           
  1402                           ; Initialize objects allocated to BANK0 (13 bytes)
  1403                           ; load TBLPTR registers with __pidataBANK0
  1404  002202  0E92               	movlw	low __pidataBANK0
  1405  002204  6EF6               	movwf	tblptrl,c
  1406  002206  0E2B               	movlw	high __pidataBANK0
  1407  002208  6EF7               	movwf	tblptrh,c
  1408  00220A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1409  00220C  6EF8               	movwf	tblptru,c
  1410  00220E  EE00  F0D4         	lfsr	0,__pdataBANK0
  1411  002212  EE10 F00D          	lfsr	1,13
  1412  002216                     copy_data0:
  1413  002216  0009               	tblrd		*+
  1414  002218  CFF5 FFEE          	movff	tablat,postinc0
  1415  00221C  50E5               	movf	postdec1,w,c
  1416  00221E  50E1               	movf	fsr1l,w,c
  1417  002220  E1FA               	bnz	copy_data0
  1418                           
  1419                           ; Clear objects allocated to BANK4 (64 bytes)
  1420  002222  EE04  F000         	lfsr	0,__pbssBANK4
  1421  002226  0E40               	movlw	64
  1422  002228                     clear_0:
  1423  002228  6AEE               	clrf	postinc0,c
  1424  00222A  06E8               	decf	wreg,f,c
  1425  00222C  E1FD               	bnz	clear_0
  1426                           
  1427                           ; Clear objects allocated to BANK3 (256 bytes)
  1428  00222E  EE03  F000         	lfsr	0,__pbssBANK3
  1429  002232  EE11 F000          	lfsr	1,256
  1430  002236                     clear_1:
  1431  002236  6AEE               	clrf	postinc0,c
  1432  002238  50E5               	movf	postdec1,w,c
  1433  00223A  50E1               	movf	fsr1l,w,c
  1434  00223C  E1FC               	bnz	clear_1
  1435  00223E  50E2               	movf	fsr1h,w,c
  1436  002240  E1FA               	bnz	clear_1
  1437                           
  1438                           ; Clear objects allocated to BANK0 (69 bytes)
  1439  002242  EE00  F060         	lfsr	0,__pbssBANK0
  1440  002246  0E45               	movlw	69
  1441  002248                     clear_2:
  1442  002248  6AEE               	clrf	postinc0,c
  1443  00224A  06E8               	decf	wreg,f,c
  1444  00224C  E1FD               	bnz	clear_2
  1445                           
  1446                           ; Clear objects allocated to COMRAM (9 bytes)
  1447  00224E  EE00  F04E         	lfsr	0,__pbssCOMRAM
  1448  002252  0E09               	movlw	9
  1449  002254                     clear_3:
  1450  002254  6AEE               	clrf	postinc0,c
  1451  002256  06E8               	decf	wreg,f,c
  1452  002258  E1FD               	bnz	clear_3
  1453  00225A                     end_of_initialization:
  1454                           	opt callstack 0
  1455  00225A                     __end_of__initialization:
  1456                           	opt callstack 0
  1457  00225A  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1458  00225C  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1459  00225E  0100               	movlb	0
  1460  002260  EF8F  F008         	goto	_main	;jump to C main() function
  1461                           
  1462                           	psect	bssCOMRAM
  1463  00004E                     __pbssCOMRAM:
  1464                           	opt callstack 0
  1465  00004E                     _flags:
  1466                           	opt callstack 0
  1467  00004E                     	ds	2
  1468  000050                     _running:
  1469                           	opt callstack 0
  1470  000050                     	ds	1
  1471  000051                     _eusart1RxCount:
  1472                           	opt callstack 0
  1473  000051                     	ds	1
  1474  000052                     _eusart1RxTail:
  1475                           	opt callstack 0
  1476  000052                     	ds	1
  1477  000053                     _eusart1RxHead:
  1478                           	opt callstack 0
  1479  000053                     	ds	1
  1480  000054                     _eusart1TxBufferRemaining:
  1481                           	opt callstack 0
  1482  000054                     	ds	1
  1483  000055                     _eusart1TxTail:
  1484                           	opt callstack 0
  1485  000055                     	ds	1
  1486  000056                     _eusart1TxHead:
  1487                           	opt callstack 0
  1488  000056                     	ds	1
  1489                           
  1490                           	psect	bssBANK0
  1491  000060                     __pbssBANK0:
  1492                           	opt callstack 0
  1493  000060                     _eusart1TxBuffer:
  1494                           	opt callstack 0
  1495  000060                     	ds	8
  1496  000068                     roundf@F525:
  1497                           	opt callstack 0
  1498  000068                     	ds	4
  1499  00006C                     strtok@p:
  1500                           	opt callstack 0
  1501  00006C                     	ds	2
  1502  00006E                     _nout:
  1503                           	opt callstack 0
  1504  00006E                     	ds	2
  1505  000070                     _width:
  1506                           	opt callstack 0
  1507  000070                     	ds	2
  1508  000072                     _prec:
  1509                           	opt callstack 0
  1510  000072                     	ds	2
  1511  000074                     ___username:
  1512                           	opt callstack 0
  1513  000074                     	ds	2
  1514  000076                     _TMR2_InterruptHandler:
  1515                           	opt callstack 0
  1516  000076                     	ds	2
  1517  000078                     _EUSART1_ErrorHandler:
  1518                           	opt callstack 0
  1519  000078                     	ds	2
  1520  00007A                     _EUSART1_OverrunErrorHandler:
  1521                           	opt callstack 0
  1522  00007A                     	ds	2
  1523  00007C                     _EUSART1_FramingErrorHandler:
  1524                           	opt callstack 0
  1525  00007C                     	ds	2
  1526  00007E                     _EUSART1_RxDefaultInterruptHandler:
  1527                           	opt callstack 0
  1528  00007E                     	ds	2
  1529  000080                     _EUSART1_TxDefaultInterruptHandler:
  1530                           	opt callstack 0
  1531  000080                     	ds	2
  1532  000082                     ___display:
  1533                           	opt callstack 0
  1534  000082                     	ds	1
  1535  000083                     ___authorized:
  1536                           	opt callstack 0
  1537  000083                     	ds	1
  1538  000084                     _eusart1RxLastError:
  1539                           	opt callstack 0
  1540  000084                     	ds	1
  1541  000085                     _dbuf:
  1542                           	opt callstack 0
  1543  000085                     	ds	32
  1544                           
  1545                           	psect	dataBANK0
  1546  0000D4                     __pdataBANK0:
  1547                           	opt callstack 0
  1548  0000D4                     stoa@F1144:
  1549                           	opt callstack 0
  1550  0000D4                     	ds	7
  1551  0000DB                     	ds	2
  1552  0000DD                     	ds	2
  1553  0000DF                     _display1:
  1554                           	opt callstack 0
  1555  0000DF                     	ds	1
  1556  0000E0                     _display0:
  1557                           	opt callstack 0
  1558  0000E0                     	ds	1
  1559                           
  1560                           	psect	dataBANK1
  1561  0001D7                     __pdataBANK1:
  1562                           	opt callstack 0
  1563  0001D7                     	ds	2
  1564                           
  1565                           	psect	dataBANK2
  1566  0002C4                     __pdataBANK2:
  1567                           	opt callstack 0
  1568  0002C4                     	ds	2
  1569                           
  1570                           	psect	bssBANK3
  1571  000300                     __pbssBANK3:
  1572                           	opt callstack 0
  1573  000300                     	ds	64
  1574  000340                     	ds	64
  1575  000380                     _eusart1RxStatusBuffer:
  1576                           	opt callstack 0
  1577  000380                     	ds	64
  1578  0003C0                     _eusart1RxBuffer:
  1579                           	opt callstack 0
  1580  0003C0                     	ds	64
  1581                           
  1582                           	psect	bssBANK4
  1583  000400                     __pbssBANK4:
  1584                           	opt callstack 0
  1585  000400                     	ds	64
  1586                           
  1587                           	psect	cstackBANK2
  1588  000200                     __pcstackBANK2:
  1589                           	opt callstack 0
  1590  000200                     main@input:
  1591                           	opt callstack 0
  1592                           
  1593                           ; 64 bytes @ 0x0
  1594  000200                     	ds	64
  1595  000240                     main@args:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 128 bytes @ 0x40
  1599  000240                     	ds	128
  1600  0002C0                     main@i:
  1601                           	opt callstack 0
  1602                           
  1603                           ; 2 bytes @ 0xC0
  1604  0002C0                     	ds	2
  1605  0002C2                     main@token:
  1606                           	opt callstack 0
  1607                           
  1608                           ; 2 bytes @ 0xC2
  1609  0002C2                     	ds	2
  1610                           
  1611                           	psect	cstackBANK1
  1612  000100                     __pcstackBANK1:
  1613                           	opt callstack 0
  1614  000100                     authentication@password:
  1615                           	opt callstack 0
  1616  000100                     temperature_monitor@temperature:
  1617                           	opt callstack 0
  1618                           
  1619                           ; 200 bytes @ 0x0
  1620  000100                     	ds	64
  1621  000140                     authentication@username:
  1622                           	opt callstack 0
  1623                           
  1624                           ; 64 bytes @ 0x40
  1625  000140                     	ds	136
  1626  0001C8                     temperature_monitor@size:
  1627                           	opt callstack 0
  1628                           
  1629                           ; 2 bytes @ 0xC8
  1630  0001C8                     	ds	2
  1631  0001CA                     temperature_monitor@key:
  1632                           	opt callstack 0
  1633                           
  1634                           ; 1 bytes @ 0xCA
  1635  0001CA                     	ds	1
  1636  0001CB                     temperature_monitor@ready:
  1637                           	opt callstack 0
  1638                           
  1639                           ; 1 bytes @ 0xCB
  1640  0001CB                     	ds	1
  1641  0001CC                     temperature_monitor@timer:
  1642                           	opt callstack 0
  1643                           
  1644                           ; 1 bytes @ 0xCC
  1645  0001CC                     	ds	1
  1646  0001CD                     temperature_monitor@celsius:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0xCD
  1650  0001CD                     	ds	2
  1651  0001CF                     temperature_monitor@i_1107:
  1652                           	opt callstack 0
  1653                           
  1654                           ; 2 bytes @ 0xCF
  1655  0001CF                     	ds	2
  1656  0001D1                     temperature_monitor@size_1105:
  1657                           	opt callstack 0
  1658                           
  1659                           ; 2 bytes @ 0xD1
  1660  0001D1                     	ds	2
  1661  0001D3                     temperature_monitor@i:
  1662                           	opt callstack 0
  1663                           
  1664                           ; 2 bytes @ 0xD3
  1665  0001D3                     	ds	2
  1666  0001D5                     temperature_monitor@avg:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 2 bytes @ 0xD5
  1670  0001D5                     	ds	2
  1671                           
  1672                           	psect	cstackBANK0
  1673  0000A5                     __pcstackBANK0:
  1674                           	opt callstack 0
  1675  0000A5                     ?_vfpfcnvrt:
  1676                           	opt callstack 0
  1677  0000A5                     vfpfcnvrt@fp:
  1678                           	opt callstack 0
  1679                           
  1680                           ; 2 bytes @ 0x0
  1681  0000A5                     	ds	2
  1682  0000A7                     vfpfcnvrt@fmt:
  1683                           	opt callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x2
  1686  0000A7                     	ds	2
  1687  0000A9                     vfpfcnvrt@ap:
  1688                           	opt callstack 0
  1689                           
  1690                           ; 2 bytes @ 0x4
  1691  0000A9                     	ds	2
  1692  0000AB                     vfpfcnvrt@ll:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 8 bytes @ 0x6
  1696  0000AB                     	ds	8
  1697  0000B3                     vfpfcnvrt@cp:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 2 bytes @ 0xE
  1701  0000B3                     	ds	2
  1702  0000B5                     vfpfcnvrt@c:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 1 bytes @ 0x10
  1706  0000B5                     	ds	1
  1707  0000B6                     ?_vfprintf:
  1708                           	opt callstack 0
  1709  0000B6                     vfprintf@fp:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x11
  1713  0000B6                     	ds	2
  1714  0000B8                     vfprintf@fmt:
  1715                           	opt callstack 0
  1716                           
  1717                           ; 2 bytes @ 0x13
  1718  0000B8                     	ds	2
  1719  0000BA                     vfprintf@ap:
  1720                           	opt callstack 0
  1721                           
  1722                           ; 2 bytes @ 0x15
  1723  0000BA                     	ds	2
  1724  0000BC                     ?_printf:
  1725                           	opt callstack 0
  1726  0000BC                     printf@fmt:
  1727                           	opt callstack 0
  1728                           
  1729                           ; 2 bytes @ 0x17
  1730  0000BC                     	ds	8
  1731  0000C4                     printf@ap:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 2 bytes @ 0x1F
  1735  0000C4                     	ds	2
  1736  0000C6                     timer_control@args:
  1737                           	opt callstack 0
  1738  0000C6                     readline@str:
  1739                           	opt callstack 0
  1740                           
  1741                           ; 2 bytes @ 0x21
  1742  0000C6                     	ds	2
  1743  0000C8                     readline@password:
  1744                           	opt callstack 0
  1745  0000C8                     timer_control@val:
  1746                           	opt callstack 0
  1747                           
  1748                           ; 2 bytes @ 0x23
  1749  0000C8                     	ds	1
  1750  0000C9                     ??_readline:
  1751                           
  1752                           ; 1 bytes @ 0x24
  1753  0000C9                     	ds	4
  1754  0000CD                     _readline$1219:
  1755                           	opt callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x28
  1758  0000CD                     	ds	2
  1759  0000CF                     _readline$1220:
  1760                           	opt callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x2A
  1763  0000CF                     	ds	2
  1764  0000D1                     readline@i:
  1765                           	opt callstack 0
  1766                           
  1767                           ; 2 bytes @ 0x2C
  1768  0000D1                     	ds	2
  1769  0000D3                     readline@input:
  1770                           	opt callstack 0
  1771                           
  1772                           ; 1 bytes @ 0x2E
  1773  0000D3                     	ds	1
  1774                           
  1775                           	psect	cstackCOMRAM
  1776  000001                     __pcstackCOMRAM:
  1777                           	opt callstack 0
  1778  000001                     timer_setdisplay@display:
  1779                           	opt callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x0
  1782  000001                     	ds	2
  1783  000003                     ??_timer_setdisplay:
  1784                           
  1785                           ; 1 bytes @ 0x2
  1786  000003                     	ds	2
  1787  000005                     ??_INTERRUPT_InterruptManager:
  1788                           
  1789                           ; 1 bytes @ 0x4
  1790  000005                     	ds	4
  1791  000009                     ?_strcmp:
  1792                           	opt callstack 0
  1793  000009                     ?_username:
  1794                           	opt callstack 0
  1795  000009                     ?_isprint:
  1796                           	opt callstack 0
  1797  000009                     ?_isgraph:
  1798                           	opt callstack 0
  1799  000009                     ?_strlen:
  1800                           	opt callstack 0
  1801  000009                     ?_isspace:
  1802                           	opt callstack 0
  1803  000009                     ?_isdigit:
  1804                           	opt callstack 0
  1805  000009                     ?_strchr:
  1806                           	opt callstack 0
  1807  000009                     ?_ADC_GetConversion:
  1808                           	opt callstack 0
  1809  000009                     ?___wmul:
  1810                           	opt callstack 0
  1811  000009                     ?___awdiv:
  1812                           	opt callstack 0
  1813  000009                     ?___fladd:
  1814                           	opt callstack 0
  1815  000009                     ?___flmul:
  1816                           	opt callstack 0
  1817  000009                     ?___flneg:
  1818                           	opt callstack 0
  1819  000009                     ?___aodiv:
  1820                           	opt callstack 0
  1821  000009                     ?___aomod:
  1822                           	opt callstack 0
  1823  000009                     EUSART1_Read@readValue:
  1824                           	opt callstack 0
  1825  000009                     EUSART1_Write@txData:
  1826                           	opt callstack 0
  1827  000009                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1828                           	opt callstack 0
  1829  000009                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1830                           	opt callstack 0
  1831  000009                     EUSART1_SetErrorHandler@interruptHandler:
  1832                           	opt callstack 0
  1833  000009                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1834                           	opt callstack 0
  1835  000009                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1836                           	opt callstack 0
  1837  000009                     TMR2_SetInterruptHandler@InterruptHandler:
  1838                           	opt callstack 0
  1839  000009                     timer_write@display:
  1840                           	opt callstack 0
  1841  000009                     ___wmul@multiplier:
  1842                           	opt callstack 0
  1843  000009                     ___awdiv@dividend:
  1844                           	opt callstack 0
  1845  000009                     isdigit@c:
  1846                           	opt callstack 0
  1847  000009                     isgraph@c:
  1848                           	opt callstack 0
  1849  000009                     isprint@c:
  1850                           	opt callstack 0
  1851  000009                     isspace@c:
  1852                           	opt callstack 0
  1853  000009                     strcmp@l:
  1854                           	opt callstack 0
  1855  000009                     strlen@s:
  1856                           	opt callstack 0
  1857  000009                     strchr@s:
  1858                           	opt callstack 0
  1859  000009                     ___flge@ff1:
  1860                           	opt callstack 0
  1861  000009                     ___flneg@f1:
  1862                           	opt callstack 0
  1863  000009                     ___fladd@b:
  1864                           	opt callstack 0
  1865  000009                     ___flmul@b:
  1866                           	opt callstack 0
  1867  000009                     ___aodiv@dividend:
  1868                           	opt callstack 0
  1869  000009                     ___aomod@dividend:
  1870                           	opt callstack 0
  1871                           
  1872                           ; 8 bytes @ 0x8
  1873  000009                     	ds	1
  1874  00000A                     putch@txData:
  1875                           	opt callstack 0
  1876                           
  1877                           ; 1 bytes @ 0x9
  1878  00000A                     	ds	1
  1879  00000B                     ??_isprint:
  1880  00000B                     ??_isgraph:
  1881  00000B                     ??_isspace:
  1882  00000B                     ??_isdigit:
  1883  00000B                     ??_ADC_GetConversion:
  1884  00000B                     timer_write@input:
  1885                           	opt callstack 0
  1886  00000B                     ___wmul@multiplicand:
  1887                           	opt callstack 0
  1888  00000B                     ___awdiv@divisor:
  1889                           	opt callstack 0
  1890  00000B                     fputc@c:
  1891                           	opt callstack 0
  1892  00000B                     strcmp@r:
  1893                           	opt callstack 0
  1894  00000B                     strlen@a:
  1895                           	opt callstack 0
  1896  00000B                     strchr@c:
  1897                           	opt callstack 0
  1898                           
  1899                           ; 2 bytes @ 0xA
  1900  00000B                     	ds	1
  1901  00000C                     timer_write@dot:
  1902                           	opt callstack 0
  1903                           
  1904                           ; 1 bytes @ 0xB
  1905  00000C                     	ds	1
  1906  00000D                     ??_strcmp:
  1907  00000D                     ??_timer_write:
  1908  00000D                     ?_strspn:
  1909                           	opt callstack 0
  1910  00000D                     ?_strcspn:
  1911                           	opt callstack 0
  1912  00000D                     ADC_GetConversion@channel:
  1913                           	opt callstack 0
  1914  00000D                     ___awdiv@counter:
  1915                           	opt callstack 0
  1916  00000D                     ___wmul@product:
  1917                           	opt callstack 0
  1918  00000D                     fputc@fp:
  1919                           	opt callstack 0
  1920  00000D                     strcspn@s:
  1921                           	opt callstack 0
  1922  00000D                     strspn@s:
  1923                           	opt callstack 0
  1924  00000D                     ___flge@ff2:
  1925                           	opt callstack 0
  1926  00000D                     ___fladd@a:
  1927                           	opt callstack 0
  1928  00000D                     ___flmul@a:
  1929                           	opt callstack 0
  1930                           
  1931                           ; 4 bytes @ 0xC
  1932  00000D                     	ds	1
  1933  00000E                     ?___lwdiv:
  1934                           	opt callstack 0
  1935  00000E                     ___awdiv@sign:
  1936                           	opt callstack 0
  1937  00000E                     validate@username:
  1938                           	opt callstack 0
  1939  00000E                     ___lwdiv@dividend:
  1940                           	opt callstack 0
  1941                           
  1942                           ; 2 bytes @ 0xD
  1943  00000E                     	ds	1
  1944  00000F                     ??_fputc:
  1945  00000F                     timer_write@digt:
  1946                           	opt callstack 0
  1947  00000F                     _isspace$1872:
  1948                           	opt callstack 0
  1949  00000F                     ___awdiv@quotient:
  1950                           	opt callstack 0
  1951  00000F                     strcspn@c:
  1952                           	opt callstack 0
  1953  00000F                     strspn@c:
  1954                           	opt callstack 0
  1955                           
  1956                           ; 2 bytes @ 0xE
  1957  00000F                     	ds	1
  1958  000010                     ?_atoi:
  1959                           	opt callstack 0
  1960  000010                     validate@password:
  1961                           	opt callstack 0
  1962  000010                     ___lwdiv@divisor:
  1963                           	opt callstack 0
  1964  000010                     atoi@s:
  1965                           	opt callstack 0
  1966                           
  1967                           ; 2 bytes @ 0xF
  1968  000010                     	ds	1
  1969  000011                     ??___fladd:
  1970  000011                     ??___flmul:
  1971  000011                     ??_strspn:
  1972  000011                     ??_strcspn:
  1973  000011                     ??___flge:
  1974  000011                     ?___awmod:
  1975                           	opt callstack 0
  1976  000011                     ___awmod@dividend:
  1977                           	opt callstack 0
  1978  000011                     ___aodiv@divisor:
  1979                           	opt callstack 0
  1980  000011                     ___aomod@divisor:
  1981                           	opt callstack 0
  1982                           
  1983                           ; 8 bytes @ 0x10
  1984  000011                     	ds	1
  1985  000012                     ??_atoi:
  1986  000012                     ___lwdiv@counter:
  1987                           	opt callstack 0
  1988  000012                     login@username:
  1989                           	opt callstack 0
  1990  000012                     strcspn@i:
  1991                           	opt callstack 0
  1992  000012                     strspn@i:
  1993                           	opt callstack 0
  1994                           
  1995                           ; 2 bytes @ 0x11
  1996  000012                     	ds	1
  1997  000013                     ___awmod@divisor:
  1998                           	opt callstack 0
  1999  000013                     ___lwdiv@quotient:
  2000                           	opt callstack 0
  2001                           
  2002                           ; 2 bytes @ 0x12
  2003  000013                     	ds	1
  2004  000014                     ?_strtok:
  2005                           	opt callstack 0
  2006  000014                     ?_stoa:
  2007                           	opt callstack 0
  2008  000014                     login@password:
  2009                           	opt callstack 0
  2010  000014                     stoa@fp:
  2011                           	opt callstack 0
  2012  000014                     fputs@s:
  2013                           	opt callstack 0
  2014  000014                     strtok@s:
  2015                           	opt callstack 0
  2016                           
  2017                           ; 2 bytes @ 0x13
  2018  000014                     	ds	1
  2019  000015                     ?___xxtofl:
  2020                           	opt callstack 0
  2021  000015                     ___awmod@counter:
  2022                           	opt callstack 0
  2023  000015                     ___fladd@signs:
  2024                           	opt callstack 0
  2025  000015                     ___flmul@sign:
  2026                           	opt callstack 0
  2027  000015                     ___xxtofl@val:
  2028                           	opt callstack 0
  2029                           
  2030                           ; 4 bytes @ 0x14
  2031  000015                     	ds	1
  2032  000016                     ___awmod@sign:
  2033                           	opt callstack 0
  2034  000016                     ___fladd@aexp:
  2035                           	opt callstack 0
  2036  000016                     ___flmul@aexp:
  2037                           	opt callstack 0
  2038  000016                     stoa@s:
  2039                           	opt callstack 0
  2040  000016                     atoi@neg:
  2041                           	opt callstack 0
  2042  000016                     fputs@fp:
  2043                           	opt callstack 0
  2044  000016                     strtok@sep:
  2045                           	opt callstack 0
  2046                           
  2047                           ; 2 bytes @ 0x15
  2048  000016                     	ds	1
  2049  000017                     ___fladd@bexp:
  2050                           	opt callstack 0
  2051  000017                     timer_writeInt@amount:
  2052                           	opt callstack 0
  2053  000017                     ___flmul@grs:
  2054                           	opt callstack 0
  2055                           
  2056                           ; 4 bytes @ 0x16
  2057  000017                     	ds	1
  2058  000018                     ??_stoa:
  2059  000018                     ___fladd@grs:
  2060                           	opt callstack 0
  2061  000018                     fputs@c:
  2062                           	opt callstack 0
  2063  000018                     _atoi$1836:
  2064                           	opt callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x17
  2067  000018                     	ds	1
  2068  000019                     ??___xxtofl:
  2069  000019                     ?___flsub:
  2070                           	opt callstack 0
  2071  000019                     ___aodiv@counter:
  2072                           	opt callstack 0
  2073  000019                     ___aomod@counter:
  2074                           	opt callstack 0
  2075  000019                     timer_writeInt@d1:
  2076                           	opt callstack 0
  2077  000019                     fputs@i:
  2078                           	opt callstack 0
  2079  000019                     ___flsub@b:
  2080                           	opt callstack 0
  2081  000019                     stoa@nuls:
  2082                           	opt callstack 0
  2083                           
  2084                           ; 7 bytes @ 0x18
  2085  000019                     	ds	1
  2086  00001A                     ___aodiv@sign:
  2087                           	opt callstack 0
  2088  00001A                     ___aomod@sign:
  2089                           	opt callstack 0
  2090  00001A                     _atoi$1838:
  2091                           	opt callstack 0
  2092                           
  2093                           ; 2 bytes @ 0x19
  2094  00001A                     	ds	1
  2095  00001B                     ?_abs:
  2096                           	opt callstack 0
  2097  00001B                     ?_pad:
  2098                           	opt callstack 0
  2099  00001B                     ___flmul@bexp:
  2100                           	opt callstack 0
  2101  00001B                     timer_writeInt@d2:
  2102                           	opt callstack 0
  2103  00001B                     pad@fp:
  2104                           	opt callstack 0
  2105  00001B                     abs@a:
  2106                           	opt callstack 0
  2107  00001B                     ___aodiv@quotient:
  2108                           	opt callstack 0
  2109                           
  2110                           ; 8 bytes @ 0x1A
  2111  00001B                     	ds	1
  2112  00001C                     _atoi$1837:
  2113                           	opt callstack 0
  2114  00001C                     ___flmul@prod:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 4 bytes @ 0x1B
  2118  00001C                     	ds	1
  2119  00001D                     ??_abs:
  2120  00001D                     timer_writeInt@dot:
  2121                           	opt callstack 0
  2122  00001D                     ___xxtofl@sign:
  2123                           	opt callstack 0
  2124  00001D                     pad@buf:
  2125                           	opt callstack 0
  2126  00001D                     atoi@n:
  2127                           	opt callstack 0
  2128  00001D                     ___flsub@a:
  2129                           	opt callstack 0
  2130                           
  2131                           ; 4 bytes @ 0x1C
  2132  00001D                     	ds	1
  2133  00001E                     ___xxtofl@exp:
  2134                           	opt callstack 0
  2135                           
  2136                           ; 1 bytes @ 0x1D
  2137  00001E                     	ds	1
  2138  00001F                     pad@p:
  2139                           	opt callstack 0
  2140  00001F                     ___xxtofl@arg:
  2141                           	opt callstack 0
  2142                           
  2143                           ; 4 bytes @ 0x1E
  2144  00001F                     	ds	1
  2145  000020                     stoa@i:
  2146                           	opt callstack 0
  2147  000020                     ___flmul@temp:
  2148                           	opt callstack 0
  2149                           
  2150                           ; 2 bytes @ 0x1F
  2151  000020                     	ds	1
  2152  000021                     ??_pad:
  2153                           
  2154                           ; 1 bytes @ 0x20
  2155  000021                     	ds	1
  2156  000022                     pad@i:
  2157                           	opt callstack 0
  2158  000022                     stoa@w:
  2159                           	opt callstack 0
  2160                           
  2161                           ; 2 bytes @ 0x21
  2162  000022                     	ds	1
  2163  000023                     ?_roundf:
  2164                           	opt callstack 0
  2165  000023                     roundf@x:
  2166                           	opt callstack 0
  2167                           
  2168                           ; 4 bytes @ 0x22
  2169  000023                     	ds	1
  2170  000024                     pad@w:
  2171                           	opt callstack 0
  2172  000024                     stoa@cp:
  2173                           	opt callstack 0
  2174                           
  2175                           ; 2 bytes @ 0x23
  2176  000024                     	ds	2
  2177  000026                     ?_ctoa:
  2178                           	opt callstack 0
  2179  000026                     ?_dtoa:
  2180                           	opt callstack 0
  2181  000026                     ctoa@fp:
  2182                           	opt callstack 0
  2183  000026                     dtoa@fp:
  2184                           	opt callstack 0
  2185  000026                     stoa@p:
  2186                           	opt callstack 0
  2187                           
  2188                           ; 2 bytes @ 0x25
  2189  000026                     	ds	1
  2190  000027                     ??_roundf:
  2191                           
  2192                           ; 1 bytes @ 0x26
  2193  000027                     	ds	1
  2194  000028                     ctoa@c:
  2195                           	opt callstack 0
  2196  000028                     stoa@l:
  2197                           	opt callstack 0
  2198  000028                     dtoa@d:
  2199                           	opt callstack 0
  2200                           
  2201                           ; 8 bytes @ 0x27
  2202  000028                     	ds	1
  2203  000029                     ctoa@w:
  2204                           	opt callstack 0
  2205                           
  2206                           ; 2 bytes @ 0x28
  2207  000029                     	ds	2
  2208  00002B                     _roundf$2247:
  2209                           	opt callstack 0
  2210                           
  2211                           ; 4 bytes @ 0x2A
  2212  00002B                     	ds	4
  2213  00002F                     roundf@e:
  2214                           	opt callstack 0
  2215                           
  2216                           ; 2 bytes @ 0x2E
  2217  00002F                     	ds	1
  2218  000030                     ??_dtoa:
  2219                           
  2220                           ; 1 bytes @ 0x2F
  2221  000030                     	ds	1
  2222  000031                     _roundf$2246:
  2223                           	opt callstack 0
  2224                           
  2225                           ; 4 bytes @ 0x30
  2226  000031                     	ds	4
  2227  000035                     roundf@u:
  2228                           	opt callstack 0
  2229                           
  2230                           ; 4 bytes @ 0x34
  2231  000035                     	ds	3
  2232  000038                     _dtoa$1350:
  2233                           	opt callstack 0
  2234                           
  2235                           ; 2 bytes @ 0x37
  2236  000038                     	ds	1
  2237  000039                     roundf@y:
  2238                           	opt callstack 0
  2239                           
  2240                           ; 4 bytes @ 0x38
  2241  000039                     	ds	1
  2242  00003A                     dtoa@p:
  2243                           	opt callstack 0
  2244                           
  2245                           ; 2 bytes @ 0x39
  2246  00003A                     	ds	2
  2247  00003C                     dtoa@w:
  2248                           	opt callstack 0
  2249                           
  2250                           ; 2 bytes @ 0x3B
  2251  00003C                     	ds	1
  2252  00003D                     ?___fltol:
  2253                           	opt callstack 0
  2254  00003D                     ___fltol@f1:
  2255                           	opt callstack 0
  2256                           
  2257                           ; 4 bytes @ 0x3C
  2258  00003D                     	ds	1
  2259  00003E                     dtoa@s:
  2260                           	opt callstack 0
  2261                           
  2262                           ; 2 bytes @ 0x3D
  2263  00003E                     	ds	2
  2264  000040                     dtoa@n:
  2265                           	opt callstack 0
  2266                           
  2267                           ; 8 bytes @ 0x3F
  2268  000040                     	ds	1
  2269  000041                     ??___fltol:
  2270                           
  2271                           ; 1 bytes @ 0x40
  2272  000041                     	ds	4
  2273  000045                     ___fltol@sign1:
  2274                           	opt callstack 0
  2275                           
  2276                           ; 1 bytes @ 0x44
  2277  000045                     	ds	1
  2278  000046                     ___fltol@exp1:
  2279                           	opt callstack 0
  2280                           
  2281                           ; 1 bytes @ 0x45
  2282  000046                     	ds	2
  2283  000048                     dtoa@i:
  2284                           	opt callstack 0
  2285                           
  2286                           ; 2 bytes @ 0x47
  2287  000048                     	ds	2
  2288  00004A                     ??_vfpfcnvrt:
  2289                           
  2290                           ; 1 bytes @ 0x49
  2291  00004A                     	ds	2
  2292  00004C                     vfprintf@cfmt:
  2293                           	opt callstack 0
  2294                           
  2295                           ; 2 bytes @ 0x4B
  2296  00004C                     	ds	2
  2297  00004E                     
  2298                           ; 1 bytes @ 0x4D
  2299 ;;
  2300 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2301 ;;
  2302 ;; *************** function _main *****************
  2303 ;; Defined at:
  2304 ;;		line 208 in file "main.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  args          128   64[BANK2 ] PTR unsigned char [64]
  2309 ;;		 -> NULL(0), main@input(64), 
  2310 ;;  input          64    0[BANK2 ] unsigned char [64]
  2311 ;;  token           2  194[BANK2 ] PTR unsigned char 
  2312 ;;		 -> NULL(0), main@input(64), 
  2313 ;;  i               2  192[BANK2 ] int 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Locals:         0       0       0     196       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Totals:         0       0       0     196       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;Total ram usage:      196 bytes
  2328 ;; Hardware stack levels required when called:   15
  2329 ;; This function calls:
  2330 ;;		_ADC_Initialize
  2331 ;;		_EUSART1_Initialize
  2332 ;;		_EUSART1_Read
  2333 ;;		_EUSART1_is_rx_ready
  2334 ;;		_SYSTEM_Initialize
  2335 ;;		_TMR2_Initialize
  2336 ;;		_TMR2_SetInterruptHandler
  2337 ;;		_authentication
  2338 ;;		_help_menu
  2339 ;;		_isauthorized
  2340 ;;		_logout
  2341 ;;		_printf
  2342 ;;		_readline
  2343 ;;		_strcmp
  2344 ;;		_strtok
  2345 ;;		_temperature_monitor
  2346 ;;		_timer_control
  2347 ;;		_username
  2348 ;; This function is called by:
  2349 ;;		Startup code after reset
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text0
  2354  00111E                     __ptext0:
  2355                           	opt callstack 0
  2356  00111E                     _main:
  2357                           	opt callstack 16
  2358                           
  2359                           ;main.c: 210:     SYSTEM_Initialize();
  2360                           
  2361                           ;incstack = 0
  2362  00111E  EC90  F015         	call	_SYSTEM_Initialize	;wreg free
  2363                           
  2364                           ;main.c: 217:     (INTCONbits.GIE = 1);
  2365  001122  8EF2               	bsf	4082,7,c	;volatile
  2366                           
  2367                           ;main.c: 223:     (INTCONbits.PEIE = 1);
  2368  001124  8CF2               	bsf	4082,6,c	;volatile
  2369                           
  2370                           ;main.c: 229:     EUSART1_Initialize();
  2371  001126  EC74  F011         	call	_EUSART1_Initialize	;wreg free
  2372                           
  2373                           ;main.c: 232:     ADC_Initialize();
  2374  00112A  ECAD  F015         	call	_ADC_Initialize	;wreg free
  2375                           
  2376                           ;main.c: 235:     TMR2_Initialize();
  2377  00112E  EC9F  F015         	call	_TMR2_Initialize	;wreg free
  2378                           
  2379                           ;main.c: 238:     TMR2_SetInterruptHandler(timer_interrupt);
  2380  001132  0E10               	movlw	low _timer_interrupt
  2381  001134  6E09               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  2382  001136  0E27               	movlw	high _timer_interrupt
  2383  001138  6E0A               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  2384  00113A  ECDA  F015         	call	_TMR2_SetInterruptHandler	;wreg free
  2385  00113E                     l6386:
  2386                           
  2387                           ;main.c: 241:         if (EUSART1_is_rx_ready()) {
  2388  00113E  ECC2  F015         	call	_EUSART1_is_rx_ready	;wreg free
  2389  001142  0900               	iorlw	0
  2390  001144  B4D8               	btfsc	status,2,c
  2391  001146  D0DE               	goto	l478
  2392                           
  2393                           ;main.c: 243:             EUSART1_Read();
  2394  001148  EC08  F014         	call	_EUSART1_Read	;wreg free
  2395  00114C  8289               	bsf	3977,1,c	;volatile
  2396  00114E  D0D4               	goto	u7740
  2397  001150                     l6392:
  2398                           
  2399                           ;main.c: 250:                 printf("Unix 0.0.1 %s %s\r\n\r\n", OS, PORT);
  2400  001150  0E26               	movlw	low STR_43
  2401  001152  0100               	movlb	0	; () banked
  2402  001154  6FBC               	movwf	printf@fmt& (0+255),b
  2403  001156  0EFF               	movlw	high STR_43
  2404  001158  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2405  00115A  0EBE               	movlw	low STR_1
  2406  00115C  6FBE               	movwf	(?_printf+2)& (0+255),b
  2407  00115E  0EFF               	movlw	high STR_1
  2408  001160  6FBF               	movwf	(?_printf+3)& (0+255),b
  2409  001162  0EDF               	movlw	low STR_2
  2410  001164  6FC0               	movwf	(?_printf+4)& (0+255),b
  2411  001166  0EFF               	movlw	high STR_2
  2412  001168  6FC1               	movwf	(?_printf+5)& (0+255),b
  2413  00116A  EC48  F015         	call	_printf	;wreg free
  2414                           
  2415                           ;main.c: 253:                 authentication();
  2416  00116E  ECAA  F00F         	call	_authentication	;wreg free
  2417                           
  2418                           ;main.c: 256:                 while (isauthorized()) {
  2419  001172  D0BD               	goto	l6432
  2420  001174                     l6394:
  2421                           
  2422                           ;main.c: 257:                     printf("\r\n\033[1;32m%s\033[0m at \033[1;33m%s\033[0m
      +                          \r\n", username(), OS);
  2423  001174  0E34               	movlw	low STR_44
  2424  001176  0100               	movlb	0	; () banked
  2425  001178  6FBC               	movwf	printf@fmt& (0+255),b
  2426  00117A  0EFE               	movlw	high STR_44
  2427  00117C  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2428  00117E  ECD0  F015         	call	_username	;wreg free
  2429  001182  C009  F0BE         	movff	?_username,?_printf+2
  2430  001186  C00A  F0BF         	movff	?_username+1,?_printf+3
  2431  00118A  0EBE               	movlw	low STR_1
  2432  00118C  0100               	movlb	0	; () banked
  2433  00118E  6FC0               	movwf	(?_printf+4)& (0+255),b
  2434  001190  0EFF               	movlw	high STR_1
  2435  001192  6FC1               	movwf	(?_printf+5)& (0+255),b
  2436  001194  EC48  F015         	call	_printf	;wreg free
  2437                           
  2438                           ;main.c: 258:                     printf("$ ");
  2439  001198  0EF9               	movlw	low STR_45
  2440  00119A  0100               	movlb	0	; () banked
  2441  00119C  6FBC               	movwf	printf@fmt& (0+255),b
  2442  00119E  0EFF               	movlw	high STR_45
  2443  0011A0  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2444  0011A2  EC48  F015         	call	_printf	;wreg free
  2445                           
  2446                           ;main.c: 260:                     char input[64] = {};
  2447  0011A6  EE22  F000         	lfsr	2,main@input
  2448  0011AA  0E3F               	movlw	63
  2449  0011AC                     u7671:
  2450  0011AC  6ADE               	clrf	postinc2,c
  2451  0011AE  06E8               	decf	wreg,f,c
  2452  0011B0  E2FD               	bc	u7671
  2453                           
  2454                           ;main.c: 261:                     readline(input, 0);
  2455  0011B2  0E00               	movlw	low main@input
  2456  0011B4  0100               	movlb	0	; () banked
  2457  0011B6  6FC6               	movwf	readline@str& (0+255),b
  2458  0011B8  0E02               	movlw	high main@input
  2459  0011BA  6FC7               	movwf	(readline@str+1)& (0+255),b
  2460  0011BC  0E00               	movlw	0
  2461  0011BE  6FC8               	movwf	readline@password& (0+255),b
  2462  0011C0  EC59  F00A         	call	_readline	;wreg free
  2463                           
  2464                           ;main.c: 263:                     char *token;;main.c: 264:                     token = 
      +                          strtok(input, " ");
  2465  0011C4  0E00               	movlw	low main@input
  2466  0011C6  6E14               	movwf	strtok@s,c
  2467  0011C8  0E02               	movlw	high main@input
  2468  0011CA  6E15               	movwf	strtok@s+1,c
  2469  0011CC  0EFA               	movlw	low (STR_45+1)
  2470  0011CE  6E16               	movwf	strtok@sep,c
  2471  0011D0  0EFF               	movlw	high (STR_45+1)
  2472  0011D2  6E17               	movwf	strtok@sep+1,c
  2473  0011D4  ECF7  F00E         	call	_strtok	;wreg free
  2474  0011D8  C014  F2C2         	movff	?_strtok,main@token
  2475  0011DC  C015  F2C3         	movff	?_strtok+1,main@token+1
  2476                           
  2477                           ;main.c: 266:                     char *args[64];;main.c: 267:                     int i
      +                           = 0;
  2478  0011E0  0E00               	movlw	0
  2479  0011E2  0102               	movlb	2	; () banked
  2480  0011E4  6FC1               	movwf	(main@i+1)& (0+255),b
  2481  0011E6  0E00               	movlw	0
  2482  0011E8  6FC0               	movwf	main@i& (0+255),b
  2483                           
  2484                           ;main.c: 268:                     while (token != ((void*)0)) {
  2485  0011EA  D01D               	goto	l6410
  2486  0011EC                     l6404:
  2487                           
  2488                           ; BSR set to: 2
  2489                           ;main.c: 269:                         args[i++] = token;
  2490  0011EC  90D8               	bcf	status,0,c
  2491  0011EE  35C0               	rlcf	main@i& (0+255),w,b
  2492  0011F0  6ED9               	movwf	fsr2l,c
  2493  0011F2  35C1               	rlcf	(main@i+1)& (0+255),w,b
  2494  0011F4  6EDA               	movwf	fsr2h,c
  2495  0011F6  0E40               	movlw	low main@args
  2496  0011F8  26D9               	addwf	fsr2l,f,c
  2497  0011FA  0E02               	movlw	high main@args
  2498  0011FC  22DA               	addwfc	fsr2h,f,c
  2499  0011FE  C2C2  FFDE         	movff	main@token,postinc2
  2500  001202  C2C3  FFDD         	movff	main@token+1,postdec2
  2501                           
  2502                           ; BSR set to: 2
  2503  001206  4BC0               	infsnz	main@i& (0+255),f,b
  2504  001208  2BC1               	incf	(main@i+1)& (0+255),f,b
  2505                           
  2506                           ; BSR set to: 2
  2507                           ;main.c: 270:                         token = strtok(((void*)0), " ");
  2508  00120A  0E00               	movlw	0
  2509  00120C  6E14               	movwf	strtok@s,c
  2510  00120E  0E00               	movlw	0
  2511  001210  6E15               	movwf	strtok@s+1,c
  2512  001212  0EFA               	movlw	low (STR_45+1)
  2513  001214  6E16               	movwf	strtok@sep,c
  2514  001216  0EFF               	movlw	high (STR_45+1)
  2515  001218  6E17               	movwf	strtok@sep+1,c
  2516  00121A  ECF7  F00E         	call	_strtok	;wreg free
  2517  00121E  C014  F2C2         	movff	?_strtok,main@token
  2518  001222  C015  F2C3         	movff	?_strtok+1,main@token+1
  2519  001226                     l6410:
  2520                           
  2521                           ;main.c: 268:                     while (token != ((void*)0)) {
  2522  001226  0102               	movlb	2	; () banked
  2523  001228  51C2               	movf	main@token& (0+255),w,b
  2524  00122A  11C3               	iorwf	(main@token+1)& (0+255),w,b
  2525  00122C  A4D8               	btfss	status,2,c
  2526  00122E  D7DE               	goto	l6404
  2527                           
  2528                           ; BSR set to: 2
  2529                           ;main.c: 273:                     if (strcmp(args[0], "temp") == 0 || strcmp(args[0], "t
      +                          emperature") == 0) {
  2530  001230  C240  F009         	movff	main@args,strcmp@l
  2531  001234  C241  F00A         	movff	main@args+1,strcmp@l+1
  2532  001238  0EE4               	movlw	low STR_48
  2533  00123A  6E0B               	movwf	strcmp@r,c
  2534  00123C  0EFF               	movlw	high STR_48
  2535  00123E  6E0C               	movwf	strcmp@r+1,c
  2536  001240  EC1D  F012         	call	_strcmp	;wreg free
  2537  001244  5009               	movf	?_strcmp,w,c
  2538  001246  100A               	iorwf	?_strcmp+1,w,c
  2539  001248  B4D8               	btfsc	status,2,c
  2540  00124A  D00E               	goto	u7700
  2541  00124C  C240  F009         	movff	main@args,strcmp@l
  2542  001250  C241  F00A         	movff	main@args+1,strcmp@l+1
  2543  001254  0E78               	movlw	low STR_13
  2544  001256  6E0B               	movwf	strcmp@r,c
  2545  001258  0EFF               	movlw	high STR_13
  2546  00125A  6E0C               	movwf	strcmp@r+1,c
  2547  00125C  EC1D  F012         	call	_strcmp	;wreg free
  2548  001260  5009               	movf	?_strcmp,w,c
  2549  001262  100A               	iorwf	?_strcmp+1,w,c
  2550  001264  A4D8               	btfss	status,2,c
  2551  001266  D004               	goto	l6418
  2552  001268                     u7700:
  2553                           
  2554                           ;main.c: 274:                         temperature_monitor(0);
  2555  001268  0E00               	movlw	0
  2556  00126A  EC84  F009         	call	_temperature_monitor
  2557                           
  2558                           ;main.c: 275:                     } else if (strcmp(args[0], "timer") == 0) {
  2559  00126E  D03F               	goto	l6432
  2560  001270                     l6418:
  2561  001270  C240  F009         	movff	main@args,strcmp@l
  2562  001274  C241  F00A         	movff	main@args+1,strcmp@l+1
  2563  001278  0ED3               	movlw	low STR_50
  2564  00127A  6E0B               	movwf	strcmp@r,c
  2565  00127C  0EFF               	movlw	high STR_50
  2566  00127E  6E0C               	movwf	strcmp@r+1,c
  2567  001280  EC1D  F012         	call	_strcmp	;wreg free
  2568  001284  5009               	movf	?_strcmp,w,c
  2569  001286  100A               	iorwf	?_strcmp+1,w,c
  2570  001288  A4D8               	btfss	status,2,c
  2571  00128A  D008               	goto	l6422
  2572                           
  2573                           ;main.c: 276:                         timer_control(args);
  2574  00128C  0E40               	movlw	low main@args
  2575  00128E  0100               	movlb	0	; () banked
  2576  001290  6FC6               	movwf	timer_control@args& (0+255),b
  2577  001292  0E02               	movlw	high main@args
  2578  001294  6FC7               	movwf	(timer_control@args+1)& (0+255),b
  2579  001296  EC40  F006         	call	_timer_control	;wreg free
  2580                           
  2581                           ;main.c: 277:                     } else if (strcmp(args[0], "logout") == 0) {
  2582  00129A  D029               	goto	l6432
  2583  00129C                     l6422:
  2584  00129C  C240  F009         	movff	main@args,strcmp@l
  2585  0012A0  C241  F00A         	movff	main@args+1,strcmp@l+1
  2586  0012A4  0ECC               	movlw	low STR_51
  2587  0012A6  6E0B               	movwf	strcmp@r,c
  2588  0012A8  0EFF               	movlw	high STR_51
  2589  0012AA  6E0C               	movwf	strcmp@r+1,c
  2590  0012AC  EC1D  F012         	call	_strcmp	;wreg free
  2591  0012B0  5009               	movf	?_strcmp,w,c
  2592  0012B2  100A               	iorwf	?_strcmp+1,w,c
  2593  0012B4  A4D8               	btfss	status,2,c
  2594  0012B6  D003               	goto	l6426
  2595                           
  2596                           ;main.c: 278:                         logout();
  2597  0012B8  ECF8  F015         	call	_logout	;wreg free
  2598                           
  2599                           ;main.c: 279:                     } else if (strcmp(args[0], "help") == 0) {
  2600  0012BC  D018               	goto	l6432
  2601  0012BE                     l6426:
  2602  0012BE  C240  F009         	movff	main@args,strcmp@l
  2603  0012C2  C241  F00A         	movff	main@args+1,strcmp@l+1
  2604  0012C6  0EC7               	movlw	low (STR_20+2)
  2605  0012C8  6E0B               	movwf	strcmp@r,c
  2606  0012CA  0EFF               	movlw	high (STR_20+2)
  2607  0012CC  6E0C               	movwf	strcmp@r+1,c
  2608  0012CE  EC1D  F012         	call	_strcmp	;wreg free
  2609  0012D2  5009               	movf	?_strcmp,w,c
  2610  0012D4  100A               	iorwf	?_strcmp+1,w,c
  2611  0012D6  A4D8               	btfss	status,2,c
  2612  0012D8  D003               	goto	l6430
  2613                           
  2614                           ;main.c: 280:                         help_menu();
  2615  0012DA  EC78  F012         	call	_help_menu	;wreg free
  2616                           
  2617                           ;main.c: 281:                     } else {
  2618  0012DE  D007               	goto	l6432
  2619  0012E0                     l6430:
  2620                           
  2621                           ;main.c: 282:                         printf("Unknown command, type 'help' for help.\r\n
      +                          ");
  2622  0012E0  0E6F               	movlw	low STR_53
  2623  0012E2  0100               	movlb	0	; () banked
  2624  0012E4  6FBC               	movwf	printf@fmt& (0+255),b
  2625  0012E6  0EFD               	movlw	high STR_53
  2626  0012E8  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2627  0012EA  EC48  F015         	call	_printf	;wreg free
  2628  0012EE                     l6432:
  2629                           
  2630                           ;main.c: 256:                 while (isauthorized()) {
  2631  0012EE  EC06  F016         	call	_isauthorized	;wreg free
  2632  0012F2  0900               	iorlw	0
  2633  0012F4  A4D8               	btfss	status,2,c
  2634  0012F6  D73E               	goto	l6394
  2635  0012F8                     u7740:
  2636                           
  2637                           ;main.c: 248:             while (!isauthorized()) {
  2638  0012F8  EC06  F016         	call	_isauthorized	;wreg free
  2639  0012FC  0900               	iorlw	0
  2640  0012FE  A4D8               	btfss	status,2,c
  2641  001300  D71E               	goto	l6386
  2642  001302  D726               	goto	l6392
  2643  001304                     l478:
  2644  001304  9289               	bcf	3977,1,c	;volatile
  2645  001306  D71B               	goto	l6386
  2646  001308                     __end_of_main:
  2647                           	opt callstack 0
  2648                           
  2649 ;; *************** function _username *****************
  2650 ;; Defined at:
  2651 ;;		line 24 in file "auth.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  2    8[COMRAM] PTR unsigned char 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;Total ram usage:        2 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    4
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text1
  2680  002BA0                     __ptext1:
  2681                           	opt callstack 0
  2682  002BA0                     _username:
  2683                           	opt callstack 26
  2684                           
  2685                           ;auth.c: 25:     return __username;
  2686                           
  2687                           ;incstack = 0
  2688  002BA0  C074  F009         	movff	___username,?_username
  2689  002BA4  C075  F00A         	movff	___username+1,?_username+1
  2690  002BA8  0012               	return		;funcret
  2691  002BAA                     __end_of_username:
  2692                           	opt callstack 0
  2693                           
  2694 ;; *************** function _timer_control *****************
  2695 ;; Defined at:
  2696 ;;		line 141 in file "main.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  args            2   33[BANK0 ] PTR PTR unsigned char 
  2699 ;;		 -> main@args(128), 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  val             2   35[BANK0 ] int 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;Total ram usage:        4 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:   14
  2718 ;; This function calls:
  2719 ;;		_atoi
  2720 ;;		_printf
  2721 ;;		_strcmp
  2722 ;;		_temperature_monitor
  2723 ;;		_timer_running
  2724 ;;		_timer_start
  2725 ;;		_timer_stop
  2726 ;;		_timer_writeInt
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text2
  2733  000C80                     __ptext2:
  2734                           	opt callstack 0
  2735  000C80                     _timer_control:
  2736                           	opt callstack 16
  2737                           
  2738                           ;main.c: 142:     if (strcmp(args[1], "set") == 0) {
  2739                           
  2740                           ;incstack = 0
  2741  000C80  0100               	movlb	0	; () banked
  2742  000C82  EE20 F002          	lfsr	2,2
  2743  000C86  51C6               	movf	timer_control@args& (0+255),w,b
  2744  000C88  26D9               	addwf	fsr2l,f,c
  2745  000C8A  51C7               	movf	(timer_control@args+1)& (0+255),w,b
  2746  000C8C  22DA               	addwfc	fsr2h,f,c
  2747  000C8E  CFDE F009          	movff	postinc2,strcmp@l
  2748  000C92  CFDD F00A          	movff	postdec2,strcmp@l+1
  2749  000C96  0EF2               	movlw	low STR_12
  2750  000C98  6E0B               	movwf	strcmp@r,c
  2751  000C9A  0EFF               	movlw	high STR_12
  2752  000C9C  6E0C               	movwf	strcmp@r+1,c
  2753  000C9E  EC1D  F012         	call	_strcmp	;wreg free
  2754  000CA2  5009               	movf	?_strcmp,w,c
  2755  000CA4  100A               	iorwf	?_strcmp+1,w,c
  2756  000CA6  A4D8               	btfss	status,2,c
  2757  000CA8  D048               	goto	l6340
  2758                           
  2759                           ;main.c: 143:         if (strcmp(args[2], "temperature") == 0) {
  2760  000CAA  0100               	movlb	0	; () banked
  2761  000CAC  EE20 F004          	lfsr	2,4
  2762  000CB0  51C6               	movf	timer_control@args& (0+255),w,b
  2763  000CB2  26D9               	addwf	fsr2l,f,c
  2764  000CB4  51C7               	movf	(timer_control@args+1)& (0+255),w,b
  2765  000CB6  22DA               	addwfc	fsr2h,f,c
  2766  000CB8  CFDE F009          	movff	postinc2,strcmp@l
  2767  000CBC  CFDD F00A          	movff	postdec2,strcmp@l+1
  2768  000CC0  0E78               	movlw	low STR_13
  2769  000CC2  6E0B               	movwf	strcmp@r,c
  2770  000CC4  0EFF               	movlw	high STR_13
  2771  000CC6  6E0C               	movwf	strcmp@r+1,c
  2772  000CC8  EC1D  F012         	call	_strcmp	;wreg free
  2773  000CCC  5009               	movf	?_strcmp,w,c
  2774  000CCE  100A               	iorwf	?_strcmp+1,w,c
  2775  000CD0  A4D8               	btfss	status,2,c
  2776  000CD2  D004               	goto	l6328
  2777                           
  2778                           ;main.c: 144:             temperature_monitor(1);
  2779  000CD4  0E01               	movlw	1
  2780  000CD6  EC84  F009         	call	_temperature_monitor
  2781  000CDA  0012               	return	
  2782  000CDC                     l6328:
  2783                           
  2784                           ;main.c: 147:             int val = atoi(args[2]);
  2785  000CDC  0100               	movlb	0	; () banked
  2786  000CDE  EE20 F004          	lfsr	2,4
  2787  000CE2  51C6               	movf	timer_control@args& (0+255),w,b
  2788  000CE4  26D9               	addwf	fsr2l,f,c
  2789  000CE6  51C7               	movf	(timer_control@args+1)& (0+255),w,b
  2790  000CE8  22DA               	addwfc	fsr2h,f,c
  2791  000CEA  CFDE F010          	movff	postinc2,atoi@s
  2792  000CEE  CFDD F011          	movff	postdec2,atoi@s+1
  2793  000CF2  EC03  F00D         	call	_atoi	;wreg free
  2794  000CF6  C010  F0C8         	movff	?_atoi,timer_control@val
  2795  000CFA  C011  F0C9         	movff	?_atoi+1,timer_control@val+1
  2796                           
  2797                           ;main.c: 149:             printf("Changing timer value to %d\r\n", val);
  2798  000CFE  0ED1               	movlw	low STR_14
  2799  000D00  0100               	movlb	0	; () banked
  2800  000D02  6FBC               	movwf	printf@fmt& (0+255),b
  2801  000D04  0EFE               	movlw	high STR_14
  2802  000D06  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2803  000D08  C0C8  F0BE         	movff	timer_control@val,?_printf+2
  2804  000D0C  C0C9  F0BF         	movff	timer_control@val+1,?_printf+3
  2805  000D10  EC48  F015         	call	_printf	;wreg free
  2806                           
  2807                           ;main.c: 150:             if (!timer_running()) {
  2808  000D14  EC0F  F016         	call	_timer_running	;wreg free
  2809  000D18  0900               	iorlw	0
  2810  000D1A  A4D8               	btfss	status,2,c
  2811  000D1C  D007               	goto	l6336
  2812                           
  2813                           ;main.c: 151:                 printf("Note: timer is not running, use 'timer start' to s
      +                          tart.\r\n");
  2814  000D1E  0E60               	movlw	low STR_15
  2815  000D20  0100               	movlb	0	; () banked
  2816  000D22  6FBC               	movwf	printf@fmt& (0+255),b
  2817  000D24  0EFC               	movlw	high STR_15
  2818  000D26  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2819  000D28  EC48  F015         	call	_printf	;wreg free
  2820  000D2C                     l6336:
  2821                           
  2822                           ;main.c: 154:             timer_writeInt(val);
  2823  000D2C  C0C8  F017         	movff	timer_control@val,timer_writeInt@amount
  2824  000D30  C0C9  F018         	movff	timer_control@val+1,timer_writeInt@amount+1
  2825  000D34  EC00  F010         	call	_timer_writeInt	;wreg free
  2826  000D38  0012               	return	
  2827  000D3A                     l6340:
  2828  000D3A  0100               	movlb	0	; () banked
  2829  000D3C  EE20 F002          	lfsr	2,2
  2830  000D40  51C6               	movf	timer_control@args& (0+255),w,b
  2831  000D42  26D9               	addwf	fsr2l,f,c
  2832  000D44  51C7               	movf	(timer_control@args+1)& (0+255),w,b
  2833  000D46  22DA               	addwfc	fsr2h,f,c
  2834  000D48  CFDE F009          	movff	postinc2,strcmp@l
  2835  000D4C  CFDD F00A          	movff	postdec2,strcmp@l+1
  2836  000D50  0ED9               	movlw	low STR_16
  2837  000D52  6E0B               	movwf	strcmp@r,c
  2838  000D54  0EFF               	movlw	high STR_16
  2839  000D56  6E0C               	movwf	strcmp@r+1,c
  2840  000D58  EC1D  F012         	call	_strcmp	;wreg free
  2841  000D5C  5009               	movf	?_strcmp,w,c
  2842  000D5E  100A               	iorwf	?_strcmp+1,w,c
  2843  000D60  A4D8               	btfss	status,2,c
  2844  000D62  D010               	goto	l6350
  2845                           
  2846                           ;main.c: 158:         if (timer_running()) {
  2847  000D64  EC0F  F016         	call	_timer_running	;wreg free
  2848  000D68  0900               	iorlw	0
  2849  000D6A  B4D8               	btfsc	status,2,c
  2850  000D6C  D008               	goto	l6348
  2851                           
  2852                           ;main.c: 159:             printf("Timer is already started!\r\n");
  2853  000D6E  0E0A               	movlw	low STR_17
  2854  000D70  0100               	movlb	0	; () banked
  2855  000D72  6FBC               	movwf	printf@fmt& (0+255),b
  2856  000D74  0EFF               	movlw	high STR_17
  2857  000D76  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2858  000D78  EC48  F015         	call	_printf	;wreg free
  2859  000D7C  0012               	return	
  2860  000D7E                     l6348:
  2861                           
  2862                           ;main.c: 163:         timer_start();
  2863  000D7E  EC03  F016         	call	_timer_start	;wreg free
  2864                           
  2865                           ;main.c: 164:     } else if (strcmp(args[1], "stop") == 0) {
  2866  000D82  D0A4               	goto	l6366
  2867  000D84                     l6350:
  2868  000D84  0100               	movlb	0	; () banked
  2869  000D86  EE20 F002          	lfsr	2,2
  2870  000D8A  51C6               	movf	timer_control@args& (0+255),w,b
  2871  000D8C  26D9               	addwf	fsr2l,f,c
  2872  000D8E  51C7               	movf	(timer_control@args+1)& (0+255),w,b
  2873  000D90  22DA               	addwfc	fsr2h,f,c
  2874  000D92  CFDE F009          	movff	postinc2,strcmp@l
  2875  000D96  CFDD F00A          	movff	postdec2,strcmp@l+1
  2876  000D9A  0EE9               	movlw	low STR_18
  2877  000D9C  6E0B               	movwf	strcmp@r,c
  2878  000D9E  0EFF               	movlw	high STR_18
  2879  000DA0  6E0C               	movwf	strcmp@r+1,c
  2880  000DA2  EC1D  F012         	call	_strcmp	;wreg free
  2881  000DA6  5009               	movf	?_strcmp,w,c
  2882  000DA8  100A               	iorwf	?_strcmp+1,w,c
  2883  000DAA  A4D8               	btfss	status,2,c
  2884  000DAC  D010               	goto	l6360
  2885                           
  2886                           ;main.c: 165:         if (!timer_running()) {
  2887  000DAE  EC0F  F016         	call	_timer_running	;wreg free
  2888  000DB2  0900               	iorlw	0
  2889  000DB4  A4D8               	btfss	status,2,c
  2890  000DB6  D008               	goto	l6358
  2891                           
  2892                           ;main.c: 166:             printf("Timer is already stopped!\r\n");
  2893  000DB8  0EEE               	movlw	low STR_19
  2894  000DBA  0100               	movlb	0	; () banked
  2895  000DBC  6FBC               	movwf	printf@fmt& (0+255),b
  2896  000DBE  0EFE               	movlw	high STR_19
  2897  000DC0  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2898  000DC2  EC48  F015         	call	_printf	;wreg free
  2899  000DC6  0012               	return	
  2900  000DC8                     l6358:
  2901                           
  2902                           ;main.c: 170:         timer_stop();
  2903  000DC8  EC00  F016         	call	_timer_stop	;wreg free
  2904                           
  2905                           ;main.c: 171:     } else if (strcmp(args[1], "--help") == 0) {
  2906  000DCC  D07F               	goto	l6366
  2907  000DCE                     l6360:
  2908  000DCE  0100               	movlb	0	; () banked
  2909  000DD0  EE20 F002          	lfsr	2,2
  2910  000DD4  51C6               	movf	timer_control@args& (0+255),w,b
  2911  000DD6  26D9               	addwf	fsr2l,f,c
  2912  000DD8  51C7               	movf	(timer_control@args+1)& (0+255),w,b
  2913  000DDA  22DA               	addwfc	fsr2h,f,c
  2914  000DDC  CFDE F009          	movff	postinc2,strcmp@l
  2915  000DE0  CFDD F00A          	movff	postdec2,strcmp@l+1
  2916  000DE4  0EC5               	movlw	low STR_20
  2917  000DE6  6E0B               	movwf	strcmp@r,c
  2918  000DE8  0EFF               	movlw	high STR_20
  2919  000DEA  6E0C               	movwf	strcmp@r+1,c
  2920  000DEC  EC1D  F012         	call	_strcmp	;wreg free
  2921  000DF0  5009               	movf	?_strcmp,w,c
  2922  000DF2  100A               	iorwf	?_strcmp+1,w,c
  2923  000DF4  A4D8               	btfss	status,2,c
  2924  000DF6  D06A               	goto	l6366
  2925                           
  2926                           ;main.c: 172:         printf("timer 0.0.1\r\n");
  2927  000DF8  0E5E               	movlw	low STR_21
  2928  000DFA  0100               	movlb	0	; () banked
  2929  000DFC  6FBC               	movwf	printf@fmt& (0+255),b
  2930  000DFE  0EFF               	movlw	high STR_21
  2931  000E00  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2932  000E02  EC48  F015         	call	_printf	;wreg free
  2933                           
  2934                           ;main.c: 173:         printf("Christian Hansen <cwh@buildunity.dk>\r\n");
  2935  000E06  0EEA               	movlw	low STR_22
  2936  000E08  0100               	movlb	0	; () banked
  2937  000E0A  6FBC               	movwf	printf@fmt& (0+255),b
  2938  000E0C  0EFD               	movlw	high STR_22
  2939  000E0E  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2940  000E10  EC48  F015         	call	_printf	;wreg free
  2941                           
  2942                           ;main.c: 174:         printf("Simple timer I/O controller\r\n");
  2943  000E14  0EB3               	movlw	low STR_23
  2944  000E16  0100               	movlb	0	; () banked
  2945  000E18  6FBC               	movwf	printf@fmt& (0+255),b
  2946  000E1A  0EFE               	movlw	high STR_23
  2947  000E1C  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2948  000E1E  EC48  F015         	call	_printf	;wreg free
  2949                           
  2950                           ;main.c: 175:         printf("\r\n");
  2951  000E22  0E38               	movlw	low (STR_43+18)
  2952  000E24  0100               	movlb	0	; () banked
  2953  000E26  6FBC               	movwf	printf@fmt& (0+255),b
  2954  000E28  0EFF               	movlw	high (STR_43+18)
  2955  000E2A  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2956  000E2C  EC48  F015         	call	_printf	;wreg free
  2957                           
  2958                           ;main.c: 176:         printf("Usage:\r\n");
  2959  000E30  0EA4               	movlw	low STR_25
  2960  000E32  0100               	movlb	0	; () banked
  2961  000E34  6FBC               	movwf	printf@fmt& (0+255),b
  2962  000E36  0EFF               	movlw	high STR_25
  2963  000E38  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2964  000E3A  EC48  F015         	call	_printf	;wreg free
  2965                           
  2966                           ;main.c: 177:         printf("  timer [flags] <command> [args]\r\n");
  2967  000E3E  0E11               	movlw	low STR_26
  2968  000E40  0100               	movlb	0	; () banked
  2969  000E42  6FBC               	movwf	printf@fmt& (0+255),b
  2970  000E44  0EFE               	movlw	high STR_26
  2971  000E46  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2972  000E48  EC48  F015         	call	_printf	;wreg free
  2973                           
  2974                           ;main.c: 178:         printf("\r\n");
  2975  000E4C  0E38               	movlw	low (STR_43+18)
  2976  000E4E  0100               	movlb	0	; () banked
  2977  000E50  6FBC               	movwf	printf@fmt& (0+255),b
  2978  000E52  0EFF               	movlw	high (STR_43+18)
  2979  000E54  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2980  000E56  EC48  F015         	call	_printf	;wreg free
  2981                           
  2982                           ;main.c: 179:         printf("Commands:\r\n");
  2983  000E5A  0E6C               	movlw	low STR_28
  2984  000E5C  0100               	movlb	0	; () banked
  2985  000E5E  6FBC               	movwf	printf@fmt& (0+255),b
  2986  000E60  0EFF               	movlw	high STR_28
  2987  000E62  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2988  000E64  EC48  F015         	call	_printf	;wreg free
  2989                           
  2990                           ;main.c: 180:         printf("  set <value>\t  - Set the timer value.\r\n");
  2991  000E68  0E46               	movlw	low STR_29
  2992  000E6A  0100               	movlb	0	; () banked
  2993  000E6C  6FBC               	movwf	printf@fmt& (0+255),b
  2994  000E6E  0EFD               	movlw	high STR_29
  2995  000E70  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  2996  000E72  EC48  F015         	call	_printf	;wreg free
  2997                           
  2998                           ;main.c: 181:         printf("  set temperature - Bind the timer value to \r\n\t\t    av
      +                          erage temperature.\r\n");
  2999  000E76  0E15               	movlw	low STR_30
  3000  000E78  0100               	movlb	0	; () banked
  3001  000E7A  6FBC               	movwf	printf@fmt& (0+255),b
  3002  000E7C  0EFC               	movlw	high STR_30
  3003  000E7E  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3004  000E80  EC48  F015         	call	_printf	;wreg free
  3005                           
  3006                           ;main.c: 182:         printf("  stop\t\t  - Stop the timer.\r\n");
  3007  000E84  0E95               	movlw	low STR_31
  3008  000E86  0100               	movlb	0	; () banked
  3009  000E88  6FBC               	movwf	printf@fmt& (0+255),b
  3010  000E8A  0EFE               	movlw	high STR_31
  3011  000E8C  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3012  000E8E  EC48  F015         	call	_printf	;wreg free
  3013                           
  3014                           ;main.c: 183:         printf("  start\t\t  - Start the timer.\r\n");
  3015  000E92  0E57               	movlw	low STR_32
  3016  000E94  0100               	movlb	0	; () banked
  3017  000E96  6FBC               	movwf	printf@fmt& (0+255),b
  3018  000E98  0EFE               	movlw	high STR_32
  3019  000E9A  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3020  000E9C  EC48  F015         	call	_printf	;wreg free
  3021                           
  3022                           ;main.c: 184:         printf("\r\n");
  3023  000EA0  0E38               	movlw	low (STR_43+18)
  3024  000EA2  0100               	movlb	0	; () banked
  3025  000EA4  6FBC               	movwf	printf@fmt& (0+255),b
  3026  000EA6  0EFF               	movlw	high (STR_43+18)
  3027  000EA8  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3028  000EAA  EC48  F015         	call	_printf	;wreg free
  3029                           
  3030                           ;main.c: 185:         printf("Flags:\r\n");
  3031  000EAE  0EAD               	movlw	low STR_34
  3032  000EB0  0100               	movlb	0	; () banked
  3033  000EB2  6FBC               	movwf	printf@fmt& (0+255),b
  3034  000EB4  0EFF               	movlw	high STR_34
  3035  000EB6  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3036  000EB8  EC48  F015         	call	_printf	;wreg free
  3037                           
  3038                           ;main.c: 186:         printf("  -h, --help\t  - Prints help information.\r\n");
  3039  000EBC  0E9A               	movlw	low STR_35
  3040  000EBE  0100               	movlb	0	; () banked
  3041  000EC0  6FBC               	movwf	printf@fmt& (0+255),b
  3042  000EC2  0EFC               	movlw	high STR_35
  3043  000EC4  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3044  000EC6  EC48  F015         	call	_printf	;wreg free
  3045  000ECA  0012               	return	
  3046  000ECC                     l6366:
  3047                           
  3048                           ;main.c: 190:     printf("Incorrect usage, please try 'timer --help'");
  3049  000ECC  0EC6               	movlw	low STR_36
  3050  000ECE  0100               	movlb	0	; () banked
  3051  000ED0  6FBC               	movwf	printf@fmt& (0+255),b
  3052  000ED2  0EFC               	movlw	high STR_36
  3053  000ED4  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3054  000ED6  EC48  F015         	call	_printf	;wreg free
  3055  000EDA  0012               	return		;funcret
  3056  000EDC                     __end_of_timer_control:
  3057                           	opt callstack 0
  3058                           
  3059 ;; *************** function _timer_stop *****************
  3060 ;; Defined at:
  3061 ;;		line 24 in file "timer.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;Total ram usage:        0 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    4
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_timer_control
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text3
  3090  002C00                     __ptext3:
  3091                           	opt callstack 0
  3092  002C00                     _timer_stop:
  3093                           	opt callstack 25
  3094                           
  3095                           ;timer.c: 25:     running = 0;
  3096                           
  3097                           ;incstack = 0
  3098  002C00  0E00               	movlw	0
  3099  002C02  6E50               	movwf	_running,c
  3100  002C04  0012               	return		;funcret
  3101  002C06                     __end_of_timer_stop:
  3102                           	opt callstack 0
  3103                           
  3104 ;; *************** function _timer_running *****************
  3105 ;; Defined at:
  3106 ;;		line 141 in file "timer.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;		None
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;		None
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      _Bool 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;Total ram usage:        0 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    4
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_timer_control
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text4
  3135  002C1E                     __ptext4:
  3136                           	opt callstack 0
  3137  002C1E                     _timer_running:
  3138                           	opt callstack 25
  3139                           
  3140                           ;timer.c: 142:     return running;
  3141                           
  3142                           ;incstack = 0
  3143  002C1E  5050               	movf	_running,w,c
  3144  002C20  0012               	return		;funcret
  3145  002C22                     __end_of_timer_running:
  3146                           	opt callstack 0
  3147                           
  3148 ;; *************** function _temperature_monitor *****************
  3149 ;; Defined at:
  3150 ;;		line 82 in file "main.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  timer           1    wreg     _Bool 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  timer           1  204[BANK1 ] _Bool 
  3155 ;;  i               2  207[BANK1 ] int 
  3156 ;;  avg             2  213[BANK1 ] unsigned short 
  3157 ;;  size            2  209[BANK1 ] unsigned short 
  3158 ;;  celsius         2  205[BANK1 ] unsigned short 
  3159 ;;  key             1  202[BANK1 ] unsigned char 
  3160 ;;  temperature   200    0[BANK1 ] unsigned short [100]
  3161 ;;  i               2  211[BANK1 ] unsigned short 
  3162 ;;  size            2  200[BANK1 ] unsigned short 
  3163 ;;  ready           1  203[BANK1 ] _Bool 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Locals:         0       0     215       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Totals:         0       0     215       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;Total ram usage:      215 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:   13
  3180 ;; This function calls:
  3181 ;;		_ADC_GetConversion
  3182 ;;		_EUSART1_Read
  3183 ;;		___fltol
  3184 ;;		___lwdiv
  3185 ;;		___xxtofl
  3186 ;;		_printf
  3187 ;;		_roundf
  3188 ;;		_timer_start
  3189 ;;		_timer_writeInt
  3190 ;; This function is called by:
  3191 ;;		_timer_control
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text5
  3197  001308                     __ptext5:
  3198                           	opt callstack 0
  3199  001308                     _temperature_monitor:
  3200                           	opt callstack 16
  3201                           
  3202                           ;incstack = 0
  3203                           ;temperature_monitor@timer stored from wreg
  3204  001308  0101               	movlb	1	; () banked
  3205  00130A  6FCC               	movwf	temperature_monitor@timer& (0+255),b
  3206                           
  3207                           ;main.c: 83:     _Bool ready = 0;
  3208  00130C  0E00               	movlw	0
  3209  00130E  0101               	movlb	1	; () banked
  3210  001310  6FCB               	movwf	temperature_monitor@ready& (0+255),b
  3211                           
  3212                           ;main.c: 84:     uint16_t temperature[100];;main.c: 86:     uint16_t size = (sizeof (tem
      +                          perature) / sizeof (uint16_t));
  3213  001312  0E00               	movlw	0
  3214  001314  6FC9               	movwf	(temperature_monitor@size+1)& (0+255),b
  3215  001316  0E64               	movlw	100
  3216  001318  6FC8               	movwf	temperature_monitor@size& (0+255),b
  3217                           
  3218                           ;main.c: 87:     uint16_t i = 0;
  3219  00131A  0E00               	movlw	0
  3220  00131C  6FD4               	movwf	(temperature_monitor@i+1)& (0+255),b
  3221  00131E  0E00               	movlw	0
  3222  001320  6FD3               	movwf	temperature_monitor@i& (0+255),b
  3223                           
  3224                           ; BSR set to: 1
  3225                           ;main.c: 89:     printf("---=====] Temperature Monitor [=====---\r\n");
  3226  001322  0E1C               	movlw	low STR_7
  3227  001324  0100               	movlb	0	; () banked
  3228  001326  6FBC               	movwf	printf@fmt& (0+255),b
  3229  001328  0EFD               	movlw	high STR_7
  3230  00132A  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3231  00132C  EC48  F015         	call	_printf	;wreg free
  3232                           
  3233                           ;main.c: 90:     printf("  If you wish to exit, press: ctrl + c\r\n");
  3234  001330  0E98               	movlw	low STR_8
  3235  001332  0100               	movlb	0	; () banked
  3236  001334  6FBC               	movwf	printf@fmt& (0+255),b
  3237  001336  0EFD               	movlw	high STR_8
  3238  001338  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3239  00133A  EC48  F015         	call	_printf	;wreg free
  3240                           
  3241                           ;main.c: 91:     printf("  If you wish to update, press any key\r\n");
  3242  00133E  0EC1               	movlw	low STR_9
  3243  001340  0100               	movlb	0	; () banked
  3244  001342  6FBC               	movwf	printf@fmt& (0+255),b
  3245  001344  0EFD               	movlw	high STR_9
  3246  001346  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3247  001348  EC48  F015         	call	_printf	;wreg free
  3248                           
  3249                           ;main.c: 93:     printf("\r\n");
  3250  00134C  0E38               	movlw	low (STR_43+18)
  3251  00134E  0100               	movlb	0	; () banked
  3252  001350  6FBC               	movwf	printf@fmt& (0+255),b
  3253  001352  0EFF               	movlw	high (STR_43+18)
  3254  001354  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3255  001356  EC48  F015         	call	_printf	;wreg free
  3256                           
  3257                           ;main.c: 95:     if (timer) {
  3258  00135A  0101               	movlb	1	; () banked
  3259  00135C  51CC               	movf	temperature_monitor@timer& (0+255),w,b
  3260  00135E  A4D8               	btfss	status,2,c
  3261                           
  3262                           ; BSR set to: 1
  3263                           ;main.c: 96:         timer_start();
  3264  001360  EC03  F016         	call	_timer_start	;wreg free
  3265  001364                     l6220:
  3266                           
  3267                           ;main.c: 101:         if (i > size) {
  3268  001364  0101               	movlb	1	; () banked
  3269  001366  51D3               	movf	temperature_monitor@i& (0+255),w,b
  3270  001368  5DC8               	subwf	temperature_monitor@size& (0+255),w,b
  3271  00136A  51D4               	movf	(temperature_monitor@i+1)& (0+255),w,b
  3272  00136C  59C9               	subwfb	(temperature_monitor@size+1)& (0+255),w,b
  3273  00136E  B0D8               	btfsc	status,0,c
  3274  001370  D006               	goto	l6224
  3275                           
  3276                           ; BSR set to: 1
  3277                           ;main.c: 103:             ready = 1;
  3278  001372  0E01               	movlw	1
  3279  001374  6FCB               	movwf	temperature_monitor@ready& (0+255),b
  3280                           
  3281                           ;main.c: 106:             i = 0;
  3282  001376  0E00               	movlw	0
  3283  001378  6FD4               	movwf	(temperature_monitor@i+1)& (0+255),b
  3284  00137A  0E00               	movlw	0
  3285  00137C  6FD3               	movwf	temperature_monitor@i& (0+255),b
  3286  00137E                     l6224:
  3287                           
  3288                           ; BSR set to: 1
  3289                           ;main.c: 110:         uint16_t celsius = (ADC_GetConversion(TEMP) - 500) / 10;
  3290  00137E  0E03               	movlw	3
  3291  001380  EC77  F014         	call	_ADC_GetConversion
  3292  001384  0E0C               	movlw	12
  3293  001386  2409               	addwf	?_ADC_GetConversion,w,c
  3294  001388  6E0E               	movwf	___lwdiv@dividend,c
  3295  00138A  0EFE               	movlw	254
  3296  00138C  200A               	addwfc	?_ADC_GetConversion+1,w,c
  3297  00138E  6E0F               	movwf	___lwdiv@dividend+1,c
  3298  001390  0E00               	movlw	0
  3299  001392  6E11               	movwf	___lwdiv@divisor+1,c
  3300  001394  0E0A               	movlw	10
  3301  001396  6E10               	movwf	___lwdiv@divisor,c
  3302  001398  ECA3  F012         	call	___lwdiv	;wreg free
  3303  00139C  C00E  F1CD         	movff	?___lwdiv,temperature_monitor@celsius
  3304  0013A0  C00F  F1CE         	movff	?___lwdiv+1,temperature_monitor@celsius+1
  3305                           
  3306                           ;main.c: 112:         temperature[i++] = celsius;
  3307  0013A4  90D8               	bcf	status,0,c
  3308  0013A6  0101               	movlb	1	; () banked
  3309  0013A8  35D3               	rlcf	temperature_monitor@i& (0+255),w,b
  3310  0013AA  6ED9               	movwf	fsr2l,c
  3311  0013AC  35D4               	rlcf	(temperature_monitor@i+1)& (0+255),w,b
  3312  0013AE  6EDA               	movwf	fsr2h,c
  3313  0013B0  0E00               	movlw	low temperature_monitor@temperature
  3314  0013B2  26D9               	addwf	fsr2l,f,c
  3315  0013B4  0E01               	movlw	high temperature_monitor@temperature
  3316  0013B6  22DA               	addwfc	fsr2h,f,c
  3317  0013B8  C1CD  FFDE         	movff	temperature_monitor@celsius,postinc2
  3318  0013BC  C1CE  FFDD         	movff	temperature_monitor@celsius+1,postdec2
  3319                           
  3320                           ; BSR set to: 1
  3321  0013C0  4BD3               	infsnz	temperature_monitor@i& (0+255),f,b
  3322  0013C2  2BD4               	incf	(temperature_monitor@i+1)& (0+255),f,b
  3323                           
  3324                           ; BSR set to: 1
  3325                           ;main.c: 114:         uint16_t size = ready ? size : i;
  3326  0013C4  51CB               	movf	temperature_monitor@ready& (0+255),w,b
  3327  0013C6  A4D8               	btfss	status,2,c
  3328  0013C8  D005               	goto	l419
  3329                           
  3330                           ; BSR set to: 1
  3331  0013CA  C1D3  F1D1         	movff	temperature_monitor@i,temperature_monitor@size_1105
  3332  0013CE  C1D4  F1D2         	movff	temperature_monitor@i+1,temperature_monitor@size_1105+1
  3333  0013D2  D004               	goto	l6234
  3334  0013D4                     l419:
  3335                           
  3336                           ; BSR set to: 1
  3337  0013D4  C1D1  F1D1         	movff	temperature_monitor@size_1105,temperature_monitor@size_1105
  3338  0013D8  C1D2  F1D2         	movff	temperature_monitor@size_1105+1,temperature_monitor@size_1105+1
  3339  0013DC                     l6234:
  3340                           
  3341                           ; BSR set to: 1
  3342                           ;main.c: 116:         uint16_t avg = 0;
  3343  0013DC  0E00               	movlw	0
  3344  0013DE  6FD6               	movwf	(temperature_monitor@avg+1)& (0+255),b
  3345  0013E0  0E00               	movlw	0
  3346  0013E2  6FD5               	movwf	temperature_monitor@avg& (0+255),b
  3347                           
  3348                           ;main.c: 117:         for (int i = 0; i < size; i++) {
  3349  0013E4  0E00               	movlw	0
  3350  0013E6  6FD0               	movwf	(temperature_monitor@i_1107+1)& (0+255),b
  3351  0013E8  0E00               	movlw	0
  3352  0013EA  6FCF               	movwf	temperature_monitor@i_1107& (0+255),b
  3353  0013EC  D00F               	goto	l6240
  3354  0013EE                     l6236:
  3355                           
  3356                           ; BSR set to: 1
  3357                           ;main.c: 118:             avg += temperature[i];
  3358  0013EE  90D8               	bcf	status,0,c
  3359  0013F0  35CF               	rlcf	temperature_monitor@i_1107& (0+255),w,b
  3360  0013F2  6ED9               	movwf	fsr2l,c
  3361  0013F4  35D0               	rlcf	(temperature_monitor@i_1107+1)& (0+255),w,b
  3362  0013F6  6EDA               	movwf	fsr2h,c
  3363  0013F8  0E00               	movlw	low temperature_monitor@temperature
  3364  0013FA  26D9               	addwf	fsr2l,f,c
  3365  0013FC  0E01               	movlw	high temperature_monitor@temperature
  3366  0013FE  22DA               	addwfc	fsr2h,f,c
  3367  001400  50DE               	movf	postinc2,w,c
  3368  001402  27D5               	addwf	temperature_monitor@avg& (0+255),f,b
  3369  001404  50DD               	movf	postdec2,w,c
  3370  001406  23D6               	addwfc	(temperature_monitor@avg+1)& (0+255),f,b
  3371                           
  3372                           ; BSR set to: 1
  3373                           ;main.c: 119:         }
  3374  001408  4BCF               	infsnz	temperature_monitor@i_1107& (0+255),f,b
  3375  00140A  2BD0               	incf	(temperature_monitor@i_1107+1)& (0+255),f,b
  3376  00140C                     l6240:
  3377                           
  3378                           ; BSR set to: 1
  3379  00140C  51D1               	movf	temperature_monitor@size_1105& (0+255),w,b
  3380  00140E  5DCF               	subwf	temperature_monitor@i_1107& (0+255),w,b
  3381  001410  51D2               	movf	(temperature_monitor@size_1105+1)& (0+255),w,b
  3382  001412  59D0               	subwfb	(temperature_monitor@i_1107+1)& (0+255),w,b
  3383  001414  A0D8               	btfss	status,0,c
  3384  001416  D7EB               	goto	l6236
  3385                           
  3386                           ; BSR set to: 1
  3387                           ;main.c: 122:         avg = roundf(avg / size);
  3388  001418  C1D1  F010         	movff	temperature_monitor@size_1105,___lwdiv@divisor
  3389  00141C  C1D2  F011         	movff	temperature_monitor@size_1105+1,___lwdiv@divisor+1
  3390  001420  C1D5  F00E         	movff	temperature_monitor@avg,___lwdiv@dividend
  3391  001424  C1D6  F00F         	movff	temperature_monitor@avg+1,___lwdiv@dividend+1
  3392  001428  ECA3  F012         	call	___lwdiv	;wreg free
  3393  00142C  C00E  F015         	movff	?___lwdiv,___xxtofl@val
  3394  001430  C00F  F016         	movff	?___lwdiv+1,___xxtofl@val+1
  3395  001434  6A17               	clrf	___xxtofl@val+2,c
  3396  001436  6A18               	clrf	___xxtofl@val+3,c
  3397  001438  0E00               	movlw	0
  3398  00143A  ECC3  F00B         	call	___xxtofl
  3399  00143E  C015  F023         	movff	?___xxtofl,roundf@x
  3400  001442  C016  F024         	movff	?___xxtofl+1,roundf@x+1
  3401  001446  C017  F025         	movff	?___xxtofl+2,roundf@x+2
  3402  00144A  C018  F026         	movff	?___xxtofl+3,roundf@x+3
  3403  00144E  ECEA  F001         	call	_roundf	;wreg free
  3404  001452  C023  F03D         	movff	?_roundf,___fltol@f1
  3405  001456  C024  F03E         	movff	?_roundf+1,___fltol@f1+1
  3406  00145A  C025  F03F         	movff	?_roundf+2,___fltol@f1+2
  3407  00145E  C026  F040         	movff	?_roundf+3,___fltol@f1+3
  3408  001462  EC9A  F00E         	call	___fltol	;wreg free
  3409  001466  C03D  F1D5         	movff	?___fltol,temperature_monitor@avg
  3410  00146A  C03E  F1D6         	movff	?___fltol+1,temperature_monitor@avg+1
  3411                           
  3412                           ;main.c: 124:         if (timer) {
  3413  00146E  0101               	movlb	1	; () banked
  3414  001470  51CC               	movf	temperature_monitor@timer& (0+255),w,b
  3415  001472  B4D8               	btfsc	status,2,c
  3416  001474  D006               	goto	l6248
  3417                           
  3418                           ; BSR set to: 1
  3419                           ;main.c: 125:             timer_writeInt(avg);
  3420  001476  C1D5  F017         	movff	temperature_monitor@avg,timer_writeInt@amount
  3421  00147A  C1D6  F018         	movff	temperature_monitor@avg+1,timer_writeInt@amount+1
  3422  00147E  EC00  F010         	call	_timer_writeInt	;wreg free
  3423  001482                     l6248:
  3424                           
  3425                           ;main.c: 128:         printf("\rTemperature: %d | Average Temperature: %d", celsius, avg
      +                          );
  3426  001482  0EF1               	movlw	low STR_11
  3427  001484  0100               	movlb	0	; () banked
  3428  001486  6FBC               	movwf	printf@fmt& (0+255),b
  3429  001488  0EFC               	movlw	high STR_11
  3430  00148A  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  3431  00148C  C1CD  F0BE         	movff	temperature_monitor@celsius,?_printf+2
  3432  001490  C1CE  F0BF         	movff	temperature_monitor@celsius+1,?_printf+3
  3433  001494  C1D5  F0C0         	movff	temperature_monitor@avg,?_printf+4
  3434  001498  C1D6  F0C1         	movff	temperature_monitor@avg+1,?_printf+5
  3435  00149C  EC48  F015         	call	_printf	;wreg free
  3436                           
  3437                           ;main.c: 130:         uint8_t key = EUSART1_Read();
  3438  0014A0  EC08  F014         	call	_EUSART1_Read	;wreg free
  3439  0014A4  0101               	movlb	1	; () banked
  3440  0014A6  6FCA               	movwf	temperature_monitor@key& (0+255),b
  3441                           
  3442                           ; BSR set to: 1
  3443                           ;main.c: 132:         if (key == 3) {
  3444  0014A8  0E03               	movlw	3
  3445  0014AA  19CA               	xorwf	temperature_monitor@key& (0+255),w,b
  3446  0014AC  B4D8               	btfsc	status,2,c
  3447  0014AE  0012               	return	
  3448  0014B0  D759               	goto	l6220
  3449  0014B2                     __end_of_temperature_monitor:
  3450                           	opt callstack 0
  3451                           
  3452 ;; *************** function _timer_writeInt *****************
  3453 ;; Defined at:
  3454 ;;		line 104 in file "timer.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  amount          2   22[COMRAM] int 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  d2              2   26[COMRAM] int 
  3459 ;;  d1              2   24[COMRAM] int 
  3460 ;;  dot             1   28[COMRAM] _Bool 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;Total ram usage:        7 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    5
  3477 ;; This function calls:
  3478 ;;		___awdiv
  3479 ;;		___awmod
  3480 ;;		_timer_write
  3481 ;; This function is called by:
  3482 ;;		_temperature_monitor
  3483 ;;		_timer_control
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text6
  3488  002000                     __ptext6:
  3489                           	opt callstack 0
  3490  002000                     _timer_writeInt:
  3491                           	opt callstack 24
  3492                           
  3493                           ;timer.c: 105:     _Bool dot = 0;
  3494                           
  3495                           ; BSR set to: 1
  3496                           ;incstack = 0
  3497  002000  0E00               	movlw	0
  3498  002002  6E1D               	movwf	timer_writeInt@dot,c
  3499                           
  3500                           ;timer.c: 107:     if (amount > 99) {
  3501  002004  BE18               	btfsc	timer_writeInt@amount+1,7,c
  3502  002006  D00D               	goto	l5978
  3503  002008  5018               	movf	timer_writeInt@amount+1,w,c
  3504  00200A  E104               	bnz	u6970
  3505  00200C  0E64               	movlw	100
  3506  00200E  5C17               	subwf	timer_writeInt@amount,w,c
  3507  002010  A0D8               	btfss	status,0,c
  3508  002012  D007               	goto	l5978
  3509  002014                     u6970:
  3510                           
  3511                           ;timer.c: 108:         amount = 99;
  3512  002014  0E00               	movlw	0
  3513  002016  6E18               	movwf	timer_writeInt@amount+1,c
  3514  002018  0E63               	movlw	99
  3515  00201A  6E17               	movwf	timer_writeInt@amount,c
  3516                           
  3517                           ;timer.c: 109:         dot = 1;
  3518  00201C  0E01               	movlw	1
  3519  00201E  6E1D               	movwf	timer_writeInt@dot,c
  3520                           
  3521                           ;timer.c: 110:     } else if (amount < 0) {
  3522  002020  D006               	goto	l5982
  3523  002022                     l5978:
  3524  002022  AE18               	btfss	timer_writeInt@amount+1,7,c
  3525  002024  D004               	goto	l5982
  3526                           
  3527                           ;timer.c: 111:         amount = 0;
  3528  002026  0E00               	movlw	0
  3529  002028  6E18               	movwf	timer_writeInt@amount+1,c
  3530  00202A  0E00               	movlw	0
  3531  00202C  6E17               	movwf	timer_writeInt@amount,c
  3532  00202E                     l5982:
  3533                           
  3534                           ;timer.c: 114:     int d1 = amount / 10 % 10;
  3535  00202E  0E00               	movlw	0
  3536  002030  6E0C               	movwf	___awdiv@divisor+1,c
  3537  002032  0E0A               	movlw	10
  3538  002034  6E0B               	movwf	___awdiv@divisor,c
  3539  002036  C017  F009         	movff	timer_writeInt@amount,___awdiv@dividend
  3540  00203A  C018  F00A         	movff	timer_writeInt@amount+1,___awdiv@dividend+1
  3541  00203E  EC32  F011         	call	___awdiv	;wreg free
  3542  002042  C009  F011         	movff	?___awdiv,___awmod@dividend
  3543  002046  C00A  F012         	movff	?___awdiv+1,___awmod@dividend+1
  3544  00204A  0E00               	movlw	0
  3545  00204C  6E14               	movwf	___awmod@divisor+1,c
  3546  00204E  0E0A               	movlw	10
  3547  002050  6E13               	movwf	___awmod@divisor,c
  3548  002052  ECAF  F011         	call	___awmod	;wreg free
  3549  002056  C011  F019         	movff	?___awmod,timer_writeInt@d1
  3550  00205A  C012  F01A         	movff	?___awmod+1,timer_writeInt@d1+1
  3551                           
  3552                           ;timer.c: 115:     int d2 = amount % 10;
  3553  00205E  C017  F011         	movff	timer_writeInt@amount,___awmod@dividend
  3554  002062  C018  F012         	movff	timer_writeInt@amount+1,___awmod@dividend+1
  3555  002066  0E00               	movlw	0
  3556  002068  6E14               	movwf	___awmod@divisor+1,c
  3557  00206A  0E0A               	movlw	10
  3558  00206C  6E13               	movwf	___awmod@divisor,c
  3559  00206E  ECAF  F011         	call	___awmod	;wreg free
  3560  002072  C011  F01B         	movff	?___awmod,timer_writeInt@d2
  3561  002076  C012  F01C         	movff	?___awmod+1,timer_writeInt@d2+1
  3562                           
  3563                           ;timer.c: 117:     timer_write(0, d1, 0);
  3564  00207A  0E00               	movlw	0
  3565  00207C  6E0A               	movwf	timer_write@display+1,c
  3566  00207E  0E00               	movlw	0
  3567  002080  6E09               	movwf	timer_write@display,c
  3568  002082  C019  F00B         	movff	timer_writeInt@d1,timer_write@input
  3569  002086  0E00               	movlw	0
  3570  002088  6E0C               	movwf	timer_write@dot,c
  3571  00208A  EC51  F00F         	call	_timer_write	;wreg free
  3572                           
  3573                           ;timer.c: 118:     timer_write(1, d2, dot);
  3574  00208E  0E00               	movlw	0
  3575  002090  6E0A               	movwf	timer_write@display+1,c
  3576  002092  0E01               	movlw	1
  3577  002094  6E09               	movwf	timer_write@display,c
  3578  002096  C01B  F00B         	movff	timer_writeInt@d2,timer_write@input
  3579  00209A  C01D  F00C         	movff	timer_writeInt@dot,timer_write@dot
  3580  00209E  EC51  F00F         	call	_timer_write	;wreg free
  3581  0020A2  0012               	return		;funcret
  3582  0020A4                     __end_of_timer_writeInt:
  3583                           	opt callstack 0
  3584                           
  3585 ;; *************** function _timer_write *****************
  3586 ;; Defined at:
  3587 ;;		line 54 in file "timer.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  display         2    8[COMRAM] int 
  3590 ;;  input           1   10[COMRAM] unsigned char 
  3591 ;;  dot             1   11[COMRAM] _Bool 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  digt            1   14[COMRAM] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;Total ram usage:        7 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    4
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_timer_writeInt
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text7
  3618  001EA2                     __ptext7:
  3619                           	opt callstack 0
  3620  001EA2                     _timer_write:
  3621                           	opt callstack 24
  3622                           
  3623                           ;timer.c: 55:     uint8_t digt;;timer.c: 57:     switch (input) {
  3624                           
  3625                           ;incstack = 0
  3626  001EA2  D015               	goto	l5626
  3627  001EA4                     l5604:
  3628                           
  3629                           ;timer.c: 59:             digt = 0b01000000;
  3630  001EA4  0E40               	movlw	64
  3631  001EA6  D011               	goto	L9
  3632  001EA8                     l5606:
  3633                           
  3634                           ;timer.c: 62:             digt = 0b01111001;
  3635  001EA8  0E79               	movlw	121
  3636  001EAA  D00F               	goto	L9
  3637  001EAC                     l5608:
  3638                           
  3639                           ;timer.c: 65:             digt = 0b00100100;
  3640  001EAC  0E24               	movlw	36
  3641  001EAE  D00D               	goto	L9
  3642  001EB0                     l5610:
  3643                           
  3644                           ;timer.c: 68:             digt = 0b00110000;
  3645  001EB0  0E30               	movlw	48
  3646  001EB2  D00B               	goto	L9
  3647  001EB4                     l5612:
  3648                           
  3649                           ;timer.c: 71:             digt = 0b00011001;
  3650  001EB4  0E19               	movlw	25
  3651  001EB6  D009               	goto	L9
  3652  001EB8                     l5614:
  3653                           
  3654                           ;timer.c: 74:             digt = 0b00010010;
  3655  001EB8  0E12               	movlw	18
  3656  001EBA  D007               	goto	L9
  3657  001EBC                     l5616:
  3658                           
  3659                           ;timer.c: 77:             digt = 0b00000010;
  3660  001EBC  0E02               	movlw	2
  3661  001EBE  D005               	goto	L9
  3662  001EC0                     l5618:
  3663                           
  3664                           ;timer.c: 80:             digt = 0b01111000;
  3665  001EC0  0E78               	movlw	120
  3666  001EC2  D003               	goto	L9
  3667  001EC4                     l5620:
  3668                           
  3669                           ;timer.c: 83:             digt = 0b00000000;
  3670  001EC4  0E00               	movlw	0
  3671  001EC6  D001               	goto	L9
  3672  001EC8                     l5622:
  3673                           
  3674                           ;timer.c: 86:             digt = 0b00011000;
  3675  001EC8  0E18               	movlw	24
  3676  001ECA                     L9:
  3677  001ECA  6E0F               	movwf	timer_write@digt,c
  3678                           
  3679                           ;timer.c: 87:             break;
  3680  001ECC  D026               	goto	l5628
  3681  001ECE                     l5626:
  3682  001ECE  500B               	movf	timer_write@input,w,c
  3683  001ED0  6E0D               	movwf	??_timer_write& (0+255),c
  3684  001ED2  6A0E               	clrf	(??_timer_write+1)& (0+255),c
  3685                           
  3686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3687                           ; Switch size 1, requested type "simple"
  3688                           ; Number of cases is 1, Range of values is 0 to 0
  3689                           ; switch strategies available:
  3690                           ; Name         Instructions Cycles
  3691                           ; simple_byte            4     3 (average)
  3692                           ;	Chosen strategy is simple_byte
  3693  001ED4  500E               	movf	??_timer_write+1,w,c
  3694  001ED6  0A00               	xorlw	0	; case 0
  3695  001ED8  A4D8               	btfss	status,2,c
  3696  001EDA  D01F               	goto	l5628
  3697                           
  3698                           ; Switch size 1, requested type "simple"
  3699                           ; Number of cases is 10, Range of values is 0 to 9
  3700                           ; switch strategies available:
  3701                           ; Name         Instructions Cycles
  3702                           ; simple_byte           31    16 (average)
  3703                           ;	Chosen strategy is simple_byte
  3704  001EDC  500D               	movf	??_timer_write,w,c
  3705  001EDE  0A00               	xorlw	0	; case 0
  3706  001EE0  B4D8               	btfsc	status,2,c
  3707  001EE2  D7E0               	goto	l5604
  3708  001EE4  0A01               	xorlw	1	; case 1
  3709  001EE6  B4D8               	btfsc	status,2,c
  3710  001EE8  D7DF               	goto	l5606
  3711  001EEA  0A03               	xorlw	3	; case 2
  3712  001EEC  B4D8               	btfsc	status,2,c
  3713  001EEE  D7DE               	goto	l5608
  3714  001EF0  0A01               	xorlw	1	; case 3
  3715  001EF2  B4D8               	btfsc	status,2,c
  3716  001EF4  D7DD               	goto	l5610
  3717  001EF6  0A07               	xorlw	7	; case 4
  3718  001EF8  B4D8               	btfsc	status,2,c
  3719  001EFA  D7DC               	goto	l5612
  3720  001EFC  0A01               	xorlw	1	; case 5
  3721  001EFE  B4D8               	btfsc	status,2,c
  3722  001F00  D7DB               	goto	l5614
  3723  001F02  0A03               	xorlw	3	; case 6
  3724  001F04  B4D8               	btfsc	status,2,c
  3725  001F06  D7DA               	goto	l5616
  3726  001F08  0A01               	xorlw	1	; case 7
  3727  001F0A  B4D8               	btfsc	status,2,c
  3728  001F0C  D7D9               	goto	l5618
  3729  001F0E  0A0F               	xorlw	15	; case 8
  3730  001F10  B4D8               	btfsc	status,2,c
  3731  001F12  D7D8               	goto	l5620
  3732  001F14  0A01               	xorlw	1	; case 9
  3733  001F16  B4D8               	btfsc	status,2,c
  3734  001F18  D7D7               	goto	l5622
  3735  001F1A                     l5628:
  3736                           
  3737                           ;timer.c: 90:     if (!dot) {
  3738  001F1A  500C               	movf	timer_write@dot,w,c
  3739  001F1C  A4D8               	btfss	status,2,c
  3740  001F1E  D00A               	goto	l5634
  3741                           
  3742                           ;timer.c: 91:         digt = digt | 1 << 7;
  3743  001F20  500F               	movf	timer_write@digt,w,c
  3744  001F22  0980               	iorlw	128
  3745  001F24  6E0F               	movwf	timer_write@digt,c
  3746  001F26  D006               	goto	l5634
  3747  001F28                     l600:
  3748                           
  3749                           ;timer.c: 96:             display0 = digt;
  3750  001F28  C00F  F0E0         	movff	timer_write@digt,_display0
  3751                           
  3752                           ;timer.c: 97:             break;
  3753  001F2C  0012               	return	
  3754  001F2E                     l602:
  3755                           
  3756                           ;timer.c: 99:             display1 = digt;
  3757  001F2E  C00F  F0DF         	movff	timer_write@digt,_display1
  3758                           
  3759                           ;timer.c: 100:             break;
  3760  001F32  0012               	return	
  3761  001F34                     l5634:
  3762  001F34  C009  F00D         	movff	timer_write@display,??_timer_write
  3763  001F38  C00A  F00E         	movff	timer_write@display+1,??_timer_write+1
  3764                           
  3765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3766                           ; Switch size 1, requested type "simple"
  3767                           ; Number of cases is 1, Range of values is 0 to 0
  3768                           ; switch strategies available:
  3769                           ; Name         Instructions Cycles
  3770                           ; simple_byte            4     3 (average)
  3771                           ;	Chosen strategy is simple_byte
  3772  001F3C  500E               	movf	??_timer_write+1,w,c
  3773  001F3E  0A00               	xorlw	0	; case 0
  3774  001F40  A4D8               	btfss	status,2,c
  3775  001F42  0012               	return	
  3776                           
  3777                           ; Switch size 1, requested type "simple"
  3778                           ; Number of cases is 2, Range of values is 0 to 1
  3779                           ; switch strategies available:
  3780                           ; Name         Instructions Cycles
  3781                           ; simple_byte            7     4 (average)
  3782                           ;	Chosen strategy is simple_byte
  3783  001F44  500D               	movf	??_timer_write,w,c
  3784  001F46  0A00               	xorlw	0	; case 0
  3785  001F48  B4D8               	btfsc	status,2,c
  3786  001F4A  D7EE               	goto	l600
  3787  001F4C  0A01               	xorlw	1	; case 1
  3788  001F4E  A4D8               	btfss	status,2,c
  3789  001F50  0012               	return	
  3790  001F52  D7ED               	goto	l602
  3791  001F54                     __end_of_timer_write:
  3792                           	opt callstack 0
  3793                           
  3794 ;; *************** function ___awmod *****************
  3795 ;; Defined at:
  3796 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  dividend        2   16[COMRAM] int 
  3799 ;;  divisor         2   18[COMRAM] int 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  sign            1   21[COMRAM] unsigned char 
  3802 ;;  counter         1   20[COMRAM] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  2   16[COMRAM] int 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;Total ram usage:        6 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    4
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_timer_writeInt
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text8
  3827  00235E                     __ptext8:
  3828                           	opt callstack 0
  3829  00235E                     ___awmod:
  3830                           	opt callstack 24
  3831                           
  3832                           ;incstack = 0
  3833  00235E  0E00               	movlw	0
  3834  002360  6E16               	movwf	___awmod@sign,c
  3835  002362  AE12               	btfss	___awmod@dividend+1,7,c
  3836  002364  D006               	goto	l5840
  3837  002366  6C11               	negf	___awmod@dividend,c
  3838  002368  1E12               	comf	___awmod@dividend+1,f,c
  3839  00236A  B0D8               	btfsc	status,0,c
  3840  00236C  2A12               	incf	___awmod@dividend+1,f,c
  3841  00236E  0E01               	movlw	1
  3842  002370  6E16               	movwf	___awmod@sign,c
  3843  002372                     l5840:
  3844  002372  AE14               	btfss	___awmod@divisor+1,7,c
  3845  002374  D004               	goto	l5844
  3846  002376  6C13               	negf	___awmod@divisor,c
  3847  002378  1E14               	comf	___awmod@divisor+1,f,c
  3848  00237A  B0D8               	btfsc	status,0,c
  3849  00237C  2A14               	incf	___awmod@divisor+1,f,c
  3850  00237E                     l5844:
  3851  00237E  5013               	movf	___awmod@divisor,w,c
  3852  002380  1014               	iorwf	___awmod@divisor+1,w,c
  3853  002382  B4D8               	btfsc	status,2,c
  3854  002384  D018               	goto	l5860
  3855  002386  0E01               	movlw	1
  3856  002388  6E15               	movwf	___awmod@counter,c
  3857  00238A  D004               	goto	l5850
  3858  00238C                     l5848:
  3859  00238C  90D8               	bcf	status,0,c
  3860  00238E  3613               	rlcf	___awmod@divisor,f,c
  3861  002390  3614               	rlcf	___awmod@divisor+1,f,c
  3862  002392  2A15               	incf	___awmod@counter,f,c
  3863  002394                     l5850:
  3864  002394  AE14               	btfss	___awmod@divisor+1,7,c
  3865  002396  D7FA               	goto	l5848
  3866  002398                     u6760:
  3867  002398  5013               	movf	___awmod@divisor,w,c
  3868  00239A  5C11               	subwf	___awmod@dividend,w,c
  3869  00239C  5014               	movf	___awmod@divisor+1,w,c
  3870  00239E  5812               	subwfb	___awmod@dividend+1,w,c
  3871  0023A0  A0D8               	btfss	status,0,c
  3872  0023A2  D004               	goto	l5856
  3873  0023A4  5013               	movf	___awmod@divisor,w,c
  3874  0023A6  5E11               	subwf	___awmod@dividend,f,c
  3875  0023A8  5014               	movf	___awmod@divisor+1,w,c
  3876  0023AA  5A12               	subwfb	___awmod@dividend+1,f,c
  3877  0023AC                     l5856:
  3878  0023AC  90D8               	bcf	status,0,c
  3879  0023AE  3214               	rrcf	___awmod@divisor+1,f,c
  3880  0023B0  3213               	rrcf	___awmod@divisor,f,c
  3881  0023B2  2E15               	decfsz	___awmod@counter,f,c
  3882  0023B4  D7F1               	goto	u6760
  3883  0023B6                     l5860:
  3884  0023B6  5016               	movf	___awmod@sign,w,c
  3885  0023B8  B4D8               	btfsc	status,2,c
  3886  0023BA  D004               	goto	l5864
  3887  0023BC  6C11               	negf	___awmod@dividend,c
  3888  0023BE  1E12               	comf	___awmod@dividend+1,f,c
  3889  0023C0  B0D8               	btfsc	status,0,c
  3890  0023C2  2A12               	incf	___awmod@dividend+1,f,c
  3891  0023C4                     l5864:
  3892  0023C4  C011  F011         	movff	___awmod@dividend,?___awmod
  3893  0023C8  C012  F012         	movff	___awmod@dividend+1,?___awmod+1
  3894  0023CC  0012               	return		;funcret
  3895  0023CE                     __end_of___awmod:
  3896                           	opt callstack 0
  3897                           
  3898 ;; *************** function ___awdiv *****************
  3899 ;; Defined at:
  3900 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  dividend        2    8[COMRAM] int 
  3903 ;;  divisor         2   10[COMRAM] int 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  quotient        2   14[COMRAM] int 
  3906 ;;  sign            1   13[COMRAM] unsigned char 
  3907 ;;  counter         1   12[COMRAM] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  2    8[COMRAM] int 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;Total ram usage:        8 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    4
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_timer_writeInt
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text9
  3932  002264                     __ptext9:
  3933                           	opt callstack 0
  3934  002264                     ___awdiv:
  3935                           	opt callstack 24
  3936                           
  3937                           ;incstack = 0
  3938  002264  0E00               	movlw	0
  3939  002266  6E0E               	movwf	___awdiv@sign,c
  3940  002268  AE0C               	btfss	___awdiv@divisor+1,7,c
  3941  00226A  D006               	goto	l5796
  3942  00226C  6C0B               	negf	___awdiv@divisor,c
  3943  00226E  1E0C               	comf	___awdiv@divisor+1,f,c
  3944  002270  B0D8               	btfsc	status,0,c
  3945  002272  2A0C               	incf	___awdiv@divisor+1,f,c
  3946  002274  0E01               	movlw	1
  3947  002276  6E0E               	movwf	___awdiv@sign,c
  3948  002278                     l5796:
  3949  002278  AE0A               	btfss	___awdiv@dividend+1,7,c
  3950  00227A  D006               	goto	l5802
  3951  00227C  6C09               	negf	___awdiv@dividend,c
  3952  00227E  1E0A               	comf	___awdiv@dividend+1,f,c
  3953  002280  B0D8               	btfsc	status,0,c
  3954  002282  2A0A               	incf	___awdiv@dividend+1,f,c
  3955  002284  0E01               	movlw	1
  3956  002286  1A0E               	xorwf	___awdiv@sign,f,c
  3957  002288                     l5802:
  3958  002288  0E00               	movlw	0
  3959  00228A  6E10               	movwf	___awdiv@quotient+1,c
  3960  00228C  0E00               	movlw	0
  3961  00228E  6E0F               	movwf	___awdiv@quotient,c
  3962  002290  500B               	movf	___awdiv@divisor,w,c
  3963  002292  100C               	iorwf	___awdiv@divisor+1,w,c
  3964  002294  B4D8               	btfsc	status,2,c
  3965  002296  D01C               	goto	l5824
  3966  002298  0E01               	movlw	1
  3967  00229A  6E0D               	movwf	___awdiv@counter,c
  3968  00229C  D004               	goto	l5810
  3969  00229E                     l5808:
  3970  00229E  90D8               	bcf	status,0,c
  3971  0022A0  360B               	rlcf	___awdiv@divisor,f,c
  3972  0022A2  360C               	rlcf	___awdiv@divisor+1,f,c
  3973  0022A4  2A0D               	incf	___awdiv@counter,f,c
  3974  0022A6                     l5810:
  3975  0022A6  AE0C               	btfss	___awdiv@divisor+1,7,c
  3976  0022A8  D7FA               	goto	l5808
  3977  0022AA                     u6700:
  3978  0022AA  90D8               	bcf	status,0,c
  3979  0022AC  360F               	rlcf	___awdiv@quotient,f,c
  3980  0022AE  3610               	rlcf	___awdiv@quotient+1,f,c
  3981  0022B0  500B               	movf	___awdiv@divisor,w,c
  3982  0022B2  5C09               	subwf	___awdiv@dividend,w,c
  3983  0022B4  500C               	movf	___awdiv@divisor+1,w,c
  3984  0022B6  580A               	subwfb	___awdiv@dividend+1,w,c
  3985  0022B8  A0D8               	btfss	status,0,c
  3986  0022BA  D005               	goto	l5820
  3987  0022BC  500B               	movf	___awdiv@divisor,w,c
  3988  0022BE  5E09               	subwf	___awdiv@dividend,f,c
  3989  0022C0  500C               	movf	___awdiv@divisor+1,w,c
  3990  0022C2  5A0A               	subwfb	___awdiv@dividend+1,f,c
  3991  0022C4  800F               	bsf	___awdiv@quotient,0,c
  3992  0022C6                     l5820:
  3993  0022C6  90D8               	bcf	status,0,c
  3994  0022C8  320C               	rrcf	___awdiv@divisor+1,f,c
  3995  0022CA  320B               	rrcf	___awdiv@divisor,f,c
  3996  0022CC  2E0D               	decfsz	___awdiv@counter,f,c
  3997  0022CE  D7ED               	goto	u6700
  3998  0022D0                     l5824:
  3999  0022D0  500E               	movf	___awdiv@sign,w,c
  4000  0022D2  B4D8               	btfsc	status,2,c
  4001  0022D4  D004               	goto	l5828
  4002  0022D6  6C0F               	negf	___awdiv@quotient,c
  4003  0022D8  1E10               	comf	___awdiv@quotient+1,f,c
  4004  0022DA  B0D8               	btfsc	status,0,c
  4005  0022DC  2A10               	incf	___awdiv@quotient+1,f,c
  4006  0022DE                     l5828:
  4007  0022DE  C00F  F009         	movff	___awdiv@quotient,?___awdiv
  4008  0022E2  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
  4009  0022E6  0012               	return		;funcret
  4010  0022E8                     __end_of___awdiv:
  4011                           	opt callstack 0
  4012                           
  4013 ;; *************** function _timer_start *****************
  4014 ;; Defined at:
  4015 ;;		line 20 in file "timer.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;		None
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4033 ;;Total ram usage:        0 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    4
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_temperature_monitor
  4040 ;;		_timer_control
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text10
  4045  002C06                     __ptext10:
  4046                           	opt callstack 0
  4047  002C06                     _timer_start:
  4048                           	opt callstack 25
  4049                           
  4050                           ;timer.c: 21:     running = 1;
  4051                           
  4052                           ;incstack = 0
  4053  002C06  0E01               	movlw	1
  4054  002C08  6E50               	movwf	_running,c
  4055  002C0A  0012               	return		;funcret
  4056  002C0C                     __end_of_timer_start:
  4057                           	opt callstack 0
  4058                           
  4059 ;; *************** function _roundf *****************
  4060 ;; Defined at:
  4061 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\roundf.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  x               4   34[COMRAM] float 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  y               4   56[COMRAM] float 
  4066 ;;  u               4   52[COMRAM] struct .
  4067 ;;  e               2   46[COMRAM] int 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  4   34[COMRAM] float 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;Total ram usage:       26 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:    6
  4084 ;; This function calls:
  4085 ;;		___fladd
  4086 ;;		___flge
  4087 ;;		___flmul
  4088 ;;		___flneg
  4089 ;;		___flsub
  4090 ;; This function is called by:
  4091 ;;		_temperature_monitor
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text11
  4096  0003D4                     __ptext11:
  4097                           	opt callstack 0
  4098  0003D4                     _roundf:
  4099                           	opt callstack 22
  4100                           
  4101                           ;incstack = 0
  4102  0003D4  C068  F035         	movff	roundf@F525,roundf@u
  4103  0003D8  C069  F036         	movff	roundf@F525+1,roundf@u+1
  4104  0003DC  C06A  F037         	movff	roundf@F525+2,roundf@u+2
  4105  0003E0  C06B  F038         	movff	roundf@F525+3,roundf@u+3
  4106  0003E4  C023  F035         	movff	roundf@x,roundf@u
  4107  0003E8  C024  F036         	movff	roundf@x+1,roundf@u+1
  4108  0003EC  C025  F037         	movff	roundf@x+2,roundf@u+2
  4109  0003F0  C026  F038         	movff	roundf@x+3,roundf@u+3
  4110  0003F4  C035  F027         	movff	roundf@u,??_roundf
  4111  0003F8  C036  F028         	movff	roundf@u+1,??_roundf+1
  4112  0003FC  C037  F029         	movff	roundf@u+2,??_roundf+2
  4113  000400  C038  F02A         	movff	roundf@u+3,??_roundf+3
  4114  000404  0E18               	movlw	24
  4115  000406  D005               	goto	u6880
  4116  000408                     u6885:
  4117  000408  90D8               	bcf	status,0,c
  4118  00040A  322A               	rrcf	??_roundf+3,f,c
  4119  00040C  3229               	rrcf	??_roundf+2,f,c
  4120  00040E  3228               	rrcf	??_roundf+1,f,c
  4121  000410  3227               	rrcf	??_roundf,f,c
  4122  000412                     u6880:
  4123  000412  2EE8               	decfsz	wreg,f,c
  4124  000414  D7F9               	goto	u6885
  4125  000416  5027               	movf	??_roundf,w,c
  4126  000418  6E2F               	movwf	roundf@e,c
  4127  00041A  6A30               	clrf	roundf@e+1,c
  4128  00041C  BE30               	btfsc	roundf@e+1,7,c
  4129  00041E  D00F               	goto	l5944
  4130  000420  5030               	movf	roundf@e+1,w,c
  4131  000422  E104               	bnz	u6890
  4132  000424  0E96               	movlw	150
  4133  000426  5C2F               	subwf	roundf@e,w,c
  4134  000428  A0D8               	btfss	status,0,c
  4135  00042A  D009               	goto	l5944
  4136  00042C                     u6890:
  4137  00042C  C023  F023         	movff	roundf@x,?_roundf
  4138  000430  C024  F024         	movff	roundf@x+1,?_roundf+1
  4139  000434  C025  F025         	movff	roundf@x+2,?_roundf+2
  4140  000438  C026  F026         	movff	roundf@x+3,?_roundf+3
  4141  00043C  0012               	return	
  4142  00043E                     l5944:
  4143  00043E  C035  F027         	movff	roundf@u,??_roundf
  4144  000442  C036  F028         	movff	roundf@u+1,??_roundf+1
  4145  000446  C037  F029         	movff	roundf@u+2,??_roundf+2
  4146  00044A  C038  F02A         	movff	roundf@u+3,??_roundf+3
  4147  00044E  0E20               	movlw	32
  4148  000450  D005               	goto	u6900
  4149  000452                     u6905:
  4150  000452  90D8               	bcf	status,0,c
  4151  000454  322A               	rrcf	??_roundf+3,f,c
  4152  000456  3229               	rrcf	??_roundf+2,f,c
  4153  000458  3228               	rrcf	??_roundf+1,f,c
  4154  00045A  3227               	rrcf	??_roundf,f,c
  4155  00045C                     u6900:
  4156  00045C  2EE8               	decfsz	wreg,f,c
  4157  00045E  D7F9               	goto	u6905
  4158  000460  5027               	movf	??_roundf,w,c
  4159  000462  1028               	iorwf	??_roundf+1,w,c
  4160  000464  1029               	iorwf	??_roundf+2,w,c
  4161  000466  102A               	iorwf	??_roundf+3,w,c
  4162  000468  B4D8               	btfsc	status,2,c
  4163  00046A  D012               	goto	l5948
  4164  00046C  C023  F009         	movff	roundf@x,___flneg@f1
  4165  000470  C024  F00A         	movff	roundf@x+1,___flneg@f1+1
  4166  000474  C025  F00B         	movff	roundf@x+2,___flneg@f1+2
  4167  000478  C026  F00C         	movff	roundf@x+3,___flneg@f1+3
  4168  00047C  ECEF  F014         	call	___flneg	;wreg free
  4169  000480  C009  F023         	movff	?___flneg,roundf@x
  4170  000484  C00A  F024         	movff	?___flneg+1,roundf@x+1
  4171  000488  C00B  F025         	movff	?___flneg+2,roundf@x+2
  4172  00048C  C00C  F026         	movff	?___flneg+3,roundf@x+3
  4173  000490                     l5948:
  4174  000490  BE30               	btfsc	roundf@e+1,7,c
  4175  000492  D006               	goto	u6920
  4176  000494  5030               	movf	roundf@e+1,w,c
  4177  000496  E11F               	bnz	l5954
  4178  000498  0E7E               	movlw	126
  4179  00049A  5C2F               	subwf	roundf@e,w,c
  4180  00049C  B0D8               	btfsc	status,0,c
  4181  00049E  D01B               	goto	l5954
  4182  0004A0                     u6920:
  4183  0004A0  C035  F009         	movff	roundf@u,___flmul@b
  4184  0004A4  C036  F00A         	movff	roundf@u+1,___flmul@b+1
  4185  0004A8  C037  F00B         	movff	roundf@u+2,___flmul@b+2
  4186  0004AC  C038  F00C         	movff	roundf@u+3,___flmul@b+3
  4187  0004B0  0E00               	movlw	0
  4188  0004B2  6E0D               	movwf	___flmul@a,c
  4189  0004B4  0E00               	movlw	0
  4190  0004B6  6E0E               	movwf	___flmul@a+1,c
  4191  0004B8  0E00               	movlw	0
  4192  0004BA  6E0F               	movwf	___flmul@a+2,c
  4193  0004BC  0E00               	movlw	0
  4194  0004BE  6E10               	movwf	___flmul@a+3,c
  4195  0004C0  EC41  F000         	call	___flmul	;wreg free
  4196  0004C4  C009  F023         	movff	?___flmul,?_roundf
  4197  0004C8  C00A  F024         	movff	?___flmul+1,?_roundf+1
  4198  0004CC  C00B  F025         	movff	?___flmul+2,?_roundf+2
  4199  0004D0  C00C  F026         	movff	?___flmul+3,?_roundf+3
  4200  0004D4  0012               	return	
  4201  0004D6                     l5954:
  4202  0004D6  0E00               	movlw	0
  4203  0004D8  6E0D               	movwf	___fladd@a,c
  4204  0004DA  0E00               	movlw	0
  4205  0004DC  6E0E               	movwf	___fladd@a+1,c
  4206  0004DE  0E00               	movlw	0
  4207  0004E0  6E0F               	movwf	___fladd@a+2,c
  4208  0004E2  0E4B               	movlw	75
  4209  0004E4  6E10               	movwf	___fladd@a+3,c
  4210  0004E6  C023  F009         	movff	roundf@x,___fladd@b
  4211  0004EA  C024  F00A         	movff	roundf@x+1,___fladd@b+1
  4212  0004EE  C025  F00B         	movff	roundf@x+2,___fladd@b+2
  4213  0004F2  C026  F00C         	movff	roundf@x+3,___fladd@b+3
  4214  0004F6  EC87  F003         	call	___fladd	;wreg free
  4215  0004FA  C009  F031         	movff	?___fladd,_roundf$2246
  4216  0004FE  C00A  F032         	movff	?___fladd+1,_roundf$2246+1
  4217  000502  C00B  F033         	movff	?___fladd+2,_roundf$2246+2
  4218  000506  C00C  F034         	movff	?___fladd+3,_roundf$2246+3
  4219  00050A  0E00               	movlw	0
  4220  00050C  6E0D               	movwf	___fladd@a,c
  4221  00050E  0E00               	movlw	0
  4222  000510  6E0E               	movwf	___fladd@a+1,c
  4223  000512  0E00               	movlw	0
  4224  000514  6E0F               	movwf	___fladd@a+2,c
  4225  000516  0ECB               	movlw	203
  4226  000518  6E10               	movwf	___fladd@a+3,c
  4227  00051A  C031  F009         	movff	_roundf$2246,___fladd@b
  4228  00051E  C032  F00A         	movff	_roundf$2246+1,___fladd@b+1
  4229  000522  C033  F00B         	movff	_roundf$2246+2,___fladd@b+2
  4230  000526  C034  F00C         	movff	_roundf$2246+3,___fladd@b+3
  4231  00052A  EC87  F003         	call	___fladd	;wreg free
  4232  00052E  C009  F02B         	movff	?___fladd,_roundf$2247
  4233  000532  C00A  F02C         	movff	?___fladd+1,_roundf$2247+1
  4234  000536  C00B  F02D         	movff	?___fladd+2,_roundf$2247+2
  4235  00053A  C00C  F02E         	movff	?___fladd+3,_roundf$2247+3
  4236  00053E  C02B  F019         	movff	_roundf$2247,___flsub@b
  4237  000542  C02C  F01A         	movff	_roundf$2247+1,___flsub@b+1
  4238  000546  C02D  F01B         	movff	_roundf$2247+2,___flsub@b+2
  4239  00054A  C02E  F01C         	movff	_roundf$2247+3,___flsub@b+3
  4240  00054E  C023  F01D         	movff	roundf@x,___flsub@a
  4241  000552  C024  F01E         	movff	roundf@x+1,___flsub@a+1
  4242  000556  C025  F01F         	movff	roundf@x+2,___flsub@a+2
  4243  00055A  C026  F020         	movff	roundf@x+3,___flsub@a+3
  4244  00055E  EC43  F013         	call	___flsub	;wreg free
  4245  000562  C019  F039         	movff	?___flsub,roundf@y
  4246  000566  C01A  F03A         	movff	?___flsub+1,roundf@y+1
  4247  00056A  C01B  F03B         	movff	?___flsub+2,roundf@y+2
  4248  00056E  C01C  F03C         	movff	?___flsub+3,roundf@y+3
  4249  000572  0E00               	movlw	0
  4250  000574  6E09               	movwf	___flge@ff1,c
  4251  000576  0E00               	movlw	0
  4252  000578  6E0A               	movwf	___flge@ff1+1,c
  4253  00057A  0E00               	movlw	0
  4254  00057C  6E0B               	movwf	___flge@ff1+2,c
  4255  00057E  0E3F               	movlw	63
  4256  000580  6E0C               	movwf	___flge@ff1+3,c
  4257  000582  C039  F00D         	movff	roundf@y,___flge@ff2
  4258  000586  C03A  F00E         	movff	roundf@y+1,___flge@ff2+1
  4259  00058A  C03B  F00F         	movff	roundf@y+2,___flge@ff2+2
  4260  00058E  C03C  F010         	movff	roundf@y+3,___flge@ff2+3
  4261  000592  EC32  F00E         	call	___flge	;wreg free
  4262  000596  B0D8               	btfsc	status,0,c
  4263  000598  D02D               	goto	l5958
  4264  00059A  C023  F00D         	movff	roundf@x,___fladd@a
  4265  00059E  C024  F00E         	movff	roundf@x+1,___fladd@a+1
  4266  0005A2  C025  F00F         	movff	roundf@x+2,___fladd@a+2
  4267  0005A6  C026  F010         	movff	roundf@x+3,___fladd@a+3
  4268  0005AA  C039  F009         	movff	roundf@y,___fladd@b
  4269  0005AE  C03A  F00A         	movff	roundf@y+1,___fladd@b+1
  4270  0005B2  C03B  F00B         	movff	roundf@y+2,___fladd@b+2
  4271  0005B6  C03C  F00C         	movff	roundf@y+3,___fladd@b+3
  4272  0005BA  EC87  F003         	call	___fladd	;wreg free
  4273  0005BE  C009  F031         	movff	?___fladd,_roundf$2246
  4274  0005C2  C00A  F032         	movff	?___fladd+1,_roundf$2246+1
  4275  0005C6  C00B  F033         	movff	?___fladd+2,_roundf$2246+2
  4276  0005CA  C00C  F034         	movff	?___fladd+3,_roundf$2246+3
  4277  0005CE  C031  F009         	movff	_roundf$2246,___fladd@b
  4278  0005D2  C032  F00A         	movff	_roundf$2246+1,___fladd@b+1
  4279  0005D6  C033  F00B         	movff	_roundf$2246+2,___fladd@b+2
  4280  0005DA  C034  F00C         	movff	_roundf$2246+3,___fladd@b+3
  4281  0005DE  0E00               	movlw	0
  4282  0005E0  6E0D               	movwf	___fladd@a,c
  4283  0005E2  0E00               	movlw	0
  4284  0005E4  6E0E               	movwf	___fladd@a+1,c
  4285  0005E6  0E80               	movlw	128
  4286  0005E8  6E0F               	movwf	___fladd@a+2,c
  4287  0005EA  0EBF               	movlw	191
  4288  0005EC  6E10               	movwf	___fladd@a+3,c
  4289  0005EE  EC87  F003         	call	___fladd	;wreg free
  4290  0005F2  D053               	goto	L10
  4291  0005F4                     l5958:
  4292  0005F4  0E00               	movlw	0
  4293  0005F6  6E09               	movwf	___flge@ff1,c
  4294  0005F8  0E00               	movlw	0
  4295  0005FA  6E0A               	movwf	___flge@ff1+1,c
  4296  0005FC  0E00               	movlw	0
  4297  0005FE  6E0B               	movwf	___flge@ff1+2,c
  4298  000600  0EBF               	movlw	191
  4299  000602  6E0C               	movwf	___flge@ff1+3,c
  4300  000604  C039  F00D         	movff	roundf@y,___flge@ff2
  4301  000608  C03A  F00E         	movff	roundf@y+1,___flge@ff2+1
  4302  00060C  C03B  F00F         	movff	roundf@y+2,___flge@ff2+2
  4303  000610  C03C  F010         	movff	roundf@y+3,___flge@ff2+3
  4304  000614  EC32  F00E         	call	___flge	;wreg free
  4305  000618  A0D8               	btfss	status,0,c
  4306  00061A  D02D               	goto	l5962
  4307  00061C  C023  F00D         	movff	roundf@x,___fladd@a
  4308  000620  C024  F00E         	movff	roundf@x+1,___fladd@a+1
  4309  000624  C025  F00F         	movff	roundf@x+2,___fladd@a+2
  4310  000628  C026  F010         	movff	roundf@x+3,___fladd@a+3
  4311  00062C  C039  F009         	movff	roundf@y,___fladd@b
  4312  000630  C03A  F00A         	movff	roundf@y+1,___fladd@b+1
  4313  000634  C03B  F00B         	movff	roundf@y+2,___fladd@b+2
  4314  000638  C03C  F00C         	movff	roundf@y+3,___fladd@b+3
  4315  00063C  EC87  F003         	call	___fladd	;wreg free
  4316  000640  C009  F031         	movff	?___fladd,_roundf$2246
  4317  000644  C00A  F032         	movff	?___fladd+1,_roundf$2246+1
  4318  000648  C00B  F033         	movff	?___fladd+2,_roundf$2246+2
  4319  00064C  C00C  F034         	movff	?___fladd+3,_roundf$2246+3
  4320  000650  C031  F009         	movff	_roundf$2246,___fladd@b
  4321  000654  C032  F00A         	movff	_roundf$2246+1,___fladd@b+1
  4322  000658  C033  F00B         	movff	_roundf$2246+2,___fladd@b+2
  4323  00065C  C034  F00C         	movff	_roundf$2246+3,___fladd@b+3
  4324  000660  0E00               	movlw	0
  4325  000662  6E0D               	movwf	___fladd@a,c
  4326  000664  0E00               	movlw	0
  4327  000666  6E0E               	movwf	___fladd@a+1,c
  4328  000668  0E80               	movlw	128
  4329  00066A  6E0F               	movwf	___fladd@a+2,c
  4330  00066C  0E3F               	movlw	63
  4331  00066E  6E10               	movwf	___fladd@a+3,c
  4332  000670  EC87  F003         	call	___fladd	;wreg free
  4333  000674  D012               	goto	L10
  4334  000676                     l5962:
  4335  000676  C039  F009         	movff	roundf@y,___fladd@b
  4336  00067A  C03A  F00A         	movff	roundf@y+1,___fladd@b+1
  4337  00067E  C03B  F00B         	movff	roundf@y+2,___fladd@b+2
  4338  000682  C03C  F00C         	movff	roundf@y+3,___fladd@b+3
  4339  000686  C023  F00D         	movff	roundf@x,___fladd@a
  4340  00068A  C024  F00E         	movff	roundf@x+1,___fladd@a+1
  4341  00068E  C025  F00F         	movff	roundf@x+2,___fladd@a+2
  4342  000692  C026  F010         	movff	roundf@x+3,___fladd@a+3
  4343  000696  EC87  F003         	call	___fladd	;wreg free
  4344  00069A                     L10:
  4345  00069A  C009  F039         	movff	?___fladd,roundf@y
  4346  00069E  C00A  F03A         	movff	?___fladd+1,roundf@y+1
  4347  0006A2  C00B  F03B         	movff	?___fladd+2,roundf@y+2
  4348  0006A6  C00C  F03C         	movff	?___fladd+3,roundf@y+3
  4349  0006AA  C035  F027         	movff	roundf@u,??_roundf
  4350  0006AE  C036  F028         	movff	roundf@u+1,??_roundf+1
  4351  0006B2  C037  F029         	movff	roundf@u+2,??_roundf+2
  4352  0006B6  C038  F02A         	movff	roundf@u+3,??_roundf+3
  4353  0006BA  0E20               	movlw	32
  4354  0006BC  D005               	goto	u6950
  4355  0006BE                     u6955:
  4356  0006BE  90D8               	bcf	status,0,c
  4357  0006C0  322A               	rrcf	??_roundf+3,f,c
  4358  0006C2  3229               	rrcf	??_roundf+2,f,c
  4359  0006C4  3228               	rrcf	??_roundf+1,f,c
  4360  0006C6  3227               	rrcf	??_roundf,f,c
  4361  0006C8                     u6950:
  4362  0006C8  2EE8               	decfsz	wreg,f,c
  4363  0006CA  D7F9               	goto	u6955
  4364  0006CC  5027               	movf	??_roundf,w,c
  4365  0006CE  1028               	iorwf	??_roundf+1,w,c
  4366  0006D0  1029               	iorwf	??_roundf+2,w,c
  4367  0006D2  102A               	iorwf	??_roundf+3,w,c
  4368  0006D4  B4D8               	btfsc	status,2,c
  4369  0006D6  D012               	goto	l5968
  4370  0006D8  C039  F009         	movff	roundf@y,___flneg@f1
  4371  0006DC  C03A  F00A         	movff	roundf@y+1,___flneg@f1+1
  4372  0006E0  C03B  F00B         	movff	roundf@y+2,___flneg@f1+2
  4373  0006E4  C03C  F00C         	movff	roundf@y+3,___flneg@f1+3
  4374  0006E8  ECEF  F014         	call	___flneg	;wreg free
  4375  0006EC  C009  F039         	movff	?___flneg,roundf@y
  4376  0006F0  C00A  F03A         	movff	?___flneg+1,roundf@y+1
  4377  0006F4  C00B  F03B         	movff	?___flneg+2,roundf@y+2
  4378  0006F8  C00C  F03C         	movff	?___flneg+3,roundf@y+3
  4379  0006FC                     l5968:
  4380  0006FC  C039  F023         	movff	roundf@y,?_roundf
  4381  000700  C03A  F024         	movff	roundf@y+1,?_roundf+1
  4382  000704  C03B  F025         	movff	roundf@y+2,?_roundf+2
  4383  000708  C03C  F026         	movff	roundf@y+3,?_roundf+3
  4384  00070C  0012               	return		;funcret
  4385  00070E                     __end_of_roundf:
  4386                           	opt callstack 0
  4387                           
  4388 ;; *************** function ___flsub *****************
  4389 ;; Defined at:
  4390 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  b               4   24[COMRAM] float 
  4393 ;;  a               4   28[COMRAM] float 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  4   24[COMRAM] float 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4405 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;Total ram usage:        8 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    5
  4412 ;; This function calls:
  4413 ;;		___fladd
  4414 ;; This function is called by:
  4415 ;;		_roundf
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text12
  4420  002686                     __ptext12:
  4421                           	opt callstack 0
  4422  002686                     ___flsub:
  4423                           	opt callstack 22
  4424                           
  4425                           ;incstack = 0
  4426  002686  0E00               	movlw	0
  4427  002688  1A1D               	xorwf	___flsub@a,f,c
  4428  00268A  0E00               	movlw	0
  4429  00268C  1A1E               	xorwf	___flsub@a+1,f,c
  4430  00268E  0E00               	movlw	0
  4431  002690  1A1F               	xorwf	___flsub@a+2,f,c
  4432  002692  0E80               	movlw	128
  4433  002694  1A20               	xorwf	___flsub@a+3,f,c
  4434  002696  C019  F009         	movff	___flsub@b,___fladd@b
  4435  00269A  C01A  F00A         	movff	___flsub@b+1,___fladd@b+1
  4436  00269E  C01B  F00B         	movff	___flsub@b+2,___fladd@b+2
  4437  0026A2  C01C  F00C         	movff	___flsub@b+3,___fladd@b+3
  4438  0026A6  C01D  F00D         	movff	___flsub@a,___fladd@a
  4439  0026AA  C01E  F00E         	movff	___flsub@a+1,___fladd@a+1
  4440  0026AE  C01F  F00F         	movff	___flsub@a+2,___fladd@a+2
  4441  0026B2  C020  F010         	movff	___flsub@a+3,___fladd@a+3
  4442  0026B6  EC87  F003         	call	___fladd	;wreg free
  4443  0026BA  C009  F019         	movff	?___fladd,?___flsub
  4444  0026BE  C00A  F01A         	movff	?___fladd+1,?___flsub+1
  4445  0026C2  C00B  F01B         	movff	?___fladd+2,?___flsub+2
  4446  0026C6  C00C  F01C         	movff	?___fladd+3,?___flsub+3
  4447  0026CA  0012               	return		;funcret
  4448  0026CC                     __end_of___flsub:
  4449                           	opt callstack 0
  4450                           
  4451 ;; *************** function ___fladd *****************
  4452 ;; Defined at:
  4453 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  b               4    8[COMRAM] float 
  4456 ;;  a               4   12[COMRAM] float 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  grs             1   23[COMRAM] unsigned char 
  4459 ;;  bexp            1   22[COMRAM] unsigned char 
  4460 ;;  aexp            1   21[COMRAM] unsigned char 
  4461 ;;  signs           1   20[COMRAM] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  4    8[COMRAM] unsigned char 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4471 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;Total ram usage:       16 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    4
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		___flsub
  4482 ;;		_roundf
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text13
  4487  00070E                     __ptext13:
  4488                           	opt callstack 0
  4489  00070E                     ___fladd:
  4490                           	opt callstack 22
  4491                           
  4492                           ;incstack = 0
  4493  00070E  500C               	movf	___fladd@b+3,w,c
  4494  000710  0B80               	andlw	128
  4495  000712  6E15               	movwf	___fladd@signs,c
  4496  000714  500C               	movf	___fladd@b+3,w,c
  4497  000716  240C               	addwf	___fladd@b+3,w,c
  4498  000718  6E17               	movwf	___fladd@bexp,c
  4499  00071A  BE0B               	btfsc	___fladd@b+2,7,c
  4500  00071C  8017               	bsf	___fladd@bexp,0,c
  4501  00071E  5017               	movf	___fladd@bexp,w,c
  4502  000720  B4D8               	btfsc	status,2,c
  4503  000722  D00D               	goto	l5404
  4504  000724  2817               	incf	___fladd@bexp,w,c
  4505  000726  A4D8               	btfss	status,2,c
  4506  000728  D008               	goto	l5400
  4507  00072A  0E00               	movlw	0
  4508  00072C  6E09               	movwf	___fladd@b,c
  4509  00072E  0E00               	movlw	0
  4510  000730  6E0A               	movwf	___fladd@b+1,c
  4511  000732  0E00               	movlw	0
  4512  000734  6E0B               	movwf	___fladd@b+2,c
  4513  000736  0E00               	movlw	0
  4514  000738  6E0C               	movwf	___fladd@b+3,c
  4515  00073A                     l5400:
  4516  00073A  8E0B               	bsf	___fladd@b+2,7,c
  4517  00073C  D006               	goto	L11
  4518  00073E                     l5404:
  4519  00073E  0E00               	movlw	0
  4520  000740  6E09               	movwf	___fladd@b,c
  4521  000742  0E00               	movlw	0
  4522  000744  6E0A               	movwf	___fladd@b+1,c
  4523  000746  0E00               	movlw	0
  4524  000748  6E0B               	movwf	___fladd@b+2,c
  4525  00074A                     L11:
  4526  00074A  0E00               	movlw	0
  4527  00074C  6E0C               	movwf	___fladd@b+3,c
  4528  00074E  5010               	movf	___fladd@a+3,w,c
  4529  000750  0B80               	andlw	128
  4530  000752  6E16               	movwf	___fladd@aexp,c
  4531  000754  5015               	movf	___fladd@signs,w,c
  4532  000756  1816               	xorwf	___fladd@aexp,w,c
  4533  000758  A4D8               	btfss	status,2,c
  4534  00075A  8C15               	bsf	___fladd@signs,6,c
  4535  00075C  5010               	movf	___fladd@a+3,w,c
  4536  00075E  2410               	addwf	___fladd@a+3,w,c
  4537  000760  6E16               	movwf	___fladd@aexp,c
  4538  000762  BE0F               	btfsc	___fladd@a+2,7,c
  4539  000764  8016               	bsf	___fladd@aexp,0,c
  4540  000766  5016               	movf	___fladd@aexp,w,c
  4541  000768  B4D8               	btfsc	status,2,c
  4542  00076A  D00D               	goto	l5428
  4543  00076C  2816               	incf	___fladd@aexp,w,c
  4544  00076E  A4D8               	btfss	status,2,c
  4545  000770  D008               	goto	l5424
  4546  000772  0E00               	movlw	0
  4547  000774  6E0D               	movwf	___fladd@a,c
  4548  000776  0E00               	movlw	0
  4549  000778  6E0E               	movwf	___fladd@a+1,c
  4550  00077A  0E00               	movlw	0
  4551  00077C  6E0F               	movwf	___fladd@a+2,c
  4552  00077E  0E00               	movlw	0
  4553  000780  6E10               	movwf	___fladd@a+3,c
  4554  000782                     l5424:
  4555  000782  8E0F               	bsf	___fladd@a+2,7,c
  4556  000784  D006               	goto	L12
  4557  000786                     l5428:
  4558  000786  0E00               	movlw	0
  4559  000788  6E0D               	movwf	___fladd@a,c
  4560  00078A  0E00               	movlw	0
  4561  00078C  6E0E               	movwf	___fladd@a+1,c
  4562  00078E  0E00               	movlw	0
  4563  000790  6E0F               	movwf	___fladd@a+2,c
  4564  000792                     L12:
  4565  000792  0E00               	movlw	0
  4566  000794  6E10               	movwf	___fladd@a+3,c
  4567  000796  5017               	movf	___fladd@bexp,w,c
  4568  000798  5C16               	subwf	___fladd@aexp,w,c
  4569  00079A  B0D8               	btfsc	status,0,c
  4570  00079C  D022               	goto	l5466
  4571  00079E  AC15               	btfss	___fladd@signs,6,c
  4572  0007A0  D002               	goto	l5436
  4573  0007A2  0E80               	movlw	128
  4574  0007A4  1A15               	xorwf	___fladd@signs,f,c
  4575  0007A6                     l5436:
  4576  0007A6  C017  F018         	movff	___fladd@bexp,___fladd@grs
  4577  0007AA  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  4578  0007AE  C018  F016         	movff	___fladd@grs,___fladd@aexp
  4579  0007B2  C009  F018         	movff	___fladd@b,___fladd@grs
  4580  0007B6  C00D  F009         	movff	___fladd@a,___fladd@b
  4581  0007BA  C018  F00D         	movff	___fladd@grs,___fladd@a
  4582  0007BE  C00A  F018         	movff	___fladd@b+1,___fladd@grs
  4583  0007C2  C00E  F00A         	movff	___fladd@a+1,___fladd@b+1
  4584  0007C6  C018  F00E         	movff	___fladd@grs,___fladd@a+1
  4585  0007CA  C00B  F018         	movff	___fladd@b+2,___fladd@grs
  4586  0007CE  C00F  F00B         	movff	___fladd@a+2,___fladd@b+2
  4587  0007D2  C018  F00F         	movff	___fladd@grs,___fladd@a+2
  4588  0007D6  C00C  F018         	movff	___fladd@b+3,___fladd@grs
  4589  0007DA  C010  F00C         	movff	___fladd@a+3,___fladd@b+3
  4590  0007DE  C018  F010         	movff	___fladd@grs,___fladd@a+3
  4591  0007E2                     l5466:
  4592  0007E2  0E00               	movlw	0
  4593  0007E4  6E18               	movwf	___fladd@grs,c
  4594  0007E6  5017               	movf	___fladd@bexp,w,c
  4595  0007E8  C016  F011         	movff	___fladd@aexp,??___fladd
  4596  0007EC  6A12               	clrf	(??___fladd+1)& (0+255),c
  4597  0007EE  5E11               	subwf	??___fladd,f,c
  4598  0007F0  0E00               	movlw	0
  4599  0007F2  5A12               	subwfb	??___fladd+1,f,c
  4600  0007F4  BE12               	btfsc	??___fladd+1,7,c
  4601  0007F6  D02C               	goto	l1255
  4602  0007F8  5012               	movf	??___fladd+1,w,c
  4603  0007FA  E104               	bnz	u6140
  4604  0007FC  0E1A               	movlw	26
  4605  0007FE  5C11               	subwf	??___fladd,w,c
  4606  000800  A0D8               	btfss	status,0,c
  4607  000802  D026               	goto	l1255
  4608  000804                     u6140:
  4609  000804  5009               	movf	___fladd@b,w,c
  4610  000806  100A               	iorwf	___fladd@b+1,w,c
  4611  000808  100B               	iorwf	___fladd@b+2,w,c
  4612  00080A  100C               	iorwf	___fladd@b+3,w,c
  4613  00080C  B4D8               	btfsc	status,2,c
  4614  00080E  D002               	goto	u6150
  4615  000810  0E01               	movlw	1
  4616  000812  D001               	goto	u6160
  4617  000814                     u6150:
  4618  000814  0E00               	movlw	0
  4619  000816                     u6160:
  4620  000816  6E18               	movwf	___fladd@grs,c
  4621  000818  0E00               	movlw	0
  4622  00081A  6E09               	movwf	___fladd@b,c
  4623  00081C  0E00               	movlw	0
  4624  00081E  6E0A               	movwf	___fladd@b+1,c
  4625  000820  0E00               	movlw	0
  4626  000822  6E0B               	movwf	___fladd@b+2,c
  4627  000824  0E00               	movlw	0
  4628  000826  6E0C               	movwf	___fladd@b+3,c
  4629  000828  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  4630  00082C  D015               	goto	u6190
  4631  00082E                     l1256:
  4632  00082E  A018               	btfss	___fladd@grs,0,c
  4633  000830  D005               	goto	l5478
  4634  000832  90D8               	bcf	status,0,c
  4635  000834  3018               	rrcf	___fladd@grs,w,c
  4636  000836  0901               	iorlw	1
  4637  000838  6E18               	movwf	___fladd@grs,c
  4638  00083A  D002               	goto	l5480
  4639  00083C                     l5478:
  4640  00083C  90D8               	bcf	status,0,c
  4641  00083E  3218               	rrcf	___fladd@grs,f,c
  4642  000840                     l5480:
  4643  000840  B009               	btfsc	___fladd@b,0,c
  4644  000842  8E18               	bsf	___fladd@grs,7,c
  4645  000844  340C               	rlcf	___fladd@b+3,w,c
  4646  000846  320C               	rrcf	___fladd@b+3,f,c
  4647  000848  320B               	rrcf	___fladd@b+2,f,c
  4648  00084A  320A               	rrcf	___fladd@b+1,f,c
  4649  00084C  3209               	rrcf	___fladd@b,f,c
  4650  00084E  2A17               	incf	___fladd@bexp,f,c
  4651  000850                     l1255:
  4652  000850  5016               	movf	___fladd@aexp,w,c
  4653  000852  5C17               	subwf	___fladd@bexp,w,c
  4654  000854  A0D8               	btfss	status,0,c
  4655  000856  D7EB               	goto	l1256
  4656  000858                     u6190:
  4657  000858  BC15               	btfsc	___fladd@signs,6,c
  4658  00085A  D028               	goto	l5512
  4659  00085C  5017               	movf	___fladd@bexp,w,c
  4660  00085E  A4D8               	btfss	status,2,c
  4661  000860  D009               	goto	l5494
  4662  000862  0E00               	movlw	0
  4663  000864  6E09               	movwf	?___fladd,c
  4664  000866  0E00               	movlw	0
  4665  000868  6E0A               	movwf	?___fladd+1,c
  4666  00086A  0E00               	movlw	0
  4667  00086C  6E0B               	movwf	?___fladd+2,c
  4668  00086E  0E00               	movlw	0
  4669  000870  6E0C               	movwf	?___fladd+3,c
  4670  000872  0012               	return	
  4671  000874                     l5494:
  4672  000874  500D               	movf	___fladd@a,w,c
  4673  000876  2609               	addwf	___fladd@b,f,c
  4674  000878  500E               	movf	___fladd@a+1,w,c
  4675  00087A  220A               	addwfc	___fladd@b+1,f,c
  4676  00087C  500F               	movf	___fladd@a+2,w,c
  4677  00087E  220B               	addwfc	___fladd@b+2,f,c
  4678  000880  5010               	movf	___fladd@a+3,w,c
  4679  000882  220C               	addwfc	___fladd@b+3,f,c
  4680  000884  A00C               	btfss	___fladd@b+3,0,c
  4681  000886  D071               	goto	u6320
  4682  000888  A018               	btfss	___fladd@grs,0,c
  4683  00088A  D005               	goto	l5502
  4684  00088C  90D8               	bcf	status,0,c
  4685  00088E  3018               	rrcf	___fladd@grs,w,c
  4686  000890  0901               	iorlw	1
  4687  000892  6E18               	movwf	___fladd@grs,c
  4688  000894  D002               	goto	l5504
  4689  000896                     l5502:
  4690  000896  90D8               	bcf	status,0,c
  4691  000898  3218               	rrcf	___fladd@grs,f,c
  4692  00089A                     l5504:
  4693  00089A  B009               	btfsc	___fladd@b,0,c
  4694  00089C  8E18               	bsf	___fladd@grs,7,c
  4695  00089E  340C               	rlcf	___fladd@b+3,w,c
  4696  0008A0  320C               	rrcf	___fladd@b+3,f,c
  4697  0008A2  320B               	rrcf	___fladd@b+2,f,c
  4698  0008A4  320A               	rrcf	___fladd@b+1,f,c
  4699  0008A6  3209               	rrcf	___fladd@b,f,c
  4700  0008A8  2A17               	incf	___fladd@bexp,f,c
  4701  0008AA  D05F               	goto	u6320
  4702  0008AC                     l5512:
  4703  0008AC  500D               	movf	___fladd@a,w,c
  4704  0008AE  5C09               	subwf	___fladd@b,w,c
  4705  0008B0  500E               	movf	___fladd@a+1,w,c
  4706  0008B2  580A               	subwfb	___fladd@b+1,w,c
  4707  0008B4  500F               	movf	___fladd@a+2,w,c
  4708  0008B6  580B               	subwfb	___fladd@b+2,w,c
  4709  0008B8  500C               	movf	___fladd@b+3,w,c
  4710  0008BA  0A80               	xorlw	128
  4711  0008BC  6E11               	movwf	??___fladd& (0+255),c
  4712  0008BE  5010               	movf	___fladd@a+3,w,c
  4713  0008C0  0A80               	xorlw	128
  4714  0008C2  5811               	subwfb	??___fladd& (0+255),w,c
  4715  0008C4  B0D8               	btfsc	status,0,c
  4716  0008C6  D025               	goto	l5522
  4717  0008C8  5009               	movf	___fladd@b,w,c
  4718  0008CA  5C0D               	subwf	___fladd@a,w,c
  4719  0008CC  6E11               	movwf	??___fladd& (0+255),c
  4720  0008CE  500A               	movf	___fladd@b+1,w,c
  4721  0008D0  580E               	subwfb	___fladd@a+1,w,c
  4722  0008D2  6E12               	movwf	(??___fladd+1)& (0+255),c
  4723  0008D4  500B               	movf	___fladd@b+2,w,c
  4724  0008D6  580F               	subwfb	___fladd@a+2,w,c
  4725  0008D8  6E13               	movwf	(??___fladd+2)& (0+255),c
  4726  0008DA  500C               	movf	___fladd@b+3,w,c
  4727  0008DC  5810               	subwfb	___fladd@a+3,w,c
  4728  0008DE  6E14               	movwf	(??___fladd+3)& (0+255),c
  4729  0008E0  0EFF               	movlw	255
  4730  0008E2  2411               	addwf	??___fladd,w,c
  4731  0008E4  6E09               	movwf	___fladd@b,c
  4732  0008E6  0EFF               	movlw	255
  4733  0008E8  2012               	addwfc	??___fladd+1,w,c
  4734  0008EA  6E0A               	movwf	___fladd@b+1,c
  4735  0008EC  0EFF               	movlw	255
  4736  0008EE  2013               	addwfc	??___fladd+2,w,c
  4737  0008F0  6E0B               	movwf	___fladd@b+2,c
  4738  0008F2  0EFF               	movlw	255
  4739  0008F4  2014               	addwfc	??___fladd+3,w,c
  4740  0008F6  6E0C               	movwf	___fladd@b+3,c
  4741  0008F8  0E80               	movlw	128
  4742  0008FA  1A15               	xorwf	___fladd@signs,f,c
  4743  0008FC  6C18               	negf	___fladd@grs,c
  4744  0008FE  5018               	movf	___fladd@grs,w,c
  4745  000900  A4D8               	btfss	status,2,c
  4746  000902  D00F               	goto	l1271
  4747  000904  0E01               	movlw	1
  4748  000906  2609               	addwf	___fladd@b,f,c
  4749  000908  0E00               	movlw	0
  4750  00090A  220A               	addwfc	___fladd@b+1,f,c
  4751  00090C  220B               	addwfc	___fladd@b+2,f,c
  4752  00090E  220C               	addwfc	___fladd@b+3,f,c
  4753  000910  D008               	goto	l1271
  4754  000912                     l5522:
  4755  000912  500D               	movf	___fladd@a,w,c
  4756  000914  5E09               	subwf	___fladd@b,f,c
  4757  000916  500E               	movf	___fladd@a+1,w,c
  4758  000918  5A0A               	subwfb	___fladd@b+1,f,c
  4759  00091A  500F               	movf	___fladd@a+2,w,c
  4760  00091C  5A0B               	subwfb	___fladd@b+2,f,c
  4761  00091E  5010               	movf	___fladd@a+3,w,c
  4762  000920  5A0C               	subwfb	___fladd@b+3,f,c
  4763  000922                     l1271:
  4764  000922  5009               	movf	___fladd@b,w,c
  4765  000924  100A               	iorwf	___fladd@b+1,w,c
  4766  000926  100B               	iorwf	___fladd@b+2,w,c
  4767  000928  100C               	iorwf	___fladd@b+3,w,c
  4768  00092A  A4D8               	btfss	status,2,c
  4769  00092C  D01C               	goto	l5546
  4770  00092E  5018               	movf	___fladd@grs,w,c
  4771  000930  A4D8               	btfss	status,2,c
  4772  000932  D019               	goto	l5546
  4773  000934  0E00               	movlw	0
  4774  000936  6E09               	movwf	?___fladd,c
  4775  000938  0E00               	movlw	0
  4776  00093A  6E0A               	movwf	?___fladd+1,c
  4777  00093C  0E00               	movlw	0
  4778  00093E  6E0B               	movwf	?___fladd+2,c
  4779  000940  0E00               	movlw	0
  4780  000942  6E0C               	movwf	?___fladd+3,c
  4781  000944  0012               	return	
  4782  000946                     l5530:
  4783  000946  90D8               	bcf	status,0,c
  4784  000948  3609               	rlcf	___fladd@b,f,c
  4785  00094A  360A               	rlcf	___fladd@b+1,f,c
  4786  00094C  360B               	rlcf	___fladd@b+2,f,c
  4787  00094E  360C               	rlcf	___fladd@b+3,f,c
  4788  000950  BE18               	btfsc	___fladd@grs,7,c
  4789  000952  8009               	bsf	___fladd@b,0,c
  4790  000954  A018               	btfss	___fladd@grs,0,c
  4791  000956  D002               	goto	l5540
  4792  000958  80D8               	bsf	status,0,c
  4793  00095A  D001               	goto	L13
  4794  00095C                     l5540:
  4795  00095C  90D8               	bcf	status,0,c
  4796  00095E                     L13:
  4797  00095E  3618               	rlcf	___fladd@grs,f,c
  4798  000960  5017               	movf	___fladd@bexp,w,c
  4799  000962  A4D8               	btfss	status,2,c
  4800  000964  0617               	decf	___fladd@bexp,f,c
  4801  000966                     l5546:
  4802  000966  AE0B               	btfss	___fladd@b+2,7,c
  4803  000968  D7EE               	goto	l5530
  4804  00096A                     u6320:
  4805  00096A  0E00               	movlw	0
  4806  00096C  6E16               	movwf	___fladd@aexp,c
  4807  00096E  AE18               	btfss	___fladd@grs,7,c
  4808  000970  D00B               	goto	l1280
  4809  000972  C018  F011         	movff	___fladd@grs,??___fladd
  4810  000976  0E7F               	movlw	127
  4811  000978  1611               	andwf	??___fladd,f,c
  4812  00097A  B4D8               	btfsc	status,2,c
  4813  00097C  D003               	goto	l1281
  4814  00097E                     u6340:
  4815  00097E  0E01               	movlw	1
  4816  000980  6E16               	movwf	___fladd@aexp,c
  4817  000982  D002               	goto	l1280
  4818  000984                     l1281:
  4819  000984  B009               	btfsc	___fladd@b,0,c
  4820  000986  D7FB               	goto	u6340
  4821  000988                     l1280:
  4822  000988  5016               	movf	___fladd@aexp,w,c
  4823  00098A  B4D8               	btfsc	status,2,c
  4824  00098C  D020               	goto	l5566
  4825  00098E  0E01               	movlw	1
  4826  000990  2609               	addwf	___fladd@b,f,c
  4827  000992  0E00               	movlw	0
  4828  000994  220A               	addwfc	___fladd@b+1,f,c
  4829  000996  220B               	addwfc	___fladd@b+2,f,c
  4830  000998  220C               	addwfc	___fladd@b+3,f,c
  4831  00099A  A00C               	btfss	___fladd@b+3,0,c
  4832  00099C  D018               	goto	l5566
  4833  00099E  C009  F011         	movff	___fladd@b,??___fladd
  4834  0009A2  C00A  F012         	movff	___fladd@b+1,??___fladd+1
  4835  0009A6  C00B  F013         	movff	___fladd@b+2,??___fladd+2
  4836  0009AA  C00C  F014         	movff	___fladd@b+3,??___fladd+3
  4837  0009AE  3414               	rlcf	??___fladd+3,w,c
  4838  0009B0  3214               	rrcf	??___fladd+3,f,c
  4839  0009B2  3213               	rrcf	??___fladd+2,f,c
  4840  0009B4  3212               	rrcf	??___fladd+1,f,c
  4841  0009B6  3211               	rrcf	??___fladd,f,c
  4842  0009B8  C011  F009         	movff	??___fladd,___fladd@b
  4843  0009BC  C012  F00A         	movff	??___fladd+1,___fladd@b+1
  4844  0009C0  C013  F00B         	movff	??___fladd+2,___fladd@b+2
  4845  0009C4  C014  F00C         	movff	??___fladd+3,___fladd@b+3
  4846  0009C8  2817               	incf	___fladd@bexp,w,c
  4847  0009CA  A4D8               	btfss	status,2,c
  4848  0009CC  2A17               	incf	___fladd@bexp,f,c
  4849  0009CE                     l5566:
  4850  0009CE  2817               	incf	___fladd@bexp,w,c
  4851  0009D0  B4D8               	btfsc	status,2,c
  4852  0009D2  D003               	goto	u6400
  4853  0009D4  5017               	movf	___fladd@bexp,w,c
  4854  0009D6  A4D8               	btfss	status,2,c
  4855  0009D8  D00D               	goto	l5574
  4856  0009DA                     u6400:
  4857  0009DA  0E00               	movlw	0
  4858  0009DC  6E09               	movwf	___fladd@b,c
  4859  0009DE  0E00               	movlw	0
  4860  0009E0  6E0A               	movwf	___fladd@b+1,c
  4861  0009E2  0E00               	movlw	0
  4862  0009E4  6E0B               	movwf	___fladd@b+2,c
  4863  0009E6  0E00               	movlw	0
  4864  0009E8  6E0C               	movwf	___fladd@b+3,c
  4865  0009EA  5017               	movf	___fladd@bexp,w,c
  4866  0009EC  A4D8               	btfss	status,2,c
  4867  0009EE  D002               	goto	l5574
  4868  0009F0  0E00               	movlw	0
  4869  0009F2  6E15               	movwf	___fladd@signs,c
  4870  0009F4                     l5574:
  4871  0009F4  A017               	btfss	___fladd@bexp,0,c
  4872  0009F6  D002               	goto	l5578
  4873  0009F8  8E0B               	bsf	___fladd@b+2,7,c
  4874  0009FA  D001               	goto	l5580
  4875  0009FC                     l5578:
  4876  0009FC  9E0B               	bcf	___fladd@b+2,7,c
  4877  0009FE                     l5580:
  4878  0009FE  90D8               	bcf	status,0,c
  4879  000A00  3017               	rrcf	___fladd@bexp,w,c
  4880  000A02  6E0C               	movwf	___fladd@b+3,c
  4881  000A04  BE15               	btfsc	___fladd@signs,7,c
  4882  000A06  8E0C               	bsf	___fladd@b+3,7,c
  4883  000A08  C009  F009         	movff	___fladd@b,?___fladd
  4884  000A0C  C00A  F00A         	movff	___fladd@b+1,?___fladd+1
  4885  000A10  C00B  F00B         	movff	___fladd@b+2,?___fladd+2
  4886  000A14  C00C  F00C         	movff	___fladd@b+3,?___fladd+3
  4887  000A18  0012               	return		;funcret
  4888  000A1A                     __end_of___fladd:
  4889                           	opt callstack 0
  4890                           
  4891 ;; *************** function ___flneg *****************
  4892 ;; Defined at:
  4893 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  4894 ;; Parameters:    Size  Location     Type
  4895 ;;  f1              4    8[COMRAM] unsigned char 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  4    8[COMRAM] unsigned char 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;Total ram usage:        4 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    4
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_roundf
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text14
  4922  0029DE                     __ptext14:
  4923                           	opt callstack 0
  4924  0029DE                     ___flneg:
  4925                           	opt callstack 23
  4926                           
  4927                           ;incstack = 0
  4928  0029DE  5009               	movf	___flneg@f1,w,c
  4929  0029E0  100A               	iorwf	___flneg@f1+1,w,c
  4930  0029E2  100B               	iorwf	___flneg@f1+2,w,c
  4931  0029E4  100C               	iorwf	___flneg@f1+3,w,c
  4932  0029E6  B4D8               	btfsc	status,2,c
  4933  0029E8  D008               	goto	l5894
  4934  0029EA  0E00               	movlw	0
  4935  0029EC  1A09               	xorwf	___flneg@f1,f,c
  4936  0029EE  0E00               	movlw	0
  4937  0029F0  1A0A               	xorwf	___flneg@f1+1,f,c
  4938  0029F2  0E00               	movlw	0
  4939  0029F4  1A0B               	xorwf	___flneg@f1+2,f,c
  4940  0029F6  0E80               	movlw	128
  4941  0029F8  1A0C               	xorwf	___flneg@f1+3,f,c
  4942  0029FA                     l5894:
  4943  0029FA  C009  F009         	movff	___flneg@f1,?___flneg
  4944  0029FE  C00A  F00A         	movff	___flneg@f1+1,?___flneg+1
  4945  002A02  C00B  F00B         	movff	___flneg@f1+2,?___flneg+2
  4946  002A06  C00C  F00C         	movff	___flneg@f1+3,?___flneg+3
  4947  002A0A  0012               	return		;funcret
  4948  002A0C                     __end_of___flneg:
  4949                           	opt callstack 0
  4950                           
  4951 ;; *************** function ___flmul *****************
  4952 ;; Defined at:
  4953 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  b               4    8[COMRAM] unsigned char 
  4956 ;;  a               4   12[COMRAM] unsigned char 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  prod            4   27[COMRAM] struct .
  4959 ;;  grs             4   22[COMRAM] unsigned long 
  4960 ;;  temp            2   31[COMRAM] struct .
  4961 ;;  bexp            1   26[COMRAM] unsigned char 
  4962 ;;  aexp            1   21[COMRAM] unsigned char 
  4963 ;;  sign            1   20[COMRAM] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  4    8[COMRAM] unsigned char 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0, prodl, prodh
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4973 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;Total ram usage:       25 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    4
  4980 ;; This function calls:
  4981 ;;		Nothing
  4982 ;; This function is called by:
  4983 ;;		_roundf
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text15
  4988  000082                     __ptext15:
  4989                           	opt callstack 0
  4990  000082                     ___flmul:
  4991                           	opt callstack 23
  4992                           
  4993                           ;incstack = 0
  4994  000082  500C               	movf	___flmul@b+3,w,c
  4995  000084  0B80               	andlw	128
  4996  000086  6E15               	movwf	___flmul@sign,c
  4997  000088  500C               	movf	___flmul@b+3,w,c
  4998  00008A  240C               	addwf	___flmul@b+3,w,c
  4999  00008C  6E1B               	movwf	___flmul@bexp,c
  5000  00008E  BE0B               	btfsc	___flmul@b+2,7,c
  5001  000090  801B               	bsf	___flmul@bexp,0,c
  5002  000092  501B               	movf	___flmul@bexp,w,c
  5003  000094  B4D8               	btfsc	status,2,c
  5004  000096  D00D               	goto	l5666
  5005  000098  281B               	incf	___flmul@bexp,w,c
  5006  00009A  A4D8               	btfss	status,2,c
  5007  00009C  D008               	goto	l5664
  5008  00009E  0E00               	movlw	0
  5009  0000A0  6E09               	movwf	___flmul@b,c
  5010  0000A2  0E00               	movlw	0
  5011  0000A4  6E0A               	movwf	___flmul@b+1,c
  5012  0000A6  0E00               	movlw	0
  5013  0000A8  6E0B               	movwf	___flmul@b+2,c
  5014  0000AA  0E00               	movlw	0
  5015  0000AC  6E0C               	movwf	___flmul@b+3,c
  5016  0000AE                     l5664:
  5017  0000AE  8E0B               	bsf	___flmul@b+2,7,c
  5018  0000B0  D008               	goto	l5668
  5019  0000B2                     l5666:
  5020  0000B2  0E00               	movlw	0
  5021  0000B4  6E09               	movwf	___flmul@b,c
  5022  0000B6  0E00               	movlw	0
  5023  0000B8  6E0A               	movwf	___flmul@b+1,c
  5024  0000BA  0E00               	movlw	0
  5025  0000BC  6E0B               	movwf	___flmul@b+2,c
  5026  0000BE  0E00               	movlw	0
  5027  0000C0  6E0C               	movwf	___flmul@b+3,c
  5028  0000C2                     l5668:
  5029  0000C2  5010               	movf	___flmul@a+3,w,c
  5030  0000C4  0B80               	andlw	128
  5031  0000C6  1A15               	xorwf	___flmul@sign,f,c
  5032  0000C8  5010               	movf	___flmul@a+3,w,c
  5033  0000CA  2410               	addwf	___flmul@a+3,w,c
  5034  0000CC  6E16               	movwf	___flmul@aexp,c
  5035  0000CE  BE0F               	btfsc	___flmul@a+2,7,c
  5036  0000D0  8016               	bsf	___flmul@aexp,0,c
  5037  0000D2  5016               	movf	___flmul@aexp,w,c
  5038  0000D4  B4D8               	btfsc	status,2,c
  5039  0000D6  D00D               	goto	l5684
  5040  0000D8  2816               	incf	___flmul@aexp,w,c
  5041  0000DA  A4D8               	btfss	status,2,c
  5042  0000DC  D008               	goto	l5682
  5043  0000DE  0E00               	movlw	0
  5044  0000E0  6E0D               	movwf	___flmul@a,c
  5045  0000E2  0E00               	movlw	0
  5046  0000E4  6E0E               	movwf	___flmul@a+1,c
  5047  0000E6  0E00               	movlw	0
  5048  0000E8  6E0F               	movwf	___flmul@a+2,c
  5049  0000EA  0E00               	movlw	0
  5050  0000EC  6E10               	movwf	___flmul@a+3,c
  5051  0000EE                     l5682:
  5052  0000EE  8E0F               	bsf	___flmul@a+2,7,c
  5053  0000F0  D008               	goto	l1340
  5054  0000F2                     l5684:
  5055  0000F2  0E00               	movlw	0
  5056  0000F4  6E0D               	movwf	___flmul@a,c
  5057  0000F6  0E00               	movlw	0
  5058  0000F8  6E0E               	movwf	___flmul@a+1,c
  5059  0000FA  0E00               	movlw	0
  5060  0000FC  6E0F               	movwf	___flmul@a+2,c
  5061  0000FE  0E00               	movlw	0
  5062  000100  6E10               	movwf	___flmul@a+3,c
  5063  000102                     l1340:
  5064  000102  5016               	movf	___flmul@aexp,w,c
  5065  000104  B4D8               	btfsc	status,2,c
  5066  000106  D003               	goto	u6550
  5067  000108  501B               	movf	___flmul@bexp,w,c
  5068  00010A  A4D8               	btfss	status,2,c
  5069  00010C  D009               	goto	l5692
  5070  00010E                     u6550:
  5071  00010E  0E00               	movlw	0
  5072  000110  6E09               	movwf	?___flmul,c
  5073  000112  0E00               	movlw	0
  5074  000114  6E0A               	movwf	?___flmul+1,c
  5075  000116  0E00               	movlw	0
  5076  000118  6E0B               	movwf	?___flmul+2,c
  5077  00011A  0E00               	movlw	0
  5078  00011C  6E0C               	movwf	?___flmul+3,c
  5079  00011E  0012               	return	
  5080  000120                     l5692:
  5081  000120  500F               	movf	___flmul@a+2,w,c
  5082  000122  0209               	mulwf	___flmul@b,c
  5083  000124  CFF3 F020          	movff	prodl,___flmul@temp
  5084  000128  CFF4 F021          	movff	prodh,___flmul@temp+1
  5085  00012C  5020               	movf	___flmul@temp,w,c
  5086  00012E  6E17               	movwf	___flmul@grs,c
  5087  000130  6A18               	clrf	___flmul@grs+1,c
  5088  000132  6A19               	clrf	___flmul@grs+2,c
  5089  000134  6A1A               	clrf	___flmul@grs+3,c
  5090  000136  5021               	movf	___flmul@temp+1,w,c
  5091  000138  6E1C               	movwf	___flmul@prod,c
  5092  00013A  6A1D               	clrf	___flmul@prod+1,c
  5093  00013C  6A1E               	clrf	___flmul@prod+2,c
  5094  00013E  6A1F               	clrf	___flmul@prod+3,c
  5095  000140  500E               	movf	___flmul@a+1,w,c
  5096  000142  020A               	mulwf	___flmul@b+1,c
  5097  000144  CFF3 F020          	movff	prodl,___flmul@temp
  5098  000148  CFF4 F021          	movff	prodh,___flmul@temp+1
  5099  00014C  5020               	movf	___flmul@temp,w,c
  5100  00014E  2617               	addwf	___flmul@grs,f,c
  5101  000150  0E00               	movlw	0
  5102  000152  2218               	addwfc	___flmul@grs+1,f,c
  5103  000154  2219               	addwfc	___flmul@grs+2,f,c
  5104  000156  221A               	addwfc	___flmul@grs+3,f,c
  5105  000158  5021               	movf	___flmul@temp+1,w,c
  5106  00015A  261C               	addwf	___flmul@prod,f,c
  5107  00015C  0E00               	movlw	0
  5108  00015E  221D               	addwfc	___flmul@prod+1,f,c
  5109  000160  221E               	addwfc	___flmul@prod+2,f,c
  5110  000162  221F               	addwfc	___flmul@prod+3,f,c
  5111  000164  500D               	movf	___flmul@a,w,c
  5112  000166  020B               	mulwf	___flmul@b+2,c
  5113  000168  CFF3 F020          	movff	prodl,___flmul@temp
  5114  00016C  CFF4 F021          	movff	prodh,___flmul@temp+1
  5115  000170  5020               	movf	___flmul@temp,w,c
  5116  000172  2617               	addwf	___flmul@grs,f,c
  5117  000174  0E00               	movlw	0
  5118  000176  2218               	addwfc	___flmul@grs+1,f,c
  5119  000178  2219               	addwfc	___flmul@grs+2,f,c
  5120  00017A  221A               	addwfc	___flmul@grs+3,f,c
  5121  00017C  5021               	movf	___flmul@temp+1,w,c
  5122  00017E  261C               	addwf	___flmul@prod,f,c
  5123  000180  0E00               	movlw	0
  5124  000182  221D               	addwfc	___flmul@prod+1,f,c
  5125  000184  221E               	addwfc	___flmul@prod+2,f,c
  5126  000186  221F               	addwfc	___flmul@prod+3,f,c
  5127  000188  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  5128  00018C  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  5129  000190  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  5130  000194  6A17               	clrf	___flmul@grs,c
  5131  000196  500D               	movf	___flmul@a,w,c
  5132  000198  020A               	mulwf	___flmul@b+1,c
  5133  00019A  CFF3 F020          	movff	prodl,___flmul@temp
  5134  00019E  CFF4 F021          	movff	prodh,___flmul@temp+1
  5135  0001A2  5020               	movf	___flmul@temp,w,c
  5136  0001A4  2617               	addwf	___flmul@grs,f,c
  5137  0001A6  5021               	movf	___flmul@temp+1,w,c
  5138  0001A8  2218               	addwfc	___flmul@grs+1,f,c
  5139  0001AA  0E00               	movlw	0
  5140  0001AC  2219               	addwfc	___flmul@grs+2,f,c
  5141  0001AE  0E00               	movlw	0
  5142  0001B0  221A               	addwfc	___flmul@grs+3,f,c
  5143  0001B2  500E               	movf	___flmul@a+1,w,c
  5144  0001B4  0209               	mulwf	___flmul@b,c
  5145  0001B6  CFF3 F020          	movff	prodl,___flmul@temp
  5146  0001BA  CFF4 F021          	movff	prodh,___flmul@temp+1
  5147  0001BE  5020               	movf	___flmul@temp,w,c
  5148  0001C0  2617               	addwf	___flmul@grs,f,c
  5149  0001C2  5021               	movf	___flmul@temp+1,w,c
  5150  0001C4  2218               	addwfc	___flmul@grs+1,f,c
  5151  0001C6  0E00               	movlw	0
  5152  0001C8  2219               	addwfc	___flmul@grs+2,f,c
  5153  0001CA  0E00               	movlw	0
  5154  0001CC  221A               	addwfc	___flmul@grs+3,f,c
  5155  0001CE  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  5156  0001D2  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  5157  0001D6  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  5158  0001DA  6A17               	clrf	___flmul@grs,c
  5159  0001DC  500D               	movf	___flmul@a,w,c
  5160  0001DE  0209               	mulwf	___flmul@b,c
  5161  0001E0  CFF3 F020          	movff	prodl,___flmul@temp
  5162  0001E4  CFF4 F021          	movff	prodh,___flmul@temp+1
  5163  0001E8  5020               	movf	___flmul@temp,w,c
  5164  0001EA  2617               	addwf	___flmul@grs,f,c
  5165  0001EC  5021               	movf	___flmul@temp+1,w,c
  5166  0001EE  2218               	addwfc	___flmul@grs+1,f,c
  5167  0001F0  0E00               	movlw	0
  5168  0001F2  2219               	addwfc	___flmul@grs+2,f,c
  5169  0001F4  0E00               	movlw	0
  5170  0001F6  221A               	addwfc	___flmul@grs+3,f,c
  5171  0001F8  500F               	movf	___flmul@a+2,w,c
  5172  0001FA  020A               	mulwf	___flmul@b+1,c
  5173  0001FC  CFF3 F020          	movff	prodl,___flmul@temp
  5174  000200  CFF4 F021          	movff	prodh,___flmul@temp+1
  5175  000204  5020               	movf	___flmul@temp,w,c
  5176  000206  261C               	addwf	___flmul@prod,f,c
  5177  000208  5021               	movf	___flmul@temp+1,w,c
  5178  00020A  221D               	addwfc	___flmul@prod+1,f,c
  5179  00020C  0E00               	movlw	0
  5180  00020E  221E               	addwfc	___flmul@prod+2,f,c
  5181  000210  0E00               	movlw	0
  5182  000212  221F               	addwfc	___flmul@prod+3,f,c
  5183  000214  500E               	movf	___flmul@a+1,w,c
  5184  000216  020B               	mulwf	___flmul@b+2,c
  5185  000218  CFF3 F020          	movff	prodl,___flmul@temp
  5186  00021C  CFF4 F021          	movff	prodh,___flmul@temp+1
  5187  000220  5020               	movf	___flmul@temp,w,c
  5188  000222  261C               	addwf	___flmul@prod,f,c
  5189  000224  5021               	movf	___flmul@temp+1,w,c
  5190  000226  221D               	addwfc	___flmul@prod+1,f,c
  5191  000228  0E00               	movlw	0
  5192  00022A  221E               	addwfc	___flmul@prod+2,f,c
  5193  00022C  0E00               	movlw	0
  5194  00022E  221F               	addwfc	___flmul@prod+3,f,c
  5195  000230  500F               	movf	___flmul@a+2,w,c
  5196  000232  020B               	mulwf	___flmul@b+2,c
  5197  000234  CFF3 F020          	movff	prodl,___flmul@temp
  5198  000238  CFF4 F021          	movff	prodh,___flmul@temp+1
  5199  00023C  5020               	movf	___flmul@temp,w,c
  5200  00023E  6E11               	movwf	??___flmul& (0+255),c
  5201  000240  5021               	movf	___flmul@temp+1,w,c
  5202  000242  6E12               	movwf	(??___flmul+1)& (0+255),c
  5203  000244  6A13               	clrf	(??___flmul+2)& (0+255),c
  5204  000246  6A14               	clrf	(??___flmul+3)& (0+255),c
  5205  000248  C013  F014         	movff	??___flmul+2,??___flmul+3
  5206  00024C  C012  F013         	movff	??___flmul+1,??___flmul+2
  5207  000250  C011  F012         	movff	??___flmul,??___flmul+1
  5208  000254  6A11               	clrf	??___flmul,c
  5209  000256  5011               	movf	??___flmul,w,c
  5210  000258  261C               	addwf	___flmul@prod,f,c
  5211  00025A  5012               	movf	??___flmul+1,w,c
  5212  00025C  221D               	addwfc	___flmul@prod+1,f,c
  5213  00025E  5013               	movf	??___flmul+2,w,c
  5214  000260  221E               	addwfc	___flmul@prod+2,f,c
  5215  000262  5014               	movf	??___flmul+3,w,c
  5216  000264  221F               	addwfc	___flmul@prod+3,f,c
  5217  000266  C017  F011         	movff	___flmul@grs,??___flmul
  5218  00026A  C018  F012         	movff	___flmul@grs+1,??___flmul+1
  5219  00026E  C019  F013         	movff	___flmul@grs+2,??___flmul+2
  5220  000272  C01A  F014         	movff	___flmul@grs+3,??___flmul+3
  5221  000276  0E19               	movlw	25
  5222  000278  D005               	goto	u6560
  5223  00027A                     u6565:
  5224  00027A  90D8               	bcf	status,0,c
  5225  00027C  3214               	rrcf	??___flmul+3,f,c
  5226  00027E  3213               	rrcf	??___flmul+2,f,c
  5227  000280  3212               	rrcf	??___flmul+1,f,c
  5228  000282  3211               	rrcf	??___flmul,f,c
  5229  000284                     u6560:
  5230  000284  2EE8               	decfsz	wreg,f,c
  5231  000286  D7F9               	goto	u6565
  5232  000288  5011               	movf	??___flmul,w,c
  5233  00028A  261C               	addwf	___flmul@prod,f,c
  5234  00028C  5012               	movf	??___flmul+1,w,c
  5235  00028E  221D               	addwfc	___flmul@prod+1,f,c
  5236  000290  5013               	movf	??___flmul+2,w,c
  5237  000292  221E               	addwfc	___flmul@prod+2,f,c
  5238  000294  5014               	movf	??___flmul+3,w,c
  5239  000296  221F               	addwfc	___flmul@prod+3,f,c
  5240  000298  C019  F01A         	movff	___flmul@grs+2,___flmul@grs+3
  5241  00029C  C018  F019         	movff	___flmul@grs+1,___flmul@grs+2
  5242  0002A0  C017  F018         	movff	___flmul@grs,___flmul@grs+1
  5243  0002A4  6A17               	clrf	___flmul@grs,c
  5244  0002A6  5016               	movf	___flmul@aexp,w,c
  5245  0002A8  C01B  F011         	movff	___flmul@bexp,??___flmul
  5246  0002AC  6A12               	clrf	(??___flmul+1)& (0+255),c
  5247  0002AE  2611               	addwf	??___flmul,f,c
  5248  0002B0  0E00               	movlw	0
  5249  0002B2  2212               	addwfc	??___flmul+1,f,c
  5250  0002B4  0E82               	movlw	130
  5251  0002B6  2411               	addwf	??___flmul,w,c
  5252  0002B8  6E20               	movwf	___flmul@temp,c
  5253  0002BA  0EFF               	movlw	255
  5254  0002BC  2012               	addwfc	??___flmul+1,w,c
  5255  0002BE  6E21               	movwf	___flmul@temp+1,c
  5256  0002C0  D00F               	goto	l5740
  5257  0002C2                     l5734:
  5258  0002C2  90D8               	bcf	status,0,c
  5259  0002C4  361C               	rlcf	___flmul@prod,f,c
  5260  0002C6  361D               	rlcf	___flmul@prod+1,f,c
  5261  0002C8  361E               	rlcf	___flmul@prod+2,f,c
  5262  0002CA  361F               	rlcf	___flmul@prod+3,f,c
  5263  0002CC  BE1A               	btfsc	___flmul@grs+3,7,c
  5264  0002CE  801C               	bsf	___flmul@prod,0,c
  5265  0002D0  90D8               	bcf	status,0,c
  5266  0002D2  3617               	rlcf	___flmul@grs,f,c
  5267  0002D4  3618               	rlcf	___flmul@grs+1,f,c
  5268  0002D6  3619               	rlcf	___flmul@grs+2,f,c
  5269  0002D8  361A               	rlcf	___flmul@grs+3,f,c
  5270  0002DA  0620               	decf	___flmul@temp,f,c
  5271  0002DC  A0D8               	btfss	status,0,c
  5272  0002DE  0621               	decf	___flmul@temp+1,f,c
  5273  0002E0                     l5740:
  5274  0002E0  AE1E               	btfss	___flmul@prod+2,7,c
  5275  0002E2  D7EF               	goto	l5734
  5276  0002E4  0E00               	movlw	0
  5277  0002E6  6E16               	movwf	___flmul@aexp,c
  5278  0002E8  AE1A               	btfss	___flmul@grs+3,7,c
  5279  0002EA  D017               	goto	l1349
  5280  0002EC  0EFF               	movlw	255
  5281  0002EE  1417               	andwf	___flmul@grs,w,c
  5282  0002F0  6E11               	movwf	??___flmul& (0+255),c
  5283  0002F2  0EFF               	movlw	255
  5284  0002F4  1418               	andwf	___flmul@grs+1,w,c
  5285  0002F6  6E12               	movwf	(??___flmul+1)& (0+255),c
  5286  0002F8  0EFF               	movlw	255
  5287  0002FA  1419               	andwf	___flmul@grs+2,w,c
  5288  0002FC  6E13               	movwf	(??___flmul+2)& (0+255),c
  5289  0002FE  0E7F               	movlw	127
  5290  000300  141A               	andwf	___flmul@grs+3,w,c
  5291  000302  6E14               	movwf	(??___flmul+3)& (0+255),c
  5292  000304  5011               	movf	??___flmul,w,c
  5293  000306  1012               	iorwf	??___flmul+1,w,c
  5294  000308  1013               	iorwf	??___flmul+2,w,c
  5295  00030A  1014               	iorwf	??___flmul+3,w,c
  5296  00030C  B4D8               	btfsc	status,2,c
  5297  00030E  D003               	goto	l1350
  5298  000310                     u6600:
  5299  000310  0E01               	movlw	1
  5300  000312  6E16               	movwf	___flmul@aexp,c
  5301  000314  D002               	goto	l1349
  5302  000316                     l1350:
  5303  000316  B01C               	btfsc	___flmul@prod,0,c
  5304  000318  D7FB               	goto	u6600
  5305  00031A                     l1349:
  5306  00031A  5016               	movf	___flmul@aexp,w,c
  5307  00031C  B4D8               	btfsc	status,2,c
  5308  00031E  D01F               	goto	l5760
  5309  000320  0E01               	movlw	1
  5310  000322  261C               	addwf	___flmul@prod,f,c
  5311  000324  0E00               	movlw	0
  5312  000326  221D               	addwfc	___flmul@prod+1,f,c
  5313  000328  221E               	addwfc	___flmul@prod+2,f,c
  5314  00032A  221F               	addwfc	___flmul@prod+3,f,c
  5315  00032C  A01F               	btfss	___flmul@prod+3,0,c
  5316  00032E  D017               	goto	l5760
  5317  000330  C01C  F011         	movff	___flmul@prod,??___flmul
  5318  000334  C01D  F012         	movff	___flmul@prod+1,??___flmul+1
  5319  000338  C01E  F013         	movff	___flmul@prod+2,??___flmul+2
  5320  00033C  C01F  F014         	movff	___flmul@prod+3,??___flmul+3
  5321  000340  3414               	rlcf	??___flmul+3,w,c
  5322  000342  3214               	rrcf	??___flmul+3,f,c
  5323  000344  3213               	rrcf	??___flmul+2,f,c
  5324  000346  3212               	rrcf	??___flmul+1,f,c
  5325  000348  3211               	rrcf	??___flmul,f,c
  5326  00034A  C011  F01C         	movff	??___flmul,___flmul@prod
  5327  00034E  C012  F01D         	movff	??___flmul+1,___flmul@prod+1
  5328  000352  C013  F01E         	movff	??___flmul+2,___flmul@prod+2
  5329  000356  C014  F01F         	movff	??___flmul+3,___flmul@prod+3
  5330  00035A  4A20               	infsnz	___flmul@temp,f,c
  5331  00035C  2A21               	incf	___flmul@temp+1,f,c
  5332  00035E                     l5760:
  5333  00035E  BE21               	btfsc	___flmul@temp+1,7,c
  5334  000360  D00D               	goto	l5764
  5335  000362  5021               	movf	___flmul@temp+1,w,c
  5336  000364  E103               	bnz	u6640
  5337  000366  2820               	incf	___flmul@temp,w,c
  5338  000368  A0D8               	btfss	status,0,c
  5339  00036A  D008               	goto	l5764
  5340  00036C                     u6640:
  5341  00036C  0E00               	movlw	0
  5342  00036E  6E1C               	movwf	___flmul@prod,c
  5343  000370  0E00               	movlw	0
  5344  000372  6E1D               	movwf	___flmul@prod+1,c
  5345  000374  0E80               	movlw	128
  5346  000376  6E1E               	movwf	___flmul@prod+2,c
  5347  000378  0E7F               	movlw	127
  5348  00037A  D020               	goto	L14
  5349  00037C                     l5764:
  5350  00037C  BE21               	btfsc	___flmul@temp+1,7,c
  5351  00037E  D005               	goto	u6650
  5352  000380  5021               	movf	___flmul@temp+1,w,c
  5353  000382  E10E               	bnz	l1357
  5354  000384  0420               	decf	___flmul@temp,w,c
  5355  000386  B0D8               	btfsc	status,0,c
  5356  000388  D00B               	goto	l1357
  5357  00038A                     u6650:
  5358  00038A  0E00               	movlw	0
  5359  00038C  6E1C               	movwf	___flmul@prod,c
  5360  00038E  0E00               	movlw	0
  5361  000390  6E1D               	movwf	___flmul@prod+1,c
  5362  000392  0E00               	movlw	0
  5363  000394  6E1E               	movwf	___flmul@prod+2,c
  5364  000396  0E00               	movlw	0
  5365  000398  6E1F               	movwf	___flmul@prod+3,c
  5366  00039A  0E00               	movlw	0
  5367  00039C  6E15               	movwf	___flmul@sign,c
  5368  00039E  D00F               	goto	l5776
  5369  0003A0                     l1357:
  5370  0003A0  C020  F01B         	movff	___flmul@temp,___flmul@bexp
  5371  0003A4  0EFF               	movlw	255
  5372  0003A6  161C               	andwf	___flmul@prod,f,c
  5373  0003A8  0EFF               	movlw	255
  5374  0003AA  161D               	andwf	___flmul@prod+1,f,c
  5375  0003AC  0E7F               	movlw	127
  5376  0003AE  161E               	andwf	___flmul@prod+2,f,c
  5377  0003B0  0E00               	movlw	0
  5378  0003B2  161F               	andwf	___flmul@prod+3,f,c
  5379  0003B4  B01B               	btfsc	___flmul@bexp,0,c
  5380  0003B6  8E1E               	bsf	___flmul@prod+2,7,c
  5381  0003B8  90D8               	bcf	status,0,c
  5382  0003BA  301B               	rrcf	___flmul@bexp,w,c
  5383  0003BC                     L14:
  5384  0003BC  6E1F               	movwf	___flmul@prod+3,c
  5385  0003BE                     l5776:
  5386  0003BE  5015               	movf	___flmul@sign,w,c
  5387  0003C0  121F               	iorwf	___flmul@prod+3,f,c
  5388  0003C2  C01C  F009         	movff	___flmul@prod,?___flmul
  5389  0003C6  C01D  F00A         	movff	___flmul@prod+1,?___flmul+1
  5390  0003CA  C01E  F00B         	movff	___flmul@prod+2,?___flmul+2
  5391  0003CE  C01F  F00C         	movff	___flmul@prod+3,?___flmul+3
  5392  0003D2  0012               	return		;funcret
  5393  0003D4                     __end_of___flmul:
  5394                           	opt callstack 0
  5395                           
  5396 ;; *************** function ___flge *****************
  5397 ;; Defined at:
  5398 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  ff1             4    8[COMRAM] unsigned char 
  5401 ;;  ff2             4   12[COMRAM] unsigned char 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;		None               void
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5413 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;Total ram usage:       12 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    4
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_roundf
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text16
  5428  001C64                     __ptext16:
  5429                           	opt callstack 0
  5430  001C64                     ___flge:
  5431                           	opt callstack 23
  5432                           
  5433                           ;incstack = 0
  5434  001C64  0E00               	movlw	0
  5435  001C66  1409               	andwf	___flge@ff1,w,c
  5436  001C68  6E11               	movwf	??___flge& (0+255),c
  5437  001C6A  0E00               	movlw	0
  5438  001C6C  140A               	andwf	___flge@ff1+1,w,c
  5439  001C6E  6E12               	movwf	(??___flge+1)& (0+255),c
  5440  001C70  0E80               	movlw	128
  5441  001C72  140B               	andwf	___flge@ff1+2,w,c
  5442  001C74  6E13               	movwf	(??___flge+2)& (0+255),c
  5443  001C76  0E7F               	movlw	127
  5444  001C78  140C               	andwf	___flge@ff1+3,w,c
  5445  001C7A  6E14               	movwf	(??___flge+3)& (0+255),c
  5446  001C7C  5011               	movf	??___flge,w,c
  5447  001C7E  1012               	iorwf	??___flge+1,w,c
  5448  001C80  1013               	iorwf	??___flge+2,w,c
  5449  001C82  1014               	iorwf	??___flge+3,w,c
  5450  001C84  A4D8               	btfss	status,2,c
  5451  001C86  D008               	goto	l5872
  5452  001C88  0E00               	movlw	0
  5453  001C8A  6E09               	movwf	___flge@ff1,c
  5454  001C8C  0E00               	movlw	0
  5455  001C8E  6E0A               	movwf	___flge@ff1+1,c
  5456  001C90  0E00               	movlw	0
  5457  001C92  6E0B               	movwf	___flge@ff1+2,c
  5458  001C94  0E00               	movlw	0
  5459  001C96  6E0C               	movwf	___flge@ff1+3,c
  5460  001C98                     l5872:
  5461  001C98  0E00               	movlw	0
  5462  001C9A  140D               	andwf	___flge@ff2,w,c
  5463  001C9C  6E11               	movwf	??___flge& (0+255),c
  5464  001C9E  0E00               	movlw	0
  5465  001CA0  140E               	andwf	___flge@ff2+1,w,c
  5466  001CA2  6E12               	movwf	(??___flge+1)& (0+255),c
  5467  001CA4  0E80               	movlw	128
  5468  001CA6  140F               	andwf	___flge@ff2+2,w,c
  5469  001CA8  6E13               	movwf	(??___flge+2)& (0+255),c
  5470  001CAA  0E7F               	movlw	127
  5471  001CAC  1410               	andwf	___flge@ff2+3,w,c
  5472  001CAE  6E14               	movwf	(??___flge+3)& (0+255),c
  5473  001CB0  5011               	movf	??___flge,w,c
  5474  001CB2  1012               	iorwf	??___flge+1,w,c
  5475  001CB4  1013               	iorwf	??___flge+2,w,c
  5476  001CB6  1014               	iorwf	??___flge+3,w,c
  5477  001CB8  A4D8               	btfss	status,2,c
  5478  001CBA  D008               	goto	l5876
  5479  001CBC  0E00               	movlw	0
  5480  001CBE  6E0D               	movwf	___flge@ff2,c
  5481  001CC0  0E00               	movlw	0
  5482  001CC2  6E0E               	movwf	___flge@ff2+1,c
  5483  001CC4  0E00               	movlw	0
  5484  001CC6  6E0F               	movwf	___flge@ff2+2,c
  5485  001CC8  0E00               	movlw	0
  5486  001CCA  6E10               	movwf	___flge@ff2+3,c
  5487  001CCC                     l5876:
  5488  001CCC  AE0C               	btfss	___flge@ff1+3,7,c
  5489  001CCE  D009               	goto	l5880
  5490  001CD0  6C09               	negf	___flge@ff1,c
  5491  001CD2  1E0A               	comf	___flge@ff1+1,f,c
  5492  001CD4  B0D8               	btfsc	status,0,c
  5493  001CD6  2A0A               	incf	___flge@ff1+1,f,c
  5494  001CD8  1E0B               	comf	___flge@ff1+2,f,c
  5495  001CDA  B0D8               	btfsc	status,0,c
  5496  001CDC  2A0B               	incf	___flge@ff1+2,f,c
  5497  001CDE  0E80               	movlw	128
  5498  001CE0  560C               	subfwb	___flge@ff1+3,f,c
  5499  001CE2                     l5880:
  5500  001CE2  AE10               	btfss	___flge@ff2+3,7,c
  5501  001CE4  D009               	goto	l991
  5502  001CE6  6C0D               	negf	___flge@ff2,c
  5503  001CE8  1E0E               	comf	___flge@ff2+1,f,c
  5504  001CEA  B0D8               	btfsc	status,0,c
  5505  001CEC  2A0E               	incf	___flge@ff2+1,f,c
  5506  001CEE  1E0F               	comf	___flge@ff2+2,f,c
  5507  001CF0  B0D8               	btfsc	status,0,c
  5508  001CF2  2A0F               	incf	___flge@ff2+2,f,c
  5509  001CF4  0E80               	movlw	128
  5510  001CF6  5610               	subfwb	___flge@ff2+3,f,c
  5511  001CF8                     l991:
  5512  001CF8  0E00               	movlw	0
  5513  001CFA  1A09               	xorwf	___flge@ff1,f,c
  5514  001CFC  0E00               	movlw	0
  5515  001CFE  1A0A               	xorwf	___flge@ff1+1,f,c
  5516  001D00  0E00               	movlw	0
  5517  001D02  1A0B               	xorwf	___flge@ff1+2,f,c
  5518  001D04  0E80               	movlw	128
  5519  001D06  1A0C               	xorwf	___flge@ff1+3,f,c
  5520  001D08  0E00               	movlw	0
  5521  001D0A  1A0D               	xorwf	___flge@ff2,f,c
  5522  001D0C  0E00               	movlw	0
  5523  001D0E  1A0E               	xorwf	___flge@ff2+1,f,c
  5524  001D10  0E00               	movlw	0
  5525  001D12  1A0F               	xorwf	___flge@ff2+2,f,c
  5526  001D14  0E80               	movlw	128
  5527  001D16  1A10               	xorwf	___flge@ff2+3,f,c
  5528  001D18  500D               	movf	___flge@ff2,w,c
  5529  001D1A  5C09               	subwf	___flge@ff1,w,c
  5530  001D1C  500E               	movf	___flge@ff2+1,w,c
  5531  001D1E  580A               	subwfb	___flge@ff1+1,w,c
  5532  001D20  500F               	movf	___flge@ff2+2,w,c
  5533  001D22  580B               	subwfb	___flge@ff1+2,w,c
  5534  001D24  5010               	movf	___flge@ff2+3,w,c
  5535  001D26  580C               	subwfb	___flge@ff1+3,w,c
  5536  001D28  B0D8               	btfsc	status,0,c
  5537  001D2A  D002               	goto	l5886
  5538  001D2C  90D8               	bcf	status,0,c
  5539  001D2E  0012               	return	
  5540  001D30                     l5886:
  5541  001D30  80D8               	bsf	status,0,c
  5542  001D32  0012               	return		;funcret
  5543  001D34                     __end_of___flge:
  5544                           	opt callstack 0
  5545                           
  5546 ;; *************** function ___xxtofl *****************
  5547 ;; Defined at:
  5548 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  sign            1    wreg     unsigned char 
  5551 ;;  val             4   20[COMRAM] long 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  sign            1   28[COMRAM] unsigned char 
  5554 ;;  arg             4   30[COMRAM] unsigned long 
  5555 ;;  exp             1   29[COMRAM] unsigned char 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  4   20[COMRAM] unsigned char 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;Total ram usage:       14 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    4
  5572 ;; This function calls:
  5573 ;;		Nothing
  5574 ;; This function is called by:
  5575 ;;		_temperature_monitor
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text17
  5580  001786                     __ptext17:
  5581                           	opt callstack 0
  5582  001786                     ___xxtofl:
  5583                           	opt callstack 24
  5584                           
  5585                           ;incstack = 0
  5586                           ;___xxtofl@sign stored from wreg
  5587  001786  6E1D               	movwf	___xxtofl@sign,c
  5588  001788  501D               	movf	___xxtofl@sign,w,c
  5589  00178A  A4D8               	btfss	status,2,c
  5590  00178C  AE18               	btfss	___xxtofl@val+3,7,c
  5591  00178E  D01A               	goto	l1381
  5592  001790  C015  F019         	movff	___xxtofl@val,??___xxtofl
  5593  001794  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
  5594  001798  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
  5595  00179C  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
  5596  0017A0  1E19               	comf	??___xxtofl,f,c
  5597  0017A2  1E1A               	comf	??___xxtofl+1,f,c
  5598  0017A4  1E1B               	comf	??___xxtofl+2,f,c
  5599  0017A6  1E1C               	comf	??___xxtofl+3,f,c
  5600  0017A8  2A19               	incf	??___xxtofl,f,c
  5601  0017AA  0E00               	movlw	0
  5602  0017AC  221A               	addwfc	??___xxtofl+1,f,c
  5603  0017AE  221B               	addwfc	??___xxtofl+2,f,c
  5604  0017B0  221C               	addwfc	??___xxtofl+3,f,c
  5605  0017B2  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
  5606  0017B6  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
  5607  0017BA  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
  5608  0017BE  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
  5609  0017C2  D008               	goto	l6080
  5610  0017C4                     l1381:
  5611  0017C4  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
  5612  0017C8  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5613  0017CC  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5614  0017D0  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5615  0017D4                     l6080:
  5616  0017D4  5015               	movf	___xxtofl@val,w,c
  5617  0017D6  1016               	iorwf	___xxtofl@val+1,w,c
  5618  0017D8  1017               	iorwf	___xxtofl@val+2,w,c
  5619  0017DA  1018               	iorwf	___xxtofl@val+3,w,c
  5620  0017DC  A4D8               	btfss	status,2,c
  5621  0017DE  D009               	goto	l6086
  5622  0017E0  0E00               	movlw	0
  5623  0017E2  6E15               	movwf	?___xxtofl,c
  5624  0017E4  0E00               	movlw	0
  5625  0017E6  6E16               	movwf	?___xxtofl+1,c
  5626  0017E8  0E00               	movlw	0
  5627  0017EA  6E17               	movwf	?___xxtofl+2,c
  5628  0017EC  0E00               	movlw	0
  5629  0017EE  6E18               	movwf	?___xxtofl+3,c
  5630  0017F0  0012               	return	
  5631  0017F2                     l6086:
  5632  0017F2  0E96               	movlw	150
  5633  0017F4  6E1E               	movwf	___xxtofl@exp,c
  5634  0017F6  D006               	goto	l6090
  5635  0017F8                     l6088:
  5636  0017F8  2A1E               	incf	___xxtofl@exp,f,c
  5637  0017FA  90D8               	bcf	status,0,c
  5638  0017FC  3222               	rrcf	___xxtofl@arg+3,f,c
  5639  0017FE  3221               	rrcf	___xxtofl@arg+2,f,c
  5640  001800  3220               	rrcf	___xxtofl@arg+1,f,c
  5641  001802  321F               	rrcf	___xxtofl@arg,f,c
  5642  001804                     l6090:
  5643  001804  0E00               	movlw	0
  5644  001806  141F               	andwf	___xxtofl@arg,w,c
  5645  001808  6E19               	movwf	??___xxtofl& (0+255),c
  5646  00180A  0E00               	movlw	0
  5647  00180C  1420               	andwf	___xxtofl@arg+1,w,c
  5648  00180E  6E1A               	movwf	(??___xxtofl+1)& (0+255),c
  5649  001810  0E00               	movlw	0
  5650  001812  1421               	andwf	___xxtofl@arg+2,w,c
  5651  001814  6E1B               	movwf	(??___xxtofl+2)& (0+255),c
  5652  001816  0EFE               	movlw	254
  5653  001818  1422               	andwf	___xxtofl@arg+3,w,c
  5654  00181A  6E1C               	movwf	(??___xxtofl+3)& (0+255),c
  5655  00181C  5019               	movf	??___xxtofl,w,c
  5656  00181E  101A               	iorwf	??___xxtofl+1,w,c
  5657  001820  101B               	iorwf	??___xxtofl+2,w,c
  5658  001822  101C               	iorwf	??___xxtofl+3,w,c
  5659  001824  B4D8               	btfsc	status,2,c
  5660  001826  D00D               	goto	l1388
  5661  001828  D7E7               	goto	l6088
  5662  00182A                     l6092:
  5663  00182A  2A1E               	incf	___xxtofl@exp,f,c
  5664  00182C  0E01               	movlw	1
  5665  00182E  261F               	addwf	___xxtofl@arg,f,c
  5666  001830  0E00               	movlw	0
  5667  001832  2220               	addwfc	___xxtofl@arg+1,f,c
  5668  001834  2221               	addwfc	___xxtofl@arg+2,f,c
  5669  001836  2222               	addwfc	___xxtofl@arg+3,f,c
  5670  001838  90D8               	bcf	status,0,c
  5671  00183A  3222               	rrcf	___xxtofl@arg+3,f,c
  5672  00183C  3221               	rrcf	___xxtofl@arg+2,f,c
  5673  00183E  3220               	rrcf	___xxtofl@arg+1,f,c
  5674  001840  321F               	rrcf	___xxtofl@arg,f,c
  5675  001842                     l1388:
  5676  001842  0E00               	movlw	0
  5677  001844  141F               	andwf	___xxtofl@arg,w,c
  5678  001846  6E19               	movwf	??___xxtofl& (0+255),c
  5679  001848  0E00               	movlw	0
  5680  00184A  1420               	andwf	___xxtofl@arg+1,w,c
  5681  00184C  6E1A               	movwf	(??___xxtofl+1)& (0+255),c
  5682  00184E  0E00               	movlw	0
  5683  001850  1421               	andwf	___xxtofl@arg+2,w,c
  5684  001852  6E1B               	movwf	(??___xxtofl+2)& (0+255),c
  5685  001854  0EFF               	movlw	255
  5686  001856  1422               	andwf	___xxtofl@arg+3,w,c
  5687  001858  6E1C               	movwf	(??___xxtofl+3)& (0+255),c
  5688  00185A  5019               	movf	??___xxtofl,w,c
  5689  00185C  101A               	iorwf	??___xxtofl+1,w,c
  5690  00185E  101B               	iorwf	??___xxtofl+2,w,c
  5691  001860  101C               	iorwf	??___xxtofl+3,w,c
  5692  001862  B4D8               	btfsc	status,2,c
  5693  001864  D007               	goto	l6100
  5694  001866  D7E1               	goto	l6092
  5695  001868                     l6098:
  5696  001868  061E               	decf	___xxtofl@exp,f,c
  5697  00186A  90D8               	bcf	status,0,c
  5698  00186C  361F               	rlcf	___xxtofl@arg,f,c
  5699  00186E  3620               	rlcf	___xxtofl@arg+1,f,c
  5700  001870  3621               	rlcf	___xxtofl@arg+2,f,c
  5701  001872  3622               	rlcf	___xxtofl@arg+3,f,c
  5702  001874                     l6100:
  5703  001874  BE21               	btfsc	___xxtofl@arg+2,7,c
  5704  001876  D003               	goto	u7170
  5705  001878  0E02               	movlw	2
  5706  00187A  601E               	cpfslt	___xxtofl@exp,c
  5707  00187C  D7F5               	goto	l6098
  5708  00187E                     u7170:
  5709  00187E  A01E               	btfss	___xxtofl@exp,0,c
  5710  001880  9E21               	bcf	___xxtofl@arg+2,7,c
  5711  001882  90D8               	bcf	status,0,c
  5712  001884  321E               	rrcf	___xxtofl@exp,f,c
  5713  001886  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
  5714  00188A  6A1A               	clrf	(??___xxtofl+1)& (0+255),c
  5715  00188C  6A1B               	clrf	(??___xxtofl+2)& (0+255),c
  5716  00188E  6A1C               	clrf	(??___xxtofl+3)& (0+255),c
  5717  001890  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
  5718  001894  6A1B               	clrf	??___xxtofl+2,c
  5719  001896  6A1A               	clrf	??___xxtofl+1,c
  5720  001898  6A19               	clrf	??___xxtofl,c
  5721  00189A  5019               	movf	??___xxtofl,w,c
  5722  00189C  121F               	iorwf	___xxtofl@arg,f,c
  5723  00189E  501A               	movf	??___xxtofl+1,w,c
  5724  0018A0  1220               	iorwf	___xxtofl@arg+1,f,c
  5725  0018A2  501B               	movf	??___xxtofl+2,w,c
  5726  0018A4  1221               	iorwf	___xxtofl@arg+2,f,c
  5727  0018A6  501C               	movf	??___xxtofl+3,w,c
  5728  0018A8  1222               	iorwf	___xxtofl@arg+3,f,c
  5729  0018AA  501D               	movf	___xxtofl@sign,w,c
  5730  0018AC  A4D8               	btfss	status,2,c
  5731  0018AE  AE18               	btfss	___xxtofl@val+3,7,c
  5732  0018B0  D001               	goto	l6116
  5733  0018B2  8E22               	bsf	___xxtofl@arg+3,7,c
  5734  0018B4                     l6116:
  5735  0018B4  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
  5736  0018B8  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
  5737  0018BC  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
  5738  0018C0  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
  5739  0018C4  0012               	return		;funcret
  5740  0018C6                     __end_of___xxtofl:
  5741                           	opt callstack 0
  5742                           
  5743 ;; *************** function ___lwdiv *****************
  5744 ;; Defined at:
  5745 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  dividend        2   13[COMRAM] unsigned int 
  5748 ;;  divisor         2   15[COMRAM] unsigned int 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  quotient        2   18[COMRAM] unsigned int 
  5751 ;;  counter         1   17[COMRAM] unsigned char 
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  2   13[COMRAM] unsigned int 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2, status,0
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;Total ram usage:        7 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:    4
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_temperature_monitor
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text18
  5776  002546                     __ptext18:
  5777                           	opt callstack 0
  5778  002546                     ___lwdiv:
  5779                           	opt callstack 24
  5780                           
  5781                           ;incstack = 0
  5782  002546  0E00               	movlw	0
  5783  002548  6E14               	movwf	___lwdiv@quotient+1,c
  5784  00254A  0E00               	movlw	0
  5785  00254C  6E13               	movwf	___lwdiv@quotient,c
  5786  00254E  5010               	movf	___lwdiv@divisor,w,c
  5787  002550  1011               	iorwf	___lwdiv@divisor+1,w,c
  5788  002552  B4D8               	btfsc	status,2,c
  5789  002554  D01C               	goto	l1217
  5790  002556  0E01               	movlw	1
  5791  002558  6E12               	movwf	___lwdiv@counter,c
  5792  00255A  D004               	goto	l6060
  5793  00255C                     l6058:
  5794  00255C  90D8               	bcf	status,0,c
  5795  00255E  3610               	rlcf	___lwdiv@divisor,f,c
  5796  002560  3611               	rlcf	___lwdiv@divisor+1,f,c
  5797  002562  2A12               	incf	___lwdiv@counter,f,c
  5798  002564                     l6060:
  5799  002564  AE11               	btfss	___lwdiv@divisor+1,7,c
  5800  002566  D7FA               	goto	l6058
  5801  002568                     u7090:
  5802  002568  90D8               	bcf	status,0,c
  5803  00256A  3613               	rlcf	___lwdiv@quotient,f,c
  5804  00256C  3614               	rlcf	___lwdiv@quotient+1,f,c
  5805  00256E  5010               	movf	___lwdiv@divisor,w,c
  5806  002570  5C0E               	subwf	___lwdiv@dividend,w,c
  5807  002572  5011               	movf	___lwdiv@divisor+1,w,c
  5808  002574  580F               	subwfb	___lwdiv@dividend+1,w,c
  5809  002576  A0D8               	btfss	status,0,c
  5810  002578  D005               	goto	l6070
  5811  00257A  5010               	movf	___lwdiv@divisor,w,c
  5812  00257C  5E0E               	subwf	___lwdiv@dividend,f,c
  5813  00257E  5011               	movf	___lwdiv@divisor+1,w,c
  5814  002580  5A0F               	subwfb	___lwdiv@dividend+1,f,c
  5815  002582  8013               	bsf	___lwdiv@quotient,0,c
  5816  002584                     l6070:
  5817  002584  90D8               	bcf	status,0,c
  5818  002586  3211               	rrcf	___lwdiv@divisor+1,f,c
  5819  002588  3210               	rrcf	___lwdiv@divisor,f,c
  5820  00258A  2E12               	decfsz	___lwdiv@counter,f,c
  5821  00258C  D7ED               	goto	u7090
  5822  00258E                     l1217:
  5823  00258E  C013  F00E         	movff	___lwdiv@quotient,?___lwdiv
  5824  002592  C014  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5825  002596  0012               	return		;funcret
  5826  002598                     __end_of___lwdiv:
  5827                           	opt callstack 0
  5828                           
  5829 ;; *************** function ___fltol *****************
  5830 ;; Defined at:
  5831 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  f1              4   60[COMRAM] unsigned int 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  exp1            1   69[COMRAM] unsigned char 
  5836 ;;  sign1           1   68[COMRAM] unsigned char 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  4   60[COMRAM] long 
  5839 ;; Registers used:
  5840 ;;		wreg, status,2, status,0
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;Total ram usage:       10 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; Hardware stack levels required when called:    4
  5853 ;; This function calls:
  5854 ;;		Nothing
  5855 ;; This function is called by:
  5856 ;;		_temperature_monitor
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text19
  5861  001D34                     __ptext19:
  5862                           	opt callstack 0
  5863  001D34                     ___fltol:
  5864                           	opt callstack 24
  5865                           
  5866                           ;incstack = 0
  5867  001D34  343F               	rlcf	___fltol@f1+2,w,c
  5868  001D36  3440               	rlcf	___fltol@f1+3,w,c
  5869  001D38  6E46               	movwf	___fltol@exp1,c
  5870  001D3A  5046               	movf	___fltol@exp1,w,c
  5871  001D3C  A4D8               	btfss	status,2,c
  5872  001D3E  D009               	goto	l6014
  5873  001D40                     u7010:
  5874  001D40  0E00               	movlw	0
  5875  001D42  6E3D               	movwf	?___fltol,c
  5876  001D44  0E00               	movlw	0
  5877  001D46  6E3E               	movwf	?___fltol+1,c
  5878  001D48  0E00               	movlw	0
  5879  001D4A  6E3F               	movwf	?___fltol+2,c
  5880  001D4C  0E00               	movlw	0
  5881  001D4E  6E40               	movwf	?___fltol+3,c
  5882  001D50  0012               	return	
  5883  001D52                     l6014:
  5884  001D52  C03D  F041         	movff	___fltol@f1,??___fltol
  5885  001D56  C03E  F042         	movff	___fltol@f1+1,??___fltol+1
  5886  001D5A  C03F  F043         	movff	___fltol@f1+2,??___fltol+2
  5887  001D5E  C040  F044         	movff	___fltol@f1+3,??___fltol+3
  5888  001D62  0E20               	movlw	32
  5889  001D64  D005               	goto	u7020
  5890  001D66                     u7025:
  5891  001D66  90D8               	bcf	status,0,c
  5892  001D68  3244               	rrcf	??___fltol+3,f,c
  5893  001D6A  3243               	rrcf	??___fltol+2,f,c
  5894  001D6C  3242               	rrcf	??___fltol+1,f,c
  5895  001D6E  3241               	rrcf	??___fltol,f,c
  5896  001D70                     u7020:
  5897  001D70  2EE8               	decfsz	wreg,f,c
  5898  001D72  D7F9               	goto	u7025
  5899  001D74  5041               	movf	??___fltol,w,c
  5900  001D76  6E45               	movwf	___fltol@sign1,c
  5901  001D78  8E3F               	bsf	___fltol@f1+2,7,c
  5902  001D7A  0EFF               	movlw	255
  5903  001D7C  163D               	andwf	___fltol@f1,f,c
  5904  001D7E  0EFF               	movlw	255
  5905  001D80  163E               	andwf	___fltol@f1+1,f,c
  5906  001D82  0EFF               	movlw	255
  5907  001D84  163F               	andwf	___fltol@f1+2,f,c
  5908  001D86  0E00               	movlw	0
  5909  001D88  1640               	andwf	___fltol@f1+3,f,c
  5910  001D8A  0E96               	movlw	150
  5911  001D8C  5E46               	subwf	___fltol@exp1,f,c
  5912  001D8E  AE46               	btfss	___fltol@exp1,7,c
  5913  001D90  D00D               	goto	l6034
  5914  001D92  5046               	movf	___fltol@exp1,w,c
  5915  001D94  0A80               	xorlw	128
  5916  001D96  0F97               	addlw	151
  5917  001D98  A0D8               	btfss	status,0,c
  5918  001D9A  D7D2               	goto	u7010
  5919  001D9C                     l6030:
  5920  001D9C  90D8               	bcf	status,0,c
  5921  001D9E  3240               	rrcf	___fltol@f1+3,f,c
  5922  001DA0  323F               	rrcf	___fltol@f1+2,f,c
  5923  001DA2  323E               	rrcf	___fltol@f1+1,f,c
  5924  001DA4  323D               	rrcf	___fltol@f1,f,c
  5925  001DA6  3E46               	incfsz	___fltol@exp1,f,c
  5926  001DA8  D7F9               	goto	l6030
  5927  001DAA  D00D               	goto	u7060
  5928  001DAC                     l6034:
  5929  001DAC  0E1F               	movlw	31
  5930  001DAE  6446               	cpfsgt	___fltol@exp1,c
  5931  001DB0  D007               	goto	l6042
  5932  001DB2  D7C6               	goto	u7010
  5933  001DB4                     l6040:
  5934  001DB4  90D8               	bcf	status,0,c
  5935  001DB6  363D               	rlcf	___fltol@f1,f,c
  5936  001DB8  363E               	rlcf	___fltol@f1+1,f,c
  5937  001DBA  363F               	rlcf	___fltol@f1+2,f,c
  5938  001DBC  3640               	rlcf	___fltol@f1+3,f,c
  5939  001DBE  0646               	decf	___fltol@exp1,f,c
  5940  001DC0                     l6042:
  5941  001DC0  5046               	movf	___fltol@exp1,w,c
  5942  001DC2  A4D8               	btfss	status,2,c
  5943  001DC4  D7F7               	goto	l6040
  5944  001DC6                     u7060:
  5945  001DC6  5045               	movf	___fltol@sign1,w,c
  5946  001DC8  B4D8               	btfsc	status,2,c
  5947  001DCA  D008               	goto	l6048
  5948  001DCC  1E40               	comf	___fltol@f1+3,f,c
  5949  001DCE  1E3F               	comf	___fltol@f1+2,f,c
  5950  001DD0  1E3E               	comf	___fltol@f1+1,f,c
  5951  001DD2  6C3D               	negf	___fltol@f1,c
  5952  001DD4  0E00               	movlw	0
  5953  001DD6  223E               	addwfc	___fltol@f1+1,f,c
  5954  001DD8  223F               	addwfc	___fltol@f1+2,f,c
  5955  001DDA  2240               	addwfc	___fltol@f1+3,f,c
  5956  001DDC                     l6048:
  5957  001DDC  C03D  F03D         	movff	___fltol@f1,?___fltol
  5958  001DE0  C03E  F03E         	movff	___fltol@f1+1,?___fltol+1
  5959  001DE4  C03F  F03F         	movff	___fltol@f1+2,?___fltol+2
  5960  001DE8  C040  F040         	movff	___fltol@f1+3,?___fltol+3
  5961  001DEC  0012               	return		;funcret
  5962  001DEE                     __end_of___fltol:
  5963                           	opt callstack 0
  5964                           
  5965 ;; *************** function _ADC_GetConversion *****************
  5966 ;; Defined at:
  5967 ;;		line 110 in file "mcc_generated_files/adc.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  channel         1    wreg     enum E5751
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  channel         1   12[COMRAM] enum E5751
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  2    8[COMRAM] unsigned short 
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;Total ram usage:        5 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    4
  5988 ;; This function calls:
  5989 ;;		Nothing
  5990 ;; This function is called by:
  5991 ;;		_temperature_monitor
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text20
  5996  0028EE                     __ptext20:
  5997                           	opt callstack 0
  5998  0028EE                     _ADC_GetConversion:
  5999                           	opt callstack 24
  6000                           
  6001                           ;incstack = 0
  6002                           ;ADC_GetConversion@channel stored from wreg
  6003  0028EE  6E0D               	movwf	ADC_GetConversion@channel,c
  6004                           
  6005                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  6006  0028F0  C00D  F00B         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  6007  0028F4  460B               	rlncf	??_ADC_GetConversion,f,c
  6008  0028F6  460B               	rlncf	??_ADC_GetConversion,f,c
  6009  0028F8  50C2               	movf	4034,w,c	;volatile
  6010  0028FA  180B               	xorwf	??_ADC_GetConversion,w,c
  6011  0028FC  0B83               	andlw	-125
  6012  0028FE  180B               	xorwf	??_ADC_GetConversion,w,c
  6013  002900  6EC2               	movwf	4034,c	;volatile
  6014                           
  6015                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  6016  002902  80C2               	bsf	4034,0,c	;volatile
  6017                           
  6018                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  6019  002904  82C2               	bsf	4034,1,c	;volatile
  6020  002906                     l291:
  6021                           
  6022                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  6023  002906  B2C2               	btfsc	4034,1,c	;volatile
  6024  002908  D7FE               	goto	l291
  6025                           
  6026                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6027  00290A  50C4               	movf	4036,w,c	;volatile
  6028  00290C  6E0C               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  6029  00290E  6A0B               	clrf	??_ADC_GetConversion& (0+255),c
  6030  002910  50C3               	movf	4035,w,c	;volatile
  6031  002912  240B               	addwf	??_ADC_GetConversion,w,c
  6032  002914  6E09               	movwf	?_ADC_GetConversion,c
  6033  002916  0E00               	movlw	0
  6034  002918  200C               	addwfc	??_ADC_GetConversion+1,w,c
  6035  00291A  6E0A               	movwf	?_ADC_GetConversion+1,c
  6036  00291C  0012               	return		;funcret
  6037  00291E                     __end_of_ADC_GetConversion:
  6038                           	opt callstack 0
  6039                           
  6040 ;; *************** function _atoi *****************
  6041 ;; Defined at:
  6042 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  s               2   15[COMRAM] PTR const unsigned char 
  6045 ;;		 -> NULL(0), main@input(64), 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  n               2   28[COMRAM] int 
  6048 ;;  neg             2   21[COMRAM] int 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  2   15[COMRAM] int 
  6051 ;; Registers used:
  6052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;Total ram usage:       15 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    5
  6065 ;; This function calls:
  6066 ;;		___wmul
  6067 ;;		_isdigit
  6068 ;;		_isspace
  6069 ;; This function is called by:
  6070 ;;		_timer_control
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text21
  6075  001A06                     __ptext21:
  6076                           	opt callstack 0
  6077  001A06                     _atoi:
  6078                           	opt callstack 24
  6079                           
  6080                           ;incstack = 0
  6081  001A06  0E00               	movlw	0
  6082  001A08  6E1E               	movwf	atoi@n+1,c
  6083  001A0A  0E00               	movlw	0
  6084  001A0C  6E1D               	movwf	atoi@n,c
  6085  001A0E  0E00               	movlw	0
  6086  001A10  6E17               	movwf	atoi@neg+1,c
  6087  001A12  0E00               	movlw	0
  6088  001A14  6E16               	movwf	atoi@neg,c
  6089  001A16  D002               	goto	l6260
  6090  001A18                     l6258:
  6091  001A18  4A10               	infsnz	atoi@s,f,c
  6092  001A1A  2A11               	incf	atoi@s+1,f,c
  6093  001A1C                     l6260:
  6094  001A1C  0E01               	movlw	1
  6095  001A1E  6E1C               	movwf	_atoi$1837,c
  6096  001A20  C010  FFD9         	movff	atoi@s,fsr2l
  6097  001A24  C011  FFDA         	movff	atoi@s+1,fsr2h
  6098  001A28  0E20               	movlw	32
  6099  001A2A  18DE               	xorwf	postinc2,w,c
  6100  001A2C  B4D8               	btfsc	status,2,c
  6101  001A2E  D017               	goto	l6268
  6102  001A30  0EF7               	movlw	247
  6103  001A32  6E12               	movwf	??_atoi& (0+255),c
  6104  001A34  0EFF               	movlw	255
  6105  001A36  6E13               	movwf	(??_atoi+1)& (0+255),c
  6106  001A38  C010  FFD9         	movff	atoi@s,fsr2l
  6107  001A3C  C011  FFDA         	movff	atoi@s+1,fsr2h
  6108  001A40  50DF               	movf	indf2,w,c
  6109  001A42  6E14               	movwf	(??_atoi+2)& (0+255),c
  6110  001A44  6A15               	clrf	(??_atoi+3)& (0+255),c
  6111  001A46  5012               	movf	??_atoi,w,c
  6112  001A48  2614               	addwf	??_atoi+2,f,c
  6113  001A4A  5013               	movf	??_atoi+1,w,c
  6114  001A4C  2215               	addwfc	??_atoi+3,f,c
  6115  001A4E  5015               	movf	??_atoi+3,w,c
  6116  001A50  E104               	bnz	u7480
  6117  001A52  0E05               	movlw	5
  6118  001A54  5C14               	subwf	??_atoi+2,w,c
  6119  001A56  A0D8               	btfss	status,0,c
  6120  001A58  D002               	goto	l6268
  6121  001A5A                     u7480:
  6122  001A5A  0E00               	movlw	0
  6123  001A5C  6E1C               	movwf	_atoi$1837,c
  6124  001A5E                     l6268:
  6125  001A5E  C01C  F018         	movff	_atoi$1837,_atoi$1836
  6126  001A62  6A19               	clrf	_atoi$1836+1,c
  6127  001A64  5018               	movf	_atoi$1836,w,c
  6128  001A66  1019               	iorwf	_atoi$1836+1,w,c
  6129  001A68  B4D8               	btfsc	status,2,c
  6130  001A6A  D008               	goto	l6278
  6131  001A6C  D7D5               	goto	l6258
  6132  001A6E                     l6274:
  6133  001A6E  0E00               	movlw	0
  6134  001A70  6E17               	movwf	atoi@neg+1,c
  6135  001A72  0E01               	movlw	1
  6136  001A74  6E16               	movwf	atoi@neg,c
  6137  001A76                     l6276:
  6138  001A76  4A10               	infsnz	atoi@s,f,c
  6139  001A78  2A11               	incf	atoi@s+1,f,c
  6140  001A7A  D02E               	goto	l6284
  6141  001A7C                     l6278:
  6142  001A7C  C010  FFD9         	movff	atoi@s,fsr2l
  6143  001A80  C011  FFDA         	movff	atoi@s+1,fsr2h
  6144  001A84  50DF               	movf	indf2,w,c
  6145  001A86  6E12               	movwf	??_atoi& (0+255),c
  6146  001A88  6A13               	clrf	(??_atoi+1)& (0+255),c
  6147                           
  6148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6149                           ; Switch size 1, requested type "simple"
  6150                           ; Number of cases is 1, Range of values is 0 to 0
  6151                           ; switch strategies available:
  6152                           ; Name         Instructions Cycles
  6153                           ; simple_byte            4     3 (average)
  6154                           ;	Chosen strategy is simple_byte
  6155  001A8A  5013               	movf	??_atoi+1,w,c
  6156  001A8C  0A00               	xorlw	0	; case 0
  6157  001A8E  A4D8               	btfss	status,2,c
  6158  001A90  D023               	goto	l6284
  6159                           
  6160                           ; Switch size 1, requested type "simple"
  6161                           ; Number of cases is 2, Range of values is 43 to 45
  6162                           ; switch strategies available:
  6163                           ; Name         Instructions Cycles
  6164                           ; simple_byte            7     4 (average)
  6165                           ;	Chosen strategy is simple_byte
  6166  001A92  5012               	movf	??_atoi,w,c
  6167  001A94  0A2B               	xorlw	43	; case 43
  6168  001A96  B4D8               	btfsc	status,2,c
  6169  001A98  D7EE               	goto	l6276
  6170  001A9A  0A06               	xorlw	6	; case 45
  6171  001A9C  B4D8               	btfsc	status,2,c
  6172  001A9E  D7E7               	goto	l6274
  6173  001AA0  D01B               	goto	l6284
  6174  001AA2                     l6280:
  6175  001AA2  C01D  F009         	movff	atoi@n,___wmul@multiplier
  6176  001AA6  C01E  F00A         	movff	atoi@n+1,___wmul@multiplier+1
  6177  001AAA  0E00               	movlw	0
  6178  001AAC  6E0C               	movwf	___wmul@multiplicand+1,c
  6179  001AAE  0E0A               	movlw	10
  6180  001AB0  6E0B               	movwf	___wmul@multiplicand,c
  6181  001AB2  EC5C  F015         	call	___wmul	;wreg free
  6182  001AB6  C010  FFD9         	movff	atoi@s,fsr2l
  6183  001ABA  C011  FFDA         	movff	atoi@s+1,fsr2h
  6184  001ABE  50DF               	movf	indf2,w,c
  6185  001AC0  6E12               	movwf	??_atoi& (0+255),c
  6186  001AC2  5012               	movf	??_atoi,w,c
  6187  001AC4  5E09               	subwf	?___wmul,f,c
  6188  001AC6  0E00               	movlw	0
  6189  001AC8  5A0A               	subwfb	?___wmul+1,f,c
  6190  001ACA  0E30               	movlw	48
  6191  001ACC  2409               	addwf	?___wmul,w,c
  6192  001ACE  6E1D               	movwf	atoi@n,c
  6193  001AD0  0E00               	movlw	0
  6194  001AD2  200A               	addwfc	?___wmul+1,w,c
  6195  001AD4  6E1E               	movwf	atoi@n+1,c
  6196  001AD6  D7CF               	goto	l6276
  6197  001AD8                     l6284:
  6198  001AD8  0ED0               	movlw	208
  6199  001ADA  6E12               	movwf	??_atoi& (0+255),c
  6200  001ADC  0EFF               	movlw	255
  6201  001ADE  6E13               	movwf	(??_atoi+1)& (0+255),c
  6202  001AE0  C010  FFD9         	movff	atoi@s,fsr2l
  6203  001AE4  C011  FFDA         	movff	atoi@s+1,fsr2h
  6204  001AE8  50DF               	movf	indf2,w,c
  6205  001AEA  6E14               	movwf	(??_atoi+2)& (0+255),c
  6206  001AEC  6A15               	clrf	(??_atoi+3)& (0+255),c
  6207  001AEE  5012               	movf	??_atoi,w,c
  6208  001AF0  2614               	addwf	??_atoi+2,f,c
  6209  001AF2  5013               	movf	??_atoi+1,w,c
  6210  001AF4  2215               	addwfc	??_atoi+3,f,c
  6211  001AF6  5015               	movf	??_atoi+3,w,c
  6212  001AF8  E106               	bnz	u7500
  6213  001AFA  0E0A               	movlw	10
  6214  001AFC  5C14               	subwf	??_atoi+2,w,c
  6215  001AFE  B0D8               	btfsc	status,0,c
  6216  001B00  D002               	goto	u7500
  6217  001B02  0E01               	movlw	1
  6218  001B04  D001               	goto	u7510
  6219  001B06                     u7500:
  6220  001B06  0E00               	movlw	0
  6221  001B08                     u7510:
  6222  001B08  6E1A               	movwf	_atoi$1838,c
  6223  001B0A  6A1B               	clrf	_atoi$1838+1,c
  6224  001B0C  501A               	movf	_atoi$1838,w,c
  6225  001B0E  101B               	iorwf	_atoi$1838+1,w,c
  6226  001B10  A4D8               	btfss	status,2,c
  6227  001B12  D7C7               	goto	l6280
  6228  001B14  5016               	movf	atoi@neg,w,c
  6229  001B16  1017               	iorwf	atoi@neg+1,w,c
  6230  001B18  A4D8               	btfss	status,2,c
  6231  001B1A  D00D               	goto	l1432
  6232  001B1C  C01D  F012         	movff	atoi@n,??_atoi
  6233  001B20  C01E  F013         	movff	atoi@n+1,??_atoi+1
  6234  001B24  1E12               	comf	??_atoi,f,c
  6235  001B26  1E13               	comf	??_atoi+1,f,c
  6236  001B28  4A12               	infsnz	??_atoi,f,c
  6237  001B2A  2A13               	incf	??_atoi+1,f,c
  6238  001B2C  C012  F010         	movff	??_atoi,?_atoi
  6239  001B30  C013  F011         	movff	??_atoi+1,?_atoi+1
  6240  001B34  0012               	return	
  6241  001B36                     l1432:
  6242  001B36  C01D  F010         	movff	atoi@n,?_atoi
  6243  001B3A  C01E  F011         	movff	atoi@n+1,?_atoi+1
  6244  001B3E  0012               	return		;funcret
  6245  001B40                     __end_of_atoi:
  6246                           	opt callstack 0
  6247                           
  6248 ;; *************** function _isspace *****************
  6249 ;; Defined at:
  6250 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  c               2    8[COMRAM] int 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;		None
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  2    8[COMRAM] int 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;Total ram usage:        7 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    4
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		_atoi
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text22
  6279  0027D2                     __ptext22:
  6280                           	opt callstack 0
  6281  0027D2                     _isspace:
  6282                           	opt callstack 24
  6283                           
  6284                           ;incstack = 0
  6285  0027D2  0E01               	movlw	1
  6286  0027D4  6E0F               	movwf	_isspace$1872,c
  6287  0027D6  0E20               	movlw	32
  6288  0027D8  1809               	xorwf	isspace@c,w,c
  6289  0027DA  100A               	iorwf	isspace@c+1,w,c
  6290  0027DC  B4D8               	btfsc	status,2,c
  6291  0027DE  D014               	goto	l6128
  6292  0027E0  0EF7               	movlw	247
  6293  0027E2  6E0B               	movwf	??_isspace& (0+255),c
  6294  0027E4  0EFF               	movlw	255
  6295  0027E6  6E0C               	movwf	(??_isspace+1)& (0+255),c
  6296  0027E8  C009  F00D         	movff	isspace@c,??_isspace+2
  6297  0027EC  C00A  F00E         	movff	isspace@c+1,??_isspace+3
  6298  0027F0  500B               	movf	??_isspace,w,c
  6299  0027F2  260D               	addwf	??_isspace+2,f,c
  6300  0027F4  500C               	movf	??_isspace+1,w,c
  6301  0027F6  220E               	addwfc	??_isspace+3,f,c
  6302  0027F8  500E               	movf	??_isspace+3,w,c
  6303  0027FA  E104               	bnz	u7220
  6304  0027FC  0E05               	movlw	5
  6305  0027FE  5C0D               	subwf	??_isspace+2,w,c
  6306  002800  A0D8               	btfss	status,0,c
  6307  002802  D002               	goto	l6128
  6308  002804                     u7220:
  6309  002804  0E00               	movlw	0
  6310  002806  6E0F               	movwf	_isspace$1872,c
  6311  002808                     l6128:
  6312  002808  C00F  F009         	movff	_isspace$1872,?_isspace
  6313  00280C  6A0A               	clrf	?_isspace+1,c
  6314  00280E  0012               	return		;funcret
  6315  002810                     __end_of_isspace:
  6316                           	opt callstack 0
  6317                           
  6318 ;; *************** function _isdigit *****************
  6319 ;; Defined at:
  6320 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  c               2    8[COMRAM] int 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  2    8[COMRAM] int 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;Total ram usage:        6 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    4
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_atoi
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text23
  6349  00291E                     __ptext23:
  6350                           	opt callstack 0
  6351  00291E                     _isdigit:
  6352                           	opt callstack 24
  6353                           
  6354                           ;incstack = 0
  6355  00291E  0ED0               	movlw	208
  6356  002920  6E0B               	movwf	??_isdigit& (0+255),c
  6357  002922  0EFF               	movlw	255
  6358  002924  6E0C               	movwf	(??_isdigit+1)& (0+255),c
  6359  002926  C009  F00D         	movff	isdigit@c,??_isdigit+2
  6360  00292A  C00A  F00E         	movff	isdigit@c+1,??_isdigit+3
  6361  00292E  500B               	movf	??_isdigit,w,c
  6362  002930  260D               	addwf	??_isdigit+2,f,c
  6363  002932  500C               	movf	??_isdigit+1,w,c
  6364  002934  220E               	addwfc	??_isdigit+3,f,c
  6365  002936  500E               	movf	??_isdigit+3,w,c
  6366  002938  E106               	bnz	u7230
  6367  00293A  0E0A               	movlw	10
  6368  00293C  5C0D               	subwf	??_isdigit+2,w,c
  6369  00293E  B0D8               	btfsc	status,0,c
  6370  002940  D002               	goto	u7230
  6371  002942  0E01               	movlw	1
  6372  002944  D001               	goto	u7240
  6373  002946                     u7230:
  6374  002946  0E00               	movlw	0
  6375  002948                     u7240:
  6376  002948  6E09               	movwf	?_isdigit,c
  6377  00294A  6A0A               	clrf	?_isdigit+1,c
  6378  00294C  0012               	return		;funcret
  6379  00294E                     __end_of_isdigit:
  6380                           	opt callstack 0
  6381                           
  6382 ;; *************** function ___wmul *****************
  6383 ;; Defined at:
  6384 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  multiplier      2    8[COMRAM] unsigned int 
  6387 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  product         2   12[COMRAM] unsigned int 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  2    8[COMRAM] unsigned int 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0, prodl, prodh
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;Total ram usage:        6 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    4
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_atoi
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text24
  6414  002AB8                     __ptext24:
  6415                           	opt callstack 0
  6416  002AB8                     ___wmul:
  6417                           	opt callstack 24
  6418                           
  6419                           ;incstack = 0
  6420  002AB8  5009               	movf	___wmul@multiplier,w,c
  6421  002ABA  020B               	mulwf	___wmul@multiplicand,c
  6422  002ABC  CFF3 F00D          	movff	prodl,___wmul@product
  6423  002AC0  CFF4 F00E          	movff	prodh,___wmul@product+1
  6424  002AC4  5009               	movf	___wmul@multiplier,w,c
  6425  002AC6  020C               	mulwf	___wmul@multiplicand+1,c
  6426  002AC8  50F3               	movf	prodl,w,c
  6427  002ACA  260E               	addwf	___wmul@product+1,f,c
  6428  002ACC  500A               	movf	___wmul@multiplier+1,w,c
  6429  002ACE  020B               	mulwf	___wmul@multiplicand,c
  6430  002AD0  50F3               	movf	prodl,w,c
  6431  002AD2  260E               	addwf	___wmul@product+1,f,c
  6432  002AD4  C00D  F009         	movff	___wmul@product,?___wmul
  6433  002AD8  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6434  002ADC  0012               	return		;funcret
  6435  002ADE                     __end_of___wmul:
  6436                           	opt callstack 0
  6437                           
  6438 ;; *************** function _strtok *****************
  6439 ;; Defined at:
  6440 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strtok.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  s               2   19[COMRAM] PTR unsigned char 
  6443 ;;		 -> NULL(0), main@input(64), 
  6444 ;;  sep             2   21[COMRAM] PTR const unsigned char 
  6445 ;;		 -> STR_47(2), STR_46(2), 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  2   19[COMRAM] PTR unsigned char 
  6450 ;; Registers used:
  6451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;Total ram usage:        4 bytes
  6462 ;; Hardware stack levels used:    1
  6463 ;; Hardware stack levels required when called:    6
  6464 ;; This function calls:
  6465 ;;		_strcspn
  6466 ;;		_strspn
  6467 ;; This function is called by:
  6468 ;;		_main
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text25
  6473  001DEE                     __ptext25:
  6474                           	opt callstack 0
  6475  001DEE                     _strtok:
  6476                           	opt callstack 24
  6477                           
  6478                           ;incstack = 0
  6479  001DEE  5014               	movf	strtok@s,w,c
  6480  001DF0  1015               	iorwf	strtok@s+1,w,c
  6481  001DF2  A4D8               	btfss	status,2,c
  6482  001DF4  D00D               	goto	l4856
  6483  001DF6  C06C  F014         	movff	strtok@p,strtok@s
  6484  001DFA  C06D  F015         	movff	strtok@p+1,strtok@s+1
  6485  001DFE  5014               	movf	strtok@s,w,c
  6486  001E00  1015               	iorwf	strtok@s+1,w,c
  6487  001E02  A4D8               	btfss	status,2,c
  6488  001E04  D005               	goto	l4856
  6489  001E06  0E00               	movlw	0
  6490  001E08  6E14               	movwf	?_strtok,c
  6491  001E0A  0E00               	movlw	0
  6492  001E0C  6E15               	movwf	?_strtok+1,c
  6493  001E0E  0012               	return	
  6494  001E10                     l4856:
  6495  001E10  C014  F00D         	movff	strtok@s,strspn@s
  6496  001E14  C015  F00E         	movff	strtok@s+1,strspn@s+1
  6497  001E18  C016  F00F         	movff	strtok@sep,strspn@c
  6498  001E1C  C017  F010         	movff	strtok@sep+1,strspn@c+1
  6499  001E20  ECCC  F012         	call	_strspn	;wreg free
  6500  001E24  500D               	movf	?_strspn,w,c
  6501  001E26  2614               	addwf	strtok@s,f,c
  6502  001E28  500E               	movf	?_strspn+1,w,c
  6503  001E2A  2215               	addwfc	strtok@s+1,f,c
  6504  001E2C  C014  FFD9         	movff	strtok@s,fsr2l
  6505  001E30  C015  FFDA         	movff	strtok@s+1,fsr2h
  6506  001E34  50DF               	movf	indf2,w,c
  6507  001E36  A4D8               	btfss	status,2,c
  6508  001E38  D00A               	goto	l4864
  6509  001E3A  0E00               	movlw	0
  6510  001E3C  0100               	movlb	0	; () banked
  6511  001E3E  6F6C               	movwf	strtok@p& (0+255),b
  6512  001E40  0E00               	movlw	0
  6513  001E42  6F6D               	movwf	(strtok@p+1)& (0+255),b
  6514  001E44  C06C  F014         	movff	strtok@p,?_strtok
  6515  001E48  C06D  F015         	movff	strtok@p+1,?_strtok+1
  6516  001E4C  0012               	return	
  6517  001E4E                     l4864:
  6518  001E4E  C014  F00D         	movff	strtok@s,strcspn@s
  6519  001E52  C015  F00E         	movff	strtok@s+1,strcspn@s+1
  6520  001E56  C016  F00F         	movff	strtok@sep,strcspn@c
  6521  001E5A  C017  F010         	movff	strtok@sep+1,strcspn@c+1
  6522  001E5E  ECF4  F012         	call	_strcspn	;wreg free
  6523  001E62  500D               	movf	?_strcspn,w,c
  6524  001E64  2414               	addwf	strtok@s,w,c
  6525  001E66  0100               	movlb	0	; () banked
  6526  001E68  6F6C               	movwf	strtok@p& (0+255),b
  6527  001E6A  500E               	movf	?_strcspn+1,w,c
  6528  001E6C  2015               	addwfc	strtok@s+1,w,c
  6529  001E6E  6F6D               	movwf	(strtok@p+1)& (0+255),b
  6530                           
  6531                           ; BSR set to: 0
  6532  001E70  C06C  FFD9         	movff	strtok@p,fsr2l
  6533  001E74  C06D  FFDA         	movff	strtok@p+1,fsr2h
  6534  001E78  50DF               	movf	indf2,w,c
  6535  001E7A  B4D8               	btfsc	status,2,c
  6536  001E7C  D009               	goto	l4872
  6537                           
  6538                           ; BSR set to: 0
  6539  001E7E  C06C  FFD9         	movff	strtok@p,fsr2l
  6540  001E82  C06D  FFDA         	movff	strtok@p+1,fsr2h
  6541  001E86  0E00               	movlw	0
  6542  001E88  6EDF               	movwf	indf2,c
  6543                           
  6544                           ; BSR set to: 0
  6545  001E8A  4B6C               	infsnz	strtok@p& (0+255),f,b
  6546  001E8C  2B6D               	incf	(strtok@p+1)& (0+255),f,b
  6547  001E8E  D004               	goto	l1530
  6548  001E90                     l4872:
  6549                           
  6550                           ; BSR set to: 0
  6551  001E90  0E00               	movlw	0
  6552  001E92  6F6C               	movwf	strtok@p& (0+255),b
  6553  001E94  0E00               	movlw	0
  6554  001E96  6F6D               	movwf	(strtok@p+1)& (0+255),b
  6555  001E98                     l1530:
  6556                           
  6557                           ; BSR set to: 0
  6558  001E98  C014  F014         	movff	strtok@s,?_strtok
  6559  001E9C  C015  F015         	movff	strtok@s+1,?_strtok+1
  6560  001EA0  0012               	return		;funcret
  6561  001EA2                     __end_of_strtok:
  6562                           	opt callstack 0
  6563                           
  6564 ;; *************** function _strspn *****************
  6565 ;; Defined at:
  6566 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strspn.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6569 ;;		 -> NULL(0), main@input(64), 
  6570 ;;  c               2   14[COMRAM] PTR const unsigned char 
  6571 ;;		 -> STR_47(2), STR_46(2), 
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;  i               2   17[COMRAM] unsigned int 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  2   12[COMRAM] unsigned int 
  6576 ;; Registers used:
  6577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;Total ram usage:        7 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    5
  6590 ;; This function calls:
  6591 ;;		_strchr
  6592 ;; This function is called by:
  6593 ;;		_strtok
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text26
  6598  002598                     __ptext26:
  6599                           	opt callstack 0
  6600  002598                     _strspn:
  6601                           	opt callstack 24
  6602                           
  6603                           ;incstack = 0
  6604  002598  0E00               	movlw	0
  6605  00259A  6E13               	movwf	strspn@i+1,c
  6606  00259C  0E00               	movlw	0
  6607  00259E  6E12               	movwf	strspn@i,c
  6608  0025A0  D004               	goto	l4708
  6609  0025A2                     l4706:
  6610  0025A2  4A0D               	infsnz	strspn@s,f,c
  6611  0025A4  2A0E               	incf	strspn@s+1,f,c
  6612  0025A6  4A12               	infsnz	strspn@i,f,c
  6613  0025A8  2A13               	incf	strspn@i+1,f,c
  6614  0025AA                     l4708:
  6615  0025AA  C00D  FFD9         	movff	strspn@s,fsr2l
  6616  0025AE  C00E  FFDA         	movff	strspn@s+1,fsr2h
  6617  0025B2  50DF               	movf	indf2,w,c
  6618  0025B4  B4D8               	btfsc	status,2,c
  6619  0025B6  D013               	goto	u4930
  6620  0025B8  C00F  F009         	movff	strspn@c,strchr@s
  6621  0025BC  C010  F00A         	movff	strspn@c+1,strchr@s+1
  6622  0025C0  C00D  FFD9         	movff	strspn@s,fsr2l
  6623  0025C4  C00E  FFDA         	movff	strspn@s+1,fsr2h
  6624  0025C8  50DF               	movf	indf2,w,c
  6625  0025CA  6E11               	movwf	??_strspn& (0+255),c
  6626  0025CC  5011               	movf	??_strspn,w,c
  6627  0025CE  6E0B               	movwf	strchr@c,c
  6628  0025D0  6A0C               	clrf	strchr@c+1,c
  6629  0025D2  ECA9  F013         	call	_strchr	;wreg free
  6630  0025D6  5009               	movf	?_strchr,w,c
  6631  0025D8  100A               	iorwf	?_strchr+1,w,c
  6632  0025DA  A4D8               	btfss	status,2,c
  6633  0025DC  D7E2               	goto	l4706
  6634  0025DE                     u4930:
  6635  0025DE  C012  F00D         	movff	strspn@i,?_strspn
  6636  0025E2  C013  F00E         	movff	strspn@i+1,?_strspn+1
  6637  0025E6  0012               	return		;funcret
  6638  0025E8                     __end_of_strspn:
  6639                           	opt callstack 0
  6640                           
  6641 ;; *************** function _strcspn *****************
  6642 ;; Defined at:
  6643 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcspn.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6646 ;;		 -> NULL(0), main@input(64), 
  6647 ;;  c               2   14[COMRAM] PTR const unsigned char 
  6648 ;;		 -> STR_47(2), STR_46(2), 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  i               2   17[COMRAM] unsigned int 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  2   12[COMRAM] unsigned int 
  6653 ;; Registers used:
  6654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;Total ram usage:        7 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    5
  6667 ;; This function calls:
  6668 ;;		_strchr
  6669 ;; This function is called by:
  6670 ;;		_strtok
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text27
  6675  0025E8                     __ptext27:
  6676                           	opt callstack 0
  6677  0025E8                     _strcspn:
  6678                           	opt callstack 24
  6679                           
  6680                           ;incstack = 0
  6681  0025E8  0E00               	movlw	0
  6682  0025EA  6E13               	movwf	strcspn@i+1,c
  6683  0025EC  0E00               	movlw	0
  6684  0025EE  6E12               	movwf	strcspn@i,c
  6685  0025F0  D004               	goto	l4716
  6686  0025F2                     l4714:
  6687  0025F2  4A0D               	infsnz	strcspn@s,f,c
  6688  0025F4  2A0E               	incf	strcspn@s+1,f,c
  6689  0025F6  4A12               	infsnz	strcspn@i,f,c
  6690  0025F8  2A13               	incf	strcspn@i+1,f,c
  6691  0025FA                     l4716:
  6692  0025FA  C00D  FFD9         	movff	strcspn@s,fsr2l
  6693  0025FE  C00E  FFDA         	movff	strcspn@s+1,fsr2h
  6694  002602  50DF               	movf	indf2,w,c
  6695  002604  B4D8               	btfsc	status,2,c
  6696  002606  D013               	goto	u4950
  6697  002608  C00F  F009         	movff	strcspn@c,strchr@s
  6698  00260C  C010  F00A         	movff	strcspn@c+1,strchr@s+1
  6699  002610  C00D  FFD9         	movff	strcspn@s,fsr2l
  6700  002614  C00E  FFDA         	movff	strcspn@s+1,fsr2h
  6701  002618  50DF               	movf	indf2,w,c
  6702  00261A  6E11               	movwf	??_strcspn& (0+255),c
  6703  00261C  5011               	movf	??_strcspn,w,c
  6704  00261E  6E0B               	movwf	strchr@c,c
  6705  002620  6A0C               	clrf	strchr@c+1,c
  6706  002622  ECA9  F013         	call	_strchr	;wreg free
  6707  002626  5009               	movf	?_strchr,w,c
  6708  002628  100A               	iorwf	?_strchr+1,w,c
  6709  00262A  B4D8               	btfsc	status,2,c
  6710  00262C  D7E2               	goto	l4714
  6711  00262E                     u4950:
  6712  00262E  C012  F00D         	movff	strcspn@i,?_strcspn
  6713  002632  C013  F00E         	movff	strcspn@i+1,?_strcspn+1
  6714  002636  0012               	return		;funcret
  6715  002638                     __end_of_strcspn:
  6716                           	opt callstack 0
  6717                           
  6718 ;; *************** function _strchr *****************
  6719 ;; Defined at:
  6720 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strchr.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6723 ;;		 -> STR_47(2), STR_46(2), 
  6724 ;;  c               2   10[COMRAM] int 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  2    8[COMRAM] PTR unsigned char 
  6729 ;; Registers used:
  6730 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;Total ram usage:        4 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:    4
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_strcspn
  6747 ;;		_strspn
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text28
  6752  002752                     __ptext28:
  6753                           	opt callstack 0
  6754  002752                     _strchr:
  6755                           	opt callstack 24
  6756                           
  6757                           ;incstack = 0
  6758  002752  C009  FFF6         	movff	strchr@s,tblptrl
  6759  002756  C00A  FFF7         	movff	strchr@s+1,tblptrh
  6760  00275A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6761  00275A  6AF8               	clrf	tblptru,c
  6762  00275C                     	endif
  6763  00275C                     	if	0	;tblptru may be non-zero
  6764  00275C                     	endif
  6765  00275C  0008               	tblrd		*
  6766  00275E  50F5               	movf	tablat,w,c
  6767  002760  180B               	xorwf	strchr@c,w,c
  6768  002762  A4D8               	btfss	status,2,c
  6769  002764  D005               	goto	l4454
  6770  002766  C009  F009         	movff	strchr@s,?_strchr
  6771  00276A  C00A  F00A         	movff	strchr@s+1,?_strchr+1
  6772  00276E  0012               	return	
  6773  002770                     l4454:
  6774  002770  C009  FFF6         	movff	strchr@s,tblptrl
  6775  002774  C00A  FFF7         	movff	strchr@s+1,tblptrh
  6776  002778  4A09               	infsnz	strchr@s,f,c
  6777  00277A  2A0A               	incf	strchr@s+1,f,c
  6778  00277C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6779  00277C  6AF8               	clrf	tblptru,c
  6780  00277E                     	endif
  6781  00277E                     	if	0	;tblptru may be non-zero
  6782  00277E                     	endif
  6783  00277E  0008               	tblrd		*
  6784  002780  50F5               	movf	tablat,w,c
  6785  002782  0900               	iorlw	0
  6786  002784  A4D8               	btfss	status,2,c
  6787  002786  D7E5               	goto	_strchr
  6788  002788  0E00               	movlw	0
  6789  00278A  6E09               	movwf	?_strchr,c
  6790  00278C  0E00               	movlw	0
  6791  00278E  6E0A               	movwf	?_strchr+1,c
  6792  002790  0012               	return		;funcret
  6793  002792                     __end_of_strchr:
  6794                           	opt callstack 0
  6795                           
  6796 ;; *************** function _logout *****************
  6797 ;; Defined at:
  6798 ;;		line 20 in file "auth.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    4
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_main
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text29
  6827  002BF0                     __ptext29:
  6828                           	opt callstack 0
  6829  002BF0                     _logout:
  6830                           	opt callstack 26
  6831                           
  6832                           ;auth.c: 21:     __authorized = 0;
  6833                           
  6834                           ;incstack = 0
  6835  002BF0  0E00               	movlw	0
  6836  002BF2  0100               	movlb	0	; () banked
  6837  002BF4  6F83               	movwf	___authorized& (0+255),b
  6838                           
  6839                           ; BSR set to: 0
  6840  002BF6  0012               	return		;funcret
  6841  002BF8                     __end_of_logout:
  6842                           	opt callstack 0
  6843                           
  6844 ;; *************** function _help_menu *****************
  6845 ;; Defined at:
  6846 ;;		line 196 in file "main.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;		None
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;		None
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;Total ram usage:        0 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:   13
  6867 ;; This function calls:
  6868 ;;		_printf
  6869 ;; This function is called by:
  6870 ;;		_main
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text30
  6875  0024F0                     __ptext30:
  6876                           	opt callstack 0
  6877  0024F0                     _help_menu:
  6878                           	opt callstack 17
  6879                           
  6880                           ;main.c: 197:     printf("These shell commands are defined internally. Type 'help' to se
      +                          e this list.\r\n");
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;incstack = 0
  6884  0024F0  0EC8               	movlw	low STR_37
  6885  0024F2  0100               	movlb	0	; () banked
  6886  0024F4  6FBC               	movwf	printf@fmt& (0+255),b
  6887  0024F6  0EFB               	movlw	high STR_37
  6888  0024F8  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  6889  0024FA  EC48  F015         	call	_printf	;wreg free
  6890                           
  6891                           ;main.c: 198:     printf("\r\n");
  6892  0024FE  0E38               	movlw	low (STR_43+18)
  6893  002500  0100               	movlb	0	; () banked
  6894  002502  6FBC               	movwf	printf@fmt& (0+255),b
  6895  002504  0EFF               	movlw	high (STR_43+18)
  6896  002506  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  6897  002508  EC48  F015         	call	_printf	;wreg free
  6898                           
  6899                           ;main.c: 199:     printf("Commands:\r\n");
  6900  00250C  0E6C               	movlw	low STR_28
  6901  00250E  0100               	movlb	0	; () banked
  6902  002510  6FBC               	movwf	printf@fmt& (0+255),b
  6903  002512  0EFF               	movlw	high STR_28
  6904  002514  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  6905  002516  EC48  F015         	call	_printf	;wreg free
  6906                           
  6907                           ;main.c: 200:     printf("  timer [flags] <command> [args]\r\n");
  6908  00251A  0E11               	movlw	low STR_26
  6909  00251C  0100               	movlb	0	; () banked
  6910  00251E  6FBC               	movwf	printf@fmt& (0+255),b
  6911  002520  0EFE               	movlw	high STR_26
  6912  002522  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  6913  002524  EC48  F015         	call	_printf	;wreg free
  6914                           
  6915                           ;main.c: 201:     printf("  temperature\r\n");
  6916  002528  0E4E               	movlw	low STR_41
  6917  00252A  0100               	movlb	0	; () banked
  6918  00252C  6FBC               	movwf	printf@fmt& (0+255),b
  6919  00252E  0EFF               	movlw	high STR_41
  6920  002530  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  6921  002532  EC48  F015         	call	_printf	;wreg free
  6922                           
  6923                           ;main.c: 202:     printf("  logout\r\n");
  6924  002536  0E84               	movlw	low STR_42
  6925  002538  0100               	movlb	0	; () banked
  6926  00253A  6FBC               	movwf	printf@fmt& (0+255),b
  6927  00253C  0EFF               	movlw	high STR_42
  6928  00253E  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  6929  002540  EC48  F015         	call	_printf	;wreg free
  6930  002544  0012               	return		;funcret
  6931  002546                     __end_of_help_menu:
  6932                           	opt callstack 0
  6933                           
  6934 ;; *************** function _authentication *****************
  6935 ;; Defined at:
  6936 ;;		line 59 in file "main.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  username       64   64[BANK1 ] unsigned char [64]
  6941 ;;  password       64    0[BANK1 ] unsigned char [64]
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      void 
  6944 ;; Registers used:
  6945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;      Locals:         0       0     128       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Totals:         0       0     128       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;Total ram usage:      128 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:   14
  6958 ;; This function calls:
  6959 ;;		_isauthorized
  6960 ;;		_login
  6961 ;;		_printf
  6962 ;;		_readline
  6963 ;; This function is called by:
  6964 ;;		_main
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           	psect	text31
  6969  001F54                     __ptext31:
  6970                           	opt callstack 0
  6971  001F54                     _authentication:
  6972                           	opt callstack 16
  6973                           
  6974                           ;main.c: 60:     char username[64] = {};
  6975                           
  6976                           ;incstack = 0
  6977  001F54  EE21  F040         	lfsr	2,authentication@username
  6978  001F58  0E3F               	movlw	63
  6979  001F5A                     u7541:
  6980  001F5A  6ADE               	clrf	postinc2,c
  6981  001F5C  06E8               	decf	wreg,f,c
  6982  001F5E  E2FD               	bc	u7541
  6983                           
  6984                           ;main.c: 61:     char password[64] = {};
  6985  001F60  EE21  F000         	lfsr	2,authentication@password
  6986  001F64  0E3F               	movlw	63
  6987  001F66                     u7551:
  6988  001F66  6ADE               	clrf	postinc2,c
  6989  001F68  06E8               	decf	wreg,f,c
  6990  001F6A  E2FD               	bc	u7551
  6991                           
  6992                           ;main.c: 63:     while (!isauthorized()) {
  6993  001F6C  D043               	goto	l6316
  6994  001F6E                     l6306:
  6995                           
  6996                           ;main.c: 64:         printf("login as: ");
  6997  001F6E  0E8F               	movlw	low STR_3
  6998  001F70  0100               	movlb	0	; () banked
  6999  001F72  6FBC               	movwf	printf@fmt& (0+255),b
  7000  001F74  0EFF               	movlw	high STR_3
  7001  001F76  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  7002  001F78  EC48  F015         	call	_printf	;wreg free
  7003                           
  7004                           ;main.c: 65:         readline(username, 0);
  7005  001F7C  0E40               	movlw	low authentication@username
  7006  001F7E  0100               	movlb	0	; () banked
  7007  001F80  6FC6               	movwf	readline@str& (0+255),b
  7008  001F82  0E01               	movlw	high authentication@username
  7009  001F84  6FC7               	movwf	(readline@str+1)& (0+255),b
  7010  001F86  0E00               	movlw	0
  7011  001F88  6FC8               	movwf	readline@password& (0+255),b
  7012  001F8A  EC59  F00A         	call	_readline	;wreg free
  7013                           
  7014                           ;main.c: 67:         printf("%s@%s's password: ", username, PORT);
  7015  001F8E  0E3B               	movlw	low STR_4
  7016  001F90  0100               	movlb	0	; () banked
  7017  001F92  6FBC               	movwf	printf@fmt& (0+255),b
  7018  001F94  0EFF               	movlw	high STR_4
  7019  001F96  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  7020  001F98  0E40               	movlw	low authentication@username
  7021  001F9A  6FBE               	movwf	(?_printf+2)& (0+255),b
  7022  001F9C  0E01               	movlw	high authentication@username
  7023  001F9E  6FBF               	movwf	(?_printf+3)& (0+255),b
  7024  001FA0  0EDF               	movlw	low STR_2
  7025  001FA2  6FC0               	movwf	(?_printf+4)& (0+255),b
  7026  001FA4  0EFF               	movlw	high STR_2
  7027  001FA6  6FC1               	movwf	(?_printf+5)& (0+255),b
  7028  001FA8  EC48  F015         	call	_printf	;wreg free
  7029                           
  7030                           ;main.c: 68:         readline(password, 1);
  7031  001FAC  0E00               	movlw	low authentication@password
  7032  001FAE  0100               	movlb	0	; () banked
  7033  001FB0  6FC6               	movwf	readline@str& (0+255),b
  7034  001FB2  0E01               	movlw	high authentication@password
  7035  001FB4  6FC7               	movwf	(readline@str+1)& (0+255),b
  7036  001FB6  0E01               	movlw	1
  7037  001FB8  6FC8               	movwf	readline@password& (0+255),b
  7038  001FBA  EC59  F00A         	call	_readline	;wreg free
  7039                           
  7040                           ;main.c: 70:         if (login(username, password)) {
  7041  001FBE  0E40               	movlw	low authentication@username
  7042  001FC0  6E12               	movwf	login@username,c
  7043  001FC2  0E01               	movlw	high authentication@username
  7044  001FC4  6E13               	movwf	login@username+1,c
  7045  001FC6  0E00               	movlw	low authentication@password
  7046  001FC8  6E14               	movwf	login@password,c
  7047  001FCA  0E01               	movlw	high authentication@password
  7048  001FCC  6E15               	movwf	login@password+1,c
  7049  001FCE  ECD7  F014         	call	_login	;wreg free
  7050  001FD2  0900               	iorlw	0
  7051  001FD4  A4D8               	btfss	status,2,c
  7052  001FD6  0012               	return	
  7053                           
  7054                           ;main.c: 73:             printf("\r\n");
  7055  001FD8  0E38               	movlw	low (STR_43+18)
  7056  001FDA  0100               	movlb	0	; () banked
  7057  001FDC  6FBC               	movwf	printf@fmt& (0+255),b
  7058  001FDE  0EFF               	movlw	high (STR_43+18)
  7059  001FE0  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  7060  001FE2  EC48  F015         	call	_printf	;wreg free
  7061                           
  7062                           ;main.c: 74:             printf("Failed to login, try again!\r\n");
  7063  001FE6  0E77               	movlw	low STR_6
  7064  001FE8  0100               	movlb	0	; () banked
  7065  001FEA  6FBC               	movwf	printf@fmt& (0+255),b
  7066  001FEC  0EFE               	movlw	high STR_6
  7067  001FEE  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  7068  001FF0  EC48  F015         	call	_printf	;wreg free
  7069  001FF4                     l6316:
  7070                           
  7071                           ;main.c: 63:     while (!isauthorized()) {
  7072  001FF4  EC06  F016         	call	_isauthorized	;wreg free
  7073  001FF8  0900               	iorlw	0
  7074  001FFA  A4D8               	btfss	status,2,c
  7075  001FFC  0012               	return	
  7076  001FFE  D7B7               	goto	l6306
  7077  002000                     __end_of_authentication:
  7078                           	opt callstack 0
  7079                           
  7080 ;; *************** function _readline *****************
  7081 ;; Defined at:
  7082 ;;		line 13 in file "utils.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  str             2   33[BANK0 ] PTR unsigned char 
  7085 ;;		 -> STR_57(1), main@input(64), authentication@password(64), authentication@username(64), 
  7086 ;;  password        1   35[BANK0 ] _Bool 
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;  i               2   44[BANK0 ] int 
  7089 ;;  input           1   46[BANK0 ] unsigned char 
  7090 ;; Return value:  Size  Location     Type
  7091 ;;                  1    wreg      void 
  7092 ;; Registers used:
  7093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7094 ;; Tracked objects:
  7095 ;;		On entry : 0/0
  7096 ;;		On exit  : 0/0
  7097 ;;		Unchanged: 0/0
  7098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7099 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;Total ram usage:       14 bytes
  7104 ;; Hardware stack levels used:    1
  7105 ;; Hardware stack levels required when called:   13
  7106 ;; This function calls:
  7107 ;;		_EUSART1_Read
  7108 ;;		_isgraph
  7109 ;;		_isprint
  7110 ;;		_printf
  7111 ;; This function is called by:
  7112 ;;		_authentication
  7113 ;;		_main
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text32
  7118  0014B2                     __ptext32:
  7119                           	opt callstack 0
  7120  0014B2                     _readline:
  7121                           	opt callstack 17
  7122                           
  7123                           ;utils.c: 14:     int i = 0;
  7124                           
  7125                           ;incstack = 0
  7126  0014B2  0E00               	movlw	0
  7127  0014B4  0100               	movlb	0	; () banked
  7128  0014B6  6FD2               	movwf	(readline@i+1)& (0+255),b
  7129  0014B8  0E00               	movlw	0
  7130  0014BA  6FD1               	movwf	readline@i& (0+255),b
  7131                           
  7132                           ;utils.c: 16:     uint8_t input = 0;
  7133  0014BC  0E00               	movlw	0
  7134  0014BE  6FD3               	movwf	readline@input& (0+255),b
  7135                           
  7136                           ;utils.c: 17:     while (input != 13) {
  7137  0014C0  D0B8               	goto	l6190
  7138  0014C2                     l6138:
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;utils.c: 18:         input = EUSART1_Read();
  7142  0014C2  EC08  F014         	call	_EUSART1_Read	;wreg free
  7143  0014C6  0100               	movlb	0	; () banked
  7144  0014C8  6FD3               	movwf	readline@input& (0+255),b
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;utils.c: 20:         if (input == 13) {
  7148  0014CA  0E0D               	movlw	13
  7149  0014CC  19D3               	xorwf	readline@input& (0+255),w,b
  7150  0014CE  A4D8               	btfss	status,2,c
  7151  0014D0  D021               	goto	l6148
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;utils.c: 21:             str[i] = '\0';
  7155  0014D2  51D1               	movf	readline@i& (0+255),w,b
  7156  0014D4  25C6               	addwf	readline@str& (0+255),w,b
  7157  0014D6  6FC9               	movwf	??_readline& (0+255),b
  7158  0014D8  51D2               	movf	(readline@i+1)& (0+255),w,b
  7159  0014DA  21C7               	addwfc	(readline@str+1)& (0+255),w,b
  7160  0014DC  6FCA               	movwf	(??_readline+1)& (0+255),b
  7161  0014DE  C0C9  FFF6         	movff	??_readline,tblptrl
  7162  0014E2  C0CA  FFF7         	movff	??_readline+1,tblptrh
  7163  0014E6  0E00               	movlw	low (__mediumconst shr (0+16))
  7164  0014E8  6EF8               	movwf	tblptru,c
  7165  0014EA  0E0F               	movlw	(high __ramtop+-1)
  7166  0014EC  64F7               	cpfsgt	tblptrh,c
  7167  0014EE  D004               	bra	u7267
  7168  0014F0  0E00               	movlw	0
  7169  0014F2  6EF5               	movwf	tablat,c
  7170  0014F4  000C               	tblwt		*
  7171  0014F6  D006               	bra	u7260
  7172  0014F8                     u7267:
  7173  0014F8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7174  0014FC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7175  001500  0E00               	movlw	0
  7176  001502  6EE7               	movwf	indf1,c
  7177  001504                     u7260:
  7178                           
  7179                           ;utils.c: 22:             printf("\r\n");
  7180  001504  0E38               	movlw	low (STR_43+18)
  7181  001506  0100               	movlb	0	; () banked
  7182  001508  6FBC               	movwf	printf@fmt& (0+255),b
  7183  00150A  0EFF               	movlw	high (STR_43+18)
  7184  00150C  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  7185  00150E  EC48  F015         	call	_printf	;wreg free
  7186  001512  0012               	return	
  7187  001514                     l6148:
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;utils.c: 26:         if(input == 3) {
  7191  001514  0E03               	movlw	3
  7192  001516  19D3               	xorwf	readline@input& (0+255),w,b
  7193  001518  A4D8               	btfss	status,2,c
  7194  00151A  D007               	goto	l6156
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;utils.c: 28:             printf("\r\n");
  7198                           
  7199                           ; BSR set to: 0
  7200  00151C  0E38               	movlw	low (STR_43+18)
  7201  00151E  6FBC               	movwf	printf@fmt& (0+255),b
  7202  001520  0EFF               	movlw	high (STR_43+18)
  7203  001522  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  7204  001524  EC48  F015         	call	_printf	;wreg free
  7205  001528  0012               	return	
  7206  00152A                     l6156:
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;utils.c: 32:         if (input == 127) {
  7210  00152A  0E7F               	movlw	127
  7211  00152C  19D3               	xorwf	readline@input& (0+255),w,b
  7212  00152E  A4D8               	btfss	status,2,c
  7213  001530  D011               	goto	l6164
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;utils.c: 33:             if (i > 0) {
  7217  001532  BFD2               	btfsc	(readline@i+1)& (0+255),7,b
  7218  001534  D07E               	goto	l6190
  7219  001536  51D2               	movf	(readline@i+1)& (0+255),w,b
  7220  001538  E103               	bnz	u7290
  7221  00153A  05D1               	decf	readline@i& (0+255),w,b
  7222  00153C  A0D8               	btfss	status,0,c
  7223  00153E  D079               	goto	l6190
  7224  001540                     u7290:
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;utils.c: 34:                 i--;
  7228  001540  07D1               	decf	readline@i& (0+255),f,b
  7229  001542  A0D8               	btfss	status,0,c
  7230  001544  07D2               	decf	(readline@i+1)& (0+255),f,b
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;utils.c: 35:                 printf("\b \b");
  7234  001546  0EEE               	movlw	low STR_59
  7235  001548  6FBC               	movwf	printf@fmt& (0+255),b
  7236  00154A  0EFF               	movlw	high STR_59
  7237  00154C  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  7238  00154E  EC48  F015         	call	_printf	;wreg free
  7239  001552  D06F               	goto	l6190
  7240  001554                     l6164:
  7241                           
  7242                           ; BSR set to: 0
  7243  001554  0EE0               	movlw	224
  7244  001556  6FC9               	movwf	??_readline& (0+255),b
  7245  001558  0EFF               	movlw	255
  7246  00155A  6FCA               	movwf	(??_readline+1)& (0+255),b
  7247  00155C  51D3               	movf	readline@input& (0+255),w,b
  7248  00155E  6FCB               	movwf	(??_readline+2)& (0+255),b
  7249  001560  6BCC               	clrf	(??_readline+3)& (0+255),b
  7250  001562  51C9               	movf	??_readline& (0+255),w,b
  7251  001564  27CB               	addwf	(??_readline+2)& (0+255),f,b
  7252  001566  51CA               	movf	(??_readline+1)& (0+255),w,b
  7253  001568  23CC               	addwfc	(??_readline+3)& (0+255),f,b
  7254  00156A  51CC               	movf	(??_readline+3)& (0+255),w,b
  7255  00156C  E106               	bnz	u7300
  7256  00156E  0E5F               	movlw	95
  7257  001570  5DCB               	subwf	(??_readline+2)& (0+255),w,b
  7258  001572  B0D8               	btfsc	status,0,c
  7259  001574  D002               	goto	u7300
  7260  001576  0E01               	movlw	1
  7261  001578  D001               	goto	u7310
  7262  00157A                     u7300:
  7263  00157A  0E00               	movlw	0
  7264  00157C                     u7310:
  7265  00157C  6FCD               	movwf	_readline$1219& (0+255),b
  7266  00157E  6BCE               	clrf	(_readline$1219+1)& (0+255),b
  7267                           
  7268                           ; BSR set to: 0
  7269  001580  51CD               	movf	_readline$1219& (0+255),w,b
  7270  001582  11CE               	iorwf	(_readline$1219+1)& (0+255),w,b
  7271  001584  A4D8               	btfss	status,2,c
  7272  001586  D01A               	goto	u7350
  7273                           
  7274                           ; BSR set to: 0
  7275  001588  0EDF               	movlw	223
  7276  00158A  6FC9               	movwf	??_readline& (0+255),b
  7277  00158C  0EFF               	movlw	255
  7278  00158E  6FCA               	movwf	(??_readline+1)& (0+255),b
  7279  001590  51D3               	movf	readline@input& (0+255),w,b
  7280  001592  6FCB               	movwf	(??_readline+2)& (0+255),b
  7281  001594  6BCC               	clrf	(??_readline+3)& (0+255),b
  7282  001596  51C9               	movf	??_readline& (0+255),w,b
  7283  001598  27CB               	addwf	(??_readline+2)& (0+255),f,b
  7284  00159A  51CA               	movf	(??_readline+1)& (0+255),w,b
  7285  00159C  23CC               	addwfc	(??_readline+3)& (0+255),f,b
  7286  00159E  51CC               	movf	(??_readline+3)& (0+255),w,b
  7287  0015A0  E106               	bnz	u7330
  7288  0015A2  0E5E               	movlw	94
  7289  0015A4  5DCB               	subwf	(??_readline+2)& (0+255),w,b
  7290  0015A6  B0D8               	btfsc	status,0,c
  7291  0015A8  D002               	goto	u7330
  7292  0015AA  0E01               	movlw	1
  7293  0015AC  D001               	goto	u7340
  7294  0015AE                     u7330:
  7295  0015AE  0E00               	movlw	0
  7296  0015B0                     u7340:
  7297  0015B0  6FCF               	movwf	_readline$1220& (0+255),b
  7298  0015B2  6BD0               	clrf	(_readline$1220+1)& (0+255),b
  7299                           
  7300                           ; BSR set to: 0
  7301  0015B4  51CF               	movf	_readline$1220& (0+255),w,b
  7302  0015B6  11D0               	iorwf	(_readline$1220+1)& (0+255),w,b
  7303  0015B8  B4D8               	btfsc	status,2,c
  7304  0015BA  D03B               	goto	l6190
  7305  0015BC                     u7350:
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;utils.c: 41:             if (password) {
  7309  0015BC  51C8               	movf	readline@password& (0+255),w,b
  7310  0015BE  B4D8               	btfsc	status,2,c
  7311  0015C0  D007               	goto	l6180
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;utils.c: 42:                 printf("*");
  7315  0015C2  0EFC               	movlw	low STR_60
  7316  0015C4  6FBC               	movwf	printf@fmt& (0+255),b
  7317  0015C6  0EFF               	movlw	high STR_60
  7318  0015C8  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  7319  0015CA  EC48  F015         	call	_printf	;wreg free
  7320                           
  7321                           ;utils.c: 43:             } else {
  7322  0015CE  D009               	goto	l6182
  7323  0015D0                     l6180:
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;utils.c: 44:                 printf("%c", (unsigned char) input);
  7327  0015D0  0EF6               	movlw	low STR_61
  7328  0015D2  6FBC               	movwf	printf@fmt& (0+255),b
  7329  0015D4  0EFF               	movlw	high STR_61
  7330  0015D6  6FBD               	movwf	(printf@fmt+1)& (0+255),b
  7331  0015D8  C0D3  F0BE         	movff	readline@input,?_printf+2
  7332  0015DC  6BBF               	clrf	(?_printf+3)& (0+255),b
  7333  0015DE  EC48  F015         	call	_printf	;wreg free
  7334  0015E2                     l6182:
  7335                           
  7336                           ;utils.c: 47:             str[i] = (unsigned char) input;
  7337  0015E2  0100               	movlb	0	; () banked
  7338  0015E4  51D1               	movf	readline@i& (0+255),w,b
  7339  0015E6  25C6               	addwf	readline@str& (0+255),w,b
  7340  0015E8  6FC9               	movwf	??_readline& (0+255),b
  7341  0015EA  51D2               	movf	(readline@i+1)& (0+255),w,b
  7342  0015EC  21C7               	addwfc	(readline@str+1)& (0+255),w,b
  7343  0015EE  6FCA               	movwf	(??_readline+1)& (0+255),b
  7344  0015F0  C0C9  FFF6         	movff	??_readline,tblptrl
  7345  0015F4  C0CA  FFF7         	movff	??_readline+1,tblptrh
  7346  0015F8  0E00               	movlw	low (__mediumconst shr (0+16))
  7347  0015FA  6EF8               	movwf	tblptru,c
  7348  0015FC  0E0F               	movlw	(high __ramtop+-1)
  7349  0015FE  64F7               	cpfsgt	tblptrh,c
  7350  001600  D004               	bra	u7377
  7351  001602  C0D3  FFF5         	movff	readline@input,tablat
  7352  001606  000C               	tblwt		*
  7353  001608  D006               	bra	u7370
  7354  00160A                     u7377:
  7355  00160A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7356  00160E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7357  001612  C0D3  FFE7         	movff	readline@input,indf1
  7358  001616                     u7370:
  7359                           
  7360                           ;utils.c: 49:             i++;
  7361  001616  0100               	movlb	0	; () banked
  7362  001618  4BD1               	infsnz	readline@i& (0+255),f,b
  7363  00161A  2BD2               	incf	(readline@i+1)& (0+255),f,b
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;utils.c: 51:             if (i >= 64) {
  7367  00161C  BFD2               	btfsc	(readline@i+1)& (0+255),7,b
  7368  00161E  D009               	goto	l6190
  7369  001620  51D2               	movf	(readline@i+1)& (0+255),w,b
  7370  001622  E104               	bnz	u7380
  7371  001624  0E40               	movlw	64
  7372  001626  5DD1               	subwf	readline@i& (0+255),w,b
  7373  001628  A0D8               	btfss	status,0,c
  7374  00162A  D003               	goto	l6190
  7375  00162C                     u7380:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;utils.c: 52:                 i--;
  7379  00162C  07D1               	decf	readline@i& (0+255),f,b
  7380  00162E  A0D8               	btfss	status,0,c
  7381  001630  07D2               	decf	(readline@i+1)& (0+255),f,b
  7382  001632                     l6190:
  7383                           
  7384                           ;utils.c: 17:     while (input != 13) {
  7385  001632  0E0D               	movlw	13
  7386  001634  0100               	movlb	0	; () banked
  7387  001636  19D3               	xorwf	readline@input& (0+255),w,b
  7388  001638  B4D8               	btfsc	status,2,c
  7389  00163A  0012               	return	
  7390  00163C  D742               	goto	l6138
  7391  00163E                     __end_of_readline:
  7392                           	opt callstack 0
  7393                           
  7394 ;; *************** function _printf *****************
  7395 ;; Defined at:
  7396 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  7399 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(3), 
  7400 ;;		 -> STR_56(3), STR_53(41), STR_45(3), STR_44(35), 
  7401 ;;		 -> STR_43(21), STR_42(11), STR_41(16), STR_40(35), 
  7402 ;;		 -> STR_39(12), STR_38(3), STR_37(77), STR_36(43), 
  7403 ;;		 -> STR_35(44), STR_34(9), STR_33(3), STR_32(32), 
  7404 ;;		 -> STR_31(30), STR_30(75), STR_29(41), STR_28(12), 
  7405 ;;		 -> STR_27(3), STR_26(35), STR_25(9), STR_24(3), 
  7406 ;;		 -> STR_23(30), STR_22(39), STR_21(14), STR_19(28), 
  7407 ;;		 -> STR_17(28), STR_15(58), STR_14(29), STR_11(43), 
  7408 ;;		 -> STR_10(3), STR_9(41), STR_8(41), STR_7(42), 
  7409 ;;		 -> STR_6(30), STR_5(3), STR_4(19), STR_3(11), 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;  ap              2   31[BANK0 ] PTR void [1]
  7412 ;;		 -> ?_printf(2), 
  7413 ;;  ret             2    0        int 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  2   23[BANK0 ] int 
  7416 ;; Registers used:
  7417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7423 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7424 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;Total ram usage:       10 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:   12
  7430 ;; This function calls:
  7431 ;;		_vfprintf
  7432 ;; This function is called by:
  7433 ;;		_authentication
  7434 ;;		_temperature_monitor
  7435 ;;		_timer_control
  7436 ;;		_help_menu
  7437 ;;		_main
  7438 ;;		_readline
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text33
  7443  002A90                     __ptext33:
  7444                           	opt callstack 0
  7445  002A90                     _printf:
  7446                           	opt callstack 16
  7447                           
  7448                           ;incstack = 0
  7449  002A90  0EBE               	movlw	low (?_printf+2)
  7450  002A92  0100               	movlb	0	; () banked
  7451  002A94  6FC4               	movwf	printf@ap& (0+255),b
  7452  002A96  0E00               	movlw	high (?_printf+2)
  7453  002A98  6FC5               	movwf	(printf@ap+1)& (0+255),b
  7454                           
  7455                           ; BSR set to: 0
  7456  002A9A  0E00               	movlw	0
  7457  002A9C  6FB6               	movwf	vfprintf@fp& (0+255),b
  7458  002A9E  0E00               	movlw	0
  7459  002AA0  6FB7               	movwf	(vfprintf@fp+1)& (0+255),b
  7460  002AA2  C0BC  F0B8         	movff	printf@fmt,vfprintf@fmt
  7461  002AA6  C0BD  F0B9         	movff	printf@fmt+1,vfprintf@fmt+1
  7462  002AAA  0EC4               	movlw	low printf@ap
  7463  002AAC  6FBA               	movwf	vfprintf@ap& (0+255),b
  7464  002AAE  0E00               	movlw	high printf@ap
  7465  002AB0  6FBB               	movwf	(vfprintf@ap+1)& (0+255),b
  7466  002AB2  EC4C  F012         	call	_vfprintf	;wreg free
  7467  002AB6  0012               	return		;funcret
  7468  002AB8                     __end_of_printf:
  7469                           	opt callstack 0
  7470                           
  7471 ;; *************** function _vfprintf *****************
  7472 ;; Defined at:
  7473 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  7476 ;;		 -> NULL(0), 
  7477 ;;  fmt             2   19[BANK0 ] PTR const unsigned char 
  7478 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(3), 
  7479 ;;		 -> STR_56(3), STR_53(41), STR_45(3), STR_44(35), 
  7480 ;;		 -> STR_43(21), STR_42(11), STR_41(16), STR_40(35), 
  7481 ;;		 -> STR_39(12), STR_38(3), STR_37(77), STR_36(43), 
  7482 ;;		 -> STR_35(44), STR_34(9), STR_33(3), STR_32(32), 
  7483 ;;		 -> STR_31(30), STR_30(75), STR_29(41), STR_28(12), 
  7484 ;;		 -> STR_27(3), STR_26(35), STR_25(9), STR_24(3), 
  7485 ;;		 -> STR_23(30), STR_22(39), STR_21(14), STR_19(28), 
  7486 ;;		 -> STR_17(28), STR_15(58), STR_14(29), STR_11(43), 
  7487 ;;		 -> STR_10(3), STR_9(41), STR_8(41), STR_7(42), 
  7488 ;;		 -> STR_6(30), STR_5(3), STR_4(19), STR_3(11), 
  7489 ;;  ap              2   21[BANK0 ] PTR PTR void 
  7490 ;;		 -> printf@ap(2), 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  cfmt            2   75[COMRAM] PTR unsigned char 
  7493 ;;		 -> STR_61(3), STR_60(2), STR_59(4), STR_58(3), 
  7494 ;;		 -> STR_56(3), STR_53(41), STR_45(3), STR_44(35), 
  7495 ;;		 -> STR_43(21), STR_42(11), STR_41(16), STR_40(35), 
  7496 ;;		 -> STR_39(12), STR_38(3), STR_37(77), STR_36(43), 
  7497 ;;		 -> STR_35(44), STR_34(9), STR_33(3), STR_32(32), 
  7498 ;;		 -> STR_31(30), STR_30(75), STR_29(41), STR_28(12), 
  7499 ;;		 -> STR_27(3), STR_26(35), STR_25(9), STR_24(3), 
  7500 ;;		 -> STR_23(30), STR_22(39), STR_21(14), STR_19(28), 
  7501 ;;		 -> STR_17(28), STR_15(58), STR_14(29), STR_11(43), 
  7502 ;;		 -> STR_10(3), STR_9(41), STR_8(41), STR_7(42), 
  7503 ;;		 -> STR_6(30), STR_5(3), STR_4(19), STR_3(11), 
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  2   17[BANK0 ] int 
  7506 ;; Registers used:
  7507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7513 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;Total ram usage:        8 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; Hardware stack levels required when called:   11
  7520 ;; This function calls:
  7521 ;;		_vfpfcnvrt
  7522 ;; This function is called by:
  7523 ;;		_printf
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text34
  7528  002498                     __ptext34:
  7529                           	opt callstack 0
  7530  002498                     _vfprintf:
  7531                           	opt callstack 16
  7532                           
  7533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7534                           
  7535                           ;incstack = 0
  7536  002498  C0B8  F04C         	movff	vfprintf@fmt,vfprintf@cfmt
  7537  00249C  C0B9  F04D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7538                           
  7539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7540  0024A0  0E00               	movlw	0
  7541  0024A2  0100               	movlb	0	; () banked
  7542  0024A4  6F6F               	movwf	(_nout+1)& (0+255),b
  7543  0024A6  0E00               	movlw	0
  7544  0024A8  6F6E               	movwf	_nout& (0+255),b
  7545                           
  7546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7547  0024AA  D013               	goto	l5650
  7548  0024AC                     l5648:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7552  0024AC  C0B6  F0A5         	movff	vfprintf@fp,vfpfcnvrt@fp
  7553  0024B0  C0B7  F0A6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7554  0024B4  0E4C               	movlw	low vfprintf@cfmt
  7555  0024B6  6FA7               	movwf	vfpfcnvrt@fmt& (0+255),b
  7556  0024B8  0E00               	movlw	high vfprintf@cfmt
  7557  0024BA  6FA8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7558  0024BC  C0BA  F0A9         	movff	vfprintf@ap,vfpfcnvrt@ap
  7559  0024C0  C0BB  F0AA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7560  0024C4  EC0D  F005         	call	_vfpfcnvrt	;wreg free
  7561  0024C8  0100               	movlb	0	; () banked
  7562  0024CA  51A5               	movf	?_vfpfcnvrt& (0+255),w,b
  7563  0024CC  276E               	addwf	_nout& (0+255),f,b
  7564  0024CE  51A6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7565  0024D0  236F               	addwfc	(_nout+1)& (0+255),f,b
  7566  0024D2                     l5650:
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7570  0024D2  C04C  FFF6         	movff	vfprintf@cfmt,tblptrl
  7571  0024D6  C04D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7572  0024DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7573  0024DA  6AF8               	clrf	tblptru,c
  7574  0024DC                     	endif
  7575  0024DC                     	if	0	;tblptru may be non-zero
  7576  0024DC                     	endif
  7577  0024DC  0008               	tblrd		*
  7578  0024DE  50F5               	movf	tablat,w,c
  7579  0024E0  0900               	iorlw	0
  7580  0024E2  A4D8               	btfss	status,2,c
  7581  0024E4  D7E3               	goto	l5648
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7585  0024E6  C06E  F0B6         	movff	_nout,?_vfprintf
  7586  0024EA  C06F  F0B7         	movff	_nout+1,?_vfprintf+1
  7587                           
  7588                           ; BSR set to: 0
  7589  0024EE  0012               	return		;funcret
  7590  0024F0                     __end_of_vfprintf:
  7591                           	opt callstack 0
  7592                           
  7593 ;; *************** function _vfpfcnvrt *****************
  7594 ;; Defined at:
  7595 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7598 ;;		 -> NULL(0), 
  7599 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  7600 ;;		 -> vfprintf@cfmt(2), 
  7601 ;;  ap              2    4[BANK0 ] PTR PTR void 
  7602 ;;		 -> printf@ap(2), 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  ll              8    6[BANK0 ] long long 
  7605 ;;  llu             8    0        unsigned long long 
  7606 ;;  f               4    0        unsigned long long 
  7607 ;;  vp              3    0        PTR void 
  7608 ;;  ct              3    0        unsigned char [3]
  7609 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  7610 ;;		 -> ?_printf(2), NULL(0), authentication@username(64), STR_2(5), 
  7611 ;;		 -> STR_1(7), 
  7612 ;;  i               2    0        int 
  7613 ;;  done            2    0        int 
  7614 ;;  c               1   16[BANK0 ] unsigned char 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  2    0[BANK0 ] int 
  7617 ;; Registers used:
  7618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7624 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7625 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7627 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;Total ram usage:       19 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:   10
  7631 ;; This function calls:
  7632 ;;		_ctoa
  7633 ;;		_dtoa
  7634 ;;		_fputc
  7635 ;;		_stoa
  7636 ;; This function is called by:
  7637 ;;		_vfprintf
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           	psect	text35
  7642  000A1A                     __ptext35:
  7643                           	opt callstack 0
  7644  000A1A                     _vfpfcnvrt:
  7645                           	opt callstack 16
  7646                           
  7647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;incstack = 0
  7651  000A1A  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7652  000A1E  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7653  000A22  CFDE FFF6          	movff	postinc2,tblptrl
  7654  000A26  CFDD FFF7          	movff	postdec2,tblptrh
  7655  000A2A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7656  000A2A  6AF8               	clrf	tblptru,c
  7657  000A2C                     	endif
  7658  000A2C                     	if	0	;tblptru may be non-zero
  7659  000A2C                     	endif
  7660  000A2C  0008               	tblrd		*
  7661  000A2E  50F5               	movf	tablat,w,c
  7662  000A30  0A25               	xorlw	37
  7663  000A32  A4D8               	btfss	status,2,c
  7664  000A34  D10A               	goto	l5380
  7665                           
  7666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7667  000A36  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7668  000A3A  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7669  000A3E  2ADE               	incf	postinc2,f,c
  7670  000A40  0E00               	movlw	0
  7671  000A42  22DD               	addwfc	postdec2,f,c
  7672                           
  7673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7674  000A44  0E00               	movlw	0
  7675  000A46  0100               	movlb	0	; () banked
  7676  000A48  6F71               	movwf	(_width+1)& (0+255),b
  7677  000A4A  0E00               	movlw	0
  7678  000A4C  6F70               	movwf	_width& (0+255),b
  7679  000A4E  C070  F04E         	movff	_width,_flags
  7680  000A52  C071  F04F         	movff	_width+1,_flags+1
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7684  000A56  6972               	setf	_prec& (0+255),b
  7685  000A58  6973               	setf	(_prec+1)& (0+255),b
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7689  000A5A  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7690  000A5E  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7691  000A62  CFDE FFF6          	movff	postinc2,tblptrl
  7692  000A66  CFDD FFF7          	movff	postdec2,tblptrh
  7693  000A6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7694  000A6A  6AF8               	clrf	tblptru,c
  7695  000A6C                     	endif
  7696  000A6C                     	if	0	;tblptru may be non-zero
  7697  000A6C                     	endif
  7698  000A6C  0008               	tblrd		*
  7699  000A6E  50F5               	movf	tablat,w,c
  7700  000A70  0A63               	xorlw	99
  7701  000A72  A4D8               	btfss	status,2,c
  7702  000A74  D026               	goto	l5346
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7706  000A76  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7707  000A7A  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7708  000A7E  2ADE               	incf	postinc2,f,c
  7709  000A80  0E00               	movlw	0
  7710  000A82  22DD               	addwfc	postdec2,f,c
  7711                           
  7712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7713  000A84  C0A9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7714  000A88  C0AA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7715  000A8C  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  7716  000A90  0E02               	movlw	2
  7717  000A92  26DE               	addwf	postinc2,f,c
  7718  000A94  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  7719  000A98  0E00               	movlw	0
  7720  000A9A  22DD               	addwfc	postdec2,f,c
  7721  000A9C  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7722  000AA0  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7723  000AA4  50DF               	movf	indf2,w,c
  7724  000AA6  6FB5               	movwf	vfpfcnvrt@c& (0+255),b
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7728  000AA8  C0A5  F026         	movff	vfpfcnvrt@fp,ctoa@fp
  7729  000AAC  C0A6  F027         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  7730  000AB0  C0B5  F028         	movff	vfpfcnvrt@c,ctoa@c
  7731  000AB4  EC1C  F013         	call	_ctoa	;wreg free
  7732  000AB8  C026  F0A5         	movff	?_ctoa,?_vfpfcnvrt
  7733  000ABC  C027  F0A6         	movff	?_ctoa+1,?_vfpfcnvrt+1
  7734  000AC0  0012               	return	
  7735  000AC2                     l5346:
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7739  000AC2  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7740  000AC6  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7741  000ACA  CFDE FFF6          	movff	postinc2,tblptrl
  7742  000ACE  CFDD FFF7          	movff	postdec2,tblptrh
  7743  000AD2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7744  000AD2  6AF8               	clrf	tblptru,c
  7745  000AD4                     	endif
  7746  000AD4                     	if	0	;tblptru may be non-zero
  7747  000AD4                     	endif
  7748  000AD4  0008               	tblrd		*
  7749  000AD6  50F5               	movf	tablat,w,c
  7750  000AD8  0A64               	xorlw	100
  7751  000ADA  B4D8               	btfsc	status,2,c
  7752  000ADC  D00E               	goto	u6020
  7753                           
  7754                           ; BSR set to: 0
  7755  000ADE  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7756  000AE2  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7757  000AE6  CFDE FFF6          	movff	postinc2,tblptrl
  7758  000AEA  CFDD FFF7          	movff	postdec2,tblptrh
  7759  000AEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7760  000AEE  6AF8               	clrf	tblptru,c
  7761  000AF0                     	endif
  7762  000AF0                     	if	0	;tblptru may be non-zero
  7763  000AF0                     	endif
  7764  000AF0  0008               	tblrd		*
  7765  000AF2  50F5               	movf	tablat,w,c
  7766  000AF4  0A69               	xorlw	105
  7767  000AF6  A4D8               	btfss	status,2,c
  7768  000AF8  D03F               	goto	l5356
  7769  000AFA                     u6020:
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  7773  000AFA  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7774  000AFE  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7775  000B02  2ADE               	incf	postinc2,f,c
  7776  000B04  0E00               	movlw	0
  7777  000B06  22DD               	addwfc	postdec2,f,c
  7778                           
  7779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7780  000B08  C0A9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7781  000B0C  C0AA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7782  000B10  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  7783  000B14  0E02               	movlw	2
  7784  000B16  26DE               	addwf	postinc2,f,c
  7785  000B18  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  7786  000B1C  0E00               	movlw	0
  7787  000B1E  22DD               	addwfc	postdec2,f,c
  7788  000B20  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7789  000B24  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7790  000B28  CFDE F0AB          	movff	postinc2,vfpfcnvrt@ll
  7791  000B2C  CFDD F0AC          	movff	postdec2,vfpfcnvrt@ll+1
  7792  000B30  0E00               	movlw	0
  7793  000B32  BFAC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7794  000B34  0EFF               	movlw	-1
  7795  000B36  6FAD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7796  000B38  6FAE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7797  000B3A  6FAF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7798  000B3C  6FB0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7799  000B3E  6FB1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7800  000B40  6FB2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  7804  000B42  C0A5  F026         	movff	vfpfcnvrt@fp,dtoa@fp
  7805  000B46  C0A6  F027         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7806  000B4A  C0AB  F028         	movff	vfpfcnvrt@ll,dtoa@d
  7807  000B4E  C0AC  F029         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7808  000B52  C0AD  F02A         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7809  000B56  C0AE  F02B         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7810  000B5A  C0AF  F02C         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7811  000B5E  C0B0  F02D         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7812  000B62  C0B1  F02E         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7813  000B66  C0B2  F02F         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7814  000B6A  EC6E  F007         	call	_dtoa	;wreg free
  7815  000B6E  C026  F0A5         	movff	?_dtoa,?_vfpfcnvrt
  7816  000B72  C027  F0A6         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7817  000B76  0012               	return	
  7818  000B78                     l5356:
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  7822  000B78  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7823  000B7C  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7824  000B80  CFDE FFF6          	movff	postinc2,tblptrl
  7825  000B84  CFDD FFF7          	movff	postdec2,tblptrh
  7826  000B88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7827  000B88  6AF8               	clrf	tblptru,c
  7828  000B8A                     	endif
  7829  000B8A                     	if	0	;tblptru may be non-zero
  7830  000B8A                     	endif
  7831  000B8A  0008               	tblrd		*
  7832  000B8C  50F5               	movf	tablat,w,c
  7833  000B8E  0A73               	xorlw	115
  7834  000B90  A4D8               	btfss	status,2,c
  7835  000B92  D02A               	goto	l5364
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  7839  000B94  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7840  000B98  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7841  000B9C  2ADE               	incf	postinc2,f,c
  7842  000B9E  0E00               	movlw	0
  7843  000BA0  22DD               	addwfc	postdec2,f,c
  7844                           
  7845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  7846  000BA2  C0A9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7847  000BA6  C0AA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7848  000BAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  7849  000BAE  0E02               	movlw	2
  7850  000BB0  26DE               	addwf	postinc2,f,c
  7851  000BB2  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  7852  000BB6  0E00               	movlw	0
  7853  000BB8  22DD               	addwfc	postdec2,f,c
  7854  000BBA  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7855  000BBE  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7856  000BC2  CFDE F0B3          	movff	postinc2,vfpfcnvrt@cp
  7857  000BC6  CFDD F0B4          	movff	postdec2,vfpfcnvrt@cp+1
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  7861  000BCA  C0A5  F014         	movff	vfpfcnvrt@fp,stoa@fp
  7862  000BCE  C0A6  F015         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7863  000BD2  C0B3  F016         	movff	vfpfcnvrt@cp,stoa@s
  7864  000BD6  C0B4  F017         	movff	vfpfcnvrt@cp+1,stoa@s+1
  7865  000BDA  EC63  F00C         	call	_stoa	;wreg free
  7866  000BDE  C014  F0A5         	movff	?_stoa,?_vfpfcnvrt
  7867  000BE2  C015  F0A6         	movff	?_stoa+1,?_vfpfcnvrt+1
  7868  000BE6  0012               	return	
  7869  000BE8                     l5364:
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  7873  000BE8  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7874  000BEC  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7875  000BF0  CFDE FFF6          	movff	postinc2,tblptrl
  7876  000BF4  CFDD FFF7          	movff	postdec2,tblptrh
  7877  000BF8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7878  000BF8  6AF8               	clrf	tblptru,c
  7879  000BFA                     	endif
  7880  000BFA                     	if	0	;tblptru may be non-zero
  7881  000BFA                     	endif
  7882  000BFA  0008               	tblrd		*
  7883  000BFC  50F5               	movf	tablat,w,c
  7884  000BFE  0A25               	xorlw	37
  7885  000C00  A4D8               	btfss	status,2,c
  7886  000C02  D017               	goto	l5374
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  7890  000C04  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7891  000C08  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7892  000C0C  2ADE               	incf	postinc2,f,c
  7893  000C0E  0E00               	movlw	0
  7894  000C10  22DD               	addwfc	postdec2,f,c
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  7898  000C12  0E00               	movlw	0
  7899  000C14  6E0C               	movwf	fputc@c+1,c
  7900  000C16  0E25               	movlw	37
  7901  000C18  6E0B               	movwf	fputc@c,c
  7902  000C1A  C0A5  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  7903  000C1E  C0A6  F00E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7904  000C22  ECE7  F011         	call	_fputc	;wreg free
  7905  000C26                     l5370:
  7906                           
  7907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  7908  000C26  0E00               	movlw	0
  7909  000C28  0100               	movlb	0	; () banked
  7910  000C2A  6FA6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7911  000C2C  0E01               	movlw	1
  7912  000C2E  6FA5               	movwf	?_vfpfcnvrt& (0+255),b
  7913  000C30  0012               	return	
  7914  000C32                     l5374:
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  7918  000C32  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7919  000C36  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7920  000C3A  2ADE               	incf	postinc2,f,c
  7921  000C3C  0E00               	movlw	0
  7922  000C3E  22DD               	addwfc	postdec2,f,c
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  7926  000C40  0E00               	movlw	0
  7927  000C42  6FA6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7928  000C44  0E00               	movlw	0
  7929  000C46  6FA5               	movwf	?_vfpfcnvrt& (0+255),b
  7930  000C48  0012               	return	
  7931  000C4A                     l5380:
  7932                           
  7933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  7934  000C4A  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7935  000C4E  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7936  000C52  CFDE FFF6          	movff	postinc2,tblptrl
  7937  000C56  CFDD FFF7          	movff	postdec2,tblptrh
  7938  000C5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7939  000C5A  6AF8               	clrf	tblptru,c
  7940  000C5C                     	endif
  7941  000C5C                     	if	0	;tblptru may be non-zero
  7942  000C5C                     	endif
  7943  000C5C  0008               	tblrd		*
  7944  000C5E  50F5               	movf	tablat,w,c
  7945  000C60  6E0B               	movwf	fputc@c,c
  7946  000C62  6A0C               	clrf	fputc@c+1,c
  7947  000C64  C0A5  F00D         	movff	vfpfcnvrt@fp,fputc@fp
  7948  000C68  C0A6  F00E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7949  000C6C  ECE7  F011         	call	_fputc	;wreg free
  7950                           
  7951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  7952  000C70  C0A7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7953  000C74  C0A8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7954  000C78  2ADE               	incf	postinc2,f,c
  7955  000C7A  0E00               	movlw	0
  7956  000C7C  22DD               	addwfc	postdec2,f,c
  7957  000C7E  D7D3               	goto	l5370
  7958  000C80                     __end_of_vfpfcnvrt:
  7959                           	opt callstack 0
  7960                           
  7961 ;; *************** function _stoa *****************
  7962 ;; Defined at:
  7963 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  7966 ;;		 -> NULL(0), 
  7967 ;;  s               2   21[COMRAM] PTR unsigned char 
  7968 ;;		 -> ?_printf(2), NULL(0), authentication@username(64), STR_2(5), 
  7969 ;;		 -> STR_1(7), 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  nuls            7   24[COMRAM] unsigned char [7]
  7972 ;;  l               2   39[COMRAM] int 
  7973 ;;  p               2   37[COMRAM] int 
  7974 ;;  cp              2   35[COMRAM] PTR unsigned char 
  7975 ;;		 -> ?_printf(2), stoa@nuls(7), NULL(0), authentication@username(64), 
  7976 ;;		 -> STR_2(5), STR_1(7), 
  7977 ;;  w               2   33[COMRAM] int 
  7978 ;;  i               2   31[COMRAM] int 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  2   19[COMRAM] int 
  7981 ;; Registers used:
  7982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7992 ;;Total ram usage:       22 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:    7
  7995 ;; This function calls:
  7996 ;;		_fputc
  7997 ;;		_strlen
  7998 ;; This function is called by:
  7999 ;;		_vfpfcnvrt
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text36
  8004  0018C6                     __ptext36:
  8005                           	opt callstack 0
  8006  0018C6                     _stoa:
  8007                           	opt callstack 18
  8008                           
  8009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8010                           
  8011                           ;incstack = 0
  8012  0018C6  EE20  F0D4         	lfsr	2,stoa@F1144
  8013  0018CA  EE10  F019         	lfsr	1,stoa@nuls
  8014  0018CE  0E06               	movlw	6
  8015  0018D0                     u5891:
  8016  0018D0  CFDB FFE3          	movff	plusw2,plusw1
  8017  0018D4  06E8               	decf	wreg,f,c
  8018  0018D6  E2FC               	bc	u5891
  8019                           
  8020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8021  0018D8  C016  F024         	movff	stoa@s,stoa@cp
  8022  0018DC  C017  F025         	movff	stoa@s+1,stoa@cp+1
  8023                           
  8024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8025  0018E0  5024               	movf	stoa@cp,w,c
  8026  0018E2  1025               	iorwf	stoa@cp+1,w,c
  8027  0018E4  A4D8               	btfss	status,2,c
  8028  0018E6  D004               	goto	l5296
  8029                           
  8030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8031  0018E8  0E19               	movlw	low stoa@nuls
  8032  0018EA  6E24               	movwf	stoa@cp,c
  8033  0018EC  0E00               	movlw	high stoa@nuls
  8034  0018EE  6E25               	movwf	stoa@cp+1,c
  8035  0018F0                     l5296:
  8036                           
  8037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8038  0018F0  C024  F009         	movff	stoa@cp,strlen@s
  8039  0018F4  C025  F00A         	movff	stoa@cp+1,strlen@s+1
  8040  0018F8  EC66  F013         	call	_strlen	;wreg free
  8041  0018FC  C009  F028         	movff	?_strlen,stoa@l
  8042  001900  C00A  F029         	movff	?_strlen+1,stoa@l+1
  8043                           
  8044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8045  001904  C072  F026         	movff	_prec,stoa@p
  8046  001908  C073  F027         	movff	_prec+1,stoa@p+1
  8047                           
  8048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8049  00190C  BE27               	btfsc	stoa@p+1,7,c
  8050  00190E  D00E               	goto	l693
  8051  001910  5028               	movf	stoa@l,w,c
  8052  001912  5C26               	subwf	stoa@p,w,c
  8053  001914  5027               	movf	stoa@p+1,w,c
  8054  001916  0A80               	xorlw	128
  8055  001918  6E18               	movwf	??_stoa& (0+255),c
  8056  00191A  5029               	movf	stoa@l+1,w,c
  8057  00191C  0A80               	xorlw	128
  8058  00191E  5818               	subwfb	??_stoa& (0+255),w,c
  8059  001920  B0D8               	btfsc	status,0,c
  8060  001922  D004               	goto	l693
  8061  001924  C026  F028         	movff	stoa@p,stoa@l
  8062  001928  C027  F029         	movff	stoa@p+1,stoa@l+1
  8063  00192C                     l693:
  8064                           
  8065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8066  00192C  C028  F026         	movff	stoa@l,stoa@p
  8067  001930  C029  F027         	movff	stoa@l+1,stoa@p+1
  8068                           
  8069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8070  001934  C070  F022         	movff	_width,stoa@w
  8071  001938  C071  F023         	movff	_width+1,stoa@w+1
  8072                           
  8073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8074  00193C  A04E               	btfss	_flags,0,c
  8075  00193E  D00D               	goto	l5310
  8076  001940  D016               	goto	u5940
  8077  001942                     l5306:
  8078                           
  8079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8080  001942  0E00               	movlw	0
  8081  001944  6E0C               	movwf	fputc@c+1,c
  8082  001946  0E20               	movlw	32
  8083  001948  6E0B               	movwf	fputc@c,c
  8084  00194A  C014  F00D         	movff	stoa@fp,fputc@fp
  8085  00194E  C015  F00E         	movff	stoa@fp+1,fputc@fp+1
  8086  001952  ECE7  F011         	call	_fputc	;wreg free
  8087                           
  8088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8089  001956  4A28               	infsnz	stoa@l,f,c
  8090  001958  2A29               	incf	stoa@l+1,f,c
  8091  00195A                     l5310:
  8092                           
  8093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8094  00195A  5022               	movf	stoa@w,w,c
  8095  00195C  5C28               	subwf	stoa@l,w,c
  8096  00195E  5029               	movf	stoa@l+1,w,c
  8097  001960  0A80               	xorlw	128
  8098  001962  6E18               	movwf	??_stoa& (0+255),c
  8099  001964  5023               	movf	stoa@w+1,w,c
  8100  001966  0A80               	xorlw	128
  8101  001968  5818               	subwfb	??_stoa& (0+255),w,c
  8102  00196A  A0D8               	btfss	status,0,c
  8103  00196C  D7EA               	goto	l5306
  8104  00196E                     u5940:
  8105                           
  8106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8107  00196E  0E00               	movlw	0
  8108  001970  6E21               	movwf	stoa@i+1,c
  8109  001972  0E00               	movlw	0
  8110  001974  6E20               	movwf	stoa@i,c
  8111                           
  8112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8113  001976  D01F               	goto	l5320
  8114  001978                     l5314:
  8115                           
  8116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8117  001978  C024  FFF6         	movff	stoa@cp,tblptrl
  8118  00197C  C025  FFF7         	movff	stoa@cp+1,tblptrh
  8119  001980  0E00               	movlw	low (__mediumconst shr (0+16))
  8120  001982  6EF8               	movwf	tblptru,c
  8121  001984  0E0F               	movlw	(high __ramtop+-1)
  8122  001986  64F7               	cpfsgt	tblptrh,c
  8123  001988  D003               	bra	u5957
  8124  00198A  0008               	tblrd		*
  8125  00198C  50F5               	movf	tablat,w,c
  8126  00198E  D005               	bra	u5950
  8127  001990                     u5957:
  8128  001990  CFF6 FFE1          	movff	tblptrl,fsr1l
  8129  001994  CFF7 FFE2          	movff	tblptrh,fsr1h
  8130  001998  50E7               	movf	indf1,w,c
  8131  00199A                     u5950:
  8132  00199A  6E18               	movwf	??_stoa& (0+255),c
  8133  00199C  5018               	movf	??_stoa,w,c
  8134  00199E  6E0B               	movwf	fputc@c,c
  8135  0019A0  6A0C               	clrf	fputc@c+1,c
  8136  0019A2  C014  F00D         	movff	stoa@fp,fputc@fp
  8137  0019A6  C015  F00E         	movff	stoa@fp+1,fputc@fp+1
  8138  0019AA  ECE7  F011         	call	_fputc	;wreg free
  8139                           
  8140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8141  0019AE  4A24               	infsnz	stoa@cp,f,c
  8142  0019B0  2A25               	incf	stoa@cp+1,f,c
  8143                           
  8144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8145  0019B2  4A20               	infsnz	stoa@i,f,c
  8146  0019B4  2A21               	incf	stoa@i+1,f,c
  8147  0019B6                     l5320:
  8148                           
  8149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8150  0019B6  5026               	movf	stoa@p,w,c
  8151  0019B8  5C20               	subwf	stoa@i,w,c
  8152  0019BA  5021               	movf	stoa@i+1,w,c
  8153  0019BC  0A80               	xorlw	128
  8154  0019BE  6E18               	movwf	??_stoa& (0+255),c
  8155  0019C0  5027               	movf	stoa@p+1,w,c
  8156  0019C2  0A80               	xorlw	128
  8157  0019C4  5818               	subwfb	??_stoa& (0+255),w,c
  8158  0019C6  A0D8               	btfss	status,0,c
  8159  0019C8  D7D7               	goto	l5314
  8160                           
  8161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8162  0019CA  B04E               	btfsc	_flags,0,c
  8163  0019CC  D00D               	goto	l5328
  8164  0019CE  D016               	goto	u5980
  8165  0019D0                     l5324:
  8166                           
  8167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8168  0019D0  0E00               	movlw	0
  8169  0019D2  6E0C               	movwf	fputc@c+1,c
  8170  0019D4  0E20               	movlw	32
  8171  0019D6  6E0B               	movwf	fputc@c,c
  8172  0019D8  C014  F00D         	movff	stoa@fp,fputc@fp
  8173  0019DC  C015  F00E         	movff	stoa@fp+1,fputc@fp+1
  8174  0019E0  ECE7  F011         	call	_fputc	;wreg free
  8175                           
  8176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8177  0019E4  4A28               	infsnz	stoa@l,f,c
  8178  0019E6  2A29               	incf	stoa@l+1,f,c
  8179  0019E8                     l5328:
  8180                           
  8181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8182  0019E8  5022               	movf	stoa@w,w,c
  8183  0019EA  5C28               	subwf	stoa@l,w,c
  8184  0019EC  5029               	movf	stoa@l+1,w,c
  8185  0019EE  0A80               	xorlw	128
  8186  0019F0  6E18               	movwf	??_stoa& (0+255),c
  8187  0019F2  5023               	movf	stoa@w+1,w,c
  8188  0019F4  0A80               	xorlw	128
  8189  0019F6  5818               	subwfb	??_stoa& (0+255),w,c
  8190  0019F8  A0D8               	btfss	status,0,c
  8191  0019FA  D7EA               	goto	l5324
  8192  0019FC                     u5980:
  8193                           
  8194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8195                           
  8196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  8197  0019FC  C028  F014         	movff	stoa@l,?_stoa
  8198  001A00  C029  F015         	movff	stoa@l+1,?_stoa+1
  8199  001A04  0012               	return		;funcret
  8200  001A06                     __end_of_stoa:
  8201                           	opt callstack 0
  8202                           
  8203 ;; *************** function _dtoa *****************
  8204 ;; Defined at:
  8205 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  8208 ;;		 -> NULL(0), 
  8209 ;;  d               8   39[COMRAM] long long 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  n               8   63[COMRAM] long long 
  8212 ;;  i               2   71[COMRAM] int 
  8213 ;;  s               2   61[COMRAM] int 
  8214 ;;  w               2   59[COMRAM] int 
  8215 ;;  p               2   57[COMRAM] int 
  8216 ;; Return value:  Size  Location     Type
  8217 ;;                  2   37[COMRAM] int 
  8218 ;; Registers used:
  8219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8220 ;; Tracked objects:
  8221 ;;		On entry : 0/0
  8222 ;;		On exit  : 0/0
  8223 ;;		Unchanged: 0/0
  8224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8225 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8226 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8227 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8228 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8229 ;;Total ram usage:       36 bytes
  8230 ;; Hardware stack levels used:    1
  8231 ;; Hardware stack levels required when called:    9
  8232 ;; This function calls:
  8233 ;;		___aodiv
  8234 ;;		___aomod
  8235 ;;		_abs
  8236 ;;		_pad
  8237 ;; This function is called by:
  8238 ;;		_vfpfcnvrt
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text37
  8243  000EDC                     __ptext37:
  8244                           	opt callstack 0
  8245  000EDC                     _dtoa:
  8246                           	opt callstack 16
  8247                           
  8248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8249                           
  8250                           ;incstack = 0
  8251  000EDC  C028  F040         	movff	dtoa@d,dtoa@n
  8252  000EE0  C029  F041         	movff	dtoa@d+1,dtoa@n+1
  8253  000EE4  C02A  F042         	movff	dtoa@d+2,dtoa@n+2
  8254  000EE8  C02B  F043         	movff	dtoa@d+3,dtoa@n+3
  8255  000EEC  C02C  F044         	movff	dtoa@d+4,dtoa@n+4
  8256  000EF0  C02D  F045         	movff	dtoa@d+5,dtoa@n+5
  8257  000EF4  C02E  F046         	movff	dtoa@d+6,dtoa@n+6
  8258  000EF8  C02F  F047         	movff	dtoa@d+7,dtoa@n+7
  8259                           
  8260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8261  000EFC  AE47               	btfss	dtoa@n+7,7,c
  8262  000EFE  D002               	goto	u5740
  8263  000F00  0E01               	movlw	1
  8264  000F02  D001               	goto	u5750
  8265  000F04                     u5740:
  8266  000F04  0E00               	movlw	0
  8267  000F06                     u5750:
  8268  000F06  6E3E               	movwf	dtoa@s,c
  8269  000F08  6A3F               	clrf	dtoa@s+1,c
  8270                           
  8271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8272  000F0A  503E               	movf	dtoa@s,w,c
  8273  000F0C  103F               	iorwf	dtoa@s+1,w,c
  8274  000F0E  B4D8               	btfsc	status,2,c
  8275  000F10  D010               	goto	l5232
  8276                           
  8277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8278  000F12  1E47               	comf	dtoa@n+7,f,c
  8279  000F14  1E46               	comf	dtoa@n+6,f,c
  8280  000F16  1E45               	comf	dtoa@n+5,f,c
  8281  000F18  1E44               	comf	dtoa@n+4,f,c
  8282  000F1A  1E43               	comf	dtoa@n+3,f,c
  8283  000F1C  1E42               	comf	dtoa@n+2,f,c
  8284  000F1E  1E41               	comf	dtoa@n+1,f,c
  8285  000F20  6C40               	negf	dtoa@n,c
  8286  000F22  0E00               	movlw	0
  8287  000F24  2241               	addwfc	dtoa@n+1,f,c
  8288  000F26  2242               	addwfc	dtoa@n+2,f,c
  8289  000F28  2243               	addwfc	dtoa@n+3,f,c
  8290  000F2A  2244               	addwfc	dtoa@n+4,f,c
  8291  000F2C  2245               	addwfc	dtoa@n+5,f,c
  8292  000F2E  2246               	addwfc	dtoa@n+6,f,c
  8293  000F30  2247               	addwfc	dtoa@n+7,f,c
  8294  000F32                     l5232:
  8295                           
  8296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8297  000F32  0100               	movlb	0	; () banked
  8298  000F34  AF73               	btfss	(_prec+1)& (0+255),7,b
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8302  000F36  924E               	bcf	_flags,1,c
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8306  000F38  BF73               	btfsc	(_prec+1)& (0+255),7,b
  8307  000F3A  D005               	goto	u5780
  8308  000F3C  5173               	movf	(_prec+1)& (0+255),w,b
  8309  000F3E  E108               	bnz	l664
  8310  000F40  0572               	decf	_prec& (0+255),w,b
  8311  000F42  B0D8               	btfsc	status,0,c
  8312  000F44  D005               	goto	l664
  8313  000F46                     u5780:
  8314                           
  8315                           ; BSR set to: 0
  8316  000F46  0E00               	movlw	0
  8317  000F48  6E3B               	movwf	dtoa@p+1,c
  8318  000F4A  0E01               	movlw	1
  8319  000F4C  6E3A               	movwf	dtoa@p,c
  8320  000F4E  D004               	goto	l666
  8321  000F50                     l664:
  8322                           
  8323                           ; BSR set to: 0
  8324  000F50  C072  F03A         	movff	_prec,dtoa@p
  8325  000F54  C073  F03B         	movff	_prec+1,dtoa@p+1
  8326  000F58                     l666:
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8330  000F58  C070  F03C         	movff	_width,dtoa@w
  8331  000F5C  C071  F03D         	movff	_width+1,dtoa@w+1
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8335  000F60  503E               	movf	dtoa@s,w,c
  8336  000F62  103F               	iorwf	dtoa@s+1,w,c
  8337  000F64  A4D8               	btfss	status,2,c
  8338  000F66  D002               	goto	u5800
  8339                           
  8340                           ; BSR set to: 0
  8341  000F68  A44E               	btfss	_flags,2,c
  8342  000F6A  D003               	goto	l5246
  8343  000F6C                     u5800:
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8347  000F6C  063C               	decf	dtoa@w,f,c
  8348  000F6E  A0D8               	btfss	status,0,c
  8349  000F70  063D               	decf	dtoa@w+1,f,c
  8350  000F72                     l5246:
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8354  000F72  0E00               	movlw	0
  8355  000F74  6E49               	movwf	dtoa@i+1,c
  8356  000F76  0E1F               	movlw	31
  8357  000F78  6E48               	movwf	dtoa@i,c
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8361  000F7A  0E00               	movlw	0
  8362  000F7C  6FA4               	movwf	(_dbuf+31)& (0+255),b
  8363                           
  8364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8365  000F7E  D07C               	goto	l5260
  8366  000F80                     l5250:
  8367                           
  8368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8369  000F80  0648               	decf	dtoa@i,f,c
  8370  000F82  A0D8               	btfss	status,0,c
  8371  000F84  0649               	decf	dtoa@i+1,f,c
  8372                           
  8373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8374  000F86  0E85               	movlw	low _dbuf
  8375  000F88  2448               	addwf	dtoa@i,w,c
  8376  000F8A  6ED9               	movwf	fsr2l,c
  8377  000F8C  0E00               	movlw	high _dbuf
  8378  000F8E  2049               	addwfc	dtoa@i+1,w,c
  8379  000F90  6EDA               	movwf	fsr2h,c
  8380  000F92  C040  F009         	movff	dtoa@n,___aomod@dividend
  8381  000F96  C041  F00A         	movff	dtoa@n+1,___aomod@dividend+1
  8382  000F9A  C042  F00B         	movff	dtoa@n+2,___aomod@dividend+2
  8383  000F9E  C043  F00C         	movff	dtoa@n+3,___aomod@dividend+3
  8384  000FA2  C044  F00D         	movff	dtoa@n+4,___aomod@dividend+4
  8385  000FA6  C045  F00E         	movff	dtoa@n+5,___aomod@dividend+5
  8386  000FAA  C046  F00F         	movff	dtoa@n+6,___aomod@dividend+6
  8387  000FAE  C047  F010         	movff	dtoa@n+7,___aomod@dividend+7
  8388  000FB2  0E0A               	movlw	10
  8389  000FB4  6E11               	movwf	___aomod@divisor,c
  8390  000FB6  0E00               	movlw	0
  8391  000FB8  6E12               	movwf	___aomod@divisor+1,c
  8392  000FBA  0E00               	movlw	0
  8393  000FBC  6E13               	movwf	___aomod@divisor+2,c
  8394  000FBE  0E00               	movlw	0
  8395  000FC0  6E14               	movwf	___aomod@divisor+3,c
  8396  000FC2  0E00               	movlw	0
  8397  000FC4  6E15               	movwf	___aomod@divisor+4,c
  8398  000FC6  0E00               	movlw	0
  8399  000FC8  6E16               	movwf	___aomod@divisor+5,c
  8400  000FCA  0E00               	movlw	0
  8401  000FCC  6E17               	movwf	___aomod@divisor+6,c
  8402  000FCE  0E00               	movlw	0
  8403  000FD0  6E18               	movwf	___aomod@divisor+7,c
  8404  000FD2  ECA0  F00D         	call	___aomod	;wreg free
  8405  000FD6  C009  F030         	movff	?___aomod,??_dtoa
  8406  000FDA  C00A  F031         	movff	?___aomod+1,??_dtoa+1
  8407  000FDE  C00B  F032         	movff	?___aomod+2,??_dtoa+2
  8408  000FE2  C00C  F033         	movff	?___aomod+3,??_dtoa+3
  8409  000FE6  C00D  F034         	movff	?___aomod+4,??_dtoa+4
  8410  000FEA  C00E  F035         	movff	?___aomod+5,??_dtoa+5
  8411  000FEE  C00F  F036         	movff	?___aomod+6,??_dtoa+6
  8412  000FF2  C010  F037         	movff	?___aomod+7,??_dtoa+7
  8413  000FF6  C030  F01B         	movff	??_dtoa,abs@a
  8414  000FFA  C032  F01C         	movff	??_dtoa+2,abs@a+1
  8415  000FFE  EC5E  F014         	call	_abs	;wreg free
  8416  001002  501B               	movf	?_abs,w,c
  8417  001004  0F30               	addlw	48
  8418  001006  6EDF               	movwf	indf2,c
  8419                           
  8420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8421  001008  063A               	decf	dtoa@p,f,c
  8422  00100A  A0D8               	btfss	status,0,c
  8423  00100C  063B               	decf	dtoa@p+1,f,c
  8424                           
  8425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8426  00100E  063C               	decf	dtoa@w,f,c
  8427  001010  A0D8               	btfss	status,0,c
  8428  001012  063D               	decf	dtoa@w+1,f,c
  8429                           
  8430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8431  001014  C040  F009         	movff	dtoa@n,___aodiv@dividend
  8432  001018  C041  F00A         	movff	dtoa@n+1,___aodiv@dividend+1
  8433  00101C  C042  F00B         	movff	dtoa@n+2,___aodiv@dividend+2
  8434  001020  C043  F00C         	movff	dtoa@n+3,___aodiv@dividend+3
  8435  001024  C044  F00D         	movff	dtoa@n+4,___aodiv@dividend+4
  8436  001028  C045  F00E         	movff	dtoa@n+5,___aodiv@dividend+5
  8437  00102C  C046  F00F         	movff	dtoa@n+6,___aodiv@dividend+6
  8438  001030  C047  F010         	movff	dtoa@n+7,___aodiv@dividend+7
  8439  001034  0E0A               	movlw	10
  8440  001036  6E11               	movwf	___aodiv@divisor,c
  8441  001038  0E00               	movlw	0
  8442  00103A  6E12               	movwf	___aodiv@divisor+1,c
  8443  00103C  0E00               	movlw	0
  8444  00103E  6E13               	movwf	___aodiv@divisor+2,c
  8445  001040  0E00               	movlw	0
  8446  001042  6E14               	movwf	___aodiv@divisor+3,c
  8447  001044  0E00               	movlw	0
  8448  001046  6E15               	movwf	___aodiv@divisor+4,c
  8449  001048  0E00               	movlw	0
  8450  00104A  6E16               	movwf	___aodiv@divisor+5,c
  8451  00104C  0E00               	movlw	0
  8452  00104E  6E17               	movwf	___aodiv@divisor+6,c
  8453  001050  0E00               	movlw	0
  8454  001052  6E18               	movwf	___aodiv@divisor+7,c
  8455  001054  EC1F  F00B         	call	___aodiv	;wreg free
  8456  001058  C009  F040         	movff	?___aodiv,dtoa@n
  8457  00105C  C00A  F041         	movff	?___aodiv+1,dtoa@n+1
  8458  001060  C00B  F042         	movff	?___aodiv+2,dtoa@n+2
  8459  001064  C00C  F043         	movff	?___aodiv+3,dtoa@n+3
  8460  001068  C00D  F044         	movff	?___aodiv+4,dtoa@n+4
  8461  00106C  C00E  F045         	movff	?___aodiv+5,dtoa@n+5
  8462  001070  C00F  F046         	movff	?___aodiv+6,dtoa@n+6
  8463  001074  C010  F047         	movff	?___aodiv+7,dtoa@n+7
  8464  001078                     l5260:
  8465                           
  8466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8467  001078  BE49               	btfsc	dtoa@i+1,7,c
  8468  00107A  D01F               	goto	u5850
  8469  00107C  5049               	movf	dtoa@i+1,w,c
  8470  00107E  E103               	bnz	u5810
  8471  001080  0448               	decf	dtoa@i,w,c
  8472  001082  A0D8               	btfss	status,0,c
  8473  001084  D01A               	goto	u5850
  8474  001086                     u5810:
  8475  001086  5040               	movf	dtoa@n,w,c
  8476  001088  1041               	iorwf	dtoa@n+1,w,c
  8477  00108A  1042               	iorwf	dtoa@n+2,w,c
  8478  00108C  1043               	iorwf	dtoa@n+3,w,c
  8479  00108E  1044               	iorwf	dtoa@n+4,w,c
  8480  001090  1045               	iorwf	dtoa@n+5,w,c
  8481  001092  1046               	iorwf	dtoa@n+6,w,c
  8482  001094  1047               	iorwf	dtoa@n+7,w,c
  8483  001096  A4D8               	btfss	status,2,c
  8484  001098  D773               	goto	l5250
  8485  00109A  BE3B               	btfsc	dtoa@p+1,7,c
  8486  00109C  D005               	goto	u5830
  8487  00109E  503B               	movf	dtoa@p+1,w,c
  8488  0010A0  E102               	bnz	u5831
  8489  0010A2  043A               	decf	dtoa@p,w,c
  8490  0010A4  B0D8               	btfsc	status,0,c
  8491  0010A6                     u5831:
  8492  0010A6  D76C               	goto	l5250
  8493  0010A8                     u5830:
  8494  0010A8  BE3D               	btfsc	dtoa@w+1,7,c
  8495  0010AA  D007               	goto	u5850
  8496  0010AC  503D               	movf	dtoa@w+1,w,c
  8497  0010AE  E103               	bnz	u5840
  8498  0010B0  043C               	decf	dtoa@w,w,c
  8499  0010B2  A0D8               	btfss	status,0,c
  8500  0010B4  D002               	goto	u5850
  8501  0010B6                     u5840:
  8502  0010B6  B24E               	btfsc	_flags,1,c
  8503  0010B8  D763               	goto	l5250
  8504  0010BA                     u5850:
  8505                           
  8506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8507  0010BA  503E               	movf	dtoa@s,w,c
  8508  0010BC  103F               	iorwf	dtoa@s+1,w,c
  8509  0010BE  A4D8               	btfss	status,2,c
  8510  0010C0  D002               	goto	u5870
  8511  0010C2  A44E               	btfss	_flags,2,c
  8512  0010C4  D017               	goto	l5284
  8513  0010C6                     u5870:
  8514                           
  8515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8516  0010C6  0648               	decf	dtoa@i,f,c
  8517  0010C8  A0D8               	btfss	status,0,c
  8518  0010CA  0649               	decf	dtoa@i+1,f,c
  8519                           
  8520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8521  0010CC  503E               	movf	dtoa@s,w,c
  8522  0010CE  103F               	iorwf	dtoa@s+1,w,c
  8523  0010D0  A4D8               	btfss	status,2,c
  8524  0010D2  D004               	goto	l5280
  8525  0010D4  0E00               	movlw	0
  8526  0010D6  6E39               	movwf	_dtoa$1350+1,c
  8527  0010D8  0E2B               	movlw	43
  8528  0010DA  D003               	goto	L15
  8529  0010DC                     l5280:
  8530  0010DC  0E00               	movlw	0
  8531  0010DE  6E39               	movwf	_dtoa$1350+1,c
  8532  0010E0  0E2D               	movlw	45
  8533  0010E2                     L15:
  8534  0010E2  6E38               	movwf	_dtoa$1350,c
  8535  0010E4  0E85               	movlw	low _dbuf
  8536  0010E6  2448               	addwf	dtoa@i,w,c
  8537  0010E8  6ED9               	movwf	fsr2l,c
  8538  0010EA  0E00               	movlw	high _dbuf
  8539  0010EC  2049               	addwfc	dtoa@i+1,w,c
  8540  0010EE  6EDA               	movwf	fsr2h,c
  8541  0010F0  C038  FFDF         	movff	_dtoa$1350,indf2
  8542  0010F4                     l5284:
  8543                           
  8544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8545  0010F4  C026  F01B         	movff	dtoa@fp,pad@fp
  8546  0010F8  C027  F01C         	movff	dtoa@fp+1,pad@fp+1
  8547  0010FC  0E85               	movlw	low _dbuf
  8548  0010FE  2448               	addwf	dtoa@i,w,c
  8549  001100  6E1D               	movwf	pad@buf,c
  8550  001102  0E00               	movlw	high _dbuf
  8551  001104  2049               	addwfc	dtoa@i+1,w,c
  8552  001106  6E1E               	movwf	pad@buf+1,c
  8553  001108  C03C  F01F         	movff	dtoa@w,pad@p
  8554  00110C  C03D  F020         	movff	dtoa@w+1,pad@p+1
  8555  001110  EC9E  F010         	call	_pad	;wreg free
  8556  001114  C01B  F026         	movff	?_pad,?_dtoa
  8557  001118  C01C  F027         	movff	?_pad+1,?_dtoa+1
  8558  00111C  0012               	return		;funcret
  8559  00111E                     __end_of_dtoa:
  8560                           	opt callstack 0
  8561                           
  8562 ;; *************** function _abs *****************
  8563 ;; Defined at:
  8564 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  a               2   26[COMRAM] int 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  2   26[COMRAM] int 
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;Total ram usage:        4 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    4
  8585 ;; This function calls:
  8586 ;;		Nothing
  8587 ;; This function is called by:
  8588 ;;		_dtoa
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text38
  8593  0028BC                     __ptext38:
  8594                           	opt callstack 0
  8595  0028BC                     _abs:
  8596                           	opt callstack 20
  8597                           
  8598                           ;incstack = 0
  8599  0028BC  BE1C               	btfsc	abs@a+1,7,c
  8600  0028BE  D005               	goto	u5590
  8601  0028C0  501C               	movf	abs@a+1,w,c
  8602  0028C2  E110               	bnz	l1401
  8603  0028C4  041B               	decf	abs@a,w,c
  8604  0028C6  B0D8               	btfsc	status,0,c
  8605  0028C8  D00D               	goto	l1401
  8606  0028CA                     u5590:
  8607  0028CA  C01B  F01D         	movff	abs@a,??_abs
  8608  0028CE  C01C  F01E         	movff	abs@a+1,??_abs+1
  8609  0028D2  1E1D               	comf	??_abs,f,c
  8610  0028D4  1E1E               	comf	??_abs+1,f,c
  8611  0028D6  4A1D               	infsnz	??_abs,f,c
  8612  0028D8  2A1E               	incf	??_abs+1,f,c
  8613  0028DA  C01D  F01B         	movff	??_abs,?_abs
  8614  0028DE  C01E  F01C         	movff	??_abs+1,?_abs+1
  8615  0028E2  0012               	return	
  8616  0028E4                     l1401:
  8617  0028E4  C01B  F01B         	movff	abs@a,?_abs
  8618  0028E8  C01C  F01C         	movff	abs@a+1,?_abs+1
  8619  0028EC  0012               	return		;funcret
  8620  0028EE                     __end_of_abs:
  8621                           	opt callstack 0
  8622                           
  8623 ;; *************** function ___aomod *****************
  8624 ;; Defined at:
  8625 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  dividend        8    8[COMRAM] long long 
  8628 ;;  divisor         8   16[COMRAM] long long 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  sign            1   25[COMRAM] unsigned char 
  8631 ;;  counter         1   24[COMRAM] unsigned char 
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  8    8[COMRAM] long long 
  8634 ;; Registers used:
  8635 ;;		wreg, status,2, status,0
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8641 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;Total ram usage:       18 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:    4
  8648 ;; This function calls:
  8649 ;;		Nothing
  8650 ;; This function is called by:
  8651 ;;		_dtoa
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text39
  8656  001B40                     __ptext39:
  8657                           	opt callstack 0
  8658  001B40                     ___aomod:
  8659                           	opt callstack 20
  8660                           
  8661                           ;incstack = 0
  8662  001B40  0E00               	movlw	0
  8663  001B42  6E1A               	movwf	___aomod@sign,c
  8664  001B44  AE10               	btfss	___aomod@dividend+7,7,c
  8665  001B46  D012               	goto	l5184
  8666  001B48  1E10               	comf	___aomod@dividend+7,f,c
  8667  001B4A  1E0F               	comf	___aomod@dividend+6,f,c
  8668  001B4C  1E0E               	comf	___aomod@dividend+5,f,c
  8669  001B4E  1E0D               	comf	___aomod@dividend+4,f,c
  8670  001B50  1E0C               	comf	___aomod@dividend+3,f,c
  8671  001B52  1E0B               	comf	___aomod@dividend+2,f,c
  8672  001B54  1E0A               	comf	___aomod@dividend+1,f,c
  8673  001B56  6C09               	negf	___aomod@dividend,c
  8674  001B58  0E00               	movlw	0
  8675  001B5A  220A               	addwfc	___aomod@dividend+1,f,c
  8676  001B5C  220B               	addwfc	___aomod@dividend+2,f,c
  8677  001B5E  220C               	addwfc	___aomod@dividend+3,f,c
  8678  001B60  220D               	addwfc	___aomod@dividend+4,f,c
  8679  001B62  220E               	addwfc	___aomod@dividend+5,f,c
  8680  001B64  220F               	addwfc	___aomod@dividend+6,f,c
  8681  001B66  2210               	addwfc	___aomod@dividend+7,f,c
  8682  001B68  0E01               	movlw	1
  8683  001B6A  6E1A               	movwf	___aomod@sign,c
  8684  001B6C                     l5184:
  8685  001B6C  AE18               	btfss	___aomod@divisor+7,7,c
  8686  001B6E  D010               	goto	l5188
  8687  001B70  1E18               	comf	___aomod@divisor+7,f,c
  8688  001B72  1E17               	comf	___aomod@divisor+6,f,c
  8689  001B74  1E16               	comf	___aomod@divisor+5,f,c
  8690  001B76  1E15               	comf	___aomod@divisor+4,f,c
  8691  001B78  1E14               	comf	___aomod@divisor+3,f,c
  8692  001B7A  1E13               	comf	___aomod@divisor+2,f,c
  8693  001B7C  1E12               	comf	___aomod@divisor+1,f,c
  8694  001B7E  6C11               	negf	___aomod@divisor,c
  8695  001B80  0E00               	movlw	0
  8696  001B82  2212               	addwfc	___aomod@divisor+1,f,c
  8697  001B84  2213               	addwfc	___aomod@divisor+2,f,c
  8698  001B86  2214               	addwfc	___aomod@divisor+3,f,c
  8699  001B88  2215               	addwfc	___aomod@divisor+4,f,c
  8700  001B8A  2216               	addwfc	___aomod@divisor+5,f,c
  8701  001B8C  2217               	addwfc	___aomod@divisor+6,f,c
  8702  001B8E  2218               	addwfc	___aomod@divisor+7,f,c
  8703  001B90                     l5188:
  8704  001B90  5011               	movf	___aomod@divisor,w,c
  8705  001B92  1012               	iorwf	___aomod@divisor+1,w,c
  8706  001B94  1013               	iorwf	___aomod@divisor+2,w,c
  8707  001B96  1014               	iorwf	___aomod@divisor+3,w,c
  8708  001B98  1015               	iorwf	___aomod@divisor+4,w,c
  8709  001B9A  1016               	iorwf	___aomod@divisor+5,w,c
  8710  001B9C  1017               	iorwf	___aomod@divisor+6,w,c
  8711  001B9E  1018               	iorwf	___aomod@divisor+7,w,c
  8712  001BA0  B4D8               	btfsc	status,2,c
  8713  001BA2  D03C               	goto	l5204
  8714  001BA4  0E01               	movlw	1
  8715  001BA6  6E19               	movwf	___aomod@counter,c
  8716  001BA8  D00A               	goto	l5194
  8717  001BAA                     l5192:
  8718  001BAA  90D8               	bcf	status,0,c
  8719  001BAC  3611               	rlcf	___aomod@divisor,f,c
  8720  001BAE  3612               	rlcf	___aomod@divisor+1,f,c
  8721  001BB0  3613               	rlcf	___aomod@divisor+2,f,c
  8722  001BB2  3614               	rlcf	___aomod@divisor+3,f,c
  8723  001BB4  3615               	rlcf	___aomod@divisor+4,f,c
  8724  001BB6  3616               	rlcf	___aomod@divisor+5,f,c
  8725  001BB8  3617               	rlcf	___aomod@divisor+6,f,c
  8726  001BBA  3618               	rlcf	___aomod@divisor+7,f,c
  8727  001BBC  2A19               	incf	___aomod@counter,f,c
  8728  001BBE                     l5194:
  8729  001BBE  AE18               	btfss	___aomod@divisor+7,7,c
  8730  001BC0  D7F4               	goto	l5192
  8731  001BC2                     u5700:
  8732  001BC2  5011               	movf	___aomod@divisor,w,c
  8733  001BC4  5C09               	subwf	___aomod@dividend,w,c
  8734  001BC6  5012               	movf	___aomod@divisor+1,w,c
  8735  001BC8  580A               	subwfb	___aomod@dividend+1,w,c
  8736  001BCA  5013               	movf	___aomod@divisor+2,w,c
  8737  001BCC  580B               	subwfb	___aomod@dividend+2,w,c
  8738  001BCE  5014               	movf	___aomod@divisor+3,w,c
  8739  001BD0  580C               	subwfb	___aomod@dividend+3,w,c
  8740  001BD2  5015               	movf	___aomod@divisor+4,w,c
  8741  001BD4  580D               	subwfb	___aomod@dividend+4,w,c
  8742  001BD6  5016               	movf	___aomod@divisor+5,w,c
  8743  001BD8  580E               	subwfb	___aomod@dividend+5,w,c
  8744  001BDA  5017               	movf	___aomod@divisor+6,w,c
  8745  001BDC  580F               	subwfb	___aomod@dividend+6,w,c
  8746  001BDE  5018               	movf	___aomod@divisor+7,w,c
  8747  001BE0  5810               	subwfb	___aomod@dividend+7,w,c
  8748  001BE2  A0D8               	btfss	status,0,c
  8749  001BE4  D010               	goto	l5200
  8750  001BE6  5011               	movf	___aomod@divisor,w,c
  8751  001BE8  5E09               	subwf	___aomod@dividend,f,c
  8752  001BEA  5012               	movf	___aomod@divisor+1,w,c
  8753  001BEC  5A0A               	subwfb	___aomod@dividend+1,f,c
  8754  001BEE  5013               	movf	___aomod@divisor+2,w,c
  8755  001BF0  5A0B               	subwfb	___aomod@dividend+2,f,c
  8756  001BF2  5014               	movf	___aomod@divisor+3,w,c
  8757  001BF4  5A0C               	subwfb	___aomod@dividend+3,f,c
  8758  001BF6  5015               	movf	___aomod@divisor+4,w,c
  8759  001BF8  5A0D               	subwfb	___aomod@dividend+4,f,c
  8760  001BFA  5016               	movf	___aomod@divisor+5,w,c
  8761  001BFC  5A0E               	subwfb	___aomod@dividend+5,f,c
  8762  001BFE  5017               	movf	___aomod@divisor+6,w,c
  8763  001C00  5A0F               	subwfb	___aomod@dividend+6,f,c
  8764  001C02  5018               	movf	___aomod@divisor+7,w,c
  8765  001C04  5A10               	subwfb	___aomod@dividend+7,f,c
  8766  001C06                     l5200:
  8767  001C06  90D8               	bcf	status,0,c
  8768  001C08  3218               	rrcf	___aomod@divisor+7,f,c
  8769  001C0A  3217               	rrcf	___aomod@divisor+6,f,c
  8770  001C0C  3216               	rrcf	___aomod@divisor+5,f,c
  8771  001C0E  3215               	rrcf	___aomod@divisor+4,f,c
  8772  001C10  3214               	rrcf	___aomod@divisor+3,f,c
  8773  001C12  3213               	rrcf	___aomod@divisor+2,f,c
  8774  001C14  3212               	rrcf	___aomod@divisor+1,f,c
  8775  001C16  3211               	rrcf	___aomod@divisor,f,c
  8776  001C18  2E19               	decfsz	___aomod@counter,f,c
  8777  001C1A  D7D3               	goto	u5700
  8778  001C1C                     l5204:
  8779  001C1C  501A               	movf	___aomod@sign,w,c
  8780  001C1E  B4D8               	btfsc	status,2,c
  8781  001C20  D010               	goto	l5208
  8782  001C22  1E10               	comf	___aomod@dividend+7,f,c
  8783  001C24  1E0F               	comf	___aomod@dividend+6,f,c
  8784  001C26  1E0E               	comf	___aomod@dividend+5,f,c
  8785  001C28  1E0D               	comf	___aomod@dividend+4,f,c
  8786  001C2A  1E0C               	comf	___aomod@dividend+3,f,c
  8787  001C2C  1E0B               	comf	___aomod@dividend+2,f,c
  8788  001C2E  1E0A               	comf	___aomod@dividend+1,f,c
  8789  001C30  6C09               	negf	___aomod@dividend,c
  8790  001C32  0E00               	movlw	0
  8791  001C34  220A               	addwfc	___aomod@dividend+1,f,c
  8792  001C36  220B               	addwfc	___aomod@dividend+2,f,c
  8793  001C38  220C               	addwfc	___aomod@dividend+3,f,c
  8794  001C3A  220D               	addwfc	___aomod@dividend+4,f,c
  8795  001C3C  220E               	addwfc	___aomod@dividend+5,f,c
  8796  001C3E  220F               	addwfc	___aomod@dividend+6,f,c
  8797  001C40  2210               	addwfc	___aomod@dividend+7,f,c
  8798  001C42                     l5208:
  8799  001C42  C009  F009         	movff	___aomod@dividend,?___aomod
  8800  001C46  C00A  F00A         	movff	___aomod@dividend+1,?___aomod+1
  8801  001C4A  C00B  F00B         	movff	___aomod@dividend+2,?___aomod+2
  8802  001C4E  C00C  F00C         	movff	___aomod@dividend+3,?___aomod+3
  8803  001C52  C00D  F00D         	movff	___aomod@dividend+4,?___aomod+4
  8804  001C56  C00E  F00E         	movff	___aomod@dividend+5,?___aomod+5
  8805  001C5A  C00F  F00F         	movff	___aomod@dividend+6,?___aomod+6
  8806  001C5E  C010  F010         	movff	___aomod@dividend+7,?___aomod+7
  8807  001C62  0012               	return		;funcret
  8808  001C64                     __end_of___aomod:
  8809                           	opt callstack 0
  8810                           
  8811 ;; *************** function ___aodiv *****************
  8812 ;; Defined at:
  8813 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  dividend        8    8[COMRAM] long long 
  8816 ;;  divisor         8   16[COMRAM] long long 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;  quotient        8   26[COMRAM] long long 
  8819 ;;  sign            1   25[COMRAM] unsigned char 
  8820 ;;  counter         1   24[COMRAM] unsigned char 
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  8    8[COMRAM] long long 
  8823 ;; Registers used:
  8824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8830 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8831 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8833 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8834 ;;Total ram usage:       26 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; Hardware stack levels required when called:    4
  8837 ;; This function calls:
  8838 ;;		Nothing
  8839 ;; This function is called by:
  8840 ;;		_dtoa
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text40
  8845  00163E                     __ptext40:
  8846                           	opt callstack 0
  8847  00163E                     ___aodiv:
  8848                           	opt callstack 20
  8849                           
  8850                           ;incstack = 0
  8851  00163E  0E00               	movlw	0
  8852  001640  6E1A               	movwf	___aodiv@sign,c
  8853  001642  AE18               	btfss	___aodiv@divisor+7,7,c
  8854  001644  D012               	goto	l5140
  8855  001646  1E18               	comf	___aodiv@divisor+7,f,c
  8856  001648  1E17               	comf	___aodiv@divisor+6,f,c
  8857  00164A  1E16               	comf	___aodiv@divisor+5,f,c
  8858  00164C  1E15               	comf	___aodiv@divisor+4,f,c
  8859  00164E  1E14               	comf	___aodiv@divisor+3,f,c
  8860  001650  1E13               	comf	___aodiv@divisor+2,f,c
  8861  001652  1E12               	comf	___aodiv@divisor+1,f,c
  8862  001654  6C11               	negf	___aodiv@divisor,c
  8863  001656  0E00               	movlw	0
  8864  001658  2212               	addwfc	___aodiv@divisor+1,f,c
  8865  00165A  2213               	addwfc	___aodiv@divisor+2,f,c
  8866  00165C  2214               	addwfc	___aodiv@divisor+3,f,c
  8867  00165E  2215               	addwfc	___aodiv@divisor+4,f,c
  8868  001660  2216               	addwfc	___aodiv@divisor+5,f,c
  8869  001662  2217               	addwfc	___aodiv@divisor+6,f,c
  8870  001664  2218               	addwfc	___aodiv@divisor+7,f,c
  8871  001666  0E01               	movlw	1
  8872  001668  6E1A               	movwf	___aodiv@sign,c
  8873  00166A                     l5140:
  8874  00166A  AE10               	btfss	___aodiv@dividend+7,7,c
  8875  00166C  D012               	goto	l5146
  8876  00166E  1E10               	comf	___aodiv@dividend+7,f,c
  8877  001670  1E0F               	comf	___aodiv@dividend+6,f,c
  8878  001672  1E0E               	comf	___aodiv@dividend+5,f,c
  8879  001674  1E0D               	comf	___aodiv@dividend+4,f,c
  8880  001676  1E0C               	comf	___aodiv@dividend+3,f,c
  8881  001678  1E0B               	comf	___aodiv@dividend+2,f,c
  8882  00167A  1E0A               	comf	___aodiv@dividend+1,f,c
  8883  00167C  6C09               	negf	___aodiv@dividend,c
  8884  00167E  0E00               	movlw	0
  8885  001680  220A               	addwfc	___aodiv@dividend+1,f,c
  8886  001682  220B               	addwfc	___aodiv@dividend+2,f,c
  8887  001684  220C               	addwfc	___aodiv@dividend+3,f,c
  8888  001686  220D               	addwfc	___aodiv@dividend+4,f,c
  8889  001688  220E               	addwfc	___aodiv@dividend+5,f,c
  8890  00168A  220F               	addwfc	___aodiv@dividend+6,f,c
  8891  00168C  2210               	addwfc	___aodiv@dividend+7,f,c
  8892  00168E  0E01               	movlw	1
  8893  001690  1A1A               	xorwf	___aodiv@sign,f,c
  8894  001692                     l5146:
  8895  001692  EE20  F01B         	lfsr	2,___aodiv@quotient
  8896  001696  0E07               	movlw	7
  8897  001698                     u5621:
  8898  001698  6ADE               	clrf	postinc2,c
  8899  00169A  06E8               	decf	wreg,f,c
  8900  00169C  E2FD               	bc	u5621
  8901  00169E  5011               	movf	___aodiv@divisor,w,c
  8902  0016A0  1012               	iorwf	___aodiv@divisor+1,w,c
  8903  0016A2  1013               	iorwf	___aodiv@divisor+2,w,c
  8904  0016A4  1014               	iorwf	___aodiv@divisor+3,w,c
  8905  0016A6  1015               	iorwf	___aodiv@divisor+4,w,c
  8906  0016A8  1016               	iorwf	___aodiv@divisor+5,w,c
  8907  0016AA  1017               	iorwf	___aodiv@divisor+6,w,c
  8908  0016AC  1018               	iorwf	___aodiv@divisor+7,w,c
  8909  0016AE  B4D8               	btfsc	status,2,c
  8910  0016B0  D046               	goto	l5168
  8911  0016B2  0E01               	movlw	1
  8912  0016B4  6E19               	movwf	___aodiv@counter,c
  8913  0016B6  D00A               	goto	l5154
  8914  0016B8                     l5152:
  8915  0016B8  90D8               	bcf	status,0,c
  8916  0016BA  3611               	rlcf	___aodiv@divisor,f,c
  8917  0016BC  3612               	rlcf	___aodiv@divisor+1,f,c
  8918  0016BE  3613               	rlcf	___aodiv@divisor+2,f,c
  8919  0016C0  3614               	rlcf	___aodiv@divisor+3,f,c
  8920  0016C2  3615               	rlcf	___aodiv@divisor+4,f,c
  8921  0016C4  3616               	rlcf	___aodiv@divisor+5,f,c
  8922  0016C6  3617               	rlcf	___aodiv@divisor+6,f,c
  8923  0016C8  3618               	rlcf	___aodiv@divisor+7,f,c
  8924  0016CA  2A19               	incf	___aodiv@counter,f,c
  8925  0016CC                     l5154:
  8926  0016CC  AE18               	btfss	___aodiv@divisor+7,7,c
  8927  0016CE  D7F4               	goto	l5152
  8928  0016D0                     u5640:
  8929  0016D0  90D8               	bcf	status,0,c
  8930  0016D2  361B               	rlcf	___aodiv@quotient,f,c
  8931  0016D4  361C               	rlcf	___aodiv@quotient+1,f,c
  8932  0016D6  361D               	rlcf	___aodiv@quotient+2,f,c
  8933  0016D8  361E               	rlcf	___aodiv@quotient+3,f,c
  8934  0016DA  361F               	rlcf	___aodiv@quotient+4,f,c
  8935  0016DC  3620               	rlcf	___aodiv@quotient+5,f,c
  8936  0016DE  3621               	rlcf	___aodiv@quotient+6,f,c
  8937  0016E0  3622               	rlcf	___aodiv@quotient+7,f,c
  8938  0016E2  5011               	movf	___aodiv@divisor,w,c
  8939  0016E4  5C09               	subwf	___aodiv@dividend,w,c
  8940  0016E6  5012               	movf	___aodiv@divisor+1,w,c
  8941  0016E8  580A               	subwfb	___aodiv@dividend+1,w,c
  8942  0016EA  5013               	movf	___aodiv@divisor+2,w,c
  8943  0016EC  580B               	subwfb	___aodiv@dividend+2,w,c
  8944  0016EE  5014               	movf	___aodiv@divisor+3,w,c
  8945  0016F0  580C               	subwfb	___aodiv@dividend+3,w,c
  8946  0016F2  5015               	movf	___aodiv@divisor+4,w,c
  8947  0016F4  580D               	subwfb	___aodiv@dividend+4,w,c
  8948  0016F6  5016               	movf	___aodiv@divisor+5,w,c
  8949  0016F8  580E               	subwfb	___aodiv@dividend+5,w,c
  8950  0016FA  5017               	movf	___aodiv@divisor+6,w,c
  8951  0016FC  580F               	subwfb	___aodiv@dividend+6,w,c
  8952  0016FE  5018               	movf	___aodiv@divisor+7,w,c
  8953  001700  5810               	subwfb	___aodiv@dividend+7,w,c
  8954  001702  A0D8               	btfss	status,0,c
  8955  001704  D011               	goto	l5164
  8956  001706  5011               	movf	___aodiv@divisor,w,c
  8957  001708  5E09               	subwf	___aodiv@dividend,f,c
  8958  00170A  5012               	movf	___aodiv@divisor+1,w,c
  8959  00170C  5A0A               	subwfb	___aodiv@dividend+1,f,c
  8960  00170E  5013               	movf	___aodiv@divisor+2,w,c
  8961  001710  5A0B               	subwfb	___aodiv@dividend+2,f,c
  8962  001712  5014               	movf	___aodiv@divisor+3,w,c
  8963  001714  5A0C               	subwfb	___aodiv@dividend+3,f,c
  8964  001716  5015               	movf	___aodiv@divisor+4,w,c
  8965  001718  5A0D               	subwfb	___aodiv@dividend+4,f,c
  8966  00171A  5016               	movf	___aodiv@divisor+5,w,c
  8967  00171C  5A0E               	subwfb	___aodiv@dividend+5,f,c
  8968  00171E  5017               	movf	___aodiv@divisor+6,w,c
  8969  001720  5A0F               	subwfb	___aodiv@dividend+6,f,c
  8970  001722  5018               	movf	___aodiv@divisor+7,w,c
  8971  001724  5A10               	subwfb	___aodiv@dividend+7,f,c
  8972  001726  801B               	bsf	___aodiv@quotient,0,c
  8973  001728                     l5164:
  8974  001728  90D8               	bcf	status,0,c
  8975  00172A  3218               	rrcf	___aodiv@divisor+7,f,c
  8976  00172C  3217               	rrcf	___aodiv@divisor+6,f,c
  8977  00172E  3216               	rrcf	___aodiv@divisor+5,f,c
  8978  001730  3215               	rrcf	___aodiv@divisor+4,f,c
  8979  001732  3214               	rrcf	___aodiv@divisor+3,f,c
  8980  001734  3213               	rrcf	___aodiv@divisor+2,f,c
  8981  001736  3212               	rrcf	___aodiv@divisor+1,f,c
  8982  001738  3211               	rrcf	___aodiv@divisor,f,c
  8983  00173A  2E19               	decfsz	___aodiv@counter,f,c
  8984  00173C  D7C9               	goto	u5640
  8985  00173E                     l5168:
  8986  00173E  501A               	movf	___aodiv@sign,w,c
  8987  001740  B4D8               	btfsc	status,2,c
  8988  001742  D010               	goto	l5172
  8989  001744  1E22               	comf	___aodiv@quotient+7,f,c
  8990  001746  1E21               	comf	___aodiv@quotient+6,f,c
  8991  001748  1E20               	comf	___aodiv@quotient+5,f,c
  8992  00174A  1E1F               	comf	___aodiv@quotient+4,f,c
  8993  00174C  1E1E               	comf	___aodiv@quotient+3,f,c
  8994  00174E  1E1D               	comf	___aodiv@quotient+2,f,c
  8995  001750  1E1C               	comf	___aodiv@quotient+1,f,c
  8996  001752  6C1B               	negf	___aodiv@quotient,c
  8997  001754  0E00               	movlw	0
  8998  001756  221C               	addwfc	___aodiv@quotient+1,f,c
  8999  001758  221D               	addwfc	___aodiv@quotient+2,f,c
  9000  00175A  221E               	addwfc	___aodiv@quotient+3,f,c
  9001  00175C  221F               	addwfc	___aodiv@quotient+4,f,c
  9002  00175E  2220               	addwfc	___aodiv@quotient+5,f,c
  9003  001760  2221               	addwfc	___aodiv@quotient+6,f,c
  9004  001762  2222               	addwfc	___aodiv@quotient+7,f,c
  9005  001764                     l5172:
  9006  001764  C01B  F009         	movff	___aodiv@quotient,?___aodiv
  9007  001768  C01C  F00A         	movff	___aodiv@quotient+1,?___aodiv+1
  9008  00176C  C01D  F00B         	movff	___aodiv@quotient+2,?___aodiv+2
  9009  001770  C01E  F00C         	movff	___aodiv@quotient+3,?___aodiv+3
  9010  001774  C01F  F00D         	movff	___aodiv@quotient+4,?___aodiv+4
  9011  001778  C020  F00E         	movff	___aodiv@quotient+5,?___aodiv+5
  9012  00177C  C021  F00F         	movff	___aodiv@quotient+6,?___aodiv+6
  9013  001780  C022  F010         	movff	___aodiv@quotient+7,?___aodiv+7
  9014  001784  0012               	return		;funcret
  9015  001786                     __end_of___aodiv:
  9016                           	opt callstack 0
  9017                           
  9018 ;; *************** function _ctoa *****************
  9019 ;; Defined at:
  9020 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  9023 ;;		 -> NULL(0), 
  9024 ;;  c               1   39[COMRAM] unsigned char 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;  w               2   40[COMRAM] int 
  9027 ;;  l               2    0        int 
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  2   37[COMRAM] int 
  9030 ;; Registers used:
  9031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9037 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;Total ram usage:        5 bytes
  9042 ;; Hardware stack levels used:    1
  9043 ;; Hardware stack levels required when called:    9
  9044 ;; This function calls:
  9045 ;;		_pad
  9046 ;; This function is called by:
  9047 ;;		_vfpfcnvrt
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text41
  9052  002638                     __ptext41:
  9053                           	opt callstack 0
  9054  002638                     _ctoa:
  9055                           	opt callstack 16
  9056                           
  9057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9058                           
  9059                           ;incstack = 0
  9060  002638  0100               	movlb	0	; () banked
  9061  00263A  5170               	movf	_width& (0+255),w,b
  9062  00263C  1171               	iorwf	(_width+1)& (0+255),w,b
  9063  00263E  A4D8               	btfss	status,2,c
  9064  002640  D005               	goto	l5216
  9065                           
  9066                           ; BSR set to: 0
  9067  002642  C070  F029         	movff	_width,ctoa@w
  9068  002646  C071  F02A         	movff	_width+1,ctoa@w+1
  9069  00264A  D006               	goto	l5218
  9070  00264C                     l5216:
  9071                           
  9072                           ; BSR set to: 0
  9073  00264C  0EFF               	movlw	255
  9074  00264E  2570               	addwf	_width& (0+255),w,b
  9075  002650  6E29               	movwf	ctoa@w,c
  9076  002652  0EFF               	movlw	255
  9077  002654  2171               	addwfc	(_width+1)& (0+255),w,b
  9078  002656  6E2A               	movwf	ctoa@w+1,c
  9079  002658                     l5218:
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9083  002658  C028  F085         	movff	ctoa@c,_dbuf
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9087  00265C  0E00               	movlw	0
  9088  00265E  6F86               	movwf	(_dbuf+1)& (0+255),b
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9092  002660  C026  F01B         	movff	ctoa@fp,pad@fp
  9093  002664  C027  F01C         	movff	ctoa@fp+1,pad@fp+1
  9094  002668  0E85               	movlw	low _dbuf
  9095  00266A  6E1D               	movwf	pad@buf,c
  9096  00266C  0E00               	movlw	high _dbuf
  9097  00266E  6E1E               	movwf	pad@buf+1,c
  9098  002670  C029  F01F         	movff	ctoa@w,pad@p
  9099  002674  C02A  F020         	movff	ctoa@w+1,pad@p+1
  9100  002678  EC9E  F010         	call	_pad	;wreg free
  9101  00267C  C01B  F026         	movff	?_pad,?_ctoa
  9102  002680  C01C  F027         	movff	?_pad+1,?_ctoa+1
  9103  002684  0012               	return		;funcret
  9104  002686                     __end_of_ctoa:
  9105                           	opt callstack 0
  9106                           
  9107 ;; *************** function _pad *****************
  9108 ;; Defined at:
  9109 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  9112 ;;		 -> NULL(0), 
  9113 ;;  buf             2   28[COMRAM] PTR unsigned char 
  9114 ;;		 -> dbuf(32), 
  9115 ;;  p               2   30[COMRAM] int 
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;  w               2   35[COMRAM] int 
  9118 ;;  i               2   33[COMRAM] int 
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  2   26[COMRAM] int 
  9121 ;; Registers used:
  9122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9128 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9132 ;;Total ram usage:       11 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; Hardware stack levels required when called:    8
  9135 ;; This function calls:
  9136 ;;		_fputc
  9137 ;;		_fputs
  9138 ;;		_strlen
  9139 ;; This function is called by:
  9140 ;;		_ctoa
  9141 ;;		_dtoa
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           	psect	text42
  9146  00213C                     __ptext42:
  9147                           	opt callstack 0
  9148  00213C                     _pad:
  9149                           	opt callstack 16
  9150                           
  9151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9152                           
  9153                           ;incstack = 0
  9154  00213C  A04E               	btfss	_flags,0,c
  9155  00213E  D00A               	goto	l5110
  9156                           
  9157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9158  002140  C01D  F014         	movff	pad@buf,fputs@s
  9159  002144  C01E  F015         	movff	pad@buf+1,fputs@s+1
  9160  002148  C01B  F016         	movff	pad@fp,fputs@fp
  9161  00214C  C01C  F017         	movff	pad@fp+1,fputs@fp+1
  9162  002150  EC27  F014         	call	_fputs	;wreg free
  9163  002154                     l5110:
  9164                           
  9165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9166  002154  BE20               	btfsc	pad@p+1,7,c
  9167  002156  D005               	goto	l5114
  9168  002158  C01F  F024         	movff	pad@p,pad@w
  9169  00215C  C020  F025         	movff	pad@p+1,pad@w+1
  9170  002160  D004               	goto	l646
  9171  002162                     l5114:
  9172  002162  0E00               	movlw	0
  9173  002164  6E25               	movwf	pad@w+1,c
  9174  002166  0E00               	movlw	0
  9175  002168  6E24               	movwf	pad@w,c
  9176  00216A                     l646:
  9177                           
  9178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9179  00216A  0E00               	movlw	0
  9180  00216C  6E23               	movwf	pad@i+1,c
  9181  00216E  0E00               	movlw	0
  9182  002170  6E22               	movwf	pad@i,c
  9183                           
  9184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9185  002172  D00C               	goto	l5120
  9186  002174                     l5116:
  9187                           
  9188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9189  002174  0E00               	movlw	0
  9190  002176  6E0C               	movwf	fputc@c+1,c
  9191  002178  0E20               	movlw	32
  9192  00217A  6E0B               	movwf	fputc@c,c
  9193  00217C  C01B  F00D         	movff	pad@fp,fputc@fp
  9194  002180  C01C  F00E         	movff	pad@fp+1,fputc@fp+1
  9195  002184  ECE7  F011         	call	_fputc	;wreg free
  9196                           
  9197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9198  002188  4A22               	infsnz	pad@i,f,c
  9199  00218A  2A23               	incf	pad@i+1,f,c
  9200  00218C                     l5120:
  9201                           
  9202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9203  00218C  5024               	movf	pad@w,w,c
  9204  00218E  5C22               	subwf	pad@i,w,c
  9205  002190  5023               	movf	pad@i+1,w,c
  9206  002192  0A80               	xorlw	128
  9207  002194  6E21               	movwf	??_pad& (0+255),c
  9208  002196  5025               	movf	pad@w+1,w,c
  9209  002198  0A80               	xorlw	128
  9210  00219A  5821               	subwfb	??_pad& (0+255),w,c
  9211  00219C  A0D8               	btfss	status,0,c
  9212  00219E  D7EA               	goto	l5116
  9213                           
  9214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9215  0021A0  B04E               	btfsc	_flags,0,c
  9216  0021A2  D00A               	goto	l5124
  9217                           
  9218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9219  0021A4  C01D  F014         	movff	pad@buf,fputs@s
  9220  0021A8  C01E  F015         	movff	pad@buf+1,fputs@s+1
  9221  0021AC  C01B  F016         	movff	pad@fp,fputs@fp
  9222  0021B0  C01C  F017         	movff	pad@fp+1,fputs@fp+1
  9223  0021B4  EC27  F014         	call	_fputs	;wreg free
  9224  0021B8                     l5124:
  9225                           
  9226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9227  0021B8  C01D  F009         	movff	pad@buf,strlen@s
  9228  0021BC  C01E  F00A         	movff	pad@buf+1,strlen@s+1
  9229  0021C0  EC66  F013         	call	_strlen	;wreg free
  9230  0021C4  5024               	movf	pad@w,w,c
  9231  0021C6  2409               	addwf	?_strlen,w,c
  9232  0021C8  6E1B               	movwf	?_pad,c
  9233  0021CA  5025               	movf	pad@w+1,w,c
  9234  0021CC  200A               	addwfc	?_strlen+1,w,c
  9235  0021CE  6E1C               	movwf	?_pad+1,c
  9236  0021D0  0012               	return		;funcret
  9237  0021D2                     __end_of_pad:
  9238                           	opt callstack 0
  9239                           
  9240 ;; *************** function _strlen *****************
  9241 ;; Defined at:
  9242 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  s               2    8[COMRAM] PTR const unsigned char 
  9245 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), NULL(0), 
  9246 ;;		 -> authentication@username(64), STR_2(5), STR_1(7), 
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;  a               2   10[COMRAM] PTR const unsigned char 
  9249 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), NULL(0), 
  9250 ;;		 -> authentication@username(64), STR_2(5), STR_1(7), 
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  2    8[COMRAM] unsigned int 
  9253 ;; Registers used:
  9254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9255 ;; Tracked objects:
  9256 ;;		On entry : 0/0
  9257 ;;		On exit  : 0/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9263 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9264 ;;Total ram usage:        4 bytes
  9265 ;; Hardware stack levels used:    1
  9266 ;; Hardware stack levels required when called:    4
  9267 ;; This function calls:
  9268 ;;		Nothing
  9269 ;; This function is called by:
  9270 ;;		_pad
  9271 ;;		_stoa
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           	psect	text43
  9276  0026CC                     __ptext43:
  9277                           	opt callstack 0
  9278  0026CC                     _strlen:
  9279                           	opt callstack 20
  9280                           
  9281                           ;incstack = 0
  9282  0026CC  C009  F00B         	movff	strlen@s,strlen@a
  9283  0026D0  C00A  F00C         	movff	strlen@s+1,strlen@a+1
  9284  0026D4  D002               	goto	l5100
  9285  0026D6                     l5098:
  9286  0026D6  4A09               	infsnz	strlen@s,f,c
  9287  0026D8  2A0A               	incf	strlen@s+1,f,c
  9288  0026DA                     l5100:
  9289  0026DA  C009  FFF6         	movff	strlen@s,tblptrl
  9290  0026DE  C00A  FFF7         	movff	strlen@s+1,tblptrh
  9291  0026E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9292  0026E4  6EF8               	movwf	tblptru,c
  9293  0026E6  0E0F               	movlw	(high __ramtop+-1)
  9294  0026E8  64F7               	cpfsgt	tblptrh,c
  9295  0026EA  D003               	bra	u5537
  9296  0026EC  0008               	tblrd		*
  9297  0026EE  50F5               	movf	tablat,w,c
  9298  0026F0  D005               	bra	u5530
  9299  0026F2                     u5537:
  9300  0026F2  CFF6 FFE1          	movff	tblptrl,fsr1l
  9301  0026F6  CFF7 FFE2          	movff	tblptrh,fsr1h
  9302  0026FA  50E7               	movf	indf1,w,c
  9303  0026FC                     u5530:
  9304  0026FC  0900               	iorlw	0
  9305  0026FE  A4D8               	btfss	status,2,c
  9306  002700  D7EA               	goto	l5098
  9307  002702  500B               	movf	strlen@a,w,c
  9308  002704  5C09               	subwf	strlen@s,w,c
  9309  002706  6E09               	movwf	?_strlen,c
  9310  002708  500C               	movf	strlen@a+1,w,c
  9311  00270A  580A               	subwfb	strlen@s+1,w,c
  9312  00270C  6E0A               	movwf	?_strlen+1,c
  9313  00270E  0012               	return		;funcret
  9314  002710                     __end_of_strlen:
  9315                           	opt callstack 0
  9316                           
  9317 ;; *************** function _fputs *****************
  9318 ;; Defined at:
  9319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  s               2   19[COMRAM] PTR const unsigned char 
  9322 ;;		 -> dbuf(32), 
  9323 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  9324 ;;		 -> NULL(0), 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  i               2   24[COMRAM] int 
  9327 ;;  c               1   23[COMRAM] unsigned char 
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  2   19[COMRAM] int 
  9330 ;; Registers used:
  9331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9338 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9340 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9341 ;;Total ram usage:        7 bytes
  9342 ;; Hardware stack levels used:    1
  9343 ;; Hardware stack levels required when called:    7
  9344 ;; This function calls:
  9345 ;;		_fputc
  9346 ;; This function is called by:
  9347 ;;		_pad
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           	psect	text44
  9352  00284E                     __ptext44:
  9353                           	opt callstack 0
  9354  00284E                     _fputs:
  9355                           	opt callstack 16
  9356                           
  9357                           ;incstack = 0
  9358  00284E  0E00               	movlw	0
  9359  002850  6E1A               	movwf	fputs@i+1,c
  9360  002852  0E00               	movlw	0
  9361  002854  6E19               	movwf	fputs@i,c
  9362  002856  D00B               	goto	l5094
  9363  002858                     l5090:
  9364  002858  C018  F00B         	movff	fputs@c,fputc@c
  9365  00285C  6A0C               	clrf	fputc@c+1,c
  9366  00285E  C016  F00D         	movff	fputs@fp,fputc@fp
  9367  002862  C017  F00E         	movff	fputs@fp+1,fputc@fp+1
  9368  002866  ECE7  F011         	call	_fputc	;wreg free
  9369  00286A  4A19               	infsnz	fputs@i,f,c
  9370  00286C  2A1A               	incf	fputs@i+1,f,c
  9371  00286E                     l5094:
  9372  00286E  5019               	movf	fputs@i,w,c
  9373  002870  2414               	addwf	fputs@s,w,c
  9374  002872  6ED9               	movwf	fsr2l,c
  9375  002874  501A               	movf	fputs@i+1,w,c
  9376  002876  2015               	addwfc	fputs@s+1,w,c
  9377  002878  6EDA               	movwf	fsr2h,c
  9378  00287A  50DF               	movf	indf2,w,c
  9379  00287C  6E18               	movwf	fputs@c,c
  9380  00287E  5018               	movf	fputs@c,w,c
  9381  002880  B4D8               	btfsc	status,2,c
  9382  002882  0012               	return	
  9383  002884  D7E9               	goto	l5090
  9384  002886                     __end_of_fputs:
  9385                           	opt callstack 0
  9386                           
  9387 ;; *************** function _fputc *****************
  9388 ;; Defined at:
  9389 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  9390 ;; Parameters:    Size  Location     Type
  9391 ;;  c               2   10[COMRAM] int 
  9392 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  9393 ;;		 -> NULL(0), 
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;		None
  9396 ;; Return value:  Size  Location     Type
  9397 ;;                  2   10[COMRAM] int 
  9398 ;; Registers used:
  9399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/0
  9402 ;;		On exit  : 0/0
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9407 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9408 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9409 ;;Total ram usage:        9 bytes
  9410 ;; Hardware stack levels used:    1
  9411 ;; Hardware stack levels required when called:    6
  9412 ;; This function calls:
  9413 ;;		_putch
  9414 ;; This function is called by:
  9415 ;;		_pad
  9416 ;;		_stoa
  9417 ;;		_vfpfcnvrt
  9418 ;;		_fputs
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text45
  9423  0023CE                     __ptext45:
  9424                           	opt callstack 0
  9425  0023CE                     _fputc:
  9426                           	opt callstack 18
  9427                           
  9428                           ;incstack = 0
  9429  0023CE  500D               	movf	fputc@fp,w,c
  9430  0023D0  100E               	iorwf	fputc@fp+1,w,c
  9431  0023D2  B4D8               	btfsc	status,2,c
  9432  0023D4  D004               	goto	u5490
  9433  0023D6  500D               	movf	fputc@fp,w,c
  9434  0023D8  100E               	iorwf	fputc@fp+1,w,c
  9435  0023DA  A4D8               	btfss	status,2,c
  9436  0023DC  D004               	goto	l5080
  9437  0023DE                     u5490:
  9438  0023DE  500B               	movf	fputc@c,w,c
  9439  0023E0  ECD5  F015         	call	_putch
  9440  0023E4  0012               	return	
  9441  0023E6                     l5080:
  9442  0023E6  EE20 F004          	lfsr	2,4
  9443  0023EA  500D               	movf	fputc@fp,w,c
  9444  0023EC  26D9               	addwf	fsr2l,f,c
  9445  0023EE  500E               	movf	fputc@fp+1,w,c
  9446  0023F0  22DA               	addwfc	fsr2h,f,c
  9447  0023F2  50DE               	movf	postinc2,w,c
  9448  0023F4  10DE               	iorwf	postinc2,w,c
  9449  0023F6  B4D8               	btfsc	status,2,c
  9450  0023F8  D016               	goto	u5510
  9451  0023FA  EE20 F004          	lfsr	2,4
  9452  0023FE  500D               	movf	fputc@fp,w,c
  9453  002400  26D9               	addwf	fsr2l,f,c
  9454  002402  500E               	movf	fputc@fp+1,w,c
  9455  002404  22DA               	addwfc	fsr2h,f,c
  9456  002406  EE10 F002          	lfsr	1,2
  9457  00240A  500D               	movf	fputc@fp,w,c
  9458  00240C  26E1               	addwf	fsr1l,f,c
  9459  00240E  500E               	movf	fputc@fp+1,w,c
  9460  002410  22E2               	addwfc	fsr1h,f,c
  9461  002412  50DE               	movf	postinc2,w,c
  9462  002414  5CE6               	subwf	postinc1,w,c
  9463  002416  50E6               	movf	postinc1,w,c
  9464  002418  0A80               	xorlw	128
  9465  00241A  6E13               	movwf	(??_fputc+4)& (0+255),c
  9466  00241C  50DE               	movf	postinc2,w,c
  9467  00241E  0A80               	xorlw	128
  9468  002420  5813               	subwfb	(??_fputc+4)& (0+255),w,c
  9469  002422  B0D8               	btfsc	status,0,c
  9470  002424  0012               	return	
  9471  002426                     u5510:
  9472  002426  EE20 F002          	lfsr	2,2
  9473  00242A  500D               	movf	fputc@fp,w,c
  9474  00242C  26D9               	addwf	fsr2l,f,c
  9475  00242E  500E               	movf	fputc@fp+1,w,c
  9476  002430  22DA               	addwfc	fsr2h,f,c
  9477  002432  2ADE               	incf	postinc2,f,c
  9478  002434  0E00               	movlw	0
  9479  002436  22DD               	addwfc	postdec2,f,c
  9480  002438  0012               	return		;funcret
  9481  00243A                     __end_of_fputc:
  9482                           	opt callstack 0
  9483                           
  9484 ;; *************** function _putch *****************
  9485 ;; Defined at:
  9486 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  txData          1    wreg     unsigned char 
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;  txData          1    9[COMRAM] unsigned char 
  9491 ;; Return value:  Size  Location     Type
  9492 ;;                  1    wreg      void 
  9493 ;; Registers used:
  9494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9504 ;;Total ram usage:        1 bytes
  9505 ;; Hardware stack levels used:    1
  9506 ;; Hardware stack levels required when called:    5
  9507 ;; This function calls:
  9508 ;;		_EUSART1_Write
  9509 ;; This function is called by:
  9510 ;;		_fputc
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text46
  9515  002BAA                     __ptext46:
  9516                           	opt callstack 0
  9517  002BAA                     _putch:
  9518                           	opt callstack 18
  9519                           
  9520                           ;incstack = 0
  9521                           ;putch@txData stored from wreg
  9522  002BAA  6E0A               	movwf	putch@txData,c
  9523                           
  9524                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  9525  002BAC  500A               	movf	putch@txData,w,c
  9526  002BAE  EC43  F014         	call	_EUSART1_Write
  9527  002BB2  0012               	return		;funcret
  9528  002BB4                     __end_of_putch:
  9529                           	opt callstack 0
  9530                           
  9531 ;; *************** function _EUSART1_Write *****************
  9532 ;; Defined at:
  9533 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;  txData          1    wreg     unsigned char 
  9536 ;; Auto vars:     Size  Location     Type
  9537 ;;  txData          1    8[COMRAM] unsigned char 
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  1    wreg      void 
  9540 ;; Registers used:
  9541 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9551 ;;Total ram usage:        1 bytes
  9552 ;; Hardware stack levels used:    1
  9553 ;; Hardware stack levels required when called:    4
  9554 ;; This function calls:
  9555 ;;		Nothing
  9556 ;; This function is called by:
  9557 ;;		_putch
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text47
  9562  002886                     __ptext47:
  9563                           	opt callstack 0
  9564  002886                     _EUSART1_Write:
  9565                           	opt callstack 18
  9566                           
  9567                           ;incstack = 0
  9568                           ;EUSART1_Write@txData stored from wreg
  9569  002886  6E09               	movwf	EUSART1_Write@txData,c
  9570  002888                     
  9571                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  9572                           
  9573                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  9574  002888  5054               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  9575  00288A  B4D8               	btfsc	status,2,c
  9576  00288C  D7FD               	goto	l5054
  9577                           
  9578                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  9579  00288E  B89D               	btfsc	3997,4,c	;volatile
  9580  002890  D003               	goto	l100
  9581                           
  9582                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  9583  002892  C009  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9584                           
  9585                           ;mcc_generated_files/eusart1.c: 182:     }
  9586  002896  D010               	goto	l5070
  9587  002898                     l100:
  9588                           
  9589                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  9590  002898  989D               	bcf	3997,4,c	;volatile
  9591                           
  9592                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  9593  00289A  0E60               	movlw	low _eusart1TxBuffer
  9594  00289C  2456               	addwf	_eusart1TxHead,w,c	;volatile
  9595  00289E  6ED9               	movwf	fsr2l,c
  9596  0028A0  6ADA               	clrf	fsr2h,c
  9597  0028A2  0E00               	movlw	high _eusart1TxBuffer
  9598  0028A4  22DA               	addwfc	fsr2h,f,c
  9599  0028A6  C009  FFDF         	movff	EUSART1_Write@txData,indf2
  9600  0028AA  2A56               	incf	_eusart1TxHead,f,c	;volatile
  9601                           
  9602                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  9603  0028AC  0E07               	movlw	7
  9604  0028AE  6456               	cpfsgt	_eusart1TxHead,c	;volatile
  9605  0028B0  D002               	goto	l5068
  9606                           
  9607                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  9608  0028B2  0E00               	movlw	0
  9609  0028B4  6E56               	movwf	_eusart1TxHead,c	;volatile
  9610  0028B6                     l5068:
  9611                           
  9612                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  9613  0028B6  0654               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  9614  0028B8                     l5070:
  9615                           
  9616                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  9617  0028B8  889D               	bsf	3997,4,c	;volatile
  9618  0028BA  0012               	return		;funcret
  9619  0028BC                     __end_of_EUSART1_Write:
  9620                           	opt callstack 0
  9621                           
  9622 ;; *************** function _isprint *****************
  9623 ;; Defined at:
  9624 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isprint.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;  c               2    8[COMRAM] int 
  9627 ;; Auto vars:     Size  Location     Type
  9628 ;;		None
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  2    8[COMRAM] int 
  9631 ;; Registers used:
  9632 ;;		wreg, status,2, status,0
  9633 ;; Tracked objects:
  9634 ;;		On entry : 0/0
  9635 ;;		On exit  : 0/0
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9640 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9641 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9642 ;;Total ram usage:        6 bytes
  9643 ;; Hardware stack levels used:    1
  9644 ;; Hardware stack levels required when called:    4
  9645 ;; This function calls:
  9646 ;;		Nothing
  9647 ;; This function is called by:
  9648 ;;		_readline
  9649 ;; This function uses a non-reentrant model
  9650 ;;
  9651                           
  9652                           	psect	text48
  9653  00294E                     __ptext48:
  9654                           	opt callstack 0
  9655  00294E                     _isprint:
  9656                           	opt callstack 25
  9657                           
  9658                           ;incstack = 0
  9659  00294E  0EE0               	movlw	224
  9660  002950  6E0B               	movwf	??_isprint& (0+255),c
  9661  002952  0EFF               	movlw	255
  9662  002954  6E0C               	movwf	(??_isprint+1)& (0+255),c
  9663  002956  C009  F00D         	movff	isprint@c,??_isprint+2
  9664  00295A  C00A  F00E         	movff	isprint@c+1,??_isprint+3
  9665  00295E  500B               	movf	??_isprint,w,c
  9666  002960  260D               	addwf	??_isprint+2,f,c
  9667  002962  500C               	movf	??_isprint+1,w,c
  9668  002964  220E               	addwfc	??_isprint+3,f,c
  9669  002966  500E               	movf	??_isprint+3,w,c
  9670  002968  E106               	bnz	u4300
  9671  00296A  0E5F               	movlw	95
  9672  00296C  5C0D               	subwf	??_isprint+2,w,c
  9673  00296E  B0D8               	btfsc	status,0,c
  9674  002970  D002               	goto	u4300
  9675  002972  0E01               	movlw	1
  9676  002974  D001               	goto	u4310
  9677  002976                     u4300:
  9678  002976  0E00               	movlw	0
  9679  002978                     u4310:
  9680  002978  6E09               	movwf	?_isprint,c
  9681  00297A  6A0A               	clrf	?_isprint+1,c
  9682  00297C  0012               	return		;funcret
  9683  00297E                     __end_of_isprint:
  9684                           	opt callstack 0
  9685                           
  9686 ;; *************** function _isgraph *****************
  9687 ;; Defined at:
  9688 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isgraph.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;  c               2    8[COMRAM] int 
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;		None
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  2    8[COMRAM] int 
  9695 ;; Registers used:
  9696 ;;		wreg, status,2, status,0
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9704 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9705 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9706 ;;Total ram usage:        6 bytes
  9707 ;; Hardware stack levels used:    1
  9708 ;; Hardware stack levels required when called:    4
  9709 ;; This function calls:
  9710 ;;		Nothing
  9711 ;; This function is called by:
  9712 ;;		_readline
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text49
  9717  00297E                     __ptext49:
  9718                           	opt callstack 0
  9719  00297E                     _isgraph:
  9720                           	opt callstack 25
  9721                           
  9722                           ;incstack = 0
  9723  00297E  0EDF               	movlw	223
  9724  002980  6E0B               	movwf	??_isgraph& (0+255),c
  9725  002982  0EFF               	movlw	255
  9726  002984  6E0C               	movwf	(??_isgraph+1)& (0+255),c
  9727  002986  C009  F00D         	movff	isgraph@c,??_isgraph+2
  9728  00298A  C00A  F00E         	movff	isgraph@c+1,??_isgraph+3
  9729  00298E  500B               	movf	??_isgraph,w,c
  9730  002990  260D               	addwf	??_isgraph+2,f,c
  9731  002992  500C               	movf	??_isgraph+1,w,c
  9732  002994  220E               	addwfc	??_isgraph+3,f,c
  9733  002996  500E               	movf	??_isgraph+3,w,c
  9734  002998  E106               	bnz	u4320
  9735  00299A  0E5E               	movlw	94
  9736  00299C  5C0D               	subwf	??_isgraph+2,w,c
  9737  00299E  B0D8               	btfsc	status,0,c
  9738  0029A0  D002               	goto	u4320
  9739  0029A2  0E01               	movlw	1
  9740  0029A4  D001               	goto	u4330
  9741  0029A6                     u4320:
  9742  0029A6  0E00               	movlw	0
  9743  0029A8                     u4330:
  9744  0029A8  6E09               	movwf	?_isgraph,c
  9745  0029AA  6A0A               	clrf	?_isgraph+1,c
  9746  0029AC  0012               	return		;funcret
  9747  0029AE                     __end_of_isgraph:
  9748                           	opt callstack 0
  9749                           
  9750 ;; *************** function _EUSART1_Read *****************
  9751 ;; Defined at:
  9752 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;		None
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;  readValue       1    8[COMRAM] unsigned char 
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  1    wreg      unsigned char 
  9759 ;; Registers used:
  9760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/0
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;Total ram usage:        1 bytes
  9771 ;; Hardware stack levels used:    1
  9772 ;; Hardware stack levels required when called:    4
  9773 ;; This function calls:
  9774 ;;		Nothing
  9775 ;; This function is called by:
  9776 ;;		_temperature_monitor
  9777 ;;		_main
  9778 ;;		_readline
  9779 ;;		_getch
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           	psect	text50
  9784  002810                     __ptext50:
  9785                           	opt callstack 0
  9786  002810                     _EUSART1_Read:
  9787                           	opt callstack 24
  9788                           
  9789                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  9790                           
  9791                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  9792                           
  9793                           ;incstack = 0
  9794  002810  5051               	movf	_eusart1RxCount,w,c	;volatile
  9795  002812  B4D8               	btfsc	status,2,c
  9796  002814  D7FD               	goto	_EUSART1_Read
  9797                           
  9798                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  9799  002816  0E80               	movlw	low _eusart1RxStatusBuffer
  9800  002818  2452               	addwf	_eusart1RxTail,w,c	;volatile
  9801  00281A  6ED9               	movwf	fsr2l,c
  9802  00281C  6ADA               	clrf	fsr2h,c
  9803  00281E  0E03               	movlw	high _eusart1RxStatusBuffer
  9804  002820  22DA               	addwfc	fsr2h,f,c
  9805  002822  50DF               	movf	indf2,w,c
  9806  002824  0100               	movlb	0	; () banked
  9807  002826  6F84               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  9808                           
  9809                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  9810  002828  0EC0               	movlw	low _eusart1RxBuffer
  9811  00282A  2452               	addwf	_eusart1RxTail,w,c	;volatile
  9812  00282C  6ED9               	movwf	fsr2l,c
  9813  00282E  6ADA               	clrf	fsr2h,c
  9814  002830  0E03               	movlw	high _eusart1RxBuffer
  9815  002832  22DA               	addwfc	fsr2h,f,c
  9816  002834  50DF               	movf	indf2,w,c
  9817  002836  6E09               	movwf	EUSART1_Read@readValue,c
  9818                           
  9819                           ; BSR set to: 0
  9820  002838  2A52               	incf	_eusart1RxTail,f,c	;volatile
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  9824  00283A  0E3F               	movlw	63
  9825  00283C  6452               	cpfsgt	_eusart1RxTail,c	;volatile
  9826  00283E  D002               	goto	l5910
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  9830  002840  0E00               	movlw	0
  9831  002842  6E52               	movwf	_eusart1RxTail,c	;volatile
  9832  002844                     l5910:
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;mcc_generated_files/eusart1.c: 166:     PIE1bits.RC1IE = 0;
  9836  002844  9A9D               	bcf	3997,5,c	;volatile
  9837                           
  9838                           ; BSR set to: 0
  9839                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  9840  002846  0651               	decf	_eusart1RxCount,f,c	;volatile
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;mcc_generated_files/eusart1.c: 168:     PIE1bits.RC1IE = 1;
  9844  002848  8A9D               	bsf	3997,5,c	;volatile
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  9848  00284A  5009               	movf	EUSART1_Read@readValue,w,c
  9849                           
  9850                           ; BSR set to: 0
  9851  00284C  0012               	return		;funcret
  9852  00284E                     __end_of_EUSART1_Read:
  9853                           	opt callstack 0
  9854                           
  9855 ;; *************** function _login *****************
  9856 ;; Defined at:
  9857 ;;		line 40 in file "auth.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;  username        2   17[COMRAM] PTR unsigned char 
  9860 ;;		 -> authentication@username(64), 
  9861 ;;  password        2   19[COMRAM] PTR unsigned char 
  9862 ;;		 -> authentication@password(64), 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;		None
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      _Bool 
  9867 ;; Registers used:
  9868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;Total ram usage:        4 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:    6
  9881 ;; This function calls:
  9882 ;;		_validate
  9883 ;; This function is called by:
  9884 ;;		_authentication
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888                           	psect	text51
  9889  0029AE                     __ptext51:
  9890                           	opt callstack 0
  9891  0029AE                     _login:
  9892                           	opt callstack 23
  9893                           
  9894                           ;auth.c: 41:     if (validate(username, password)) {
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;incstack = 0
  9898  0029AE  C012  F00E         	movff	login@username,validate@username
  9899  0029B2  C013  F00F         	movff	login@username+1,validate@username+1
  9900  0029B6  C014  F010         	movff	login@password,validate@password
  9901  0029BA  C015  F011         	movff	login@password+1,validate@password+1
  9902  0029BE  ECC9  F013         	call	_validate	;wreg free
  9903  0029C2  0900               	iorlw	0
  9904  0029C4  B4D8               	btfsc	status,2,c
  9905  0029C6  D009               	goto	l6202
  9906                           
  9907                           ;auth.c: 42:         __username = username;
  9908  0029C8  C012  F074         	movff	login@username,___username
  9909  0029CC  C013  F075         	movff	login@username+1,___username+1
  9910                           
  9911                           ;auth.c: 43:         __authorized = 1;
  9912  0029D0  0E01               	movlw	1
  9913  0029D2  0100               	movlb	0	; () banked
  9914  0029D4  6F83               	movwf	___authorized& (0+255),b
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;auth.c: 45:         return 1;
  9918  0029D6  0E01               	movlw	1
  9919  0029D8  0012               	return	
  9920  0029DA                     l6202:
  9921                           
  9922                           ;auth.c: 48:     return 0;
  9923  0029DA  0E00               	movlw	0
  9924  0029DC  0012               	return		;funcret
  9925  0029DE                     __end_of_login:
  9926                           	opt callstack 0
  9927                           
  9928 ;; *************** function _validate *****************
  9929 ;; Defined at:
  9930 ;;		line 32 in file "auth.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;  username        2   13[COMRAM] PTR unsigned char 
  9933 ;;		 -> authentication@username(64), 
  9934 ;;  password        2   15[COMRAM] PTR unsigned char 
  9935 ;;		 -> authentication@password(64), 
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;		None
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      _Bool 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9950 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9951 ;;Total ram usage:        4 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:    5
  9954 ;; This function calls:
  9955 ;;		_strcmp
  9956 ;; This function is called by:
  9957 ;;		_login
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text52
  9962  002792                     __ptext52:
  9963                           	opt callstack 0
  9964  002792                     _validate:
  9965                           	opt callstack 23
  9966                           
  9967                           ;auth.c: 33:     if (strcmp(username, USER_NAME) == 0 && strcmp(password, USER_PASS) == 
      +                          0) {
  9968                           
  9969                           ;incstack = 0
  9970  002792  C00E  F009         	movff	validate@username,strcmp@l
  9971  002796  C00F  F00A         	movff	validate@username+1,strcmp@l+1
  9972  00279A  0E9A               	movlw	low STR_54
  9973  00279C  6E0B               	movwf	strcmp@r,c
  9974  00279E  0EFF               	movlw	high STR_54
  9975  0027A0  6E0C               	movwf	strcmp@r+1,c
  9976  0027A2  EC1D  F012         	call	_strcmp	;wreg free
  9977  0027A6  5009               	movf	?_strcmp,w,c
  9978  0027A8  100A               	iorwf	?_strcmp+1,w,c
  9979  0027AA  A4D8               	btfss	status,2,c
  9980  0027AC  D010               	goto	l5998
  9981  0027AE  C010  F009         	movff	validate@password,strcmp@l
  9982  0027B2  C011  F00A         	movff	validate@password+1,strcmp@l+1
  9983  0027B6  0EB6               	movlw	low STR_55
  9984  0027B8  6E0B               	movwf	strcmp@r,c
  9985  0027BA  0EFF               	movlw	high STR_55
  9986  0027BC  6E0C               	movwf	strcmp@r+1,c
  9987  0027BE  EC1D  F012         	call	_strcmp	;wreg free
  9988  0027C2  5009               	movf	?_strcmp,w,c
  9989  0027C4  100A               	iorwf	?_strcmp+1,w,c
  9990  0027C6  A4D8               	btfss	status,2,c
  9991  0027C8  D002               	goto	l5998
  9992                           
  9993                           ;auth.c: 34:         return 1;
  9994  0027CA  0E01               	movlw	1
  9995  0027CC  0012               	return	
  9996  0027CE                     l5998:
  9997                           
  9998                           ;auth.c: 37:     return 0;
  9999  0027CE  0E00               	movlw	0
 10000  0027D0  0012               	return		;funcret
 10001  0027D2                     __end_of_validate:
 10002                           	opt callstack 0
 10003                           
 10004 ;; *************** function _strcmp *****************
 10005 ;; Defined at:
 10006 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcmp.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;  l               2    8[COMRAM] PTR const unsigned char 
 10009 ;;		 -> NULL(0), main@input(64), authentication@password(64), authentication@username(64), 
 10010 ;;  r               2   10[COMRAM] PTR const unsigned char 
 10011 ;;		 -> STR_55(8), STR_54(10), STR_52(5), STR_51(7), 
 10012 ;;		 -> STR_50(6), STR_49(12), STR_48(5), STR_20(7), 
 10013 ;;		 -> STR_18(5), STR_16(6), STR_13(12), STR_12(4), 
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;		None
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  2    8[COMRAM] int 
 10018 ;; Registers used:
 10019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10028 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10029 ;;Total ram usage:        5 bytes
 10030 ;; Hardware stack levels used:    1
 10031 ;; Hardware stack levels required when called:    4
 10032 ;; This function calls:
 10033 ;;		Nothing
 10034 ;; This function is called by:
 10035 ;;		_timer_control
 10036 ;;		_main
 10037 ;;		_validate
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           	psect	text53
 10042  00243A                     __ptext53:
 10043                           	opt callstack 0
 10044  00243A                     _strcmp:
 10045                           	opt callstack 25
 10046                           
 10047                           ;incstack = 0
 10048  00243A  D004               	goto	l5594
 10049  00243C                     l5592:
 10050  00243C  4A09               	infsnz	strcmp@l,f,c
 10051  00243E  2A0A               	incf	strcmp@l+1,f,c
 10052  002440  4A0B               	infsnz	strcmp@r,f,c
 10053  002442  2A0C               	incf	strcmp@r+1,f,c
 10054  002444                     l5594:
 10055  002444  C009  FFD9         	movff	strcmp@l,fsr2l
 10056  002448  C00A  FFDA         	movff	strcmp@l+1,fsr2h
 10057  00244C  50DF               	movf	indf2,w,c
 10058  00244E  6E0D               	movwf	??_strcmp& (0+255),c
 10059  002450  C00B  FFF6         	movff	strcmp@r,tblptrl
 10060  002454  C00C  FFF7         	movff	strcmp@r+1,tblptrh
 10061  002458                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10062  002458  6AF8               	clrf	tblptru,c
 10063  00245A                     	endif
 10064  00245A                     	if	0	;tblptru may be non-zero
 10065  00245A                     	endif
 10066  00245A  0008               	tblrd		*
 10067  00245C  50F5               	movf	tablat,w,c
 10068  00245E  180D               	xorwf	??_strcmp,w,c
 10069  002460  A4D8               	btfss	status,2,c
 10070  002462  D007               	goto	u6450
 10071  002464  C009  FFD9         	movff	strcmp@l,fsr2l
 10072  002468  C00A  FFDA         	movff	strcmp@l+1,fsr2h
 10073  00246C  50DF               	movf	indf2,w,c
 10074  00246E  A4D8               	btfss	status,2,c
 10075  002470  D7E5               	goto	l5592
 10076  002472                     u6450:
 10077  002472  C009  FFD9         	movff	strcmp@l,fsr2l
 10078  002476  C00A  FFDA         	movff	strcmp@l+1,fsr2h
 10079  00247A  50DF               	movf	indf2,w,c
 10080  00247C  6E0D               	movwf	??_strcmp& (0+255),c
 10081  00247E  C00B  FFF6         	movff	strcmp@r,tblptrl
 10082  002482  C00C  FFF7         	movff	strcmp@r+1,tblptrh
 10083  002486                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10084  002486  6AF8               	clrf	tblptru,c
 10085  002488                     	endif
 10086  002488                     	if	0	;tblptru may be non-zero
 10087  002488                     	endif
 10088  002488  0008               	tblrd		*
 10089  00248A  50F5               	movf	tablat,w,c
 10090  00248C  5C0D               	subwf	??_strcmp,w,c
 10091  00248E  6E09               	movwf	?_strcmp,c
 10092  002490  6A0A               	clrf	?_strcmp+1,c
 10093  002492  A0D8               	btfss	status,0,c
 10094  002494  060A               	decf	?_strcmp+1,f,c
 10095  002496  0012               	return		;funcret
 10096  002498                     __end_of_strcmp:
 10097                           	opt callstack 0
 10098                           
 10099 ;; *************** function _isauthorized *****************
 10100 ;; Defined at:
 10101 ;;		line 28 in file "auth.c"
 10102 ;; Parameters:    Size  Location     Type
 10103 ;;		None
 10104 ;; Auto vars:     Size  Location     Type
 10105 ;;		None
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  1    wreg      _Bool 
 10108 ;; Registers used:
 10109 ;;		wreg, status,2
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10119 ;;Total ram usage:        0 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:    4
 10122 ;; This function calls:
 10123 ;;		Nothing
 10124 ;; This function is called by:
 10125 ;;		_authentication
 10126 ;;		_main
 10127 ;; This function uses a non-reentrant model
 10128 ;;
 10129                           
 10130                           	psect	text54
 10131  002C0C                     __ptext54:
 10132                           	opt callstack 0
 10133  002C0C                     _isauthorized:
 10134                           	opt callstack 26
 10135                           
 10136                           ;auth.c: 29:     return __authorized;
 10137                           
 10138                           ;incstack = 0
 10139  002C0C  0100               	movlb	0	; () banked
 10140  002C0E  5183               	movf	___authorized& (0+255),w,b
 10141                           
 10142                           ; BSR set to: 0
 10143  002C10  0012               	return		;funcret
 10144  002C12                     __end_of_isauthorized:
 10145                           	opt callstack 0
 10146                           
 10147 ;; *************** function _SYSTEM_Initialize *****************
 10148 ;; Defined at:
 10149 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;		None
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;		None
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  1    wreg      void 
 10156 ;; Registers used:
 10157 ;;		wreg, status,2, status,0, cstack
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10167 ;;Total ram usage:        0 bytes
 10168 ;; Hardware stack levels used:    1
 10169 ;; Hardware stack levels required when called:    6
 10170 ;; This function calls:
 10171 ;;		_ADC_Initialize
 10172 ;;		_EUSART1_Initialize
 10173 ;;		_FVR_Initialize
 10174 ;;		_INTERRUPT_Initialize
 10175 ;;		_OSCILLATOR_Initialize
 10176 ;;		_PIN_MANAGER_Initialize
 10177 ;;		_TMR2_Initialize
 10178 ;; This function is called by:
 10179 ;;		_main
 10180 ;; This function uses a non-reentrant model
 10181 ;;
 10182                           
 10183                           	psect	text55
 10184  002B20                     __ptext55:
 10185                           	opt callstack 0
 10186  002B20                     _SYSTEM_Initialize:
 10187                           	opt callstack 24
 10188                           
 10189                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 10190                           
 10191                           ; BSR set to: 0
 10192                           ;incstack = 0
 10193  002B20  EC11  F016         	call	_INTERRUPT_Initialize	;wreg free
 10194                           
 10195                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10196  002B24  EC1D  F015         	call	_PIN_MANAGER_Initialize	;wreg free
 10197                           
 10198                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10199  002B28  ECB9  F015         	call	_OSCILLATOR_Initialize	;wreg free
 10200                           
 10201                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 10202  002B2C  ECFC  F015         	call	_FVR_Initialize	;wreg free
 10203                           
 10204                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 10205  002B30  EC9F  F015         	call	_TMR2_Initialize	;wreg free
 10206                           
 10207                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
 10208  002B34  ECAD  F015         	call	_ADC_Initialize	;wreg free
 10209                           
 10210                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
 10211  002B38  EC74  F011         	call	_EUSART1_Initialize	;wreg free
 10212  002B3C  0012               	return		;funcret
 10213  002B3E                     __end_of_SYSTEM_Initialize:
 10214                           	opt callstack 0
 10215                           
 10216 ;; *************** function _TMR2_Initialize *****************
 10217 ;; Defined at:
 10218 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;		None
 10221 ;; Auto vars:     Size  Location     Type
 10222 ;;		None
 10223 ;; Return value:  Size  Location     Type
 10224 ;;                  1    wreg      void 
 10225 ;; Registers used:
 10226 ;;		wreg, status,2, status,0, cstack
 10227 ;; Tracked objects:
 10228 ;;		On entry : 0/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;Total ram usage:        0 bytes
 10237 ;; Hardware stack levels used:    1
 10238 ;; Hardware stack levels required when called:    5
 10239 ;; This function calls:
 10240 ;;		_TMR2_SetInterruptHandler
 10241 ;; This function is called by:
 10242 ;;		_SYSTEM_Initialize
 10243 ;;		_main
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           	psect	text56
 10248  002B3E                     __ptext56:
 10249                           	opt callstack 0
 10250  002B3E                     _TMR2_Initialize:
 10251                           	opt callstack 25
 10252                           
 10253                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xFF;
 10254                           
 10255                           ;incstack = 0
 10256  002B3E  68BB               	setf	4027,c	;volatile
 10257                           
 10258                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 10259  002B40  0E00               	movlw	0
 10260  002B42  6EBC               	movwf	4028,c	;volatile
 10261                           
 10262                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 10263  002B44  929E               	bcf	3998,1,c	;volatile
 10264                           
 10265                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 10266  002B46  829D               	bsf	3997,1,c	;volatile
 10267                           
 10268                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 10269  002B48  0E2E               	movlw	low _TMR2_DefaultInterruptHandler
 10270  002B4A  6E09               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
 10271  002B4C  0E2C               	movlw	high _TMR2_DefaultInterruptHandler
 10272  002B4E  6E0A               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
 10273  002B50  ECDA  F015         	call	_TMR2_SetInterruptHandler	;wreg free
 10274                           
 10275                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7E;
 10276  002B54  0E7E               	movlw	126
 10277  002B56  6EBA               	movwf	4026,c	;volatile
 10278  002B58  0012               	return		;funcret
 10279  002B5A                     __end_of_TMR2_Initialize:
 10280                           	opt callstack 0
 10281                           
 10282 ;; *************** function _TMR2_SetInterruptHandler *****************
 10283 ;; Defined at:
 10284 ;;		line 132 in file "mcc_generated_files/tmr2.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  InterruptHan    2    8[COMRAM] PTR FTN()void 
 10287 ;;		 -> timer_interrupt(1), TMR2_DefaultInterruptHandler(1), 
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;		None
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  1    wreg      void 
 10292 ;; Registers used:
 10293 ;;		wreg, status,2, status,0
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;Total ram usage:        2 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:    4
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_TMR2_Initialize
 10310 ;;		_main
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           	psect	text57
 10315  002BB4                     __ptext57:
 10316                           	opt callstack 0
 10317  002BB4                     _TMR2_SetInterruptHandler:
 10318                           	opt callstack 26
 10319                           
 10320                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
 10321                           
 10322                           ;incstack = 0
 10323  002BB4  C009  F076         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 10324  002BB8  C00A  F077         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 10325  002BBC  0012               	return		;funcret
 10326  002BBE                     __end_of_TMR2_SetInterruptHandler:
 10327                           	opt callstack 0
 10328                           
 10329 ;; *************** function _PIN_MANAGER_Initialize *****************
 10330 ;; Defined at:
 10331 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;		None
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      void 
 10338 ;; Registers used:
 10339 ;;		wreg, status,2
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10349 ;;Total ram usage:        0 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; Hardware stack levels required when called:    4
 10352 ;; This function calls:
 10353 ;;		Nothing
 10354 ;; This function is called by:
 10355 ;;		_SYSTEM_Initialize
 10356 ;; This function uses a non-reentrant model
 10357 ;;
 10358                           
 10359                           	psect	text58
 10360  002A3A                     __ptext58:
 10361                           	opt callstack 0
 10362  002A3A                     _PIN_MANAGER_Initialize:
 10363                           	opt callstack 25
 10364                           
 10365                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 10366                           
 10367                           ;incstack = 0
 10368  002A3A  0E00               	movlw	0
 10369  002A3C  6E89               	movwf	3977,c	;volatile
 10370                           
 10371                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0xFF;
 10372  002A3E  688A               	setf	3978,c	;volatile
 10373                           
 10374                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 10375  002A40  0E00               	movlw	0
 10376  002A42  6E8B               	movwf	3979,c	;volatile
 10377                           
 10378                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFD;
 10379  002A44  0EFD               	movlw	253
 10380  002A46  6E92               	movwf	3986,c	;volatile
 10381                           
 10382                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x00;
 10383  002A48  0E00               	movlw	0
 10384  002A4A  6E93               	movwf	3987,c	;volatile
 10385                           
 10386                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xB3;
 10387  002A4C  0EB3               	movlw	179
 10388  002A4E  6E94               	movwf	3988,c	;volatile
 10389                           
 10390                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x30;
 10391  002A50  0E30               	movlw	48
 10392  002A52  010F               	movlb	15	; () banked
 10393  002A54  6F3A               	movwf	58,b	;volatile
 10394                           
 10395                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
 10396  002A56  0E00               	movlw	0
 10397  002A58  6F39               	movwf	57,b	;volatile
 10398                           
 10399                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2D;
 10400  002A5A  0E2D               	movlw	45
 10401  002A5C  6F38               	movwf	56,b	;volatile
 10402                           
 10403                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 10404  002A5E  0E00               	movlw	0
 10405  002A60  6E61               	movwf	3937,c	;volatile
 10406                           
 10407                           ; BSR set to: 15
 10408                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
 10409  002A62  8EF1               	bsf	4081,7,c	;volatile
 10410                           
 10411                           ; BSR set to: 15
 10412  002A64  0012               	return		;funcret
 10413  002A66                     __end_of_PIN_MANAGER_Initialize:
 10414                           	opt callstack 0
 10415                           
 10416 ;; *************** function _OSCILLATOR_Initialize *****************
 10417 ;; Defined at:
 10418 ;;		line 62 in file "mcc_generated_files/mcc.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;		None
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;		None
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      void 
 10425 ;; Registers used:
 10426 ;;		wreg, status,2
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10436 ;;Total ram usage:        0 bytes
 10437 ;; Hardware stack levels used:    1
 10438 ;; Hardware stack levels required when called:    4
 10439 ;; This function calls:
 10440 ;;		Nothing
 10441 ;; This function is called by:
 10442 ;;		_SYSTEM_Initialize
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445                           
 10446                           	psect	text59
 10447  002B72                     __ptext59:
 10448                           	opt callstack 0
 10449  002B72                     _OSCILLATOR_Initialize:
 10450                           	opt callstack 25
 10451                           
 10452                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
 10453                           
 10454                           ; BSR set to: 15
 10455                           ;incstack = 0
 10456  002B72  0E70               	movlw	112
 10457  002B74  6ED3               	movwf	4051,c	;volatile
 10458                           
 10459                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
 10460  002B76  0E04               	movlw	4
 10461  002B78  6ED2               	movwf	4050,c	;volatile
 10462                           
 10463                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x40;
 10464  002B7A  0E40               	movlw	64
 10465  002B7C  6E9B               	movwf	3995,c	;volatile
 10466  002B7E                     l212:
 10467                           
 10468                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
 10469  002B7E  BED2               	btfsc	4050,7,c	;volatile
 10470  002B80  0012               	return	
 10471  002B82  D7FD               	goto	l212
 10472  002B84                     __end_of_OSCILLATOR_Initialize:
 10473                           	opt callstack 0
 10474                           
 10475 ;; *************** function _INTERRUPT_Initialize *****************
 10476 ;; Defined at:
 10477 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;		None
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;		None
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  1    wreg      void 
 10484 ;; Registers used:
 10485 ;;		None
 10486 ;; Tracked objects:
 10487 ;;		On entry : 0/0
 10488 ;;		On exit  : 0/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10495 ;;Total ram usage:        0 bytes
 10496 ;; Hardware stack levels used:    1
 10497 ;; Hardware stack levels required when called:    4
 10498 ;; This function calls:
 10499 ;;		Nothing
 10500 ;; This function is called by:
 10501 ;;		_SYSTEM_Initialize
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           	psect	text60
 10506  002C22                     __ptext60:
 10507                           	opt callstack 0
 10508  002C22                     _INTERRUPT_Initialize:
 10509                           	opt callstack 25
 10510                           
 10511                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 10512                           
 10513                           ;incstack = 0
 10514  002C22  9ED0               	bcf	4048,7,c	;volatile
 10515  002C24  0012               	return		;funcret
 10516  002C26                     __end_of_INTERRUPT_Initialize:
 10517                           	opt callstack 0
 10518                           
 10519 ;; *************** function _FVR_Initialize *****************
 10520 ;; Defined at:
 10521 ;;		line 58 in file "mcc_generated_files/fvr.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;		None
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;		None
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  1    wreg      void 
 10528 ;; Registers used:
 10529 ;;		wreg, status,2
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10539 ;;Total ram usage:        0 bytes
 10540 ;; Hardware stack levels used:    1
 10541 ;; Hardware stack levels required when called:    4
 10542 ;; This function calls:
 10543 ;;		Nothing
 10544 ;; This function is called by:
 10545 ;;		_SYSTEM_Initialize
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           	psect	text61
 10550  002BF8                     __ptext61:
 10551                           	opt callstack 0
 10552  002BF8                     _FVR_Initialize:
 10553                           	opt callstack 25
 10554                           
 10555                           ;mcc_generated_files/fvr.c: 61:     VREFCON0 = 0x90;
 10556                           
 10557                           ;incstack = 0
 10558  002BF8  0E90               	movlw	144
 10559  002BFA  010F               	movlb	15	; () banked
 10560  002BFC  6F42               	movwf	66,b	;volatile
 10561                           
 10562                           ; BSR set to: 15
 10563  002BFE  0012               	return		;funcret
 10564  002C00                     __end_of_FVR_Initialize:
 10565                           	opt callstack 0
 10566                           
 10567 ;; *************** function _EUSART1_Initialize *****************
 10568 ;; Defined at:
 10569 ;;		line 88 in file "mcc_generated_files/eusart1.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;		None
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;		None
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      void 
 10576 ;; Registers used:
 10577 ;;		wreg, status,2, status,0, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10587 ;;Total ram usage:        0 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    5
 10590 ;; This function calls:
 10591 ;;		_EUSART1_SetErrorHandler
 10592 ;;		_EUSART1_SetFramingErrorHandler
 10593 ;;		_EUSART1_SetOverrunErrorHandler
 10594 ;;		_EUSART1_SetRxInterruptHandler
 10595 ;;		_EUSART1_SetTxInterruptHandler
 10596 ;; This function is called by:
 10597 ;;		_SYSTEM_Initialize
 10598 ;;		_main
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text62
 10603  0022E8                     __ptext62:
 10604                           	opt callstack 0
 10605  0022E8                     _EUSART1_Initialize:
 10606                           	opt callstack 24
 10607                           
 10608                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
 10609                           
 10610                           ; BSR set to: 15
 10611                           ;incstack = 0
 10612  0022E8  9A9D               	bcf	3997,5,c	;volatile
 10613                           
 10614                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 10615  0022EA  0EA4               	movlw	low _EUSART1_Receive_ISR
 10616  0022EC  6E09               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
 10617  0022EE  0E20               	movlw	high _EUSART1_Receive_ISR
 10618  0022F0  6E0A               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
 10619  0022F2  ECE4  F015         	call	_EUSART1_SetRxInterruptHandler	;wreg free
 10620                           
 10621                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
 10622  0022F6  989D               	bcf	3997,4,c	;volatile
 10623                           
 10624                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
 10625  0022F8  0E66               	movlw	low _EUSART1_Transmit_ISR
 10626  0022FA  6E09               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
 10627  0022FC  0E2A               	movlw	high _EUSART1_Transmit_ISR
 10628  0022FE  6E0A               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
 10629  002300  ECDF  F015         	call	_EUSART1_SetTxInterruptHandler	;wreg free
 10630                           
 10631                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
 10632  002304  0E08               	movlw	8
 10633  002306  6EB8               	movwf	4024,c	;volatile
 10634                           
 10635                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
 10636  002308  0E90               	movlw	144
 10637  00230A  6EAB               	movwf	4011,c	;volatile
 10638                           
 10639                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
 10640  00230C  0E24               	movlw	36
 10641  00230E  6EAC               	movwf	4012,c	;volatile
 10642                           
 10643                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
 10644  002310  0E8A               	movlw	138
 10645  002312  6EAF               	movwf	4015,c	;volatile
 10646                           
 10647                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
 10648  002314  0E00               	movlw	0
 10649  002316  6EB0               	movwf	4016,c	;volatile
 10650                           
 10651                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 10652  002318  0E30               	movlw	low _EUSART1_DefaultFramingErrorHandler
 10653  00231A  6E09               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
 10654  00231C  0E2C               	movlw	high _EUSART1_DefaultFramingErrorHandler
 10655  00231E  6E0A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
 10656  002320  ECEE  F015         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 10657                           
 10658                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 10659  002324  0E12               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 10660  002326  6E09               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
 10661  002328  0E2C               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 10662  00232A  6E0A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
 10663  00232C  ECE9  F015         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 10664                           
 10665                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 10666  002330  0E18               	movlw	low _EUSART1_DefaultErrorHandler
 10667  002332  6E09               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
 10668  002334  0E2C               	movlw	high _EUSART1_DefaultErrorHandler
 10669  002336  6E0A               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
 10670  002338  ECF3  F015         	call	_EUSART1_SetErrorHandler	;wreg free
 10671                           
 10672                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
 10673  00233C  0E00               	movlw	0
 10674  00233E  0100               	movlb	0	; () banked
 10675  002340  6F84               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 10676                           
 10677                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
 10678  002342  0E00               	movlw	0
 10679  002344  6E56               	movwf	_eusart1TxHead,c	;volatile
 10680                           
 10681                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
 10682  002346  0E00               	movlw	0
 10683  002348  6E55               	movwf	_eusart1TxTail,c	;volatile
 10684                           
 10685                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
 10686  00234A  0E08               	movlw	8
 10687  00234C  6E54               	movwf	_eusart1TxBufferRemaining,c	;volatile
 10688                           
 10689                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
 10690  00234E  0E00               	movlw	0
 10691  002350  6E53               	movwf	_eusart1RxHead,c	;volatile
 10692                           
 10693                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
 10694  002352  0E00               	movlw	0
 10695  002354  6E52               	movwf	_eusart1RxTail,c	;volatile
 10696                           
 10697                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
 10698  002356  0E00               	movlw	0
 10699  002358  6E51               	movwf	_eusart1RxCount,c	;volatile
 10700                           
 10701                           ; BSR set to: 0
 10702                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
 10703  00235A  8A9D               	bsf	3997,5,c	;volatile
 10704                           
 10705                           ; BSR set to: 0
 10706  00235C  0012               	return		;funcret
 10707  00235E                     __end_of_EUSART1_Initialize:
 10708                           	opt callstack 0
 10709                           
 10710 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
 10711 ;; Defined at:
 10712 ;;		line 285 in file "mcc_generated_files/eusart1.c"
 10713 ;; Parameters:    Size  Location     Type
 10714 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
 10715 ;;		 -> EUSART1_Transmit_ISR(1), 
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;		None
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  1    wreg      void 
 10720 ;; Registers used:
 10721 ;;		wreg, status,2, status,0
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10731 ;;Total ram usage:        2 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; Hardware stack levels required when called:    4
 10734 ;; This function calls:
 10735 ;;		Nothing
 10736 ;; This function is called by:
 10737 ;;		_EUSART1_Initialize
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           	psect	text63
 10742  002BBE                     __ptext63:
 10743                           	opt callstack 0
 10744  002BBE                     _EUSART1_SetTxInterruptHandler:
 10745                           	opt callstack 24
 10746                           
 10747                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;incstack = 0
 10751  002BBE  C009  F080         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
 10752  002BC2  C00A  F081         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
 10753  002BC6  0012               	return		;funcret
 10754  002BC8                     __end_of_EUSART1_SetTxInterruptHandler:
 10755                           	opt callstack 0
 10756                           
 10757 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 10758 ;; Defined at:
 10759 ;;		line 289 in file "mcc_generated_files/eusart1.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
 10762 ;;		 -> EUSART1_Receive_ISR(1), 
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;		None
 10765 ;; Return value:  Size  Location     Type
 10766 ;;                  1    wreg      void 
 10767 ;; Registers used:
 10768 ;;		wreg, status,2, status,0
 10769 ;; Tracked objects:
 10770 ;;		On entry : 0/0
 10771 ;;		On exit  : 0/0
 10772 ;;		Unchanged: 0/0
 10773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10778 ;;Total ram usage:        2 bytes
 10779 ;; Hardware stack levels used:    1
 10780 ;; Hardware stack levels required when called:    4
 10781 ;; This function calls:
 10782 ;;		Nothing
 10783 ;; This function is called by:
 10784 ;;		_EUSART1_Initialize
 10785 ;; This function uses a non-reentrant model
 10786 ;;
 10787                           
 10788                           	psect	text64
 10789  002BC8                     __ptext64:
 10790                           	opt callstack 0
 10791  002BC8                     _EUSART1_SetRxInterruptHandler:
 10792                           	opt callstack 24
 10793                           
 10794                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 10795                           
 10796                           ;incstack = 0
 10797  002BC8  C009  F07E         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
 10798  002BCC  C00A  F07F         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
 10799  002BD0  0012               	return		;funcret
 10800  002BD2                     __end_of_EUSART1_SetRxInterruptHandler:
 10801                           	opt callstack 0
 10802                           
 10803 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 10804 ;; Defined at:
 10805 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
 10808 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;		None
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      void 
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10824 ;;Total ram usage:        2 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:    4
 10827 ;; This function calls:
 10828 ;;		Nothing
 10829 ;; This function is called by:
 10830 ;;		_EUSART1_Initialize
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           	psect	text65
 10835  002BD2                     __ptext65:
 10836                           	opt callstack 0
 10837  002BD2                     _EUSART1_SetOverrunErrorHandler:
 10838                           	opt callstack 24
 10839                           
 10840                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
 10841                           
 10842                           ;incstack = 0
 10843  002BD2  C009  F07A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 10844  002BD6  C00A  F07B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 10845  002BDA  0012               	return		;funcret
 10846  002BDC                     __end_of_EUSART1_SetOverrunErrorHandler:
 10847                           	opt callstack 0
 10848                           
 10849 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 10850 ;; Defined at:
 10851 ;;		line 273 in file "mcc_generated_files/eusart1.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
 10854 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;		None
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, status,2, status,0
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10870 ;;Total ram usage:        2 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:    4
 10873 ;; This function calls:
 10874 ;;		Nothing
 10875 ;; This function is called by:
 10876 ;;		_EUSART1_Initialize
 10877 ;; This function uses a non-reentrant model
 10878 ;;
 10879                           
 10880                           	psect	text66
 10881  002BDC                     __ptext66:
 10882                           	opt callstack 0
 10883  002BDC                     _EUSART1_SetFramingErrorHandler:
 10884                           	opt callstack 24
 10885                           
 10886                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
 10887                           
 10888                           ;incstack = 0
 10889  002BDC  C009  F07C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 10890  002BE0  C00A  F07D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 10891  002BE4  0012               	return		;funcret
 10892  002BE6                     __end_of_EUSART1_SetFramingErrorHandler:
 10893                           	opt callstack 0
 10894                           
 10895 ;; *************** function _EUSART1_SetErrorHandler *****************
 10896 ;; Defined at:
 10897 ;;		line 281 in file "mcc_generated_files/eusart1.c"
 10898 ;; Parameters:    Size  Location     Type
 10899 ;;  interruptHan    2    8[COMRAM] PTR FTN()void 
 10900 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;		None
 10903 ;; Return value:  Size  Location     Type
 10904 ;;                  1    wreg      void 
 10905 ;; Registers used:
 10906 ;;		wreg, status,2, status,0
 10907 ;; Tracked objects:
 10908 ;;		On entry : 0/0
 10909 ;;		On exit  : 0/0
 10910 ;;		Unchanged: 0/0
 10911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10916 ;;Total ram usage:        2 bytes
 10917 ;; Hardware stack levels used:    1
 10918 ;; Hardware stack levels required when called:    4
 10919 ;; This function calls:
 10920 ;;		Nothing
 10921 ;; This function is called by:
 10922 ;;		_EUSART1_Initialize
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           	psect	text67
 10927  002BE6                     __ptext67:
 10928                           	opt callstack 0
 10929  002BE6                     _EUSART1_SetErrorHandler:
 10930                           	opt callstack 24
 10931                           
 10932                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
 10933                           
 10934                           ;incstack = 0
 10935  002BE6  C009  F078         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 10936  002BEA  C00A  F079         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 10937  002BEE  0012               	return		;funcret
 10938  002BF0                     __end_of_EUSART1_SetErrorHandler:
 10939                           	opt callstack 0
 10940                           
 10941 ;; *************** function _ADC_Initialize *****************
 10942 ;; Defined at:
 10943 ;;		line 60 in file "mcc_generated_files/adc.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;		None
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;		None
 10948 ;; Return value:  Size  Location     Type
 10949 ;;                  1    wreg      void 
 10950 ;; Registers used:
 10951 ;;		wreg, status,2
 10952 ;; Tracked objects:
 10953 ;;		On entry : 0/0
 10954 ;;		On exit  : 0/0
 10955 ;;		Unchanged: 0/0
 10956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10961 ;;Total ram usage:        0 bytes
 10962 ;; Hardware stack levels used:    1
 10963 ;; Hardware stack levels required when called:    4
 10964 ;; This function calls:
 10965 ;;		Nothing
 10966 ;; This function is called by:
 10967 ;;		_SYSTEM_Initialize
 10968 ;;		_main
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           	psect	text68
 10973  002B5A                     __ptext68:
 10974                           	opt callstack 0
 10975  002B5A                     _ADC_Initialize:
 10976                           	opt callstack 25
 10977                           
 10978                           ;mcc_generated_files/adc.c: 65:     ADCON0 = 0x01;
 10979                           
 10980                           ;incstack = 0
 10981  002B5A  0E01               	movlw	1
 10982  002B5C  6EC2               	movwf	4034,c	;volatile
 10983                           
 10984                           ;mcc_generated_files/adc.c: 68:     ADCON1 = 0x08;
 10985  002B5E  0E08               	movlw	8
 10986  002B60  6EC1               	movwf	4033,c	;volatile
 10987                           
 10988                           ;mcc_generated_files/adc.c: 71:     ADCON2 = 0x87;
 10989  002B62  0E87               	movlw	135
 10990  002B64  6EC0               	movwf	4032,c	;volatile
 10991                           
 10992                           ;mcc_generated_files/adc.c: 74:     ADRESL = 0x00;
 10993  002B66  0E00               	movlw	0
 10994  002B68  6EC3               	movwf	4035,c	;volatile
 10995                           
 10996                           ;mcc_generated_files/adc.c: 77:     ADRESH = 0x00;
 10997  002B6A  0E00               	movlw	0
 10998  002B6C  6EC4               	movwf	4036,c	;volatile
 10999                           
 11000                           ;mcc_generated_files/adc.c: 80:     PIE1bits.ADIE = 1;
 11001  002B6E  8C9D               	bsf	3997,6,c	;volatile
 11002  002B70  0012               	return		;funcret
 11003  002B72                     __end_of_ADC_Initialize:
 11004                           	opt callstack 0
 11005                           
 11006 ;; *************** function _EUSART1_is_rx_ready *****************
 11007 ;; Defined at:
 11008 ;;		line 137 in file "mcc_generated_files/eusart1.c"
 11009 ;; Parameters:    Size  Location     Type
 11010 ;;		None
 11011 ;; Auto vars:     Size  Location     Type
 11012 ;;		None
 11013 ;; Return value:  Size  Location     Type
 11014 ;;                  1    wreg      _Bool 
 11015 ;; Registers used:
 11016 ;;		wreg, status,2
 11017 ;; Tracked objects:
 11018 ;;		On entry : 0/0
 11019 ;;		On exit  : 0/0
 11020 ;;		Unchanged: 0/0
 11021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11026 ;;Total ram usage:        0 bytes
 11027 ;; Hardware stack levels used:    1
 11028 ;; Hardware stack levels required when called:    4
 11029 ;; This function calls:
 11030 ;;		Nothing
 11031 ;; This function is called by:
 11032 ;;		_main
 11033 ;; This function uses a non-reentrant model
 11034 ;;
 11035                           
 11036                           	psect	text69
 11037  002B84                     __ptext69:
 11038                           	opt callstack 0
 11039  002B84                     _EUSART1_is_rx_ready:
 11040                           	opt callstack 26
 11041                           
 11042                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
 11043                           
 11044                           ;incstack = 0
 11045  002B84  5051               	movf	_eusart1RxCount,w,c	;volatile
 11046  002B86  B4D8               	btfsc	status,2,c
 11047  002B88  D002               	goto	u4960
 11048  002B8A  0E01               	movlw	1
 11049  002B8C  0012               	return	
 11050  002B8E                     u4960:
 11051  002B8E  0E00               	movlw	0
 11052  002B90  0012               	return		;funcret
 11053  002B92                     __end_of_EUSART1_is_rx_ready:
 11054                           	opt callstack 0
 11055                           
 11056 ;; *************** function _INTERRUPT_InterruptManager *****************
 11057 ;; Defined at:
 11058 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;		None
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  1    wreg      void 
 11065 ;; Registers used:
 11066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11074 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;Total ram usage:        4 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:    3
 11079 ;; This function calls:
 11080 ;;		Absolute function
 11081 ;;		_ADC_ISR
 11082 ;;		_EUSART1_Receive_ISR
 11083 ;;		_EUSART1_Transmit_ISR
 11084 ;;		_TMR2_ISR
 11085 ;; This function is called by:
 11086 ;;		Interrupt level 2
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090                           	psect	intcode
 11091  000008                     __pintcode:
 11092                           	opt callstack 0
 11093  000008                     _INTERRUPT_InterruptManager:
 11094                           	opt callstack 16
 11095                           
 11096                           ;incstack = 0
 11097  000008  8257               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11098  00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
 11099  00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11100  000012  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 11101  000016  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 11102                           
 11103                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 11104  00001A  ACF2               	btfss	4082,6,c	;volatile
 11105  00001C  D026               	goto	i2l178
 11106                           
 11107                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 11108  00001E  BC9D               	btfsc	3997,6,c	;volatile
 11109  000020  AC9E               	btfss	3998,6,c	;volatile
 11110  000022  D003               	goto	i2l175
 11111                           
 11112                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ADC_ISR();
 11113  000024  EC13  F016         	call	_ADC_ISR	;wreg free
 11114                           
 11115                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 11116  000028  D020               	goto	i2l178
 11117  00002A                     i2l175:
 11118  00002A  B89D               	btfsc	3997,4,c	;volatile
 11119  00002C  A89E               	btfss	3998,4,c	;volatile
 11120  00002E  D009               	goto	i2l177
 11121                           
 11122                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 11123  000030  D801               	call	i2u529_48
 11124  000032  D01B               	goto	i2l178
 11125  000034                     i2u529_48:
 11126  000034  0005               	push	
 11127  000036  6EFA               	movwf	pclath,c
 11128  000038  0100               	movlb	0	; () banked
 11129  00003A  5180               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 11130  00003C  6EFD               	movwf	tosl,c
 11131  00003E  5181               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 11132  000040  D00B               	goto	L16
 11133  000042                     i2l177:
 11134  000042  BA9D               	btfsc	3997,5,c	;volatile
 11135  000044  AA9E               	btfss	3998,5,c	;volatile
 11136  000046  D00C               	goto	i2l179
 11137                           
 11138                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 11139  000048  D801               	call	i2u532_48
 11140  00004A  D00F               	goto	i2l178
 11141  00004C                     i2u532_48:
 11142  00004C  0005               	push	
 11143  00004E  6EFA               	movwf	pclath,c
 11144  000050  0100               	movlb	0	; () banked
 11145  000052  517E               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 11146  000054  6EFD               	movwf	tosl,c
 11147  000056  517F               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 11148  000058                     L16:
 11149  000058  6EFE               	movwf	tosh,c
 11150  00005A  6AFF               	clrf	tosu,c
 11151  00005C  50FA               	movf	pclath,w,c
 11152  00005E  0012               	return		;indir
 11153  000060                     i2l179:
 11154  000060  B29D               	btfsc	3997,1,c	;volatile
 11155  000062  A29E               	btfss	3998,1,c	;volatile
 11156  000064  D002               	goto	i2l178
 11157                           
 11158                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR2_ISR();
 11159  000066  EC6F  F015         	call	_TMR2_ISR	;wreg free
 11160  00006A                     i2l178:
 11161  00006A  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 11162  00006E  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 11163  000072  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11164  000076  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11165  00007A  9257               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11166  00007C  0011               	retfie		f
 11167  00007E                     __end_of_INTERRUPT_InterruptManager:
 11168                           	opt callstack 0
 11169                           
 11170 ;; *************** function _TMR2_ISR *****************
 11171 ;; Defined at:
 11172 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;		None
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;		None
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11190 ;;Total ram usage:        0 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:    2
 11193 ;; This function calls:
 11194 ;;		Absolute function
 11195 ;;		_TMR2_DefaultInterruptHandler
 11196 ;;		_timer_interrupt
 11197 ;; This function is called by:
 11198 ;;		_INTERRUPT_InterruptManager
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text71
 11203  002ADE                     __ptext71:
 11204                           	opt callstack 0
 11205  002ADE                     _TMR2_ISR:
 11206                           	opt callstack 16
 11207                           
 11208                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
 11209                           
 11210                           ;incstack = 0
 11211  002ADE  929E               	bcf	3998,1,c	;volatile
 11212                           
 11213                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
 11214  002AE0  0100               	movlb	0	; () banked
 11215  002AE2  5176               	movf	_TMR2_InterruptHandler& (0+255),w,b
 11216  002AE4  1177               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 11217  002AE6  B4D8               	btfsc	status,2,c
 11218  002AE8  0012               	return	
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
 11222  002AEA  D801               	call	i2u507_48
 11223  002AEC  0012               	return	
 11224  002AEE                     i2u507_48:
 11225  002AEE  0005               	push	
 11226  002AF0  6EFA               	movwf	pclath,c
 11227  002AF2  5176               	movf	_TMR2_InterruptHandler& (0+255),w,b
 11228  002AF4  6EFD               	movwf	tosl,c
 11229  002AF6  5177               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 11230  002AF8  6EFE               	movwf	tosh,c
 11231  002AFA  6AFF               	clrf	tosu,c
 11232  002AFC  50FA               	movf	pclath,w,c
 11233  002AFE  0012               	return		;indir
 11234  002B00                     __end_of_TMR2_ISR:
 11235                           	opt callstack 0
 11236                           
 11237 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 11238 ;; Defined at:
 11239 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;		None
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;		None
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  1    wreg      void 
 11246 ;; Registers used:
 11247 ;;		None
 11248 ;; Tracked objects:
 11249 ;;		On entry : 0/0
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11257 ;;Total ram usage:        0 bytes
 11258 ;; Hardware stack levels used:    1
 11259 ;; This function calls:
 11260 ;;		Nothing
 11261 ;; This function is called by:
 11262 ;;		_TMR2_Initialize
 11263 ;;		_TMR2_ISR
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           	psect	text72
 11268  002C2E                     __ptext72:
 11269                           	opt callstack 0
 11270  002C2E                     _TMR2_DefaultInterruptHandler:
 11271                           	opt callstack 17
 11272                           
 11273                           ;incstack = 0
 11274  002C2E  0012               	return		;funcret
 11275  002C30                     __end_of_TMR2_DefaultInterruptHandler:
 11276                           	opt callstack 0
 11277                           
 11278 ;; *************** function _timer_interrupt *****************
 11279 ;; Defined at:
 11280 ;;		line 121 in file "timer.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;		None
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;		None
 11285 ;; Return value:  Size  Location     Type
 11286 ;;                  1    wreg      void 
 11287 ;; Registers used:
 11288 ;;		wreg, status,2, status,0, cstack
 11289 ;; Tracked objects:
 11290 ;;		On entry : 0/0
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11298 ;;Total ram usage:        0 bytes
 11299 ;; Hardware stack levels used:    1
 11300 ;; Hardware stack levels required when called:    1
 11301 ;; This function calls:
 11302 ;;		_timer_setdisplay
 11303 ;; This function is called by:
 11304 ;;		_main
 11305 ;;		_TMR2_ISR
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           	psect	text73
 11310  002710                     __ptext73:
 11311                           	opt callstack 0
 11312  002710                     _timer_interrupt:
 11313                           	opt callstack 16
 11314                           
 11315                           ;timer.c: 122:     if (running) {
 11316                           
 11317                           ;incstack = 0
 11318  002710  5050               	movf	_running,w,c
 11319  002712  B4D8               	btfsc	status,2,c
 11320  002714  D01C               	goto	i2l612
 11321                           
 11322                           ;timer.c: 123:         if (__display == 0) {
 11323  002716  0100               	movlb	0	; () banked
 11324  002718  5182               	movf	___display& (0+255),w,b
 11325  00271A  A4D8               	btfss	status,2,c
 11326  00271C  D00C               	goto	i2l4698
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;timer.c: 124:             timer_setdisplay(0);
 11330  00271E  0E00               	movlw	0
 11331  002720  6E02               	movwf	timer_setdisplay@display+1,c
 11332  002722  0E00               	movlw	0
 11333  002724  6E01               	movwf	timer_setdisplay@display,c
 11334  002726  EC06  F015         	call	_timer_setdisplay	;wreg free
 11335                           
 11336                           ;timer.c: 126:             PORTB = display0;
 11337  00272A  C0E0  FF81         	movff	_display0,3969	;volatile
 11338                           
 11339                           ;timer.c: 128:             __display = 1;
 11340  00272E  0E01               	movlw	1
 11341  002730  0100               	movlb	0	; () banked
 11342  002732  6F82               	movwf	___display& (0+255),b
 11343                           
 11344                           ;timer.c: 129:         } else {
 11345  002734  0012               	return	
 11346  002736                     i2l4698:
 11347                           
 11348                           ; BSR set to: 0
 11349                           ;timer.c: 130:             timer_setdisplay(1);
 11350  002736  0E00               	movlw	0
 11351  002738  6E02               	movwf	timer_setdisplay@display+1,c
 11352  00273A  0E01               	movlw	1
 11353  00273C  6E01               	movwf	timer_setdisplay@display,c
 11354  00273E  EC06  F015         	call	_timer_setdisplay	;wreg free
 11355                           
 11356                           ;timer.c: 132:             PORTB = display1;
 11357  002742  C0DF  FF81         	movff	_display1,3969	;volatile
 11358                           
 11359                           ;timer.c: 134:             __display = 0;
 11360  002746  0E00               	movlw	0
 11361  002748  0100               	movlb	0	; () banked
 11362  00274A  6F82               	movwf	___display& (0+255),b
 11363  00274C  0012               	return	
 11364  00274E                     i2l612:
 11365                           
 11366                           ;timer.c: 137:         PORTB = clear;
 11367  00274E  6881               	setf	3969,c	;volatile
 11368  002750  0012               	return		;funcret
 11369  002752                     __end_of_timer_interrupt:
 11370                           	opt callstack 0
 11371                           
 11372 ;; *************** function _timer_setdisplay *****************
 11373 ;; Defined at:
 11374 ;;		line 28 in file "timer.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;  display         2    0[COMRAM] int 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;		None
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      void 
 11381 ;; Registers used:
 11382 ;;		wreg, status,2, status,0
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11392 ;;Total ram usage:        4 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_timer_interrupt
 11398 ;;		_timer_cleardisplay
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text74
 11403  002A0C                     __ptext74:
 11404                           	opt callstack 0
 11405  002A0C                     _timer_setdisplay:
 11406                           	opt callstack 16
 11407                           
 11408                           ;timer.c: 29:     switch (display) {
 11409                           
 11410                           ;incstack = 0
 11411  002A0C  D006               	goto	i2l4308
 11412  002A0E                     i2l566:
 11413  002A0E  968B               	bcf	3979,3,c	;volatile
 11414                           
 11415                           ;timer.c: 32:             do { LATCbits.LATC2 = 1; } while(0);
 11416  002A10  848B               	bsf	3979,2,c	;volatile
 11417  002A12  0012               	return	
 11418  002A14                     i2l572:
 11419  002A14  948B               	bcf	3979,2,c	;volatile
 11420                           
 11421                           ;timer.c: 36:             do { LATCbits.LATC3 = 1; } while(0);
 11422  002A16  868B               	bsf	3979,3,c	;volatile
 11423  002A18  0012               	return	
 11424  002A1A                     i2l4308:
 11425  002A1A  C001  F003         	movff	timer_setdisplay@display,??_timer_setdisplay
 11426  002A1E  C002  F004         	movff	timer_setdisplay@display+1,??_timer_setdisplay+1
 11427                           
 11428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11429                           ; Switch size 1, requested type "simple"
 11430                           ; Number of cases is 1, Range of values is 0 to 0
 11431                           ; switch strategies available:
 11432                           ; Name         Instructions Cycles
 11433                           ; simple_byte            4     3 (average)
 11434                           ;	Chosen strategy is simple_byte
 11435  002A22  5004               	movf	??_timer_setdisplay+1,w,c
 11436  002A24  0A00               	xorlw	0	; case 0
 11437  002A26  A4D8               	btfss	status,2,c
 11438  002A28  0012               	return	
 11439                           
 11440                           ; Switch size 1, requested type "simple"
 11441                           ; Number of cases is 2, Range of values is 0 to 1
 11442                           ; switch strategies available:
 11443                           ; Name         Instructions Cycles
 11444                           ; simple_byte            7     4 (average)
 11445                           ;	Chosen strategy is simple_byte
 11446  002A2A  5003               	movf	??_timer_setdisplay,w,c
 11447  002A2C  0A00               	xorlw	0	; case 0
 11448  002A2E  B4D8               	btfsc	status,2,c
 11449  002A30  D7EE               	goto	i2l566
 11450  002A32  0A01               	xorlw	1	; case 1
 11451  002A34  A4D8               	btfss	status,2,c
 11452  002A36  0012               	return	
 11453  002A38  D7ED               	goto	i2l572
 11454  002A3A                     __end_of_timer_setdisplay:
 11455                           	opt callstack 0
 11456                           
 11457 ;; *************** function _EUSART1_Transmit_ISR *****************
 11458 ;; Defined at:
 11459 ;;		line 206 in file "mcc_generated_files/eusart1.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;		None
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;		None
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1    wreg      void 
 11466 ;; Registers used:
 11467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11477 ;;Total ram usage:        0 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; This function calls:
 11480 ;;		Nothing
 11481 ;; This function is called by:
 11482 ;;		_EUSART1_Initialize
 11483 ;;		_INTERRUPT_InterruptManager
 11484 ;; This function uses a non-reentrant model
 11485 ;;
 11486                           
 11487                           	psect	text75
 11488  002A66                     __ptext75:
 11489                           	opt callstack 0
 11490  002A66                     _EUSART1_Transmit_ISR:
 11491                           	opt callstack 18
 11492                           
 11493                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 11494                           
 11495                           ;incstack = 0
 11496  002A66  0E08               	movlw	8
 11497  002A68  6054               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
 11498  002A6A  D010               	goto	i2l112
 11499                           
 11500                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
 11501  002A6C  0E60               	movlw	low _eusart1TxBuffer
 11502  002A6E  2455               	addwf	_eusart1TxTail,w,c	;volatile
 11503  002A70  6ED9               	movwf	fsr2l,c
 11504  002A72  6ADA               	clrf	fsr2h,c
 11505  002A74  0E00               	movlw	high _eusart1TxBuffer
 11506  002A76  22DA               	addwfc	fsr2h,f,c
 11507  002A78  50DF               	movf	indf2,w,c
 11508  002A7A  6EAD               	movwf	4013,c	;volatile
 11509  002A7C  2A55               	incf	_eusart1TxTail,f,c	;volatile
 11510                           
 11511                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 11512  002A7E  0E07               	movlw	7
 11513  002A80  6455               	cpfsgt	_eusart1TxTail,c	;volatile
 11514  002A82  D002               	goto	i2l4734
 11515                           
 11516                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
 11517  002A84  0E00               	movlw	0
 11518  002A86  6E55               	movwf	_eusart1TxTail,c	;volatile
 11519  002A88                     i2l4734:
 11520                           
 11521                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
 11522  002A88  2A54               	incf	_eusart1TxBufferRemaining,f,c	;volatile
 11523                           
 11524                           ;mcc_generated_files/eusart1.c: 218:     }
 11525  002A8A  0012               	return	
 11526  002A8C                     i2l112:
 11527                           
 11528                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
 11529  002A8C  989D               	bcf	3997,4,c	;volatile
 11530  002A8E  0012               	return		;funcret
 11531  002A90                     __end_of_EUSART1_Transmit_ISR:
 11532                           	opt callstack 0
 11533                           
 11534 ;; *************** function _EUSART1_Receive_ISR *****************
 11535 ;; Defined at:
 11536 ;;		line 225 in file "mcc_generated_files/eusart1.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;		None
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;		None
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;Total ram usage:        0 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    2
 11557 ;; This function calls:
 11558 ;;		Absolute function
 11559 ;;		_EUSART1_DefaultErrorHandler
 11560 ;;		_EUSART1_DefaultFramingErrorHandler
 11561 ;;		_EUSART1_DefaultOverrunErrorHandler
 11562 ;;		_EUSART1_RxDataHandler
 11563 ;; This function is called by:
 11564 ;;		_EUSART1_Initialize
 11565 ;;		_INTERRUPT_InterruptManager
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           
 11569                           	psect	text76
 11570  0020A4                     __ptext76:
 11571                           	opt callstack 0
 11572  0020A4                     _EUSART1_Receive_ISR:
 11573                           	opt callstack 16
 11574                           
 11575                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 11576                           
 11577                           ;incstack = 0
 11578  0020A4  0E80               	movlw	low _eusart1RxStatusBuffer
 11579  0020A6  2453               	addwf	_eusart1RxHead,w,c	;volatile
 11580  0020A8  6ED9               	movwf	fsr2l,c
 11581  0020AA  6ADA               	clrf	fsr2h,c
 11582  0020AC  0E03               	movlw	high _eusart1RxStatusBuffer
 11583  0020AE  22DA               	addwfc	fsr2h,f,c
 11584  0020B0  0E00               	movlw	0
 11585  0020B2  6EDF               	movwf	indf2,c
 11586                           
 11587                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
 11588  0020B4  A4AB               	btfss	4011,2,c	;volatile
 11589  0020B6  D014               	goto	i2u501_49
 11590                           
 11591                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 11592  0020B8  0E80               	movlw	low _eusart1RxStatusBuffer
 11593  0020BA  2453               	addwf	_eusart1RxHead,w,c	;volatile
 11594  0020BC  6ED9               	movwf	fsr2l,c
 11595  0020BE  6ADA               	clrf	fsr2h,c
 11596  0020C0  0E03               	movlw	high _eusart1RxStatusBuffer
 11597  0020C2  22DA               	addwfc	fsr2h,f,c
 11598  0020C4  0103               	movlb	3	; () banked
 11599  0020C6  82DF               	bsf	indf2,1,c
 11600                           
 11601                           ; BSR set to: 3
 11602                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
 11603  0020C8  D801               	call	i2u501_48
 11604  0020CA  D00A               	goto	i2u501_49
 11605  0020CC                     i2u501_48:
 11606  0020CC  0005               	push	
 11607  0020CE  6EFA               	movwf	pclath,c
 11608  0020D0  0100               	movlb	0	; () banked
 11609  0020D2  517C               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 11610  0020D4  6EFD               	movwf	tosl,c
 11611  0020D6  517D               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 11612  0020D8  6EFE               	movwf	tosh,c
 11613  0020DA  6AFF               	clrf	tosu,c
 11614  0020DC  50FA               	movf	pclath,w,c
 11615  0020DE  0012               	return		;indir
 11616  0020E0                     i2u501_49:
 11617                           
 11618                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
 11619  0020E0  A2AB               	btfss	4011,1,c	;volatile
 11620  0020E2  D014               	goto	i2u503_49
 11621                           
 11622                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 11623  0020E4  0E80               	movlw	low _eusart1RxStatusBuffer
 11624  0020E6  2453               	addwf	_eusart1RxHead,w,c	;volatile
 11625  0020E8  6ED9               	movwf	fsr2l,c
 11626  0020EA  6ADA               	clrf	fsr2h,c
 11627  0020EC  0E03               	movlw	high _eusart1RxStatusBuffer
 11628  0020EE  22DA               	addwfc	fsr2h,f,c
 11629  0020F0  0103               	movlb	3	; () banked
 11630  0020F2  84DF               	bsf	indf2,2,c
 11631                           
 11632                           ; BSR set to: 3
 11633                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
 11634  0020F4  D801               	call	i2u503_48
 11635  0020F6  D00A               	goto	i2u503_49
 11636  0020F8                     i2u503_48:
 11637  0020F8  0005               	push	
 11638  0020FA  6EFA               	movwf	pclath,c
 11639  0020FC  0100               	movlb	0	; () banked
 11640  0020FE  517A               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 11641  002100  6EFD               	movwf	tosl,c
 11642  002102  517B               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 11643  002104  6EFE               	movwf	tosh,c
 11644  002106  6AFF               	clrf	tosu,c
 11645  002108  50FA               	movf	pclath,w,c
 11646  00210A  0012               	return		;indir
 11647  00210C                     i2u503_49:
 11648                           
 11649                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 11650  00210C  0E80               	movlw	low _eusart1RxStatusBuffer
 11651  00210E  2453               	addwf	_eusart1RxHead,w,c	;volatile
 11652  002110  6ED9               	movwf	fsr2l,c
 11653  002112  6ADA               	clrf	fsr2h,c
 11654  002114  0E03               	movlw	high _eusart1RxStatusBuffer
 11655  002116  22DA               	addwfc	fsr2h,f,c
 11656  002118  50DF               	movf	indf2,w,c
 11657  00211A  B4D8               	btfsc	status,2,c
 11658  00211C  D00C               	goto	i2l4754
 11659                           
 11660                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
 11661  00211E  D801               	call	i2u505_48
 11662  002120  0012               	return	
 11663  002122                     i2u505_48:
 11664  002122  0005               	push	
 11665  002124  6EFA               	movwf	pclath,c
 11666  002126  0100               	movlb	0	; () banked
 11667  002128  5178               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 11668  00212A  6EFD               	movwf	tosl,c
 11669  00212C  5179               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 11670  00212E  6EFE               	movwf	tosh,c
 11671  002130  6AFF               	clrf	tosu,c
 11672  002132  50FA               	movf	pclath,w,c
 11673  002134  0012               	return		;indir
 11674  002136                     i2l4754:
 11675                           
 11676                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
 11677  002136  EC80  F015         	call	_EUSART1_RxDataHandler	;wreg free
 11678  00213A  0012               	return		;funcret
 11679  00213C                     __end_of_EUSART1_Receive_ISR:
 11680                           	opt callstack 0
 11681                           
 11682 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 11683 ;; Defined at:
 11684 ;;		line 261 in file "mcc_generated_files/eusart1.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;		None
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;		None
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      void 
 11691 ;; Registers used:
 11692 ;;		None
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11702 ;;Total ram usage:        0 bytes
 11703 ;; Hardware stack levels used:    1
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		_EUSART1_Initialize
 11708 ;;		_EUSART1_Receive_ISR
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           	psect	text77
 11713  002C12                     __ptext77:
 11714                           	opt callstack 0
 11715  002C12                     _EUSART1_DefaultOverrunErrorHandler:
 11716                           	opt callstack 17
 11717                           
 11718                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
 11719                           
 11720                           ;incstack = 0
 11721  002C12  98AB               	bcf	4011,4,c	;volatile
 11722                           
 11723                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
 11724  002C14  88AB               	bsf	4011,4,c	;volatile
 11725  002C16  0012               	return		;funcret
 11726  002C18                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 11727                           	opt callstack 0
 11728                           
 11729 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 11730 ;; Defined at:
 11731 ;;		line 259 in file "mcc_generated_files/eusart1.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;		None
 11734 ;; Auto vars:     Size  Location     Type
 11735 ;;		None
 11736 ;; Return value:  Size  Location     Type
 11737 ;;                  1    wreg      void 
 11738 ;; Registers used:
 11739 ;;		None
 11740 ;; Tracked objects:
 11741 ;;		On entry : 0/0
 11742 ;;		On exit  : 0/0
 11743 ;;		Unchanged: 0/0
 11744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11749 ;;Total ram usage:        0 bytes
 11750 ;; Hardware stack levels used:    1
 11751 ;; This function calls:
 11752 ;;		Nothing
 11753 ;; This function is called by:
 11754 ;;		_EUSART1_Initialize
 11755 ;;		_EUSART1_Receive_ISR
 11756 ;; This function uses a non-reentrant model
 11757 ;;
 11758                           
 11759                           	psect	text78
 11760  002C30                     __ptext78:
 11761                           	opt callstack 0
 11762  002C30                     _EUSART1_DefaultFramingErrorHandler:
 11763                           	opt callstack 17
 11764                           
 11765                           ;incstack = 0
 11766  002C30  0012               	return		;funcret
 11767  002C32                     __end_of_EUSART1_DefaultFramingErrorHandler:
 11768                           	opt callstack 0
 11769                           
 11770 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 11771 ;; Defined at:
 11772 ;;		line 269 in file "mcc_generated_files/eusart1.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;		None
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;		None
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  1    wreg      void 
 11779 ;; Registers used:
 11780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/0
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;Total ram usage:        0 bytes
 11791 ;; Hardware stack levels used:    1
 11792 ;; Hardware stack levels required when called:    1
 11793 ;; This function calls:
 11794 ;;		_EUSART1_RxDataHandler
 11795 ;; This function is called by:
 11796 ;;		_EUSART1_Initialize
 11797 ;;		_EUSART1_Receive_ISR
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           	psect	text79
 11802  002C18                     __ptext79:
 11803                           	opt callstack 0
 11804  002C18                     _EUSART1_DefaultErrorHandler:
 11805                           	opt callstack 16
 11806                           
 11807                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
 11808                           
 11809                           ;incstack = 0
 11810  002C18  EC80  F015         	call	_EUSART1_RxDataHandler	;wreg free
 11811  002C1C  0012               	return		;funcret
 11812  002C1E                     __end_of_EUSART1_DefaultErrorHandler:
 11813                           	opt callstack 0
 11814                           
 11815 ;; *************** function _EUSART1_RxDataHandler *****************
 11816 ;; Defined at:
 11817 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 11818 ;; Parameters:    Size  Location     Type
 11819 ;;		None
 11820 ;; Auto vars:     Size  Location     Type
 11821 ;;		None
 11822 ;; Return value:  Size  Location     Type
 11823 ;;                  1    wreg      void 
 11824 ;; Registers used:
 11825 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11826 ;; Tracked objects:
 11827 ;;		On entry : 0/0
 11828 ;;		On exit  : 0/0
 11829 ;;		Unchanged: 0/0
 11830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11835 ;;Total ram usage:        0 bytes
 11836 ;; Hardware stack levels used:    1
 11837 ;; This function calls:
 11838 ;;		Nothing
 11839 ;; This function is called by:
 11840 ;;		_EUSART1_Receive_ISR
 11841 ;;		_EUSART1_DefaultErrorHandler
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text80
 11846  002B00                     __ptext80:
 11847                           	opt callstack 0
 11848  002B00                     _EUSART1_RxDataHandler:
 11849                           	opt callstack 17
 11850                           
 11851                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
 11852                           
 11853                           ;incstack = 0
 11854  002B00  0EC0               	movlw	low _eusart1RxBuffer
 11855  002B02  2453               	addwf	_eusart1RxHead,w,c	;volatile
 11856  002B04  6ED9               	movwf	fsr2l,c
 11857  002B06  6ADA               	clrf	fsr2h,c
 11858  002B08  0E03               	movlw	high _eusart1RxBuffer
 11859  002B0A  22DA               	addwfc	fsr2h,f,c
 11860  002B0C  CFAE FFDF          	movff	4014,indf2	;volatile
 11861  002B10  2A53               	incf	_eusart1RxHead,f,c	;volatile
 11862                           
 11863                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 11864  002B12  0E3F               	movlw	63
 11865  002B14  6453               	cpfsgt	_eusart1RxHead,c	;volatile
 11866  002B16  D002               	goto	i2l4210
 11867                           
 11868                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
 11869  002B18  0E00               	movlw	0
 11870  002B1A  6E53               	movwf	_eusart1RxHead,c	;volatile
 11871  002B1C                     i2l4210:
 11872                           
 11873                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
 11874  002B1C  2A51               	incf	_eusart1RxCount,f,c	;volatile
 11875  002B1E  0012               	return		;funcret
 11876  002B20                     __end_of_EUSART1_RxDataHandler:
 11877                           	opt callstack 0
 11878                           
 11879 ;; *************** function _ADC_ISR *****************
 11880 ;; Defined at:
 11881 ;;		line 135 in file "mcc_generated_files/adc.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;		None
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;		None
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      void 
 11888 ;; Registers used:
 11889 ;;		None
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11899 ;;Total ram usage:        0 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; This function calls:
 11902 ;;		Nothing
 11903 ;; This function is called by:
 11904 ;;		_INTERRUPT_InterruptManager
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text81
 11909  002C26                     __ptext81:
 11910                           	opt callstack 0
 11911  002C26                     _ADC_ISR:
 11912                           	opt callstack 18
 11913                           
 11914                           ;mcc_generated_files/adc.c: 138:     PIR1bits.ADIF = 0;
 11915                           
 11916                           ;incstack = 0
 11917  002C26  9C9E               	bcf	3998,6,c	;volatile
 11918  002C28  0012               	return		;funcret
 11919  002C2A                     __end_of_ADC_ISR:
 11920                           	opt callstack 0
 11921                           
 11922                           	psect	text82
 11923  000000                     __ptext82:
 11924                           	opt callstack 0
 11925                           
 11926                           	psect	rparam
 11927  0000                     
 11928                           	psect	temp
 11929  000057                     btemp:
 11930                           	opt callstack 0
 11931  000057                     	ds	1
 11932  0000                     int$flags	set	btemp
 11933  0000                     wtemp8	set	btemp+1
 11934  0000                     ttemp5	set	btemp+1
 11935  0000                     ttemp6	set	btemp+4
 11936  0000                     ttemp7	set	btemp+8
 11937                           tosu	equ	0xFFF
 11938                           tosh	equ	0xFFE
 11939                           tosl	equ	0xFFD
 11940                           stkptr	equ	0xFFC
 11941                           pclatu	equ	0xFFB
 11942                           pclath	equ	0xFFA
 11943                           pcl	equ	0xFF9
 11944                           tblptru	equ	0xFF8
 11945                           tblptrh	equ	0xFF7
 11946                           tblptrl	equ	0xFF6
 11947                           tablat	equ	0xFF5
 11948                           prodh	equ	0xFF4
 11949                           prodl	equ	0xFF3
 11950                           indf0	equ	0xFEF
 11951                           postinc0	equ	0xFEE
 11952                           postdec0	equ	0xFED
 11953                           preinc0	equ	0xFEC
 11954                           plusw0	equ	0xFEB
 11955                           fsr0h	equ	0xFEA
 11956                           fsr0l	equ	0xFE9
 11957                           wreg	equ	0xFE8
 11958                           indf1	equ	0xFE7
 11959                           postinc1	equ	0xFE6
 11960                           postdec1	equ	0xFE5
 11961                           preinc1	equ	0xFE4
 11962                           plusw1	equ	0xFE3
 11963                           fsr1h	equ	0xFE2
 11964                           fsr1l	equ	0xFE1
 11965                           bsr	equ	0xFE0
 11966                           indf2	equ	0xFDF
 11967                           postinc2	equ	0xFDE
 11968                           postdec2	equ	0xFDD
 11969                           preinc2	equ	0xFDC
 11970                           plusw2	equ	0xFDB
 11971                           fsr2h	equ	0xFDA
 11972                           fsr2l	equ	0xFD9
 11973                           status	equ	0xFD8


Data Sizes:
    Strings     1078
    Constant    5
    Data        17
    BSS         398
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      86
    BANK0           160     47     129
    BANK1           256    215     217
    BANK2           256    196     198
    BANK3           256      0     256
    BANK4           256      0      64
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strchr@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_47(CODE[2]), STR_46(CODE[2]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_47(CODE[2]), STR_46(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@input(BANK2[64]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_47(CODE[2]), NULL(NULL[0]), STR_46(CODE[2]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_47(CODE[2]), STR_46(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@input(BANK2[64]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_47(CODE[2]), STR_46(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@input(BANK2[64]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@input(BANK2[64]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), NULL(NULL[0]), 
		 -> authentication@username(BANK1[64]), STR_2(CODE[5]), STR_1(CODE[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), NULL(NULL[0]), 
		 -> authentication@username(BANK1[64]), STR_2(CODE[5]), STR_1(CODE[7]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_55(CODE[8]), STR_54(CODE[10]), STR_52(CODE[5]), STR_51(CODE[7]), 
		 -> STR_50(CODE[6]), STR_49(CODE[12]), STR_48(CODE[5]), STR_20(CODE[7]), 
		 -> STR_18(CODE[5]), STR_16(CODE[6]), STR_13(CODE[12]), STR_12(CODE[4]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@input(BANK2[64]), authentication@password(BANK1[64]), authentication@username(BANK1[64]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 77
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[3]), 
		 -> STR_56(CODE[3]), STR_53(CODE[41]), STR_45(CODE[3]), STR_44(CODE[35]), 
		 -> STR_43(CODE[21]), STR_42(CODE[11]), STR_41(CODE[16]), STR_40(CODE[35]), 
		 -> STR_39(CODE[12]), STR_38(CODE[3]), STR_37(CODE[77]), STR_36(CODE[43]), 
		 -> STR_35(CODE[44]), STR_34(CODE[9]), STR_33(CODE[3]), STR_32(CODE[32]), 
		 -> STR_31(CODE[30]), STR_30(CODE[75]), STR_29(CODE[41]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[35]), STR_25(CODE[9]), STR_24(CODE[3]), 
		 -> STR_23(CODE[30]), STR_22(CODE[39]), STR_21(CODE[14]), STR_19(CODE[28]), 
		 -> STR_17(CODE[28]), STR_15(CODE[58]), STR_14(CODE[29]), STR_11(CODE[43]), 
		 -> STR_10(CODE[3]), STR_9(CODE[41]), STR_8(CODE[41]), STR_7(CODE[42]), 
		 -> STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[19]), STR_3(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1876_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@input(BANK2[64]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 77
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[3]), 
		 -> STR_56(CODE[3]), STR_53(CODE[41]), STR_45(CODE[3]), STR_44(CODE[35]), 
		 -> STR_43(CODE[21]), STR_42(CODE[11]), STR_41(CODE[16]), STR_40(CODE[35]), 
		 -> STR_39(CODE[12]), STR_38(CODE[3]), STR_37(CODE[77]), STR_36(CODE[43]), 
		 -> STR_35(CODE[44]), STR_34(CODE[9]), STR_33(CODE[3]), STR_32(CODE[32]), 
		 -> STR_31(CODE[30]), STR_30(CODE[75]), STR_29(CODE[41]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[35]), STR_25(CODE[9]), STR_24(CODE[3]), 
		 -> STR_23(CODE[30]), STR_22(CODE[39]), STR_21(CODE[14]), STR_19(CODE[28]), 
		 -> STR_17(CODE[28]), STR_15(CODE[58]), STR_14(CODE[29]), STR_11(CODE[43]), 
		 -> STR_10(CODE[3]), STR_9(CODE[41]), STR_8(CODE[41]), STR_7(CODE[42]), 
		 -> STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[19]), STR_3(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 77
		 -> STR_61(CODE[3]), STR_60(CODE[2]), STR_59(CODE[4]), STR_58(CODE[3]), 
		 -> STR_56(CODE[3]), STR_53(CODE[41]), STR_45(CODE[3]), STR_44(CODE[35]), 
		 -> STR_43(CODE[21]), STR_42(CODE[11]), STR_41(CODE[16]), STR_40(CODE[35]), 
		 -> STR_39(CODE[12]), STR_38(CODE[3]), STR_37(CODE[77]), STR_36(CODE[43]), 
		 -> STR_35(CODE[44]), STR_34(CODE[9]), STR_33(CODE[3]), STR_32(CODE[32]), 
		 -> STR_31(CODE[30]), STR_30(CODE[75]), STR_29(CODE[41]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[35]), STR_25(CODE[9]), STR_24(CODE[3]), 
		 -> STR_23(CODE[30]), STR_22(CODE[39]), STR_21(CODE[14]), STR_19(CODE[28]), 
		 -> STR_17(CODE[28]), STR_15(CODE[58]), STR_14(CODE[29]), STR_11(CODE[43]), 
		 -> STR_10(CODE[3]), STR_9(CODE[41]), STR_8(CODE[41]), STR_7(CODE[42]), 
		 -> STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[19]), STR_3(CODE[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), NULL(NULL[0]), authentication@username(BANK1[64]), STR_2(CODE[5]), 
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), NULL(NULL[0]), authentication@username(BANK1[64]), STR_2(CODE[5]), 
		 -> STR_1(CODE[7]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), NULL(NULL[0]), authentication@username(BANK1[64]), 
		 -> STR_2(CODE[5]), STR_1(CODE[7]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    readline@str	PTR unsigned char  size(2) Largest target is 64
		 -> STR_57(CODE[1]), main@input(BANK2[64]), authentication@password(BANK1[64]), authentication@username(BANK1[64]), 

    login@password	PTR unsigned char  size(2) Largest target is 64
		 -> authentication@password(BANK1[64]), 

    login@username	PTR unsigned char  size(2) Largest target is 64
		 -> authentication@username(BANK1[64]), 

    validate@password	PTR unsigned char  size(2) Largest target is 64
		 -> authentication@password(BANK1[64]), 

    validate@username	PTR unsigned char  size(2) Largest target is 64
		 -> authentication@username(BANK1[64]), 

    __username	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), authentication@username(BANK1[64]), 

    USER_PASS	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_55(CODE[8]), 

    USER_NAME	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_54(CODE[10]), 

    main@args	PTR unsigned char [64] size(2) Largest target is 64
		 -> NULL(NULL[0]), main@input(BANK2[64]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@input(BANK2[64]), 

    main@token	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@input(BANK2[64]), 

    sp__username	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), authentication@username(BANK1[64]), 

    timer_control@args	PTR PTR unsigned char  size(2) Largest target is 128
		 -> main@args(BANK2[128]), 

    PORT	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    OS	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer_interrupt(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer_interrupt(), Absolute function(), TMR2_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _timer_writeInt->___awmod
    ___awmod->___awdiv
    _roundf->___xxtofl
    ___flsub->___fladd
    ___xxtofl->___lwdiv
    ___lwdiv->_ADC_GetConversion
    ___fltol->_roundf
    _atoi->_isspace
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _login->_validate
    _validate->_strcmp
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _timer_interrupt->_timer_setdisplay

Critical Paths under _main in BANK0

    _main->_readline
    _timer_control->_printf
    _temperature_monitor->_printf
    _help_menu->_printf
    _authentication->_readline
    _readline->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_temperature_monitor
    _timer_control->_temperature_monitor

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               196   196      0  234333
                                              0 BANK2    196   196      0
                     _ADC_Initialize
                 _EUSART1_Initialize
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
                    _TMR2_Initialize
           _TMR2_SetInterruptHandler
                     _authentication
                          _help_menu
                       _isauthorized
                             _logout
                             _printf
                           _readline
                             _strcmp
                             _strtok
                _temperature_monitor
                      _timer_control
                           _username
 ---------------------------------------------------------------------------------
 (1) _username                                             2     0      2       0
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _timer_control                                        4     2      2   70516
                                             33 BANK0      4     2      2
                               _atoi
                             _printf
                             _strcmp
                _temperature_monitor
                      _timer_running
                        _timer_start
                         _timer_stop
                     _timer_writeInt
 ---------------------------------------------------------------------------------
 (2) _timer_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timer_running                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _temperature_monitor                                215   215      0   40811
                                              0 BANK1    215   215      0
                  _ADC_GetConversion
                       _EUSART1_Read
                            ___fltol
                            ___lwdiv
                           ___xxtofl
                             _printf
                             _roundf
                        _timer_start
                     _timer_writeInt
 ---------------------------------------------------------------------------------
 (2) _timer_writeInt                                       7     5      2    2592
                                             22 COMRAM     7     5      2
                            ___awdiv
                            ___awmod
                        _timer_write
 ---------------------------------------------------------------------------------
 (3) _timer_write                                          7     3      4     759
                                              8 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     793
                                             16 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     625
                                              8 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _timer_start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   13717
                                             34 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4907
                                             24 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    4522
                                              8 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     245
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2513
                                              8 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     566
                                             20 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                             13 COMRAM     7     3      4
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                             60 COMRAM    10     6      4
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    5     3      2      31
                                              8 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    2285
                                             15 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     259
                                              8 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     191
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1272
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _strtok                                               4     0      4    1752
                                             19 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     3      4     635
                                             12 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     3      4     635
                                             12 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               4     0      4     392
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _logout                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _help_menu                                            0     0      0   22166
                             _printf
 ---------------------------------------------------------------------------------
 (1) _authentication                                     128   128      0   48898
                                              0 BANK1    128   128      0
                       _isauthorized
                              _login
                             _printf
                           _readline
 ---------------------------------------------------------------------------------
 (1) _readline                                            14    11      3   23687
                                             33 BANK0     14    11      3
                       _EUSART1_Read
                            _isgraph
                            _isprint
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   22166
                                             23 BANK0     10     4      6
                           _username (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   18113
                                             75 COMRAM     2     2      0
                                             17 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           41    35      6   17622
                                             73 COMRAM     2     2      0
                                              0 BANK0     17    11      6
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    18      4    2732
                                             19 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    7123
                                             37 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             26 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              8 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              8 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 7     4      3    5136
                                             37 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4857
                                             26 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    2077
                                             19 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1577
                                             10 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      93
                                              9 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      62
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isprint                                              6     4      2     161
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _isgraph                                              6     4      2     161
                                              8 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         1     1      0      37
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _login                                                4     0      4    2836
                                             17 COMRAM     4     0      4
                           _validate
 ---------------------------------------------------------------------------------
 (3) _validate                                             4     0      4    2563
                                             13 COMRAM     4     0      4
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    2321
                                              8 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _isauthorized                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                     _ADC_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0     250
                                              4 COMRAM     4     4      0
                   Absolute function *
                            _ADC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0     250
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                    _timer_interrupt *
 ---------------------------------------------------------------------------------
 (14) _timer_interrupt                                     0     0      0     250
                   _timer_setdisplay
 ---------------------------------------------------------------------------------
 (15) _timer_setdisplay                                    4     2      2     250
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_Initialize
     _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _authentication
     _isauthorized
     _login
       _validate
         _strcmp
     _printf
       _username (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
     _readline
       _EUSART1_Read
       _isgraph
       _isprint
       _printf
         _username (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
             _stoa
               _fputc
                 _putch
                   _EUSART1_Write
               _strlen
   _help_menu
     _printf
       _username (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
   _isauthorized
   _logout
   _printf
     _username (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen
   _readline
     _EUSART1_Read
     _isgraph
     _isprint
     _printf
       _username (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
   _strcmp
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr
   _temperature_monitor
     _ADC_GetConversion
     _EUSART1_Read
     ___fltol
       ___lwdiv (ARG)
         _ADC_GetConversion (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           _ADC_GetConversion (ARG)
       _roundf (ARG)
         ___fladd
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
         ___lwdiv (ARG)
           _ADC_GetConversion (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             _ADC_GetConversion (ARG)
     ___lwdiv
       _ADC_GetConversion (ARG)
     ___xxtofl
       ___lwdiv (ARG)
         _ADC_GetConversion (ARG)
     _printf
       _username (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
     _roundf
       ___fladd
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
       ___lwdiv (ARG)
         _ADC_GetConversion (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           _ADC_GetConversion (ARG)
     _timer_start
     _timer_writeInt
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _timer_write
   _timer_control
     _atoi
       ___wmul
       _isdigit
       _isspace
     _printf
       _username (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
     _strcmp
     _temperature_monitor
       _ADC_GetConversion
       _EUSART1_Read
       ___fltol
         ___lwdiv (ARG)
           _ADC_GetConversion (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             _ADC_GetConversion (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___lwdiv (ARG)
             _ADC_GetConversion (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               _ADC_GetConversion (ARG)
       ___lwdiv
         _ADC_GetConversion (ARG)
       ___xxtofl
         ___lwdiv (ARG)
           _ADC_GetConversion (ARG)
       _printf
         _username (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
             _stoa
               _fputc
                 _putch
                   _EUSART1_Write
               _strlen
       _roundf
         ___fladd
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
         ___lwdiv (ARG)
           _ADC_GetConversion (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             _ADC_GetConversion (ARG)
       _timer_start
       _timer_writeInt
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _timer_write
     _timer_running
     _timer_start
     _timer_stop
     _timer_writeInt
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _timer_write
   _username

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADC_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _timer_interrupt *
       _timer_setdisplay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      40      14       25.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C4      C6       9       77.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D7      D9       7       84.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2F      81       5       80.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      56       1       91.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3B6      12        0.0%
DATA                 0      0     3B6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Oct 21 13:14:20 2019

              __end_of_TMR2_SetInterruptHandler 2BBE                        _eusart1TxBufferRemaining 0054  
                                            _OS 02C4                                    ___awdiv@sign 000E  
                        __end_of_FVR_Initialize 2C00                             ___wmul@multiplicand 000B  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                                             l100 2898  
                                           l212 2B7E                                             l600 1F28  
                                           l602 1F2E                                             l291 2906  
                                           l419 13D4                                             l646 216A  
                                           l478 1304                                             l664 0F50  
                                           l666 0F58                                             l693 192C  
                                           l991 1CF8                                    __CFG_CPB$OFF 000000  
                                           _PR2 000FBB                                    __CFG_CPD$OFF 000000  
                                           _abs 28BC                                             _pad 213C  
                               __end_of_ADC_ISR 2C2A                                    ___awmod@sign 0016  
                               _TMR2_Initialize 2B3E                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  ___flmul@aexp 0016                                    ___flmul@bexp 001B  
                                  ___flmul@sign 0015                                    ___flmul@temp 0020  
                                  ___flmul@prod 001C                                    ___fltol@exp1 0046  
                                          ?_abs 001B                                   readline@input 00D3  
                                          l1401 28E4                                            l1217 258E  
                                          l1340 0102                                            l1350 0316  
                                          l1271 0922                                            l1255 0850  
                                          l1432 1B36                                            l1280 0988  
                                          l1256 082E                                            l1281 0984  
                                          l1530 1E98                                            l1381 17C4  
                                          l1357 03A0                                            l1349 031A  
                                          l5100 26DA                                            l1388 1842  
                                          l5110 2154                                            l5120 218C  
                                          l5200 1C06                                            l5114 2162  
                                          l5124 21B8                                            l5116 2174  
                                          l5140 166A                                            l5204 1C1C  
                                          l6100 1874                                            l5070 28B8  
                                          l5054 2888                                            l5310 195A  
                                          l6030 1D9C                                            l6014 1D52  
                                          l5080 23E6                                            l5216 264C  
                                          l5152 16B8                                            l5208 1C42  
                                          l5232 0F32                                            l5320 19B6  
                                          l6040 1DB4                                            l5400 073A  
                                          l6202 29DA                                            l5090 2858  
                                          l5218 2658                                            l5154 16CC  
                                          l5146 1692                                            l5250 0F80  
                                          l5314 1978                                            l5306 1942  
                                          l6042 1DC0                                            l6034 1DAC  
                                          l5068 28B6                                            l5172 1764  
                                          l5164 1728                                            l5260 1078  
                                          l5324 19D0                                            l6060 2564  
                                          l6116 18B4                                            l5404 073E  
                                          l6220 1364                                            l5094 286E  
                                          l5246 0F72                                            l4454 2770  
                                          l6070 2584                                            l5502 0896  
                                          ?_pad 001B                                            l5168 173E  
                                          l5192 1BAA                                            l5184 1B6C  
                                          l5280 10DC                                            l5328 19E8  
                                          l6128 2808                                            l6048 1DDC  
                                          l6080 17D4                                            l5504 089A  
                                          l5512 08AC                                            l5424 0782  
                                          l6240 140C                                            l6224 137E  
                                          l5098 26D6                                            l5194 1BBE  
                                          l5370 0C26                                            l5346 0AC2  
                                          l6138 14C2                                            l6306 1F6E  
                                          l4714 25F2                                            l4706 25A2  
                                          l6058 255C                                            l6090 1804  
                                          l5530 0946                                            l5522 0912  
                                          l5610 1EB0                                            l6234 13DC  
                                          l6410 1226                                            l5188 1B90  
                                          l5284 10F4                                            l5364 0BE8  
                                          l5356 0B78                                            l5380 0C4A  
                                          l6180 15D0                                            l6164 1554  
                                          l6156 152A                                            l6148 1514  
                                          l6316 1FF4                                            l4716 25FA  
                                          l4708 25AA                                            l6260 1A1C  
                                          l6092 182A                                            l5540 095C  
                                          l5436 07A6                                            l5428 0786  
                                          l5620 1EC4                                            l5612 1EB4  
                                          l5604 1EA4                                            l6236 13EE  
                                          l6340 0D3A                                            l6404 11EC  
                                          l5374 0C32                                            l6182 15E2  
                                          l6190 1632                                            l6086 17F2  
                                          l5622 1EC8                                            l5614 1EB8  
                                          l5606 1EA8                                            l6350 0D84  
                                          l6430 12E0                                            l6422 129C  
                                          l5296 18F0                                            l6280 1AA2  
                                          l6088 17F8                                            l5480 0840  
                                          l5616 1EBC                                            l5608 1EAC  
                                          l6248 1482                                            l6360 0DCE  
                                          l6336 0D2C                                            l6328 0CDC  
                                          l6432 12EE                                            l5650 24D2  
                                          l6274 1A6E                                            l6258 1A18  
                                          l6098 1868                                            l5546 0966  
                                          l5466 07E2                                            l5810 22A6  
                                          l5802 2288                                            l5634 1F34  
                                          l5618 1EC0                                            l5626 1ECE  
                                          l6426 12BE                                            l6418 1270  
                                          l6284 1AD8                                            l6276 1A76  
                                          l6268 1A5E                                            l5740 02E0  
                                          l5580 09FE                                            l5820 22C6  
                                          l5628 1F1A                                            l6348 0D7E  
                                          l5910 2844                                            l6278 1A7C  
                                          l5734 02C2                                            l5574 09F4  
                                          l5566 09CE                                            l5494 0874  
                                          l5478 083C                                            l6358 0DC8  
                                          l6366 0ECC                                            l5592 243C  
                                          l5648 24AC                                            l4872 1E90  
                                          l4864 1E4E                                            l4856 1E10  
                                          l5760 035E                                            l5664 00AE  
                                          l5808 229E                                            l5824 22D0  
                                          l5840 2372                                            l6392 1150  
                                          l5594 2444                                            l5682 00EE  
                                          l5666 00B2                                            l5578 09FC  
                                          l5850 2394                                            l6394 1174  
                                          l6386 113E                                            l5764 037C  
                                          l5692 0120                                            l5684 00F2  
                                          l5668 00C2                                            l5828 22DE  
                                          l5860 23B6                                            l5844 237E  
                                          l5880 1CE2                                            l5872 1C98  
                                          l5776 03BE                                            l5944 043E  
                                          l5864 23C4                                            l5856 23AC  
                                          l5848 238C                                            l5962 0676  
                                          l5954 04D6                                            l5876 1CCC  
                                          l5948 0490                                            l5796 2278  
                                          l5886 1D30                                            l5894 29FA  
                                          l5958 05F4                                            l5982 202E  
                                          l5968 06FC                                            l5978 2022  
                                          l5998 27CE                                            STR_1 FFBE  
                                          STR_2 FFDF                                            STR_3 FF8F  
                                          STR_4 FF3B                                            STR_5 FF38  
                                          STR_6 FE77                                            STR_7 FD1C  
                                          STR_8 FD98                                            STR_9 FDC1  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u4300 2976  
                                          u4310 2978                                            u4320 29A6  
                                          u4330 29A8                                            u6020 0AFA  
                                          u7010 1D40                                            u7020 1D70  
                                          u6140 0804                                            u5510 2426  
                                          u6150 0814                                            u6400 09DA  
                                          u6320 096A                                            u6160 0816  
                                          u7025 1D66                                            u5530 26FC  
                                          u5700 1BC2                                            u7300 157A  
                                          u7220 2804                                            u7060 1DC6  
                                          u6340 097E                                            u5621 1698  
                                          u7310 157C                                            u7230 2946  
                                          u6190 0858                                            u5640 16D0  
                                          u5800 0F6C                                            u7240 2948  
                                          u6600 0310                                            u5537 26F2  
                                          u6450 2472                                            u5490 23DE  
                                          u5810 1086                                            u7330 15AE  
                                          u4930 25DE                                            u7090 2568  
                                          u7170 187E                                            u5740 0F04  
                                          u7340 15B0                                            u7260 1504  
                                          u7500 1B06                                            u6700 22AA  
                                          u5590 28CA                                            u5830 10A8  
                                          u5750 0F06                                            u7350 15BC  
                                          u4950 262E                                            u7510 1B08  
                                          u6550 010E                                            u5831 10A6  
                                          u4960 2B8E                                            u5840 10B6  
                                          u6640 036C                                            u6560 0284  
                                          u5850 10BA                                            u7370 1616  
                                          u7290 1540                                            u6650 038A  
                                          u7267 14F8                                            u5780 0F46  
                                          u5940 196E                                            u7380 162C  
                                          u6900 045C                                            u7700 1268  
                                          u7541 1F5A                                            u6565 027A  
                                  ___authorized 0083                                            u5870 10C6  
                                          u5950 199A                                            u7551 1F66  
                                          u7480 1A5A                                            u6920 04A0  
                                          u6760 2398                                            u7377 160A  
                                          u6905 0452                                            u5891 18D0  
                                          u5980 19FC                                            u7740 12F8  
                                          u5957 1990                                            u6950 06C8  
                                          u7671 11AC                                            u6880 0412  
                                          u6890 042C                                            u6970 2014  
                                          u6955 06BE                                            u6885 0408  
                                          _TMR2 000FBC                                            _PORT 01D7  
                       timer_setdisplay@display 0001                                            _WPUB 000F61  
                                 _EUSART1_Write 2886                                            abs@a 001B  
                                          _dbuf 0085                                            _atoi 1A06  
                                          _ctoa 2638                                            _main 111E  
                                          _dtoa 0EDC                                   ?_EUSART1_Read 0001  
                                          _prec 0072                                            _nout 006E  
                                          pad@i 0022                                            pad@p 001F  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0024  
                                          fsr2l 000FD9                                            _stoa 18C6  
                                          btemp 0057                                   __CFG_BORV$190 000000  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 007E                                   __CFG_IESO$OFF 000000  
                       __size_of_authentication 00AC                                    ___param_bank 000000  
                                 login@password 0014                                 ??_timer_control 004E  
                                         ??_abs 001D                                           ??_pad 0021  
                               ?_FVR_Initialize 0001                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 2B84                           _eusart1RxStatusBuffer 0380  
                                 ___fltol@sign1 0045                                 __end_of___aodiv 1786  
                                         ?_atoi 0010                                           ?_ctoa 0026  
                               __end_of___fladd 0A1A                                           ?_main 0001  
                                         ?_dtoa 0026                                 __end_of___aomod 1C64  
                               ??_timer_running 0009                                 __end_of___awdiv 22E8  
                               __end_of___flneg 2A0C                                           STR_10 FF38  
                                         STR_11 FCF1                                           STR_12 FFF2  
                                         STR_20 FFC5                                           STR_13 FF78  
                                         STR_21 FF5E                                           STR_14 FED1  
                                         STR_22 FDEA                                           STR_30 FC15  
                                         STR_23 FEB3                                           STR_31 FE95  
                                         STR_15 FC60                                           STR_24 FF38  
                                         STR_40 FE11                                           STR_16 FFD9  
                                         STR_32 FE57                                           STR_33 FF38  
                                         STR_25 FFA4                                           STR_41 FF4E  
                                         STR_17 FF0A                                           STR_18 FFE9  
                                         STR_50 FFD3                                           STR_34 FFAD  
                                         STR_42 FF84                                           STR_26 FE11  
                                         STR_27 FF38                                           STR_51 FFCC  
                                         STR_43 FF26                                           STR_19 FEEE  
                                         STR_35 FC9A                                           STR_52 FFC7  
                                         STR_60 FFFC                                           STR_28 FF6C  
                                         STR_44 FE34                                           STR_36 FCC6  
                               __end_of___awmod 23CE                                           STR_45 FFF9  
                                         STR_61 FFF6                                           STR_53 FD6F  
                                         STR_29 FD46                                           STR_37 FBC8  
                                         STR_38 FF38                                           STR_46 FFFA  
                                         STR_54 FF9A                                           STR_39 FF6C  
                                         STR_47 FFFA                                           STR_55 FFB6  
                                         STR_56 FF38                                           STR_48 FFE4  
                                         STR_49 FF78                                           STR_58 FF38  
                                         STR_59 FFEE                                 __end_of___flmul 03D4  
                               __end_of___flsub 26CC                                 __end_of___fltol 1DEE  
                                         ?_stoa 0014                                   login@username 0012  
                               ___awdiv@divisor 000B                                           _T2CON 000FBA  
                                __CFG_DEBUG$OFF 000000                                 __end_of___lwdiv 2598  
                                         i2l112 2A8C                                           i2l175 002A  
                                         i2l177 0042                                           i2l178 006A  
                                         i2l179 0060                                           i2l612 274E  
                                         i2l572 2A14                                           i2l566 2A0E  
                               ___awdiv@counter 000D                                    vfpfcnvrt@fmt 00A7  
                                         _PORTB 000F81                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 2A66                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR2_ISR 2B00                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                             timer_writeInt@dot 001D                                  __CFG_EBTRB$OFF 000000  
                                         _clear FBC7                                           _flags 004E  
                                         _fputc 23CE                                           _fputs 284E  
                                         _login 29AE                                 __end_of_isdigit 294E  
                            __CFG_MCLRE$EXTMCLR 000000                                 __end_of_isgraph 29AE  
                                         atoi@n 001D                                           pad@fp 001B  
                                         atoi@s 0010                                           _width 0070  
                                         ctoa@c 0028                                           _putch 2BAA  
                                         _toint FBC3                                           ctoa@w 0029  
                                         main@i 02C0                                           dtoa@d 0028  
                                         dtoa@i 0048                                           dtoa@n 0040  
                                         dtoa@p 003A                                           dtoa@s 003E  
                                         dtoa@w 003C                                 __end_of_isspace 2810  
                                ?_EUSART1_Write 0001                                 __end_of_isprint 297E  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0009                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 0020  
                                         stoa@l 0028                                           stoa@p 0026  
                                         stoa@s 0016                                           stoa@w 0022  
                                         ttemp5 0058                                           ttemp6 005B  
                                         ttemp7 005F                                           status 000FD8  
                                         wtemp8 0058                                  __CFG_HFOFST$ON 000000  
                               __end_of_strcspn 2638      __end_of_EUSART1_DefaultFramingErrorHandler 2C32  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 2C30  
                                __CFG_PBADEN$ON 000000                                _timer_setdisplay 2A0C  
                               __initialization 21D2                                  timer_write@dot 000C  
                                  __end_of_atoi 1B40                                    __end_of_ctoa 2686  
                    __end_of_EUSART1_Initialize 235E                                    __end_of_main 1308  
                                  __end_of_dtoa 111E                                    __end_of_stoa 1A06  
                   __end_of_temperature_monitor 14B2                         __end_of_TMR2_Initialize 2B5A  
                                     ??_ADC_ISR 0001                     ?_INTERRUPT_InterruptManager 0001  
                      __size_of_timer_interrupt 0042                                          ??_atoi 0012  
                                        ??_ctoa 0029                        _TMR2_SetInterruptHandler 2BB4  
                                        ??_main 004E                                          ??_dtoa 0030  
                                        ??_stoa 0018                                   __activetblptr 000003  
                         ?_EUSART1_Transmit_ISR 0001                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 000B                                          ?_fputs 0014  
                                        _ADRESH 000FC4                                          ?_login 0012  
                                        _ADRESL 000FC3                                ___awdiv@dividend 0009  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                              ??_timer_writeInt 0019                    __size_of_EUSART1_is_rx_ready 000E  
                                        i2l4210 2B1C                                  __CFG_WDTEN$OFF 000000  
                                        i2l4308 2A1A                                          i2l4734 2A88  
                                        i2l4754 2136                                          i2l4698 2736  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                              timer_write@display 0009  
                                        _TXREG1 000FAD                                __end_of___xxtofl 18C6  
                                        _TXSTA1 000FAC                                  __CFG_XINST$OFF 000000  
                        authentication@password 0100                                    vfprintf@cfmt 004C  
                                        ___flge 1C64                                       ??___aodiv 0019  
                                     ??___fladd 0011                                       ??___aomod 0019  
                                        ___wmul 2AB8                                       ??___awdiv 000D  
                                     ??___flneg 000D                                  __CFG_STVREN$ON 000000  
                                     ??___awmod 0015                                       ??___flmul 0011  
                                     ??___flsub 0021                                       ??___fltol 0041  
                                     ??___lwdiv 0012                        ?_EUSART1_SetErrorHandler 0009  
                                        clear_0 2228                                          clear_1 2236  
                                        clear_2 2248                                          clear_3 2254  
                              ___awdiv@quotient 000F                                          _logout 2BF0  
                               ___awmod@divisor 0013                                __end_of_readline 163E  
                               ___awmod@counter 0015                                          _printf 2A90  
                                        pad@buf 001D                ??_EUSART1_SetOverrunErrorHandler 000B  
               ?_EUSART1_SetOverrunErrorHandler 0009                                          ctoa@fp 0026  
                                        _roundf 03D4                          authentication@username 0140  
                                        dtoa@fp 0026                                          _strchr 2752  
                                        _strcmp 243A                                          _strlen 26CC  
                                        _strtok 1DEE                                          _strspn 2598  
                                        fputc@c 000B                                __end_of_validate 27D2  
                                        fputs@c 0018                                          fputs@i 0019  
                                        fputs@s 0014                                       ??_isdigit 000B  
                                     ??_isgraph 000B                                    __mediumconst FBC2  
                                     ??_isspace 000B                                       ??_isprint 000B  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                        ADC_GetConversion@channel 000D  
                                        stoa@cp 0024                                          stoa@fp 0014  
                              __end_of_vfprintf 24F0                                 ??_EUSART1_Write 0009  
                              timer_control@val 00C8        TMR2_SetInterruptHandler@InterruptHandler 0009  
                                  ?_timer_start 0001                                    ?_timer_write 0009  
                                     ??_strcspn 0011                                 _eusart1RxBuffer 03C0  
                              __end_of_username 2BAA                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0060                                      ___flge@ff1 0009  
                                    ___flge@ff2 000D                                    ___xxtofl@arg 001F  
                                  ___xxtofl@exp 001E                               _SYSTEM_Initialize 2B20  
                                  ___xxtofl@val 0015                                      __accesstop 0060  
                       __end_of__initialization 225A                                      ___flneg@f1 0009  
                                 ?_isauthorized 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                      ___fltol@f1 003D  
                                _authentication 1F54                                     readline@str 00C6  
                __size_of_EUSART1_RxDataHandler 0020                   __end_of_EUSART1_RxDataHandler 2B20  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 2B92  
                                  __pidataBANK1 2C2A                                    __pidataBANK2 2C2C  
                           ??_SYSTEM_Initialize 000B                                 timer_write@digt 000F  
                                 __end_of_clear FBC8                                       ?_TMR2_ISR 0001  
                                 __end_of_fputc 243A                                   __end_of_fputs 2886  
                                 __end_of_login 29DE                                   __end_of_putch 2BB4  
                                 __end_of_toint FBC7                                ?_TMR2_Initialize 0001  
                          __end_of_EUSART1_Read 284E                          ??_EUSART1_Transmit_ISR 0001  
                                    ___username 0074                     __end_of_EUSART1_Receive_ISR 213C  
                             ??_timer_interrupt 0005                              __size_of_help_menu 0056  
                                       ??_fputc 000F                       __end_of_SYSTEM_Initialize 2B3E  
                                       ??_fputs 0018                                         ??_login 0016  
                                       ??_putch 000A                                   _eusart1RxHead 0053  
                                 _eusart1TxHead 0056                                   _eusart1RxTail 0052  
                                    __pbssBANK0 0060                                      __pbssBANK3 0300  
                                    __pbssBANK4 0400                                   _eusart1TxTail 0055  
             _EUSART1_TxDefaultInterruptHandler 0080                 ??_EUSART1_SetRxInterruptHandler 000B  
                               __CFG_PLLCFG$OFF 000000                                  ??_isauthorized 0009  
                        __end_of_authentication 2000                 __end_of_EUSART1_SetErrorHandler 2BF0  
                            __CFG_CCP2MX$PORTC1 000000                                ??_FVR_Initialize 0009  
                                       ?___flge 0009                                         ?___wmul 0009  
                                    ??_TMR2_ISR 0005                              __CFG_CCP3MX$PORTB5 000000  
                              readline@password 00C8                                         _ADC_ISR 2C26  
                                       ?_logout 0001                                         ?_printf 00BC  
                                       ?_roundf 0023                         __size_of_ADC_Initialize 0018  
                                       ?_strchr 0009                                         ?_strcmp 0009  
                                       ?_strlen 0009          __end_of_EUSART1_SetFramingErrorHandler 2BE6  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2BDC  
                                       ?_strtok 0014                                         ?_strspn 000D  
                      __end_of_timer_setdisplay 2A3A                                       ?___xxtofl 0015  
                  ?_EUSART1_DefaultErrorHandler 0001                                   _readline$1220 00CF  
                                 _readline$1219 00CD                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0266                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                 ?_authentication 0001  
                                     ?_readline 00C6                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 0000                                         __Lparam 0000  
                                     ?_validate 000E                      ??_TMR2_SetInterruptHandler 000B  
                             __end_of_help_menu 2546                                 __size_of___flge 00D0  
                                       ___aodiv 163E                                         ___fladd 070E  
                                       ___aomod 1B40                                         ___awdiv 2264  
                                       ___flneg 29DE                                         ___awmod 235E  
                                       ___flmul 0082                                         ___flsub 2686  
                                       ___fltol 1D34                                 __size_of___wmul 0026  
                         __end_of_timer_control 0EDC                    temperature_monitor@size_1105 01D1  
                                       ___lwdiv 2546                                       ?_vfprintf 00B6  
                           _EUSART1_is_rx_ready 2B84                                         __pcinit 21D2  
                                     ?_username 0009                                         __ramtop 1000  
                               __size_of_logout 0008                                         __ptext0 111E  
                                       __ptext1 2BA0                                         __ptext2 0C80  
                                       __ptext3 2C00                                         __ptext4 2C1E  
                                       __ptext5 1308                                         __ptext6 2000  
                                       __ptext7 1EA2                                         __ptext8 235E  
                                       __ptext9 2264                                 __size_of_printf 0028  
                               __size_of_roundf 033A                                 __size_of_strchr 0040  
                               __size_of_strcmp 005E                                 __size_of_strlen 0044  
                               __size_of_strtok 00B4                                 __size_of_strspn 0050  
                         _OSCILLATOR_Initialize 2B72                                       _T2CONbits 000FBA  
                                  __size_of_abs 0032                                    __size_of_pad 0096  
                         __end_of_timer_running 2C22                                         _isdigit 291E  
                                    ??___xxtofl 0019                  temperature_monitor@temperature 0100  
                                       _isgraph 297E                                ___awmod@dividend 0011  
                            _EUSART1_Initialize 22E8                        ??_PIN_MANAGER_Initialize 0009  
                                       _isspace 27D2                                         _isprint 294E  
                 ??_EUSART1_DefaultErrorHandler 0001                                         atoi@neg 0016  
                    temperature_monitor@celsius 01CD                      __size_of_SYSTEM_Initialize 001E  
                                       _running 0050                                         _strcspn 25E8  
                          end_of_initialization 225A                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                            __size_of_timer_start 0006  
                          __size_of_timer_write 00B2                                         fputc@fp 000D  
                   _EUSART1_OverrunErrorHandler 007A                                         fputs@fp 0016  
                              validate@password 0010                                      ??_readline 00C9  
         __end_of_EUSART1_SetRxInterruptHandler 2BD2          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 2BC8                                      ??_validate 0012  
                             __end_of_vfpfcnvrt 0C80                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 003E                                         roundf@e 002F  
                              validate@username 000E                                         roundf@u 0035  
                                       roundf@x 0023                                         roundf@y 0039  
                             timer_control@args 00C6                                      ??_vfprintf 004C  
                          ??_EUSART1_Initialize 000B                            temperature_monitor@i 01D3  
                                       strchr@c 000B                                         strchr@s 0009  
                                       strcmp@l 0009                                         strcmp@r 000B  
                                       strlen@a 000B                                         strlen@s 0009  
                                    ??_username 000B                                         strspn@c 000F  
                                       strspn@i 0012                                         strtok@p 006C  
                                       strtok@s 0014                                         strspn@s 000D  
                                    _timer_stop 2C00                            __end_of_isauthorized 2C12  
                                   ___fladd@grs 0018                    __size_of_temperature_monitor 01AA  
                                 ___xxtofl@sign 001D                                       _USER_NAME 00DD  
                                     _USER_PASS 00DB                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0009                           ??_EUSART1_is_rx_ready 0009  
                                   ___flmul@grs 0017                                    _EUSART1_Read 2810  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 2C26  
          __end_of_TMR2_DefaultInterruptHandler 2C30           __size_of_TMR2_DefaultInterruptHandler 0002  
                  _TMR2_DefaultInterruptHandler 2C2E                                  __end_of___flge 1D34  
                               _timer_interrupt 2710                                     vfpfcnvrt@ap 00A9  
                                   vfpfcnvrt@cp 00B3                                     vfpfcnvrt@fp 00A5  
                                   vfpfcnvrt@ll 00AB                                  __end_of___wmul 2ADE  
                              timer_write@input 000B                                timer_writeInt@d1 0019  
                              timer_writeInt@d2 001B                               __size_of_TMR2_ISR 0022  
                                _ADC_Initialize 2B5A                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_logout 2BF8                                  __end_of_printf 2AB8  
                                __end_of_roundf 070E                                  __end_of_strchr 2792  
                                __end_of_strcmp 2498                                  __end_of_strlen 2710  
                                __end_of_strtok 1EA2                                  __end_of_strspn 25E8  
                           start_initialization 21D2                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 28EE                                     __end_of_pad 21D2  
 EUSART1_SetRxInterruptHandler@interruptHandler 0009   EUSART1_SetTxInterruptHandler@interruptHandler 0009  
                                   putch@txData 000A                           __end_of_EUSART1_Write 28BC  
                                   vfprintf@fmt 00B8                         __size_of_timer_writeInt 00A4  
                                      ??___flge 0011                                        ??___wmul 000D  
                         _EUSART1_RxDataHandler 2B00                  ?_EUSART1_SetRxInterruptHandler 0009  
                        __end_of_ADC_Initialize 2B72                                     __pdataBANK0 00D4  
                                   __pdataBANK1 01D7                                     __pdataBANK2 02C4  
                                      ?_ADC_ISR 0001                                        ??_logout 0009  
                 ?_TMR2_DefaultInterruptHandler 0001                                        ??_printf 004E  
                                      ??_roundf 0027                                     ?_timer_stop 0001  
                                      ??_strchr 000D                                        ??_strcmp 000D  
                                      ??_strlen 000B                                        ??_strtok 0018  
                                      ??_strspn 0011                                  _eusart1RxCount 0051  
                                     ___fladd@a 000D                                       ___fladd@b 0009  
                                     ___display 0082                                       ___flmul@a 000D  
                                     ___flmul@b 0009                                     __pbssCOMRAM 004E  
                                     ___flsub@a 001D                                       ___flsub@b 0019  
             _EUSART1_RxDefaultInterruptHandler 007E                               ?_timer_setdisplay 0001  
                 __size_of_EUSART1_Transmit_ISR 002A                                   __pcstackBANK0 00A5  
                                 __pcstackBANK1 0100                                   __pcstackBANK2 0200  
                              ___aodiv@dividend 0009                        __size_of_TMR2_Initialize 001C  
                             __size_of___xxtofl 0140                                ??_authentication 004E  
                            ??_timer_setdisplay 0003                 ??_EUSART1_SetTxInterruptHandler 000B  
              ??_EUSART1_SetFramingErrorHandler 000B                 ?_EUSART1_SetFramingErrorHandler 0009  
                  __size_of_EUSART1_Receive_ISR 0098                                       _atoi$1836 0018  
                                     _atoi$1837 001C                                       _atoi$1838 001A  
                       __end_of_timer_interrupt 2752                                ___lwdiv@dividend 000E  
                        _PIN_MANAGER_Initialize 2A3A                                       _dtoa$1350 0038  
                             __size_of_readline 018C                        temperature_monitor@ready 01CB  
                                     __pintcode 0008                                   __pmediumconst FBC2  
                      temperature_monitor@timer 01CC                                        ?___aodiv 0009  
                                      ?___fladd 0009                                        ?___aomod 0009  
                                      ?___awdiv 0009                                ___aodiv@quotient 001B  
                                      ?___flneg 0009                           __size_of_isauthorized 0006  
                                      ?___awmod 0011                                        ?___flmul 0009  
                                      ?___flsub 0019                                        ?___fltol 003D  
                             __size_of_validate 0040                                        ?___lwdiv 000E  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 0005  
                              __CFG_PRICLKEN$ON 000000                                       _help_menu 24F0  
                             __size_of_vfprintf 0058                               __size_of_username 000A  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 2C18  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 2C12  
                                      ?_isdigit 0009                                        ?_isgraph 0009  
                          _EUSART1_ErrorHandler 0078                                        ?_isspace 0009  
                                      ?_isprint 0009                         _EUSART1_SetErrorHandler 2BE6  
                              ___lwdiv@quotient 0013                                  __size_of_fputc 006C  
                                __size_of_fputs 0038                                  __size_of_login 0030  
                                      ?_strcspn 000D                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 2C22                                  ___wmul@product 000D  
                                      _LATAbits 000F89         EUSART1_SetErrorHandler@interruptHandler 0009  
                                      _LATCbits 000F8B                                    _isauthorized 2C0C  
                           __size_of_timer_stop 0006                                        _PIE1bits 000F9D  
                           _temperature_monitor 1308             __size_of_INTERRUPT_InterruptManager 0076  
                                      i2u501_48 20CC                                        i2u501_49 20E0  
                                      i2u503_48 20F8                                        i2u503_49 210C  
                                      _PIR1bits 000F9E                                        i2u505_48 2122  
                                      i2u507_48 2AEE                                        i2u532_48 004C  
                                      i2u529_48 0034                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                     main@F6795 0400                                        _TMR2_ISR 2ADE  
                                      _VREFCON0 000F42                                       _vfpfcnvrt 0A1A  
                                    ?_help_menu 0001                                __size_of_ADC_ISR 0004  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 0009  
                       __size_of_FVR_Initialize 0008                            ?_temperature_monitor 0001  
                                     main@input 0200                  ??_TMR2_DefaultInterruptHandler 0001  
             __size_of_TMR2_SetInterruptHandler 000A                                       main@token 02C2  
                     ?_TMR2_SetInterruptHandler 0009                                    _isspace$1872 000F  
                                 ??_timer_start 0009                                   ??_timer_write 000D  
                                    vfpfcnvrt@c 00B5                                     _INTCON2bits 000FF1  
                                     copy_data0 2216                           ?_INTERRUPT_Initialize 0001  
                        __size_of_timer_control 025C                               ??_TMR2_Initialize 000B  
                         EUSART1_Read@readValue 0009                                      roundf@F525 0068  
         __end_of_EUSART1_SetTxInterruptHandler 2BC8          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 2BBE                                ?_timer_interrupt 0001  
                                      __Hrparam 0000                          __size_of_timer_running 0004  
                                _timer_writeInt 2000                                      vfprintf@ap 00BA  
                                      __Lrparam 0000                                      vfprintf@fp 00B6  
                             _ADC_GetConversion 28EE                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0009  
                            ?_ADC_GetConversion 0009                                __size_of___aodiv 0148  
                              __size_of___fladd 030C                                __size_of___aomod 0124  
                              __size_of___awdiv 0084                                __size_of___flneg 002E  
                              __size_of___awmod 0070                                __size_of___flmul 0352  
                              __size_of___flsub 0046                                __size_of___fltol 00BA  
                   __size_of_EUSART1_Initialize 0076                                      ?_vfpfcnvrt 00A5  
                              __size_of___lwdiv 0052                                       readline@i 00D1  
                               ___aodiv@divisor 0011                                 ___aodiv@counter 0019  
                          timer_writeInt@amount 0017                           ??_temperature_monitor 004E  
                     ??_EUSART1_SetErrorHandler 000B             __end_of_EUSART1_DefaultErrorHandler 2C1E  
                   _EUSART1_DefaultErrorHandler 2C18                             ??_ADC_GetConversion 000B  
                   __end_of_EUSART1_is_rx_ready 2B92                                        ___xxtofl 1786  
                              __size_of_isdigit 0030                                __size_of_isgraph 0030  
                               ___lwdiv@divisor 0010                                __size_of_isspace 003E  
                               ___lwdiv@counter 0012                         temperature_monitor@size 01C8  
                              __size_of_isprint 0030                                        __ptext10 2C06  
                                      __ptext11 03D4                                        __ptext20 28EE  
                                      __ptext12 2686                                        __ptext21 1A06  
                                      __ptext13 070E                                        __ptext30 24F0  
                                      __ptext22 27D2                                        __ptext14 29DE  
                                      __ptext31 1F54                                        __ptext23 291E  
                                      __ptext15 0082                                        __ptext40 163E  
                                      __ptext32 14B2                                        __ptext24 2AB8  
                                      __ptext16 1C64                                        __ptext41 2638  
                                      __ptext33 2A90                                        __ptext25 1DEE  
                                      __ptext17 1786                                        __ptext50 2810  
                                      __ptext42 213C                                        __ptext34 2498  
                                      __ptext26 2598                                        __ptext18 2546  
                                      __ptext51 29AE                                        __ptext43 26CC  
                                      __ptext35 0A1A                                        __ptext27 25E8  
                                      __ptext19 1D34                                        __ptext60 2C22  
                                      __ptext52 2792                                        __ptext44 284E  
                                      __ptext36 18C6                                        __ptext28 2752  
                                      __ptext61 2BF8                                        __ptext53 243A  
                                      __ptext45 23CE                                        __ptext37 0EDC  
                                      __ptext29 2BF0                                        __ptext62 22E8  
                                      __ptext54 2C0C                                        __ptext46 2BAA  
                                      __ptext38 28BC                                        __ptext71 2ADE  
                                      __ptext63 2BBE                                        __ptext55 2B20  
                                      __ptext47 2886                                        __ptext39 1B40  
                                      __ptext80 2B00                                        __ptext72 2C2E  
                                      __ptext64 2BC8                                        __ptext56 2B3E  
                                      __ptext48 294E                                        __ptext81 2C26  
                                      __ptext73 2710                                        __ptext65 2BD2  
                                      __ptext57 2BB4                                        __ptext49 297E  
                                      __ptext82 0000                                        __ptext74 2A0C  
                                      __ptext66 2BDC                                        __ptext58 2A3A  
                                      __ptext75 2A66                                        __ptext67 2BE6  
                                      __ptext59 2B72                                        __ptext76 20A4  
                                      __ptext68 2B5A                                        __ptext77 2C12  
                                      __ptext69 2B84                                        __ptext78 2C30  
                                      __ptext79 2C18                                        _display0 00E0  
                                      _display1 00DF                                __size_of_strcspn 0050  
                                 __size_of_atoi 013A                                   __size_of_ctoa 004E  
                                 __size_of_main 01EA                                   __size_of_dtoa 0242  
                                 __size_of_stoa 0140                                        _readline 14B2  
                           __end_of_timer_start 2C0C                             __end_of_timer_write 1F54  
                        __end_of_timer_writeInt 20A4                       __end_of_ADC_GetConversion 291E  
                                      _validate 2792                                       stoa@F1144 00D4  
EUSART1_SetOverrunErrorHandler@interruptHandler 0009                                        int$flags 0057  
                           authentication@F6774 0340                             authentication@F6776 0300  
                                      _vfprintf 2498              __end_of_INTERRUPT_InterruptManager 007E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00BC  
                                      main@args 0240                                   _timer_control 0C80  
                                      _username 2BA0                     _EUSART1_FramingErrorHandler 007C  
                                   ??_help_menu 004E                             _EUSART1_Receive_ISR 20A4  
                                  ??_timer_stop 0009                                ___aomod@dividend 0009  
                                    _INTCONbits 000FF2                                   _timer_running 2C1E  
                                      isdigit@c 0009                          ??_INTERRUPT_Initialize 0009  
                                      isgraph@c 0009                       temperature_monitor@i_1107 01CF  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 0001  
                        temperature_monitor@avg 01D5                          temperature_monitor@key 01CA  
                                  _VREFCON0bits 000F42                                        isspace@c 0009  
                       ?_PIN_MANAGER_Initialize 0001                                        isprint@c 0009  
        __end_of_EUSART1_SetOverrunErrorHandler 2BDC         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2BD2                                      _RCSTA1bits 000FAB  
                               ?_timer_writeInt 0017                    __end_of_EUSART1_Transmit_ISR 2A90  
                     __size_of_timer_setdisplay 002E                              __end_of_timer_stop 2C06  
                              ??_ADC_Initialize 0009                                       strtok@sep 0016  
                                      printf@ap 00C4  EUSART1_SetFramingErrorHandler@interruptHandler 0009  
                ?_EUSART1_SetTxInterruptHandler 0009                                  ?_timer_control 00C6  
                               ___aomod@divisor 0011                                     ??_vfpfcnvrt 004A  
                                      stoa@nuls 0019                                 ___aomod@counter 0019  
                        __size_of_EUSART1_Write 0036                              _eusart1RxLastError 0084  
                                _FVR_Initialize 2BF8                                  ?_timer_running 0001  
                                      strcspn@c 000F                                        strcspn@i 0012  
                                      strcspn@s 000D                               __CFG_T3CMX$PORTC0 000000  
                                   _timer_start 2C06                                   ___fladd@signs 0015  
                                   _timer_write 1EA2                                    ___aodiv@sign 001A  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 2A66  
                                  ___fladd@aexp 0016                                    ___fladd@bexp 0017  
                             __CFG_FOSC$INTIO67 000000                           _TMR2_InterruptHandler 0076  
                       ??_EUSART1_RxDataHandler 0001                      __size_of_ADC_GetConversion 0030  
                                  ___aomod@sign 001A                                     _roundf$2246 0031  
                                   _roundf$2247 002B  
