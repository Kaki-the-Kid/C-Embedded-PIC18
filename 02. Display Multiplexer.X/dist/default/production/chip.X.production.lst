

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Oct 21 12:12:01 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           ; Version 2.05
    74                           ; Generated 20/12/2018 GMT
    75                           ; 
    76                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F26K22 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataCOMRAM
   109  0023A4                     __pidataCOMRAM:
   110                           	opt callstack 0
   111                           
   112                           ;initializer for _displaySwitch
   113  0023A4  01                 	db	1
   114                           
   115                           	psect	idataBANK0
   116  002384                     __pidataBANK0:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for stoa@F1139
   120  002384  28                 	db	40
   121  002385  6E                 	db	110
   122  002386  75                 	db	117
   123  002387  6C                 	db	108
   124  002388  6C                 	db	108
   125  002389  29                 	db	41
   126  00238A  00                 	db	0
   127                           
   128                           	psect	smallconst
   129  001000                     __psmallconst:
   130                           	opt callstack 0
   131  001000  00                 	db	0
   132  001001                     _numbers:
   133                           	opt callstack 0
   134  001001  C0                 	db	192
   135  001002  F9                 	db	249
   136  001003  A4                 	db	164
   137  001004  B0                 	db	176
   138  001005  99                 	db	153
   139  001006  92                 	db	146
   140  001007  02                 	db	2
   141  001008  F8                 	db	248
   142  001009  80                 	db	128
   143  00100A  10                 	db	16
   144  00100B                     __end_of_numbers:
   145                           	opt callstack 0
   146  00100B                     _displayToggle:
   147                           	opt callstack 0
   148  00100B  FD                 	db	253
   149  00100C  FB                 	db	251
   150  00100D  F9                 	db	249
   151  00100E  FF                 	db	255
   152  00100F                     __end_of_displayToggle:
   153                           	opt callstack 0
   154  0000                     _VREFCON0bits	set	3906
   155  0000                     _VREFCON0	set	3906
   156  0000                     _ANSELA	set	3896
   157  0000                     _ANSELB	set	3897
   158  0000                     _ANSELC	set	3898
   159  0000                     _PORTA	set	3968
   160  0000                     _PORTB	set	3969
   161  0000                     _RCREG1	set	4014
   162  0000                     _RCSTA1bits	set	4011
   163  0000                     _TXREG1	set	4013
   164  0000                     _TXSTA1bits	set	4012
   165  0000                     _SPBRGH1	set	4016
   166  0000                     _SPBRG1	set	4015
   167  0000                     _TXSTA1	set	4012
   168  0000                     _RCSTA1	set	4011
   169  0000                     _BAUDCON1	set	4024
   170  0000                     _ADCON0bits	set	4034
   171  0000                     _ADRESH	set	4036
   172  0000                     _ADRESL	set	4035
   173  0000                     _ADCON2	set	4032
   174  0000                     _ADCON1	set	4033
   175  0000                     _ADCON0	set	4034
   176  0000                     _RCONbits	set	4048
   177  0000                     _T2CONbits	set	4026
   178  0000                     _T2CON	set	4026
   179  0000                     _PIE1bits	set	3997
   180  0000                     _PIR1bits	set	3998
   181  0000                     _TMR2	set	4028
   182  0000                     _PR2	set	4027
   183  0000                     _INTCONbits	set	4082
   184  0000                     _INTCON2bits	set	4081
   185  0000                     _WPUB	set	3937
   186  0000                     _TRISC	set	3988
   187  0000                     _TRISB	set	3987
   188  0000                     _TRISA	set	3986
   189  0000                     _LATC	set	3979
   190  0000                     _LATB	set	3978
   191  0000                     _LATA	set	3977
   192  0000                     _OSCTUNE	set	3995
   193  0000                     _OSCCON2	set	4050
   194  0000                     _OSCCON	set	4051
   195  0000                     _PLLRDY	set	32407
   196  00100F                     STR_8:
   197  00100F  25                 	db	37
   198  001010  73                 	db	115	;'s'
   199  001011  2C                 	db	44
   200  001012  20                 	db	32
   201  001013  64                 	db	100	;'d'
   202  001014  69                 	db	105	;'i'
   203  001015  64                 	db	100	;'d'
   204  001016  20                 	db	32
   205  001017  6E                 	db	110	;'n'
   206  001018  6F                 	db	111	;'o'
   207  001019  74                 	db	116	;'t'
   208  00101A  20                 	db	32
   209  00101B  6D                 	db	109	;'m'
   210  00101C  61                 	db	97	;'a'
   211  00101D  74                 	db	116	;'t'
   212  00101E  63                 	db	99	;'c'
   213  00101F  68                 	db	104	;'h'
   214  001020  20                 	db	32
   215  001021  61                 	db	97	;'a'
   216  001022  20                 	db	32
   217  001023  63                 	db	99	;'c'
   218  001024  6F                 	db	111	;'o'
   219  001025  6D                 	db	109	;'m'
   220  001026  6D                 	db	109	;'m'
   221  001027  61                 	db	97	;'a'
   222  001028  6E                 	db	110	;'n'
   223  001029  64                 	db	100	;'d'
   224  00102A  20                 	db	32
   225  00102B  0A                 	db	10
   226  00102C  0D                 	db	13
   227  00102D  00                 	db	0
   228  00102E                     STR_3:
   229  00102E  54                 	db	84	;'T'
   230  00102F  65                 	db	101	;'e'
   231  001030  6D                 	db	109	;'m'
   232  001031  70                 	db	112	;'p'
   233  001032  65                 	db	101	;'e'
   234  001033  72                 	db	114	;'r'
   235  001034  61                 	db	97	;'a'
   236  001035  74                 	db	116	;'t'
   237  001036  75                 	db	117	;'u'
   238  001037  72                 	db	114	;'r'
   239  001038  65                 	db	101	;'e'
   240  001039  3A                 	db	58	;':'
   241  00103A  20                 	db	32
   242  00103B  25                 	db	37
   243  00103C  64                 	db	100	;'d'
   244  00103D  20                 	db	32
   245  00103E  0A                 	db	10
   246  00103F  0D                 	db	13
   247  001040  00                 	db	0
   248  001041                     STR_6:
   249  001041  44                 	db	68	;'D'
   250  001042  65                 	db	101	;'e'
   251  001043  6C                 	db	108	;'l'
   252  001044  61                 	db	97	;'a'
   253  001045  79                 	db	121	;'y'
   254  001046  3A                 	db	58	;':'
   255  001047  20                 	db	32
   256  001048  31                 	db	49	;'1'
   257  001049  30                 	db	48	;'0'
   258  00104A  30                 	db	48	;'0'
   259  00104B  20                 	db	32
   260  00104C  6D                 	db	109	;'m'
   261  00104D  73                 	db	115	;'s'
   262  00104E  20                 	db	32
   263  00104F  0A                 	db	10
   264  001050  0D                 	db	13
   265  001051  00                 	db	0
   266  001052                     STR_7:
   267  001052  44                 	db	68	;'D'
   268  001053  65                 	db	101	;'e'
   269  001054  6C                 	db	108	;'l'
   270  001055  61                 	db	97	;'a'
   271  001056  79                 	db	121	;'y'
   272  001057  20                 	db	32
   273  001058  64                 	db	100	;'d'
   274  001059  6F                 	db	111	;'o'
   275  00105A  6E                 	db	110	;'n'
   276  00105B  65                 	db	101	;'e'
   277  00105C  20                 	db	32
   278  00105D  0A                 	db	10
   279  00105E  0D                 	db	13
   280  00105F  00                 	db	0
   281  001060                     STR_4:
   282  001060  64                 	db	100	;'d'
   283  001061  65                 	db	101	;'e'
   284  001062  6C                 	db	108	;'l'
   285  001063  61                 	db	97	;'a'
   286  001064  79                 	db	121	;'y'
   287  001065  00                 	db	0
   288  001066                     STR_1:
   289  001066  74                 	db	116	;'t'
   290  001067  65                 	db	101	;'e'
   291  001068  6D                 	db	109	;'m'
   292  001069  70                 	db	112	;'p'
   293  00106A  00                 	db	0
   294  0000                     
   295                           ; #config settings
   296  00106B  00                 	db	0	; dummy byte at the end
   297  0000                     
   298                           	psect	cinit
   299  001E6A                     __pcinit:
   300                           	opt callstack 0
   301  001E6A                     start_initialization:
   302                           	opt callstack 0
   303  001E6A                     __initialization:
   304                           	opt callstack 0
   305                           
   306                           ; Initialize objects allocated to BANK0 (7 bytes)
   307                           ; load TBLPTR registers with __pidataBANK0
   308  001E6A  0E84               	movlw	low __pidataBANK0
   309  001E6C  6EF6               	movwf	tblptrl,c
   310  001E6E  0E23               	movlw	high __pidataBANK0
   311  001E70  6EF7               	movwf	tblptrh,c
   312  001E72  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   313  001E74  6EF8               	movwf	tblptru,c
   314  001E76  EE00  F0CF         	lfsr	0,__pdataBANK0
   315  001E7A  EE10 F007          	lfsr	1,7
   316  001E7E                     copy_data0:
   317  001E7E  0009               	tblrd		*+
   318  001E80  CFF5 FFEE          	movff	tablat,postinc0
   319  001E84  50E5               	movf	postdec1,w,c
   320  001E86  50E1               	movf	fsr1l,w,c
   321  001E88  E1FA               	bnz	copy_data0
   322                           
   323                           ; Initialize objects allocated to COMRAM (1 bytes)
   324                           ; load TBLPTR registers with __pidataCOMRAM
   325  001E8A  0EA4               	movlw	low __pidataCOMRAM
   326  001E8C  6EF6               	movwf	tblptrl,c
   327  001E8E  0E23               	movlw	high __pidataCOMRAM
   328  001E90  6EF7               	movwf	tblptrh,c
   329  001E92  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   330  001E94  6EF8               	movwf	tblptru,c
   331  001E96  0009               	tblrd		*+	;fetch initializer
   332  001E98  CFF5 F04F          	movff	tablat,__pdataCOMRAM
   333                           
   334                           ; Clear objects allocated to BANK2 (200 bytes)
   335  001E9C  EE02  F000         	lfsr	0,__pbssBANK2
   336  001EA0  0EC8               	movlw	200
   337  001EA2                     clear_0:
   338  001EA2  6AEE               	clrf	postinc0,c
   339  001EA4  06E8               	decf	wreg,f,c
   340  001EA6  E1FD               	bnz	clear_0
   341                           
   342                           ; Clear objects allocated to BANK1 (192 bytes)
   343  001EA8  EE01  F000         	lfsr	0,__pbssBANK1
   344  001EAC  0EC0               	movlw	192
   345  001EAE                     clear_1:
   346  001EAE  6AEE               	clrf	postinc0,c
   347  001EB0  06E8               	decf	wreg,f,c
   348  001EB2  E1FD               	bnz	clear_1
   349                           
   350                           ; Clear objects allocated to BANK0 (60 bytes)
   351  001EB4  EE00  F060         	lfsr	0,__pbssBANK0
   352  001EB8  0E3C               	movlw	60
   353  001EBA                     clear_2:
   354  001EBA  6AEE               	clrf	postinc0,c
   355  001EBC  06E8               	decf	wreg,f,c
   356  001EBE  E1FD               	bnz	clear_2
   357                           
   358                           ; Clear objects allocated to COMRAM (14 bytes)
   359  001EC0  EE00  F041         	lfsr	0,__pbssCOMRAM
   360  001EC4  0E0E               	movlw	14
   361  001EC6                     clear_3:
   362  001EC6  6AEE               	clrf	postinc0,c
   363  001EC8  06E8               	decf	wreg,f,c
   364  001ECA  E1FD               	bnz	clear_3
   365  001ECC                     end_of_initialization:
   366                           	opt callstack 0
   367  001ECC                     __end_of__initialization:
   368                           	opt callstack 0
   369  001ECC  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   370  001ECE  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   371  001ED0  0100               	movlb	0
   372  001ED2  EFFC  F00A         	goto	_main	;jump to C main() function
   373                           
   374                           	psect	bssCOMRAM
   375  000041                     __pbssCOMRAM:
   376                           	opt callstack 0
   377  000041                     _prec:
   378                           	opt callstack 0
   379  000041                     	ds	2
   380  000043                     _flags:
   381                           	opt callstack 0
   382  000043                     	ds	2
   383  000045                     _num:
   384                           	opt callstack 0
   385  000045                     	ds	2
   386  000047                     _index:
   387                           	opt callstack 0
   388  000047                     	ds	1
   389  000048                     _eusart1RxLastError:
   390                           	opt callstack 0
   391  000048                     	ds	1
   392  000049                     _eusart1RxCount:
   393                           	opt callstack 0
   394  000049                     	ds	1
   395  00004A                     _eusart1RxTail:
   396                           	opt callstack 0
   397  00004A                     	ds	1
   398  00004B                     _eusart1RxHead:
   399                           	opt callstack 0
   400  00004B                     	ds	1
   401  00004C                     _eusart1TxBufferRemaining:
   402                           	opt callstack 0
   403  00004C                     	ds	1
   404  00004D                     _eusart1TxTail:
   405                           	opt callstack 0
   406  00004D                     	ds	1
   407  00004E                     _eusart1TxHead:
   408                           	opt callstack 0
   409  00004E                     	ds	1
   410                           
   411                           	psect	dataCOMRAM
   412  00004F                     __pdataCOMRAM:
   413                           	opt callstack 0
   414  00004F                     _displaySwitch:
   415                           	opt callstack 0
   416  00004F                     	ds	1
   417                           
   418                           	psect	bssBANK0
   419  000060                     __pbssBANK0:
   420                           	opt callstack 0
   421  000060                     _eusart1TxBuffer:
   422                           	opt callstack 0
   423  000060                     	ds	8
   424  000068                     _nout:
   425                           	opt callstack 0
   426  000068                     	ds	2
   427  00006A                     _width:
   428                           	opt callstack 0
   429  00006A                     	ds	2
   430  00006C                     _avg:
   431                           	opt callstack 0
   432  00006C                     	ds	2
   433  00006E                     _EUSART1_ErrorHandler:
   434                           	opt callstack 0
   435  00006E                     	ds	2
   436  000070                     _EUSART1_OverrunErrorHandler:
   437                           	opt callstack 0
   438  000070                     	ds	2
   439  000072                     _EUSART1_FramingErrorHandler:
   440                           	opt callstack 0
   441  000072                     	ds	2
   442  000074                     _EUSART1_RxDefaultInterruptHandler:
   443                           	opt callstack 0
   444  000074                     	ds	2
   445  000076                     _EUSART1_TxDefaultInterruptHandler:
   446                           	opt callstack 0
   447  000076                     	ds	2
   448  000078                     TMR2_ISR@CountCallBack:
   449                           	opt callstack 0
   450  000078                     	ds	2
   451  00007A                     _TMR2_InterruptHandler:
   452                           	opt callstack 0
   453  00007A                     	ds	2
   454  00007C                     _dbuf:
   455                           	opt callstack 0
   456  00007C                     	ds	32
   457                           
   458                           	psect	dataBANK0
   459  0000CF                     __pdataBANK0:
   460                           	opt callstack 0
   461  0000CF                     stoa@F1139:
   462                           	opt callstack 0
   463  0000CF                     	ds	7
   464                           
   465                           	psect	bssBANK1
   466  000100                     __pbssBANK1:
   467                           	opt callstack 0
   468  000100                     _eusart1RxStatusBuffer:
   469                           	opt callstack 0
   470  000100                     	ds	64
   471  000140                     _eusart1RxBuffer:
   472                           	opt callstack 0
   473  000140                     	ds	64
   474  000180                     _stringArry:
   475                           	opt callstack 0
   476  000180                     	ds	64
   477                           
   478                           	psect	bssBANK2
   479  000200                     __pbssBANK2:
   480                           	opt callstack 0
   481  000200                     _arr:
   482                           	opt callstack 0
   483  000200                     	ds	200
   484                           
   485                           	psect	cstackBANK0
   486  00009C                     __pcstackBANK0:
   487                           	opt callstack 0
   488  00009C                     _dtoa$1093:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x0
   492  00009C                     	ds	2
   493  00009E                     dtoa@p:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x2
   497  00009E                     	ds	2
   498  0000A0                     dtoa@w:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x4
   502  0000A0                     	ds	2
   503  0000A2                     dtoa@s:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x6
   507  0000A2                     	ds	2
   508  0000A4                     dtoa@n:
   509                           	opt callstack 0
   510                           
   511                           ; 8 bytes @ 0x8
   512  0000A4                     	ds	8
   513  0000AC                     dtoa@i:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0x10
   517  0000AC                     	ds	2
   518  0000AE                     ?_vfpfcnvrt:
   519                           	opt callstack 0
   520  0000AE                     vfpfcnvrt@fp:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x12
   524  0000AE                     	ds	2
   525  0000B0                     vfpfcnvrt@fmt:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x14
   529  0000B0                     	ds	2
   530  0000B2                     vfpfcnvrt@ap:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x16
   534  0000B2                     	ds	2
   535  0000B4                     vfpfcnvrt@ll:
   536                           	opt callstack 0
   537                           
   538                           ; 8 bytes @ 0x18
   539  0000B4                     	ds	8
   540  0000BC                     vfpfcnvrt@cp:
   541                           	opt callstack 0
   542                           
   543                           ; 2 bytes @ 0x20
   544  0000BC                     	ds	2
   545  0000BE                     ?_vfprintf:
   546                           	opt callstack 0
   547  0000BE                     vfprintf@fp:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x22
   551  0000BE                     	ds	2
   552  0000C0                     vfprintf@fmt:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x24
   556  0000C0                     	ds	2
   557  0000C2                     vfprintf@ap:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x26
   561  0000C2                     	ds	2
   562  0000C4                     vfprintf@cfmt:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x28
   566  0000C4                     	ds	2
   567  0000C6                     ?_printf:
   568                           	opt callstack 0
   569  0000C6                     printf@fmt:
   570                           	opt callstack 0
   571                           
   572                           ; 2 bytes @ 0x2A
   573  0000C6                     	ds	6
   574  0000CC                     printf@ap:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x30
   578  0000CC                     	ds	2
   579  0000CE                     main@tmp:
   580                           	opt callstack 0
   581                           
   582                           ; 1 bytes @ 0x32
   583  0000CE                     	ds	1
   584                           
   585                           	psect	cstackCOMRAM
   586  000001                     __pcstackCOMRAM:
   587                           	opt callstack 0
   588  000001                     ?___lwmod:
   589                           	opt callstack 0
   590  000001                     ?i2___lwdiv:
   591                           	opt callstack 0
   592  000001                     ___lwmod@dividend:
   593                           	opt callstack 0
   594  000001                     i2___lwdiv@dividend:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x0
   598  000001                     	ds	2
   599  000003                     ___lwmod@divisor:
   600                           	opt callstack 0
   601  000003                     i2___lwdiv@divisor:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x2
   605  000003                     	ds	2
   606  000005                     ___lwmod@counter:
   607                           	opt callstack 0
   608  000005                     i2___lwdiv@quotient:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x4
   612  000005                     	ds	2
   613  000007                     i2___lwdiv@counter:
   614                           	opt callstack 0
   615                           
   616                           ; 1 bytes @ 0x6
   617  000007                     	ds	1
   618  000008                     ??_INTERRUPT_InterruptManager:
   619                           
   620                           ; 1 bytes @ 0x7
   621  000008                     	ds	8
   622  000010                     ?_strncmp:
   623                           	opt callstack 0
   624  000010                     ?_strlen:
   625                           	opt callstack 0
   626  000010                     ?_ADC_GetConversion:
   627                           	opt callstack 0
   628  000010                     ?___lwdiv:
   629                           	opt callstack 0
   630  000010                     ?___aodiv:
   631                           	opt callstack 0
   632  000010                     ?___aomod:
   633                           	opt callstack 0
   634  000010                     EUSART1_Read@readValue:
   635                           	opt callstack 0
   636  000010                     EUSART1_Write@txData:
   637                           	opt callstack 0
   638  000010                     TMR2_SetInterruptHandler@InterruptHandler:
   639                           	opt callstack 0
   640  000010                     EUSART1_SetFramingErrorHandler@interruptHandler:
   641                           	opt callstack 0
   642  000010                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   643                           	opt callstack 0
   644  000010                     EUSART1_SetErrorHandler@interruptHandler:
   645                           	opt callstack 0
   646  000010                     EUSART1_SetTxInterruptHandler@interruptHandler:
   647                           	opt callstack 0
   648  000010                     EUSART1_SetRxInterruptHandler@interruptHandler:
   649                           	opt callstack 0
   650  000010                     delay_ms@milliseconds:
   651                           	opt callstack 0
   652  000010                     ___lwdiv@dividend:
   653                           	opt callstack 0
   654  000010                     memset@dest:
   655                           	opt callstack 0
   656  000010                     strlen@s:
   657                           	opt callstack 0
   658  000010                     strncmp@_l:
   659                           	opt callstack 0
   660  000010                     ___aodiv@dividend:
   661                           	opt callstack 0
   662  000010                     ___aomod@dividend:
   663                           	opt callstack 0
   664                           
   665                           ; 8 bytes @ 0xF
   666  000010                     	ds	1
   667  000011                     putch@txData:
   668                           	opt callstack 0
   669                           
   670                           ; 1 bytes @ 0x10
   671  000011                     	ds	1
   672  000012                     ??_delay_ms:
   673  000012                     ??_ADC_GetConversion:
   674  000012                     ___lwdiv@divisor:
   675                           	opt callstack 0
   676  000012                     memset@c:
   677                           	opt callstack 0
   678  000012                     fputc@c:
   679                           	opt callstack 0
   680  000012                     strlen@a:
   681                           	opt callstack 0
   682  000012                     strncmp@_r:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x11
   686  000012                     	ds	2
   687  000014                     ADC_GetConversion@channel:
   688                           	opt callstack 0
   689  000014                     ___lwdiv@counter:
   690                           	opt callstack 0
   691  000014                     memset@n:
   692                           	opt callstack 0
   693  000014                     fputc@fp:
   694                           	opt callstack 0
   695  000014                     strncmp@n:
   696                           	opt callstack 0
   697                           
   698                           ; 2 bytes @ 0x13
   699  000014                     	ds	1
   700  000015                     ___lwdiv@quotient:
   701                           	opt callstack 0
   702                           
   703                           ; 2 bytes @ 0x14
   704  000015                     	ds	1
   705  000016                     ??_strncmp:
   706  000016                     ??_memset:
   707  000016                     ??_fputc:
   708                           
   709                           ; 1 bytes @ 0x15
   710  000016                     	ds	1
   711  000017                     ??_temps:
   712  000017                     strncmp@l:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x16
   716  000017                     	ds	1
   717  000018                     memset@k:
   718                           	opt callstack 0
   719  000018                     ___aodiv@divisor:
   720                           	opt callstack 0
   721  000018                     ___aomod@divisor:
   722                           	opt callstack 0
   723                           
   724                           ; 8 bytes @ 0x17
   725  000018                     	ds	1
   726  000019                     temps@temp_offset:
   727                           	opt callstack 0
   728  000019                     strncmp@r:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x18
   732  000019                     	ds	1
   733  00001A                     memset@s:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x19
   737  00001A                     	ds	1
   738  00001B                     ?_stoa:
   739                           	opt callstack 0
   740  00001B                     temps@i:
   741                           	opt callstack 0
   742  00001B                     stoa@fp:
   743                           	opt callstack 0
   744  00001B                     fputs@s:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x1A
   748  00001B                     	ds	2
   749  00001D                     temps@i_1042:
   750                           	opt callstack 0
   751  00001D                     stoa@s:
   752                           	opt callstack 0
   753  00001D                     fputs@fp:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x1C
   757  00001D                     	ds	2
   758  00001F                     ??_stoa:
   759  00001F                     fputs@c:
   760                           	opt callstack 0
   761                           
   762                           ; 1 bytes @ 0x1E
   763  00001F                     	ds	1
   764  000020                     ___aodiv@counter:
   765                           	opt callstack 0
   766  000020                     ___aomod@counter:
   767                           	opt callstack 0
   768  000020                     fputs@i:
   769                           	opt callstack 0
   770  000020                     stoa@nuls:
   771                           	opt callstack 0
   772                           
   773                           ; 7 bytes @ 0x1F
   774  000020                     	ds	1
   775  000021                     ___aodiv@sign:
   776                           	opt callstack 0
   777  000021                     ___aomod@sign:
   778                           	opt callstack 0
   779                           
   780                           ; 1 bytes @ 0x20
   781  000021                     	ds	1
   782  000022                     ?_abs:
   783                           	opt callstack 0
   784  000022                     ?_pad:
   785                           	opt callstack 0
   786  000022                     pad@fp:
   787                           	opt callstack 0
   788  000022                     abs@a:
   789                           	opt callstack 0
   790  000022                     ___aodiv@quotient:
   791                           	opt callstack 0
   792                           
   793                           ; 8 bytes @ 0x21
   794  000022                     	ds	2
   795  000024                     ??_abs:
   796  000024                     pad@buf:
   797                           	opt callstack 0
   798                           
   799                           ; 2 bytes @ 0x23
   800  000024                     	ds	2
   801  000026                     pad@p:
   802                           	opt callstack 0
   803                           
   804                           ; 2 bytes @ 0x25
   805  000026                     	ds	1
   806  000027                     stoa@i:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x26
   810  000027                     	ds	1
   811  000028                     ??_pad:
   812                           
   813                           ; 1 bytes @ 0x27
   814  000028                     	ds	1
   815  000029                     pad@i:
   816                           	opt callstack 0
   817  000029                     stoa@w:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0x28
   821  000029                     	ds	2
   822  00002B                     pad@w:
   823                           	opt callstack 0
   824  00002B                     stoa@cp:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x2A
   828  00002B                     	ds	2
   829  00002D                     ?_dtoa:
   830                           	opt callstack 0
   831  00002D                     dtoa@fp:
   832                           	opt callstack 0
   833  00002D                     stoa@p:
   834                           	opt callstack 0
   835                           
   836                           ; 2 bytes @ 0x2C
   837  00002D                     	ds	2
   838  00002F                     stoa@l:
   839                           	opt callstack 0
   840  00002F                     dtoa@d:
   841                           	opt callstack 0
   842                           
   843                           ; 8 bytes @ 0x2E
   844  00002F                     	ds	8
   845  000037                     ??_dtoa:
   846                           
   847                           ; 1 bytes @ 0x36
   848  000037                     	ds	8
   849  00003F                     ??_vfpfcnvrt:
   850                           
   851                           ; 1 bytes @ 0x3E
   852  00003F                     	ds	2
   853  000041                     
   854                           ; 1 bytes @ 0x40
   855 ;;
   856 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   857 ;;
   858 ;; *************** function _main *****************
   859 ;; Defined at:
   860 ;;		line 86 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  tmp             1   50[BANK0 ] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;Total ram usage:        1 bytes
   879 ;; Hardware stack levels required when called:   14
   880 ;; This function calls:
   881 ;;		_ADC_Initialize
   882 ;;		_EUSART1_Initialize
   883 ;;		_EUSART1_Read
   884 ;;		_EUSART1_is_rx_ready
   885 ;;		_SYSTEM_Initialize
   886 ;;		_TMR2_Initialize
   887 ;;		_TMR2_SetInterruptHandler
   888 ;;		_delay_ms
   889 ;;		_memset
   890 ;;		_printf
   891 ;;		_strncmp
   892 ;;		_temps
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text0
   899  0015F8                     __ptext0:
   900                           	opt callstack 0
   901  0015F8                     _main:
   902                           	opt callstack 17
   903                           
   904                           ;main.c: 88:     SYSTEM_Initialize();
   905                           
   906                           ;incstack = 0
   907  0015F8  EC61  F011         	call	_SYSTEM_Initialize	;wreg free
   908                           
   909                           ;main.c: 95:     (INTCONbits.GIE = 1);
   910  0015FC  8EF2               	bsf	4082,7,c	;volatile
   911                           
   912                           ;main.c: 101:     (INTCONbits.PEIE = 1);
   913  0015FE  8CF2               	bsf	4082,6,c	;volatile
   914                           
   915                           ;main.c: 106:     TMR2_Initialize();
   916  001600  EC70  F011         	call	_TMR2_Initialize	;wreg free
   917                           
   918                           ;main.c: 107:     ADC_Initialize();
   919  001604  EC7F  F011         	call	_ADC_Initialize	;wreg free
   920                           
   921                           ;main.c: 108:     EUSART1_Initialize();
   922  001608  ECFB  F00E         	call	_EUSART1_Initialize	;wreg free
   923                           
   924                           ;main.c: 110:     TMR2_SetInterruptHandler(displayControl);
   925  00160C  0E2E               	movlw	low _displayControl
   926  00160E  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   927  001610  0E1C               	movlw	high _displayControl
   928  001612  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   929  001614  ECA0  F011         	call	_TMR2_SetInterruptHandler	;wreg free
   930  001618                     l3351:
   931                           
   932                           ;main.c: 115:         temps();
   933  001618  EC59  F00D         	call	_temps	;wreg free
   934                           
   935                           ;main.c: 117:         if (EUSART1_is_rx_ready()) {
   936  00161C  EC94  F011         	call	_EUSART1_is_rx_ready	;wreg free
   937  001620  0900               	iorlw	0
   938  001622  B4D8               	btfsc	status,2,c
   939  001624  D7F9               	goto	l3351
   940                           
   941                           ;main.c: 118:             uint8_t tmp = EUSART1_Read();
   942  001626  EC40  F010         	call	_EUSART1_Read	;wreg free
   943  00162A  0100               	movlb	0	; () banked
   944  00162C  6FCE               	movwf	main@tmp& (0+255),b
   945                           
   946                           ; BSR set to: 0
   947                           ;main.c: 120:             if ((tmp == 10 || tmp == 13) && (index <= 64)) {
   948  00162E  0E0A               	movlw	10
   949  001630  19CE               	xorwf	main@tmp& (0+255),w,b
   950  001632  B4D8               	btfsc	status,2,c
   951  001634  D004               	goto	u3140
   952                           
   953                           ; BSR set to: 0
   954  001636  0E0D               	movlw	13
   955  001638  19CE               	xorwf	main@tmp& (0+255),w,b
   956  00163A  A4D8               	btfss	status,2,c
   957  00163C  D064               	goto	l3381
   958  00163E                     u3140:
   959                           
   960                           ; BSR set to: 0
   961  00163E  0E41               	movlw	65
   962  001640  6047               	cpfslt	_index,c
   963  001642  D061               	goto	l3381
   964                           
   965                           ; BSR set to: 0
   966                           ;main.c: 121:                 index = 0;
   967  001644  0E00               	movlw	0
   968  001646  6E47               	movwf	_index,c
   969                           
   970                           ; BSR set to: 0
   971                           ;main.c: 123:                 if (!strncmp(stringArry, "temp", 4)) {
   972  001648  0E80               	movlw	low _stringArry
   973  00164A  6E10               	movwf	strncmp@_l,c
   974  00164C  0E01               	movlw	high _stringArry
   975  00164E  6E11               	movwf	strncmp@_l+1,c
   976  001650  0E66               	movlw	low STR_1
   977  001652  6E12               	movwf	strncmp@_r,c
   978  001654  0E10               	movlw	high STR_1
   979  001656  6E13               	movwf	strncmp@_r+1,c
   980  001658  0E00               	movlw	0
   981  00165A  6E15               	movwf	strncmp@n+1,c
   982  00165C  0E04               	movlw	4
   983  00165E  6E14               	movwf	strncmp@n,c
   984  001660  ECC3  F00D         	call	_strncmp	;wreg free
   985  001664  5010               	movf	?_strncmp,w,c
   986  001666  1011               	iorwf	?_strncmp+1,w,c
   987  001668  A4D8               	btfss	status,2,c
   988  00166A  D00C               	goto	l3369
   989                           
   990                           ;main.c: 124:                     printf("Temperature: %d \n\r", num);
   991  00166C  0E2E               	movlw	low STR_3
   992  00166E  0100               	movlb	0	; () banked
   993  001670  6FC6               	movwf	printf@fmt& (0+255),b
   994  001672  0E10               	movlw	high STR_3
   995  001674  6FC7               	movwf	(printf@fmt+1)& (0+255),b
   996  001676  C045  F0C8         	movff	_num,?_printf+2
   997  00167A  C046  F0C9         	movff	_num+1,?_printf+3
   998  00167E  EC07  F011         	call	_printf	;wreg free
   999                           
  1000                           ;main.c: 125:                 } else if (!strncmp(stringArry, "delay", 5)) {
  1001  001682  D032               	goto	l3379
  1002  001684                     l3369:
  1003  001684  0E80               	movlw	low _stringArry
  1004  001686  6E10               	movwf	strncmp@_l,c
  1005  001688  0E01               	movlw	high _stringArry
  1006  00168A  6E11               	movwf	strncmp@_l+1,c
  1007  00168C  0E60               	movlw	low STR_4
  1008  00168E  6E12               	movwf	strncmp@_r,c
  1009  001690  0E10               	movlw	high STR_4
  1010  001692  6E13               	movwf	strncmp@_r+1,c
  1011  001694  0E00               	movlw	0
  1012  001696  6E15               	movwf	strncmp@n+1,c
  1013  001698  0E05               	movlw	5
  1014  00169A  6E14               	movwf	strncmp@n,c
  1015  00169C  ECC3  F00D         	call	_strncmp	;wreg free
  1016  0016A0  5010               	movf	?_strncmp,w,c
  1017  0016A2  1011               	iorwf	?_strncmp+1,w,c
  1018  0016A4  A4D8               	btfss	status,2,c
  1019  0016A6  D015               	goto	l3377
  1020                           
  1021                           ;main.c: 135:                     printf("Delay: 100 ms \n\r");
  1022  0016A8  0E41               	movlw	low STR_6
  1023  0016AA  0100               	movlb	0	; () banked
  1024  0016AC  6FC6               	movwf	printf@fmt& (0+255),b
  1025  0016AE  0E10               	movlw	high STR_6
  1026  0016B0  6FC7               	movwf	(printf@fmt+1)& (0+255),b
  1027  0016B2  EC07  F011         	call	_printf	;wreg free
  1028                           
  1029                           ;main.c: 136:                     delay_ms(100);
  1030  0016B6  0E00               	movlw	0
  1031  0016B8  6E11               	movwf	delay_ms@milliseconds+1,c
  1032  0016BA  0E64               	movlw	100
  1033  0016BC  6E10               	movwf	delay_ms@milliseconds,c
  1034  0016BE  EC1B  F011         	call	_delay_ms	;wreg free
  1035                           
  1036                           ;main.c: 137:                     printf("Delay done \n\r");
  1037  0016C2  0E52               	movlw	low STR_7
  1038  0016C4  0100               	movlb	0	; () banked
  1039  0016C6  6FC6               	movwf	printf@fmt& (0+255),b
  1040  0016C8  0E10               	movlw	high STR_7
  1041  0016CA  6FC7               	movwf	(printf@fmt+1)& (0+255),b
  1042  0016CC  EC07  F011         	call	_printf	;wreg free
  1043                           
  1044                           ;main.c: 138:                 } else {
  1045  0016D0  D00B               	goto	l3379
  1046  0016D2                     l3377:
  1047                           
  1048                           ;main.c: 139:                     printf("%s, did not match a command \n\r", stringArry)
      +                          ;
  1049  0016D2  0E0F               	movlw	low STR_8
  1050  0016D4  0100               	movlb	0	; () banked
  1051  0016D6  6FC6               	movwf	printf@fmt& (0+255),b
  1052  0016D8  0E10               	movlw	high STR_8
  1053  0016DA  6FC7               	movwf	(printf@fmt+1)& (0+255),b
  1054  0016DC  0E80               	movlw	low _stringArry
  1055  0016DE  6FC8               	movwf	(?_printf+2)& (0+255),b
  1056  0016E0  0E01               	movlw	high _stringArry
  1057  0016E2  6FC9               	movwf	(?_printf+3)& (0+255),b
  1058  0016E4  EC07  F011         	call	_printf	;wreg free
  1059  0016E8                     l3379:
  1060                           
  1061                           ;main.c: 142:                 memset(stringArry, 0, sizeof(stringArry));
  1062  0016E8  0E80               	movlw	low _stringArry
  1063  0016EA  6E10               	movwf	memset@dest,c
  1064  0016EC  0E01               	movlw	high _stringArry
  1065  0016EE  6E11               	movwf	memset@dest+1,c
  1066  0016F0  0E00               	movlw	0
  1067  0016F2  6E13               	movwf	memset@c+1,c
  1068  0016F4  0E00               	movlw	0
  1069  0016F6  6E12               	movwf	memset@c,c
  1070  0016F8  0E00               	movlw	0
  1071  0016FA  6E15               	movwf	memset@n+1,c
  1072  0016FC  0E40               	movlw	64
  1073  0016FE  6E14               	movwf	memset@n,c
  1074  001700  EC9A  F00B         	call	_memset	;wreg free
  1075                           
  1076                           ;main.c: 143:             } else if (index >= 65) {
  1077  001704  D789               	goto	l3351
  1078  001706                     l3381:
  1079                           
  1080                           ; BSR set to: 0
  1081  001706  0E40               	movlw	64
  1082  001708  6447               	cpfsgt	_index,c
  1083  00170A  D002               	goto	l3385
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 144:                 index--;
  1087  00170C  0647               	decf	_index,f,c
  1088                           
  1089                           ;main.c: 145:             } else {
  1090  00170E  D784               	goto	l3351
  1091  001710                     l3385:
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;main.c: 146:                 stringArry[index] = tmp;
  1095  001710  0E80               	movlw	low _stringArry
  1096  001712  2447               	addwf	_index,w,c
  1097  001714  6ED9               	movwf	fsr2l,c
  1098  001716  6ADA               	clrf	fsr2h,c
  1099  001718  0E01               	movlw	high _stringArry
  1100  00171A  22DA               	addwfc	fsr2h,f,c
  1101  00171C  C0CE  FFDF         	movff	main@tmp,indf2
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;main.c: 148:                 index++;
  1105  001720  2A47               	incf	_index,f,c
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;main.c: 150:                 stringArry[index] = 0x00;
  1109  001722  0E80               	movlw	low _stringArry
  1110  001724  2447               	addwf	_index,w,c
  1111  001726  6ED9               	movwf	fsr2l,c
  1112  001728  6ADA               	clrf	fsr2h,c
  1113  00172A  0E01               	movlw	high _stringArry
  1114  00172C  22DA               	addwfc	fsr2h,f,c
  1115  00172E  0E00               	movlw	0
  1116  001730  6EDF               	movwf	indf2,c
  1117  001732  D772               	goto	l3351
  1118  001734                     __end_of_main:
  1119                           	opt callstack 0
  1120                           
  1121 ;; *************** function _temps *****************
  1122 ;; Defined at:
  1123 ;;		line 184 in file "main.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  temp_offset     2   24[COMRAM] unsigned short 
  1128 ;;  i               2   28[COMRAM] int 
  1129 ;;  i               2   26[COMRAM] int 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;Total ram usage:        8 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    6
  1146 ;; This function calls:
  1147 ;;		_ADC_GetConversion
  1148 ;;		___lwdiv
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text1
  1155  001AB2                     __ptext1:
  1156                           	opt callstack 0
  1157  001AB2                     _temps:
  1158                           	opt callstack 24
  1159                           
  1160                           ;main.c: 185:     for (int i = 0; i < 100; i++) {
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;incstack = 0
  1164  001AB2  0E00               	movlw	0
  1165  001AB4  6E1C               	movwf	temps@i+1,c
  1166  001AB6  0E00               	movlw	0
  1167  001AB8  6E1B               	movwf	temps@i,c
  1168  001ABA                     l3247:
  1169                           
  1170                           ;main.c: 186:         arr[i] = ADC_GetConversion(adc_temp);
  1171  001ABA  0E11               	movlw	17
  1172  001ABC  ECAE  F010         	call	_ADC_GetConversion
  1173  001AC0  90D8               	bcf	status,0,c
  1174  001AC2  341B               	rlcf	temps@i,w,c
  1175  001AC4  6ED9               	movwf	fsr2l,c
  1176  001AC6  341C               	rlcf	temps@i+1,w,c
  1177  001AC8  6EDA               	movwf	fsr2h,c
  1178  001ACA  0E00               	movlw	low _arr
  1179  001ACC  26D9               	addwf	fsr2l,f,c
  1180  001ACE  0E02               	movlw	high _arr
  1181  001AD0  22DA               	addwfc	fsr2h,f,c
  1182  001AD2  C010  FFDE         	movff	?_ADC_GetConversion,postinc2
  1183  001AD6  C011  FFDD         	movff	?_ADC_GetConversion+1,postdec2
  1184                           
  1185                           ;main.c: 187:         _delay((unsigned long)((1)*(64000000/4000.0)));
  1186  001ADA  0E15               	movlw	21
  1187  001ADC  6E17               	movwf	??_temps& (0+255),c
  1188  001ADE  0EC6               	movlw	198
  1189  001AE0                     u3197:
  1190  001AE0  2EE8               	decfsz	wreg,f,c
  1191  001AE2  D7FE               	bra	u3197
  1192  001AE4  2E17               	decfsz	??_temps& (0+255),f,c
  1193  001AE6  D7FC               	bra	u3197
  1194  001AE8  D000               	nop2	
  1195                           
  1196                           ;main.c: 188:     }
  1197  001AEA  4A1B               	infsnz	temps@i,f,c
  1198  001AEC  2A1C               	incf	temps@i+1,f,c
  1199  001AEE  BE1C               	btfsc	temps@i+1,7,c
  1200  001AF0  D7E4               	goto	l3247
  1201  001AF2  501C               	movf	temps@i+1,w,c
  1202  001AF4  E104               	bnz	u2990
  1203  001AF6  0E64               	movlw	100
  1204  001AF8  5C1B               	subwf	temps@i,w,c
  1205  001AFA  A0D8               	btfss	status,0,c
  1206  001AFC  D7DE               	goto	l3247
  1207  001AFE                     u2990:
  1208                           
  1209                           ;main.c: 190:     avg = 0;
  1210  001AFE  0E00               	movlw	0
  1211  001B00  0100               	movlb	0	; () banked
  1212  001B02  6F6D               	movwf	(_avg+1)& (0+255),b
  1213  001B04  0E00               	movlw	0
  1214  001B06  6F6C               	movwf	_avg& (0+255),b
  1215                           
  1216                           ;main.c: 191:     for (int i = 0; i < 100; i++) {
  1217  001B08  0E00               	movlw	0
  1218  001B0A  6E1E               	movwf	temps@i_1042+1,c
  1219  001B0C  0E00               	movlw	0
  1220  001B0E  6E1D               	movwf	temps@i_1042,c
  1221  001B10                     l3261:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;main.c: 192:         uint16_t temp_offset = arr[i] - 500;
  1225  001B10  90D8               	bcf	status,0,c
  1226  001B12  341D               	rlcf	temps@i_1042,w,c
  1227  001B14  6ED9               	movwf	fsr2l,c
  1228  001B16  341E               	rlcf	temps@i_1042+1,w,c
  1229  001B18  6EDA               	movwf	fsr2h,c
  1230  001B1A  0E00               	movlw	low _arr
  1231  001B1C  26D9               	addwf	fsr2l,f,c
  1232  001B1E  0E02               	movlw	high _arr
  1233  001B20  22DA               	addwfc	fsr2h,f,c
  1234  001B22  CFDE F017          	movff	postinc2,??_temps
  1235  001B26  CFDD F018          	movff	postdec2,??_temps+1
  1236  001B2A  0E0C               	movlw	12
  1237  001B2C  2417               	addwf	??_temps,w,c
  1238  001B2E  6E19               	movwf	temps@temp_offset,c
  1239  001B30  0EFE               	movlw	254
  1240  001B32  2018               	addwfc	??_temps+1,w,c
  1241  001B34  6E1A               	movwf	temps@temp_offset+1,c
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;main.c: 193:         avg += temp_offset / 10;
  1245  001B36  C019  F010         	movff	temps@temp_offset,___lwdiv@dividend
  1246  001B3A  C01A  F011         	movff	temps@temp_offset+1,___lwdiv@dividend+1
  1247  001B3E  0E00               	movlw	0
  1248  001B40  6E13               	movwf	___lwdiv@divisor+1,c
  1249  001B42  0E0A               	movlw	10
  1250  001B44  6E12               	movwf	___lwdiv@divisor,c
  1251  001B46  ECCD  F00F         	call	___lwdiv	;wreg free
  1252  001B4A  5010               	movf	?___lwdiv,w,c
  1253  001B4C  0100               	movlb	0	; () banked
  1254  001B4E  276C               	addwf	_avg& (0+255),f,b
  1255  001B50  5011               	movf	?___lwdiv+1,w,c
  1256  001B52  236D               	addwfc	(_avg+1)& (0+255),f,b
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;main.c: 194:     }
  1260  001B54  4A1D               	infsnz	temps@i_1042,f,c
  1261  001B56  2A1E               	incf	temps@i_1042+1,f,c
  1262                           
  1263                           ; BSR set to: 0
  1264  001B58  BE1E               	btfsc	temps@i_1042+1,7,c
  1265  001B5A  D7DA               	goto	l3261
  1266  001B5C  501E               	movf	temps@i_1042+1,w,c
  1267  001B5E  E104               	bnz	u3000
  1268  001B60  0E64               	movlw	100
  1269  001B62  5C1D               	subwf	temps@i_1042,w,c
  1270  001B64  A0D8               	btfss	status,0,c
  1271  001B66  D7D4               	goto	l3261
  1272  001B68                     u3000:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;main.c: 196:     num = (avg / 100);
  1276  001B68  C06C  F010         	movff	_avg,___lwdiv@dividend
  1277  001B6C  C06D  F011         	movff	_avg+1,___lwdiv@dividend+1
  1278  001B70  0E00               	movlw	0
  1279  001B72  6E13               	movwf	___lwdiv@divisor+1,c
  1280  001B74  0E64               	movlw	100
  1281  001B76  6E12               	movwf	___lwdiv@divisor,c
  1282  001B78  ECCD  F00F         	call	___lwdiv	;wreg free
  1283  001B7C  C010  F045         	movff	?___lwdiv,_num
  1284  001B80  C011  F046         	movff	?___lwdiv+1,_num+1
  1285  001B84  0012               	return		;funcret
  1286  001B86                     __end_of_temps:
  1287                           	opt callstack 0
  1288                           
  1289 ;; *************** function ___lwdiv *****************
  1290 ;; Defined at:
  1291 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  dividend        2   15[COMRAM] unsigned int 
  1294 ;;  divisor         2   17[COMRAM] unsigned int 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  quotient        2   20[COMRAM] unsigned int 
  1297 ;;  counter         1   19[COMRAM] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  2   15[COMRAM] unsigned int 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;Total ram usage:        7 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    5
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_temps
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text2
  1322  001F9A                     __ptext2:
  1323                           	opt callstack 0
  1324  001F9A                     ___lwdiv:
  1325                           	opt callstack 24
  1326                           
  1327                           ;incstack = 0
  1328  001F9A  0E00               	movlw	0
  1329  001F9C  6E16               	movwf	___lwdiv@quotient+1,c
  1330  001F9E  0E00               	movlw	0
  1331  001FA0  6E15               	movwf	___lwdiv@quotient,c
  1332  001FA2  5012               	movf	___lwdiv@divisor,w,c
  1333  001FA4  1013               	iorwf	___lwdiv@divisor+1,w,c
  1334  001FA6  B4D8               	btfsc	status,2,c
  1335  001FA8  D01C               	goto	l1036
  1336  001FAA  0E01               	movlw	1
  1337  001FAC  6E14               	movwf	___lwdiv@counter,c
  1338  001FAE  D004               	goto	l3187
  1339  001FB0                     l3185:
  1340  001FB0  90D8               	bcf	status,0,c
  1341  001FB2  3612               	rlcf	___lwdiv@divisor,f,c
  1342  001FB4  3613               	rlcf	___lwdiv@divisor+1,f,c
  1343  001FB6  2A14               	incf	___lwdiv@counter,f,c
  1344  001FB8                     l3187:
  1345  001FB8  AE13               	btfss	___lwdiv@divisor+1,7,c
  1346  001FBA  D7FA               	goto	l3185
  1347  001FBC                     u2930:
  1348  001FBC  90D8               	bcf	status,0,c
  1349  001FBE  3615               	rlcf	___lwdiv@quotient,f,c
  1350  001FC0  3616               	rlcf	___lwdiv@quotient+1,f,c
  1351  001FC2  5012               	movf	___lwdiv@divisor,w,c
  1352  001FC4  5C10               	subwf	___lwdiv@dividend,w,c
  1353  001FC6  5013               	movf	___lwdiv@divisor+1,w,c
  1354  001FC8  5811               	subwfb	___lwdiv@dividend+1,w,c
  1355  001FCA  A0D8               	btfss	status,0,c
  1356  001FCC  D005               	goto	l3197
  1357  001FCE  5012               	movf	___lwdiv@divisor,w,c
  1358  001FD0  5E10               	subwf	___lwdiv@dividend,f,c
  1359  001FD2  5013               	movf	___lwdiv@divisor+1,w,c
  1360  001FD4  5A11               	subwfb	___lwdiv@dividend+1,f,c
  1361  001FD6  8015               	bsf	___lwdiv@quotient,0,c
  1362  001FD8                     l3197:
  1363  001FD8  90D8               	bcf	status,0,c
  1364  001FDA  3213               	rrcf	___lwdiv@divisor+1,f,c
  1365  001FDC  3212               	rrcf	___lwdiv@divisor,f,c
  1366  001FDE  2E14               	decfsz	___lwdiv@counter,f,c
  1367  001FE0  D7ED               	goto	u2930
  1368  001FE2                     l1036:
  1369  001FE2  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
  1370  001FE6  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1371  001FEA  0012               	return		;funcret
  1372  001FEC                     __end_of___lwdiv:
  1373                           	opt callstack 0
  1374                           
  1375 ;; *************** function _ADC_GetConversion *****************
  1376 ;; Defined at:
  1377 ;;		line 110 in file "mcc_generated_files/adc.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  channel         1    wreg     enum E5751
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  channel         1   19[COMRAM] enum E5751
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  2   15[COMRAM] unsigned short 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;Total ram usage:        5 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    5
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_temps
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text3
  1406  00215C                     __ptext3:
  1407                           	opt callstack 0
  1408  00215C                     _ADC_GetConversion:
  1409                           	opt callstack 24
  1410                           
  1411                           ;incstack = 0
  1412                           ;ADC_GetConversion@channel stored from wreg
  1413  00215C  6E14               	movwf	ADC_GetConversion@channel,c
  1414                           
  1415                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  1416  00215E  C014  F012         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  1417  002162  4612               	rlncf	??_ADC_GetConversion,f,c
  1418  002164  4612               	rlncf	??_ADC_GetConversion,f,c
  1419  002166  50C2               	movf	4034,w,c	;volatile
  1420  002168  1812               	xorwf	??_ADC_GetConversion,w,c
  1421  00216A  0B83               	andlw	-125
  1422  00216C  1812               	xorwf	??_ADC_GetConversion,w,c
  1423  00216E  6EC2               	movwf	4034,c	;volatile
  1424                           
  1425                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  1426  002170  80C2               	bsf	4034,0,c	;volatile
  1427                           
  1428                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  1429  002172  82C2               	bsf	4034,1,c	;volatile
  1430  002174                     l195:
  1431                           
  1432                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  1433  002174  B2C2               	btfsc	4034,1,c	;volatile
  1434  002176  D7FE               	goto	l195
  1435                           
  1436                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  1437  002178  50C4               	movf	4036,w,c	;volatile
  1438  00217A  6E13               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  1439  00217C  6A12               	clrf	??_ADC_GetConversion& (0+255),c
  1440  00217E  50C3               	movf	4035,w,c	;volatile
  1441  002180  2412               	addwf	??_ADC_GetConversion,w,c
  1442  002182  6E10               	movwf	?_ADC_GetConversion,c
  1443  002184  0E00               	movlw	0
  1444  002186  2013               	addwfc	??_ADC_GetConversion+1,w,c
  1445  002188  6E11               	movwf	?_ADC_GetConversion+1,c
  1446  00218A  0012               	return		;funcret
  1447  00218C                     __end_of_ADC_GetConversion:
  1448                           	opt callstack 0
  1449                           
  1450 ;; *************** function _strncmp *****************
  1451 ;; Defined at:
  1452 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  _l              2   15[COMRAM] PTR const unsigned char 
  1455 ;;		 -> stringArry(64), 
  1456 ;;  _r              2   17[COMRAM] PTR const unsigned char 
  1457 ;;		 -> STR_5(6), STR_2(5), 
  1458 ;;  n               2   19[COMRAM] unsigned int 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  r               2   24[COMRAM] PTR const unsigned char 
  1461 ;;		 -> STR_5(6), STR_2(5), 
  1462 ;;  l               2   22[COMRAM] PTR const unsigned char 
  1463 ;;		 -> stringArry(64), 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  2   15[COMRAM] int 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1473 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;Total ram usage:       11 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    5
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text4
  1488  001B86                     __ptext4:
  1489                           	opt callstack 0
  1490  001B86                     _strncmp:
  1491                           	opt callstack 25
  1492                           
  1493                           ;incstack = 0
  1494  001B86  C010  F017         	movff	strncmp@_l,strncmp@l
  1495  001B8A  C011  F018         	movff	strncmp@_l+1,strncmp@l+1
  1496  001B8E  C012  F019         	movff	strncmp@_r,strncmp@r
  1497  001B92  C013  F01A         	movff	strncmp@_r+1,strncmp@r+1
  1498  001B96  0614               	decf	strncmp@n,f,c
  1499  001B98  A0D8               	btfss	status,0,c
  1500  001B9A  0615               	decf	strncmp@n+1,f,c
  1501  001B9C  2814               	incf	strncmp@n,w,c
  1502  001B9E  E10F               	bnz	l3279
  1503  001BA0  2815               	incf	strncmp@n+1,w,c
  1504  001BA2  A4D8               	btfss	status,2,c
  1505  001BA4  D00C               	goto	l3279
  1506  001BA6  0E00               	movlw	0
  1507  001BA8  6E11               	movwf	?_strncmp+1,c
  1508  001BAA  0E00               	movlw	0
  1509  001BAC  6E10               	movwf	?_strncmp,c
  1510  001BAE  0012               	return	
  1511  001BB0                     l3277:
  1512  001BB0  4A17               	infsnz	strncmp@l,f,c
  1513  001BB2  2A18               	incf	strncmp@l+1,f,c
  1514  001BB4  4A19               	infsnz	strncmp@r,f,c
  1515  001BB6  2A1A               	incf	strncmp@r+1,f,c
  1516  001BB8  0614               	decf	strncmp@n,f,c
  1517  001BBA  A0D8               	btfss	status,0,c
  1518  001BBC  0615               	decf	strncmp@n+1,f,c
  1519  001BBE                     l3279:
  1520  001BBE  C017  FFD9         	movff	strncmp@l,fsr2l
  1521  001BC2  C018  FFDA         	movff	strncmp@l+1,fsr2h
  1522  001BC6  50DF               	movf	indf2,w,c
  1523  001BC8  B4D8               	btfsc	status,2,c
  1524  001BCA  D01E               	goto	u3050
  1525  001BCC  C019  FFF6         	movff	strncmp@r,tblptrl
  1526  001BD0  C01A  FFF7         	movff	strncmp@r+1,tblptrh
  1527  001BD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1528  001BD4  6AF8               	clrf	tblptru,c
  1529  001BD6                     	endif
  1530  001BD6                     	if	0	;tblptru may be non-zero
  1531  001BD6                     	endif
  1532  001BD6  0008               	tblrd		*
  1533  001BD8  50F5               	movf	tablat,w,c
  1534  001BDA  0900               	iorlw	0
  1535  001BDC  B4D8               	btfsc	status,2,c
  1536  001BDE  D014               	goto	u3050
  1537  001BE0  5014               	movf	strncmp@n,w,c
  1538  001BE2  1015               	iorwf	strncmp@n+1,w,c
  1539  001BE4  B4D8               	btfsc	status,2,c
  1540  001BE6  D010               	goto	u3050
  1541  001BE8  C017  FFD9         	movff	strncmp@l,fsr2l
  1542  001BEC  C018  FFDA         	movff	strncmp@l+1,fsr2h
  1543  001BF0  50DF               	movf	indf2,w,c
  1544  001BF2  6E16               	movwf	??_strncmp& (0+255),c
  1545  001BF4  C019  FFF6         	movff	strncmp@r,tblptrl
  1546  001BF8  C01A  FFF7         	movff	strncmp@r+1,tblptrh
  1547  001BFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1548  001BFC  6AF8               	clrf	tblptru,c
  1549  001BFE                     	endif
  1550  001BFE                     	if	0	;tblptru may be non-zero
  1551  001BFE                     	endif
  1552  001BFE  0008               	tblrd		*
  1553  001C00  50F5               	movf	tablat,w,c
  1554  001C02  1816               	xorwf	??_strncmp,w,c
  1555  001C04  B4D8               	btfsc	status,2,c
  1556  001C06  D7D4               	goto	l3277
  1557  001C08                     u3050:
  1558  001C08  C017  FFD9         	movff	strncmp@l,fsr2l
  1559  001C0C  C018  FFDA         	movff	strncmp@l+1,fsr2h
  1560  001C10  50DF               	movf	indf2,w,c
  1561  001C12  6E16               	movwf	??_strncmp& (0+255),c
  1562  001C14  C019  FFF6         	movff	strncmp@r,tblptrl
  1563  001C18  C01A  FFF7         	movff	strncmp@r+1,tblptrh
  1564  001C1C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1565  001C1C  6AF8               	clrf	tblptru,c
  1566  001C1E                     	endif
  1567  001C1E                     	if	0	;tblptru may be non-zero
  1568  001C1E                     	endif
  1569  001C1E  0008               	tblrd		*
  1570  001C20  50F5               	movf	tablat,w,c
  1571  001C22  5C16               	subwf	??_strncmp,w,c
  1572  001C24  6E10               	movwf	?_strncmp,c
  1573  001C26  6A11               	clrf	?_strncmp+1,c
  1574  001C28  A0D8               	btfss	status,0,c
  1575  001C2A  0611               	decf	?_strncmp+1,f,c
  1576  001C2C  0012               	return		;funcret
  1577  001C2E                     __end_of_strncmp:
  1578                           	opt callstack 0
  1579                           
  1580 ;; *************** function _printf *****************
  1581 ;; Defined at:
  1582 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  fmt             2   42[BANK0 ] PTR const unsigned char 
  1585 ;;		 -> STR_8(31), STR_7(14), STR_6(17), STR_3(19), 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  ap              2   48[BANK0 ] PTR void [1]
  1588 ;;		 -> ?_printf(2), 
  1589 ;;  ret             2    0        int 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2   42[BANK0 ] int 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1599 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;Total ram usage:        8 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:   13
  1606 ;; This function calls:
  1607 ;;		_vfprintf
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text5
  1614  00220E                     __ptext5:
  1615                           	opt callstack 0
  1616  00220E                     _printf:
  1617                           	opt callstack 17
  1618                           
  1619                           ;incstack = 0
  1620  00220E  0EC8               	movlw	low (?_printf+2)
  1621  002210  0100               	movlb	0	; () banked
  1622  002212  6FCC               	movwf	printf@ap& (0+255),b
  1623  002214  0E00               	movlw	high (?_printf+2)
  1624  002216  6FCD               	movwf	(printf@ap+1)& (0+255),b
  1625                           
  1626                           ; BSR set to: 0
  1627  002218  0E00               	movlw	0
  1628  00221A  6FBE               	movwf	vfprintf@fp& (0+255),b
  1629  00221C  0E00               	movlw	0
  1630  00221E  6FBF               	movwf	(vfprintf@fp+1)& (0+255),b
  1631  002220  C0C6  F0C0         	movff	printf@fmt,vfprintf@fmt
  1632  002224  C0C7  F0C1         	movff	printf@fmt+1,vfprintf@fmt+1
  1633  002228  0ECC               	movlw	low printf@ap
  1634  00222A  6FC2               	movwf	vfprintf@ap& (0+255),b
  1635  00222C  0E00               	movlw	high printf@ap
  1636  00222E  6FC3               	movwf	(vfprintf@ap+1)& (0+255),b
  1637  002230  ECA1  F00F         	call	_vfprintf	;wreg free
  1638  002234  0012               	return		;funcret
  1639  002236                     __end_of_printf:
  1640                           	opt callstack 0
  1641                           
  1642 ;; *************** function _vfprintf *****************
  1643 ;; Defined at:
  1644 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  fp              2   34[BANK0 ] PTR struct _IO_FILE
  1647 ;;		 -> NULL(0), 
  1648 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
  1649 ;;		 -> STR_8(31), STR_7(14), STR_6(17), STR_3(19), 
  1650 ;;  ap              2   38[BANK0 ] PTR PTR void 
  1651 ;;		 -> printf@ap(2), 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  cfmt            2   40[BANK0 ] PTR unsigned char 
  1654 ;;		 -> STR_8(31), STR_7(14), STR_6(17), STR_3(19), 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  2   34[BANK0 ] int 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1664 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;Total ram usage:        8 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:   12
  1671 ;; This function calls:
  1672 ;;		_vfpfcnvrt
  1673 ;; This function is called by:
  1674 ;;		_printf
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text6
  1679  001F42                     __ptext6:
  1680                           	opt callstack 0
  1681  001F42                     _vfprintf:
  1682                           	opt callstack 17
  1683                           
  1684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1685                           
  1686                           ;incstack = 0
  1687  001F42  C0C0  F0C4         	movff	vfprintf@fmt,vfprintf@cfmt
  1688  001F46  C0C1  F0C5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1689                           
  1690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1691  001F4A  0E00               	movlw	0
  1692  001F4C  0100               	movlb	0	; () banked
  1693  001F4E  6F69               	movwf	(_nout+1)& (0+255),b
  1694  001F50  0E00               	movlw	0
  1695  001F52  6F68               	movwf	_nout& (0+255),b
  1696                           
  1697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1698  001F54  D013               	goto	l3177
  1699  001F56                     l3175:
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1703  001F56  C0BE  F0AE         	movff	vfprintf@fp,vfpfcnvrt@fp
  1704  001F5A  C0BF  F0AF         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1705  001F5E  0EC4               	movlw	low vfprintf@cfmt
  1706  001F60  6FB0               	movwf	vfpfcnvrt@fmt& (0+255),b
  1707  001F62  0E00               	movlw	high vfprintf@cfmt
  1708  001F64  6FB1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1709  001F66  C0C2  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  1710  001F6A  C0C3  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1711  001F6E  EC59  F009         	call	_vfpfcnvrt	;wreg free
  1712  001F72  0100               	movlb	0	; () banked
  1713  001F74  51AE               	movf	?_vfpfcnvrt& (0+255),w,b
  1714  001F76  2768               	addwf	_nout& (0+255),f,b
  1715  001F78  51AF               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1716  001F7A  2369               	addwfc	(_nout+1)& (0+255),f,b
  1717  001F7C                     l3177:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1721  001F7C  C0C4  FFF6         	movff	vfprintf@cfmt,tblptrl
  1722  001F80  C0C5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1723  001F84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1724  001F84  6AF8               	clrf	tblptru,c
  1725  001F86                     	endif
  1726  001F86                     	if	0	;tblptru may be non-zero
  1727  001F86                     	endif
  1728  001F86  0008               	tblrd		*
  1729  001F88  50F5               	movf	tablat,w,c
  1730  001F8A  0900               	iorlw	0
  1731  001F8C  A4D8               	btfss	status,2,c
  1732  001F8E  D7E3               	goto	l3175
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1736  001F90  C068  F0BE         	movff	_nout,?_vfprintf
  1737  001F94  C069  F0BF         	movff	_nout+1,?_vfprintf+1
  1738                           
  1739                           ; BSR set to: 0
  1740  001F98  0012               	return		;funcret
  1741  001F9A                     __end_of_vfprintf:
  1742                           	opt callstack 0
  1743                           
  1744 ;; *************** function _vfpfcnvrt *****************
  1745 ;; Defined at:
  1746 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  1749 ;;		 -> NULL(0), 
  1750 ;;  fmt             2   20[BANK0 ] PTR PTR unsigned char 
  1751 ;;		 -> vfprintf@cfmt(2), 
  1752 ;;  ap              2   22[BANK0 ] PTR PTR void 
  1753 ;;		 -> printf@ap(2), 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  ll              8   24[BANK0 ] long long 
  1756 ;;  llu             8    0        unsigned long long 
  1757 ;;  f               4    0        unsigned long long 
  1758 ;;  vp              3    0        PTR void 
  1759 ;;  ct              3    0        unsigned char [3]
  1760 ;;  cp              2   32[BANK0 ] PTR unsigned char 
  1761 ;;		 -> ?_printf(2), stringArry(64), 
  1762 ;;  i               2    0        int 
  1763 ;;  done            2    0        int 
  1764 ;;  c               1    0        unsigned char 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  2   18[BANK0 ] int 
  1767 ;; Registers used:
  1768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1774 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;Total ram usage:       18 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; Hardware stack levels required when called:   11
  1781 ;; This function calls:
  1782 ;;		_dtoa
  1783 ;;		_fputc
  1784 ;;		_stoa
  1785 ;; This function is called by:
  1786 ;;		_vfprintf
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text7
  1791  0012B2                     __ptext7:
  1792                           	opt callstack 0
  1793  0012B2                     _vfpfcnvrt:
  1794                           	opt callstack 17
  1795                           
  1796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;incstack = 0
  1800  0012B2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1801  0012B6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1802  0012BA  CFDE FFF6          	movff	postinc2,tblptrl
  1803  0012BE  CFDD FFF7          	movff	postdec2,tblptrh
  1804  0012C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1805  0012C2  6AF8               	clrf	tblptru,c
  1806  0012C4                     	endif
  1807  0012C4                     	if	0	;tblptru may be non-zero
  1808  0012C4                     	endif
  1809  0012C4  0008               	tblrd		*
  1810  0012C6  50F5               	movf	tablat,w,c
  1811  0012C8  0A25               	xorlw	37
  1812  0012CA  A4D8               	btfss	status,2,c
  1813  0012CC  D0D6               	goto	l3105
  1814                           
  1815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1816  0012CE  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1817  0012D2  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1818  0012D6  2ADE               	incf	postinc2,f,c
  1819  0012D8  0E00               	movlw	0
  1820  0012DA  22DD               	addwfc	postdec2,f,c
  1821                           
  1822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1823  0012DC  0E00               	movlw	0
  1824  0012DE  0100               	movlb	0	; () banked
  1825  0012E0  6F6B               	movwf	(_width+1)& (0+255),b
  1826  0012E2  0E00               	movlw	0
  1827  0012E4  6F6A               	movwf	_width& (0+255),b
  1828  0012E6  C06A  F043         	movff	_width,_flags
  1829  0012EA  C06B  F044         	movff	_width+1,_flags+1
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1833  0012EE  6841               	setf	_prec,c
  1834  0012F0  6842               	setf	_prec+1,c
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1838  0012F2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1839  0012F6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1840  0012FA  CFDE FFF6          	movff	postinc2,tblptrl
  1841  0012FE  CFDD FFF7          	movff	postdec2,tblptrh
  1842  001302                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1843  001302  6AF8               	clrf	tblptru,c
  1844  001304                     	endif
  1845  001304                     	if	0	;tblptru may be non-zero
  1846  001304                     	endif
  1847  001304  0008               	tblrd		*
  1848  001306  50F5               	movf	tablat,w,c
  1849  001308  0A64               	xorlw	100
  1850  00130A  B4D8               	btfsc	status,2,c
  1851  00130C  D00E               	goto	u2860
  1852                           
  1853                           ; BSR set to: 0
  1854  00130E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1855  001312  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1856  001316  CFDE FFF6          	movff	postinc2,tblptrl
  1857  00131A  CFDD FFF7          	movff	postdec2,tblptrh
  1858  00131E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1859  00131E  6AF8               	clrf	tblptru,c
  1860  001320                     	endif
  1861  001320                     	if	0	;tblptru may be non-zero
  1862  001320                     	endif
  1863  001320  0008               	tblrd		*
  1864  001322  50F5               	movf	tablat,w,c
  1865  001324  0A69               	xorlw	105
  1866  001326  A4D8               	btfss	status,2,c
  1867  001328  D03F               	goto	l3081
  1868  00132A                     u2860:
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1872  00132A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1873  00132E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1874  001332  2ADE               	incf	postinc2,f,c
  1875  001334  0E00               	movlw	0
  1876  001336  22DD               	addwfc	postdec2,f,c
  1877                           
  1878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1879  001338  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1880  00133C  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1881  001340  CFDF F03F          	movff	indf2,??_vfpfcnvrt
  1882  001344  0E02               	movlw	2
  1883  001346  26DE               	addwf	postinc2,f,c
  1884  001348  CFDF F040          	movff	indf2,??_vfpfcnvrt+1
  1885  00134C  0E00               	movlw	0
  1886  00134E  22DD               	addwfc	postdec2,f,c
  1887  001350  C03F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1888  001354  C040  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1889  001358  CFDE F0B4          	movff	postinc2,vfpfcnvrt@ll
  1890  00135C  CFDD F0B5          	movff	postdec2,vfpfcnvrt@ll+1
  1891  001360  0E00               	movlw	0
  1892  001362  BFB5               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1893  001364  0EFF               	movlw	-1
  1894  001366  6FB6               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1895  001368  6FB7               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1896  00136A  6FB8               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1897  00136C  6FB9               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1898  00136E  6FBA               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1899  001370  6FBB               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1903  001372  C0AE  F02D         	movff	vfpfcnvrt@fp,dtoa@fp
  1904  001376  C0AF  F02E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1905  00137A  C0B4  F02F         	movff	vfpfcnvrt@ll,dtoa@d
  1906  00137E  C0B5  F030         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1907  001382  C0B6  F031         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1908  001386  C0B7  F032         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1909  00138A  C0B8  F033         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1910  00138E  C0B9  F034         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1911  001392  C0BA  F035         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1912  001396  C0BB  F036         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1913  00139A  EC36  F008         	call	_dtoa	;wreg free
  1914  00139E  C02D  F0AE         	movff	?_dtoa,?_vfpfcnvrt
  1915  0013A2  C02E  F0AF         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1916  0013A6  0012               	return	
  1917  0013A8                     l3081:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  1921  0013A8  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1922  0013AC  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1923  0013B0  CFDE FFF6          	movff	postinc2,tblptrl
  1924  0013B4  CFDD FFF7          	movff	postdec2,tblptrh
  1925  0013B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1926  0013B8  6AF8               	clrf	tblptru,c
  1927  0013BA                     	endif
  1928  0013BA                     	if	0	;tblptru may be non-zero
  1929  0013BA                     	endif
  1930  0013BA  0008               	tblrd		*
  1931  0013BC  50F5               	movf	tablat,w,c
  1932  0013BE  0A73               	xorlw	115
  1933  0013C0  A4D8               	btfss	status,2,c
  1934  0013C2  D02A               	goto	l3089
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  1938  0013C4  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1939  0013C8  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1940  0013CC  2ADE               	incf	postinc2,f,c
  1941  0013CE  0E00               	movlw	0
  1942  0013D0  22DD               	addwfc	postdec2,f,c
  1943                           
  1944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  1945  0013D2  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1946  0013D6  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1947  0013DA  CFDF F03F          	movff	indf2,??_vfpfcnvrt
  1948  0013DE  0E02               	movlw	2
  1949  0013E0  26DE               	addwf	postinc2,f,c
  1950  0013E2  CFDF F040          	movff	indf2,??_vfpfcnvrt+1
  1951  0013E6  0E00               	movlw	0
  1952  0013E8  22DD               	addwfc	postdec2,f,c
  1953  0013EA  C03F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1954  0013EE  C040  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1955  0013F2  CFDE F0BC          	movff	postinc2,vfpfcnvrt@cp
  1956  0013F6  CFDD F0BD          	movff	postdec2,vfpfcnvrt@cp+1
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  1960  0013FA  C0AE  F01B         	movff	vfpfcnvrt@fp,stoa@fp
  1961  0013FE  C0AF  F01C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  1962  001402  C0BC  F01D         	movff	vfpfcnvrt@cp,stoa@s
  1963  001406  C0BD  F01E         	movff	vfpfcnvrt@cp+1,stoa@s+1
  1964  00140A  EC33  F00C         	call	_stoa	;wreg free
  1965  00140E  C01B  F0AE         	movff	?_stoa,?_vfpfcnvrt
  1966  001412  C01C  F0AF         	movff	?_stoa+1,?_vfpfcnvrt+1
  1967  001416  0012               	return	
  1968  001418                     l3089:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1972  001418  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1973  00141C  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1974  001420  CFDE FFF6          	movff	postinc2,tblptrl
  1975  001424  CFDD FFF7          	movff	postdec2,tblptrh
  1976  001428                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1977  001428  6AF8               	clrf	tblptru,c
  1978  00142A                     	endif
  1979  00142A                     	if	0	;tblptru may be non-zero
  1980  00142A                     	endif
  1981  00142A  0008               	tblrd		*
  1982  00142C  50F5               	movf	tablat,w,c
  1983  00142E  0A25               	xorlw	37
  1984  001430  A4D8               	btfss	status,2,c
  1985  001432  D017               	goto	l3099
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1989  001434  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1990  001438  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1991  00143C  2ADE               	incf	postinc2,f,c
  1992  00143E  0E00               	movlw	0
  1993  001440  22DD               	addwfc	postdec2,f,c
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1997  001442  0E00               	movlw	0
  1998  001444  6E13               	movwf	fputc@c+1,c
  1999  001446  0E25               	movlw	37
  2000  001448  6E12               	movwf	fputc@c,c
  2001  00144A  C0AE  F014         	movff	vfpfcnvrt@fp,fputc@fp
  2002  00144E  C0AF  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2003  001452  EC6B  F00F         	call	_fputc	;wreg free
  2004  001456                     l3095:
  2005                           
  2006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2007  001456  0E00               	movlw	0
  2008  001458  0100               	movlb	0	; () banked
  2009  00145A  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2010  00145C  0E01               	movlw	1
  2011  00145E  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  2012  001460  0012               	return	
  2013  001462                     l3099:
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2017  001462  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2018  001466  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2019  00146A  2ADE               	incf	postinc2,f,c
  2020  00146C  0E00               	movlw	0
  2021  00146E  22DD               	addwfc	postdec2,f,c
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2025  001470  0E00               	movlw	0
  2026  001472  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2027  001474  0E00               	movlw	0
  2028  001476  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  2029  001478  0012               	return	
  2030  00147A                     l3105:
  2031                           
  2032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2033  00147A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2034  00147E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2035  001482  CFDE FFF6          	movff	postinc2,tblptrl
  2036  001486  CFDD FFF7          	movff	postdec2,tblptrh
  2037  00148A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2038  00148A  6AF8               	clrf	tblptru,c
  2039  00148C                     	endif
  2040  00148C                     	if	0	;tblptru may be non-zero
  2041  00148C                     	endif
  2042  00148C  0008               	tblrd		*
  2043  00148E  50F5               	movf	tablat,w,c
  2044  001490  6E12               	movwf	fputc@c,c
  2045  001492  6A13               	clrf	fputc@c+1,c
  2046  001494  C0AE  F014         	movff	vfpfcnvrt@fp,fputc@fp
  2047  001498  C0AF  F015         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2048  00149C  EC6B  F00F         	call	_fputc	;wreg free
  2049                           
  2050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2051  0014A0  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2052  0014A4  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2053  0014A8  2ADE               	incf	postinc2,f,c
  2054  0014AA  0E00               	movlw	0
  2055  0014AC  22DD               	addwfc	postdec2,f,c
  2056  0014AE  D7D3               	goto	l3095
  2057  0014B0                     __end_of_vfpfcnvrt:
  2058                           	opt callstack 0
  2059                           
  2060 ;; *************** function _stoa *****************
  2061 ;; Defined at:
  2062 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  2065 ;;		 -> NULL(0), 
  2066 ;;  s               2   28[COMRAM] PTR unsigned char 
  2067 ;;		 -> ?_printf(2), stringArry(64), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  nuls            7   31[COMRAM] unsigned char [7]
  2070 ;;  l               2   46[COMRAM] int 
  2071 ;;  p               2   44[COMRAM] int 
  2072 ;;  cp              2   42[COMRAM] PTR unsigned char 
  2073 ;;		 -> ?_printf(2), stoa@nuls(7), stringArry(64), 
  2074 ;;  w               2   40[COMRAM] int 
  2075 ;;  i               2   38[COMRAM] int 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2   26[COMRAM] int 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:       22 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    8
  2092 ;; This function calls:
  2093 ;;		_fputc
  2094 ;;		_strlen
  2095 ;; This function is called by:
  2096 ;;		_vfpfcnvrt
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text8
  2101  001866                     __ptext8:
  2102                           	opt callstack 0
  2103  001866                     _stoa:
  2104                           	opt callstack 19
  2105                           
  2106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  2107                           
  2108                           ;incstack = 0
  2109  001866  EE20  F0CF         	lfsr	2,stoa@F1139
  2110  00186A  EE10  F020         	lfsr	1,stoa@nuls
  2111  00186E  0E06               	movlw	6
  2112  001870                     u2751:
  2113  001870  CFDB FFE3          	movff	plusw2,plusw1
  2114  001874  06E8               	decf	wreg,f,c
  2115  001876  E2FC               	bc	u2751
  2116                           
  2117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  2118  001878  C01D  F02B         	movff	stoa@s,stoa@cp
  2119  00187C  C01E  F02C         	movff	stoa@s+1,stoa@cp+1
  2120                           
  2121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  2122  001880  502B               	movf	stoa@cp,w,c
  2123  001882  102C               	iorwf	stoa@cp+1,w,c
  2124  001884  A4D8               	btfss	status,2,c
  2125  001886  D004               	goto	l3017
  2126                           
  2127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  2128  001888  0E20               	movlw	low stoa@nuls
  2129  00188A  6E2B               	movwf	stoa@cp,c
  2130  00188C  0E00               	movlw	high stoa@nuls
  2131  00188E  6E2C               	movwf	stoa@cp+1,c
  2132  001890                     l3017:
  2133                           
  2134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  2135  001890  C02B  F010         	movff	stoa@cp,strlen@s
  2136  001894  C02C  F011         	movff	stoa@cp+1,strlen@s+1
  2137  001898  ECDD  F010         	call	_strlen	;wreg free
  2138  00189C  C010  F02F         	movff	?_strlen,stoa@l
  2139  0018A0  C011  F030         	movff	?_strlen+1,stoa@l+1
  2140                           
  2141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  2142  0018A4  C041  F02D         	movff	_prec,stoa@p
  2143  0018A8  C042  F02E         	movff	_prec+1,stoa@p+1
  2144                           
  2145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  2146  0018AC  BE2E               	btfsc	stoa@p+1,7,c
  2147  0018AE  D00E               	goto	l513
  2148  0018B0  502F               	movf	stoa@l,w,c
  2149  0018B2  5C2D               	subwf	stoa@p,w,c
  2150  0018B4  502E               	movf	stoa@p+1,w,c
  2151  0018B6  0A80               	xorlw	128
  2152  0018B8  6E1F               	movwf	??_stoa& (0+255),c
  2153  0018BA  5030               	movf	stoa@l+1,w,c
  2154  0018BC  0A80               	xorlw	128
  2155  0018BE  581F               	subwfb	??_stoa& (0+255),w,c
  2156  0018C0  B0D8               	btfsc	status,0,c
  2157  0018C2  D004               	goto	l513
  2158  0018C4  C02D  F02F         	movff	stoa@p,stoa@l
  2159  0018C8  C02E  F030         	movff	stoa@p+1,stoa@l+1
  2160  0018CC                     l513:
  2161                           
  2162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  2163  0018CC  C02F  F02D         	movff	stoa@l,stoa@p
  2164  0018D0  C030  F02E         	movff	stoa@l+1,stoa@p+1
  2165                           
  2166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  2167  0018D4  C06A  F029         	movff	_width,stoa@w
  2168  0018D8  C06B  F02A         	movff	_width+1,stoa@w+1
  2169                           
  2170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  2171  0018DC  A043               	btfss	_flags,0,c
  2172  0018DE  D00D               	goto	l3031
  2173  0018E0  D016               	goto	u2800
  2174  0018E2                     l3027:
  2175                           
  2176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  2177  0018E2  0E00               	movlw	0
  2178  0018E4  6E13               	movwf	fputc@c+1,c
  2179  0018E6  0E20               	movlw	32
  2180  0018E8  6E12               	movwf	fputc@c,c
  2181  0018EA  C01B  F014         	movff	stoa@fp,fputc@fp
  2182  0018EE  C01C  F015         	movff	stoa@fp+1,fputc@fp+1
  2183  0018F2  EC6B  F00F         	call	_fputc	;wreg free
  2184                           
  2185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  2186  0018F6  4A2F               	infsnz	stoa@l,f,c
  2187  0018F8  2A30               	incf	stoa@l+1,f,c
  2188  0018FA                     l3031:
  2189                           
  2190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  2191  0018FA  5029               	movf	stoa@w,w,c
  2192  0018FC  5C2F               	subwf	stoa@l,w,c
  2193  0018FE  5030               	movf	stoa@l+1,w,c
  2194  001900  0A80               	xorlw	128
  2195  001902  6E1F               	movwf	??_stoa& (0+255),c
  2196  001904  502A               	movf	stoa@w+1,w,c
  2197  001906  0A80               	xorlw	128
  2198  001908  581F               	subwfb	??_stoa& (0+255),w,c
  2199  00190A  A0D8               	btfss	status,0,c
  2200  00190C  D7EA               	goto	l3027
  2201  00190E                     u2800:
  2202                           
  2203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  2204  00190E  0E00               	movlw	0
  2205  001910  6E28               	movwf	stoa@i+1,c
  2206  001912  0E00               	movlw	0
  2207  001914  6E27               	movwf	stoa@i,c
  2208                           
  2209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  2210  001916  D013               	goto	l3041
  2211  001918                     l3035:
  2212                           
  2213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  2214  001918  C02B  FFD9         	movff	stoa@cp,fsr2l
  2215  00191C  C02C  FFDA         	movff	stoa@cp+1,fsr2h
  2216  001920  50DF               	movf	indf2,w,c
  2217  001922  6E1F               	movwf	??_stoa& (0+255),c
  2218  001924  501F               	movf	??_stoa,w,c
  2219  001926  6E12               	movwf	fputc@c,c
  2220  001928  6A13               	clrf	fputc@c+1,c
  2221  00192A  C01B  F014         	movff	stoa@fp,fputc@fp
  2222  00192E  C01C  F015         	movff	stoa@fp+1,fputc@fp+1
  2223  001932  EC6B  F00F         	call	_fputc	;wreg free
  2224                           
  2225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  2226  001936  4A2B               	infsnz	stoa@cp,f,c
  2227  001938  2A2C               	incf	stoa@cp+1,f,c
  2228                           
  2229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  2230  00193A  4A27               	infsnz	stoa@i,f,c
  2231  00193C  2A28               	incf	stoa@i+1,f,c
  2232  00193E                     l3041:
  2233                           
  2234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  2235  00193E  502D               	movf	stoa@p,w,c
  2236  001940  5C27               	subwf	stoa@i,w,c
  2237  001942  5028               	movf	stoa@i+1,w,c
  2238  001944  0A80               	xorlw	128
  2239  001946  6E1F               	movwf	??_stoa& (0+255),c
  2240  001948  502E               	movf	stoa@p+1,w,c
  2241  00194A  0A80               	xorlw	128
  2242  00194C  581F               	subwfb	??_stoa& (0+255),w,c
  2243  00194E  A0D8               	btfss	status,0,c
  2244  001950  D7E3               	goto	l3035
  2245                           
  2246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  2247  001952  B043               	btfsc	_flags,0,c
  2248  001954  D00D               	goto	l3049
  2249  001956  D016               	goto	u2830
  2250  001958                     l3045:
  2251                           
  2252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  2253  001958  0E00               	movlw	0
  2254  00195A  6E13               	movwf	fputc@c+1,c
  2255  00195C  0E20               	movlw	32
  2256  00195E  6E12               	movwf	fputc@c,c
  2257  001960  C01B  F014         	movff	stoa@fp,fputc@fp
  2258  001964  C01C  F015         	movff	stoa@fp+1,fputc@fp+1
  2259  001968  EC6B  F00F         	call	_fputc	;wreg free
  2260                           
  2261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  2262  00196C  4A2F               	infsnz	stoa@l,f,c
  2263  00196E  2A30               	incf	stoa@l+1,f,c
  2264  001970                     l3049:
  2265                           
  2266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  2267  001970  5029               	movf	stoa@w,w,c
  2268  001972  5C2F               	subwf	stoa@l,w,c
  2269  001974  5030               	movf	stoa@l+1,w,c
  2270  001976  0A80               	xorlw	128
  2271  001978  6E1F               	movwf	??_stoa& (0+255),c
  2272  00197A  502A               	movf	stoa@w+1,w,c
  2273  00197C  0A80               	xorlw	128
  2274  00197E  581F               	subwfb	??_stoa& (0+255),w,c
  2275  001980  A0D8               	btfss	status,0,c
  2276  001982  D7EA               	goto	l3045
  2277  001984                     u2830:
  2278                           
  2279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  2280                           
  2281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  2282  001984  C02F  F01B         	movff	stoa@l,?_stoa
  2283  001988  C030  F01C         	movff	stoa@l+1,?_stoa+1
  2284  00198C  0012               	return		;funcret
  2285  00198E                     __end_of_stoa:
  2286                           	opt callstack 0
  2287                           
  2288 ;; *************** function _dtoa *****************
  2289 ;; Defined at:
  2290 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  fp              2   44[COMRAM] PTR struct _IO_FILE
  2293 ;;		 -> NULL(0), 
  2294 ;;  d               8   46[COMRAM] long long 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  n               8    8[BANK0 ] long long 
  2297 ;;  i               2   16[BANK0 ] int 
  2298 ;;  s               2    6[BANK0 ] int 
  2299 ;;  w               2    4[BANK0 ] int 
  2300 ;;  p               2    2[BANK0 ] int 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  2   44[COMRAM] int 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2310 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Totals:        18      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;Total ram usage:       36 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:   10
  2317 ;; This function calls:
  2318 ;;		___aodiv
  2319 ;;		___aomod
  2320 ;;		_abs
  2321 ;;		_pad
  2322 ;; This function is called by:
  2323 ;;		_vfpfcnvrt
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text9
  2328  00106C                     __ptext9:
  2329                           	opt callstack 0
  2330  00106C                     _dtoa:
  2331                           	opt callstack 17
  2332                           
  2333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2334                           
  2335                           ;incstack = 0
  2336  00106C  C02F  F0A4         	movff	dtoa@d,dtoa@n
  2337  001070  C030  F0A5         	movff	dtoa@d+1,dtoa@n+1
  2338  001074  C031  F0A6         	movff	dtoa@d+2,dtoa@n+2
  2339  001078  C032  F0A7         	movff	dtoa@d+3,dtoa@n+3
  2340  00107C  C033  F0A8         	movff	dtoa@d+4,dtoa@n+4
  2341  001080  C034  F0A9         	movff	dtoa@d+5,dtoa@n+5
  2342  001084  C035  F0AA         	movff	dtoa@d+6,dtoa@n+6
  2343  001088  C036  F0AB         	movff	dtoa@d+7,dtoa@n+7
  2344                           
  2345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  2346  00108C  0100               	movlb	0	; () banked
  2347  00108E  AFAB               	btfss	(dtoa@n+7)& (0+255),7,b
  2348  001090  D002               	goto	u2600
  2349  001092  0E01               	movlw	1
  2350  001094  D001               	goto	u2610
  2351  001096                     u2600:
  2352  001096  0E00               	movlw	0
  2353  001098                     u2610:
  2354  001098  6FA2               	movwf	dtoa@s& (0+255),b
  2355  00109A  6BA3               	clrf	(dtoa@s+1)& (0+255),b
  2356                           
  2357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  2358  00109C  51A2               	movf	dtoa@s& (0+255),w,b
  2359  00109E  11A3               	iorwf	(dtoa@s+1)& (0+255),w,b
  2360  0010A0  B4D8               	btfsc	status,2,c
  2361  0010A2  D010               	goto	l2953
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  2365  0010A4  1FAB               	comf	(dtoa@n+7)& (0+255),f,b
  2366  0010A6  1FAA               	comf	(dtoa@n+6)& (0+255),f,b
  2367  0010A8  1FA9               	comf	(dtoa@n+5)& (0+255),f,b
  2368  0010AA  1FA8               	comf	(dtoa@n+4)& (0+255),f,b
  2369  0010AC  1FA7               	comf	(dtoa@n+3)& (0+255),f,b
  2370  0010AE  1FA6               	comf	(dtoa@n+2)& (0+255),f,b
  2371  0010B0  1FA5               	comf	(dtoa@n+1)& (0+255),f,b
  2372  0010B2  6DA4               	negf	dtoa@n& (0+255),b
  2373  0010B4  0E00               	movlw	0
  2374  0010B6  23A5               	addwfc	(dtoa@n+1)& (0+255),f,b
  2375  0010B8  23A6               	addwfc	(dtoa@n+2)& (0+255),f,b
  2376  0010BA  23A7               	addwfc	(dtoa@n+3)& (0+255),f,b
  2377  0010BC  23A8               	addwfc	(dtoa@n+4)& (0+255),f,b
  2378  0010BE  23A9               	addwfc	(dtoa@n+5)& (0+255),f,b
  2379  0010C0  23AA               	addwfc	(dtoa@n+6)& (0+255),f,b
  2380  0010C2  23AB               	addwfc	(dtoa@n+7)& (0+255),f,b
  2381  0010C4                     l2953:
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  2385  0010C4  AE42               	btfss	_prec+1,7,c
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  2389  0010C6  9243               	bcf	_flags,1,c
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  2393  0010C8  BE42               	btfsc	_prec+1,7,c
  2394  0010CA  D005               	goto	u2640
  2395  0010CC  5042               	movf	_prec+1,w,c
  2396  0010CE  E108               	bnz	l484
  2397  0010D0  0441               	decf	_prec,w,c
  2398  0010D2  B0D8               	btfsc	status,0,c
  2399  0010D4  D005               	goto	l484
  2400  0010D6                     u2640:
  2401                           
  2402                           ; BSR set to: 0
  2403  0010D6  0E00               	movlw	0
  2404  0010D8  6F9F               	movwf	(dtoa@p+1)& (0+255),b
  2405  0010DA  0E01               	movlw	1
  2406  0010DC  6F9E               	movwf	dtoa@p& (0+255),b
  2407  0010DE  D004               	goto	l486
  2408  0010E0                     l484:
  2409                           
  2410                           ; BSR set to: 0
  2411  0010E0  C041  F09E         	movff	_prec,dtoa@p
  2412  0010E4  C042  F09F         	movff	_prec+1,dtoa@p+1
  2413  0010E8                     l486:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  2417  0010E8  C06A  F0A0         	movff	_width,dtoa@w
  2418  0010EC  C06B  F0A1         	movff	_width+1,dtoa@w+1
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  2422  0010F0  51A2               	movf	dtoa@s& (0+255),w,b
  2423  0010F2  11A3               	iorwf	(dtoa@s+1)& (0+255),w,b
  2424  0010F4  A4D8               	btfss	status,2,c
  2425  0010F6  D002               	goto	u2660
  2426                           
  2427                           ; BSR set to: 0
  2428  0010F8  A443               	btfss	_flags,2,c
  2429  0010FA  D003               	goto	l2967
  2430  0010FC                     u2660:
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  2434  0010FC  07A0               	decf	dtoa@w& (0+255),f,b
  2435  0010FE  A0D8               	btfss	status,0,c
  2436  001100  07A1               	decf	(dtoa@w+1)& (0+255),f,b
  2437  001102                     l2967:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  2441  001102  0E00               	movlw	0
  2442  001104  6FAD               	movwf	(dtoa@i+1)& (0+255),b
  2443  001106  0E1F               	movlw	31
  2444  001108  6FAC               	movwf	dtoa@i& (0+255),b
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  2448  00110A  0E00               	movlw	0
  2449  00110C  6F9B               	movwf	(_dbuf+31)& (0+255),b
  2450                           
  2451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2452  00110E  D07D               	goto	l2981
  2453  001110                     l2971:
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  2457  001110  07AC               	decf	dtoa@i& (0+255),f,b
  2458  001112  A0D8               	btfss	status,0,c
  2459  001114  07AD               	decf	(dtoa@i+1)& (0+255),f,b
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  2463  001116  0E7C               	movlw	low _dbuf
  2464  001118  25AC               	addwf	dtoa@i& (0+255),w,b
  2465  00111A  6ED9               	movwf	fsr2l,c
  2466  00111C  0E00               	movlw	high _dbuf
  2467  00111E  21AD               	addwfc	(dtoa@i+1)& (0+255),w,b
  2468  001120  6EDA               	movwf	fsr2h,c
  2469  001122  C0A4  F010         	movff	dtoa@n,___aomod@dividend
  2470  001126  C0A5  F011         	movff	dtoa@n+1,___aomod@dividend+1
  2471  00112A  C0A6  F012         	movff	dtoa@n+2,___aomod@dividend+2
  2472  00112E  C0A7  F013         	movff	dtoa@n+3,___aomod@dividend+3
  2473  001132  C0A8  F014         	movff	dtoa@n+4,___aomod@dividend+4
  2474  001136  C0A9  F015         	movff	dtoa@n+5,___aomod@dividend+5
  2475  00113A  C0AA  F016         	movff	dtoa@n+6,___aomod@dividend+6
  2476  00113E  C0AB  F017         	movff	dtoa@n+7,___aomod@dividend+7
  2477  001142  0E0A               	movlw	10
  2478  001144  6E18               	movwf	___aomod@divisor,c
  2479  001146  0E00               	movlw	0
  2480  001148  6E19               	movwf	___aomod@divisor+1,c
  2481  00114A  0E00               	movlw	0
  2482  00114C  6E1A               	movwf	___aomod@divisor+2,c
  2483  00114E  0E00               	movlw	0
  2484  001150  6E1B               	movwf	___aomod@divisor+3,c
  2485  001152  0E00               	movlw	0
  2486  001154  6E1C               	movwf	___aomod@divisor+4,c
  2487  001156  0E00               	movlw	0
  2488  001158  6E1D               	movwf	___aomod@divisor+5,c
  2489  00115A  0E00               	movlw	0
  2490  00115C  6E1E               	movwf	___aomod@divisor+6,c
  2491  00115E  0E00               	movlw	0
  2492  001160  6E1F               	movwf	___aomod@divisor+7,c
  2493  001162  ECC7  F00C         	call	___aomod	;wreg free
  2494  001166  C010  F037         	movff	?___aomod,??_dtoa
  2495  00116A  C011  F038         	movff	?___aomod+1,??_dtoa+1
  2496  00116E  C012  F039         	movff	?___aomod+2,??_dtoa+2
  2497  001172  C013  F03A         	movff	?___aomod+3,??_dtoa+3
  2498  001176  C014  F03B         	movff	?___aomod+4,??_dtoa+4
  2499  00117A  C015  F03C         	movff	?___aomod+5,??_dtoa+5
  2500  00117E  C016  F03D         	movff	?___aomod+6,??_dtoa+6
  2501  001182  C017  F03E         	movff	?___aomod+7,??_dtoa+7
  2502  001186  C037  F022         	movff	??_dtoa,abs@a
  2503  00118A  C039  F023         	movff	??_dtoa+2,abs@a+1
  2504  00118E  EC95  F010         	call	_abs	;wreg free
  2505  001192  5022               	movf	?_abs,w,c
  2506  001194  0F30               	addlw	48
  2507  001196  6EDF               	movwf	indf2,c
  2508                           
  2509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  2510  001198  0100               	movlb	0	; () banked
  2511  00119A  079E               	decf	dtoa@p& (0+255),f,b
  2512  00119C  A0D8               	btfss	status,0,c
  2513  00119E  079F               	decf	(dtoa@p+1)& (0+255),f,b
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  2517  0011A0  07A0               	decf	dtoa@w& (0+255),f,b
  2518  0011A2  A0D8               	btfss	status,0,c
  2519  0011A4  07A1               	decf	(dtoa@w+1)& (0+255),f,b
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  2523  0011A6  C0A4  F010         	movff	dtoa@n,___aodiv@dividend
  2524  0011AA  C0A5  F011         	movff	dtoa@n+1,___aodiv@dividend+1
  2525  0011AE  C0A6  F012         	movff	dtoa@n+2,___aodiv@dividend+2
  2526  0011B2  C0A7  F013         	movff	dtoa@n+3,___aodiv@dividend+3
  2527  0011B6  C0A8  F014         	movff	dtoa@n+4,___aodiv@dividend+4
  2528  0011BA  C0A9  F015         	movff	dtoa@n+5,___aodiv@dividend+5
  2529  0011BE  C0AA  F016         	movff	dtoa@n+6,___aodiv@dividend+6
  2530  0011C2  C0AB  F017         	movff	dtoa@n+7,___aodiv@dividend+7
  2531  0011C6  0E0A               	movlw	10
  2532  0011C8  6E18               	movwf	___aodiv@divisor,c
  2533  0011CA  0E00               	movlw	0
  2534  0011CC  6E19               	movwf	___aodiv@divisor+1,c
  2535  0011CE  0E00               	movlw	0
  2536  0011D0  6E1A               	movwf	___aodiv@divisor+2,c
  2537  0011D2  0E00               	movlw	0
  2538  0011D4  6E1B               	movwf	___aodiv@divisor+3,c
  2539  0011D6  0E00               	movlw	0
  2540  0011D8  6E1C               	movwf	___aodiv@divisor+4,c
  2541  0011DA  0E00               	movlw	0
  2542  0011DC  6E1D               	movwf	___aodiv@divisor+5,c
  2543  0011DE  0E00               	movlw	0
  2544  0011E0  6E1E               	movwf	___aodiv@divisor+6,c
  2545  0011E2  0E00               	movlw	0
  2546  0011E4  6E1F               	movwf	___aodiv@divisor+7,c
  2547  0011E6  EC58  F00A         	call	___aodiv	;wreg free
  2548  0011EA  C010  F0A4         	movff	?___aodiv,dtoa@n
  2549  0011EE  C011  F0A5         	movff	?___aodiv+1,dtoa@n+1
  2550  0011F2  C012  F0A6         	movff	?___aodiv+2,dtoa@n+2
  2551  0011F6  C013  F0A7         	movff	?___aodiv+3,dtoa@n+3
  2552  0011FA  C014  F0A8         	movff	?___aodiv+4,dtoa@n+4
  2553  0011FE  C015  F0A9         	movff	?___aodiv+5,dtoa@n+5
  2554  001202  C016  F0AA         	movff	?___aodiv+6,dtoa@n+6
  2555  001206  C017  F0AB         	movff	?___aodiv+7,dtoa@n+7
  2556  00120A                     l2981:
  2557                           
  2558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2559  00120A  0100               	movlb	0	; () banked
  2560  00120C  BFAD               	btfsc	(dtoa@i+1)& (0+255),7,b
  2561  00120E  D01F               	goto	u2710
  2562  001210  51AD               	movf	(dtoa@i+1)& (0+255),w,b
  2563  001212  E103               	bnz	u2670
  2564  001214  05AC               	decf	dtoa@i& (0+255),w,b
  2565  001216  A0D8               	btfss	status,0,c
  2566  001218  D01A               	goto	u2710
  2567  00121A                     u2670:
  2568                           
  2569                           ; BSR set to: 0
  2570  00121A  51A4               	movf	dtoa@n& (0+255),w,b
  2571  00121C  11A5               	iorwf	(dtoa@n+1)& (0+255),w,b
  2572  00121E  11A6               	iorwf	(dtoa@n+2)& (0+255),w,b
  2573  001220  11A7               	iorwf	(dtoa@n+3)& (0+255),w,b
  2574  001222  11A8               	iorwf	(dtoa@n+4)& (0+255),w,b
  2575  001224  11A9               	iorwf	(dtoa@n+5)& (0+255),w,b
  2576  001226  11AA               	iorwf	(dtoa@n+6)& (0+255),w,b
  2577  001228  11AB               	iorwf	(dtoa@n+7)& (0+255),w,b
  2578  00122A  A4D8               	btfss	status,2,c
  2579  00122C  D771               	goto	l2971
  2580                           
  2581                           ; BSR set to: 0
  2582  00122E  BF9F               	btfsc	(dtoa@p+1)& (0+255),7,b
  2583  001230  D005               	goto	u2690
  2584  001232  519F               	movf	(dtoa@p+1)& (0+255),w,b
  2585  001234  E102               	bnz	u2691
  2586  001236  059E               	decf	dtoa@p& (0+255),w,b
  2587  001238  B0D8               	btfsc	status,0,c
  2588  00123A                     u2691:
  2589  00123A  D76A               	goto	l2971
  2590  00123C                     u2690:
  2591                           
  2592                           ; BSR set to: 0
  2593  00123C  BFA1               	btfsc	(dtoa@w+1)& (0+255),7,b
  2594  00123E  D007               	goto	u2710
  2595  001240  51A1               	movf	(dtoa@w+1)& (0+255),w,b
  2596  001242  E103               	bnz	u2700
  2597  001244  05A0               	decf	dtoa@w& (0+255),w,b
  2598  001246  A0D8               	btfss	status,0,c
  2599  001248  D002               	goto	u2710
  2600  00124A                     u2700:
  2601                           
  2602                           ; BSR set to: 0
  2603  00124A  B243               	btfsc	_flags,1,c
  2604  00124C  D761               	goto	l2971
  2605  00124E                     u2710:
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  2609  00124E  51A2               	movf	dtoa@s& (0+255),w,b
  2610  001250  11A3               	iorwf	(dtoa@s+1)& (0+255),w,b
  2611  001252  A4D8               	btfss	status,2,c
  2612  001254  D002               	goto	u2730
  2613                           
  2614                           ; BSR set to: 0
  2615  001256  A443               	btfss	_flags,2,c
  2616  001258  D017               	goto	l3005
  2617  00125A                     u2730:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  2621  00125A  07AC               	decf	dtoa@i& (0+255),f,b
  2622  00125C  A0D8               	btfss	status,0,c
  2623  00125E  07AD               	decf	(dtoa@i+1)& (0+255),f,b
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  2627  001260  51A2               	movf	dtoa@s& (0+255),w,b
  2628  001262  11A3               	iorwf	(dtoa@s+1)& (0+255),w,b
  2629  001264  A4D8               	btfss	status,2,c
  2630  001266  D004               	goto	l3001
  2631                           
  2632                           ; BSR set to: 0
  2633  001268  0E00               	movlw	0
  2634  00126A  6F9D               	movwf	(_dtoa$1093+1)& (0+255),b
  2635  00126C  0E2B               	movlw	43
  2636  00126E  D003               	goto	L1
  2637  001270                     l3001:
  2638                           
  2639                           ; BSR set to: 0
  2640  001270  0E00               	movlw	0
  2641  001272  6F9D               	movwf	(_dtoa$1093+1)& (0+255),b
  2642  001274  0E2D               	movlw	45
  2643  001276                     L1:
  2644  001276  6F9C               	movwf	_dtoa$1093& (0+255),b
  2645                           
  2646                           ; BSR set to: 0
  2647  001278  0E7C               	movlw	low _dbuf
  2648  00127A  25AC               	addwf	dtoa@i& (0+255),w,b
  2649  00127C  6ED9               	movwf	fsr2l,c
  2650  00127E  0E00               	movlw	high _dbuf
  2651  001280  21AD               	addwfc	(dtoa@i+1)& (0+255),w,b
  2652  001282  6EDA               	movwf	fsr2h,c
  2653  001284  C09C  FFDF         	movff	_dtoa$1093,indf2
  2654  001288                     l3005:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  2658  001288  C02D  F022         	movff	dtoa@fp,pad@fp
  2659  00128C  C02E  F023         	movff	dtoa@fp+1,pad@fp+1
  2660  001290  0E7C               	movlw	low _dbuf
  2661  001292  25AC               	addwf	dtoa@i& (0+255),w,b
  2662  001294  6E24               	movwf	pad@buf,c
  2663  001296  0E00               	movlw	high _dbuf
  2664  001298  21AD               	addwfc	(dtoa@i+1)& (0+255),w,b
  2665  00129A  6E25               	movwf	pad@buf+1,c
  2666  00129C  C0A0  F026         	movff	dtoa@w,pad@p
  2667  0012A0  C0A1  F027         	movff	dtoa@w+1,pad@p+1
  2668  0012A4  ECB0  F00E         	call	_pad	;wreg free
  2669  0012A8  C022  F02D         	movff	?_pad,?_dtoa
  2670  0012AC  C023  F02E         	movff	?_pad+1,?_dtoa+1
  2671  0012B0  0012               	return		;funcret
  2672  0012B2                     __end_of_dtoa:
  2673                           	opt callstack 0
  2674                           
  2675 ;; *************** function _pad *****************
  2676 ;; Defined at:
  2677 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  2680 ;;		 -> NULL(0), 
  2681 ;;  buf             2   35[COMRAM] PTR unsigned char 
  2682 ;;		 -> dbuf(32), 
  2683 ;;  p               2   37[COMRAM] int 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  w               2   42[COMRAM] int 
  2686 ;;  i               2   40[COMRAM] int 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  2   33[COMRAM] int 
  2689 ;; Registers used:
  2690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2696 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;Total ram usage:       11 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    9
  2703 ;; This function calls:
  2704 ;;		_fputc
  2705 ;;		_fputs
  2706 ;;		_strlen
  2707 ;; This function is called by:
  2708 ;;		_dtoa
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text10
  2713  001D60                     __ptext10:
  2714                           	opt callstack 0
  2715  001D60                     _pad:
  2716                           	opt callstack 17
  2717                           
  2718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2719                           
  2720                           ;incstack = 0
  2721  001D60  A043               	btfss	_flags,0,c
  2722  001D62  D00A               	goto	l2845
  2723                           
  2724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2725  001D64  C024  F01B         	movff	pad@buf,fputs@s
  2726  001D68  C025  F01C         	movff	pad@buf+1,fputs@s+1
  2727  001D6C  C022  F01D         	movff	pad@fp,fputs@fp
  2728  001D70  C023  F01E         	movff	pad@fp+1,fputs@fp+1
  2729  001D74  EC5E  F010         	call	_fputs	;wreg free
  2730  001D78                     l2845:
  2731                           
  2732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2733  001D78  BE27               	btfsc	pad@p+1,7,c
  2734  001D7A  D005               	goto	l2849
  2735  001D7C  C026  F02B         	movff	pad@p,pad@w
  2736  001D80  C027  F02C         	movff	pad@p+1,pad@w+1
  2737  001D84  D004               	goto	l473
  2738  001D86                     l2849:
  2739  001D86  0E00               	movlw	0
  2740  001D88  6E2C               	movwf	pad@w+1,c
  2741  001D8A  0E00               	movlw	0
  2742  001D8C  6E2B               	movwf	pad@w,c
  2743  001D8E                     l473:
  2744                           
  2745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2746  001D8E  0E00               	movlw	0
  2747  001D90  6E2A               	movwf	pad@i+1,c
  2748  001D92  0E00               	movlw	0
  2749  001D94  6E29               	movwf	pad@i,c
  2750                           
  2751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2752  001D96  D00C               	goto	l2855
  2753  001D98                     l2851:
  2754                           
  2755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2756  001D98  0E00               	movlw	0
  2757  001D9A  6E13               	movwf	fputc@c+1,c
  2758  001D9C  0E20               	movlw	32
  2759  001D9E  6E12               	movwf	fputc@c,c
  2760  001DA0  C022  F014         	movff	pad@fp,fputc@fp
  2761  001DA4  C023  F015         	movff	pad@fp+1,fputc@fp+1
  2762  001DA8  EC6B  F00F         	call	_fputc	;wreg free
  2763                           
  2764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2765  001DAC  4A29               	infsnz	pad@i,f,c
  2766  001DAE  2A2A               	incf	pad@i+1,f,c
  2767  001DB0                     l2855:
  2768                           
  2769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2770  001DB0  502B               	movf	pad@w,w,c
  2771  001DB2  5C29               	subwf	pad@i,w,c
  2772  001DB4  502A               	movf	pad@i+1,w,c
  2773  001DB6  0A80               	xorlw	128
  2774  001DB8  6E28               	movwf	??_pad& (0+255),c
  2775  001DBA  502C               	movf	pad@w+1,w,c
  2776  001DBC  0A80               	xorlw	128
  2777  001DBE  5828               	subwfb	??_pad& (0+255),w,c
  2778  001DC0  A0D8               	btfss	status,0,c
  2779  001DC2  D7EA               	goto	l2851
  2780                           
  2781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2782  001DC4  B043               	btfsc	_flags,0,c
  2783  001DC6  D00A               	goto	l2859
  2784                           
  2785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2786  001DC8  C024  F01B         	movff	pad@buf,fputs@s
  2787  001DCC  C025  F01C         	movff	pad@buf+1,fputs@s+1
  2788  001DD0  C022  F01D         	movff	pad@fp,fputs@fp
  2789  001DD4  C023  F01E         	movff	pad@fp+1,fputs@fp+1
  2790  001DD8  EC5E  F010         	call	_fputs	;wreg free
  2791  001DDC                     l2859:
  2792                           
  2793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2794  001DDC  C024  F010         	movff	pad@buf,strlen@s
  2795  001DE0  C025  F011         	movff	pad@buf+1,strlen@s+1
  2796  001DE4  ECDD  F010         	call	_strlen	;wreg free
  2797  001DE8  502B               	movf	pad@w,w,c
  2798  001DEA  2410               	addwf	?_strlen,w,c
  2799  001DEC  6E22               	movwf	?_pad,c
  2800  001DEE  502C               	movf	pad@w+1,w,c
  2801  001DF0  2011               	addwfc	?_strlen+1,w,c
  2802  001DF2  6E23               	movwf	?_pad+1,c
  2803  001DF4  0012               	return		;funcret
  2804  001DF6                     __end_of_pad:
  2805                           	opt callstack 0
  2806                           
  2807 ;; *************** function _strlen *****************
  2808 ;; Defined at:
  2809 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2812 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), stringArry(64), 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  a               2   17[COMRAM] PTR const unsigned char 
  2815 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), stringArry(64), 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  2   15[COMRAM] unsigned int 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;Total ram usage:        4 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    5
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_pad
  2836 ;;		_stoa
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text11
  2841  0021BA                     __ptext11:
  2842                           	opt callstack 0
  2843  0021BA                     _strlen:
  2844                           	opt callstack 21
  2845                           
  2846                           ;incstack = 0
  2847  0021BA  C010  F012         	movff	strlen@s,strlen@a
  2848  0021BE  C011  F013         	movff	strlen@s+1,strlen@a+1
  2849  0021C2  D002               	goto	l2835
  2850  0021C4                     l2833:
  2851  0021C4  4A10               	infsnz	strlen@s,f,c
  2852  0021C6  2A11               	incf	strlen@s+1,f,c
  2853  0021C8                     l2835:
  2854  0021C8  C010  FFD9         	movff	strlen@s,fsr2l
  2855  0021CC  C011  FFDA         	movff	strlen@s+1,fsr2h
  2856  0021D0  50DF               	movf	indf2,w,c
  2857  0021D2  A4D8               	btfss	status,2,c
  2858  0021D4  D7F7               	goto	l2833
  2859  0021D6  5012               	movf	strlen@a,w,c
  2860  0021D8  5C10               	subwf	strlen@s,w,c
  2861  0021DA  6E10               	movwf	?_strlen,c
  2862  0021DC  5013               	movf	strlen@a+1,w,c
  2863  0021DE  5811               	subwfb	strlen@s+1,w,c
  2864  0021E0  6E11               	movwf	?_strlen+1,c
  2865  0021E2  0012               	return		;funcret
  2866  0021E4                     __end_of_strlen:
  2867                           	opt callstack 0
  2868                           
  2869 ;; *************** function _fputs *****************
  2870 ;; Defined at:
  2871 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  s               2   26[COMRAM] PTR const unsigned char 
  2874 ;;		 -> dbuf(32), 
  2875 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2876 ;;		 -> NULL(0), 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  i               2   31[COMRAM] int 
  2879 ;;  c               1   30[COMRAM] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  2   26[COMRAM] int 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;Total ram usage:        7 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    8
  2896 ;; This function calls:
  2897 ;;		_fputc
  2898 ;; This function is called by:
  2899 ;;		_pad
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text12
  2904  0020BC                     __ptext12:
  2905                           	opt callstack 0
  2906  0020BC                     _fputs:
  2907                           	opt callstack 17
  2908                           
  2909                           ;incstack = 0
  2910  0020BC  0E00               	movlw	0
  2911  0020BE  6E21               	movwf	fputs@i+1,c
  2912  0020C0  0E00               	movlw	0
  2913  0020C2  6E20               	movwf	fputs@i,c
  2914  0020C4  D00B               	goto	l2829
  2915  0020C6                     l2825:
  2916  0020C6  C01F  F012         	movff	fputs@c,fputc@c
  2917  0020CA  6A13               	clrf	fputc@c+1,c
  2918  0020CC  C01D  F014         	movff	fputs@fp,fputc@fp
  2919  0020D0  C01E  F015         	movff	fputs@fp+1,fputc@fp+1
  2920  0020D4  EC6B  F00F         	call	_fputc	;wreg free
  2921  0020D8  4A20               	infsnz	fputs@i,f,c
  2922  0020DA  2A21               	incf	fputs@i+1,f,c
  2923  0020DC                     l2829:
  2924  0020DC  5020               	movf	fputs@i,w,c
  2925  0020DE  241B               	addwf	fputs@s,w,c
  2926  0020E0  6ED9               	movwf	fsr2l,c
  2927  0020E2  5021               	movf	fputs@i+1,w,c
  2928  0020E4  201C               	addwfc	fputs@s+1,w,c
  2929  0020E6  6EDA               	movwf	fsr2h,c
  2930  0020E8  50DF               	movf	indf2,w,c
  2931  0020EA  6E1F               	movwf	fputs@c,c
  2932  0020EC  501F               	movf	fputs@c,w,c
  2933  0020EE  B4D8               	btfsc	status,2,c
  2934  0020F0  0012               	return	
  2935  0020F2  D7E9               	goto	l2825
  2936  0020F4                     __end_of_fputs:
  2937                           	opt callstack 0
  2938                           
  2939 ;; *************** function _fputc *****************
  2940 ;; Defined at:
  2941 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  c               2   17[COMRAM] int 
  2944 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2945 ;;		 -> NULL(0), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  2   17[COMRAM] int 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:        9 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    7
  2964 ;; This function calls:
  2965 ;;		_putch
  2966 ;; This function is called by:
  2967 ;;		_pad
  2968 ;;		_stoa
  2969 ;;		_vfpfcnvrt
  2970 ;;		_fputs
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text13
  2975  001ED6                     __ptext13:
  2976                           	opt callstack 0
  2977  001ED6                     _fputc:
  2978                           	opt callstack 19
  2979                           
  2980                           ;incstack = 0
  2981  001ED6  5014               	movf	fputc@fp,w,c
  2982  001ED8  1015               	iorwf	fputc@fp+1,w,c
  2983  001EDA  B4D8               	btfsc	status,2,c
  2984  001EDC  D004               	goto	u2370
  2985  001EDE  5014               	movf	fputc@fp,w,c
  2986  001EE0  1015               	iorwf	fputc@fp+1,w,c
  2987  001EE2  A4D8               	btfss	status,2,c
  2988  001EE4  D004               	goto	l2815
  2989  001EE6                     u2370:
  2990  001EE6  5012               	movf	fputc@c,w,c
  2991  001EE8  EC9B  F011         	call	_putch
  2992  001EEC  0012               	return	
  2993  001EEE                     l2815:
  2994  001EEE  EE20 F004          	lfsr	2,4
  2995  001EF2  5014               	movf	fputc@fp,w,c
  2996  001EF4  26D9               	addwf	fsr2l,f,c
  2997  001EF6  5015               	movf	fputc@fp+1,w,c
  2998  001EF8  22DA               	addwfc	fsr2h,f,c
  2999  001EFA  50DE               	movf	postinc2,w,c
  3000  001EFC  10DE               	iorwf	postinc2,w,c
  3001  001EFE  B4D8               	btfsc	status,2,c
  3002  001F00  D016               	goto	u2390
  3003  001F02  EE20 F004          	lfsr	2,4
  3004  001F06  5014               	movf	fputc@fp,w,c
  3005  001F08  26D9               	addwf	fsr2l,f,c
  3006  001F0A  5015               	movf	fputc@fp+1,w,c
  3007  001F0C  22DA               	addwfc	fsr2h,f,c
  3008  001F0E  EE10 F002          	lfsr	1,2
  3009  001F12  5014               	movf	fputc@fp,w,c
  3010  001F14  26E1               	addwf	fsr1l,f,c
  3011  001F16  5015               	movf	fputc@fp+1,w,c
  3012  001F18  22E2               	addwfc	fsr1h,f,c
  3013  001F1A  50DE               	movf	postinc2,w,c
  3014  001F1C  5CE6               	subwf	postinc1,w,c
  3015  001F1E  50E6               	movf	postinc1,w,c
  3016  001F20  0A80               	xorlw	128
  3017  001F22  6E1A               	movwf	(??_fputc+4)& (0+255),c
  3018  001F24  50DE               	movf	postinc2,w,c
  3019  001F26  0A80               	xorlw	128
  3020  001F28  581A               	subwfb	(??_fputc+4)& (0+255),w,c
  3021  001F2A  B0D8               	btfsc	status,0,c
  3022  001F2C  0012               	return	
  3023  001F2E                     u2390:
  3024  001F2E  EE20 F002          	lfsr	2,2
  3025  001F32  5014               	movf	fputc@fp,w,c
  3026  001F34  26D9               	addwf	fsr2l,f,c
  3027  001F36  5015               	movf	fputc@fp+1,w,c
  3028  001F38  22DA               	addwfc	fsr2h,f,c
  3029  001F3A  2ADE               	incf	postinc2,f,c
  3030  001F3C  0E00               	movlw	0
  3031  001F3E  22DD               	addwfc	postdec2,f,c
  3032  001F40  0012               	return		;funcret
  3033  001F42                     __end_of_fputc:
  3034                           	opt callstack 0
  3035                           
  3036 ;; *************** function _putch *****************
  3037 ;; Defined at:
  3038 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  txData          1    wreg     unsigned char 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  txData          1   16[COMRAM] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;Total ram usage:        1 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    6
  3059 ;; This function calls:
  3060 ;;		_EUSART1_Write
  3061 ;; This function is called by:
  3062 ;;		_fputc
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text14
  3067  002336                     __ptext14:
  3068                           	opt callstack 0
  3069  002336                     _putch:
  3070                           	opt callstack 19
  3071                           
  3072                           ;incstack = 0
  3073                           ;putch@txData stored from wreg
  3074  002336  6E11               	movwf	putch@txData,c
  3075                           
  3076                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  3077  002338  5011               	movf	putch@txData,w,c
  3078  00233A  EC7A  F010         	call	_EUSART1_Write
  3079  00233E  0012               	return		;funcret
  3080  002340                     __end_of_putch:
  3081                           	opt callstack 0
  3082                           
  3083 ;; *************** function _EUSART1_Write *****************
  3084 ;; Defined at:
  3085 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  txData          1    wreg     unsigned char 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  txData          1   15[COMRAM] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;Total ram usage:        1 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    5
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_putch
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text15
  3114  0020F4                     __ptext15:
  3115                           	opt callstack 0
  3116  0020F4                     _EUSART1_Write:
  3117                           	opt callstack 19
  3118                           
  3119                           ;incstack = 0
  3120                           ;EUSART1_Write@txData stored from wreg
  3121  0020F4  6E10               	movwf	EUSART1_Write@txData,c
  3122  0020F6                     
  3123                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  3124                           
  3125                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  3126  0020F6  504C               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  3127  0020F8  B4D8               	btfsc	status,2,c
  3128  0020FA  D7FD               	goto	l2789
  3129                           
  3130                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  3131  0020FC  B89D               	btfsc	3997,4,c	;volatile
  3132  0020FE  D003               	goto	l304
  3133                           
  3134                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  3135  002100  C010  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3136                           
  3137                           ;mcc_generated_files/eusart1.c: 182:     }
  3138  002104  D010               	goto	l2805
  3139  002106                     l304:
  3140                           
  3141                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  3142  002106  989D               	bcf	3997,4,c	;volatile
  3143                           
  3144                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  3145  002108  0E60               	movlw	low _eusart1TxBuffer
  3146  00210A  244E               	addwf	_eusart1TxHead,w,c	;volatile
  3147  00210C  6ED9               	movwf	fsr2l,c
  3148  00210E  6ADA               	clrf	fsr2h,c
  3149  002110  0E00               	movlw	high _eusart1TxBuffer
  3150  002112  22DA               	addwfc	fsr2h,f,c
  3151  002114  C010  FFDF         	movff	EUSART1_Write@txData,indf2
  3152  002118  2A4E               	incf	_eusart1TxHead,f,c	;volatile
  3153                           
  3154                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  3155  00211A  0E07               	movlw	7
  3156  00211C  644E               	cpfsgt	_eusart1TxHead,c	;volatile
  3157  00211E  D002               	goto	l2803
  3158                           
  3159                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  3160  002120  0E00               	movlw	0
  3161  002122  6E4E               	movwf	_eusart1TxHead,c	;volatile
  3162  002124                     l2803:
  3163                           
  3164                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  3165  002124  064C               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  3166  002126                     l2805:
  3167                           
  3168                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  3169  002126  889D               	bsf	3997,4,c	;volatile
  3170  002128  0012               	return		;funcret
  3171  00212A                     __end_of_EUSART1_Write:
  3172                           	opt callstack 0
  3173                           
  3174 ;; *************** function _abs *****************
  3175 ;; Defined at:
  3176 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  a               2   33[COMRAM] int 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  2   33[COMRAM] int 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;Total ram usage:        4 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    5
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_dtoa
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text16
  3205  00212A                     __ptext16:
  3206                           	opt callstack 0
  3207  00212A                     _abs:
  3208                           	opt callstack 21
  3209                           
  3210                           ;incstack = 0
  3211  00212A  BE23               	btfsc	abs@a+1,7,c
  3212  00212C  D005               	goto	u2460
  3213  00212E  5023               	movf	abs@a+1,w,c
  3214  002130  E110               	bnz	l1220
  3215  002132  0422               	decf	abs@a,w,c
  3216  002134  B0D8               	btfsc	status,0,c
  3217  002136  D00D               	goto	l1220
  3218  002138                     u2460:
  3219  002138  C022  F024         	movff	abs@a,??_abs
  3220  00213C  C023  F025         	movff	abs@a+1,??_abs+1
  3221  002140  1E24               	comf	??_abs,f,c
  3222  002142  1E25               	comf	??_abs+1,f,c
  3223  002144  4A24               	infsnz	??_abs,f,c
  3224  002146  2A25               	incf	??_abs+1,f,c
  3225  002148  C024  F022         	movff	??_abs,?_abs
  3226  00214C  C025  F023         	movff	??_abs+1,?_abs+1
  3227  002150  0012               	return	
  3228  002152                     l1220:
  3229  002152  C022  F022         	movff	abs@a,?_abs
  3230  002156  C023  F023         	movff	abs@a+1,?_abs+1
  3231  00215A  0012               	return		;funcret
  3232  00215C                     __end_of_abs:
  3233                           	opt callstack 0
  3234                           
  3235 ;; *************** function ___aomod *****************
  3236 ;; Defined at:
  3237 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  dividend        8   15[COMRAM] long long 
  3240 ;;  divisor         8   23[COMRAM] long long 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  sign            1   32[COMRAM] unsigned char 
  3243 ;;  counter         1   31[COMRAM] unsigned char 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  8   15[COMRAM] long long 
  3246 ;; Registers used:
  3247 ;;		wreg, status,2, status,0
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3253 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;Total ram usage:       18 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:    5
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_dtoa
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text17
  3268  00198E                     __ptext17:
  3269                           	opt callstack 0
  3270  00198E                     ___aomod:
  3271                           	opt callstack 21
  3272                           
  3273                           ;incstack = 0
  3274  00198E  0E00               	movlw	0
  3275  001990  6E21               	movwf	___aomod@sign,c
  3276  001992  AE17               	btfss	___aomod@dividend+7,7,c
  3277  001994  D012               	goto	l2919
  3278  001996  1E17               	comf	___aomod@dividend+7,f,c
  3279  001998  1E16               	comf	___aomod@dividend+6,f,c
  3280  00199A  1E15               	comf	___aomod@dividend+5,f,c
  3281  00199C  1E14               	comf	___aomod@dividend+4,f,c
  3282  00199E  1E13               	comf	___aomod@dividend+3,f,c
  3283  0019A0  1E12               	comf	___aomod@dividend+2,f,c
  3284  0019A2  1E11               	comf	___aomod@dividend+1,f,c
  3285  0019A4  6C10               	negf	___aomod@dividend,c
  3286  0019A6  0E00               	movlw	0
  3287  0019A8  2211               	addwfc	___aomod@dividend+1,f,c
  3288  0019AA  2212               	addwfc	___aomod@dividend+2,f,c
  3289  0019AC  2213               	addwfc	___aomod@dividend+3,f,c
  3290  0019AE  2214               	addwfc	___aomod@dividend+4,f,c
  3291  0019B0  2215               	addwfc	___aomod@dividend+5,f,c
  3292  0019B2  2216               	addwfc	___aomod@dividend+6,f,c
  3293  0019B4  2217               	addwfc	___aomod@dividend+7,f,c
  3294  0019B6  0E01               	movlw	1
  3295  0019B8  6E21               	movwf	___aomod@sign,c
  3296  0019BA                     l2919:
  3297  0019BA  AE1F               	btfss	___aomod@divisor+7,7,c
  3298  0019BC  D010               	goto	l2923
  3299  0019BE  1E1F               	comf	___aomod@divisor+7,f,c
  3300  0019C0  1E1E               	comf	___aomod@divisor+6,f,c
  3301  0019C2  1E1D               	comf	___aomod@divisor+5,f,c
  3302  0019C4  1E1C               	comf	___aomod@divisor+4,f,c
  3303  0019C6  1E1B               	comf	___aomod@divisor+3,f,c
  3304  0019C8  1E1A               	comf	___aomod@divisor+2,f,c
  3305  0019CA  1E19               	comf	___aomod@divisor+1,f,c
  3306  0019CC  6C18               	negf	___aomod@divisor,c
  3307  0019CE  0E00               	movlw	0
  3308  0019D0  2219               	addwfc	___aomod@divisor+1,f,c
  3309  0019D2  221A               	addwfc	___aomod@divisor+2,f,c
  3310  0019D4  221B               	addwfc	___aomod@divisor+3,f,c
  3311  0019D6  221C               	addwfc	___aomod@divisor+4,f,c
  3312  0019D8  221D               	addwfc	___aomod@divisor+5,f,c
  3313  0019DA  221E               	addwfc	___aomod@divisor+6,f,c
  3314  0019DC  221F               	addwfc	___aomod@divisor+7,f,c
  3315  0019DE                     l2923:
  3316  0019DE  5018               	movf	___aomod@divisor,w,c
  3317  0019E0  1019               	iorwf	___aomod@divisor+1,w,c
  3318  0019E2  101A               	iorwf	___aomod@divisor+2,w,c
  3319  0019E4  101B               	iorwf	___aomod@divisor+3,w,c
  3320  0019E6  101C               	iorwf	___aomod@divisor+4,w,c
  3321  0019E8  101D               	iorwf	___aomod@divisor+5,w,c
  3322  0019EA  101E               	iorwf	___aomod@divisor+6,w,c
  3323  0019EC  101F               	iorwf	___aomod@divisor+7,w,c
  3324  0019EE  B4D8               	btfsc	status,2,c
  3325  0019F0  D03C               	goto	l2939
  3326  0019F2  0E01               	movlw	1
  3327  0019F4  6E20               	movwf	___aomod@counter,c
  3328  0019F6  D00A               	goto	l2929
  3329  0019F8                     l2927:
  3330  0019F8  90D8               	bcf	status,0,c
  3331  0019FA  3618               	rlcf	___aomod@divisor,f,c
  3332  0019FC  3619               	rlcf	___aomod@divisor+1,f,c
  3333  0019FE  361A               	rlcf	___aomod@divisor+2,f,c
  3334  001A00  361B               	rlcf	___aomod@divisor+3,f,c
  3335  001A02  361C               	rlcf	___aomod@divisor+4,f,c
  3336  001A04  361D               	rlcf	___aomod@divisor+5,f,c
  3337  001A06  361E               	rlcf	___aomod@divisor+6,f,c
  3338  001A08  361F               	rlcf	___aomod@divisor+7,f,c
  3339  001A0A  2A20               	incf	___aomod@counter,f,c
  3340  001A0C                     l2929:
  3341  001A0C  AE1F               	btfss	___aomod@divisor+7,7,c
  3342  001A0E  D7F4               	goto	l2927
  3343  001A10                     u2570:
  3344  001A10  5018               	movf	___aomod@divisor,w,c
  3345  001A12  5C10               	subwf	___aomod@dividend,w,c
  3346  001A14  5019               	movf	___aomod@divisor+1,w,c
  3347  001A16  5811               	subwfb	___aomod@dividend+1,w,c
  3348  001A18  501A               	movf	___aomod@divisor+2,w,c
  3349  001A1A  5812               	subwfb	___aomod@dividend+2,w,c
  3350  001A1C  501B               	movf	___aomod@divisor+3,w,c
  3351  001A1E  5813               	subwfb	___aomod@dividend+3,w,c
  3352  001A20  501C               	movf	___aomod@divisor+4,w,c
  3353  001A22  5814               	subwfb	___aomod@dividend+4,w,c
  3354  001A24  501D               	movf	___aomod@divisor+5,w,c
  3355  001A26  5815               	subwfb	___aomod@dividend+5,w,c
  3356  001A28  501E               	movf	___aomod@divisor+6,w,c
  3357  001A2A  5816               	subwfb	___aomod@dividend+6,w,c
  3358  001A2C  501F               	movf	___aomod@divisor+7,w,c
  3359  001A2E  5817               	subwfb	___aomod@dividend+7,w,c
  3360  001A30  A0D8               	btfss	status,0,c
  3361  001A32  D010               	goto	l2935
  3362  001A34  5018               	movf	___aomod@divisor,w,c
  3363  001A36  5E10               	subwf	___aomod@dividend,f,c
  3364  001A38  5019               	movf	___aomod@divisor+1,w,c
  3365  001A3A  5A11               	subwfb	___aomod@dividend+1,f,c
  3366  001A3C  501A               	movf	___aomod@divisor+2,w,c
  3367  001A3E  5A12               	subwfb	___aomod@dividend+2,f,c
  3368  001A40  501B               	movf	___aomod@divisor+3,w,c
  3369  001A42  5A13               	subwfb	___aomod@dividend+3,f,c
  3370  001A44  501C               	movf	___aomod@divisor+4,w,c
  3371  001A46  5A14               	subwfb	___aomod@dividend+4,f,c
  3372  001A48  501D               	movf	___aomod@divisor+5,w,c
  3373  001A4A  5A15               	subwfb	___aomod@dividend+5,f,c
  3374  001A4C  501E               	movf	___aomod@divisor+6,w,c
  3375  001A4E  5A16               	subwfb	___aomod@dividend+6,f,c
  3376  001A50  501F               	movf	___aomod@divisor+7,w,c
  3377  001A52  5A17               	subwfb	___aomod@dividend+7,f,c
  3378  001A54                     l2935:
  3379  001A54  90D8               	bcf	status,0,c
  3380  001A56  321F               	rrcf	___aomod@divisor+7,f,c
  3381  001A58  321E               	rrcf	___aomod@divisor+6,f,c
  3382  001A5A  321D               	rrcf	___aomod@divisor+5,f,c
  3383  001A5C  321C               	rrcf	___aomod@divisor+4,f,c
  3384  001A5E  321B               	rrcf	___aomod@divisor+3,f,c
  3385  001A60  321A               	rrcf	___aomod@divisor+2,f,c
  3386  001A62  3219               	rrcf	___aomod@divisor+1,f,c
  3387  001A64  3218               	rrcf	___aomod@divisor,f,c
  3388  001A66  2E20               	decfsz	___aomod@counter,f,c
  3389  001A68  D7D3               	goto	u2570
  3390  001A6A                     l2939:
  3391  001A6A  5021               	movf	___aomod@sign,w,c
  3392  001A6C  B4D8               	btfsc	status,2,c
  3393  001A6E  D010               	goto	l2943
  3394  001A70  1E17               	comf	___aomod@dividend+7,f,c
  3395  001A72  1E16               	comf	___aomod@dividend+6,f,c
  3396  001A74  1E15               	comf	___aomod@dividend+5,f,c
  3397  001A76  1E14               	comf	___aomod@dividend+4,f,c
  3398  001A78  1E13               	comf	___aomod@dividend+3,f,c
  3399  001A7A  1E12               	comf	___aomod@dividend+2,f,c
  3400  001A7C  1E11               	comf	___aomod@dividend+1,f,c
  3401  001A7E  6C10               	negf	___aomod@dividend,c
  3402  001A80  0E00               	movlw	0
  3403  001A82  2211               	addwfc	___aomod@dividend+1,f,c
  3404  001A84  2212               	addwfc	___aomod@dividend+2,f,c
  3405  001A86  2213               	addwfc	___aomod@dividend+3,f,c
  3406  001A88  2214               	addwfc	___aomod@dividend+4,f,c
  3407  001A8A  2215               	addwfc	___aomod@dividend+5,f,c
  3408  001A8C  2216               	addwfc	___aomod@dividend+6,f,c
  3409  001A8E  2217               	addwfc	___aomod@dividend+7,f,c
  3410  001A90                     l2943:
  3411  001A90  C010  F010         	movff	___aomod@dividend,?___aomod
  3412  001A94  C011  F011         	movff	___aomod@dividend+1,?___aomod+1
  3413  001A98  C012  F012         	movff	___aomod@dividend+2,?___aomod+2
  3414  001A9C  C013  F013         	movff	___aomod@dividend+3,?___aomod+3
  3415  001AA0  C014  F014         	movff	___aomod@dividend+4,?___aomod+4
  3416  001AA4  C015  F015         	movff	___aomod@dividend+5,?___aomod+5
  3417  001AA8  C016  F016         	movff	___aomod@dividend+6,?___aomod+6
  3418  001AAC  C017  F017         	movff	___aomod@dividend+7,?___aomod+7
  3419  001AB0  0012               	return		;funcret
  3420  001AB2                     __end_of___aomod:
  3421                           	opt callstack 0
  3422                           
  3423 ;; *************** function ___aodiv *****************
  3424 ;; Defined at:
  3425 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  dividend        8   15[COMRAM] long long 
  3428 ;;  divisor         8   23[COMRAM] long long 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  quotient        8   33[COMRAM] long long 
  3431 ;;  sign            1   32[COMRAM] unsigned char 
  3432 ;;  counter         1   31[COMRAM] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  8   15[COMRAM] long long 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3442 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;Total ram usage:       26 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    5
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_dtoa
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text18
  3457  0014B0                     __ptext18:
  3458                           	opt callstack 0
  3459  0014B0                     ___aodiv:
  3460                           	opt callstack 21
  3461                           
  3462                           ;incstack = 0
  3463  0014B0  0E00               	movlw	0
  3464  0014B2  6E21               	movwf	___aodiv@sign,c
  3465  0014B4  AE1F               	btfss	___aodiv@divisor+7,7,c
  3466  0014B6  D012               	goto	l2875
  3467  0014B8  1E1F               	comf	___aodiv@divisor+7,f,c
  3468  0014BA  1E1E               	comf	___aodiv@divisor+6,f,c
  3469  0014BC  1E1D               	comf	___aodiv@divisor+5,f,c
  3470  0014BE  1E1C               	comf	___aodiv@divisor+4,f,c
  3471  0014C0  1E1B               	comf	___aodiv@divisor+3,f,c
  3472  0014C2  1E1A               	comf	___aodiv@divisor+2,f,c
  3473  0014C4  1E19               	comf	___aodiv@divisor+1,f,c
  3474  0014C6  6C18               	negf	___aodiv@divisor,c
  3475  0014C8  0E00               	movlw	0
  3476  0014CA  2219               	addwfc	___aodiv@divisor+1,f,c
  3477  0014CC  221A               	addwfc	___aodiv@divisor+2,f,c
  3478  0014CE  221B               	addwfc	___aodiv@divisor+3,f,c
  3479  0014D0  221C               	addwfc	___aodiv@divisor+4,f,c
  3480  0014D2  221D               	addwfc	___aodiv@divisor+5,f,c
  3481  0014D4  221E               	addwfc	___aodiv@divisor+6,f,c
  3482  0014D6  221F               	addwfc	___aodiv@divisor+7,f,c
  3483  0014D8  0E01               	movlw	1
  3484  0014DA  6E21               	movwf	___aodiv@sign,c
  3485  0014DC                     l2875:
  3486  0014DC  AE17               	btfss	___aodiv@dividend+7,7,c
  3487  0014DE  D012               	goto	l2881
  3488  0014E0  1E17               	comf	___aodiv@dividend+7,f,c
  3489  0014E2  1E16               	comf	___aodiv@dividend+6,f,c
  3490  0014E4  1E15               	comf	___aodiv@dividend+5,f,c
  3491  0014E6  1E14               	comf	___aodiv@dividend+4,f,c
  3492  0014E8  1E13               	comf	___aodiv@dividend+3,f,c
  3493  0014EA  1E12               	comf	___aodiv@dividend+2,f,c
  3494  0014EC  1E11               	comf	___aodiv@dividend+1,f,c
  3495  0014EE  6C10               	negf	___aodiv@dividend,c
  3496  0014F0  0E00               	movlw	0
  3497  0014F2  2211               	addwfc	___aodiv@dividend+1,f,c
  3498  0014F4  2212               	addwfc	___aodiv@dividend+2,f,c
  3499  0014F6  2213               	addwfc	___aodiv@dividend+3,f,c
  3500  0014F8  2214               	addwfc	___aodiv@dividend+4,f,c
  3501  0014FA  2215               	addwfc	___aodiv@dividend+5,f,c
  3502  0014FC  2216               	addwfc	___aodiv@dividend+6,f,c
  3503  0014FE  2217               	addwfc	___aodiv@dividend+7,f,c
  3504  001500  0E01               	movlw	1
  3505  001502  1A21               	xorwf	___aodiv@sign,f,c
  3506  001504                     l2881:
  3507  001504  EE20  F022         	lfsr	2,___aodiv@quotient
  3508  001508  0E07               	movlw	7
  3509  00150A                     u2491:
  3510  00150A  6ADE               	clrf	postinc2,c
  3511  00150C  06E8               	decf	wreg,f,c
  3512  00150E  E2FD               	bc	u2491
  3513  001510  5018               	movf	___aodiv@divisor,w,c
  3514  001512  1019               	iorwf	___aodiv@divisor+1,w,c
  3515  001514  101A               	iorwf	___aodiv@divisor+2,w,c
  3516  001516  101B               	iorwf	___aodiv@divisor+3,w,c
  3517  001518  101C               	iorwf	___aodiv@divisor+4,w,c
  3518  00151A  101D               	iorwf	___aodiv@divisor+5,w,c
  3519  00151C  101E               	iorwf	___aodiv@divisor+6,w,c
  3520  00151E  101F               	iorwf	___aodiv@divisor+7,w,c
  3521  001520  B4D8               	btfsc	status,2,c
  3522  001522  D046               	goto	l2903
  3523  001524  0E01               	movlw	1
  3524  001526  6E20               	movwf	___aodiv@counter,c
  3525  001528  D00A               	goto	l2889
  3526  00152A                     l2887:
  3527  00152A  90D8               	bcf	status,0,c
  3528  00152C  3618               	rlcf	___aodiv@divisor,f,c
  3529  00152E  3619               	rlcf	___aodiv@divisor+1,f,c
  3530  001530  361A               	rlcf	___aodiv@divisor+2,f,c
  3531  001532  361B               	rlcf	___aodiv@divisor+3,f,c
  3532  001534  361C               	rlcf	___aodiv@divisor+4,f,c
  3533  001536  361D               	rlcf	___aodiv@divisor+5,f,c
  3534  001538  361E               	rlcf	___aodiv@divisor+6,f,c
  3535  00153A  361F               	rlcf	___aodiv@divisor+7,f,c
  3536  00153C  2A20               	incf	___aodiv@counter,f,c
  3537  00153E                     l2889:
  3538  00153E  AE1F               	btfss	___aodiv@divisor+7,7,c
  3539  001540  D7F4               	goto	l2887
  3540  001542                     u2510:
  3541  001542  90D8               	bcf	status,0,c
  3542  001544  3622               	rlcf	___aodiv@quotient,f,c
  3543  001546  3623               	rlcf	___aodiv@quotient+1,f,c
  3544  001548  3624               	rlcf	___aodiv@quotient+2,f,c
  3545  00154A  3625               	rlcf	___aodiv@quotient+3,f,c
  3546  00154C  3626               	rlcf	___aodiv@quotient+4,f,c
  3547  00154E  3627               	rlcf	___aodiv@quotient+5,f,c
  3548  001550  3628               	rlcf	___aodiv@quotient+6,f,c
  3549  001552  3629               	rlcf	___aodiv@quotient+7,f,c
  3550  001554  5018               	movf	___aodiv@divisor,w,c
  3551  001556  5C10               	subwf	___aodiv@dividend,w,c
  3552  001558  5019               	movf	___aodiv@divisor+1,w,c
  3553  00155A  5811               	subwfb	___aodiv@dividend+1,w,c
  3554  00155C  501A               	movf	___aodiv@divisor+2,w,c
  3555  00155E  5812               	subwfb	___aodiv@dividend+2,w,c
  3556  001560  501B               	movf	___aodiv@divisor+3,w,c
  3557  001562  5813               	subwfb	___aodiv@dividend+3,w,c
  3558  001564  501C               	movf	___aodiv@divisor+4,w,c
  3559  001566  5814               	subwfb	___aodiv@dividend+4,w,c
  3560  001568  501D               	movf	___aodiv@divisor+5,w,c
  3561  00156A  5815               	subwfb	___aodiv@dividend+5,w,c
  3562  00156C  501E               	movf	___aodiv@divisor+6,w,c
  3563  00156E  5816               	subwfb	___aodiv@dividend+6,w,c
  3564  001570  501F               	movf	___aodiv@divisor+7,w,c
  3565  001572  5817               	subwfb	___aodiv@dividend+7,w,c
  3566  001574  A0D8               	btfss	status,0,c
  3567  001576  D011               	goto	l2899
  3568  001578  5018               	movf	___aodiv@divisor,w,c
  3569  00157A  5E10               	subwf	___aodiv@dividend,f,c
  3570  00157C  5019               	movf	___aodiv@divisor+1,w,c
  3571  00157E  5A11               	subwfb	___aodiv@dividend+1,f,c
  3572  001580  501A               	movf	___aodiv@divisor+2,w,c
  3573  001582  5A12               	subwfb	___aodiv@dividend+2,f,c
  3574  001584  501B               	movf	___aodiv@divisor+3,w,c
  3575  001586  5A13               	subwfb	___aodiv@dividend+3,f,c
  3576  001588  501C               	movf	___aodiv@divisor+4,w,c
  3577  00158A  5A14               	subwfb	___aodiv@dividend+4,f,c
  3578  00158C  501D               	movf	___aodiv@divisor+5,w,c
  3579  00158E  5A15               	subwfb	___aodiv@dividend+5,f,c
  3580  001590  501E               	movf	___aodiv@divisor+6,w,c
  3581  001592  5A16               	subwfb	___aodiv@dividend+6,f,c
  3582  001594  501F               	movf	___aodiv@divisor+7,w,c
  3583  001596  5A17               	subwfb	___aodiv@dividend+7,f,c
  3584  001598  8022               	bsf	___aodiv@quotient,0,c
  3585  00159A                     l2899:
  3586  00159A  90D8               	bcf	status,0,c
  3587  00159C  321F               	rrcf	___aodiv@divisor+7,f,c
  3588  00159E  321E               	rrcf	___aodiv@divisor+6,f,c
  3589  0015A0  321D               	rrcf	___aodiv@divisor+5,f,c
  3590  0015A2  321C               	rrcf	___aodiv@divisor+4,f,c
  3591  0015A4  321B               	rrcf	___aodiv@divisor+3,f,c
  3592  0015A6  321A               	rrcf	___aodiv@divisor+2,f,c
  3593  0015A8  3219               	rrcf	___aodiv@divisor+1,f,c
  3594  0015AA  3218               	rrcf	___aodiv@divisor,f,c
  3595  0015AC  2E20               	decfsz	___aodiv@counter,f,c
  3596  0015AE  D7C9               	goto	u2510
  3597  0015B0                     l2903:
  3598  0015B0  5021               	movf	___aodiv@sign,w,c
  3599  0015B2  B4D8               	btfsc	status,2,c
  3600  0015B4  D010               	goto	l2907
  3601  0015B6  1E29               	comf	___aodiv@quotient+7,f,c
  3602  0015B8  1E28               	comf	___aodiv@quotient+6,f,c
  3603  0015BA  1E27               	comf	___aodiv@quotient+5,f,c
  3604  0015BC  1E26               	comf	___aodiv@quotient+4,f,c
  3605  0015BE  1E25               	comf	___aodiv@quotient+3,f,c
  3606  0015C0  1E24               	comf	___aodiv@quotient+2,f,c
  3607  0015C2  1E23               	comf	___aodiv@quotient+1,f,c
  3608  0015C4  6C22               	negf	___aodiv@quotient,c
  3609  0015C6  0E00               	movlw	0
  3610  0015C8  2223               	addwfc	___aodiv@quotient+1,f,c
  3611  0015CA  2224               	addwfc	___aodiv@quotient+2,f,c
  3612  0015CC  2225               	addwfc	___aodiv@quotient+3,f,c
  3613  0015CE  2226               	addwfc	___aodiv@quotient+4,f,c
  3614  0015D0  2227               	addwfc	___aodiv@quotient+5,f,c
  3615  0015D2  2228               	addwfc	___aodiv@quotient+6,f,c
  3616  0015D4  2229               	addwfc	___aodiv@quotient+7,f,c
  3617  0015D6                     l2907:
  3618  0015D6  C022  F010         	movff	___aodiv@quotient,?___aodiv
  3619  0015DA  C023  F011         	movff	___aodiv@quotient+1,?___aodiv+1
  3620  0015DE  C024  F012         	movff	___aodiv@quotient+2,?___aodiv+2
  3621  0015E2  C025  F013         	movff	___aodiv@quotient+3,?___aodiv+3
  3622  0015E6  C026  F014         	movff	___aodiv@quotient+4,?___aodiv+4
  3623  0015EA  C027  F015         	movff	___aodiv@quotient+5,?___aodiv+5
  3624  0015EE  C028  F016         	movff	___aodiv@quotient+6,?___aodiv+6
  3625  0015F2  C029  F017         	movff	___aodiv@quotient+7,?___aodiv+7
  3626  0015F6  0012               	return		;funcret
  3627  0015F8                     __end_of___aodiv:
  3628                           	opt callstack 0
  3629                           
  3630 ;; *************** function _memset *****************
  3631 ;; Defined at:
  3632 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  dest            2   15[COMRAM] PTR void 
  3635 ;;		 -> stringArry(64), 
  3636 ;;  c               2   17[COMRAM] int 
  3637 ;;  n               2   19[COMRAM] unsigned int 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  s               2   25[COMRAM] PTR unsigned char 
  3640 ;;		 -> stringArry(64), 
  3641 ;;  k               2   23[COMRAM] unsigned int 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2   15[COMRAM] PTR void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3651 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;Total ram usage:       12 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    5
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_main
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text19
  3666  001734                     __ptext19:
  3667                           	opt callstack 0
  3668  001734                     _memset:
  3669                           	opt callstack 25
  3670                           
  3671                           ;incstack = 0
  3672  001734  C010  F01A         	movff	memset@dest,memset@s
  3673  001738  C011  F01B         	movff	memset@dest+1,memset@s+1
  3674  00173C  5014               	movf	memset@n,w,c
  3675  00173E  1015               	iorwf	memset@n+1,w,c
  3676  001740  B4D8               	btfsc	status,2,c
  3677  001742  0012               	return	
  3678  001744  C01A  FFD9         	movff	memset@s,fsr2l
  3679  001748  C01B  FFDA         	movff	memset@s+1,fsr2h
  3680  00174C  C012  FFDF         	movff	memset@c,indf2
  3681  001750  5014               	movf	memset@n,w,c
  3682  001752  241A               	addwf	memset@s,w,c
  3683  001754  6E16               	movwf	??_memset& (0+255),c
  3684  001756  5015               	movf	memset@n+1,w,c
  3685  001758  201B               	addwfc	memset@s+1,w,c
  3686  00175A  6E17               	movwf	(??_memset+1)& (0+255),c
  3687  00175C  0EFF               	movlw	255
  3688  00175E  2416               	addwf	??_memset,w,c
  3689  001760  6ED9               	movwf	fsr2l,c
  3690  001762  0EFF               	movlw	255
  3691  001764  2017               	addwfc	??_memset+1,w,c
  3692  001766  6EDA               	movwf	fsr2h,c
  3693  001768  C012  FFDF         	movff	memset@c,indf2
  3694  00176C  5015               	movf	memset@n+1,w,c
  3695  00176E  E104               	bnz	l3313
  3696  001770  0E03               	movlw	3
  3697  001772  5C14               	subwf	memset@n,w,c
  3698  001774  A0D8               	btfss	status,0,c
  3699  001776  0012               	return	
  3700  001778                     l3313:
  3701  001778  EE20 F001          	lfsr	2,1
  3702  00177C  501A               	movf	memset@s,w,c
  3703  00177E  26D9               	addwf	fsr2l,f,c
  3704  001780  501B               	movf	memset@s+1,w,c
  3705  001782  22DA               	addwfc	fsr2h,f,c
  3706  001784  C012  FFDF         	movff	memset@c,indf2
  3707  001788  EE20 F002          	lfsr	2,2
  3708  00178C  501A               	movf	memset@s,w,c
  3709  00178E  26D9               	addwf	fsr2l,f,c
  3710  001790  501B               	movf	memset@s+1,w,c
  3711  001792  22DA               	addwfc	fsr2h,f,c
  3712  001794  C012  FFDF         	movff	memset@c,indf2
  3713  001798  5014               	movf	memset@n,w,c
  3714  00179A  241A               	addwf	memset@s,w,c
  3715  00179C  6E16               	movwf	??_memset& (0+255),c
  3716  00179E  5015               	movf	memset@n+1,w,c
  3717  0017A0  201B               	addwfc	memset@s+1,w,c
  3718  0017A2  6E17               	movwf	(??_memset+1)& (0+255),c
  3719  0017A4  0EFE               	movlw	254
  3720  0017A6  2416               	addwf	??_memset,w,c
  3721  0017A8  6ED9               	movwf	fsr2l,c
  3722  0017AA  0EFF               	movlw	255
  3723  0017AC  2017               	addwfc	??_memset+1,w,c
  3724  0017AE  6EDA               	movwf	fsr2h,c
  3725  0017B0  C012  FFDF         	movff	memset@c,indf2
  3726  0017B4  5014               	movf	memset@n,w,c
  3727  0017B6  241A               	addwf	memset@s,w,c
  3728  0017B8  6E16               	movwf	??_memset& (0+255),c
  3729  0017BA  5015               	movf	memset@n+1,w,c
  3730  0017BC  201B               	addwfc	memset@s+1,w,c
  3731  0017BE  6E17               	movwf	(??_memset+1)& (0+255),c
  3732  0017C0  0EFD               	movlw	253
  3733  0017C2  2416               	addwf	??_memset,w,c
  3734  0017C4  6ED9               	movwf	fsr2l,c
  3735  0017C6  0EFF               	movlw	255
  3736  0017C8  2017               	addwfc	??_memset+1,w,c
  3737  0017CA  6EDA               	movwf	fsr2h,c
  3738  0017CC  C012  FFDF         	movff	memset@c,indf2
  3739  0017D0  5015               	movf	memset@n+1,w,c
  3740  0017D2  E104               	bnz	l3319
  3741  0017D4  0E07               	movlw	7
  3742  0017D6  5C14               	subwf	memset@n,w,c
  3743  0017D8  A0D8               	btfss	status,0,c
  3744  0017DA  0012               	return	
  3745  0017DC                     l3319:
  3746  0017DC  EE20 F003          	lfsr	2,3
  3747  0017E0  501A               	movf	memset@s,w,c
  3748  0017E2  26D9               	addwf	fsr2l,f,c
  3749  0017E4  501B               	movf	memset@s+1,w,c
  3750  0017E6  22DA               	addwfc	fsr2h,f,c
  3751  0017E8  C012  FFDF         	movff	memset@c,indf2
  3752  0017EC  5014               	movf	memset@n,w,c
  3753  0017EE  241A               	addwf	memset@s,w,c
  3754  0017F0  6E16               	movwf	??_memset& (0+255),c
  3755  0017F2  5015               	movf	memset@n+1,w,c
  3756  0017F4  201B               	addwfc	memset@s+1,w,c
  3757  0017F6  6E17               	movwf	(??_memset+1)& (0+255),c
  3758  0017F8  0EFC               	movlw	252
  3759  0017FA  2416               	addwf	??_memset,w,c
  3760  0017FC  6ED9               	movwf	fsr2l,c
  3761  0017FE  0EFF               	movlw	255
  3762  001800  2017               	addwfc	??_memset+1,w,c
  3763  001802  6EDA               	movwf	fsr2h,c
  3764  001804  C012  FFDF         	movff	memset@c,indf2
  3765  001808  5015               	movf	memset@n+1,w,c
  3766  00180A  E104               	bnz	l3325
  3767  00180C  0E09               	movlw	9
  3768  00180E  5C14               	subwf	memset@n,w,c
  3769  001810  A0D8               	btfss	status,0,c
  3770  001812  0012               	return	
  3771  001814                     l3325:
  3772  001814  C01A  F016         	movff	memset@s,??_memset
  3773  001818  C01B  F017         	movff	memset@s+1,??_memset+1
  3774  00181C  1E16               	comf	??_memset,f,c
  3775  00181E  1E17               	comf	??_memset+1,f,c
  3776  001820  4A16               	infsnz	??_memset,f,c
  3777  001822  2A17               	incf	??_memset+1,f,c
  3778  001824  0E03               	movlw	3
  3779  001826  1416               	andwf	??_memset,w,c
  3780  001828  6E18               	movwf	memset@k,c
  3781  00182A  6A19               	clrf	memset@k+1,c
  3782  00182C  5018               	movf	memset@k,w,c
  3783  00182E  261A               	addwf	memset@s,f,c
  3784  001830  5019               	movf	memset@k+1,w,c
  3785  001832  221B               	addwfc	memset@s+1,f,c
  3786  001834  5018               	movf	memset@k,w,c
  3787  001836  5E14               	subwf	memset@n,f,c
  3788  001838  5019               	movf	memset@k+1,w,c
  3789  00183A  5A15               	subwfb	memset@n+1,f,c
  3790  00183C  0EFC               	movlw	252
  3791  00183E  1614               	andwf	memset@n,f,c
  3792  001840  0EFF               	movlw	255
  3793  001842  1615               	andwf	memset@n+1,f,c
  3794  001844  D00B               	goto	l3333
  3795  001846                     l3327:
  3796  001846  C01A  FFD9         	movff	memset@s,fsr2l
  3797  00184A  C01B  FFDA         	movff	memset@s+1,fsr2h
  3798  00184E  C012  FFDF         	movff	memset@c,indf2
  3799  001852  0614               	decf	memset@n,f,c
  3800  001854  A0D8               	btfss	status,0,c
  3801  001856  0615               	decf	memset@n+1,f,c
  3802  001858  4A1A               	infsnz	memset@s,f,c
  3803  00185A  2A1B               	incf	memset@s+1,f,c
  3804  00185C                     l3333:
  3805  00185C  5014               	movf	memset@n,w,c
  3806  00185E  1015               	iorwf	memset@n+1,w,c
  3807  001860  B4D8               	btfsc	status,2,c
  3808  001862  0012               	return	
  3809  001864  D7F0               	goto	l3327
  3810  001866                     __end_of_memset:
  3811                           	opt callstack 0
  3812                           
  3813 ;; *************** function _delay_ms *****************
  3814 ;; Defined at:
  3815 ;;		line 156 in file "main.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  milliseconds    2   15[COMRAM] int 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;Total ram usage:        3 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    5
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;;		_blink
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text20
  3845  002236                     __ptext20:
  3846                           	opt callstack 0
  3847  002236                     _delay_ms:
  3848                           	opt callstack 25
  3849                           
  3850                           ;main.c: 157:     while (milliseconds > 0) {
  3851                           
  3852                           ;incstack = 0
  3853  002236  D00B               	goto	l428
  3854  002238                     l3299:
  3855                           
  3856                           ;main.c: 158:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3857  002238  0E15               	movlw	21
  3858  00223A  6E12               	movwf	??_delay_ms& (0+255),c
  3859  00223C  0EC6               	movlw	198
  3860  00223E                     u3207:
  3861  00223E  2EE8               	decfsz	wreg,f,c
  3862  002240  D7FE               	bra	u3207
  3863  002242  2E12               	decfsz	??_delay_ms& (0+255),f,c
  3864  002244  D7FC               	bra	u3207
  3865  002246  D000               	nop2	
  3866                           
  3867                           ;main.c: 159:         milliseconds--;
  3868  002248  0610               	decf	delay_ms@milliseconds,f,c
  3869  00224A  A0D8               	btfss	status,0,c
  3870  00224C  0611               	decf	delay_ms@milliseconds+1,f,c
  3871  00224E                     l428:
  3872                           
  3873                           ;main.c: 157:     while (milliseconds > 0) {
  3874  00224E  BE11               	btfsc	delay_ms@milliseconds+1,7,c
  3875  002250  0012               	return	
  3876  002252  5011               	movf	delay_ms@milliseconds+1,w,c
  3877  002254  E1F1               	bnz	l3299
  3878  002256  0410               	decf	delay_ms@milliseconds,w,c
  3879  002258  A0D8               	btfss	status,0,c
  3880  00225A  0012               	return	
  3881  00225C  D7ED               	goto	l3299
  3882  00225E                     __end_of_delay_ms:
  3883                           	opt callstack 0
  3884                           
  3885 ;; *************** function _SYSTEM_Initialize *****************
  3886 ;; Defined at:
  3887 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;		None
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;Total ram usage:        0 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    7
  3908 ;; This function calls:
  3909 ;;		_ADC_Initialize
  3910 ;;		_EUSART1_Initialize
  3911 ;;		_FVR_Initialize
  3912 ;;		_INTERRUPT_Initialize
  3913 ;;		_OSCILLATOR_Initialize
  3914 ;;		_PIN_MANAGER_Initialize
  3915 ;;		_TMR2_Initialize
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text21
  3922  0022C2                     __ptext21:
  3923                           	opt callstack 0
  3924  0022C2                     _SYSTEM_Initialize:
  3925                           	opt callstack 23
  3926                           
  3927                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3928                           
  3929                           ;incstack = 0
  3930  0022C2  ECCC  F011         	call	_INTERRUPT_Initialize	;wreg free
  3931                           
  3932                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3933  0022C6  ECC6  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  3934                           
  3935                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3936  0022CA  EC8B  F011         	call	_OSCILLATOR_Initialize	;wreg free
  3937                           
  3938                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  3939  0022CE  ECBE  F011         	call	_FVR_Initialize	;wreg free
  3940                           
  3941                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  3942  0022D2  EC70  F011         	call	_TMR2_Initialize	;wreg free
  3943                           
  3944                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  3945  0022D6  EC7F  F011         	call	_ADC_Initialize	;wreg free
  3946                           
  3947                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  3948  0022DA  ECFB  F00E         	call	_EUSART1_Initialize	;wreg free
  3949  0022DE  0012               	return		;funcret
  3950  0022E0                     __end_of_SYSTEM_Initialize:
  3951                           	opt callstack 0
  3952                           
  3953 ;; *************** function _TMR2_Initialize *****************
  3954 ;; Defined at:
  3955 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;Total ram usage:        0 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    6
  3976 ;; This function calls:
  3977 ;;		_TMR2_SetInterruptHandler
  3978 ;; This function is called by:
  3979 ;;		_SYSTEM_Initialize
  3980 ;;		_main
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text22
  3985  0022E0                     __ptext22:
  3986                           	opt callstack 0
  3987  0022E0                     _TMR2_Initialize:
  3988                           	opt callstack 24
  3989                           
  3990                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x3E;
  3991                           
  3992                           ;incstack = 0
  3993  0022E0  0E3E               	movlw	62
  3994  0022E2  6EBB               	movwf	4027,c	;volatile
  3995                           
  3996                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3997  0022E4  0E00               	movlw	0
  3998  0022E6  6EBC               	movwf	4028,c	;volatile
  3999                           
  4000                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  4001  0022E8  929E               	bcf	3998,1,c	;volatile
  4002                           
  4003                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  4004  0022EA  829D               	bsf	3997,1,c	;volatile
  4005                           
  4006                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  4007  0022EC  0EA0               	movlw	low _TMR2_DefaultInterruptHandler
  4008  0022EE  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  4009  0022F0  0E23               	movlw	high _TMR2_DefaultInterruptHandler
  4010  0022F2  6E11               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  4011  0022F4  ECA0  F011         	call	_TMR2_SetInterruptHandler	;wreg free
  4012                           
  4013                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7E;
  4014  0022F8  0E7E               	movlw	126
  4015  0022FA  6EBA               	movwf	4026,c	;volatile
  4016  0022FC  0012               	return		;funcret
  4017  0022FE                     __end_of_TMR2_Initialize:
  4018                           	opt callstack 0
  4019                           
  4020 ;; *************** function _TMR2_SetInterruptHandler *****************
  4021 ;; Defined at:
  4022 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
  4025 ;;		 -> displayControl(1), TMR2_DefaultInterruptHandler(1), 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;Total ram usage:        2 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    5
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_TMR2_Initialize
  4048 ;;		_main
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text23
  4053  002340                     __ptext23:
  4054                           	opt callstack 0
  4055  002340                     _TMR2_SetInterruptHandler:
  4056                           	opt callstack 25
  4057                           
  4058                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  4059                           
  4060                           ;incstack = 0
  4061  002340  C010  F07A         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  4062  002344  C011  F07B         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  4063  002348  0012               	return		;funcret
  4064  00234A                     __end_of_TMR2_SetInterruptHandler:
  4065                           	opt callstack 0
  4066                           
  4067 ;; *************** function _PIN_MANAGER_Initialize *****************
  4068 ;; Defined at:
  4069 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    5
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_SYSTEM_Initialize
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text24
  4098  00218C                     __ptext24:
  4099                           	opt callstack 0
  4100  00218C                     _PIN_MANAGER_Initialize:
  4101                           	opt callstack 24
  4102                           
  4103                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0xC0;
  4104                           
  4105                           ;incstack = 0
  4106  00218C  0EC0               	movlw	192
  4107  00218E  6E89               	movwf	3977,c	;volatile
  4108                           
  4109                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4110  002190  0E00               	movlw	0
  4111  002192  6E8A               	movwf	3978,c	;volatile
  4112                           
  4113                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x03;
  4114  002194  0E03               	movlw	3
  4115  002196  6E8B               	movwf	3979,c	;volatile
  4116                           
  4117                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x00;
  4118  002198  0E00               	movlw	0
  4119  00219A  6E92               	movwf	3986,c	;volatile
  4120                           
  4121                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF9;
  4122  00219C  0EF9               	movlw	249
  4123  00219E  6E93               	movwf	3987,c	;volatile
  4124                           
  4125                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4126  0021A0  0EBF               	movlw	191
  4127  0021A2  6E94               	movwf	3988,c	;volatile
  4128                           
  4129                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x20;
  4130  0021A4  0E20               	movlw	32
  4131  0021A6  010F               	movlb	15	; () banked
  4132  0021A8  6F3A               	movwf	58,b	;volatile
  4133                           
  4134                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x39;
  4135  0021AA  0E39               	movlw	57
  4136  0021AC  6F39               	movwf	57,b	;volatile
  4137                           
  4138                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  4139  0021AE  0E00               	movlw	0
  4140  0021B0  6F38               	movwf	56,b	;volatile
  4141                           
  4142                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4143  0021B2  0E00               	movlw	0
  4144  0021B4  6E61               	movwf	3937,c	;volatile
  4145                           
  4146                           ; BSR set to: 15
  4147                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4148  0021B6  8EF1               	bsf	4081,7,c	;volatile
  4149                           
  4150                           ; BSR set to: 15
  4151  0021B8  0012               	return		;funcret
  4152  0021BA                     __end_of_PIN_MANAGER_Initialize:
  4153                           	opt callstack 0
  4154                           
  4155 ;; *************** function _OSCILLATOR_Initialize *****************
  4156 ;; Defined at:
  4157 ;;		line 62 in file "mcc_generated_files/mcc.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, status,2
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    5
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_SYSTEM_Initialize
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text25
  4186  002316                     __ptext25:
  4187                           	opt callstack 0
  4188  002316                     _OSCILLATOR_Initialize:
  4189                           	opt callstack 24
  4190                           
  4191                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  4192                           
  4193                           ; BSR set to: 15
  4194                           ;incstack = 0
  4195  002316  0E70               	movlw	112
  4196  002318  6ED3               	movwf	4051,c	;volatile
  4197                           
  4198                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  4199  00231A  0E04               	movlw	4
  4200  00231C  6ED2               	movwf	4050,c	;volatile
  4201                           
  4202                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x40;
  4203  00231E  0E40               	movlw	64
  4204  002320  6E9B               	movwf	3995,c	;volatile
  4205  002322                     l28:
  4206                           
  4207                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  4208  002322  BED2               	btfsc	4050,7,c	;volatile
  4209  002324  0012               	return	
  4210  002326  D7FD               	goto	l28
  4211  002328                     __end_of_OSCILLATOR_Initialize:
  4212                           	opt callstack 0
  4213                           
  4214 ;; *************** function _INTERRUPT_Initialize *****************
  4215 ;; Defined at:
  4216 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;		None
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		None
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;Total ram usage:        0 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    5
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_SYSTEM_Initialize
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text26
  4245  002398                     __ptext26:
  4246                           	opt callstack 0
  4247  002398                     _INTERRUPT_Initialize:
  4248                           	opt callstack 24
  4249                           
  4250                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4251                           
  4252                           ;incstack = 0
  4253  002398  9ED0               	bcf	4048,7,c	;volatile
  4254  00239A  0012               	return		;funcret
  4255  00239C                     __end_of_INTERRUPT_Initialize:
  4256                           	opt callstack 0
  4257                           
  4258 ;; *************** function _FVR_Initialize *****************
  4259 ;; Defined at:
  4260 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;Total ram usage:        0 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    5
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_SYSTEM_Initialize
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text27
  4289  00237C                     __ptext27:
  4290                           	opt callstack 0
  4291  00237C                     _FVR_Initialize:
  4292                           	opt callstack 24
  4293                           
  4294                           ;mcc_generated_files/fvr.c: 61:     VREFCON0 = 0x90;
  4295                           
  4296                           ;incstack = 0
  4297  00237C  0E90               	movlw	144
  4298  00237E  010F               	movlb	15	; () banked
  4299  002380  6F42               	movwf	66,b	;volatile
  4300                           
  4301                           ; BSR set to: 15
  4302  002382  0012               	return		;funcret
  4303  002384                     __end_of_FVR_Initialize:
  4304                           	opt callstack 0
  4305                           
  4306 ;; *************** function _EUSART1_Initialize *****************
  4307 ;; Defined at:
  4308 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    6
  4329 ;; This function calls:
  4330 ;;		_EUSART1_SetErrorHandler
  4331 ;;		_EUSART1_SetFramingErrorHandler
  4332 ;;		_EUSART1_SetOverrunErrorHandler
  4333 ;;		_EUSART1_SetRxInterruptHandler
  4334 ;;		_EUSART1_SetTxInterruptHandler
  4335 ;; This function is called by:
  4336 ;;		_SYSTEM_Initialize
  4337 ;;		_main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text28
  4342  001DF6                     __ptext28:
  4343                           	opt callstack 0
  4344  001DF6                     _EUSART1_Initialize:
  4345                           	opt callstack 23
  4346                           
  4347                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  4348                           
  4349                           ; BSR set to: 15
  4350                           ;incstack = 0
  4351  001DF6  9A9D               	bcf	3997,5,c	;volatile
  4352                           
  4353                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  4354  001DF8  0EC8               	movlw	low _EUSART1_Receive_ISR
  4355  001DFA  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  4356  001DFC  0E1C               	movlw	high _EUSART1_Receive_ISR
  4357  001DFE  6E11               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  4358  001E00  ECAA  F011         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  4359                           
  4360                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  4361  001E04  989D               	bcf	3997,4,c	;volatile
  4362                           
  4363                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  4364  001E06  0EE4               	movlw	low _EUSART1_Transmit_ISR
  4365  001E08  6E10               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  4366  001E0A  0E21               	movlw	high _EUSART1_Transmit_ISR
  4367  001E0C  6E11               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  4368  001E0E  ECA5  F011         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  4369                           
  4370                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  4371  001E12  0E08               	movlw	8
  4372  001E14  6EB8               	movwf	4024,c	;volatile
  4373                           
  4374                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  4375  001E16  0E90               	movlw	144
  4376  001E18  6EAB               	movwf	4011,c	;volatile
  4377                           
  4378                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  4379  001E1A  0E24               	movlw	36
  4380  001E1C  6EAC               	movwf	4012,c	;volatile
  4381                           
  4382                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
  4383  001E1E  0E8A               	movlw	138
  4384  001E20  6EAF               	movwf	4015,c	;volatile
  4385                           
  4386                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  4387  001E22  0E00               	movlw	0
  4388  001E24  6EB0               	movwf	4016,c	;volatile
  4389                           
  4390                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  4391  001E26  0EA2               	movlw	low _EUSART1_DefaultFramingErrorHandler
  4392  001E28  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  4393  001E2A  0E23               	movlw	high _EUSART1_DefaultFramingErrorHandler
  4394  001E2C  6E11               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  4395  001E2E  ECB4  F011         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4396                           
  4397                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  4398  001E32  0E8C               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  4399  001E34  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  4400  001E36  0E23               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  4401  001E38  6E11               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  4402  001E3A  ECAF  F011         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4403                           
  4404                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  4405  001E3E  0E92               	movlw	low _EUSART1_DefaultErrorHandler
  4406  001E40  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  4407  001E42  0E23               	movlw	high _EUSART1_DefaultErrorHandler
  4408  001E44  6E11               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  4409  001E46  ECB9  F011         	call	_EUSART1_SetErrorHandler	;wreg free
  4410                           
  4411                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  4412  001E4A  0E00               	movlw	0
  4413  001E4C  6E48               	movwf	_eusart1RxLastError,c	;volatile
  4414                           
  4415                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  4416  001E4E  0E00               	movlw	0
  4417  001E50  6E4E               	movwf	_eusart1TxHead,c	;volatile
  4418                           
  4419                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  4420  001E52  0E00               	movlw	0
  4421  001E54  6E4D               	movwf	_eusart1TxTail,c	;volatile
  4422                           
  4423                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  4424  001E56  0E08               	movlw	8
  4425  001E58  6E4C               	movwf	_eusart1TxBufferRemaining,c	;volatile
  4426                           
  4427                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  4428  001E5A  0E00               	movlw	0
  4429  001E5C  6E4B               	movwf	_eusart1RxHead,c	;volatile
  4430                           
  4431                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  4432  001E5E  0E00               	movlw	0
  4433  001E60  6E4A               	movwf	_eusart1RxTail,c	;volatile
  4434                           
  4435                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  4436  001E62  0E00               	movlw	0
  4437  001E64  6E49               	movwf	_eusart1RxCount,c	;volatile
  4438                           
  4439                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  4440  001E66  8A9D               	bsf	3997,5,c	;volatile
  4441  001E68  0012               	return		;funcret
  4442  001E6A                     __end_of_EUSART1_Initialize:
  4443                           	opt callstack 0
  4444                           
  4445 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  4446 ;; Defined at:
  4447 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  4450 ;;		 -> EUSART1_Transmit_ISR(1), 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;Total ram usage:        2 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    5
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_EUSART1_Initialize
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           	psect	text29
  4477  00234A                     __ptext29:
  4478                           	opt callstack 0
  4479  00234A                     _EUSART1_SetTxInterruptHandler:
  4480                           	opt callstack 23
  4481                           
  4482                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4483                           
  4484                           ;incstack = 0
  4485  00234A  C010  F076         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  4486  00234E  C011  F077         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  4487  002352  0012               	return		;funcret
  4488  002354                     __end_of_EUSART1_SetTxInterruptHandler:
  4489                           	opt callstack 0
  4490                           
  4491 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  4492 ;; Defined at:
  4493 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  4496 ;;		 -> EUSART1_Receive_ISR(1), 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;Total ram usage:        2 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    5
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_EUSART1_Initialize
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text30
  4523  002354                     __ptext30:
  4524                           	opt callstack 0
  4525  002354                     _EUSART1_SetRxInterruptHandler:
  4526                           	opt callstack 23
  4527                           
  4528                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  4529                           
  4530                           ;incstack = 0
  4531  002354  C010  F074         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  4532  002358  C011  F075         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  4533  00235C  0012               	return		;funcret
  4534  00235E                     __end_of_EUSART1_SetRxInterruptHandler:
  4535                           	opt callstack 0
  4536                           
  4537 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4538 ;; Defined at:
  4539 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  4542 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4554 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4558 ;;Total ram usage:        2 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    5
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_EUSART1_Initialize
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text31
  4569  00235E                     __ptext31:
  4570                           	opt callstack 0
  4571  00235E                     _EUSART1_SetOverrunErrorHandler:
  4572                           	opt callstack 23
  4573                           
  4574                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  4575                           
  4576                           ;incstack = 0
  4577  00235E  C010  F070         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4578  002362  C011  F071         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4579  002366  0012               	return		;funcret
  4580  002368                     __end_of_EUSART1_SetOverrunErrorHandler:
  4581                           	opt callstack 0
  4582                           
  4583 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4584 ;; Defined at:
  4585 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  4588 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      void 
  4593 ;; Registers used:
  4594 ;;		wreg, status,2, status,0
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;Total ram usage:        2 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    5
  4607 ;; This function calls:
  4608 ;;		Nothing
  4609 ;; This function is called by:
  4610 ;;		_EUSART1_Initialize
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text32
  4615  002368                     __ptext32:
  4616                           	opt callstack 0
  4617  002368                     _EUSART1_SetFramingErrorHandler:
  4618                           	opt callstack 23
  4619                           
  4620                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  4621                           
  4622                           ;incstack = 0
  4623  002368  C010  F072         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4624  00236C  C011  F073         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4625  002370  0012               	return		;funcret
  4626  002372                     __end_of_EUSART1_SetFramingErrorHandler:
  4627                           	opt callstack 0
  4628                           
  4629 ;; *************** function _EUSART1_SetErrorHandler *****************
  4630 ;; Defined at:
  4631 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  interruptHan    2   15[COMRAM] PTR FTN()void 
  4634 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;Total ram usage:        2 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    5
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_EUSART1_Initialize
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text33
  4661  002372                     __ptext33:
  4662                           	opt callstack 0
  4663  002372                     _EUSART1_SetErrorHandler:
  4664                           	opt callstack 23
  4665                           
  4666                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  4667                           
  4668                           ;incstack = 0
  4669  002372  C010  F06E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4670  002376  C011  F06F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4671  00237A  0012               	return		;funcret
  4672  00237C                     __end_of_EUSART1_SetErrorHandler:
  4673                           	opt callstack 0
  4674                           
  4675 ;; *************** function _ADC_Initialize *****************
  4676 ;; Defined at:
  4677 ;;		line 60 in file "mcc_generated_files/adc.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    5
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_SYSTEM_Initialize
  4702 ;;		_main
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text34
  4707  0022FE                     __ptext34:
  4708                           	opt callstack 0
  4709  0022FE                     _ADC_Initialize:
  4710                           	opt callstack 24
  4711                           
  4712                           ;mcc_generated_files/adc.c: 65:     ADCON0 = 0x01;
  4713                           
  4714                           ;incstack = 0
  4715  0022FE  0E01               	movlw	1
  4716  002300  6EC2               	movwf	4034,c	;volatile
  4717                           
  4718                           ;mcc_generated_files/adc.c: 68:     ADCON1 = 0x08;
  4719  002302  0E08               	movlw	8
  4720  002304  6EC1               	movwf	4033,c	;volatile
  4721                           
  4722                           ;mcc_generated_files/adc.c: 71:     ADCON2 = 0x87;
  4723  002306  0E87               	movlw	135
  4724  002308  6EC0               	movwf	4032,c	;volatile
  4725                           
  4726                           ;mcc_generated_files/adc.c: 74:     ADRESL = 0x00;
  4727  00230A  0E00               	movlw	0
  4728  00230C  6EC3               	movwf	4035,c	;volatile
  4729                           
  4730                           ;mcc_generated_files/adc.c: 77:     ADRESH = 0x00;
  4731  00230E  0E00               	movlw	0
  4732  002310  6EC4               	movwf	4036,c	;volatile
  4733                           
  4734                           ;mcc_generated_files/adc.c: 80:     PIE1bits.ADIE = 1;
  4735  002312  8C9D               	bsf	3997,6,c	;volatile
  4736  002314  0012               	return		;funcret
  4737  002316                     __end_of_ADC_Initialize:
  4738                           	opt callstack 0
  4739                           
  4740 ;; *************** function _EUSART1_is_rx_ready *****************
  4741 ;; Defined at:
  4742 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      _Bool 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;Total ram usage:        0 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:    5
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text35
  4771  002328                     __ptext35:
  4772                           	opt callstack 0
  4773  002328                     _EUSART1_is_rx_ready:
  4774                           	opt callstack 25
  4775                           
  4776                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  4777                           
  4778                           ;incstack = 0
  4779  002328  5049               	movf	_eusart1RxCount,w,c	;volatile
  4780  00232A  B4D8               	btfsc	status,2,c
  4781  00232C  D002               	goto	u2950
  4782  00232E  0E01               	movlw	1
  4783  002330  0012               	return	
  4784  002332                     u2950:
  4785  002332  0E00               	movlw	0
  4786  002334  0012               	return		;funcret
  4787  002336                     __end_of_EUSART1_is_rx_ready:
  4788                           	opt callstack 0
  4789                           
  4790 ;; *************** function _EUSART1_Read *****************
  4791 ;; Defined at:
  4792 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  readValue       1   15[COMRAM] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      unsigned char 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;Total ram usage:        1 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    5
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_main
  4817 ;;		_getch
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text36
  4822  002080                     __ptext36:
  4823                           	opt callstack 0
  4824  002080                     _EUSART1_Read:
  4825                           	opt callstack 25
  4826                           
  4827                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  4828                           
  4829                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  4830                           
  4831                           ;incstack = 0
  4832  002080  5049               	movf	_eusart1RxCount,w,c	;volatile
  4833  002082  B4D8               	btfsc	status,2,c
  4834  002084  D7FD               	goto	_EUSART1_Read
  4835                           
  4836                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  4837  002086  0E00               	movlw	low _eusart1RxStatusBuffer
  4838  002088  244A               	addwf	_eusart1RxTail,w,c	;volatile
  4839  00208A  6ED9               	movwf	fsr2l,c
  4840  00208C  6ADA               	clrf	fsr2h,c
  4841  00208E  0E01               	movlw	high _eusart1RxStatusBuffer
  4842  002090  22DA               	addwfc	fsr2h,f,c
  4843  002092  50DF               	movf	indf2,w,c
  4844  002094  6E48               	movwf	_eusart1RxLastError,c	;volatile
  4845                           
  4846                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  4847  002096  0E40               	movlw	low _eusart1RxBuffer
  4848  002098  244A               	addwf	_eusart1RxTail,w,c	;volatile
  4849  00209A  6ED9               	movwf	fsr2l,c
  4850  00209C  6ADA               	clrf	fsr2h,c
  4851  00209E  0E01               	movlw	high _eusart1RxBuffer
  4852  0020A0  22DA               	addwfc	fsr2h,f,c
  4853  0020A2  50DF               	movf	indf2,w,c
  4854  0020A4  6E10               	movwf	EUSART1_Read@readValue,c
  4855  0020A6  2A4A               	incf	_eusart1RxTail,f,c	;volatile
  4856                           
  4857                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  4858  0020A8  0E3F               	movlw	63
  4859  0020AA  644A               	cpfsgt	_eusart1RxTail,c	;volatile
  4860  0020AC  D002               	goto	l3231
  4861                           
  4862                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  4863  0020AE  0E00               	movlw	0
  4864  0020B0  6E4A               	movwf	_eusart1RxTail,c	;volatile
  4865  0020B2                     l3231:
  4866                           
  4867                           ;mcc_generated_files/eusart1.c: 166:     PIE1bits.RC1IE = 0;
  4868  0020B2  9A9D               	bcf	3997,5,c	;volatile
  4869                           
  4870                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  4871  0020B4  0649               	decf	_eusart1RxCount,f,c	;volatile
  4872                           
  4873                           ;mcc_generated_files/eusart1.c: 168:     PIE1bits.RC1IE = 1;
  4874  0020B6  8A9D               	bsf	3997,5,c	;volatile
  4875                           
  4876                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  4877  0020B8  5010               	movf	EUSART1_Read@readValue,w,c
  4878  0020BA  0012               	return		;funcret
  4879  0020BC                     __end_of_EUSART1_Read:
  4880                           	opt callstack 0
  4881                           
  4882 ;; *************** function _INTERRUPT_InterruptManager *****************
  4883 ;; Defined at:
  4884 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;Total ram usage:        8 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    4
  4905 ;; This function calls:
  4906 ;;		Absolute function
  4907 ;;		_ADC_ISR
  4908 ;;		_EUSART1_Receive_ISR
  4909 ;;		_EUSART1_Transmit_ISR
  4910 ;;		_TMR2_ISR
  4911 ;; This function is called by:
  4912 ;;		Interrupt level 2
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	intcode
  4917  000008                     __pintcode:
  4918                           	opt callstack 0
  4919  000008                     _INTERRUPT_InterruptManager:
  4920                           	opt callstack 17
  4921                           
  4922                           ;incstack = 0
  4923  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4924  00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManager
  4925  00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4926  000012  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  4927  000016  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  4928  00001A  CFF6 F00C          	movff	tblptrl,??_INTERRUPT_InterruptManager+4
  4929  00001E  CFF7 F00D          	movff	tblptrh,??_INTERRUPT_InterruptManager+5
  4930  000022  CFF8 F00E          	movff	tblptru,??_INTERRUPT_InterruptManager+6
  4931  000026  CFF5 F00F          	movff	tablat,??_INTERRUPT_InterruptManager+7
  4932                           
  4933                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  4934  00002A  ACF2               	btfss	4082,6,c	;volatile
  4935  00002C  D026               	goto	i2l143
  4936                           
  4937                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  4938  00002E  BC9D               	btfsc	3997,6,c	;volatile
  4939  000030  AC9E               	btfss	3998,6,c	;volatile
  4940  000032  D003               	goto	i2l140
  4941                           
  4942                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ADC_ISR();
  4943  000034  ECCE  F011         	call	_ADC_ISR	;wreg free
  4944                           
  4945                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  4946  000038  D020               	goto	i2l143
  4947  00003A                     i2l140:
  4948  00003A  B89D               	btfsc	3997,4,c	;volatile
  4949  00003C  A89E               	btfss	3998,4,c	;volatile
  4950  00003E  D009               	goto	i2l142
  4951                           
  4952                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
  4953  000040  D801               	call	i2u220_48
  4954  000042  D01B               	goto	i2l143
  4955  000044                     i2u220_48:
  4956  000044  0005               	push	
  4957  000046  6EFA               	movwf	pclath,c
  4958  000048  0100               	movlb	0	; () banked
  4959  00004A  5176               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  4960  00004C  6EFD               	movwf	tosl,c
  4961  00004E  5177               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  4962  000050  D00B               	goto	L2
  4963  000052                     i2l142:
  4964  000052  BA9D               	btfsc	3997,5,c	;volatile
  4965  000054  AA9E               	btfss	3998,5,c	;volatile
  4966  000056  D00C               	goto	i2l144
  4967                           
  4968                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
  4969  000058  D801               	call	i2u223_48
  4970  00005A  D00F               	goto	i2l143
  4971  00005C                     i2u223_48:
  4972  00005C  0005               	push	
  4973  00005E  6EFA               	movwf	pclath,c
  4974  000060  0100               	movlb	0	; () banked
  4975  000062  5174               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  4976  000064  6EFD               	movwf	tosl,c
  4977  000066  5175               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  4978  000068                     L2:
  4979  000068  6EFE               	movwf	tosh,c
  4980  00006A  6AFF               	clrf	tosu,c
  4981  00006C  50FA               	movf	pclath,w,c
  4982  00006E  0012               	return		;indir
  4983  000070                     i2l144:
  4984  000070  B29D               	btfsc	3997,1,c	;volatile
  4985  000072  A29E               	btfss	3998,1,c	;volatile
  4986  000074  D002               	goto	i2l143
  4987                           
  4988                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR2_ISR();
  4989  000076  EC2F  F011         	call	_TMR2_ISR	;wreg free
  4990  00007A                     i2l143:
  4991  00007A  C00F  FFF5         	movff	??_INTERRUPT_InterruptManager+7,tablat
  4992  00007E  C00E  FFF8         	movff	??_INTERRUPT_InterruptManager+6,tblptru
  4993  000082  C00D  FFF7         	movff	??_INTERRUPT_InterruptManager+5,tblptrh
  4994  000086  C00C  FFF6         	movff	??_INTERRUPT_InterruptManager+4,tblptrl
  4995  00008A  C00B  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  4996  00008E  C00A  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  4997  000092  C009  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4998  000096  C008  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4999  00009A  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5000  00009C  0011               	retfie		f
  5001  00009E                     __end_of_INTERRUPT_InterruptManager:
  5002                           	opt callstack 0
  5003                           
  5004 ;; *************** function _TMR2_ISR *****************
  5005 ;; Defined at:
  5006 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;Total ram usage:        0 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    3
  5027 ;; This function calls:
  5028 ;;		_TMR2_CallBack
  5029 ;; This function is called by:
  5030 ;;		_INTERRUPT_InterruptManager
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text38
  5035  00225E                     __ptext38:
  5036                           	opt callstack 0
  5037  00225E                     _TMR2_ISR:
  5038                           	opt callstack 17
  5039                           
  5040                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  5041                           
  5042                           ;incstack = 0
  5043  00225E  929E               	bcf	3998,1,c	;volatile
  5044                           
  5045                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 10)
  5046  002260  0100               	movlb	0	; () banked
  5047  002262  4B78               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
  5048  002264  2B79               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  5049  002266  5179               	movf	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  5050  002268  E104               	bnz	i2u189_40
  5051  00226A  0E0A               	movlw	10
  5052  00226C  5D78               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
  5053  00226E  A0D8               	btfss	status,0,c
  5054  002270  0012               	return	
  5055  002272                     i2u189_40:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  5059  002272  EC41  F011         	call	_TMR2_CallBack	;wreg free
  5060                           
  5061                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  5062  002276  0E00               	movlw	0
  5063  002278  0100               	movlb	0	; () banked
  5064  00227A  6F79               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
  5065  00227C  0E00               	movlw	0
  5066  00227E  6F78               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
  5067                           
  5068                           ; BSR set to: 0
  5069  002280  0012               	return		;funcret
  5070  002282                     __end_of_TMR2_ISR:
  5071                           	opt callstack 0
  5072                           
  5073 ;; *************** function _TMR2_CallBack *****************
  5074 ;; Defined at:
  5075 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;Total ram usage:        0 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    2
  5096 ;; This function calls:
  5097 ;;		Absolute function
  5098 ;;		_TMR2_DefaultInterruptHandler
  5099 ;;		_displayControl
  5100 ;; This function is called by:
  5101 ;;		_TMR2_ISR
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text39
  5106  002282                     __ptext39:
  5107                           	opt callstack 0
  5108  002282                     _TMR2_CallBack:
  5109                           	opt callstack 17
  5110                           
  5111                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;incstack = 0
  5115  002282  0100               	movlb	0	; () banked
  5116  002284  517A               	movf	_TMR2_InterruptHandler& (0+255),w,b
  5117  002286  117B               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  5118  002288  B4D8               	btfsc	status,2,c
  5119  00228A  0012               	return	
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  5123  00228C  D801               	call	i2u183_48
  5124  00228E  0012               	return	
  5125  002290                     i2u183_48:
  5126  002290  0005               	push	
  5127  002292  6EFA               	movwf	pclath,c
  5128  002294  517A               	movf	_TMR2_InterruptHandler& (0+255),w,b
  5129  002296  6EFD               	movwf	tosl,c
  5130  002298  517B               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  5131  00229A  6EFE               	movwf	tosh,c
  5132  00229C  6AFF               	clrf	tosu,c
  5133  00229E  50FA               	movf	pclath,w,c
  5134  0022A0  0012               	return		;indir
  5135  0022A2                     __end_of_TMR2_CallBack:
  5136                           	opt callstack 0
  5137                           
  5138 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5139 ;; Defined at:
  5140 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		None
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;Total ram usage:        0 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_TMR2_Initialize
  5164 ;;		_TMR2_CallBack
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text40
  5169  0023A0                     __ptext40:
  5170                           	opt callstack 0
  5171  0023A0                     _TMR2_DefaultInterruptHandler:
  5172                           	opt callstack 18
  5173                           
  5174                           ;incstack = 0
  5175  0023A0  0012               	return		;funcret
  5176  0023A2                     __end_of_TMR2_DefaultInterruptHandler:
  5177                           	opt callstack 0
  5178                           
  5179 ;; *************** function _displayControl *****************
  5180 ;; Defined at:
  5181 ;;		line 172 in file "main.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;Total ram usage:        0 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    1
  5202 ;; This function calls:
  5203 ;;		___lwmod
  5204 ;;		i2___lwdiv
  5205 ;; This function is called by:
  5206 ;;		_main
  5207 ;;		_TMR2_CallBack
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           	psect	text41
  5212  001C2E                     __ptext41:
  5213                           	opt callstack 0
  5214  001C2E                     _displayControl:
  5215                           	opt callstack 17
  5216                           
  5217                           ;main.c: 173:     if (displaySwitch == 1) {
  5218                           
  5219                           ;incstack = 0
  5220  001C2E  044F               	decf	_displaySwitch,w,c
  5221  001C30  A4D8               	btfss	status,2,c
  5222  001C32  D025               	goto	i2l2383
  5223                           
  5224                           ;main.c: 174:         PORTB = displayToggle[displaySwitch];
  5225  001C34  0E0B               	movlw	low _displayToggle
  5226  001C36  244F               	addwf	_displaySwitch,w,c
  5227  001C38  6EF6               	movwf	tblptrl,c
  5228  001C3A  6AF7               	clrf	tblptrh,c
  5229  001C3C  0E10               	movlw	high _displayToggle
  5230  001C3E  22F7               	addwfc	tblptrh,f,c
  5231  001C40                     	if	1	;There are 3 active tblptr bytes
  5232  001C40  6AF8               	clrf	tblptru,c
  5233  001C42  0E00               	movlw	low (__mediumconst shr (0+16))
  5234  001C44  22F8               	addwfc	tblptru,f,c
  5235  001C46                     	endif
  5236  001C46  0008               	tblrd		*
  5237  001C48  CFF5 FF81          	movff	tablat,3969	;volatile
  5238                           
  5239                           ;main.c: 175:         PORTA = numbers[num%10];
  5240  001C4C  C045  F001         	movff	_num,___lwmod@dividend
  5241  001C50  C046  F002         	movff	_num+1,___lwmod@dividend+1
  5242  001C54  0E00               	movlw	0
  5243  001C56  6E04               	movwf	___lwmod@divisor+1,c
  5244  001C58  0E0A               	movlw	10
  5245  001C5A  6E03               	movwf	___lwmod@divisor,c
  5246  001C5C  EC1F  F010         	call	___lwmod	;wreg free
  5247  001C60  0E01               	movlw	low _numbers
  5248  001C62  2401               	addwf	?___lwmod,w,c
  5249  001C64  6EF6               	movwf	tblptrl,c
  5250  001C66  0E10               	movlw	high _numbers
  5251  001C68  2002               	addwfc	?___lwmod+1,w,c
  5252  001C6A  6EF7               	movwf	tblptrh,c
  5253  001C6C                     	if	1	;There are 3 active tblptr bytes
  5254  001C6C  6AF8               	clrf	tblptru,c
  5255  001C6E  0E00               	movlw	low (__mediumconst shr (0+16))
  5256  001C70  22F8               	addwfc	tblptru,f,c
  5257  001C72                     	endif
  5258  001C72  0008               	tblrd		*
  5259  001C74  CFF5 FF80          	movff	tablat,3968	;volatile
  5260                           
  5261                           ;main.c: 176:         displaySwitch = 0;
  5262  001C78  0E00               	movlw	0
  5263  001C7A  6E4F               	movwf	_displaySwitch,c
  5264                           
  5265                           ;main.c: 177:     } else {
  5266  001C7C  0012               	return	
  5267  001C7E                     i2l2383:
  5268                           
  5269                           ;main.c: 178:         PORTB = displayToggle[displaySwitch];
  5270  001C7E  0E0B               	movlw	low _displayToggle
  5271  001C80  244F               	addwf	_displaySwitch,w,c
  5272  001C82  6EF6               	movwf	tblptrl,c
  5273  001C84  6AF7               	clrf	tblptrh,c
  5274  001C86  0E10               	movlw	high _displayToggle
  5275  001C88  22F7               	addwfc	tblptrh,f,c
  5276  001C8A                     	if	1	;There are 3 active tblptr bytes
  5277  001C8A  6AF8               	clrf	tblptru,c
  5278  001C8C  0E00               	movlw	low (__mediumconst shr (0+16))
  5279  001C8E  22F8               	addwfc	tblptru,f,c
  5280  001C90                     	endif
  5281  001C90  0008               	tblrd		*
  5282  001C92  CFF5 FF81          	movff	tablat,3969	;volatile
  5283                           
  5284                           ;main.c: 179:         PORTA = numbers[num/10];
  5285  001C96  C045  F001         	movff	_num,i2___lwdiv@dividend
  5286  001C9A  C046  F002         	movff	_num+1,i2___lwdiv@dividend+1
  5287  001C9E  0E00               	movlw	0
  5288  001CA0  6E04               	movwf	i2___lwdiv@divisor+1,c
  5289  001CA2  0E0A               	movlw	10
  5290  001CA4  6E03               	movwf	i2___lwdiv@divisor,c
  5291  001CA6  ECF6  F00F         	call	i2___lwdiv	;wreg free
  5292  001CAA  0E01               	movlw	low _numbers
  5293  001CAC  2401               	addwf	?i2___lwdiv,w,c
  5294  001CAE  6EF6               	movwf	tblptrl,c
  5295  001CB0  0E10               	movlw	high _numbers
  5296  001CB2  2002               	addwfc	?i2___lwdiv+1,w,c
  5297  001CB4  6EF7               	movwf	tblptrh,c
  5298  001CB6                     	if	1	;There are 3 active tblptr bytes
  5299  001CB6  6AF8               	clrf	tblptru,c
  5300  001CB8  0E00               	movlw	low (__mediumconst shr (0+16))
  5301  001CBA  22F8               	addwfc	tblptru,f,c
  5302  001CBC                     	endif
  5303  001CBC  0008               	tblrd		*
  5304  001CBE  CFF5 FF80          	movff	tablat,3968	;volatile
  5305                           
  5306                           ;main.c: 180:         displaySwitch = 1;
  5307  001CC2  0E01               	movlw	1
  5308  001CC4  6E4F               	movwf	_displaySwitch,c
  5309  001CC6  0012               	return		;funcret
  5310  001CC8                     __end_of_displayControl:
  5311                           	opt callstack 0
  5312                           
  5313 ;; *************** function i2___lwdiv *****************
  5314 ;; Defined at:
  5315 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  dividend        2    0[COMRAM] unsigned int 
  5318 ;;  divisor         2    2[COMRAM] unsigned int 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  5321 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  2    0[COMRAM] unsigned int 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;Total ram usage:        7 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_displayControl
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text42
  5345  001FEC                     __ptext42:
  5346                           	opt callstack 0
  5347  001FEC                     i2___lwdiv:
  5348                           	opt callstack 17
  5349                           
  5350                           ;incstack = 0
  5351  001FEC  0E00               	movlw	0
  5352  001FEE  6E06               	movwf	i2___lwdiv@quotient+1,c
  5353  001FF0  0E00               	movlw	0
  5354  001FF2  6E05               	movwf	i2___lwdiv@quotient,c
  5355  001FF4  5003               	movf	i2___lwdiv@divisor,w,c
  5356  001FF6  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  5357  001FF8  B4D8               	btfsc	status,2,c
  5358  001FFA  D01C               	goto	i2l1036
  5359  001FFC  0E01               	movlw	1
  5360  001FFE  6E07               	movwf	i2___lwdiv@counter,c
  5361  002000  D004               	goto	i2l2339
  5362  002002                     i2l2337:
  5363  002002  90D8               	bcf	status,0,c
  5364  002004  3603               	rlcf	i2___lwdiv@divisor,f,c
  5365  002006  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  5366  002008  2A07               	incf	i2___lwdiv@counter,f,c
  5367  00200A                     i2l2339:
  5368  00200A  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  5369  00200C  D7FA               	goto	i2l2337
  5370  00200E                     i2u172_40:
  5371  00200E  90D8               	bcf	status,0,c
  5372  002010  3605               	rlcf	i2___lwdiv@quotient,f,c
  5373  002012  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  5374  002014  5003               	movf	i2___lwdiv@divisor,w,c
  5375  002016  5C01               	subwf	i2___lwdiv@dividend,w,c
  5376  002018  5004               	movf	i2___lwdiv@divisor+1,w,c
  5377  00201A  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  5378  00201C  A0D8               	btfss	status,0,c
  5379  00201E  D005               	goto	i2l2349
  5380  002020  5003               	movf	i2___lwdiv@divisor,w,c
  5381  002022  5E01               	subwf	i2___lwdiv@dividend,f,c
  5382  002024  5004               	movf	i2___lwdiv@divisor+1,w,c
  5383  002026  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  5384  002028  8005               	bsf	i2___lwdiv@quotient,0,c
  5385  00202A                     i2l2349:
  5386  00202A  90D8               	bcf	status,0,c
  5387  00202C  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  5388  00202E  3203               	rrcf	i2___lwdiv@divisor,f,c
  5389  002030  2E07               	decfsz	i2___lwdiv@counter,f,c
  5390  002032  D7ED               	goto	i2u172_40
  5391  002034                     i2l1036:
  5392  002034  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  5393  002038  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  5394  00203C  0012               	return		;funcret
  5395  00203E                     __end_ofi2___lwdiv:
  5396                           	opt callstack 0
  5397                           
  5398 ;; *************** function ___lwmod *****************
  5399 ;; Defined at:
  5400 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  dividend        2    0[COMRAM] unsigned int 
  5403 ;;  divisor         2    2[COMRAM] unsigned int 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  counter         1    4[COMRAM] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  2    0[COMRAM] unsigned int 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2, status,0
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;Total ram usage:        5 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_displayControl
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text43
  5429  00203E                     __ptext43:
  5430                           	opt callstack 0
  5431  00203E                     ___lwmod:
  5432                           	opt callstack 17
  5433                           
  5434                           ;incstack = 0
  5435  00203E  5003               	movf	___lwmod@divisor,w,c
  5436  002040  1004               	iorwf	___lwmod@divisor+1,w,c
  5437  002042  B4D8               	btfsc	status,2,c
  5438  002044  D018               	goto	i2l1046
  5439  002046  0E01               	movlw	1
  5440  002048  6E05               	movwf	___lwmod@counter,c
  5441  00204A  D004               	goto	i2l2321
  5442  00204C                     i2l2319:
  5443  00204C  90D8               	bcf	status,0,c
  5444  00204E  3603               	rlcf	___lwmod@divisor,f,c
  5445  002050  3604               	rlcf	___lwmod@divisor+1,f,c
  5446  002052  2A05               	incf	___lwmod@counter,f,c
  5447  002054                     i2l2321:
  5448  002054  AE04               	btfss	___lwmod@divisor+1,7,c
  5449  002056  D7FA               	goto	i2l2319
  5450  002058                     i2u169_40:
  5451  002058  5003               	movf	___lwmod@divisor,w,c
  5452  00205A  5C01               	subwf	___lwmod@dividend,w,c
  5453  00205C  5004               	movf	___lwmod@divisor+1,w,c
  5454  00205E  5802               	subwfb	___lwmod@dividend+1,w,c
  5455  002060  A0D8               	btfss	status,0,c
  5456  002062  D004               	goto	i2l2327
  5457  002064  5003               	movf	___lwmod@divisor,w,c
  5458  002066  5E01               	subwf	___lwmod@dividend,f,c
  5459  002068  5004               	movf	___lwmod@divisor+1,w,c
  5460  00206A  5A02               	subwfb	___lwmod@dividend+1,f,c
  5461  00206C                     i2l2327:
  5462  00206C  90D8               	bcf	status,0,c
  5463  00206E  3204               	rrcf	___lwmod@divisor+1,f,c
  5464  002070  3203               	rrcf	___lwmod@divisor,f,c
  5465  002072  2E05               	decfsz	___lwmod@counter,f,c
  5466  002074  D7F1               	goto	i2u169_40
  5467  002076                     i2l1046:
  5468  002076  C001  F001         	movff	___lwmod@dividend,?___lwmod
  5469  00207A  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  5470  00207E  0012               	return		;funcret
  5471  002080                     __end_of___lwmod:
  5472                           	opt callstack 0
  5473                           
  5474 ;; *************** function _EUSART1_Transmit_ISR *****************
  5475 ;; Defined at:
  5476 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;Total ram usage:        0 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_EUSART1_Initialize
  5500 ;;		_INTERRUPT_InterruptManager
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text44
  5505  0021E4                     __ptext44:
  5506                           	opt callstack 0
  5507  0021E4                     _EUSART1_Transmit_ISR:
  5508                           	opt callstack 20
  5509                           
  5510                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  5511                           
  5512                           ;incstack = 0
  5513  0021E4  0E08               	movlw	8
  5514  0021E6  604C               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  5515  0021E8  D010               	goto	i2l316
  5516                           
  5517                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  5518  0021EA  0E60               	movlw	low _eusart1TxBuffer
  5519  0021EC  244D               	addwf	_eusart1TxTail,w,c	;volatile
  5520  0021EE  6ED9               	movwf	fsr2l,c
  5521  0021F0  6ADA               	clrf	fsr2h,c
  5522  0021F2  0E00               	movlw	high _eusart1TxBuffer
  5523  0021F4  22DA               	addwfc	fsr2h,f,c
  5524  0021F6  50DF               	movf	indf2,w,c
  5525  0021F8  6EAD               	movwf	4013,c	;volatile
  5526  0021FA  2A4D               	incf	_eusart1TxTail,f,c	;volatile
  5527                           
  5528                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  5529  0021FC  0E07               	movlw	7
  5530  0021FE  644D               	cpfsgt	_eusart1TxTail,c	;volatile
  5531  002200  D002               	goto	i2l2595
  5532                           
  5533                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  5534  002202  0E00               	movlw	0
  5535  002204  6E4D               	movwf	_eusart1TxTail,c	;volatile
  5536  002206                     i2l2595:
  5537                           
  5538                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  5539  002206  2A4C               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  5540                           
  5541                           ;mcc_generated_files/eusart1.c: 218:     }
  5542  002208  0012               	return	
  5543  00220A                     i2l316:
  5544                           
  5545                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  5546  00220A  989D               	bcf	3997,4,c	;volatile
  5547  00220C  0012               	return		;funcret
  5548  00220E                     __end_of_EUSART1_Transmit_ISR:
  5549                           	opt callstack 0
  5550                           
  5551 ;; *************** function _EUSART1_Receive_ISR *****************
  5552 ;; Defined at:
  5553 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    2
  5574 ;; This function calls:
  5575 ;;		Absolute function
  5576 ;;		_EUSART1_DefaultErrorHandler
  5577 ;;		_EUSART1_DefaultFramingErrorHandler
  5578 ;;		_EUSART1_DefaultOverrunErrorHandler
  5579 ;;		_EUSART1_RxDataHandler
  5580 ;; This function is called by:
  5581 ;;		_EUSART1_Initialize
  5582 ;;		_INTERRUPT_InterruptManager
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text45
  5587  001CC8                     __ptext45:
  5588                           	opt callstack 0
  5589  001CC8                     _EUSART1_Receive_ISR:
  5590                           	opt callstack 18
  5591                           
  5592                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  5593                           
  5594                           ;incstack = 0
  5595  001CC8  0E00               	movlw	low _eusart1RxStatusBuffer
  5596  001CCA  244B               	addwf	_eusart1RxHead,w,c	;volatile
  5597  001CCC  6ED9               	movwf	fsr2l,c
  5598  001CCE  6ADA               	clrf	fsr2h,c
  5599  001CD0  0E01               	movlw	high _eusart1RxStatusBuffer
  5600  001CD2  22DA               	addwfc	fsr2h,f,c
  5601  001CD4  0E00               	movlw	0
  5602  001CD6  6EDF               	movwf	indf2,c
  5603                           
  5604                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  5605  001CD8  A4AB               	btfss	4011,2,c	;volatile
  5606  001CDA  D014               	goto	i2u197_49
  5607                           
  5608                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  5609  001CDC  0E00               	movlw	low _eusart1RxStatusBuffer
  5610  001CDE  244B               	addwf	_eusart1RxHead,w,c	;volatile
  5611  001CE0  6ED9               	movwf	fsr2l,c
  5612  001CE2  6ADA               	clrf	fsr2h,c
  5613  001CE4  0E01               	movlw	high _eusart1RxStatusBuffer
  5614  001CE6  22DA               	addwfc	fsr2h,f,c
  5615  001CE8  0101               	movlb	1	; () banked
  5616  001CEA  82DF               	bsf	indf2,1,c
  5617                           
  5618                           ; BSR set to: 1
  5619                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  5620  001CEC  D801               	call	i2u197_48
  5621  001CEE  D00A               	goto	i2u197_49
  5622  001CF0                     i2u197_48:
  5623  001CF0  0005               	push	
  5624  001CF2  6EFA               	movwf	pclath,c
  5625  001CF4  0100               	movlb	0	; () banked
  5626  001CF6  5172               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  5627  001CF8  6EFD               	movwf	tosl,c
  5628  001CFA  5173               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  5629  001CFC  6EFE               	movwf	tosh,c
  5630  001CFE  6AFF               	clrf	tosu,c
  5631  001D00  50FA               	movf	pclath,w,c
  5632  001D02  0012               	return		;indir
  5633  001D04                     i2u197_49:
  5634                           
  5635                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  5636  001D04  A2AB               	btfss	4011,1,c	;volatile
  5637  001D06  D014               	goto	i2u199_49
  5638                           
  5639                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  5640  001D08  0E00               	movlw	low _eusart1RxStatusBuffer
  5641  001D0A  244B               	addwf	_eusart1RxHead,w,c	;volatile
  5642  001D0C  6ED9               	movwf	fsr2l,c
  5643  001D0E  6ADA               	clrf	fsr2h,c
  5644  001D10  0E01               	movlw	high _eusart1RxStatusBuffer
  5645  001D12  22DA               	addwfc	fsr2h,f,c
  5646  001D14  0101               	movlb	1	; () banked
  5647  001D16  84DF               	bsf	indf2,2,c
  5648                           
  5649                           ; BSR set to: 1
  5650                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  5651  001D18  D801               	call	i2u199_48
  5652  001D1A  D00A               	goto	i2u199_49
  5653  001D1C                     i2u199_48:
  5654  001D1C  0005               	push	
  5655  001D1E  6EFA               	movwf	pclath,c
  5656  001D20  0100               	movlb	0	; () banked
  5657  001D22  5170               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  5658  001D24  6EFD               	movwf	tosl,c
  5659  001D26  5171               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  5660  001D28  6EFE               	movwf	tosh,c
  5661  001D2A  6AFF               	clrf	tosu,c
  5662  001D2C  50FA               	movf	pclath,w,c
  5663  001D2E  0012               	return		;indir
  5664  001D30                     i2u199_49:
  5665                           
  5666                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  5667  001D30  0E00               	movlw	low _eusart1RxStatusBuffer
  5668  001D32  244B               	addwf	_eusart1RxHead,w,c	;volatile
  5669  001D34  6ED9               	movwf	fsr2l,c
  5670  001D36  6ADA               	clrf	fsr2h,c
  5671  001D38  0E01               	movlw	high _eusart1RxStatusBuffer
  5672  001D3A  22DA               	addwfc	fsr2h,f,c
  5673  001D3C  50DF               	movf	indf2,w,c
  5674  001D3E  B4D8               	btfsc	status,2,c
  5675  001D40  D00C               	goto	i2l2615
  5676                           
  5677                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  5678  001D42  D801               	call	i2u201_48
  5679  001D44  0012               	return	
  5680  001D46                     i2u201_48:
  5681  001D46  0005               	push	
  5682  001D48  6EFA               	movwf	pclath,c
  5683  001D4A  0100               	movlb	0	; () banked
  5684  001D4C  516E               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  5685  001D4E  6EFD               	movwf	tosl,c
  5686  001D50  516F               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  5687  001D52  6EFE               	movwf	tosh,c
  5688  001D54  6AFF               	clrf	tosu,c
  5689  001D56  50FA               	movf	pclath,w,c
  5690  001D58  0012               	return		;indir
  5691  001D5A                     i2l2615:
  5692                           
  5693                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  5694  001D5A  EC51  F011         	call	_EUSART1_RxDataHandler	;wreg free
  5695  001D5E  0012               	return		;funcret
  5696  001D60                     __end_of_EUSART1_Receive_ISR:
  5697                           	opt callstack 0
  5698                           
  5699 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  5700 ;; Defined at:
  5701 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		None
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;Total ram usage:        0 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_EUSART1_Initialize
  5725 ;;		_EUSART1_Receive_ISR
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text46
  5730  00238C                     __ptext46:
  5731                           	opt callstack 0
  5732  00238C                     _EUSART1_DefaultOverrunErrorHandler:
  5733                           	opt callstack 19
  5734                           
  5735                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  5736                           
  5737                           ;incstack = 0
  5738  00238C  98AB               	bcf	4011,4,c	;volatile
  5739                           
  5740                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  5741  00238E  88AB               	bsf	4011,4,c	;volatile
  5742  002390  0012               	return		;funcret
  5743  002392                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  5744                           	opt callstack 0
  5745                           
  5746 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  5747 ;; Defined at:
  5748 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		None
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5766 ;;Total ram usage:        0 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_EUSART1_Initialize
  5772 ;;		_EUSART1_Receive_ISR
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text47
  5777  0023A2                     __ptext47:
  5778                           	opt callstack 0
  5779  0023A2                     _EUSART1_DefaultFramingErrorHandler:
  5780                           	opt callstack 19
  5781                           
  5782                           ;incstack = 0
  5783  0023A2  0012               	return		;funcret
  5784  0023A4                     __end_of_EUSART1_DefaultFramingErrorHandler:
  5785                           	opt callstack 0
  5786                           
  5787 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  5788 ;; Defined at:
  5789 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;Total ram usage:        0 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    1
  5810 ;; This function calls:
  5811 ;;		_EUSART1_RxDataHandler
  5812 ;; This function is called by:
  5813 ;;		_EUSART1_Initialize
  5814 ;;		_EUSART1_Receive_ISR
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text48
  5819  002392                     __ptext48:
  5820                           	opt callstack 0
  5821  002392                     _EUSART1_DefaultErrorHandler:
  5822                           	opt callstack 18
  5823                           
  5824                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  5825                           
  5826                           ;incstack = 0
  5827  002392  EC51  F011         	call	_EUSART1_RxDataHandler	;wreg free
  5828  002396  0012               	return		;funcret
  5829  002398                     __end_of_EUSART1_DefaultErrorHandler:
  5830                           	opt callstack 0
  5831                           
  5832 ;; *************** function _EUSART1_RxDataHandler *****************
  5833 ;; Defined at:
  5834 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      void 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;Total ram usage:        0 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_EUSART1_Receive_ISR
  5858 ;;		_EUSART1_DefaultErrorHandler
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text49
  5863  0022A2                     __ptext49:
  5864                           	opt callstack 0
  5865  0022A2                     _EUSART1_RxDataHandler:
  5866                           	opt callstack 19
  5867                           
  5868                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  5869                           
  5870                           ;incstack = 0
  5871  0022A2  0E40               	movlw	low _eusart1RxBuffer
  5872  0022A4  244B               	addwf	_eusart1RxHead,w,c	;volatile
  5873  0022A6  6ED9               	movwf	fsr2l,c
  5874  0022A8  6ADA               	clrf	fsr2h,c
  5875  0022AA  0E01               	movlw	high _eusart1RxBuffer
  5876  0022AC  22DA               	addwfc	fsr2h,f,c
  5877  0022AE  CFAE FFDF          	movff	4014,indf2	;volatile
  5878  0022B2  2A4B               	incf	_eusart1RxHead,f,c	;volatile
  5879                           
  5880                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  5881  0022B4  0E3F               	movlw	63
  5882  0022B6  644B               	cpfsgt	_eusart1RxHead,c	;volatile
  5883  0022B8  D002               	goto	i2l2373
  5884                           
  5885                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  5886  0022BA  0E00               	movlw	0
  5887  0022BC  6E4B               	movwf	_eusart1RxHead,c	;volatile
  5888  0022BE                     i2l2373:
  5889                           
  5890                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  5891  0022BE  2A49               	incf	_eusart1RxCount,f,c	;volatile
  5892  0022C0  0012               	return		;funcret
  5893  0022C2                     __end_of_EUSART1_RxDataHandler:
  5894                           	opt callstack 0
  5895                           
  5896 ;; *************** function _ADC_ISR *****************
  5897 ;; Defined at:
  5898 ;;		line 135 in file "mcc_generated_files/adc.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		None
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; This function calls:
  5919 ;;		Nothing
  5920 ;; This function is called by:
  5921 ;;		_INTERRUPT_InterruptManager
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text50
  5926  00239C                     __ptext50:
  5927                           	opt callstack 0
  5928  00239C                     _ADC_ISR:
  5929                           	opt callstack 20
  5930                           
  5931                           ;mcc_generated_files/adc.c: 138:     PIR1bits.ADIF = 0;
  5932                           
  5933                           ;incstack = 0
  5934  00239C  9C9E               	bcf	3998,6,c	;volatile
  5935  00239E  0012               	return		;funcret
  5936  0023A0                     __end_of_ADC_ISR:
  5937                           	opt callstack 0
  5938                           
  5939                           	psect	text51
  5940  000000                     __ptext51:
  5941                           	opt callstack 0
  5942                           
  5943                           	psect	rparam
  5944  0000                     
  5945                           	psect	temp
  5946  000050                     btemp:
  5947                           	opt callstack 0
  5948  000050                     	ds	1
  5949  0000                     int$flags	set	btemp
  5950  0000                     wtemp8	set	btemp+1
  5951  0000                     ttemp5	set	btemp+1
  5952  0000                     ttemp6	set	btemp+4
  5953  0000                     ttemp7	set	btemp+8
  5954                           tosu	equ	0xFFF
  5955                           tosh	equ	0xFFE
  5956                           tosl	equ	0xFFD
  5957                           stkptr	equ	0xFFC
  5958                           pclatu	equ	0xFFB
  5959                           pclath	equ	0xFFA
  5960                           pcl	equ	0xFF9
  5961                           tblptru	equ	0xFF8
  5962                           tblptrh	equ	0xFF7
  5963                           tblptrl	equ	0xFF6
  5964                           tablat	equ	0xFF5
  5965                           prodh	equ	0xFF4
  5966                           prodl	equ	0xFF3
  5967                           indf0	equ	0xFEF
  5968                           postinc0	equ	0xFEE
  5969                           postdec0	equ	0xFED
  5970                           preinc0	equ	0xFEC
  5971                           plusw0	equ	0xFEB
  5972                           fsr0h	equ	0xFEA
  5973                           fsr0l	equ	0xFE9
  5974                           wreg	equ	0xFE8
  5975                           indf1	equ	0xFE7
  5976                           postinc1	equ	0xFE6
  5977                           postdec1	equ	0xFE5
  5978                           preinc1	equ	0xFE4
  5979                           plusw1	equ	0xFE3
  5980                           fsr1h	equ	0xFE2
  5981                           fsr1l	equ	0xFE1
  5982                           bsr	equ	0xFE0
  5983                           indf2	equ	0xFDF
  5984                           postinc2	equ	0xFDE
  5985                           postdec2	equ	0xFDD
  5986                           preinc2	equ	0xFDC
  5987                           plusw2	equ	0xFDB
  5988                           fsr2h	equ	0xFDA
  5989                           fsr2l	equ	0xFD9
  5990                           status	equ	0xFD8


Data Sizes:
    Strings     92
    Constant    14
    Data        8
    BSS         466
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     64      79
    BANK0           160     51     118
    BANK1           256      0     192
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_2(CODE[5]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_5(CODE[6]), STR_2(CODE[5]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 64
		 -> stringArry(BANK1[64]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 64
		 -> stringArry(BANK1[64]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), stringArry(BANK1[64]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), stringArry(BANK1[64]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_8(CODE[31]), STR_7(CODE[14]), STR_6(CODE[17]), STR_3(CODE[19]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1573_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 64
		 -> stringArry(BANK1[64]), 

    memset@s	PTR unsigned char  size(2) Largest target is 64
		 -> stringArry(BANK1[64]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_8(CODE[31]), STR_7(CODE[14]), STR_6(CODE[17]), STR_3(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 31
		 -> STR_8(CODE[31]), STR_7(CODE[14]), STR_6(CODE[17]), STR_3(CODE[19]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), stringArry(BANK1[64]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), stringArry(BANK1[64]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(COMRAM[7]), stringArry(BANK1[64]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sp__memset	PTR void  size(2) Largest target is 64
		 -> stringArry(BANK1[64]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayControl(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayControl(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _temps->___lwdiv
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _displayControl->i2___lwdiv

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   18393
                                             50 BANK0      1     1      0
                     _ADC_Initialize
                 _EUSART1_Initialize
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
                    _TMR2_Initialize
           _TMR2_SetInterruptHandler
                           _delay_ms
                             _memset
                             _printf
                            _strncmp
                              _temps
 ---------------------------------------------------------------------------------
 (1) _temps                                                8     8      0     974
                                             22 COMRAM     8     8      0
                  _ADC_GetConversion
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     711
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      31
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _strncmp                                             11     5      6     865
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   12987
                                             42 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12540
                                             34 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6   12058
                                             62 COMRAM     2     2      0
                                             18 BANK0     16    10      6
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2732
                                             26 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6853
                                             44 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4587
                                             33 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     310
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2077
                                             26 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1577
                                             17 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      93
                                             16 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      62
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             33 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             15 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             15 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    1287
                                             15 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2     304
                                             15 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     816
                     _ADC_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      37
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          8     8      0     525
                                              7 COMRAM     8     8      0
                   Absolute function *
                            _ADC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0     525
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR2_CallBack                                       0     0      0     525
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                     _displayControl *
 ---------------------------------------------------------------------------------
 (13) _displayControl                                      0     0      0     525
                            ___lwmod
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (14) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (14) ___lwmod                                             5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_Initialize
     _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _delay_ms
   _memset
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _stoa
           _fputc
             _putch
               _EUSART1_Write
           _strlen
   _strncmp
   _temps
     _ADC_GetConversion
     ___lwdiv

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADC_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _displayControl *
         ___lwmod
         i2___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C0       7       75.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      76       5       73.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     40      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     24D      12        0.0%
DATA                 0      0     24D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Oct 21 12:12:01 2019

              __end_of_TMR2_SetInterruptHandler 234A                        _eusart1TxBufferRemaining 004C  
                                            l28 2322                          __end_of_FVR_Initialize 2384  
                            i2___lwdiv@dividend 0001                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l304 2106                                             l513 18CC  
                                           l195 2174                                             l428 224E  
                                           l473 1D8E                                             l484 10E0  
                                           l486 10E8                                    __CFG_CPB$OFF 000000  
                                           _PR2 000FBB                                    __CFG_CPD$OFF 000000  
                                           _abs 212A                                             _avg 006C  
                                           _arr 0200                                             _pad 1D60  
                               __end_of_ADC_ISR 23A0                                             _num 0045  
                               _TMR2_Initialize 22E0                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          ?_abs 0022                                            l1220 2152  
                                          l1036 1FE2                                            l3001 1270  
                                          l3005 1288                                            l3031 18FA  
                                          l3041 193E                                            l3017 1890  
                                          l3105 147A                                            l3035 1918  
                                          l3027 18E2                                            l3045 1958  
                                          l3231 20B2                                            l3313 1778  
                                          l3049 1970                                            l3081 13A8  
                                          l3333 185C                                            l3325 1814  
                                          l3261 1B10                                            l3327 1846  
                                          l3319 17DC                                            l3095 1456  
                                          l3175 1F56                                            l3247 1ABA  
                                          l3351 1618                                            l3089 1418  
                                          l3177 1F7C                                            l3185 1FB0  
                                          l2803 2124                                            l3099 1462  
                                          l3187 1FB8                                            l2805 2126  
                                          l3277 1BB0                                            l3197 1FD8  
                                          l3381 1706                                            l2903 15B0  
                                          l2815 1EEE                                            l3279 1BBE  
                                          l2825 20C6                                            l2833 21C4  
                                          l3385 1710                                            l3377 16D2  
                                          l3369 1684                                            l3299 2238  
                                          l2907 15D6                                            l2923 19DE  
                                          l2835 21C8                                            l2851 1D98  
                                          l3379 16E8                                            l2829 20DC  
                                          l2845 1D78                                            ?_pad 0022  
                                          l2943 1A90                                            l2935 1A54  
                                          l2927 19F8                                            l2919 19BA  
                                          l2855 1DB0                                            l2881 1504  
                                          l2929 1A0C                                            l2849 1D86  
                                          l2953 10C4                                            l2875 14DC  
                                          l2939 1A6A                                            l2859 1DDC  
                                          l2971 1110                                            l2789 20F6  
                                          l2981 120A                                            l2887 152A  
                                          l2967 1102                                            l2889 153E  
                                          l2899 159A                                            STR_1 1066  
                                          STR_2 1066                                            STR_3 102E  
                                          STR_4 1060                                            STR_5 1060  
                                          STR_6 1041                                            STR_7 1052  
                                          STR_8 100F                                            u3000 1B68  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u3050 1C08  
                                          u3140 163E                                            u2510 1542  
                                          u3207 223E                                            u2600 1096  
                                          u2370 1EE6                                            u2610 1098  
                                          u2460 2138                                            u2700 124A  
                                          u2390 1F2E                                            u2710 124E  
                                          u2640 10D6                                            u2800 190E  
                                          u2570 1A10                                            u2730 125A  
                                          u2491 150A                                            u2660 10FC  
                                          u3197 1AE0                                            u2670 121A  
                                          u2830 1984                                            u2751 1870  
                                          u2690 123C                                            u2930 1FBC  
                                          u2691 123A                                            u2860 132A  
                                          u2950 2332                                            u2990 1AFE  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 20F4                                            abs@a 0022  
                                          _dbuf 007C                                            _main 15F8  
                                          _dtoa 106C                                   ?_EUSART1_Read 0001  
                                          _prec 0041                                            _nout 0068  
                                          pad@i 0029                                            pad@p 0026  
                                          fsr1h 000FE2                              i2___lwdiv@quotient 0005  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002B  
                                          fsr2l 000FD9                                            _stoa 1866  
                                          btemp 0050                                   __CFG_BORV$190 000000  
                                          start 009E                                   __CFG_IESO$OFF 000000  
                               ?_displayControl 0001                                    ___param_bank 000000  
                                         ??_abs 0024                                           ??_pad 0028  
                               ?_FVR_Initialize 0001                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 2328                           _eusart1RxStatusBuffer 0100  
                               __end_of___aodiv 15F8                                           ?_main 0001  
                                         ?_dtoa 002D                                 __end_of___aomod 1AB2  
                                         ?_stoa 001B                                           _T2CON 000FBA  
                                __CFG_DEBUG$OFF 000000                                 __end_of___lwdiv 1FEC  
                               __end_of___lwmod 2080                                           i2l140 003A  
                                         i2l142 0052                                           i2l143 007A  
                                         i2l144 0070                                           i2l316 220A  
                                  vfpfcnvrt@fmt 00B0                                           _PORTA 000F80  
                                         _PORTB 000F81                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 21E4                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR2_ISR 2282                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _flags 0043  
                                         _index 0047                                           _fputc 1ED6  
                                         _fputs 20BC                              __CFG_MCLRE$EXTMCLR 000000  
                                         _temps 1AB2                                           pad@fp 0022  
                                         _width 006A                                           _putch 2336  
                                         dtoa@d 002F                                           dtoa@i 00AC  
                                         dtoa@n 00A4                                           dtoa@p 009E  
                                         dtoa@s 00A2                                           dtoa@w 00A0  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         tablat 000FF5                                 __end_of_numbers 100B  
                                ??_EUSART1_Read 0010                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 0027  
                                         stoa@l 002F                                           stoa@p 002D  
                                         stoa@s 001D                                           stoa@w 0029  
                                         ttemp5 0051                                           ttemp6 0054  
                                         ttemp7 0058                                           status 000FD8  
                                         wtemp8 0051                                  __CFG_HFOFST$ON 000000  
                               __end_of_strncmp 1C2E      __end_of_EUSART1_DefaultFramingErrorHandler 23A4  
   __size_of_EUSART1_DefaultFramingErrorHandler 0002            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 23A2  
                                __CFG_PBADEN$ON 000000                              __size_ofi2___lwdiv 0052  
                               __initialization 1E6A                      __end_of_EUSART1_Initialize 1E6A  
                                  __end_of_main 1734                                    __end_of_dtoa 12B2  
                                  __end_of_stoa 198E                         __end_of_TMR2_Initialize 22FE  
                                     ??_ADC_ISR 0001                     ?_INTERRUPT_InterruptManager 0001  
                      _TMR2_SetInterruptHandler 2340                                          ??_main 0041  
                                        ??_dtoa 0037                                          ??_stoa 001F  
                                 __activetblptr 000003                           ?_EUSART1_Transmit_ISR 0001  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0012  
                                        ?_fputs 001B                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          ?_temps 0001  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 000E                                          i2l1036 2034  
                                        i2l1046 2076                                          i2l2321 2054  
                                        i2l2327 206C                                          i2l2319 204C  
                                        i2l2337 2002                                          i2l2339 200A  
                                        i2l2373 22BE                                          i2l2349 202A  
                                __CFG_WDTEN$OFF 000000                                          i2l2615 1D5A  
                                        i2l2383 1C7E                                          i2l2595 2206  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                __end_of_delay_ms 225E  
                          delay_ms@milliseconds 0010                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 00C4                                       ??___aodiv 0020  
                                     ??___aomod 0020                                  __CFG_STVREN$ON 000000  
                                     ??___lwdiv 0014                                       ??___lwmod 0005  
                      ?_EUSART1_SetErrorHandler 0010                                          _memset 1734  
                                        clear_0 1EA2                                          clear_1 1EAE  
                                        clear_2 1EBA                                          clear_3 1EC6  
                                        _printf 220E                                          pad@buf 0024  
              ??_EUSART1_SetOverrunErrorHandler 0012                 ?_EUSART1_SetOverrunErrorHandler 0010  
                                        dtoa@fp 002D                                          _strlen 21BA  
                                        fputc@c 0012                                          fputs@c 001F  
                                        fputs@i 0020                                    __pdataCOMRAM 004F  
                                        fputs@s 001B                               __end_ofi2___lwdiv 203E  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          temps@i 001B  
                                        tblptru 000FF8                        ADC_GetConversion@channel 0014  
                                        stoa@cp 002B                                          stoa@fp 001B  
                              __end_of_vfprintf 1F9A                                 ??_EUSART1_Write 0010  
      TMR2_SetInterruptHandler@InterruptHandler 0010                                 _eusart1RxBuffer 0140  
                                     ??_strncmp 0016                   __size_of_INTERRUPT_Initialize 0004  
                               _eusart1TxBuffer 0060                               _SYSTEM_Initialize 22C2  
                                    __accesstop 0060                         __end_of__initialization 1ECC  
                         __end_of_TMR2_CallBack 22A2                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 0020  
                 __end_of_EUSART1_RxDataHandler 22C2                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 2384                             ??_SYSTEM_Initialize 0012  
                                     ?_TMR2_ISR 0001                                   __end_of_fputc 1F42  
                                 __end_of_fputs 20F4                                   __end_of_temps 1B86  
                                 __end_of_putch 2340                                ?_TMR2_Initialize 0001  
                          __end_of_EUSART1_Read 20BC                          ??_EUSART1_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 1D60                                         ??_fputc 0016  
                     __end_of_SYSTEM_Initialize 22E0                                         ??_fputs 001F  
                                       ??_temps 0017                                         ??_putch 0011  
                                 _eusart1RxHead 004B                                   _eusart1TxHead 004E  
                                 _eusart1RxTail 004A                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                                      __pbssBANK2 0200  
                                 _eusart1TxTail 004D               _EUSART1_TxDefaultInterruptHandler 0076  
               ??_EUSART1_SetRxInterruptHandler 0012                                 __CFG_PLLCFG$OFF 000000  
                              ??_displayControl 0008                 __end_of_EUSART1_SetErrorHandler 237C  
                            __CFG_CCP2MX$PORTC1 000000                                ??_FVR_Initialize 0010  
                                    ??_TMR2_ISR 0008                              __CFG_CCP3MX$PORTB5 000000  
                                       _ADC_ISR 239C                                         ?_memset 0010  
                                       ?_printf 00C6                         __size_of_ADC_Initialize 0018  
                                       ?_strlen 0010          __end_of_EUSART1_SetFramingErrorHandler 2372  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 2368  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCCON2 000FD2  
                                     ?_delay_ms 0010                              __size_of_vfpfcnvrt 01FE  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                      ??_TMR2_SetInterruptHandler 0012  
                                       ___aodiv 14B0                                         ___aomod 198E  
                                       ___lwdiv 1F9A                                         ___lwmod 203E  
                                     ?_vfprintf 00BE                                    __psmallconst 1000  
                           _EUSART1_is_rx_ready 2328                                         __pcinit 1E6A  
                               __size_of_memset 0132                                         __ramtop 1000  
                                       __ptext0 15F8                                         __ptext1 1AB2  
                                       __ptext2 1F9A                                         __ptext3 215C  
                                       __ptext4 1B86                                         __ptext5 220E  
                                       __ptext6 1F42                                         __ptext7 12B2  
                                       __ptext8 1866                                         __ptext9 106C  
                               __size_of_printf 0028                                 __size_of_strlen 002A  
                         _OSCILLATOR_Initialize 2316                                       _T2CONbits 000FBA  
                                  __size_of_abs 0032                                    __size_of_pad 0096  
                            _EUSART1_Initialize 1DF6                        ??_PIN_MANAGER_Initialize 0010  
                                    ??_delay_ms 0012                                         _numbers 1001  
                 ??_EUSART1_DefaultErrorHandler 0001                                     temps@i_1042 001D  
                    __size_of_SYSTEM_Initialize 001E                                         main@tmp 00CE  
                                       _strncmp 1B86                            end_of_initialization 1ECC  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0014                                         memset@c 0012  
                                       memset@k 0018                                         memset@n 0014  
                                       memset@s 001A                     _EUSART1_OverrunErrorHandler 0070  
                                       fputs@fp 001D           __end_of_EUSART1_SetRxInterruptHandler 235E  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 2354  
                             __end_of_vfpfcnvrt 14B0                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 003C                                      ??_vfprintf 0041  
                          ??_EUSART1_Initialize 0012                                         strlen@a 0012  
                                       strlen@s 0010                           __end_of_displayToggle 100F  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0010  
                             i2___lwdiv@divisor 0003                           ??_EUSART1_is_rx_ready 0010  
                                     i2___lwdiv 1FEC                               i2___lwdiv@counter 0007  
                                  _EUSART1_Read 2080            __size_of_EUSART1_DefaultErrorHandler 0006  
                                    _stringArry 0180                    __end_of_INTERRUPT_Initialize 239C  
          __end_of_TMR2_DefaultInterruptHandler 23A2           __size_of_TMR2_DefaultInterruptHandler 0002  
                  _TMR2_DefaultInterruptHandler 23A0                                     vfpfcnvrt@ap 00B2  
                                   vfpfcnvrt@cp 00BC                                     vfpfcnvrt@fp 00AE  
                                   vfpfcnvrt@ll 00B4                                   __pidataCOMRAM 23A4  
                             __size_of_TMR2_ISR 0024                                  _ADC_Initialize 22FE  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_memset 1866  
                                __end_of_printf 2236                                  __end_of_strlen 21E4  
                           start_initialization 1E6A                 __size_of_PIN_MANAGER_Initialize 002E  
                                   __end_of_abs 215C                                     __end_of_pad 1DF6  
 EUSART1_SetRxInterruptHandler@interruptHandler 0010   EUSART1_SetTxInterruptHandler@interruptHandler 0010  
                                   putch@txData 0011                                      ?i2___lwdiv 0001  
                         __end_of_EUSART1_Write 212A                                     vfprintf@fmt 00C0  
                         _EUSART1_RxDataHandler 22A2                  ?_EUSART1_SetRxInterruptHandler 0010  
                        __end_of_ADC_Initialize 2316                                     __pdataBANK0 00CF  
                                      ?_ADC_ISR 0001                                        ??_memset 0016  
                 ?_TMR2_DefaultInterruptHandler 0001                                      memset@dest 0010  
                                      ??_printf 0041                                        ??_strlen 0012  
                                _eusart1RxCount 0049                          __size_of_TMR2_CallBack 0020  
                                   __pbssCOMRAM 0041               _EUSART1_RxDefaultInterruptHandler 0074  
                 __size_of_EUSART1_Transmit_ISR 002A                                   __pcstackBANK0 009C  
                              ___aodiv@dividend 0010                        __size_of_TMR2_Initialize 001E  
                             __size_of_delay_ms 0028                 ??_EUSART1_SetTxInterruptHandler 0012  
              ??_EUSART1_SetFramingErrorHandler 0012                 ?_EUSART1_SetFramingErrorHandler 0010  
                  __size_of_EUSART1_Receive_ISR 0098                                ___lwdiv@dividend 0010  
                        _PIN_MANAGER_Initialize 218C                                       _dtoa$1093 009C  
                                     __pintcode 0008                                        ?___aodiv 0010  
                                      ?___aomod 0010                                ___aodiv@quotient 0022  
                                      ?___lwdiv 0010                                        ?___lwmod 0001  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 0008  
                              __CFG_PRICLKEN$ON 000000                               __size_of_vfprintf 0058  
                                   __smallconst 1000                                        _BAUDCON1 000FB8  
    __end_of_EUSART1_DefaultOverrunErrorHandler 2392     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 238C                            _EUSART1_ErrorHandler 006E  
                       _EUSART1_SetErrorHandler 2372                                ___lwdiv@quotient 0015  
                                __size_of_fputc 006C                                  __size_of_fputs 0038  
                                      ?_strncmp 0010                                     ??i2___lwdiv 0005  
                                __size_of_temps 00D4                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 2398         EUSART1_SetErrorHandler@interruptHandler 0010  
                                 _TMR2_CallBack 2282                                        _PIE1bits 000F9D  
                                      i2u201_48 1D46                                        i2u220_48 0044  
           __size_of_INTERRUPT_InterruptManager 0096                                        i2u223_48 005C  
                                      i2u172_40 200E                                        i2u183_48 2290  
                                      i2u169_40 2058                                        _PIR1bits 000F9E  
                                      i2u189_40 2272                                        i2u197_48 1CF0  
                                      i2u197_49 1D04                                        i2u199_48 1D1C  
                                      i2u199_49 1D30                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                      _TMR2_ISR 225E                         __size_of_displayControl 009A  
                                      _VREFCON0 000F42                                       _vfpfcnvrt 12B2  
                              __size_of_ADC_ISR 0004                                      _ADCON0bits 000FC2  
                              temps@temp_offset 0019                         __size_of_FVR_Initialize 0008  
                ??_TMR2_DefaultInterruptHandler 0001               __size_of_TMR2_SetInterruptHandler 000A  
                     ?_TMR2_SetInterruptHandler 0010                                     _INTCON2bits 000FF1  
                                     copy_data0 1E7E                           ?_INTERRUPT_Initialize 0001  
                             ??_TMR2_Initialize 0012                           EUSART1_Read@readValue 0010  
                                ?_TMR2_CallBack 0001           __end_of_EUSART1_SetTxInterruptHandler 2354  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 234A  
                                      __Hrparam 0000                                      vfprintf@ap 00C2  
                                      __Lrparam 0000                                      vfprintf@fp 00BE  
                             _ADC_GetConversion 215C                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0010  
                            ?_ADC_GetConversion 0010                                __size_of___aodiv 0148  
                              __size_of___aomod 0124                     __size_of_EUSART1_Initialize 0074  
                                    ?_vfpfcnvrt 00AE                                __size_of___lwdiv 0052  
                              __size_of___lwmod 0042                                 ___aodiv@divisor 0018  
                               ___aodiv@counter 0020                       ??_EUSART1_SetErrorHandler 0012  
           __end_of_EUSART1_DefaultErrorHandler 2398                     _EUSART1_DefaultErrorHandler 2392  
                           ??_ADC_GetConversion 0012                     __end_of_EUSART1_is_rx_ready 2336  
                                      _delay_ms 2236                                 ___lwdiv@divisor 0012  
                               ___lwdiv@counter 0014                                        __ptext10 1D60  
                                      __ptext11 21BA                                        __ptext20 2236  
                                      __ptext12 20BC                                        __ptext21 22C2  
                                      __ptext13 1ED6                                        __ptext30 2354  
                                      __ptext22 22E0                                        __ptext14 2336  
                                      __ptext31 235E                                        __ptext23 2340  
                                      __ptext15 20F4                                        __ptext40 23A0  
                                      __ptext32 2368                                        __ptext24 218C  
                                      __ptext16 212A                                        __ptext41 1C2E  
                                      __ptext33 2372                                        __ptext25 2316  
                                      __ptext17 198E                                        __ptext50 239C  
                                      __ptext42 1FEC                                        __ptext34 22FE  
                                      __ptext26 2398                                        __ptext18 14B0  
                                      __ptext51 0000                                        __ptext43 203E  
                                      __ptext35 2328                                        __ptext27 237C  
                                      __ptext19 1734                                        __ptext44 21E4  
                                      __ptext36 2080                                        __ptext28 1DF6  
                                      __ptext45 1CC8                                        __ptext29 234A  
                                      __ptext46 238C                                        __ptext38 225E  
                                      __ptext47 23A2                                        __ptext39 2282  
                                      __ptext48 2392                                        __ptext49 22A2  
                              __size_of_strncmp 00A8                                   __size_of_main 013C  
                                 __size_of_dtoa 0246                                   __size_of_stoa 0128  
                     __end_of_ADC_GetConversion 218C                                       stoa@F1139 00CF  
EUSART1_SetOverrunErrorHandler@interruptHandler 0010                                        int$flags 0050  
                                      _vfprintf 1F42              __end_of_INTERRUPT_InterruptManager 009E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00C6  
                   _EUSART1_FramingErrorHandler 0072                             _EUSART1_Receive_ISR 1CC8  
                              ___aomod@dividend 0010                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 0010                                        intlevel2 0000  
                               ??_TMR2_CallBack 0008                            ?_EUSART1_Receive_ISR 0001  
                              ___lwmod@dividend 0001                                    _VREFCON0bits 000F42  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 2368  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 235E  
                                    _RCSTA1bits 000FAB                    __end_of_EUSART1_Transmit_ISR 220E  
                                     strncmp@_l 0010                                       strncmp@_r 0012  
                              ??_ADC_Initialize 0010                                        printf@ap 00CC  
                                _displayControl 1C2E  EUSART1_SetFramingErrorHandler@interruptHandler 0010  
                ?_EUSART1_SetTxInterruptHandler 0010                                 ___aomod@divisor 0018  
                                   ??_vfpfcnvrt 003F                                        stoa@nuls 0020  
                               ___aomod@counter 0020                          __size_of_EUSART1_Write 0036  
                            _eusart1RxLastError 0048                                  _FVR_Initialize 237C  
                               ___lwmod@divisor 0003                           TMR2_ISR@CountCallBack 0078  
                               ___lwmod@counter 0005                                        strncmp@l 0017  
                                      strncmp@n 0014                                        strncmp@r 0019  
                             __CFG_T3CMX$PORTC0 000000                                   _displayToggle 100B  
                                  ___aodiv@sign 0021                                   _displaySwitch 004F  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 21BA  
                             __CFG_FOSC$INTIO67 000000                           _TMR2_InterruptHandler 007A  
                       ??_EUSART1_RxDataHandler 0001                      __size_of_ADC_GetConversion 0030  
                                  ___aomod@sign 0021                          __end_of_displayControl 1CC8  
