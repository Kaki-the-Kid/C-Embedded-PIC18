

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jan 28 17:14:42 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.05
    80                           ; Generated 20/12/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F26K22 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataCOMRAM
   115  0012E4                     __pidataCOMRAM:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for _numberSystem
   119  0012E4  0A                 	db	10
   120                           
   121                           ;initializer for _updateTempratureCounter
   122  0012E5  64                 	db	100
   123                           
   124                           	psect	idataBANK0
   125  0012EA                     __pidataBANK0:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for _temperature
   129  0012EA  63                 	db	99
   130                           
   131                           	psect	mediumconst
   132  00FEEE                     __pmediumconst:
   133                           	opt callstack 0
   134  00FEEE  00                 	db	0
   135  00FEEF                     _displayNumber:
   136                           	opt callstack 0
   137  00FEEF  C0                 	db	192
   138  00FEF0  F9                 	db	249
   139  00FEF1  A4                 	db	164
   140  00FEF2  B0                 	db	176
   141  00FEF3  99                 	db	153
   142  00FEF4  92                 	db	146
   143  00FEF5  82                 	db	130
   144  00FEF6  F8                 	db	248
   145  00FEF7  80                 	db	128
   146  00FEF8  90                 	db	144
   147  00FEF9  08                 	db	8
   148  00FEFA  03                 	db	3
   149  00FEFB  46                 	db	70
   150  00FEFC  21                 	db	33
   151  00FEFD  06                 	db	6
   152  00FEFE  0E                 	db	14
   153  00FEFF                     __end_of_displayNumber:
   154                           	opt callstack 0
   155  0000                     _VREFCON0bits	set	3906
   156  0000                     _VREFCON0	set	3906
   157  0000                     _ANSELA	set	3896
   158  0000                     _ANSELB	set	3897
   159  0000                     _ANSELC	set	3898
   160  0000                     _RCREG1	set	4014
   161  0000                     _RCSTA1bits	set	4011
   162  0000                     _TXREG1	set	4013
   163  0000                     _TXSTA1bits	set	4012
   164  0000                     _SPBRGH1	set	4016
   165  0000                     _SPBRG1	set	4015
   166  0000                     _TXSTA1	set	4012
   167  0000                     _RCSTA1	set	4011
   168  0000                     _BAUDCON1	set	4024
   169  0000                     _PORTA	set	3968
   170  0000                     _LATCbits	set	3979
   171  0000                     _ADCON0bits	set	4034
   172  0000                     _ADRESH	set	4036
   173  0000                     _ADRESL	set	4035
   174  0000                     _ADCON2	set	4032
   175  0000                     _ADCON1	set	4033
   176  0000                     _ADCON0	set	4034
   177  0000                     _RCONbits	set	4048
   178  0000                     _T2CONbits	set	4026
   179  0000                     _T2CON	set	4026
   180  0000                     _PIE1bits	set	3997
   181  0000                     _PIR1bits	set	3998
   182  0000                     _TMR2	set	4028
   183  0000                     _PR2	set	4027
   184  0000                     _INTCONbits	set	4082
   185  0000                     _INTCON2bits	set	4081
   186  0000                     _WPUB	set	3937
   187  0000                     _TRISC	set	3988
   188  0000                     _TRISB	set	3987
   189  0000                     _TRISA	set	3986
   190  0000                     _LATC	set	3979
   191  0000                     _LATB	set	3978
   192  0000                     _LATA	set	3977
   193  0000                     _OSCTUNE	set	3995
   194  0000                     _OSCCON2	set	4050
   195  0000                     _OSCCON	set	4051
   196  0000                     _PLLRDY	set	32407
   197  00FEFF                     STR_8:
   198  00FEFF  54                 	db	84	;'T'
   199  00FF00  68                 	db	104	;'h'
   200  00FF01  65                 	db	101	;'e'
   201  00FF02  20                 	db	32
   202  00FF03  74                 	db	116	;'t'
   203  00FF04  65                 	db	101	;'e'
   204  00FF05  6D                 	db	109	;'m'
   205  00FF06  70                 	db	112	;'p'
   206  00FF07  65                 	db	101	;'e'
   207  00FF08  72                 	db	114	;'r'
   208  00FF09  61                 	db	97	;'a'
   209  00FF0A  74                 	db	116	;'t'
   210  00FF0B  75                 	db	117	;'u'
   211  00FF0C  72                 	db	114	;'r'
   212  00FF0D  65                 	db	101	;'e'
   213  00FF0E  20                 	db	32
   214  00FF0F  69                 	db	105	;'i'
   215  00FF10  73                 	db	115	;'s'
   216  00FF11  20                 	db	32
   217  00FF12  25                 	db	37
   218  00FF13  64                 	db	100	;'d'
   219  00FF14  20                 	db	32
   220  00FF15  64                 	db	100	;'d'
   221  00FF16  65                 	db	101	;'e'
   222  00FF17  67                 	db	103	;'g'
   223  00FF18  72                 	db	114	;'r'
   224  00FF19  65                 	db	101	;'e'
   225  00FF1A  65                 	db	101	;'e'
   226  00FF1B  73                 	db	115	;'s'
   227  00FF1C  20                 	db	32
   228  00FF1D  43                 	db	67	;'C'
   229  00FF1E  65                 	db	101	;'e'
   230  00FF1F  6C                 	db	108	;'l'
   231  00FF20  73                 	db	115	;'s'
   232  00FF21  69                 	db	105	;'i'
   233  00FF22  75                 	db	117	;'u'
   234  00FF23  73                 	db	115	;'s'
   235  00FF24  00                 	db	0
   236  00FF25                     STR_2:
   237  00FF25  74                 	db	116	;'t'
   238  00FF26  79                 	db	121	;'y'
   239  00FF27  70                 	db	112	;'p'
   240  00FF28  69                 	db	105	;'i'
   241  00FF29  6E                 	db	110	;'n'
   242  00FF2A  67                 	db	103	;'g'
   243  00FF2B  20                 	db	32
   244  00FF2C  74                 	db	116	;'t'
   245  00FF2D  68                 	db	104	;'h'
   246  00FF2E  65                 	db	101	;'e'
   247  00FF2F  20                 	db	32
   248  00FF30  63                 	db	99	;'c'
   249  00FF31  6F                 	db	111	;'o'
   250  00FF32  72                 	db	114	;'r'
   251  00FF33  72                 	db	114	;'r'
   252  00FF34  65                 	db	101	;'e'
   253  00FF35  73                 	db	115	;'s'
   254  00FF36  70                 	db	112	;'p'
   255  00FF37  6F                 	db	111	;'o'
   256  00FF38  6E                 	db	110	;'n'
   257  00FF39  64                 	db	100	;'d'
   258  00FF3A  69                 	db	105	;'i'
   259  00FF3B  6E                 	db	110	;'n'
   260  00FF3C  67                 	db	103	;'g'
   261  00FF3D  20                 	db	32
   262  00FF3E  6E                 	db	110	;'n'
   263  00FF3F  75                 	db	117	;'u'
   264  00FF40  6D                 	db	109	;'m'
   265  00FF41  62                 	db	98	;'b'
   266  00FF42  65                 	db	101	;'e'
   267  00FF43  72                 	db	114	;'r'
   268  00FF44  20                 	db	32
   269  00FF45  0A                 	db	10
   270  00FF46  0D                 	db	13
   271  00FF47  00                 	db	0
   272  00FF48                     STR_4:
   273  00FF48  32                 	db	50	;'2'
   274  00FF49  3A                 	db	58	;':'
   275  00FF4A  20                 	db	32
   276  00FF4B  53                 	db	83	;'S'
   277  00FF4C  65                 	db	101	;'e'
   278  00FF4D  74                 	db	116	;'t'
   279  00FF4E  20                 	db	32
   280  00FF4F  44                 	db	68	;'D'
   281  00FF50  69                 	db	105	;'i'
   282  00FF51  73                 	db	115	;'s'
   283  00FF52  70                 	db	112	;'p'
   284  00FF53  6C                 	db	108	;'l'
   285  00FF54  61                 	db	97	;'a'
   286  00FF55  79                 	db	121	;'y'
   287  00FF56  20                 	db	32
   288  00FF57  74                 	db	116	;'t'
   289  00FF58  6F                 	db	111	;'o'
   290  00FF59  20                 	db	32
   291  00FF5A  48                 	db	72	;'H'
   292  00FF5B  65                 	db	101	;'e'
   293  00FF5C  78                 	db	120	;'x'
   294  00FF5D  61                 	db	97	;'a'
   295  00FF5E  64                 	db	100	;'d'
   296  00FF5F  65                 	db	101	;'e'
   297  00FF60  63                 	db	99	;'c'
   298  00FF61  69                 	db	105	;'i'
   299  00FF62  6D                 	db	109	;'m'
   300  00FF63  61                 	db	97	;'a'
   301  00FF64  6C                 	db	108	;'l'
   302  00FF65  0A                 	db	10
   303  00FF66  0D                 	db	13
   304  00FF67  00                 	db	0
   305  00FF68                     STR_13:
   306  00FF68  49                 	db	73	;'I'
   307  00FF69  6E                 	db	110	;'n'
   308  00FF6A  76                 	db	118	;'v'
   309  00FF6B  61                 	db	97	;'a'
   310  00FF6C  6C                 	db	108	;'l'
   311  00FF6D  69                 	db	105	;'i'
   312  00FF6E  64                 	db	100	;'d'
   313  00FF6F  20                 	db	32
   314  00FF70  69                 	db	105	;'i'
   315  00FF71  6E                 	db	110	;'n'
   316  00FF72  70                 	db	112	;'p'
   317  00FF73  75                 	db	117	;'u'
   318  00FF74  74                 	db	116	;'t'
   319  00FF75  2C                 	db	44
   320  00FF76  20                 	db	32
   321  00FF77  70                 	db	112	;'p'
   322  00FF78  6C                 	db	108	;'l'
   323  00FF79  65                 	db	101	;'e'
   324  00FF7A  61                 	db	97	;'a'
   325  00FF7B  73                 	db	115	;'s'
   326  00FF7C  65                 	db	101	;'e'
   327  00FF7D  20                 	db	32
   328  00FF7E  74                 	db	116	;'t'
   329  00FF7F  72                 	db	114	;'r'
   330  00FF80  79                 	db	121	;'y'
   331  00FF81  20                 	db	32
   332  00FF82  61                 	db	97	;'a'
   333  00FF83  67                 	db	103	;'g'
   334  00FF84  61                 	db	97	;'a'
   335  00FF85  69                 	db	105	;'i'
   336  00FF86  6E                 	db	110	;'n'
   337  00FF87  00                 	db	0
   338  00FF88                     STR_15:
   339  00FF88  2D                 	db	45
   340  00FF89  2D                 	db	45
   341  00FF8A  2D                 	db	45
   342  00FF8B  2D                 	db	45
   343  00FF8C  2D                 	db	45
   344  00FF8D  2D                 	db	45
   345  00FF8E  2D                 	db	45
   346  00FF8F  2D                 	db	45
   347  00FF90  2D                 	db	45
   348  00FF91  2D                 	db	45
   349  00FF92  2D                 	db	45
   350  00FF93  2D                 	db	45
   351  00FF94  2D                 	db	45
   352  00FF95  2D                 	db	45
   353  00FF96  2D                 	db	45
   354  00FF97  2D                 	db	45
   355  00FF98  2D                 	db	45
   356  00FF99  2D                 	db	45
   357  00FF9A  2D                 	db	45
   358  00FF9B  2D                 	db	45
   359  00FF9C  2D                 	db	45
   360  00FF9D  2D                 	db	45
   361  00FF9E  2D                 	db	45
   362  00FF9F  2D                 	db	45
   363  00FFA0  2D                 	db	45
   364  00FFA1  2D                 	db	45
   365  00FFA2  2D                 	db	45
   366  00FFA3  0A                 	db	10
   367  00FFA4  0D                 	db	13
   368  00FFA5  00                 	db	0
   369  00FFA6                     STR_5:
   370  00FFA6  33                 	db	51	;'3'
   371  00FFA7  3A                 	db	58	;':'
   372  00FFA8  20                 	db	32
   373  00FFA9  53                 	db	83	;'S'
   374  00FFAA  65                 	db	101	;'e'
   375  00FFAB  74                 	db	116	;'t'
   376  00FFAC  20                 	db	32
   377  00FFAD  44                 	db	68	;'D'
   378  00FFAE  69                 	db	105	;'i'
   379  00FFAF  73                 	db	115	;'s'
   380  00FFB0  70                 	db	112	;'p'
   381  00FFB1  6C                 	db	108	;'l'
   382  00FFB2  61                 	db	97	;'a'
   383  00FFB3  79                 	db	121	;'y'
   384  00FFB4  20                 	db	32
   385  00FFB5  74                 	db	116	;'t'
   386  00FFB6  6F                 	db	111	;'o'
   387  00FFB7  20                 	db	32
   388  00FFB8  44                 	db	68	;'D'
   389  00FFB9  65                 	db	101	;'e'
   390  00FFBA  63                 	db	99	;'c'
   391  00FFBB  69                 	db	105	;'i'
   392  00FFBC  6D                 	db	109	;'m'
   393  00FFBD  61                 	db	97	;'a'
   394  00FFBE  6C                 	db	108	;'l'
   395  00FFBF  0A                 	db	10
   396  00FFC0  0D                 	db	13
   397  00FFC1  00                 	db	0
   398  00FFC2                     STR_1:
   399  00FFC2  53                 	db	83	;'S'
   400  00FFC3  65                 	db	101	;'e'
   401  00FFC4  6C                 	db	108	;'l'
   402  00FFC5  65                 	db	101	;'e'
   403  00FFC6  63                 	db	99	;'c'
   404  00FFC7  74                 	db	116	;'t'
   405  00FFC8  20                 	db	32
   406  00FFC9  79                 	db	121	;'y'
   407  00FFCA  6F                 	db	111	;'o'
   408  00FFCB  75                 	db	117	;'u'
   409  00FFCC  72                 	db	114	;'r'
   410  00FFCD  20                 	db	32
   411  00FFCE  61                 	db	97	;'a'
   412  00FFCF  63                 	db	99	;'c'
   413  00FFD0  74                 	db	116	;'t'
   414  00FFD1  69                 	db	105	;'i'
   415  00FFD2  6F                 	db	111	;'o'
   416  00FFD3  6E                 	db	110	;'n'
   417  00FFD4  20                 	db	32
   418  00FFD5  62                 	db	98	;'b'
   419  00FFD6  79                 	db	121	;'y'
   420  00FFD7  20                 	db	32
   421  00FFD8  00                 	db	0
   422  00FFD9                     STR_3:
   423  00FFD9  31                 	db	49	;'1'
   424  00FFDA  3A                 	db	58	;':'
   425  00FFDB  20                 	db	32
   426  00FFDC  47                 	db	71	;'G'
   427  00FFDD  65                 	db	101	;'e'
   428  00FFDE  74                 	db	116	;'t'
   429  00FFDF  20                 	db	32
   430  00FFE0  74                 	db	116	;'t'
   431  00FFE1  65                 	db	101	;'e'
   432  00FFE2  6D                 	db	109	;'m'
   433  00FFE3  70                 	db	112	;'p'
   434  00FFE4  65                 	db	101	;'e'
   435  00FFE5  72                 	db	114	;'r'
   436  00FFE6  61                 	db	97	;'a'
   437  00FFE7  74                 	db	116	;'t'
   438  00FFE8  75                 	db	117	;'u'
   439  00FFE9  72                 	db	114	;'r'
   440  00FFEA  65                 	db	101	;'e'
   441  00FFEB  20                 	db	32
   442  00FFEC  0A                 	db	10
   443  00FFED  0D                 	db	13
   444  00FFEE  00                 	db	0
   445  00FFEF                     STR_18:
   446  00FFEF  0D                 	db	13
   447  00FFF0  0A                 	db	10
   448  00FFF1  00                 	db	0
   449  00FFF2                     STR_6:
   450  00FFF2  31                 	db	49	;'1'
   451  00FFF3  0D                 	db	13
   452  00FFF4  00                 	db	0
   453  00FFF5                     STR_9:
   454  00FFF5  32                 	db	50	;'2'
   455  00FFF6  0D                 	db	13
   456  00FFF7  00                 	db	0
   457  00FFF8                     STR_11:
   458  00FFF8  33                 	db	51	;'3'
   459  00FFF9  0D                 	db	13
   460  00FFFA  00                 	db	0
   461  00FFFB                     STR_16:
   462  00FFFB  25                 	db	37
   463  00FFFC  63                 	db	99	;'c'
   464  00FFFD  00                 	db	0
   465  0000                     
   466                           ; #config settings
   467  00FFFE  00                 	db	0	; dummy byte at the end
   468  0000                     
   469                           	psect	cinit
   470  000D32                     __pcinit:
   471                           	opt callstack 0
   472  000D32                     start_initialization:
   473                           	opt callstack 0
   474  000D32                     __initialization:
   475                           	opt callstack 0
   476                           
   477                           ; Initialize objects allocated to BANK0 (1 bytes)
   478                           ; load TBLPTR registers with __pidataBANK0
   479  000D32  0EEA               	movlw	low __pidataBANK0
   480  000D34  6EF6               	movwf	tblptrl,c
   481  000D36  0E12               	movlw	high __pidataBANK0
   482  000D38  6EF7               	movwf	tblptrh,c
   483  000D3A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   484  000D3C  6EF8               	movwf	tblptru,c
   485  000D3E  0009               	tblrd		*+	;fetch initializer
   486  000D40  CFF5 F0FE          	movff	tablat,__pdataBANK0
   487                           
   488                           ; Initialize objects allocated to COMRAM (2 bytes)
   489                           ; load TBLPTR registers with __pidataCOMRAM
   490  000D44  0EE4               	movlw	low __pidataCOMRAM
   491  000D46  6EF6               	movwf	tblptrl,c
   492  000D48  0E12               	movlw	high __pidataCOMRAM
   493  000D4A  6EF7               	movwf	tblptrh,c
   494  000D4C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   495  000D4E  6EF8               	movwf	tblptru,c
   496  000D50  0009               	tblrd		*+	;fetch initializer
   497  000D52  CFF5 F03E          	movff	tablat,__pdataCOMRAM
   498  000D56  0009               	tblrd		*+	;fetch initializer
   499  000D58  CFF5 F03F          	movff	tablat,__pdataCOMRAM+1
   500                           
   501                           ; Clear objects allocated to BANK1 (128 bytes)
   502  000D5C  EE01  F000         	lfsr	0,__pbssBANK1
   503  000D60  0E80               	movlw	128
   504  000D62                     clear_0:
   505  000D62  6AEE               	clrf	postinc0,c
   506  000D64  06E8               	decf	wreg,f,c
   507  000D66  E1FD               	bnz	clear_0
   508                           
   509                           ; Clear objects allocated to BANK0 (44 bytes)
   510  000D68  EE00  F0D2         	lfsr	0,__pbssBANK0
   511  000D6C  0E2C               	movlw	44
   512  000D6E                     clear_1:
   513  000D6E  6AEE               	clrf	postinc0,c
   514  000D70  06E8               	decf	wreg,f,c
   515  000D72  E1FD               	bnz	clear_1
   516                           
   517                           ; Clear objects allocated to COMRAM (26 bytes)
   518  000D74  EE00  F024         	lfsr	0,__pbssCOMRAM
   519  000D78  0E1A               	movlw	26
   520  000D7A                     clear_2:
   521  000D7A  6AEE               	clrf	postinc0,c
   522  000D7C  06E8               	decf	wreg,f,c
   523  000D7E  E1FD               	bnz	clear_2
   524  000D80                     end_of_initialization:
   525                           	opt callstack 0
   526  000D80                     __end_of__initialization:
   527                           	opt callstack 0
   528  000D80  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   529  000D82  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   530  000D84  0100               	movlb	0
   531  000D86  EF13  F003         	goto	_main	;jump to C main() function
   532                           
   533                           	psect	bssCOMRAM
   534  000024                     __pbssCOMRAM:
   535                           	opt callstack 0
   536  000024                     _width:
   537                           	opt callstack 0
   538  000024                     	ds	2
   539  000026                     _flags:
   540                           	opt callstack 0
   541  000026                     	ds	2
   542  000028                     _EUSART1_ErrorHandler:
   543                           	opt callstack 0
   544  000028                     	ds	2
   545  00002A                     _EUSART1_OverrunErrorHandler:
   546                           	opt callstack 0
   547  00002A                     	ds	2
   548  00002C                     _EUSART1_FramingErrorHandler:
   549                           	opt callstack 0
   550  00002C                     	ds	2
   551  00002E                     _EUSART1_RxDefaultInterruptHandler:
   552                           	opt callstack 0
   553  00002E                     	ds	2
   554  000030                     _EUSART1_TxDefaultInterruptHandler:
   555                           	opt callstack 0
   556  000030                     	ds	2
   557  000032                     TMR2_ISR@CountCallBack:
   558                           	opt callstack 0
   559  000032                     	ds	2
   560  000034                     _TMR2_InterruptHandler:
   561                           	opt callstack 0
   562  000034                     	ds	2
   563  000036                     _eusart1RxLastError:
   564                           	opt callstack 0
   565  000036                     	ds	1
   566  000037                     _eusart1RxCount:
   567                           	opt callstack 0
   568  000037                     	ds	1
   569  000038                     _eusart1RxTail:
   570                           	opt callstack 0
   571  000038                     	ds	1
   572  000039                     _eusart1RxHead:
   573                           	opt callstack 0
   574  000039                     	ds	1
   575  00003A                     _eusart1TxBufferRemaining:
   576                           	opt callstack 0
   577  00003A                     	ds	1
   578  00003B                     _eusart1TxTail:
   579                           	opt callstack 0
   580  00003B                     	ds	1
   581  00003C                     _eusart1TxHead:
   582                           	opt callstack 0
   583  00003C                     	ds	1
   584  00003D                     _displayChoice:
   585                           	opt callstack 0
   586  00003D                     	ds	1
   587                           
   588                           	psect	dataCOMRAM
   589  00003E                     __pdataCOMRAM:
   590                           	opt callstack 0
   591  00003E                     _numberSystem:
   592                           	opt callstack 0
   593  00003E                     	ds	1
   594  00003F                     _updateTempratureCounter:
   595                           	opt callstack 0
   596  00003F                     	ds	1
   597                           
   598                           	psect	bssBANK0
   599  0000D2                     __pbssBANK0:
   600                           	opt callstack 0
   601  0000D2                     _eusart1TxBuffer:
   602                           	opt callstack 0
   603  0000D2                     	ds	8
   604  0000DA                     _nout:
   605                           	opt callstack 0
   606  0000DA                     	ds	2
   607  0000DC                     _prec:
   608                           	opt callstack 0
   609  0000DC                     	ds	2
   610  0000DE                     _dbuf:
   611                           	opt callstack 0
   612  0000DE                     	ds	32
   613                           
   614                           	psect	dataBANK0
   615  0000FE                     __pdataBANK0:
   616                           	opt callstack 0
   617  0000FE                     _temperature:
   618                           	opt callstack 0
   619  0000FE                     	ds	1
   620                           
   621                           	psect	bssBANK1
   622  000100                     __pbssBANK1:
   623                           	opt callstack 0
   624  000100                     _eusart1RxStatusBuffer:
   625                           	opt callstack 0
   626  000100                     	ds	64
   627  000140                     _eusart1RxBuffer:
   628                           	opt callstack 0
   629  000140                     	ds	64
   630                           
   631                           	psect	cstackBANK1
   632  000180                     __pcstackBANK1:
   633                           	opt callstack 0
   634  000180                     strcpy@dest:
   635                           	opt callstack 0
   636                           
   637                           ; 2 bytes @ 0x0
   638  000180                     	ds	2
   639  000182                     strcpy@src:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0x2
   643  000182                     	ds	2
   644  000184                     strcpy@s:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x4
   648  000184                     	ds	2
   649  000186                     strcpy@d:
   650                           	opt callstack 0
   651                           
   652                           ; 2 bytes @ 0x6
   653  000186                     	ds	2
   654  000188                     main@actionSelector:
   655                           	opt callstack 0
   656                           
   657                           ; 12 bytes @ 0x8
   658  000188                     	ds	12
   659                           
   660                           	psect	cstackBANK0
   661  000060                     __pcstackBANK0:
   662                           	opt callstack 0
   663  000060                     ??_strcmp:
   664  000060                     ?___aodiv:
   665                           	opt callstack 0
   666  000060                     ?___aomod:
   667                           	opt callstack 0
   668  000060                     fputc@c:
   669                           	opt callstack 0
   670  000060                     ___aodiv@dividend:
   671                           	opt callstack 0
   672  000060                     ___aomod@dividend:
   673                           	opt callstack 0
   674                           
   675                           ; 8 bytes @ 0x0
   676  000060                     	ds	2
   677  000062                     fputc@fp:
   678                           	opt callstack 0
   679                           
   680                           ; 2 bytes @ 0x2
   681  000062                     	ds	2
   682  000064                     ??_fputc:
   683                           
   684                           ; 1 bytes @ 0x4
   685  000064                     	ds	4
   686  000068                     ___aodiv@divisor:
   687                           	opt callstack 0
   688  000068                     ___aomod@divisor:
   689                           	opt callstack 0
   690                           
   691                           ; 8 bytes @ 0x8
   692  000068                     	ds	1
   693  000069                     fputs@s:
   694                           	opt callstack 0
   695                           
   696                           ; 2 bytes @ 0x9
   697  000069                     	ds	2
   698  00006B                     fputs@fp:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0xB
   702  00006B                     	ds	2
   703  00006D                     fputs@c:
   704                           	opt callstack 0
   705                           
   706                           ; 1 bytes @ 0xD
   707  00006D                     	ds	1
   708  00006E                     fputs@i:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0xE
   712  00006E                     	ds	2
   713  000070                     ??_abs:
   714  000070                     ?_pad:
   715                           	opt callstack 0
   716  000070                     ___aodiv@counter:
   717                           	opt callstack 0
   718  000070                     pad@fp:
   719                           	opt callstack 0
   720                           
   721                           ; 2 bytes @ 0x10
   722  000070                     	ds	1
   723  000071                     ___aodiv@sign:
   724                           	opt callstack 0
   725                           
   726                           ; 1 bytes @ 0x11
   727  000071                     	ds	1
   728  000072                     pad@buf:
   729                           	opt callstack 0
   730  000072                     ___aodiv@quotient:
   731                           	opt callstack 0
   732                           
   733                           ; 8 bytes @ 0x12
   734  000072                     	ds	2
   735  000074                     pad@p:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x14
   739  000074                     	ds	2
   740  000076                     ??_pad:
   741                           
   742                           ; 1 bytes @ 0x16
   743  000076                     	ds	1
   744  000077                     pad@i:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x17
   748  000077                     	ds	2
   749  000079                     pad@w:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x19
   753  000079                     	ds	2
   754  00007B                     ?_ctoa:
   755                           	opt callstack 0
   756  00007B                     ?_dtoa:
   757                           	opt callstack 0
   758  00007B                     ctoa@fp:
   759                           	opt callstack 0
   760  00007B                     dtoa@fp:
   761                           	opt callstack 0
   762                           
   763                           ; 2 bytes @ 0x1B
   764  00007B                     	ds	2
   765  00007D                     ctoa@c:
   766                           	opt callstack 0
   767  00007D                     dtoa@d:
   768                           	opt callstack 0
   769                           
   770                           ; 8 bytes @ 0x1D
   771  00007D                     	ds	1
   772  00007E                     ctoa@w:
   773                           	opt callstack 0
   774                           
   775                           ; 2 bytes @ 0x1E
   776  00007E                     	ds	7
   777  000085                     ??_dtoa:
   778                           
   779                           ; 1 bytes @ 0x25
   780  000085                     	ds	8
   781  00008D                     _dtoa$1176:
   782                           	opt callstack 0
   783                           
   784                           ; 2 bytes @ 0x2D
   785  00008D                     	ds	2
   786  00008F                     dtoa@p:
   787                           	opt callstack 0
   788                           
   789                           ; 2 bytes @ 0x2F
   790  00008F                     	ds	2
   791  000091                     dtoa@w:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0x31
   795  000091                     	ds	2
   796  000093                     dtoa@s:
   797                           	opt callstack 0
   798                           
   799                           ; 2 bytes @ 0x33
   800  000093                     	ds	2
   801  000095                     dtoa@n:
   802                           	opt callstack 0
   803                           
   804                           ; 8 bytes @ 0x35
   805  000095                     	ds	8
   806  00009D                     dtoa@i:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x3D
   810  00009D                     	ds	2
   811  00009F                     ?_vfpfcnvrt:
   812                           	opt callstack 0
   813  00009F                     vfpfcnvrt@fp:
   814                           	opt callstack 0
   815                           
   816                           ; 2 bytes @ 0x3F
   817  00009F                     	ds	2
   818  0000A1                     vfpfcnvrt@fmt:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x41
   822  0000A1                     	ds	2
   823  0000A3                     vfpfcnvrt@ap:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0x43
   827  0000A3                     	ds	2
   828  0000A5                     ??_vfpfcnvrt:
   829                           
   830                           ; 1 bytes @ 0x45
   831  0000A5                     	ds	2
   832  0000A7                     vfpfcnvrt@ll:
   833                           	opt callstack 0
   834                           
   835                           ; 8 bytes @ 0x47
   836  0000A7                     	ds	8
   837  0000AF                     vfpfcnvrt@c:
   838                           	opt callstack 0
   839                           
   840                           ; 1 bytes @ 0x4F
   841  0000AF                     	ds	1
   842  0000B0                     ?_vfprintf:
   843                           	opt callstack 0
   844  0000B0                     vfprintf@fp:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x50
   848  0000B0                     	ds	2
   849  0000B2                     vfprintf@fmt:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x52
   853  0000B2                     	ds	2
   854  0000B4                     vfprintf@ap:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0x54
   858  0000B4                     	ds	2
   859  0000B6                     vfprintf@cfmt:
   860                           	opt callstack 0
   861                           
   862                           ; 2 bytes @ 0x56
   863  0000B6                     	ds	2
   864  0000B8                     ?_printf:
   865                           	opt callstack 0
   866  0000B8                     printf@fmt:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x58
   870  0000B8                     	ds	6
   871  0000BE                     printf@ap:
   872                           	opt callstack 0
   873                           
   874                           ; 2 bytes @ 0x5E
   875  0000BE                     	ds	2
   876  0000C0                     ?_ReadLine:
   877                           	opt callstack 0
   878                           
   879                           ; 2 bytes @ 0x60
   880  0000C0                     	ds	2
   881  0000C2                     ??_ReadLine:
   882                           
   883                           ; 1 bytes @ 0x62
   884  0000C2                     	ds	1
   885  0000C3                     ReadLine@line:
   886                           	opt callstack 0
   887                           
   888                           ; 12 bytes @ 0x63
   889  0000C3                     	ds	12
   890  0000CF                     ReadLine@index:
   891                           	opt callstack 0
   892                           
   893                           ; 1 bytes @ 0x6F
   894  0000CF                     	ds	1
   895  0000D0                     ReadLine@tmp:
   896                           	opt callstack 0
   897                           
   898                           ; 2 bytes @ 0x70
   899  0000D0                     	ds	2
   900                           
   901                           	psect	cstackCOMRAM
   902  000001                     __pcstackCOMRAM:
   903                           	opt callstack 0
   904  000001                     ?_ADC_GetConversion:
   905                           	opt callstack 0
   906  000001                     ?___lwdiv:
   907                           	opt callstack 0
   908  000001                     ?___lwmod:
   909                           	opt callstack 0
   910  000001                     ?___lldiv:
   911                           	opt callstack 0
   912  000001                     ?___llmod:
   913                           	opt callstack 0
   914  000001                     SetDisplay@firstDigit:
   915                           	opt callstack 0
   916  000001                     ___lbdiv@divisor:
   917                           	opt callstack 0
   918  000001                     ___lbmod@divisor:
   919                           	opt callstack 0
   920  000001                     ___lwdiv@dividend:
   921                           	opt callstack 0
   922  000001                     ___lwmod@dividend:
   923                           	opt callstack 0
   924  000001                     ___lldiv@dividend:
   925                           	opt callstack 0
   926  000001                     ___llmod@dividend:
   927                           	opt callstack 0
   928                           
   929                           ; 4 bytes @ 0x0
   930  000001                     	ds	1
   931  000002                     SetDisplay@digit:
   932                           	opt callstack 0
   933  000002                     ___lbdiv@dividend:
   934                           	opt callstack 0
   935  000002                     ___lbmod@dividend:
   936                           	opt callstack 0
   937                           
   938                           ; 1 bytes @ 0x1
   939  000002                     	ds	1
   940  000003                     ??_ADC_GetConversion:
   941  000003                     ___lbdiv@counter:
   942                           	opt callstack 0
   943  000003                     ___lbmod@counter:
   944                           	opt callstack 0
   945  000003                     ___lwdiv@divisor:
   946                           	opt callstack 0
   947  000003                     ___lwmod@divisor:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x2
   951  000003                     	ds	1
   952  000004                     ___lbdiv@quotient:
   953                           	opt callstack 0
   954  000004                     ___lbmod@rem:
   955                           	opt callstack 0
   956                           
   957                           ; 1 bytes @ 0x3
   958  000004                     	ds	1
   959  000005                     ADC_GetConversion@channel:
   960                           	opt callstack 0
   961  000005                     UpdateDisplay@firstDigit:
   962                           	opt callstack 0
   963  000005                     ___lwmod@counter:
   964                           	opt callstack 0
   965  000005                     ___lwdiv@quotient:
   966                           	opt callstack 0
   967  000005                     ___lldiv@divisor:
   968                           	opt callstack 0
   969  000005                     ___llmod@divisor:
   970                           	opt callstack 0
   971                           
   972                           ; 4 bytes @ 0x4
   973  000005                     	ds	1
   974  000006                     UpdateDisplay@secondDigit:
   975                           	opt callstack 0
   976                           
   977                           ; 1 bytes @ 0x5
   978  000006                     	ds	1
   979  000007                     ___lwdiv@counter:
   980                           	opt callstack 0
   981                           
   982                           ; 1 bytes @ 0x6
   983  000007                     	ds	2
   984  000009                     ___llmod@counter:
   985                           	opt callstack 0
   986  000009                     ___lldiv@quotient:
   987                           	opt callstack 0
   988                           
   989                           ; 4 bytes @ 0x8
   990  000009                     	ds	4
   991  00000D                     ___lldiv@counter:
   992                           	opt callstack 0
   993                           
   994                           ; 1 bytes @ 0xC
   995  00000D                     	ds	1
   996  00000E                     UpdateTemprature@average:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0xD
  1000  00000E                     	ds	2
  1001  000010                     UpdateTemprature@temp_offset:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0xF
  1005  000010                     	ds	2
  1006  000012                     UpdateTemprature@sum:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x11
  1010  000012                     	ds	4
  1011  000016                     UpdateTemprature@i:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x15
  1015  000016                     	ds	1
  1016  000017                     UpdateTemprature@roundingTest:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x16
  1020  000017                     	ds	1
  1021  000018                     ??_INTERRUPT_InterruptManager:
  1022                           
  1023                           ; 1 bytes @ 0x17
  1024  000018                     	ds	8
  1025  000020                     ?_strcmp:
  1026                           	opt callstack 0
  1027  000020                     ?_strlen:
  1028                           	opt callstack 0
  1029  000020                     EUSART1_Read@readValue:
  1030                           	opt callstack 0
  1031  000020                     EUSART1_Write@txData:
  1032                           	opt callstack 0
  1033  000020                     ___aomod@counter:
  1034                           	opt callstack 0
  1035  000020                     TMR2_SetInterruptHandler@InterruptHandler:
  1036                           	opt callstack 0
  1037  000020                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1038                           	opt callstack 0
  1039  000020                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1040                           	opt callstack 0
  1041  000020                     EUSART1_SetErrorHandler@interruptHandler:
  1042                           	opt callstack 0
  1043  000020                     EUSART1_SetTxInterruptHandler@interruptHandler:
  1044                           	opt callstack 0
  1045  000020                     EUSART1_SetRxInterruptHandler@interruptHandler:
  1046                           	opt callstack 0
  1047  000020                     strcmp@l:
  1048                           	opt callstack 0
  1049  000020                     strlen@s:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x1F
  1053  000020                     	ds	1
  1054  000021                     putch@txData:
  1055                           	opt callstack 0
  1056  000021                     ___aomod@sign:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x20
  1060  000021                     	ds	1
  1061  000022                     ?_abs:
  1062                           	opt callstack 0
  1063  000022                     abs@a:
  1064                           	opt callstack 0
  1065  000022                     strcmp@r:
  1066                           	opt callstack 0
  1067  000022                     strlen@a:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x21
  1071  000022                     	ds	2
  1072  000024                     
  1073                           ; 1 bytes @ 0x23
  1074 ;;
  1075 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1076 ;;
  1077 ;; *************** function _main *****************
  1078 ;; Defined at:
  1079 ;;		line 84 in file "main.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  actionSelect   12    8[BANK1 ] unsigned char [12]
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;Total ram usage:       12 bytes
  1098 ;; Hardware stack levels required when called:   16
  1099 ;; This function calls:
  1100 ;;		_ADC_Initialize
  1101 ;;		_EUSART1_Initialize
  1102 ;;		_EUSART1_is_tx_ready
  1103 ;;		_ReadLine
  1104 ;;		_SYSTEM_Initialize
  1105 ;;		_TMR2_Initialize
  1106 ;;		_TMR2_SetInterruptHandler
  1107 ;;		_printf
  1108 ;;		_strcmp
  1109 ;;		_strcpy
  1110 ;; This function is called by:
  1111 ;;		Startup code after reset
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text0
  1116  000626                     __ptext0:
  1117                           	opt callstack 0
  1118  000626                     _main:
  1119                           	opt callstack 15
  1120                           
  1121                           ;main.c: 87:     SYSTEM_Initialize();
  1122                           
  1123                           ;incstack = 0
  1124  000626  ECE4  F008         	call	_SYSTEM_Initialize	;wreg free
  1125                           
  1126                           ;main.c: 94:     (INTCONbits.GIE = 1);
  1127  00062A  8EF2               	bsf	4082,7,c	;volatile
  1128                           
  1129                           ;main.c: 100:     (INTCONbits.PEIE = 1);
  1130  00062C  8CF2               	bsf	4082,6,c	;volatile
  1131                           
  1132                           ;main.c: 106:     ADC_Initialize();
  1133  00062E  EC1E  F009         	call	_ADC_Initialize	;wreg free
  1134                           
  1135                           ;main.c: 109:     EUSART1_Initialize();
  1136  000632  ECC5  F005         	call	_EUSART1_Initialize	;wreg free
  1137                           
  1138                           ;main.c: 111:     TMR2_Initialize();
  1139  000636  ECF3  F008         	call	_TMR2_Initialize	;wreg free
  1140                           
  1141                           ;main.c: 113:     TMR2_SetInterruptHandler(TimerInterrupt);
  1142  00063A  0E22               	movlw	low _TimerInterrupt
  1143  00063C  6E20               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1144  00063E  0E12               	movlw	high _TimerInterrupt
  1145  000640  6E21               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1146  000642  EC41  F009         	call	_TMR2_SetInterruptHandler	;wreg free
  1147  000646                     l259:
  1148                           
  1149                           ;main.c: 116:     {;main.c: 118:         if(EUSART1_is_tx_ready())
  1150  000646  EC3A  F009         	call	_EUSART1_is_tx_ready	;wreg free
  1151  00064A  0900               	iorlw	0
  1152  00064C  B4D8               	btfsc	status,2,c
  1153  00064E  D7FB               	goto	l259
  1154  000650                     u2900:
  1155                           
  1156                           ;main.c: 121:             {;main.c: 122:                 printf("Select your action by "
      +                          );
  1157  000650  0EC2               	movlw	low STR_1
  1158  000652  0100               	movlb	0	; () banked
  1159  000654  6FB8               	movwf	printf@fmt& (0+255),b
  1160  000656  0EFF               	movlw	high STR_1
  1161  000658  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  1162  00065A  ECB0  F008         	call	_printf	;wreg free
  1163                           
  1164                           ;main.c: 123:                 printf("typing the corresponding number \n\r");
  1165  00065E  0E25               	movlw	low STR_2
  1166  000660  0100               	movlb	0	; () banked
  1167  000662  6FB8               	movwf	printf@fmt& (0+255),b
  1168  000664  0EFF               	movlw	high STR_2
  1169  000666  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  1170  000668  ECB0  F008         	call	_printf	;wreg free
  1171                           
  1172                           ;main.c: 125:                 printf("1: Get temperature \n\r");
  1173  00066C  0ED9               	movlw	low STR_3
  1174  00066E  0100               	movlb	0	; () banked
  1175  000670  6FB8               	movwf	printf@fmt& (0+255),b
  1176  000672  0EFF               	movlw	high STR_3
  1177  000674  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  1178  000676  ECB0  F008         	call	_printf	;wreg free
  1179                           
  1180                           ;main.c: 126:                 printf("2: Set Display to Hexadecimal\n\r");
  1181  00067A  0E48               	movlw	low STR_4
  1182  00067C  0100               	movlb	0	; () banked
  1183  00067E  6FB8               	movwf	printf@fmt& (0+255),b
  1184  000680  0EFF               	movlw	high STR_4
  1185  000682  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  1186  000684  ECB0  F008         	call	_printf	;wreg free
  1187                           
  1188                           ;main.c: 127:                 printf("3: Set Display to Decimal\n\r");
  1189  000688  0EA6               	movlw	low STR_5
  1190  00068A  0100               	movlb	0	; () banked
  1191  00068C  6FB8               	movwf	printf@fmt& (0+255),b
  1192  00068E  0EFF               	movlw	high STR_5
  1193  000690  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  1194  000692  ECB0  F008         	call	_printf	;wreg free
  1195                           
  1196                           ;main.c: 129:                 char actionSelector[12];;main.c: 130:                 strc
      +                          py(actionSelector, ReadLine());
  1197  000696  0E88               	movlw	low main@actionSelector
  1198  000698  0101               	movlb	1	; () banked
  1199  00069A  6F80               	movwf	strcpy@dest& (0+255),b
  1200  00069C  0E01               	movlw	high main@actionSelector
  1201  00069E  6F81               	movwf	(strcpy@dest+1)& (0+255),b
  1202  0006A0  EC3E  F005         	call	_ReadLine	;wreg free
  1203  0006A4  C0C0  F182         	movff	?_ReadLine,strcpy@src
  1204  0006A8  C0C1  F183         	movff	?_ReadLine+1,strcpy@src+1
  1205  0006AC  ECDD  F007         	call	_strcpy	;wreg free
  1206                           
  1207                           ;main.c: 132:                 if(!strcmp(actionSelector, ("1\r")))
  1208  0006B0  0E88               	movlw	low main@actionSelector
  1209  0006B2  6E20               	movwf	strcmp@l,c
  1210  0006B4  0E01               	movlw	high main@actionSelector
  1211  0006B6  6E21               	movwf	strcmp@l+1,c
  1212  0006B8  0EF2               	movlw	low STR_6
  1213  0006BA  6E22               	movwf	strcmp@r,c
  1214  0006BC  0EFF               	movlw	high STR_6
  1215  0006BE  6E23               	movwf	strcmp@r+1,c
  1216  0006C0  EC69  F006         	call	_strcmp	;wreg free
  1217  0006C4  5020               	movf	?_strcmp,w,c
  1218  0006C6  1021               	iorwf	?_strcmp+1,w,c
  1219  0006C8  A4D8               	btfss	status,2,c
  1220  0006CA  D00B               	goto	l3271
  1221                           
  1222                           ;main.c: 133:                 {;main.c: 134:                     printf("The temperature
      +                           is %d degrees Celsius", temperature);
  1223  0006CC  0EFF               	movlw	low STR_8
  1224  0006CE  0100               	movlb	0	; () banked
  1225  0006D0  6FB8               	movwf	printf@fmt& (0+255),b
  1226  0006D2  0EFE               	movlw	high STR_8
  1227  0006D4  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  1228  0006D6  C0FE  F0BA         	movff	_temperature,?_printf+2
  1229  0006DA  6BBB               	clrf	(?_printf+3)& (0+255),b
  1230  0006DC  ECB0  F008         	call	_printf	;wreg free
  1231                           
  1232                           ;main.c: 135:                 }
  1233  0006E0  D028               	goto	l263
  1234  0006E2                     l3271:
  1235  0006E2  0E88               	movlw	low main@actionSelector
  1236  0006E4  6E20               	movwf	strcmp@l,c
  1237  0006E6  0E01               	movlw	high main@actionSelector
  1238  0006E8  6E21               	movwf	strcmp@l+1,c
  1239  0006EA  0EF5               	movlw	low STR_9
  1240  0006EC  6E22               	movwf	strcmp@r,c
  1241  0006EE  0EFF               	movlw	high STR_9
  1242  0006F0  6E23               	movwf	strcmp@r+1,c
  1243  0006F2  EC69  F006         	call	_strcmp	;wreg free
  1244  0006F6  5020               	movf	?_strcmp,w,c
  1245  0006F8  1021               	iorwf	?_strcmp+1,w,c
  1246  0006FA  A4D8               	btfss	status,2,c
  1247  0006FC  D002               	goto	l3275
  1248                           
  1249                           ;main.c: 137:                 {;main.c: 138:                     numberSystem= 16;
  1250  0006FE  0E10               	movlw	16
  1251  000700  D00F               	goto	L1
  1252  000702                     l3275:
  1253  000702  0E88               	movlw	low main@actionSelector
  1254  000704  6E20               	movwf	strcmp@l,c
  1255  000706  0E01               	movlw	high main@actionSelector
  1256  000708  6E21               	movwf	strcmp@l+1,c
  1257  00070A  0EF8               	movlw	low STR_11
  1258  00070C  6E22               	movwf	strcmp@r,c
  1259  00070E  0EFF               	movlw	high STR_11
  1260  000710  6E23               	movwf	strcmp@r+1,c
  1261  000712  EC69  F006         	call	_strcmp	;wreg free
  1262  000716  5020               	movf	?_strcmp,w,c
  1263  000718  1021               	iorwf	?_strcmp+1,w,c
  1264  00071A  A4D8               	btfss	status,2,c
  1265  00071C  D003               	goto	l3279
  1266                           
  1267                           ;main.c: 141:                 {;main.c: 142:                     numberSystem= 10;
  1268  00071E  0E0A               	movlw	10
  1269  000720                     L1:
  1270  000720  6E3E               	movwf	_numberSystem,c
  1271                           
  1272                           ;main.c: 143:                 }
  1273  000722  D007               	goto	l263
  1274  000724                     l3279:
  1275                           
  1276                           ;main.c: 145:                 {;main.c: 146:                     printf("Invalid input, 
      +                          please try again");
  1277  000724  0E68               	movlw	low STR_13
  1278  000726  0100               	movlb	0	; () banked
  1279  000728  6FB8               	movwf	printf@fmt& (0+255),b
  1280  00072A  0EFF               	movlw	high STR_13
  1281  00072C  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  1282  00072E  ECB0  F008         	call	_printf	;wreg free
  1283  000732                     l263:
  1284                           
  1285                           ;main.c: 148:                 printf("\n\r");
  1286  000732  0EEC               	movlw	low (STR_3+19)
  1287  000734  0100               	movlb	0	; () banked
  1288  000736  6FB8               	movwf	printf@fmt& (0+255),b
  1289  000738  0EFF               	movlw	high (STR_3+19)
  1290  00073A  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  1291  00073C  ECB0  F008         	call	_printf	;wreg free
  1292                           
  1293                           ;main.c: 149:                 printf("---------------------------\n\r");
  1294  000740  0E88               	movlw	low STR_15
  1295  000742  0100               	movlb	0	; () banked
  1296  000744  6FB8               	movwf	printf@fmt& (0+255),b
  1297  000746  0EFF               	movlw	high STR_15
  1298  000748  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  1299  00074A  ECB0  F008         	call	_printf	;wreg free
  1300  00074E  D780               	goto	u2900
  1301  000750                     __end_of_main:
  1302                           	opt callstack 0
  1303                           
  1304 ;; *************** function _strcpy *****************
  1305 ;; Defined at:
  1306 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  dest            2    0[BANK1 ] PTR unsigned char 
  1309 ;;		 -> main@actionSelector(12), 
  1310 ;;  src             2    2[BANK1 ] PTR const unsigned char 
  1311 ;;		 -> ReadLine@line(12), 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  d               2    6[BANK1 ] PTR unsigned char 
  1314 ;;		 -> main@actionSelector(12), 
  1315 ;;  s               2    4[BANK1 ] PTR const unsigned char 
  1316 ;;		 -> ReadLine@line(12), 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  2    0[BANK1 ] PTR unsigned char 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1326 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;Total ram usage:        8 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    6
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_main
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text1
  1341  000FBA                     __ptext1:
  1342                           	opt callstack 0
  1343  000FBA                     _strcpy:
  1344                           	opt callstack 24
  1345                           
  1346                           ;incstack = 0
  1347  000FBA  C182  F184         	movff	strcpy@src,strcpy@s
  1348  000FBE  C183  F185         	movff	strcpy@src+1,strcpy@s+1
  1349  000FC2  C180  F186         	movff	strcpy@dest,strcpy@d
  1350  000FC6  C181  F187         	movff	strcpy@dest+1,strcpy@d+1
  1351  000FCA                     l3237:
  1352  000FCA  C184  FFD9         	movff	strcpy@s,fsr2l
  1353  000FCE  C185  FFDA         	movff	strcpy@s+1,fsr2h
  1354  000FD2  0101               	movlb	1	; () banked
  1355  000FD4  4B84               	infsnz	strcpy@s& (0+255),f,b
  1356  000FD6  2B85               	incf	(strcpy@s+1)& (0+255),f,b
  1357  000FD8  C186  FFE1         	movff	strcpy@d,fsr1l
  1358  000FDC  C187  FFE2         	movff	strcpy@d+1,fsr1h
  1359  000FE0  4B86               	infsnz	strcpy@d& (0+255),f,b
  1360  000FE2  2B87               	incf	(strcpy@d+1)& (0+255),f,b
  1361  000FE4  CFDF FFE7          	movff	indf2,indf1
  1362  000FE8  50E7               	movf	indf1,w,c
  1363  000FEA  B4D8               	btfsc	status,2,c
  1364  000FEC  0012               	return	
  1365  000FEE  D7ED               	goto	l3237
  1366  000FF0                     __end_of_strcpy:
  1367                           	opt callstack 0
  1368                           
  1369 ;; *************** function _strcmp *****************
  1370 ;; Defined at:
  1371 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcmp.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  l               2   31[COMRAM] PTR const unsigned char 
  1374 ;;		 -> main@actionSelector(12), 
  1375 ;;  r               2   33[COMRAM] PTR const unsigned char 
  1376 ;;		 -> STR_12(3), STR_10(3), STR_7(3), 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2   31[COMRAM] int 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;Total ram usage:        5 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    6
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text2
  1403  000CD2                     __ptext2:
  1404                           	opt callstack 0
  1405  000CD2                     _strcmp:
  1406                           	opt callstack 24
  1407                           
  1408                           ; BSR set to: 1
  1409                           ;incstack = 0
  1410  000CD2  D004               	goto	l3243
  1411  000CD4                     l3241:
  1412                           
  1413                           ; BSR set to: 0
  1414  000CD4  4A20               	infsnz	strcmp@l,f,c
  1415  000CD6  2A21               	incf	strcmp@l+1,f,c
  1416  000CD8  4A22               	infsnz	strcmp@r,f,c
  1417  000CDA  2A23               	incf	strcmp@r+1,f,c
  1418  000CDC                     l3243:
  1419  000CDC  C020  FFD9         	movff	strcmp@l,fsr2l
  1420  000CE0  C021  FFDA         	movff	strcmp@l+1,fsr2h
  1421  000CE4  50DF               	movf	indf2,w,c
  1422  000CE6  0100               	movlb	0	; () banked
  1423  000CE8  6F60               	movwf	??_strcmp& (0+255),b
  1424  000CEA  C022  FFF6         	movff	strcmp@r,tblptrl
  1425  000CEE  C023  FFF7         	movff	strcmp@r+1,tblptrh
  1426  000CF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1427  000CF2  6AF8               	clrf	tblptru,c
  1428  000CF4                     	endif
  1429  000CF4                     	if	0	;tblptru may be non-zero
  1430  000CF4                     	endif
  1431  000CF4  0008               	tblrd		*
  1432  000CF6  50F5               	movf	tablat,w,c
  1433  000CF8  1960               	xorwf	??_strcmp& (0+255),w,b
  1434  000CFA  A4D8               	btfss	status,2,c
  1435  000CFC  D007               	goto	u2890
  1436                           
  1437                           ; BSR set to: 0
  1438  000CFE  C020  FFD9         	movff	strcmp@l,fsr2l
  1439  000D02  C021  FFDA         	movff	strcmp@l+1,fsr2h
  1440  000D06  50DF               	movf	indf2,w,c
  1441  000D08  A4D8               	btfss	status,2,c
  1442  000D0A  D7E4               	goto	l3241
  1443  000D0C                     u2890:
  1444                           
  1445                           ; BSR set to: 0
  1446  000D0C  C020  FFD9         	movff	strcmp@l,fsr2l
  1447  000D10  C021  FFDA         	movff	strcmp@l+1,fsr2h
  1448  000D14  50DF               	movf	indf2,w,c
  1449  000D16  6F60               	movwf	??_strcmp& (0+255),b
  1450  000D18  C022  FFF6         	movff	strcmp@r,tblptrl
  1451  000D1C  C023  FFF7         	movff	strcmp@r+1,tblptrh
  1452  000D20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1453  000D20  6AF8               	clrf	tblptru,c
  1454  000D22                     	endif
  1455  000D22                     	if	0	;tblptru may be non-zero
  1456  000D22                     	endif
  1457  000D22  0008               	tblrd		*
  1458  000D24  50F5               	movf	tablat,w,c
  1459  000D26  5D60               	subwf	??_strcmp& (0+255),w,b
  1460  000D28  6E20               	movwf	?_strcmp,c
  1461  000D2A  6A21               	clrf	?_strcmp+1,c
  1462  000D2C  A0D8               	btfss	status,0,c
  1463  000D2E  0621               	decf	?_strcmp+1,f,c
  1464                           
  1465                           ; BSR set to: 0
  1466  000D30  0012               	return		;funcret
  1467  000D32                     __end_of_strcmp:
  1468                           	opt callstack 0
  1469                           
  1470 ;; *************** function _SYSTEM_Initialize *****************
  1471 ;; Defined at:
  1472 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    8
  1493 ;; This function calls:
  1494 ;;		_ADC_Initialize
  1495 ;;		_EUSART1_Initialize
  1496 ;;		_FVR_Initialize
  1497 ;;		_INTERRUPT_Initialize
  1498 ;;		_OSCILLATOR_Initialize
  1499 ;;		_PIN_MANAGER_Initialize
  1500 ;;		_TMR2_Initialize
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text3
  1507  0011C8                     __ptext3:
  1508                           	opt callstack 0
  1509  0011C8                     _SYSTEM_Initialize:
  1510                           	opt callstack 22
  1511                           
  1512                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;incstack = 0
  1516  0011C8  EC6E  F009         	call	_INTERRUPT_Initialize	;wreg free
  1517                           
  1518                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1519  0011CC  EC45  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  1520                           
  1521                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1522  0011D0  EC2A  F009         	call	_OSCILLATOR_Initialize	;wreg free
  1523                           
  1524                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  1525  0011D4  EC64  F009         	call	_FVR_Initialize	;wreg free
  1526                           
  1527                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  1528  0011D8  ECF3  F008         	call	_TMR2_Initialize	;wreg free
  1529                           
  1530                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  1531  0011DC  EC1E  F009         	call	_ADC_Initialize	;wreg free
  1532                           
  1533                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  1534  0011E0  ECC5  F005         	call	_EUSART1_Initialize	;wreg free
  1535  0011E4  0012               	return		;funcret
  1536  0011E6                     __end_of_SYSTEM_Initialize:
  1537                           	opt callstack 0
  1538                           
  1539 ;; *************** function _TMR2_Initialize *****************
  1540 ;; Defined at:
  1541 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;Total ram usage:        0 bytes
  1560 ;; Hardware stack levels used:    1
  1561 ;; Hardware stack levels required when called:    7
  1562 ;; This function calls:
  1563 ;;		_TMR2_SetInterruptHandler
  1564 ;; This function is called by:
  1565 ;;		_SYSTEM_Initialize
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text4
  1571  0011E6                     __ptext4:
  1572                           	opt callstack 0
  1573  0011E6                     _TMR2_Initialize:
  1574                           	opt callstack 23
  1575                           
  1576                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x3E;
  1577                           
  1578                           ;incstack = 0
  1579  0011E6  0E3E               	movlw	62
  1580  0011E8  6EBB               	movwf	4027,c	;volatile
  1581                           
  1582                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  1583  0011EA  0E00               	movlw	0
  1584  0011EC  6EBC               	movwf	4028,c	;volatile
  1585                           
  1586                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  1587  0011EE  929E               	bcf	3998,1,c	;volatile
  1588                           
  1589                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  1590  0011F0  829D               	bsf	3997,1,c	;volatile
  1591                           
  1592                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  1593  0011F2  0EE6               	movlw	low _TMR2_DefaultInterruptHandler
  1594  0011F4  6E20               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  1595  0011F6  0E12               	movlw	high _TMR2_DefaultInterruptHandler
  1596  0011F8  6E21               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  1597  0011FA  EC41  F009         	call	_TMR2_SetInterruptHandler	;wreg free
  1598                           
  1599                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7E;
  1600  0011FE  0E7E               	movlw	126
  1601  001200  6EBA               	movwf	4026,c	;volatile
  1602  001202  0012               	return		;funcret
  1603  001204                     __end_of_TMR2_Initialize:
  1604                           	opt callstack 0
  1605                           
  1606 ;; *************** function _TMR2_SetInterruptHandler *****************
  1607 ;; Defined at:
  1608 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  1611 ;;		 -> TimerInterrupt(1), TMR2_DefaultInterruptHandler(1), 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;Total ram usage:        2 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    6
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_TMR2_Initialize
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text5
  1639  001282                     __ptext5:
  1640                           	opt callstack 0
  1641  001282                     _TMR2_SetInterruptHandler:
  1642                           	opt callstack 24
  1643                           
  1644                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  1645                           
  1646                           ;incstack = 0
  1647  001282  C020  F034         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  1648  001286  C021  F035         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  1649  00128A  0012               	return		;funcret
  1650  00128C                     __end_of_TMR2_SetInterruptHandler:
  1651                           	opt callstack 0
  1652                           
  1653 ;; *************** function _PIN_MANAGER_Initialize *****************
  1654 ;; Defined at:
  1655 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    6
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_SYSTEM_Initialize
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text6
  1684  00108A                     __ptext6:
  1685                           	opt callstack 0
  1686  00108A                     _PIN_MANAGER_Initialize:
  1687                           	opt callstack 23
  1688                           
  1689                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1690                           
  1691                           ;incstack = 0
  1692  00108A  0E00               	movlw	0
  1693  00108C  6E89               	movwf	3977,c	;volatile
  1694                           
  1695                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1696  00108E  0E00               	movlw	0
  1697  001090  6E8A               	movwf	3978,c	;volatile
  1698                           
  1699                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1700  001092  0E00               	movlw	0
  1701  001094  6E8B               	movwf	3979,c	;volatile
  1702                           
  1703                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x00;
  1704  001096  0E00               	movlw	0
  1705  001098  6E92               	movwf	3986,c	;volatile
  1706                           
  1707                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1708  00109A  6893               	setf	3987,c	;volatile
  1709                           
  1710                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBC;
  1711  00109C  0EBC               	movlw	188
  1712  00109E  6E94               	movwf	3988,c	;volatile
  1713                           
  1714                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  1715  0010A0  0E3C               	movlw	60
  1716  0010A2  010F               	movlb	15	; () banked
  1717  0010A4  6F3A               	movwf	58,b	;volatile
  1718                           
  1719                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  1720  0010A6  0E3F               	movlw	63
  1721  0010A8  6F39               	movwf	57,b	;volatile
  1722                           
  1723                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  1724  0010AA  0E00               	movlw	0
  1725  0010AC  6F38               	movwf	56,b	;volatile
  1726                           
  1727                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1728  0010AE  0E00               	movlw	0
  1729  0010B0  6E61               	movwf	3937,c	;volatile
  1730                           
  1731                           ; BSR set to: 15
  1732                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1733  0010B2  8EF1               	bsf	4081,7,c	;volatile
  1734                           
  1735                           ; BSR set to: 15
  1736  0010B4  0012               	return		;funcret
  1737  0010B6                     __end_of_PIN_MANAGER_Initialize:
  1738                           	opt callstack 0
  1739                           
  1740 ;; *************** function _OSCILLATOR_Initialize *****************
  1741 ;; Defined at:
  1742 ;;		line 62 in file "mcc_generated_files/mcc.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    6
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_SYSTEM_Initialize
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text7
  1771  001254                     __ptext7:
  1772                           	opt callstack 0
  1773  001254                     _OSCILLATOR_Initialize:
  1774                           	opt callstack 23
  1775                           
  1776                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  1777                           
  1778                           ; BSR set to: 15
  1779                           ;incstack = 0
  1780  001254  0E70               	movlw	112
  1781  001256  6ED3               	movwf	4051,c	;volatile
  1782                           
  1783                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  1784  001258  0E04               	movlw	4
  1785  00125A  6ED2               	movwf	4050,c	;volatile
  1786                           
  1787                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x40;
  1788  00125C  0E40               	movlw	64
  1789  00125E  6E9B               	movwf	3995,c	;volatile
  1790  001260                     l28:
  1791                           
  1792                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  1793  001260  BED2               	btfsc	4050,7,c	;volatile
  1794  001262  0012               	return	
  1795  001264  D7FD               	goto	l28
  1796  001266                     __end_of_OSCILLATOR_Initialize:
  1797                           	opt callstack 0
  1798                           
  1799 ;; *************** function _INTERRUPT_Initialize *****************
  1800 ;; Defined at:
  1801 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		None
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    6
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_SYSTEM_Initialize
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text8
  1830  0012DC                     __ptext8:
  1831                           	opt callstack 0
  1832  0012DC                     _INTERRUPT_Initialize:
  1833                           	opt callstack 23
  1834                           
  1835                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1836                           
  1837                           ;incstack = 0
  1838  0012DC  9ED0               	bcf	4048,7,c	;volatile
  1839  0012DE  0012               	return		;funcret
  1840  0012E0                     __end_of_INTERRUPT_Initialize:
  1841                           	opt callstack 0
  1842                           
  1843 ;; *************** function _FVR_Initialize *****************
  1844 ;; Defined at:
  1845 ;;		line 58 in file "mcc_generated_files/fvr.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    6
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_SYSTEM_Initialize
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text9
  1874  0012C8                     __ptext9:
  1875                           	opt callstack 0
  1876  0012C8                     _FVR_Initialize:
  1877                           	opt callstack 23
  1878                           
  1879                           ;mcc_generated_files/fvr.c: 61:     VREFCON0 = 0x90;
  1880                           
  1881                           ;incstack = 0
  1882  0012C8  0E90               	movlw	144
  1883  0012CA  010F               	movlb	15	; () banked
  1884  0012CC  6F42               	movwf	66,b	;volatile
  1885                           
  1886                           ; BSR set to: 15
  1887  0012CE  0012               	return		;funcret
  1888  0012D0                     __end_of_FVR_Initialize:
  1889                           	opt callstack 0
  1890                           
  1891 ;; *************** function _EUSART1_Initialize *****************
  1892 ;; Defined at:
  1893 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    7
  1914 ;; This function calls:
  1915 ;;		_EUSART1_SetErrorHandler
  1916 ;;		_EUSART1_SetFramingErrorHandler
  1917 ;;		_EUSART1_SetOverrunErrorHandler
  1918 ;;		_EUSART1_SetRxInterruptHandler
  1919 ;;		_EUSART1_SetTxInterruptHandler
  1920 ;; This function is called by:
  1921 ;;		_SYSTEM_Initialize
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text10
  1927  000B8A                     __ptext10:
  1928                           	opt callstack 0
  1929  000B8A                     _EUSART1_Initialize:
  1930                           	opt callstack 22
  1931                           
  1932                           ;mcc_generated_files/eusart1.c: 91:     PIE1bits.RC1IE = 0;
  1933                           
  1934                           ; BSR set to: 15
  1935                           ;incstack = 0
  1936  000B8A  9A9D               	bcf	3997,5,c	;volatile
  1937                           
  1938                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  1939  000B8C  0EEA               	movlw	low _EUSART1_Receive_ISR
  1940  000B8E  6E20               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  1941  000B90  0E09               	movlw	high _EUSART1_Receive_ISR
  1942  000B92  6E21               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  1943  000B94  EC4B  F009         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1944                           
  1945                           ;mcc_generated_files/eusart1.c: 93:     PIE1bits.TX1IE = 0;
  1946  000B98  989D               	bcf	3997,4,c	;volatile
  1947                           
  1948                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  1949  000B9A  0E36               	movlw	low _EUSART1_Transmit_ISR
  1950  000B9C  6E20               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler,c
  1951  000B9E  0E11               	movlw	high _EUSART1_Transmit_ISR
  1952  000BA0  6E21               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1,c
  1953  000BA2  EC46  F009         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1954                           
  1955                           ;mcc_generated_files/eusart1.c: 98:     BAUDCON1 = 0x08;
  1956  000BA6  0E08               	movlw	8
  1957  000BA8  6EB8               	movwf	4024,c	;volatile
  1958                           
  1959                           ;mcc_generated_files/eusart1.c: 101:     RCSTA1 = 0x90;
  1960  000BAA  0E90               	movlw	144
  1961  000BAC  6EAB               	movwf	4011,c	;volatile
  1962                           
  1963                           ;mcc_generated_files/eusart1.c: 104:     TXSTA1 = 0x24;
  1964  000BAE  0E24               	movlw	36
  1965  000BB0  6EAC               	movwf	4012,c	;volatile
  1966                           
  1967                           ;mcc_generated_files/eusart1.c: 107:     SPBRG1 = 0x8A;
  1968  000BB2  0E8A               	movlw	138
  1969  000BB4  6EAF               	movwf	4015,c	;volatile
  1970                           
  1971                           ;mcc_generated_files/eusart1.c: 110:     SPBRGH1 = 0x00;
  1972  000BB6  0E00               	movlw	0
  1973  000BB8  6EB0               	movwf	4016,c	;volatile
  1974                           
  1975                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  1976  000BBA  0EE8               	movlw	low _EUSART1_DefaultFramingErrorHandler
  1977  000BBC  6E20               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  1978  000BBE  0E12               	movlw	high _EUSART1_DefaultFramingErrorHandler
  1979  000BC0  6E21               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  1980  000BC2  EC55  F009         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1981                           
  1982                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  1983  000BC6  0ED0               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  1984  000BC8  6E20               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  1985  000BCA  0E12               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  1986  000BCC  6E21               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  1987  000BCE  EC50  F009         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1988                           
  1989                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  1990  000BD2  0ED6               	movlw	low _EUSART1_DefaultErrorHandler
  1991  000BD4  6E20               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  1992  000BD6  0E12               	movlw	high _EUSART1_DefaultErrorHandler
  1993  000BD8  6E21               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  1994  000BDA  EC5A  F009         	call	_EUSART1_SetErrorHandler	;wreg free
  1995                           
  1996                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  1997  000BDE  0E00               	movlw	0
  1998  000BE0  6E36               	movwf	_eusart1RxLastError,c	;volatile
  1999                           
  2000                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  2001  000BE2  0E00               	movlw	0
  2002  000BE4  6E3C               	movwf	_eusart1TxHead,c	;volatile
  2003                           
  2004                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  2005  000BE6  0E00               	movlw	0
  2006  000BE8  6E3B               	movwf	_eusart1TxTail,c	;volatile
  2007                           
  2008                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  2009  000BEA  0E08               	movlw	8
  2010  000BEC  6E3A               	movwf	_eusart1TxBufferRemaining,c	;volatile
  2011                           
  2012                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  2013  000BEE  0E00               	movlw	0
  2014  000BF0  6E39               	movwf	_eusart1RxHead,c	;volatile
  2015                           
  2016                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  2017  000BF2  0E00               	movlw	0
  2018  000BF4  6E38               	movwf	_eusart1RxTail,c	;volatile
  2019                           
  2020                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  2021  000BF6  0E00               	movlw	0
  2022  000BF8  6E37               	movwf	_eusart1RxCount,c	;volatile
  2023                           
  2024                           ;mcc_generated_files/eusart1.c: 129:     PIE1bits.RC1IE = 1;
  2025  000BFA  8A9D               	bsf	3997,5,c	;volatile
  2026  000BFC  0012               	return		;funcret
  2027  000BFE                     __end_of_EUSART1_Initialize:
  2028                           	opt callstack 0
  2029                           
  2030 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  2031 ;; Defined at:
  2032 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  2035 ;;		 -> EUSART1_Transmit_ISR(1), 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;Total ram usage:        2 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    6
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_EUSART1_Initialize
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text11
  2062  00128C                     __ptext11:
  2063                           	opt callstack 0
  2064  00128C                     _EUSART1_SetTxInterruptHandler:
  2065                           	opt callstack 22
  2066                           
  2067                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2068                           
  2069                           ;incstack = 0
  2070  00128C  C020  F030         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  2071  001290  C021  F031         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  2072  001294  0012               	return		;funcret
  2073  001296                     __end_of_EUSART1_SetTxInterruptHandler:
  2074                           	opt callstack 0
  2075                           
  2076 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2077 ;; Defined at:
  2078 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  2081 ;;		 -> EUSART1_Receive_ISR(1), 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;Total ram usage:        2 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    6
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_EUSART1_Initialize
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text12
  2108  001296                     __ptext12:
  2109                           	opt callstack 0
  2110  001296                     _EUSART1_SetRxInterruptHandler:
  2111                           	opt callstack 22
  2112                           
  2113                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2114                           
  2115                           ;incstack = 0
  2116  001296  C020  F02E         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2117  00129A  C021  F02F         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2118  00129E  0012               	return		;funcret
  2119  0012A0                     __end_of_EUSART1_SetRxInterruptHandler:
  2120                           	opt callstack 0
  2121                           
  2122 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2123 ;; Defined at:
  2124 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  2127 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;Total ram usage:        2 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    6
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_EUSART1_Initialize
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text13
  2154  0012A0                     __ptext13:
  2155                           	opt callstack 0
  2156  0012A0                     _EUSART1_SetOverrunErrorHandler:
  2157                           	opt callstack 22
  2158                           
  2159                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  2160                           
  2161                           ;incstack = 0
  2162  0012A0  C020  F02A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2163  0012A4  C021  F02B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2164  0012A8  0012               	return		;funcret
  2165  0012AA                     __end_of_EUSART1_SetOverrunErrorHandler:
  2166                           	opt callstack 0
  2167                           
  2168 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2169 ;; Defined at:
  2170 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  2173 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;Total ram usage:        2 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    6
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_EUSART1_Initialize
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text14
  2200  0012AA                     __ptext14:
  2201                           	opt callstack 0
  2202  0012AA                     _EUSART1_SetFramingErrorHandler:
  2203                           	opt callstack 22
  2204                           
  2205                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  2206                           
  2207                           ;incstack = 0
  2208  0012AA  C020  F02C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2209  0012AE  C021  F02D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2210  0012B2  0012               	return		;funcret
  2211  0012B4                     __end_of_EUSART1_SetFramingErrorHandler:
  2212                           	opt callstack 0
  2213                           
  2214 ;; *************** function _EUSART1_SetErrorHandler *****************
  2215 ;; Defined at:
  2216 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  2219 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    6
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_EUSART1_Initialize
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text15
  2246  0012B4                     __ptext15:
  2247                           	opt callstack 0
  2248  0012B4                     _EUSART1_SetErrorHandler:
  2249                           	opt callstack 22
  2250                           
  2251                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  2252                           
  2253                           ;incstack = 0
  2254  0012B4  C020  F028         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2255  0012B8  C021  F029         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2256  0012BC  0012               	return		;funcret
  2257  0012BE                     __end_of_EUSART1_SetErrorHandler:
  2258                           	opt callstack 0
  2259                           
  2260 ;; *************** function _ADC_Initialize *****************
  2261 ;; Defined at:
  2262 ;;		line 60 in file "mcc_generated_files/adc.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    6
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_SYSTEM_Initialize
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text16
  2292  00123C                     __ptext16:
  2293                           	opt callstack 0
  2294  00123C                     _ADC_Initialize:
  2295                           	opt callstack 23
  2296                           
  2297                           ;mcc_generated_files/adc.c: 65:     ADCON0 = 0x01;
  2298                           
  2299                           ;incstack = 0
  2300  00123C  0E01               	movlw	1
  2301  00123E  6EC2               	movwf	4034,c	;volatile
  2302                           
  2303                           ;mcc_generated_files/adc.c: 68:     ADCON1 = 0x08;
  2304  001240  0E08               	movlw	8
  2305  001242  6EC1               	movwf	4033,c	;volatile
  2306                           
  2307                           ;mcc_generated_files/adc.c: 71:     ADCON2 = 0x87;
  2308  001244  0E87               	movlw	135
  2309  001246  6EC0               	movwf	4032,c	;volatile
  2310                           
  2311                           ;mcc_generated_files/adc.c: 74:     ADRESL = 0x00;
  2312  001248  0E00               	movlw	0
  2313  00124A  6EC3               	movwf	4035,c	;volatile
  2314                           
  2315                           ;mcc_generated_files/adc.c: 77:     ADRESH = 0x00;
  2316  00124C  0E00               	movlw	0
  2317  00124E  6EC4               	movwf	4036,c	;volatile
  2318                           
  2319                           ;mcc_generated_files/adc.c: 80:     PIE1bits.ADIE = 1;
  2320  001250  8C9D               	bsf	3997,6,c	;volatile
  2321  001252  0012               	return		;funcret
  2322  001254                     __end_of_ADC_Initialize:
  2323                           	opt callstack 0
  2324                           
  2325 ;; *************** function _ReadLine *****************
  2326 ;; Defined at:
  2327 ;;		line 235 in file "main.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  tmp             2  112[BANK0 ] int 
  2332 ;;  line           12   99[BANK0 ] unsigned char [12]
  2333 ;;  index           1  111[BANK0 ] unsigned char 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  2   96[BANK0 ] PTR const unsigned char 
  2336 ;; Registers used:
  2337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;Total ram usage:       18 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:   15
  2350 ;; This function calls:
  2351 ;;		_EUSART1_Read
  2352 ;;		_EUSART1_is_rx_ready
  2353 ;;		_printf
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text17
  2360  000A7C                     __ptext17:
  2361                           	opt callstack 0
  2362  000A7C                     _ReadLine:
  2363                           	opt callstack 15
  2364                           
  2365                           ;main.c: 237:     char line[12];;main.c: 238:     uint8_t index = 0;
  2366                           
  2367                           ;incstack = 0
  2368  000A7C  0E00               	movlw	0
  2369  000A7E  0100               	movlb	0	; () banked
  2370  000A80  6FCF               	movwf	ReadLine@index& (0+255),b
  2371  000A82                     l3209:
  2372                           
  2373                           ;main.c: 240:     {;main.c: 241:         if(EUSART1_is_rx_ready())
  2374  000A82  EC33  F009         	call	_EUSART1_is_rx_ready	;wreg free
  2375  000A86  0900               	iorlw	0
  2376  000A88  B4D8               	btfsc	status,2,c
  2377  000A8A  D7FB               	goto	l3209
  2378                           
  2379                           ;main.c: 242:         {;main.c: 243:             int tmp = EUSART1_Read();
  2380  000A8C  ECA2  F007         	call	_EUSART1_Read	;wreg free
  2381  000A90  0100               	movlb	0	; () banked
  2382  000A92  6FC2               	movwf	??_ReadLine& (0+255),b
  2383  000A94  51C2               	movf	??_ReadLine& (0+255),w,b
  2384  000A96  6FD0               	movwf	ReadLine@tmp& (0+255),b
  2385  000A98  6BD1               	clrf	(ReadLine@tmp+1)& (0+255),b
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;main.c: 245:             printf("%c", (unsigned char)tmp);
  2389  000A9A  0EFB               	movlw	low STR_16
  2390  000A9C  6FB8               	movwf	printf@fmt& (0+255),b
  2391  000A9E  0EFF               	movlw	high STR_16
  2392  000AA0  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  2393  000AA2  C0D0  F0BA         	movff	ReadLine@tmp,?_printf+2
  2394  000AA6  6BBB               	clrf	(?_printf+3)& (0+255),b
  2395  000AA8  ECB0  F008         	call	_printf	;wreg free
  2396                           
  2397                           ;main.c: 246:             line[index] = tmp;
  2398  000AAC  0EC3               	movlw	low ReadLine@line
  2399  000AAE  0100               	movlb	0	; () banked
  2400  000AB0  25CF               	addwf	ReadLine@index& (0+255),w,b
  2401  000AB2  6ED9               	movwf	fsr2l,c
  2402  000AB4  6ADA               	clrf	fsr2h,c
  2403  000AB6  0E00               	movlw	high ReadLine@line
  2404  000AB8  22DA               	addwfc	fsr2h,f,c
  2405  000ABA  C0D0  FFDF         	movff	ReadLine@tmp,indf2
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;main.c: 247:             index++;
  2409  000ABE  2BCF               	incf	ReadLine@index& (0+255),f,b
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;main.c: 248:             line[index] = 0x00;
  2413  000AC0  0EC3               	movlw	low ReadLine@line
  2414  000AC2  25CF               	addwf	ReadLine@index& (0+255),w,b
  2415  000AC4  6ED9               	movwf	fsr2l,c
  2416  000AC6  6ADA               	clrf	fsr2h,c
  2417  000AC8  0E00               	movlw	high ReadLine@line
  2418  000ACA  22DA               	addwfc	fsr2h,f,c
  2419  000ACC  0E00               	movlw	0
  2420  000ACE  6EDF               	movwf	indf2,c
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;main.c: 249:             if(index > 11)
  2424  000AD0  0E0B               	movlw	11
  2425  000AD2  65CF               	cpfsgt	ReadLine@index& (0+255),b
  2426  000AD4  D001               	goto	l3225
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;main.c: 250:             {;main.c: 251:                 index--;
  2430  000AD6  07CF               	decf	ReadLine@index& (0+255),f,b
  2431  000AD8                     l3225:
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;main.c: 253:             if( tmp == "\r" || tmp ==0x0D)
  2435  000AD8  0EED               	movlw	low (STR_3+20)
  2436  000ADA  19D0               	xorwf	ReadLine@tmp& (0+255),w,b
  2437  000ADC  E104               	bnz	u2850
  2438  000ADE  0EFF               	movlw	high (STR_3+20)
  2439  000AE0  19D1               	xorwf	(ReadLine@tmp+1)& (0+255),w,b
  2440  000AE2  B4D8               	btfsc	status,2,c
  2441  000AE4  D005               	goto	u2860
  2442  000AE6                     u2850:
  2443                           
  2444                           ; BSR set to: 0
  2445  000AE6  0E0D               	movlw	13
  2446  000AE8  19D0               	xorwf	ReadLine@tmp& (0+255),w,b
  2447  000AEA  11D1               	iorwf	(ReadLine@tmp+1)& (0+255),w,b
  2448  000AEC  A4D8               	btfss	status,2,c
  2449  000AEE  D7C9               	goto	l3209
  2450  000AF0                     u2860:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;main.c: 254:             {;main.c: 255:                 printf("\r\n");
  2454  000AF0  0EEF               	movlw	low STR_18
  2455  000AF2  6FB8               	movwf	printf@fmt& (0+255),b
  2456  000AF4  0EFF               	movlw	high STR_18
  2457  000AF6  6FB9               	movwf	(printf@fmt+1)& (0+255),b
  2458  000AF8  ECB0  F008         	call	_printf	;wreg free
  2459                           
  2460                           ;main.c: 256:                 return line;
  2461  000AFC  0EC3               	movlw	low ReadLine@line
  2462  000AFE  0100               	movlb	0	; () banked
  2463  000B00  6FC0               	movwf	?_ReadLine& (0+255),b
  2464  000B02  0E00               	movlw	high ReadLine@line
  2465  000B04  6FC1               	movwf	(?_ReadLine+1)& (0+255),b
  2466                           
  2467                           ; BSR set to: 0
  2468  000B06  0012               	return		;funcret
  2469  000B08                     __end_of_ReadLine:
  2470                           	opt callstack 0
  2471                           
  2472 ;; *************** function _printf *****************
  2473 ;; Defined at:
  2474 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  fmt             2   88[BANK0 ] PTR const unsigned char 
  2477 ;;		 -> STR_18(3), STR_16(3), STR_15(30), STR_14(3), 
  2478 ;;		 -> STR_13(32), STR_8(38), STR_5(28), STR_4(32), 
  2479 ;;		 -> STR_3(22), STR_2(35), STR_1(23), 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  ap              2   94[BANK0 ] PTR void [1]
  2482 ;;		 -> ?_printf(2), 
  2483 ;;  ret             2    0        int 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2   88[BANK0 ] int 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2493 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;Total ram usage:        8 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:   14
  2500 ;; This function calls:
  2501 ;;		_vfprintf
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;;		_ReadLine
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text18
  2509  001160                     __ptext18:
  2510                           	opt callstack 0
  2511  001160                     _printf:
  2512                           	opt callstack 16
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;incstack = 0
  2516  001160  0EBA               	movlw	low (?_printf+2)
  2517  001162  0100               	movlb	0	; () banked
  2518  001164  6FBE               	movwf	printf@ap& (0+255),b
  2519  001166  0E00               	movlw	high (?_printf+2)
  2520  001168  6FBF               	movwf	(printf@ap+1)& (0+255),b
  2521                           
  2522                           ; BSR set to: 0
  2523  00116A  0E00               	movlw	0
  2524  00116C  6FB0               	movwf	vfprintf@fp& (0+255),b
  2525  00116E  0E00               	movlw	0
  2526  001170  6FB1               	movwf	(vfprintf@fp+1)& (0+255),b
  2527  001172  C0B8  F0B2         	movff	printf@fmt,vfprintf@fmt
  2528  001176  C0B9  F0B3         	movff	printf@fmt+1,vfprintf@fmt+1
  2529  00117A  0EBE               	movlw	low printf@ap
  2530  00117C  6FB4               	movwf	vfprintf@ap& (0+255),b
  2531  00117E  0E00               	movlw	high printf@ap
  2532  001180  6FB5               	movwf	(vfprintf@ap+1)& (0+255),b
  2533  001182  ECC5  F006         	call	_vfprintf	;wreg free
  2534  001186  0012               	return		;funcret
  2535  001188                     __end_of_printf:
  2536                           	opt callstack 0
  2537                           
  2538 ;; *************** function _vfprintf *****************
  2539 ;; Defined at:
  2540 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  fp              2   80[BANK0 ] PTR struct _IO_FILE
  2543 ;;		 -> NULL(0), 
  2544 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2545 ;;		 -> STR_18(3), STR_16(3), STR_15(30), STR_14(3), 
  2546 ;;		 -> STR_13(32), STR_8(38), STR_5(28), STR_4(32), 
  2547 ;;		 -> STR_3(22), STR_2(35), STR_1(23), 
  2548 ;;  ap              2   84[BANK0 ] PTR PTR void 
  2549 ;;		 -> printf@ap(2), 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  cfmt            2   86[BANK0 ] PTR unsigned char 
  2552 ;;		 -> STR_18(3), STR_16(3), STR_15(30), STR_14(3), 
  2553 ;;		 -> STR_13(32), STR_8(38), STR_5(28), STR_4(32), 
  2554 ;;		 -> STR_3(22), STR_2(35), STR_1(23), 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  2   80[BANK0 ] int 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2564 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;Total ram usage:        8 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:   13
  2571 ;; This function calls:
  2572 ;;		_vfpfcnvrt
  2573 ;; This function is called by:
  2574 ;;		_printf
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text19
  2579  000D8A                     __ptext19:
  2580                           	opt callstack 0
  2581  000D8A                     _vfprintf:
  2582                           	opt callstack 16
  2583                           
  2584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2585                           
  2586                           ;incstack = 0
  2587  000D8A  C0B2  F0B6         	movff	vfprintf@fmt,vfprintf@cfmt
  2588  000D8E  C0B3  F0B7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2589                           
  2590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2591  000D92  0E00               	movlw	0
  2592  000D94  0100               	movlb	0	; () banked
  2593  000D96  6FDB               	movwf	(_nout+1)& (0+255),b
  2594  000D98  0E00               	movlw	0
  2595  000D9A  6FDA               	movwf	_nout& (0+255),b
  2596                           
  2597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2598  000D9C  D013               	goto	l3105
  2599  000D9E                     l3103:
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2603  000D9E  C0B0  F09F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2604  000DA2  C0B1  F0A0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2605  000DA6  0EB6               	movlw	low vfprintf@cfmt
  2606  000DA8  6FA1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2607  000DAA  0E00               	movlw	high vfprintf@cfmt
  2608  000DAC  6FA2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2609  000DAE  C0B4  F0A3         	movff	vfprintf@ap,vfpfcnvrt@ap
  2610  000DB2  C0B5  F0A4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2611  000DB6  EC72  F001         	call	_vfpfcnvrt	;wreg free
  2612  000DBA  0100               	movlb	0	; () banked
  2613  000DBC  519F               	movf	?_vfpfcnvrt& (0+255),w,b
  2614  000DBE  27DA               	addwf	_nout& (0+255),f,b
  2615  000DC0  51A0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2616  000DC2  23DB               	addwfc	(_nout+1)& (0+255),f,b
  2617  000DC4                     l3105:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2621  000DC4  C0B6  FFF6         	movff	vfprintf@cfmt,tblptrl
  2622  000DC8  C0B7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2623  000DCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2624  000DCC  6AF8               	clrf	tblptru,c
  2625  000DCE                     	endif
  2626  000DCE                     	if	0	;tblptru may be non-zero
  2627  000DCE                     	endif
  2628  000DCE  0008               	tblrd		*
  2629  000DD0  50F5               	movf	tablat,w,c
  2630  000DD2  0900               	iorlw	0
  2631  000DD4  A4D8               	btfss	status,2,c
  2632  000DD6  D7E3               	goto	l3103
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2636  000DD8  C0DA  F0B0         	movff	_nout,?_vfprintf
  2637  000DDC  C0DB  F0B1         	movff	_nout+1,?_vfprintf+1
  2638                           
  2639                           ; BSR set to: 0
  2640  000DE0  0012               	return		;funcret
  2641  000DE2                     __end_of_vfprintf:
  2642                           	opt callstack 0
  2643                           
  2644 ;; *************** function _vfpfcnvrt *****************
  2645 ;; Defined at:
  2646 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  2649 ;;		 -> NULL(0), 
  2650 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
  2651 ;;		 -> vfprintf@cfmt(2), 
  2652 ;;  ap              2   67[BANK0 ] PTR PTR void 
  2653 ;;		 -> printf@ap(2), 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  ll              8   71[BANK0 ] long long 
  2656 ;;  llu             8    0        unsigned long long 
  2657 ;;  f               4    0        unsigned long long 
  2658 ;;  vp              3    0        PTR void 
  2659 ;;  ct              3    0        unsigned char [3]
  2660 ;;  cp              3    0        PTR unsigned char 
  2661 ;;  i               2    0        int 
  2662 ;;  done            2    0        int 
  2663 ;;  c               1   79[BANK0 ] unsigned char 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  2   63[BANK0 ] int 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2673 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;Total ram usage:       17 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:   12
  2680 ;; This function calls:
  2681 ;;		_ctoa
  2682 ;;		_dtoa
  2683 ;;		_fputc
  2684 ;; This function is called by:
  2685 ;;		_vfprintf
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text20
  2690  0002E4                     __ptext20:
  2691                           	opt callstack 0
  2692  0002E4                     _vfpfcnvrt:
  2693                           	opt callstack 16
  2694                           
  2695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;incstack = 0
  2699  0002E4  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2700  0002E8  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2701  0002EC  CFDE FFF6          	movff	postinc2,tblptrl
  2702  0002F0  CFDD FFF7          	movff	postdec2,tblptrh
  2703  0002F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2704  0002F4  6AF8               	clrf	tblptru,c
  2705  0002F6                     	endif
  2706  0002F6                     	if	0	;tblptru may be non-zero
  2707  0002F6                     	endif
  2708  0002F6  0008               	tblrd		*
  2709  0002F8  50F5               	movf	tablat,w,c
  2710  0002FA  0A25               	xorlw	37
  2711  0002FC  A4D8               	btfss	status,2,c
  2712  0002FE  D0D2               	goto	l3079
  2713                           
  2714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2715  000300  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2716  000304  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2717  000308  2ADE               	incf	postinc2,f,c
  2718  00030A  0E00               	movlw	0
  2719  00030C  22DD               	addwfc	postdec2,f,c
  2720                           
  2721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2722  00030E  0E00               	movlw	0
  2723  000310  6E25               	movwf	_width+1,c
  2724  000312  0E00               	movlw	0
  2725  000314  6E24               	movwf	_width,c
  2726  000316  C024  F026         	movff	_width,_flags
  2727  00031A  C025  F027         	movff	_width+1,_flags+1
  2728                           
  2729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2730  00031E  0100               	movlb	0	; () banked
  2731  000320  69DC               	setf	_prec& (0+255),b
  2732  000322  69DD               	setf	(_prec+1)& (0+255),b
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2736  000324  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2737  000328  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2738  00032C  CFDE FFF6          	movff	postinc2,tblptrl
  2739  000330  CFDD FFF7          	movff	postdec2,tblptrh
  2740  000334                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2741  000334  6AF8               	clrf	tblptru,c
  2742  000336                     	endif
  2743  000336                     	if	0	;tblptru may be non-zero
  2744  000336                     	endif
  2745  000336  0008               	tblrd		*
  2746  000338  50F5               	movf	tablat,w,c
  2747  00033A  0A63               	xorlw	99
  2748  00033C  A4D8               	btfss	status,2,c
  2749  00033E  D026               	goto	l3053
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2753  000340  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2754  000344  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2755  000348  2ADE               	incf	postinc2,f,c
  2756  00034A  0E00               	movlw	0
  2757  00034C  22DD               	addwfc	postdec2,f,c
  2758                           
  2759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2760  00034E  C0A3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2761  000352  C0A4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2762  000356  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  2763  00035A  0E02               	movlw	2
  2764  00035C  26DE               	addwf	postinc2,f,c
  2765  00035E  CFDF F0A6          	movff	indf2,??_vfpfcnvrt+1
  2766  000362  0E00               	movlw	0
  2767  000364  22DD               	addwfc	postdec2,f,c
  2768  000366  C0A5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2769  00036A  C0A6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2770  00036E  50DF               	movf	indf2,w,c
  2771  000370  6FAF               	movwf	vfpfcnvrt@c& (0+255),b
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2775  000372  C09F  F07B         	movff	vfpfcnvrt@fp,ctoa@fp
  2776  000376  C0A0  F07C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2777  00037A  C0AF  F07D         	movff	vfpfcnvrt@c,ctoa@c
  2778  00037E  EC1A  F007         	call	_ctoa	;wreg free
  2779  000382  C07B  F09F         	movff	?_ctoa,?_vfpfcnvrt
  2780  000386  C07C  F0A0         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2781  00038A  0012               	return	
  2782  00038C                     l3053:
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2786  00038C  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2787  000390  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2788  000394  CFDE FFF6          	movff	postinc2,tblptrl
  2789  000398  CFDD FFF7          	movff	postdec2,tblptrh
  2790  00039C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2791  00039C  6AF8               	clrf	tblptru,c
  2792  00039E                     	endif
  2793  00039E                     	if	0	;tblptru may be non-zero
  2794  00039E                     	endif
  2795  00039E  0008               	tblrd		*
  2796  0003A0  50F5               	movf	tablat,w,c
  2797  0003A2  0A64               	xorlw	100
  2798  0003A4  B4D8               	btfsc	status,2,c
  2799  0003A6  D00E               	goto	u2730
  2800                           
  2801                           ; BSR set to: 0
  2802  0003A8  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2803  0003AC  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2804  0003B0  CFDE FFF6          	movff	postinc2,tblptrl
  2805  0003B4  CFDD FFF7          	movff	postdec2,tblptrh
  2806  0003B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2807  0003B8  6AF8               	clrf	tblptru,c
  2808  0003BA                     	endif
  2809  0003BA                     	if	0	;tblptru may be non-zero
  2810  0003BA                     	endif
  2811  0003BA  0008               	tblrd		*
  2812  0003BC  50F5               	movf	tablat,w,c
  2813  0003BE  0A69               	xorlw	105
  2814  0003C0  A4D8               	btfss	status,2,c
  2815  0003C2  D03F               	goto	l3063
  2816  0003C4                     u2730:
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2820  0003C4  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2821  0003C8  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2822  0003CC  2ADE               	incf	postinc2,f,c
  2823  0003CE  0E00               	movlw	0
  2824  0003D0  22DD               	addwfc	postdec2,f,c
  2825                           
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2827  0003D2  C0A3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2828  0003D6  C0A4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2829  0003DA  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  2830  0003DE  0E02               	movlw	2
  2831  0003E0  26DE               	addwf	postinc2,f,c
  2832  0003E2  CFDF F0A6          	movff	indf2,??_vfpfcnvrt+1
  2833  0003E6  0E00               	movlw	0
  2834  0003E8  22DD               	addwfc	postdec2,f,c
  2835  0003EA  C0A5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2836  0003EE  C0A6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2837  0003F2  CFDE F0A7          	movff	postinc2,vfpfcnvrt@ll
  2838  0003F6  CFDD F0A8          	movff	postdec2,vfpfcnvrt@ll+1
  2839  0003FA  0E00               	movlw	0
  2840  0003FC  BFA8               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2841  0003FE  0EFF               	movlw	-1
  2842  000400  6FA9               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2843  000402  6FAA               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2844  000404  6FAB               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2845  000406  6FAC               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2846  000408  6FAD               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2847  00040A  6FAE               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2851  00040C  C09F  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  2852  000410  C0A0  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2853  000414  C0A7  F07D         	movff	vfpfcnvrt@ll,dtoa@d
  2854  000418  C0A8  F07E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2855  00041C  C0A9  F07F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2856  000420  C0AA  F080         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2857  000424  C0AB  F081         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2858  000428  C0AC  F082         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2859  00042C  C0AD  F083         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2860  000430  C0AE  F084         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2861  000434  EC4F  F000         	call	_dtoa	;wreg free
  2862  000438  C07B  F09F         	movff	?_dtoa,?_vfpfcnvrt
  2863  00043C  C07C  F0A0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2864  000440  0012               	return	
  2865  000442                     l3063:
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2869  000442  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2870  000446  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2871  00044A  CFDE FFF6          	movff	postinc2,tblptrl
  2872  00044E  CFDD FFF7          	movff	postdec2,tblptrh
  2873  000452                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2874  000452  6AF8               	clrf	tblptru,c
  2875  000454                     	endif
  2876  000454                     	if	0	;tblptru may be non-zero
  2877  000454                     	endif
  2878  000454  0008               	tblrd		*
  2879  000456  50F5               	movf	tablat,w,c
  2880  000458  0A25               	xorlw	37
  2881  00045A  A4D8               	btfss	status,2,c
  2882  00045C  D017               	goto	l3073
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2886  00045E  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2887  000462  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2888  000466  2ADE               	incf	postinc2,f,c
  2889  000468  0E00               	movlw	0
  2890  00046A  22DD               	addwfc	postdec2,f,c
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2894  00046C  0E00               	movlw	0
  2895  00046E  6F61               	movwf	(fputc@c+1)& (0+255),b
  2896  000470  0E25               	movlw	37
  2897  000472  6F60               	movwf	fputc@c& (0+255),b
  2898  000474  C09F  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2899  000478  C0A0  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2900  00047C  ECFF  F005         	call	_fputc	;wreg free
  2901  000480                     l3069:
  2902                           
  2903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2904  000480  0E00               	movlw	0
  2905  000482  0100               	movlb	0	; () banked
  2906  000484  6FA0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2907  000486  0E01               	movlw	1
  2908  000488  6F9F               	movwf	?_vfpfcnvrt& (0+255),b
  2909  00048A  0012               	return	
  2910  00048C                     l3073:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2914  00048C  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2915  000490  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2916  000494  2ADE               	incf	postinc2,f,c
  2917  000496  0E00               	movlw	0
  2918  000498  22DD               	addwfc	postdec2,f,c
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2922  00049A  0E00               	movlw	0
  2923  00049C  6FA0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2924  00049E  0E00               	movlw	0
  2925  0004A0  6F9F               	movwf	?_vfpfcnvrt& (0+255),b
  2926  0004A2  0012               	return	
  2927  0004A4                     l3079:
  2928                           
  2929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2930  0004A4  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2931  0004A8  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2932  0004AC  CFDE FFF6          	movff	postinc2,tblptrl
  2933  0004B0  CFDD FFF7          	movff	postdec2,tblptrh
  2934  0004B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2935  0004B4  6AF8               	clrf	tblptru,c
  2936  0004B6                     	endif
  2937  0004B6                     	if	0	;tblptru may be non-zero
  2938  0004B6                     	endif
  2939  0004B6  0008               	tblrd		*
  2940  0004B8  50F5               	movf	tablat,w,c
  2941  0004BA  0100               	movlb	0	; () banked
  2942  0004BC  6F60               	movwf	fputc@c& (0+255),b
  2943  0004BE  6B61               	clrf	(fputc@c+1)& (0+255),b
  2944  0004C0  C09F  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2945  0004C4  C0A0  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2946  0004C8  ECFF  F005         	call	_fputc	;wreg free
  2947                           
  2948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2949  0004CC  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2950  0004D0  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2951  0004D4  2ADE               	incf	postinc2,f,c
  2952  0004D6  0E00               	movlw	0
  2953  0004D8  22DD               	addwfc	postdec2,f,c
  2954  0004DA  D7D2               	goto	l3069
  2955  0004DC                     __end_of_vfpfcnvrt:
  2956                           	opt callstack 0
  2957                           
  2958 ;; *************** function _dtoa *****************
  2959 ;; Defined at:
  2960 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2963 ;;		 -> NULL(0), 
  2964 ;;  d               8   29[BANK0 ] long long 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  n               8   53[BANK0 ] long long 
  2967 ;;  i               2   61[BANK0 ] int 
  2968 ;;  s               2   51[BANK0 ] int 
  2969 ;;  w               2   49[BANK0 ] int 
  2970 ;;  p               2   47[BANK0 ] int 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  2   27[BANK0 ] int 
  2973 ;; Registers used:
  2974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2980 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;Total ram usage:       36 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:   11
  2987 ;; This function calls:
  2988 ;;		___aodiv
  2989 ;;		___aomod
  2990 ;;		_abs
  2991 ;;		_pad
  2992 ;; This function is called by:
  2993 ;;		_vfpfcnvrt
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text21
  2998  00009E                     __ptext21:
  2999                           	opt callstack 0
  3000  00009E                     _dtoa:
  3001                           	opt callstack 16
  3002                           
  3003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3004                           
  3005                           ;incstack = 0
  3006  00009E  C07D  F095         	movff	dtoa@d,dtoa@n
  3007  0000A2  C07E  F096         	movff	dtoa@d+1,dtoa@n+1
  3008  0000A6  C07F  F097         	movff	dtoa@d+2,dtoa@n+2
  3009  0000AA  C080  F098         	movff	dtoa@d+3,dtoa@n+3
  3010  0000AE  C081  F099         	movff	dtoa@d+4,dtoa@n+4
  3011  0000B2  C082  F09A         	movff	dtoa@d+5,dtoa@n+5
  3012  0000B6  C083  F09B         	movff	dtoa@d+6,dtoa@n+6
  3013  0000BA  C084  F09C         	movff	dtoa@d+7,dtoa@n+7
  3014                           
  3015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3016  0000BE  0100               	movlb	0	; () banked
  3017  0000C0  AF9C               	btfss	(dtoa@n+7)& (0+255),7,b
  3018  0000C2  D002               	goto	u2550
  3019  0000C4  0E01               	movlw	1
  3020  0000C6  D001               	goto	u2560
  3021  0000C8                     u2550:
  3022  0000C8  0E00               	movlw	0
  3023  0000CA                     u2560:
  3024  0000CA  6F93               	movwf	dtoa@s& (0+255),b
  3025  0000CC  6B94               	clrf	(dtoa@s+1)& (0+255),b
  3026                           
  3027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3028  0000CE  5193               	movf	dtoa@s& (0+255),w,b
  3029  0000D0  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  3030  0000D2  B4D8               	btfsc	status,2,c
  3031  0000D4  D010               	goto	l2981
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3035  0000D6  1F9C               	comf	(dtoa@n+7)& (0+255),f,b
  3036  0000D8  1F9B               	comf	(dtoa@n+6)& (0+255),f,b
  3037  0000DA  1F9A               	comf	(dtoa@n+5)& (0+255),f,b
  3038  0000DC  1F99               	comf	(dtoa@n+4)& (0+255),f,b
  3039  0000DE  1F98               	comf	(dtoa@n+3)& (0+255),f,b
  3040  0000E0  1F97               	comf	(dtoa@n+2)& (0+255),f,b
  3041  0000E2  1F96               	comf	(dtoa@n+1)& (0+255),f,b
  3042  0000E4  6D95               	negf	dtoa@n& (0+255),b
  3043  0000E6  0E00               	movlw	0
  3044  0000E8  2396               	addwfc	(dtoa@n+1)& (0+255),f,b
  3045  0000EA  2397               	addwfc	(dtoa@n+2)& (0+255),f,b
  3046  0000EC  2398               	addwfc	(dtoa@n+3)& (0+255),f,b
  3047  0000EE  2399               	addwfc	(dtoa@n+4)& (0+255),f,b
  3048  0000F0  239A               	addwfc	(dtoa@n+5)& (0+255),f,b
  3049  0000F2  239B               	addwfc	(dtoa@n+6)& (0+255),f,b
  3050  0000F4  239C               	addwfc	(dtoa@n+7)& (0+255),f,b
  3051  0000F6                     l2981:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3055  0000F6  AFDD               	btfss	(_prec+1)& (0+255),7,b
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  3059  0000F8  9226               	bcf	_flags,1,c
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  3063  0000FA  BFDD               	btfsc	(_prec+1)& (0+255),7,b
  3064  0000FC  D005               	goto	u2590
  3065  0000FE  51DD               	movf	(_prec+1)& (0+255),w,b
  3066  000100  E108               	bnz	l508
  3067  000102  05DC               	decf	_prec& (0+255),w,b
  3068  000104  B0D8               	btfsc	status,0,c
  3069  000106  D005               	goto	l508
  3070  000108                     u2590:
  3071                           
  3072                           ; BSR set to: 0
  3073  000108  0E00               	movlw	0
  3074  00010A  6F90               	movwf	(dtoa@p+1)& (0+255),b
  3075  00010C  0E01               	movlw	1
  3076  00010E  6F8F               	movwf	dtoa@p& (0+255),b
  3077  000110  D004               	goto	l510
  3078  000112                     l508:
  3079                           
  3080                           ; BSR set to: 0
  3081  000112  C0DC  F08F         	movff	_prec,dtoa@p
  3082  000116  C0DD  F090         	movff	_prec+1,dtoa@p+1
  3083  00011A                     l510:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  3087  00011A  C024  F091         	movff	_width,dtoa@w
  3088  00011E  C025  F092         	movff	_width+1,dtoa@w+1
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  3092  000122  5193               	movf	dtoa@s& (0+255),w,b
  3093  000124  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  3094  000126  A4D8               	btfss	status,2,c
  3095  000128  D002               	goto	u2610
  3096                           
  3097                           ; BSR set to: 0
  3098  00012A  A426               	btfss	_flags,2,c
  3099  00012C  D003               	goto	l2995
  3100  00012E                     u2610:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  3104  00012E  0791               	decf	dtoa@w& (0+255),f,b
  3105  000130  A0D8               	btfss	status,0,c
  3106  000132  0792               	decf	(dtoa@w+1)& (0+255),f,b
  3107  000134                     l2995:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  3111  000134  0E00               	movlw	0
  3112  000136  6F9E               	movwf	(dtoa@i+1)& (0+255),b
  3113  000138  0E1F               	movlw	31
  3114  00013A  6F9D               	movwf	dtoa@i& (0+255),b
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  3118  00013C  0E00               	movlw	0
  3119  00013E  6FFD               	movwf	(_dbuf+31)& (0+255),b
  3120                           
  3121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3122  000140  D07D               	goto	l3009
  3123  000142                     l2999:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  3127  000142  079D               	decf	dtoa@i& (0+255),f,b
  3128  000144  A0D8               	btfss	status,0,c
  3129  000146  079E               	decf	(dtoa@i+1)& (0+255),f,b
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  3133  000148  0EDE               	movlw	low _dbuf
  3134  00014A  259D               	addwf	dtoa@i& (0+255),w,b
  3135  00014C  6ED9               	movwf	fsr2l,c
  3136  00014E  0E00               	movlw	high _dbuf
  3137  000150  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  3138  000152  6EDA               	movwf	fsr2h,c
  3139  000154  C095  F060         	movff	dtoa@n,___aomod@dividend
  3140  000158  C096  F061         	movff	dtoa@n+1,___aomod@dividend+1
  3141  00015C  C097  F062         	movff	dtoa@n+2,___aomod@dividend+2
  3142  000160  C098  F063         	movff	dtoa@n+3,___aomod@dividend+3
  3143  000164  C099  F064         	movff	dtoa@n+4,___aomod@dividend+4
  3144  000168  C09A  F065         	movff	dtoa@n+5,___aomod@dividend+5
  3145  00016C  C09B  F066         	movff	dtoa@n+6,___aomod@dividend+6
  3146  000170  C09C  F067         	movff	dtoa@n+7,___aomod@dividend+7
  3147  000174  0E0A               	movlw	10
  3148  000176  6F68               	movwf	___aomod@divisor& (0+255),b
  3149  000178  0E00               	movlw	0
  3150  00017A  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  3151  00017C  0E00               	movlw	0
  3152  00017E  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  3153  000180  0E00               	movlw	0
  3154  000182  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  3155  000184  0E00               	movlw	0
  3156  000186  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  3157  000188  0E00               	movlw	0
  3158  00018A  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  3159  00018C  0E00               	movlw	0
  3160  00018E  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  3161  000190  0E00               	movlw	0
  3162  000192  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  3163  000194  ECA8  F003         	call	___aomod	;wreg free
  3164  000198  C060  F085         	movff	?___aomod,??_dtoa
  3165  00019C  C061  F086         	movff	?___aomod+1,??_dtoa+1
  3166  0001A0  C062  F087         	movff	?___aomod+2,??_dtoa+2
  3167  0001A4  C063  F088         	movff	?___aomod+3,??_dtoa+3
  3168  0001A8  C064  F089         	movff	?___aomod+4,??_dtoa+4
  3169  0001AC  C065  F08A         	movff	?___aomod+5,??_dtoa+5
  3170  0001B0  C066  F08B         	movff	?___aomod+6,??_dtoa+6
  3171  0001B4  C067  F08C         	movff	?___aomod+7,??_dtoa+7
  3172  0001B8  C085  F022         	movff	??_dtoa,abs@a
  3173  0001BC  C087  F023         	movff	??_dtoa+2,abs@a+1
  3174  0001C0  EC13  F008         	call	_abs	;wreg free
  3175  0001C4  5022               	movf	?_abs,w,c
  3176  0001C6  0F30               	addlw	48
  3177  0001C8  6EDF               	movwf	indf2,c
  3178                           
  3179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  3180  0001CA  0100               	movlb	0	; () banked
  3181  0001CC  078F               	decf	dtoa@p& (0+255),f,b
  3182  0001CE  A0D8               	btfss	status,0,c
  3183  0001D0  0790               	decf	(dtoa@p+1)& (0+255),f,b
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  3187  0001D2  0791               	decf	dtoa@w& (0+255),f,b
  3188  0001D4  A0D8               	btfss	status,0,c
  3189  0001D6  0792               	decf	(dtoa@w+1)& (0+255),f,b
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  3193  0001D8  C095  F060         	movff	dtoa@n,___aodiv@dividend
  3194  0001DC  C096  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  3195  0001E0  C097  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  3196  0001E4  C098  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  3197  0001E8  C099  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  3198  0001EC  C09A  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  3199  0001F0  C09B  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  3200  0001F4  C09C  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  3201  0001F8  0E0A               	movlw	10
  3202  0001FA  6F68               	movwf	___aodiv@divisor& (0+255),b
  3203  0001FC  0E00               	movlw	0
  3204  0001FE  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  3205  000200  0E00               	movlw	0
  3206  000202  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  3207  000204  0E00               	movlw	0
  3208  000206  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  3209  000208  0E00               	movlw	0
  3210  00020A  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  3211  00020C  0E00               	movlw	0
  3212  00020E  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  3213  000210  0E00               	movlw	0
  3214  000212  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  3215  000214  0E00               	movlw	0
  3216  000216  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  3217  000218  EC6E  F002         	call	___aodiv	;wreg free
  3218  00021C  C060  F095         	movff	?___aodiv,dtoa@n
  3219  000220  C061  F096         	movff	?___aodiv+1,dtoa@n+1
  3220  000224  C062  F097         	movff	?___aodiv+2,dtoa@n+2
  3221  000228  C063  F098         	movff	?___aodiv+3,dtoa@n+3
  3222  00022C  C064  F099         	movff	?___aodiv+4,dtoa@n+4
  3223  000230  C065  F09A         	movff	?___aodiv+5,dtoa@n+5
  3224  000234  C066  F09B         	movff	?___aodiv+6,dtoa@n+6
  3225  000238  C067  F09C         	movff	?___aodiv+7,dtoa@n+7
  3226  00023C                     l3009:
  3227                           
  3228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3229  00023C  0100               	movlb	0	; () banked
  3230  00023E  BF9E               	btfsc	(dtoa@i+1)& (0+255),7,b
  3231  000240  D01F               	goto	u2660
  3232  000242  519E               	movf	(dtoa@i+1)& (0+255),w,b
  3233  000244  E103               	bnz	u2620
  3234  000246  059D               	decf	dtoa@i& (0+255),w,b
  3235  000248  A0D8               	btfss	status,0,c
  3236  00024A  D01A               	goto	u2660
  3237  00024C                     u2620:
  3238                           
  3239                           ; BSR set to: 0
  3240  00024C  5195               	movf	dtoa@n& (0+255),w,b
  3241  00024E  1196               	iorwf	(dtoa@n+1)& (0+255),w,b
  3242  000250  1197               	iorwf	(dtoa@n+2)& (0+255),w,b
  3243  000252  1198               	iorwf	(dtoa@n+3)& (0+255),w,b
  3244  000254  1199               	iorwf	(dtoa@n+4)& (0+255),w,b
  3245  000256  119A               	iorwf	(dtoa@n+5)& (0+255),w,b
  3246  000258  119B               	iorwf	(dtoa@n+6)& (0+255),w,b
  3247  00025A  119C               	iorwf	(dtoa@n+7)& (0+255),w,b
  3248  00025C  A4D8               	btfss	status,2,c
  3249  00025E  D771               	goto	l2999
  3250                           
  3251                           ; BSR set to: 0
  3252  000260  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
  3253  000262  D005               	goto	u2640
  3254  000264  5190               	movf	(dtoa@p+1)& (0+255),w,b
  3255  000266  E102               	bnz	u2641
  3256  000268  058F               	decf	dtoa@p& (0+255),w,b
  3257  00026A  B0D8               	btfsc	status,0,c
  3258  00026C                     u2641:
  3259  00026C  D76A               	goto	l2999
  3260  00026E                     u2640:
  3261                           
  3262                           ; BSR set to: 0
  3263  00026E  BF92               	btfsc	(dtoa@w+1)& (0+255),7,b
  3264  000270  D007               	goto	u2660
  3265  000272  5192               	movf	(dtoa@w+1)& (0+255),w,b
  3266  000274  E103               	bnz	u2650
  3267  000276  0591               	decf	dtoa@w& (0+255),w,b
  3268  000278  A0D8               	btfss	status,0,c
  3269  00027A  D002               	goto	u2660
  3270  00027C                     u2650:
  3271                           
  3272                           ; BSR set to: 0
  3273  00027C  B226               	btfsc	_flags,1,c
  3274  00027E  D761               	goto	l2999
  3275  000280                     u2660:
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  3279  000280  5193               	movf	dtoa@s& (0+255),w,b
  3280  000282  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  3281  000284  A4D8               	btfss	status,2,c
  3282  000286  D002               	goto	u2680
  3283                           
  3284                           ; BSR set to: 0
  3285  000288  A426               	btfss	_flags,2,c
  3286  00028A  D017               	goto	l3033
  3287  00028C                     u2680:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  3291  00028C  079D               	decf	dtoa@i& (0+255),f,b
  3292  00028E  A0D8               	btfss	status,0,c
  3293  000290  079E               	decf	(dtoa@i+1)& (0+255),f,b
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  3297  000292  5193               	movf	dtoa@s& (0+255),w,b
  3298  000294  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  3299  000296  A4D8               	btfss	status,2,c
  3300  000298  D004               	goto	l3029
  3301                           
  3302                           ; BSR set to: 0
  3303  00029A  0E00               	movlw	0
  3304  00029C  6F8E               	movwf	(_dtoa$1176+1)& (0+255),b
  3305  00029E  0E2B               	movlw	43
  3306  0002A0  D003               	goto	L2
  3307  0002A2                     l3029:
  3308                           
  3309                           ; BSR set to: 0
  3310  0002A2  0E00               	movlw	0
  3311  0002A4  6F8E               	movwf	(_dtoa$1176+1)& (0+255),b
  3312  0002A6  0E2D               	movlw	45
  3313  0002A8                     L2:
  3314  0002A8  6F8D               	movwf	_dtoa$1176& (0+255),b
  3315                           
  3316                           ; BSR set to: 0
  3317  0002AA  0EDE               	movlw	low _dbuf
  3318  0002AC  259D               	addwf	dtoa@i& (0+255),w,b
  3319  0002AE  6ED9               	movwf	fsr2l,c
  3320  0002B0  0E00               	movlw	high _dbuf
  3321  0002B2  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  3322  0002B4  6EDA               	movwf	fsr2h,c
  3323  0002B6  C08D  FFDF         	movff	_dtoa$1176,indf2
  3324  0002BA                     l3033:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  3328  0002BA  C07B  F070         	movff	dtoa@fp,pad@fp
  3329  0002BE  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  3330  0002C2  0EDE               	movlw	low _dbuf
  3331  0002C4  259D               	addwf	dtoa@i& (0+255),w,b
  3332  0002C6  6F72               	movwf	pad@buf& (0+255),b
  3333  0002C8  0E00               	movlw	high _dbuf
  3334  0002CA  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  3335  0002CC  6F73               	movwf	(pad@buf+1)& (0+255),b
  3336  0002CE  C091  F074         	movff	dtoa@w,pad@p
  3337  0002D2  C092  F075         	movff	dtoa@w+1,pad@p+1
  3338  0002D6  ECA7  F004         	call	_pad	;wreg free
  3339  0002DA  C070  F07B         	movff	?_pad,?_dtoa
  3340  0002DE  C071  F07C         	movff	?_pad+1,?_dtoa+1
  3341  0002E2  0012               	return		;funcret
  3342  0002E4                     __end_of_dtoa:
  3343                           	opt callstack 0
  3344                           
  3345 ;; *************** function _abs *****************
  3346 ;; Defined at:
  3347 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  a               2   33[COMRAM] int 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  2   33[COMRAM] int 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;Total ram usage:        4 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    6
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_dtoa
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text22
  3376  001026                     __ptext22:
  3377                           	opt callstack 0
  3378  001026                     _abs:
  3379                           	opt callstack 20
  3380                           
  3381                           ;incstack = 0
  3382  001026  BE23               	btfsc	abs@a+1,7,c
  3383  001028  D005               	goto	u2400
  3384  00102A  5023               	movf	abs@a+1,w,c
  3385  00102C  E111               	bnz	l1221
  3386  00102E  0422               	decf	abs@a,w,c
  3387  001030  B0D8               	btfsc	status,0,c
  3388  001032  D00E               	goto	l1221
  3389  001034                     u2400:
  3390  001034  C022  F070         	movff	abs@a,??_abs
  3391  001038  C023  F071         	movff	abs@a+1,??_abs+1
  3392  00103C  0100               	movlb	0	; () banked
  3393  00103E  1F70               	comf	??_abs& (0+255),f,b
  3394  001040  1F71               	comf	(??_abs+1)& (0+255),f,b
  3395  001042  4B70               	infsnz	??_abs& (0+255),f,b
  3396  001044  2B71               	incf	(??_abs+1)& (0+255),f,b
  3397  001046  C070  F022         	movff	??_abs,?_abs
  3398  00104A  C071  F023         	movff	??_abs+1,?_abs+1
  3399  00104E  0012               	return	
  3400  001050                     l1221:
  3401  001050  C022  F022         	movff	abs@a,?_abs
  3402  001054  C023  F023         	movff	abs@a+1,?_abs+1
  3403  001058  0012               	return		;funcret
  3404  00105A                     __end_of_abs:
  3405                           	opt callstack 0
  3406                           
  3407 ;; *************** function ___aomod *****************
  3408 ;; Defined at:
  3409 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  dividend        8    0[BANK0 ] long long 
  3412 ;;  divisor         8    8[BANK0 ] long long 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  sign            1   32[COMRAM] unsigned char 
  3415 ;;  counter         1   31[COMRAM] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  8    0[BANK0 ] long long 
  3418 ;; Registers used:
  3419 ;;		wreg, status,2, status,0
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3425 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;Total ram usage:       18 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:    6
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_dtoa
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text23
  3440  000750                     __ptext23:
  3441                           	opt callstack 0
  3442  000750                     ___aomod:
  3443                           	opt callstack 20
  3444                           
  3445                           ;incstack = 0
  3446  000750  0E00               	movlw	0
  3447  000752  6E21               	movwf	___aomod@sign,c
  3448  000754  0100               	movlb	0	; () banked
  3449  000756  AF67               	btfss	(___aomod@dividend+7)& (0+255),7,b
  3450  000758  D012               	goto	l2933
  3451                           
  3452                           ; BSR set to: 0
  3453  00075A  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  3454  00075C  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  3455  00075E  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  3456  000760  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  3457  000762  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  3458  000764  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  3459  000766  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  3460  000768  6D60               	negf	___aomod@dividend& (0+255),b
  3461  00076A  0E00               	movlw	0
  3462  00076C  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3463  00076E  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3464  000770  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3465  000772  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3466  000774  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3467  000776  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3468  000778  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3469                           
  3470                           ; BSR set to: 0
  3471  00077A  0E01               	movlw	1
  3472  00077C  6E21               	movwf	___aomod@sign,c
  3473  00077E                     l2933:
  3474                           
  3475                           ; BSR set to: 0
  3476  00077E  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3477  000780  D010               	goto	l2937
  3478                           
  3479                           ; BSR set to: 0
  3480  000782  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3481  000784  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3482  000786  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3483  000788  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3484  00078A  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3485  00078C  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3486  00078E  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  3487  000790  6D68               	negf	___aomod@divisor& (0+255),b
  3488  000792  0E00               	movlw	0
  3489  000794  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3490  000796  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3491  000798  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3492  00079A  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3493  00079C  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3494  00079E  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3495  0007A0  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3496  0007A2                     l2937:
  3497                           
  3498                           ; BSR set to: 0
  3499  0007A2  5168               	movf	___aomod@divisor& (0+255),w,b
  3500  0007A4  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3501  0007A6  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3502  0007A8  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3503  0007AA  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3504  0007AC  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3505  0007AE  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3506  0007B0  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3507  0007B2  B4D8               	btfsc	status,2,c
  3508  0007B4  D03C               	goto	l2953
  3509                           
  3510                           ; BSR set to: 0
  3511  0007B6  0E01               	movlw	1
  3512  0007B8  6E20               	movwf	___aomod@counter,c
  3513  0007BA  D00A               	goto	l2943
  3514  0007BC                     l2941:
  3515                           
  3516                           ; BSR set to: 0
  3517  0007BC  90D8               	bcf	status,0,c
  3518  0007BE  3768               	rlcf	___aomod@divisor& (0+255),f,b
  3519  0007C0  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3520  0007C2  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3521  0007C4  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3522  0007C6  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3523  0007C8  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3524  0007CA  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3525  0007CC  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3526  0007CE  2A20               	incf	___aomod@counter,f,c
  3527  0007D0                     l2943:
  3528                           
  3529                           ; BSR set to: 0
  3530  0007D0  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3531  0007D2  D7F4               	goto	l2941
  3532  0007D4                     u2510:
  3533                           
  3534                           ; BSR set to: 0
  3535  0007D4  5168               	movf	___aomod@divisor& (0+255),w,b
  3536  0007D6  5D60               	subwf	___aomod@dividend& (0+255),w,b
  3537  0007D8  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  3538  0007DA  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3539  0007DC  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3540  0007DE  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3541  0007E0  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3542  0007E2  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3543  0007E4  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3544  0007E6  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3545  0007E8  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3546  0007EA  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3547  0007EC  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3548  0007EE  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3549  0007F0  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3550  0007F2  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3551  0007F4  A0D8               	btfss	status,0,c
  3552  0007F6  D010               	goto	l2949
  3553                           
  3554                           ; BSR set to: 0
  3555  0007F8  5168               	movf	___aomod@divisor& (0+255),w,b
  3556  0007FA  5F60               	subwf	___aomod@dividend& (0+255),f,b
  3557  0007FC  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  3558  0007FE  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3559  000800  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3560  000802  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3561  000804  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3562  000806  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3563  000808  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3564  00080A  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3565  00080C  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3566  00080E  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3567  000810  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3568  000812  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3569  000814  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3570  000816  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3571  000818                     l2949:
  3572                           
  3573                           ; BSR set to: 0
  3574  000818  90D8               	bcf	status,0,c
  3575  00081A  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3576  00081C  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3577  00081E  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3578  000820  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3579  000822  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3580  000824  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3581  000826  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3582  000828  3368               	rrcf	___aomod@divisor& (0+255),f,b
  3583                           
  3584                           ; BSR set to: 0
  3585  00082A  2E20               	decfsz	___aomod@counter,f,c
  3586  00082C  D7D3               	goto	u2510
  3587  00082E                     l2953:
  3588                           
  3589                           ; BSR set to: 0
  3590  00082E  5021               	movf	___aomod@sign,w,c
  3591  000830  B4D8               	btfsc	status,2,c
  3592  000832  D010               	goto	l2957
  3593                           
  3594                           ; BSR set to: 0
  3595  000834  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  3596  000836  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  3597  000838  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  3598  00083A  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  3599  00083C  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  3600  00083E  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  3601  000840  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  3602  000842  6D60               	negf	___aomod@dividend& (0+255),b
  3603  000844  0E00               	movlw	0
  3604  000846  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3605  000848  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3606  00084A  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3607  00084C  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3608  00084E  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3609  000850  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3610  000852  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3611  000854                     l2957:
  3612                           
  3613                           ; BSR set to: 0
  3614  000854  C060  F060         	movff	___aomod@dividend,?___aomod
  3615  000858  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  3616  00085C  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  3617  000860  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  3618  000864  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  3619  000868  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  3620  00086C  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  3621  000870  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  3622                           
  3623                           ; BSR set to: 0
  3624  000874  0012               	return		;funcret
  3625  000876                     __end_of___aomod:
  3626                           	opt callstack 0
  3627                           
  3628 ;; *************** function ___aodiv *****************
  3629 ;; Defined at:
  3630 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  dividend        8    0[BANK0 ] long long 
  3633 ;;  divisor         8    8[BANK0 ] long long 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  quotient        8   18[BANK0 ] long long 
  3636 ;;  sign            1   17[BANK0 ] unsigned char 
  3637 ;;  counter         1   16[BANK0 ] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  8    0[BANK0 ] long long 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3647 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;Total ram usage:       26 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    6
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_dtoa
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text24
  3662  0004DC                     __ptext24:
  3663                           	opt callstack 0
  3664  0004DC                     ___aodiv:
  3665                           	opt callstack 20
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;incstack = 0
  3669  0004DC  0E00               	movlw	0
  3670  0004DE  0100               	movlb	0	; () banked
  3671  0004E0  6F71               	movwf	___aodiv@sign& (0+255),b
  3672                           
  3673                           ; BSR set to: 0
  3674  0004E2  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3675  0004E4  D012               	goto	l2889
  3676                           
  3677                           ; BSR set to: 0
  3678  0004E6  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3679  0004E8  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3680  0004EA  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3681  0004EC  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3682  0004EE  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3683  0004F0  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3684  0004F2  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3685  0004F4  6D68               	negf	___aodiv@divisor& (0+255),b
  3686  0004F6  0E00               	movlw	0
  3687  0004F8  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3688  0004FA  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3689  0004FC  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3690  0004FE  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3691  000500  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3692  000502  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3693  000504  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3694                           
  3695                           ; BSR set to: 0
  3696  000506  0E01               	movlw	1
  3697  000508  6F71               	movwf	___aodiv@sign& (0+255),b
  3698  00050A                     l2889:
  3699                           
  3700                           ; BSR set to: 0
  3701  00050A  AF67               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  3702  00050C  D012               	goto	l2895
  3703                           
  3704                           ; BSR set to: 0
  3705  00050E  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3706  000510  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3707  000512  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3708  000514  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3709  000516  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3710  000518  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3711  00051A  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3712  00051C  6D60               	negf	___aodiv@dividend& (0+255),b
  3713  00051E  0E00               	movlw	0
  3714  000520  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3715  000522  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3716  000524  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3717  000526  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3718  000528  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3719  00052A  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3720  00052C  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3721                           
  3722                           ; BSR set to: 0
  3723  00052E  0E01               	movlw	1
  3724  000530  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  3725  000532                     l2895:
  3726                           
  3727                           ; BSR set to: 0
  3728  000532  EE20  F072         	lfsr	2,___aodiv@quotient
  3729  000536  0E07               	movlw	7
  3730  000538                     u2431:
  3731  000538  6ADE               	clrf	postinc2,c
  3732  00053A  06E8               	decf	wreg,f,c
  3733  00053C  E2FD               	bc	u2431
  3734                           
  3735                           ; BSR set to: 0
  3736  00053E  5168               	movf	___aodiv@divisor& (0+255),w,b
  3737  000540  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3738  000542  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3739  000544  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3740  000546  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3741  000548  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3742  00054A  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3743  00054C  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3744  00054E  B4D8               	btfsc	status,2,c
  3745  000550  D046               	goto	l2917
  3746                           
  3747                           ; BSR set to: 0
  3748  000552  0E01               	movlw	1
  3749  000554  6F70               	movwf	___aodiv@counter& (0+255),b
  3750  000556  D00A               	goto	l2903
  3751  000558                     l2901:
  3752                           
  3753                           ; BSR set to: 0
  3754  000558  90D8               	bcf	status,0,c
  3755  00055A  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  3756  00055C  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3757  00055E  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3758  000560  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3759  000562  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3760  000564  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3761  000566  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3762  000568  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3763  00056A  2B70               	incf	___aodiv@counter& (0+255),f,b
  3764  00056C                     l2903:
  3765                           
  3766                           ; BSR set to: 0
  3767  00056C  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3768  00056E  D7F4               	goto	l2901
  3769  000570                     u2450:
  3770                           
  3771                           ; BSR set to: 0
  3772  000570  90D8               	bcf	status,0,c
  3773  000572  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  3774  000574  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3775  000576  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3776  000578  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3777  00057A  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3778  00057C  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3779  00057E  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3780  000580  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3781                           
  3782                           ; BSR set to: 0
  3783  000582  5168               	movf	___aodiv@divisor& (0+255),w,b
  3784  000584  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  3785  000586  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3786  000588  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3787  00058A  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3788  00058C  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3789  00058E  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3790  000590  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3791  000592  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3792  000594  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3793  000596  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3794  000598  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3795  00059A  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3796  00059C  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3797  00059E  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3798  0005A0  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3799  0005A2  A0D8               	btfss	status,0,c
  3800  0005A4  D011               	goto	l2913
  3801                           
  3802                           ; BSR set to: 0
  3803  0005A6  5168               	movf	___aodiv@divisor& (0+255),w,b
  3804  0005A8  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  3805  0005AA  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3806  0005AC  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3807  0005AE  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3808  0005B0  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3809  0005B2  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3810  0005B4  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3811  0005B6  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3812  0005B8  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3813  0005BA  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3814  0005BC  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3815  0005BE  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3816  0005C0  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3817  0005C2  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3818  0005C4  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3819                           
  3820                           ; BSR set to: 0
  3821  0005C6  8172               	bsf	___aodiv@quotient& (0+255),0,b
  3822  0005C8                     l2913:
  3823                           
  3824                           ; BSR set to: 0
  3825  0005C8  90D8               	bcf	status,0,c
  3826  0005CA  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3827  0005CC  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3828  0005CE  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3829  0005D0  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3830  0005D2  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3831  0005D4  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3832  0005D6  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3833  0005D8  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  3834                           
  3835                           ; BSR set to: 0
  3836  0005DA  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  3837  0005DC  D7C9               	goto	u2450
  3838  0005DE                     l2917:
  3839                           
  3840                           ; BSR set to: 0
  3841  0005DE  5171               	movf	___aodiv@sign& (0+255),w,b
  3842  0005E0  B4D8               	btfsc	status,2,c
  3843  0005E2  D010               	goto	l2921
  3844                           
  3845                           ; BSR set to: 0
  3846  0005E4  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3847  0005E6  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3848  0005E8  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3849  0005EA  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3850  0005EC  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3851  0005EE  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3852  0005F0  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3853  0005F2  6D72               	negf	___aodiv@quotient& (0+255),b
  3854  0005F4  0E00               	movlw	0
  3855  0005F6  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3856  0005F8  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3857  0005FA  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3858  0005FC  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3859  0005FE  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3860  000600  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3861  000602  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3862  000604                     l2921:
  3863                           
  3864                           ; BSR set to: 0
  3865  000604  C072  F060         	movff	___aodiv@quotient,?___aodiv
  3866  000608  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  3867  00060C  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  3868  000610  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  3869  000614  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  3870  000618  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  3871  00061C  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  3872  000620  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  3873                           
  3874                           ; BSR set to: 0
  3875  000624  0012               	return		;funcret
  3876  000626                     __end_of___aodiv:
  3877                           	opt callstack 0
  3878                           
  3879 ;; *************** function _ctoa *****************
  3880 ;; Defined at:
  3881 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  3884 ;;		 -> NULL(0), 
  3885 ;;  c               1   29[BANK0 ] unsigned char 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  w               2   30[BANK0 ] int 
  3888 ;;  l               2    0        int 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  2   27[BANK0 ] int 
  3891 ;; Registers used:
  3892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3898 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;Total ram usage:        5 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:   11
  3905 ;; This function calls:
  3906 ;;		_pad
  3907 ;; This function is called by:
  3908 ;;		_vfpfcnvrt
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text25
  3913  000E34                     __ptext25:
  3914                           	opt callstack 0
  3915  000E34                     _ctoa:
  3916                           	opt callstack 16
  3917                           
  3918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;incstack = 0
  3922  000E34  5024               	movf	_width,w,c
  3923  000E36  1025               	iorwf	_width+1,w,c
  3924  000E38  A4D8               	btfss	status,2,c
  3925  000E3A  D005               	goto	l2965
  3926  000E3C  C024  F07E         	movff	_width,ctoa@w
  3927  000E40  C025  F07F         	movff	_width+1,ctoa@w+1
  3928  000E44  D007               	goto	l2967
  3929  000E46                     l2965:
  3930  000E46  0EFF               	movlw	255
  3931  000E48  2424               	addwf	_width,w,c
  3932  000E4A  0100               	movlb	0	; () banked
  3933  000E4C  6F7E               	movwf	ctoa@w& (0+255),b
  3934  000E4E  0EFF               	movlw	255
  3935  000E50  2025               	addwfc	_width+1,w,c
  3936  000E52  6F7F               	movwf	(ctoa@w+1)& (0+255),b
  3937  000E54                     l2967:
  3938                           
  3939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  3940  000E54  C07D  F0DE         	movff	ctoa@c,_dbuf
  3941                           
  3942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  3943  000E58  0E00               	movlw	0
  3944  000E5A  0100               	movlb	0	; () banked
  3945  000E5C  6FDF               	movwf	(_dbuf+1)& (0+255),b
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  3949  000E5E  C07B  F070         	movff	ctoa@fp,pad@fp
  3950  000E62  C07C  F071         	movff	ctoa@fp+1,pad@fp+1
  3951  000E66  0EDE               	movlw	low _dbuf
  3952  000E68  6F72               	movwf	pad@buf& (0+255),b
  3953  000E6A  0E00               	movlw	high _dbuf
  3954  000E6C  6F73               	movwf	(pad@buf+1)& (0+255),b
  3955  000E6E  C07E  F074         	movff	ctoa@w,pad@p
  3956  000E72  C07F  F075         	movff	ctoa@w+1,pad@p+1
  3957  000E76  ECA7  F004         	call	_pad	;wreg free
  3958  000E7A  C070  F07B         	movff	?_pad,?_ctoa
  3959  000E7E  C071  F07C         	movff	?_pad+1,?_ctoa+1
  3960  000E82  0012               	return		;funcret
  3961  000E84                     __end_of_ctoa:
  3962                           	opt callstack 0
  3963                           
  3964 ;; *************** function _pad *****************
  3965 ;; Defined at:
  3966 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3969 ;;		 -> NULL(0), 
  3970 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3971 ;;		 -> dbuf(32), 
  3972 ;;  p               2   20[BANK0 ] int 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  w               2   25[BANK0 ] int 
  3975 ;;  i               2   23[BANK0 ] int 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  2   16[BANK0 ] int 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3985 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;Total ram usage:       11 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:   10
  3992 ;; This function calls:
  3993 ;;		_fputc
  3994 ;;		_fputs
  3995 ;;		_strlen
  3996 ;; This function is called by:
  3997 ;;		_ctoa
  3998 ;;		_dtoa
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text26
  4003  00094E                     __ptext26:
  4004                           	opt callstack 0
  4005  00094E                     _pad:
  4006                           	opt callstack 16
  4007                           
  4008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4009                           
  4010                           ;incstack = 0
  4011  00094E  A026               	btfss	_flags,0,c
  4012  000950  D00A               	goto	l2859
  4013                           
  4014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4015  000952  C072  F069         	movff	pad@buf,fputs@s
  4016  000956  C073  F06A         	movff	pad@buf+1,fputs@s+1
  4017  00095A  C070  F06B         	movff	pad@fp,fputs@fp
  4018  00095E  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  4019  000962  EC84  F007         	call	_fputs	;wreg free
  4020  000966                     l2859:
  4021                           
  4022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4023  000966  0100               	movlb	0	; () banked
  4024  000968  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  4025  00096A  D005               	goto	l2863
  4026                           
  4027                           ; BSR set to: 0
  4028  00096C  C074  F079         	movff	pad@p,pad@w
  4029  000970  C075  F07A         	movff	pad@p+1,pad@w+1
  4030  000974  D004               	goto	l490
  4031  000976                     l2863:
  4032                           
  4033                           ; BSR set to: 0
  4034  000976  0E00               	movlw	0
  4035  000978  6F7A               	movwf	(pad@w+1)& (0+255),b
  4036  00097A  0E00               	movlw	0
  4037  00097C  6F79               	movwf	pad@w& (0+255),b
  4038  00097E                     l490:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4042  00097E  0E00               	movlw	0
  4043  000980  6F78               	movwf	(pad@i+1)& (0+255),b
  4044  000982  0E00               	movlw	0
  4045  000984  6F77               	movwf	pad@i& (0+255),b
  4046                           
  4047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4048  000986  D00D               	goto	l2869
  4049  000988                     l2865:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4053  000988  0E00               	movlw	0
  4054  00098A  6F61               	movwf	(fputc@c+1)& (0+255),b
  4055  00098C  0E20               	movlw	32
  4056  00098E  6F60               	movwf	fputc@c& (0+255),b
  4057  000990  C070  F062         	movff	pad@fp,fputc@fp
  4058  000994  C071  F063         	movff	pad@fp+1,fputc@fp+1
  4059  000998  ECFF  F005         	call	_fputc	;wreg free
  4060                           
  4061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4062  00099C  0100               	movlb	0	; () banked
  4063  00099E  4B77               	infsnz	pad@i& (0+255),f,b
  4064  0009A0  2B78               	incf	(pad@i+1)& (0+255),f,b
  4065  0009A2                     l2869:
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4069  0009A2  5179               	movf	pad@w& (0+255),w,b
  4070  0009A4  5D77               	subwf	pad@i& (0+255),w,b
  4071  0009A6  5178               	movf	(pad@i+1)& (0+255),w,b
  4072  0009A8  0A80               	xorlw	128
  4073  0009AA  6F76               	movwf	??_pad& (0+255),b
  4074  0009AC  517A               	movf	(pad@w+1)& (0+255),w,b
  4075  0009AE  0A80               	xorlw	128
  4076  0009B0  5976               	subwfb	??_pad& (0+255),w,b
  4077  0009B2  A0D8               	btfss	status,0,c
  4078  0009B4  D7E9               	goto	l2865
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4082  0009B6  B026               	btfsc	_flags,0,c
  4083  0009B8  D00A               	goto	l2873
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4087  0009BA  C072  F069         	movff	pad@buf,fputs@s
  4088  0009BE  C073  F06A         	movff	pad@buf+1,fputs@s+1
  4089  0009C2  C070  F06B         	movff	pad@fp,fputs@fp
  4090  0009C6  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  4091  0009CA  EC84  F007         	call	_fputs	;wreg free
  4092  0009CE                     l2873:
  4093                           
  4094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4095  0009CE  C072  F020         	movff	pad@buf,strlen@s
  4096  0009D2  C073  F021         	movff	pad@buf+1,strlen@s+1
  4097  0009D6  EC71  F008         	call	_strlen	;wreg free
  4098  0009DA  0100               	movlb	0	; () banked
  4099  0009DC  5179               	movf	pad@w& (0+255),w,b
  4100  0009DE  2420               	addwf	?_strlen,w,c
  4101  0009E0  6F70               	movwf	?_pad& (0+255),b
  4102  0009E2  517A               	movf	(pad@w+1)& (0+255),w,b
  4103  0009E4  2021               	addwfc	?_strlen+1,w,c
  4104  0009E6  6F71               	movwf	(?_pad+1)& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107  0009E8  0012               	return		;funcret
  4108  0009EA                     __end_of_pad:
  4109                           	opt callstack 0
  4110                           
  4111 ;; *************** function _strlen *****************
  4112 ;; Defined at:
  4113 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  s               2   31[COMRAM] PTR const unsigned char 
  4116 ;;		 -> dbuf(32), 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  a               2   33[COMRAM] PTR const unsigned char 
  4119 ;;		 -> dbuf(32), 
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  2   31[COMRAM] unsigned int 
  4122 ;; Registers used:
  4123 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;Total ram usage:        4 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    6
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_pad
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text27
  4144  0010E2                     __ptext27:
  4145                           	opt callstack 0
  4146  0010E2                     _strlen:
  4147                           	opt callstack 19
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;incstack = 0
  4151  0010E2  C020  F022         	movff	strlen@s,strlen@a
  4152  0010E6  C021  F023         	movff	strlen@s+1,strlen@a+1
  4153  0010EA  D002               	goto	l2849
  4154  0010EC                     l2847:
  4155  0010EC  4A20               	infsnz	strlen@s,f,c
  4156  0010EE  2A21               	incf	strlen@s+1,f,c
  4157  0010F0                     l2849:
  4158  0010F0  C020  FFD9         	movff	strlen@s,fsr2l
  4159  0010F4  C021  FFDA         	movff	strlen@s+1,fsr2h
  4160  0010F8  50DF               	movf	indf2,w,c
  4161  0010FA  A4D8               	btfss	status,2,c
  4162  0010FC  D7F7               	goto	l2847
  4163  0010FE  5022               	movf	strlen@a,w,c
  4164  001100  5C20               	subwf	strlen@s,w,c
  4165  001102  6E20               	movwf	?_strlen,c
  4166  001104  5023               	movf	strlen@a+1,w,c
  4167  001106  5821               	subwfb	strlen@s+1,w,c
  4168  001108  6E21               	movwf	?_strlen+1,c
  4169  00110A  0012               	return		;funcret
  4170  00110C                     __end_of_strlen:
  4171                           	opt callstack 0
  4172                           
  4173 ;; *************** function _fputs *****************
  4174 ;; Defined at:
  4175 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4178 ;;		 -> dbuf(32), 
  4179 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4180 ;;		 -> NULL(0), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  i               2   14[BANK0 ] int 
  4183 ;;  c               1   13[BANK0 ] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  2    9[BANK0 ] int 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4193 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;Total ram usage:        7 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    9
  4200 ;; This function calls:
  4201 ;;		_fputc
  4202 ;; This function is called by:
  4203 ;;		_pad
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text28
  4208  000F08                     __ptext28:
  4209                           	opt callstack 0
  4210  000F08                     _fputs:
  4211                           	opt callstack 16
  4212                           
  4213                           ;incstack = 0
  4214  000F08  0E00               	movlw	0
  4215  000F0A  0100               	movlb	0	; () banked
  4216  000F0C  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4217  000F0E  0E00               	movlw	0
  4218  000F10  6F6E               	movwf	fputs@i& (0+255),b
  4219  000F12  D00C               	goto	l2843
  4220  000F14                     l2839:
  4221                           
  4222                           ; BSR set to: 0
  4223  000F14  C06D  F060         	movff	fputs@c,fputc@c
  4224  000F18  6B61               	clrf	(fputc@c+1)& (0+255),b
  4225  000F1A  C06B  F062         	movff	fputs@fp,fputc@fp
  4226  000F1E  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  4227  000F22  ECFF  F005         	call	_fputc	;wreg free
  4228  000F26  0100               	movlb	0	; () banked
  4229  000F28  4B6E               	infsnz	fputs@i& (0+255),f,b
  4230  000F2A  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4231  000F2C                     l2843:
  4232                           
  4233                           ; BSR set to: 0
  4234  000F2C  516E               	movf	fputs@i& (0+255),w,b
  4235  000F2E  2569               	addwf	fputs@s& (0+255),w,b
  4236  000F30  6ED9               	movwf	fsr2l,c
  4237  000F32  516F               	movf	(fputs@i+1)& (0+255),w,b
  4238  000F34  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4239  000F36  6EDA               	movwf	fsr2h,c
  4240  000F38  50DF               	movf	indf2,w,c
  4241  000F3A  6F6D               	movwf	fputs@c& (0+255),b
  4242  000F3C  516D               	movf	fputs@c& (0+255),w,b
  4243  000F3E  B4D8               	btfsc	status,2,c
  4244  000F40  0012               	return	
  4245  000F42  D7E8               	goto	l2839
  4246  000F44                     __end_of_fputs:
  4247                           	opt callstack 0
  4248                           
  4249 ;; *************** function _fputc *****************
  4250 ;; Defined at:
  4251 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  c               2    0[BANK0 ] int 
  4254 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4255 ;;		 -> NULL(0), 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2    0[BANK0 ] int 
  4260 ;; Registers used:
  4261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;Total ram usage:        9 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    8
  4274 ;; This function calls:
  4275 ;;		_putch
  4276 ;; This function is called by:
  4277 ;;		_pad
  4278 ;;		_vfpfcnvrt
  4279 ;;		_fputs
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text29
  4284  000BFE                     __ptext29:
  4285                           	opt callstack 0
  4286  000BFE                     _fputc:
  4287                           	opt callstack 19
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;incstack = 0
  4291  000BFE  0100               	movlb	0	; () banked
  4292  000C00  5162               	movf	fputc@fp& (0+255),w,b
  4293  000C02  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4294  000C04  B4D8               	btfsc	status,2,c
  4295  000C06  D004               	goto	u2310
  4296                           
  4297                           ; BSR set to: 0
  4298  000C08  5162               	movf	fputc@fp& (0+255),w,b
  4299  000C0A  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4300  000C0C  A4D8               	btfss	status,2,c
  4301  000C0E  D004               	goto	l2829
  4302  000C10                     u2310:
  4303                           
  4304                           ; BSR set to: 0
  4305  000C10  5160               	movf	fputc@c& (0+255),w,b
  4306  000C12  EC5F  F009         	call	_putch
  4307  000C16  0012               	return	
  4308  000C18                     l2829:
  4309                           
  4310                           ; BSR set to: 0
  4311  000C18  EE20 F004          	lfsr	2,4
  4312  000C1C  5162               	movf	fputc@fp& (0+255),w,b
  4313  000C1E  26D9               	addwf	fsr2l,f,c
  4314  000C20  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4315  000C22  22DA               	addwfc	fsr2h,f,c
  4316  000C24  50DE               	movf	postinc2,w,c
  4317  000C26  10DE               	iorwf	postinc2,w,c
  4318  000C28  B4D8               	btfsc	status,2,c
  4319  000C2A  D016               	goto	u2330
  4320                           
  4321                           ; BSR set to: 0
  4322  000C2C  EE20 F004          	lfsr	2,4
  4323  000C30  5162               	movf	fputc@fp& (0+255),w,b
  4324  000C32  26D9               	addwf	fsr2l,f,c
  4325  000C34  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4326  000C36  22DA               	addwfc	fsr2h,f,c
  4327  000C38  EE10 F002          	lfsr	1,2
  4328  000C3C  5162               	movf	fputc@fp& (0+255),w,b
  4329  000C3E  26E1               	addwf	fsr1l,f,c
  4330  000C40  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4331  000C42  22E2               	addwfc	fsr1h,f,c
  4332  000C44  50DE               	movf	postinc2,w,c
  4333  000C46  5CE6               	subwf	postinc1,w,c
  4334  000C48  50E6               	movf	postinc1,w,c
  4335  000C4A  0A80               	xorlw	128
  4336  000C4C  6F68               	movwf	(??_fputc+4)& (0+255),b
  4337  000C4E  50DE               	movf	postinc2,w,c
  4338  000C50  0A80               	xorlw	128
  4339  000C52  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4340  000C54  B0D8               	btfsc	status,0,c
  4341  000C56  0012               	return	
  4342  000C58                     u2330:
  4343                           
  4344                           ; BSR set to: 0
  4345  000C58  EE20 F002          	lfsr	2,2
  4346  000C5C  5162               	movf	fputc@fp& (0+255),w,b
  4347  000C5E  26D9               	addwf	fsr2l,f,c
  4348  000C60  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4349  000C62  22DA               	addwfc	fsr2h,f,c
  4350  000C64  2ADE               	incf	postinc2,f,c
  4351  000C66  0E00               	movlw	0
  4352  000C68  22DD               	addwfc	postdec2,f,c
  4353  000C6A  0012               	return		;funcret
  4354  000C6C                     __end_of_fputc:
  4355                           	opt callstack 0
  4356                           
  4357 ;; *************** function _putch *****************
  4358 ;; Defined at:
  4359 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  txData          1    wreg     unsigned char 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  txData          1   32[COMRAM] unsigned char 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;Total ram usage:        1 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    7
  4380 ;; This function calls:
  4381 ;;		_EUSART1_Write
  4382 ;; This function is called by:
  4383 ;;		_fputc
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text30
  4388  0012BE                     __ptext30:
  4389                           	opt callstack 0
  4390  0012BE                     _putch:
  4391                           	opt callstack 19
  4392                           
  4393                           ;incstack = 0
  4394                           ;putch@txData stored from wreg
  4395  0012BE  6E21               	movwf	putch@txData,c
  4396                           
  4397                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  4398  0012C0  5021               	movf	putch@txData,w,c
  4399  0012C2  ECF8  F007         	call	_EUSART1_Write
  4400  0012C6  0012               	return		;funcret
  4401  0012C8                     __end_of_putch:
  4402                           	opt callstack 0
  4403                           
  4404 ;; *************** function _EUSART1_Write *****************
  4405 ;; Defined at:
  4406 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  txData          1    wreg     unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  txData          1   31[COMRAM] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;Total ram usage:        1 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    6
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_putch
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text31
  4435  000FF0                     __ptext31:
  4436                           	opt callstack 0
  4437  000FF0                     _EUSART1_Write:
  4438                           	opt callstack 19
  4439                           
  4440                           ;incstack = 0
  4441                           ;EUSART1_Write@txData stored from wreg
  4442  000FF0  6E20               	movwf	EUSART1_Write@txData,c
  4443  000FF2                     
  4444                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  4445                           
  4446                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  4447  000FF2  503A               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  4448  000FF4  B4D8               	btfsc	status,2,c
  4449  000FF6  D7FD               	goto	l2803
  4450                           
  4451                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE1bits.TX1IE)
  4452  000FF8  B89D               	btfsc	3997,4,c	;volatile
  4453  000FFA  D003               	goto	l413
  4454                           
  4455                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          XREG1 = txData;
  4456  000FFC  C020  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4457                           
  4458                           ;mcc_generated_files/eusart1.c: 182:     }
  4459  001000  D010               	goto	l2819
  4460  001002                     l413:
  4461                           
  4462                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE1bits.TX1IE = 0;
  4463  001002  989D               	bcf	3997,4,c	;volatile
  4464                           
  4465                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  4466  001004  0ED2               	movlw	low _eusart1TxBuffer
  4467  001006  243C               	addwf	_eusart1TxHead,w,c	;volatile
  4468  001008  6ED9               	movwf	fsr2l,c
  4469  00100A  6ADA               	clrf	fsr2h,c
  4470  00100C  0E00               	movlw	high _eusart1TxBuffer
  4471  00100E  22DA               	addwfc	fsr2h,f,c
  4472  001010  C020  FFDF         	movff	EUSART1_Write@txData,indf2
  4473  001014  2A3C               	incf	_eusart1TxHead,f,c	;volatile
  4474                           
  4475                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  4476  001016  0E07               	movlw	7
  4477  001018  643C               	cpfsgt	_eusart1TxHead,c	;volatile
  4478  00101A  D002               	goto	l2817
  4479                           
  4480                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  4481  00101C  0E00               	movlw	0
  4482  00101E  6E3C               	movwf	_eusart1TxHead,c	;volatile
  4483  001020                     l2817:
  4484                           
  4485                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  4486  001020  063A               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  4487  001022                     l2819:
  4488                           
  4489                           ;mcc_generated_files/eusart1.c: 193:     PIE1bits.TX1IE = 1;
  4490  001022  889D               	bsf	3997,4,c	;volatile
  4491  001024  0012               	return		;funcret
  4492  001026                     __end_of_EUSART1_Write:
  4493                           	opt callstack 0
  4494                           
  4495 ;; *************** function _EUSART1_is_rx_ready *****************
  4496 ;; Defined at:
  4497 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      _Bool 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;Total ram usage:        0 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    6
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_ReadLine
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text32
  4526  001266                     __ptext32:
  4527                           	opt callstack 0
  4528  001266                     _EUSART1_is_rx_ready:
  4529                           	opt callstack 23
  4530                           
  4531                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  4532                           
  4533                           ;incstack = 0
  4534  001266  5037               	movf	_eusart1RxCount,w,c	;volatile
  4535  001268  B4D8               	btfsc	status,2,c
  4536  00126A  D002               	goto	u2770
  4537  00126C  0E01               	movlw	1
  4538  00126E  0012               	return	
  4539  001270                     u2770:
  4540  001270  0E00               	movlw	0
  4541  001272  0012               	return		;funcret
  4542  001274                     __end_of_EUSART1_is_rx_ready:
  4543                           	opt callstack 0
  4544                           
  4545 ;; *************** function _EUSART1_Read *****************
  4546 ;; Defined at:
  4547 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  readValue       1   31[COMRAM] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      unsigned char 
  4554 ;; Registers used:
  4555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;Total ram usage:        1 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    6
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_ReadLine
  4572 ;;		_getch
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text33
  4577  000F44                     __ptext33:
  4578                           	opt callstack 0
  4579  000F44                     _EUSART1_Read:
  4580                           	opt callstack 23
  4581                           
  4582                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  4583                           
  4584                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  4585                           
  4586                           ;incstack = 0
  4587  000F44  5037               	movf	_eusart1RxCount,w,c	;volatile
  4588  000F46  B4D8               	btfsc	status,2,c
  4589  000F48  D7FD               	goto	_EUSART1_Read
  4590                           
  4591                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  4592  000F4A  0E00               	movlw	low _eusart1RxStatusBuffer
  4593  000F4C  2438               	addwf	_eusart1RxTail,w,c	;volatile
  4594  000F4E  6ED9               	movwf	fsr2l,c
  4595  000F50  6ADA               	clrf	fsr2h,c
  4596  000F52  0E01               	movlw	high _eusart1RxStatusBuffer
  4597  000F54  22DA               	addwfc	fsr2h,f,c
  4598  000F56  50DF               	movf	indf2,w,c
  4599  000F58  6E36               	movwf	_eusart1RxLastError,c	;volatile
  4600                           
  4601                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  4602  000F5A  0E40               	movlw	low _eusart1RxBuffer
  4603  000F5C  2438               	addwf	_eusart1RxTail,w,c	;volatile
  4604  000F5E  6ED9               	movwf	fsr2l,c
  4605  000F60  6ADA               	clrf	fsr2h,c
  4606  000F62  0E01               	movlw	high _eusart1RxBuffer
  4607  000F64  22DA               	addwfc	fsr2h,f,c
  4608  000F66  50DF               	movf	indf2,w,c
  4609  000F68  6E20               	movwf	EUSART1_Read@readValue,c
  4610  000F6A  2A38               	incf	_eusart1RxTail,f,c	;volatile
  4611                           
  4612                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  4613  000F6C  0E3F               	movlw	63
  4614  000F6E  6438               	cpfsgt	_eusart1RxTail,c	;volatile
  4615  000F70  D002               	goto	l3179
  4616                           
  4617                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  4618  000F72  0E00               	movlw	0
  4619  000F74  6E38               	movwf	_eusart1RxTail,c	;volatile
  4620  000F76                     l3179:
  4621                           
  4622                           ;mcc_generated_files/eusart1.c: 166:     PIE1bits.RC1IE = 0;
  4623  000F76  9A9D               	bcf	3997,5,c	;volatile
  4624                           
  4625                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  4626  000F78  0637               	decf	_eusart1RxCount,f,c	;volatile
  4627                           
  4628                           ;mcc_generated_files/eusart1.c: 168:     PIE1bits.RC1IE = 1;
  4629  000F7A  8A9D               	bsf	3997,5,c	;volatile
  4630                           
  4631                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  4632  000F7C  5020               	movf	EUSART1_Read@readValue,w,c
  4633  000F7E  0012               	return		;funcret
  4634  000F80                     __end_of_EUSART1_Read:
  4635                           	opt callstack 0
  4636                           
  4637 ;; *************** function _EUSART1_is_tx_ready *****************
  4638 ;; Defined at:
  4639 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;		None
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;		None
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      _Bool 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;Total ram usage:        0 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; Hardware stack levels required when called:    6
  4660 ;; This function calls:
  4661 ;;		Nothing
  4662 ;; This function is called by:
  4663 ;;		_main
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text34
  4668  001274                     __ptext34:
  4669                           	opt callstack 0
  4670  001274                     _EUSART1_is_tx_ready:
  4671                           	opt callstack 24
  4672                           
  4673                           ;mcc_generated_files/eusart1.c: 134:     return (eusart1TxBufferRemaining ? 1 : 0);
  4674                           
  4675                           ;incstack = 0
  4676  001274  503A               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  4677  001276  B4D8               	btfsc	status,2,c
  4678  001278  D002               	goto	u2810
  4679  00127A  0E01               	movlw	1
  4680  00127C  0012               	return	
  4681  00127E                     u2810:
  4682  00127E  0E00               	movlw	0
  4683  001280  0012               	return		;funcret
  4684  001282                     __end_of_EUSART1_is_tx_ready:
  4685                           	opt callstack 0
  4686                           
  4687 ;; *************** function _INTERRUPT_InterruptManager *****************
  4688 ;; Defined at:
  4689 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;		None
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;		None
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;Total ram usage:        8 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    5
  4710 ;; This function calls:
  4711 ;;		Absolute function
  4712 ;;		_ADC_ISR
  4713 ;;		_EUSART1_Receive_ISR
  4714 ;;		_EUSART1_Transmit_ISR
  4715 ;;		_TMR2_ISR
  4716 ;; This function is called by:
  4717 ;;		Interrupt level 2
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	intcode
  4722  000008                     __pintcode:
  4723                           	opt callstack 0
  4724  000008                     _INTERRUPT_InterruptManager:
  4725                           	opt callstack 15
  4726                           
  4727                           ;incstack = 0
  4728  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4729  00000A  CFFA F018          	movff	pclath,??_INTERRUPT_InterruptManager
  4730  00000E  CFFB F019          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4731  000012  CFD9 F01A          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  4732  000016  CFDA F01B          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  4733  00001A  CFF6 F01C          	movff	tblptrl,??_INTERRUPT_InterruptManager+4
  4734  00001E  CFF7 F01D          	movff	tblptrh,??_INTERRUPT_InterruptManager+5
  4735  000022  CFF8 F01E          	movff	tblptru,??_INTERRUPT_InterruptManager+6
  4736  000026  CFF5 F01F          	movff	tablat,??_INTERRUPT_InterruptManager+7
  4737                           
  4738                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  4739  00002A  ACF2               	btfss	4082,6,c	;volatile
  4740  00002C  D024               	goto	i2l143
  4741                           
  4742                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  4743  00002E  BC9D               	btfsc	3997,6,c	;volatile
  4744  000030  AC9E               	btfss	3998,6,c	;volatile
  4745  000032  D003               	goto	i2l140
  4746                           
  4747                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             ADC_ISR();
  4748  000034  EC70  F009         	call	_ADC_ISR	;wreg free
  4749                           
  4750                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  4751  000038  D01E               	goto	i2l143
  4752  00003A                     i2l140:
  4753  00003A  B89D               	btfsc	3997,4,c	;volatile
  4754  00003C  A89E               	btfss	3998,4,c	;volatile
  4755  00003E  D008               	goto	i2l142
  4756                           
  4757                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
  4758  000040  D801               	call	i2u217_48
  4759  000042  D019               	goto	i2l143
  4760  000044                     i2u217_48:
  4761  000044  0005               	push	
  4762  000046  6EFA               	movwf	pclath,c
  4763  000048  5030               	movf	_EUSART1_TxDefaultInterruptHandler,w,c
  4764  00004A  6EFD               	movwf	tosl,c
  4765  00004C  5031               	movf	_EUSART1_TxDefaultInterruptHandler+1,w,c
  4766  00004E  D00A               	goto	L3
  4767  000050                     i2l142:
  4768  000050  BA9D               	btfsc	3997,5,c	;volatile
  4769  000052  AA9E               	btfss	3998,5,c	;volatile
  4770  000054  D00B               	goto	i2l144
  4771                           
  4772                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
  4773  000056  D801               	call	i2u220_48
  4774  000058  D00E               	goto	i2l143
  4775  00005A                     i2u220_48:
  4776  00005A  0005               	push	
  4777  00005C  6EFA               	movwf	pclath,c
  4778  00005E  502E               	movf	_EUSART1_RxDefaultInterruptHandler,w,c
  4779  000060  6EFD               	movwf	tosl,c
  4780  000062  502F               	movf	_EUSART1_RxDefaultInterruptHandler+1,w,c
  4781  000064                     L3:
  4782  000064  6EFE               	movwf	tosh,c
  4783  000066  6AFF               	clrf	tosu,c
  4784  000068  50FA               	movf	pclath,w,c
  4785  00006A  0012               	return		;indir
  4786  00006C                     i2l144:
  4787  00006C  B29D               	btfsc	3997,1,c	;volatile
  4788  00006E  A29E               	btfss	3998,1,c	;volatile
  4789  000070  D002               	goto	i2l143
  4790                           
  4791                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR2_ISR();
  4792  000072  ECC4  F008         	call	_TMR2_ISR	;wreg free
  4793  000076                     i2l143:
  4794  000076  C01F  FFF5         	movff	??_INTERRUPT_InterruptManager+7,tablat
  4795  00007A  C01E  FFF8         	movff	??_INTERRUPT_InterruptManager+6,tblptru
  4796  00007E  C01D  FFF7         	movff	??_INTERRUPT_InterruptManager+5,tblptrh
  4797  000082  C01C  FFF6         	movff	??_INTERRUPT_InterruptManager+4,tblptrl
  4798  000086  C01B  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  4799  00008A  C01A  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  4800  00008E  C019  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4801  000092  C018  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4802  000096  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4803  000098  0011               	retfie		f
  4804  00009A                     __end_of_INTERRUPT_InterruptManager:
  4805                           	opt callstack 0
  4806                           
  4807 ;; *************** function _TMR2_ISR *****************
  4808 ;; Defined at:
  4809 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;		None
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;Total ram usage:        0 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    4
  4830 ;; This function calls:
  4831 ;;		_TMR2_CallBack
  4832 ;; This function is called by:
  4833 ;;		_INTERRUPT_InterruptManager
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text36
  4838  001188                     __ptext36:
  4839                           	opt callstack 0
  4840  001188                     _TMR2_ISR:
  4841                           	opt callstack 15
  4842                           
  4843                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
  4844                           
  4845                           ;incstack = 0
  4846  001188  929E               	bcf	3998,1,c	;volatile
  4847                           
  4848                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 10)
  4849  00118A  4A32               	infsnz	TMR2_ISR@CountCallBack,f,c	;volatile
  4850  00118C  2A33               	incf	TMR2_ISR@CountCallBack+1,f,c	;volatile
  4851  00118E  5033               	movf	TMR2_ISR@CountCallBack+1,w,c	;volatile
  4852  001190  E104               	bnz	i2u194_40
  4853  001192  0E0A               	movlw	10
  4854  001194  5C32               	subwf	TMR2_ISR@CountCallBack,w,c	;volatile
  4855  001196  A0D8               	btfss	status,0,c
  4856  001198  0012               	return	
  4857  00119A                     i2u194_40:
  4858                           
  4859                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
  4860  00119A  EC02  F009         	call	_TMR2_CallBack	;wreg free
  4861                           
  4862                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
  4863  00119E  0E00               	movlw	0
  4864  0011A0  6E33               	movwf	TMR2_ISR@CountCallBack+1,c	;volatile
  4865  0011A2  0E00               	movlw	0
  4866  0011A4  6E32               	movwf	TMR2_ISR@CountCallBack,c	;volatile
  4867  0011A6  0012               	return		;funcret
  4868  0011A8                     __end_of_TMR2_ISR:
  4869                           	opt callstack 0
  4870                           
  4871 ;; *************** function _TMR2_CallBack *****************
  4872 ;; Defined at:
  4873 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;Total ram usage:        0 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    3
  4894 ;; This function calls:
  4895 ;;		Absolute function
  4896 ;;		_TMR2_DefaultInterruptHandler
  4897 ;;		_TimerInterrupt
  4898 ;; This function is called by:
  4899 ;;		_TMR2_ISR
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text37
  4904  001204                     __ptext37:
  4905                           	opt callstack 0
  4906  001204                     _TMR2_CallBack:
  4907                           	opt callstack 15
  4908                           
  4909                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
  4910                           
  4911                           ;incstack = 0
  4912  001204  5034               	movf	_TMR2_InterruptHandler,w,c
  4913  001206  1035               	iorwf	_TMR2_InterruptHandler+1,w,c
  4914  001208  B4D8               	btfsc	status,2,c
  4915  00120A  0012               	return	
  4916                           
  4917                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
  4918  00120C  D801               	call	i2u189_48
  4919  00120E  0012               	return	
  4920  001210                     i2u189_48:
  4921  001210  0005               	push	
  4922  001212  6EFA               	movwf	pclath,c
  4923  001214  5034               	movf	_TMR2_InterruptHandler,w,c
  4924  001216  6EFD               	movwf	tosl,c
  4925  001218  5035               	movf	_TMR2_InterruptHandler+1,w,c
  4926  00121A  6EFE               	movwf	tosh,c
  4927  00121C  6AFF               	clrf	tosu,c
  4928  00121E  50FA               	movf	pclath,w,c
  4929  001220  0012               	return		;indir
  4930  001222                     __end_of_TMR2_CallBack:
  4931                           	opt callstack 0
  4932                           
  4933 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4934 ;; Defined at:
  4935 ;;		line 151 in file "mcc_generated_files/tmr2.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		None
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_TMR2_Initialize
  4959 ;;		_TMR2_CallBack
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text38
  4964  0012E6                     __ptext38:
  4965                           	opt callstack 0
  4966  0012E6                     _TMR2_DefaultInterruptHandler:
  4967                           	opt callstack 17
  4968                           
  4969                           ;incstack = 0
  4970  0012E6  0012               	return		;funcret
  4971  0012E8                     __end_of_TMR2_DefaultInterruptHandler:
  4972                           	opt callstack 0
  4973                           
  4974 ;; *************** function _TimerInterrupt *****************
  4975 ;; Defined at:
  4976 ;;		line 156 in file "main.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;		None
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;		None
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;Total ram usage:        0 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    2
  4997 ;; This function calls:
  4998 ;;		_UpdateDisplay
  4999 ;;		_UpdateTemprature
  5000 ;; This function is called by:
  5001 ;;		_main
  5002 ;;		_TMR2_CallBack
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           	psect	text39
  5007  001222                     __ptext39:
  5008                           	opt callstack 0
  5009  001222                     _TimerInterrupt:
  5010                           	opt callstack 15
  5011                           
  5012                           ;main.c: 159:     if(updateTempratureCounter == 100)
  5013                           
  5014                           ;incstack = 0
  5015  001222  0E64               	movlw	100
  5016  001224  183F               	xorwf	_updateTempratureCounter,w,c
  5017  001226  A4D8               	btfss	status,2,c
  5018  001228  D005               	goto	i2l2523
  5019                           
  5020                           ;main.c: 160:     {;main.c: 161:         UpdateTemprature();
  5021  00122A  EC3B  F004         	call	_UpdateTemprature	;wreg free
  5022                           
  5023                           ;main.c: 162:         updateTempratureCounter = 0;
  5024  00122E  0E00               	movlw	0
  5025  001230  6E3F               	movwf	_updateTempratureCounter,c
  5026                           
  5027                           ;main.c: 163:     }
  5028  001232  D001               	goto	i2l2525
  5029  001234                     i2l2523:
  5030                           
  5031                           ;main.c: 165:     {;main.c: 166:         updateTempratureCounter++;
  5032  001234  2A3F               	incf	_updateTempratureCounter,f,c
  5033  001236                     i2l2525:
  5034                           
  5035                           ;main.c: 170:     UpdateDisplay();
  5036  001236  EC63  F007         	call	_UpdateDisplay	;wreg free
  5037  00123A  0012               	return		;funcret
  5038  00123C                     __end_of_TimerInterrupt:
  5039                           	opt callstack 0
  5040                           
  5041 ;; *************** function _UpdateTemprature *****************
  5042 ;; Defined at:
  5043 ;;		line 209 in file "main.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  i               1   21[COMRAM] unsigned char 
  5048 ;;  sum             4   17[COMRAM] unsigned long 
  5049 ;;  temp_offset     2   15[COMRAM] unsigned short 
  5050 ;;  average         2   13[COMRAM] unsigned short 
  5051 ;;  roundingTest    1   22[COMRAM] unsigned char 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  1    wreg      void 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0, cstack
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5062 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;Total ram usage:       10 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    1
  5068 ;; This function calls:
  5069 ;;		_ADC_GetConversion
  5070 ;;		___lldiv
  5071 ;;		___llmod
  5072 ;;		___lwdiv
  5073 ;;		___lwmod
  5074 ;; This function is called by:
  5075 ;;		_TimerInterrupt
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text40
  5080  000876                     __ptext40:
  5081                           	opt callstack 0
  5082  000876                     _UpdateTemprature:
  5083                           	opt callstack 15
  5084                           
  5085                           ;main.c: 211:     uint32_t sum = 0;
  5086                           
  5087                           ;incstack = 0
  5088  000876  0E00               	movlw	0
  5089  000878  6E12               	movwf	UpdateTemprature@sum,c
  5090  00087A  0E00               	movlw	0
  5091  00087C  6E13               	movwf	UpdateTemprature@sum+1,c
  5092  00087E  0E00               	movlw	0
  5093  000880  6E14               	movwf	UpdateTemprature@sum+2,c
  5094  000882  0E00               	movlw	0
  5095  000884  6E15               	movwf	UpdateTemprature@sum+3,c
  5096                           
  5097                           ;main.c: 212:     for(uint8_t i = 0; i<100; i++)
  5098  000886  0E00               	movlw	0
  5099  000888  6E16               	movwf	UpdateTemprature@i,c
  5100  00088A                     i2l2429:
  5101                           
  5102                           ;main.c: 213:     {;main.c: 214:         sum += ADC_GetConversion(TempSensor);
  5103  00088A  0E0C               	movlw	12
  5104  00088C  EC2D  F008         	call	_ADC_GetConversion
  5105  000890  5001               	movf	?_ADC_GetConversion,w,c
  5106  000892  2612               	addwf	UpdateTemprature@sum,f,c
  5107  000894  5002               	movf	?_ADC_GetConversion+1,w,c
  5108  000896  2213               	addwfc	UpdateTemprature@sum+1,f,c
  5109  000898  0E00               	movlw	0
  5110  00089A  2214               	addwfc	UpdateTemprature@sum+2,f,c
  5111  00089C  0E00               	movlw	0
  5112  00089E  2215               	addwfc	UpdateTemprature@sum+3,f,c
  5113                           
  5114                           ;main.c: 215:     }
  5115  0008A0  2A16               	incf	UpdateTemprature@i,f,c
  5116  0008A2  0E63               	movlw	99
  5117  0008A4  6416               	cpfsgt	UpdateTemprature@i,c
  5118  0008A6  D7F1               	goto	i2l2429
  5119                           
  5120                           ;main.c: 217:     uint8_t roundingTest = sum % 100;
  5121  0008A8  C012  F001         	movff	UpdateTemprature@sum,___llmod@dividend
  5122  0008AC  C013  F002         	movff	UpdateTemprature@sum+1,___llmod@dividend+1
  5123  0008B0  C014  F003         	movff	UpdateTemprature@sum+2,___llmod@dividend+2
  5124  0008B4  C015  F004         	movff	UpdateTemprature@sum+3,___llmod@dividend+3
  5125  0008B8  0E64               	movlw	100
  5126  0008BA  6E05               	movwf	___llmod@divisor,c
  5127  0008BC  0E00               	movlw	0
  5128  0008BE  6E06               	movwf	___llmod@divisor+1,c
  5129  0008C0  0E00               	movlw	0
  5130  0008C2  6E07               	movwf	___llmod@divisor+2,c
  5131  0008C4  0E00               	movlw	0
  5132  0008C6  6E08               	movwf	___llmod@divisor+3,c
  5133  0008C8  EC36  F006         	call	___llmod	;wreg free
  5134  0008CC  5001               	movf	?___llmod,w,c
  5135  0008CE  6E17               	movwf	UpdateTemprature@roundingTest,c
  5136                           
  5137                           ;main.c: 218:     uint16_t average = sum/100;
  5138  0008D0  C012  F001         	movff	UpdateTemprature@sum,___lldiv@dividend
  5139  0008D4  C013  F002         	movff	UpdateTemprature@sum+1,___lldiv@dividend+1
  5140  0008D8  C014  F003         	movff	UpdateTemprature@sum+2,___lldiv@dividend+2
  5141  0008DC  C015  F004         	movff	UpdateTemprature@sum+3,___lldiv@dividend+3
  5142  0008E0  0E64               	movlw	100
  5143  0008E2  6E05               	movwf	___lldiv@divisor,c
  5144  0008E4  0E00               	movlw	0
  5145  0008E6  6E06               	movwf	___lldiv@divisor+1,c
  5146  0008E8  0E00               	movlw	0
  5147  0008EA  6E07               	movwf	___lldiv@divisor+2,c
  5148  0008EC  0E00               	movlw	0
  5149  0008EE  6E08               	movwf	___lldiv@divisor+3,c
  5150  0008F0  EC84  F005         	call	___lldiv	;wreg free
  5151  0008F4  C001  F00E         	movff	?___lldiv,UpdateTemprature@average
  5152  0008F8  C002  F00F         	movff	?___lldiv+1,UpdateTemprature@average+1
  5153                           
  5154                           ;main.c: 219:     if (roundingTest >= 50)
  5155  0008FC  0E31               	movlw	49
  5156  0008FE  6417               	cpfsgt	UpdateTemprature@roundingTest,c
  5157  000900  D002               	goto	i2l2441
  5158                           
  5159                           ;main.c: 220:     {;main.c: 221:         average++;
  5160  000902  4A0E               	infsnz	UpdateTemprature@average,f,c
  5161  000904  2A0F               	incf	UpdateTemprature@average+1,f,c
  5162  000906                     i2l2441:
  5163                           
  5164                           ;main.c: 224:     uint16_t temp_offset = average - 500;
  5165  000906  0E0C               	movlw	12
  5166  000908  240E               	addwf	UpdateTemprature@average,w,c
  5167  00090A  6E10               	movwf	UpdateTemprature@temp_offset,c
  5168  00090C  0EFE               	movlw	254
  5169  00090E  200F               	addwfc	UpdateTemprature@average+1,w,c
  5170  000910  6E11               	movwf	UpdateTemprature@temp_offset+1,c
  5171                           
  5172                           ;main.c: 226:     roundingTest = temp_offset % 10;
  5173  000912  C010  F001         	movff	UpdateTemprature@temp_offset,___lwmod@dividend
  5174  000916  C011  F002         	movff	UpdateTemprature@temp_offset+1,___lwmod@dividend+1
  5175  00091A  0E00               	movlw	0
  5176  00091C  6E04               	movwf	___lwmod@divisor+1,c
  5177  00091E  0E0A               	movlw	10
  5178  000920  6E03               	movwf	___lwmod@divisor,c
  5179  000922  EC42  F007         	call	___lwmod	;wreg free
  5180  000926  5001               	movf	?___lwmod,w,c
  5181  000928  6E17               	movwf	UpdateTemprature@roundingTest,c
  5182                           
  5183                           ;main.c: 227:     temperature = temp_offset /10;
  5184  00092A  C010  F001         	movff	UpdateTemprature@temp_offset,___lwdiv@dividend
  5185  00092E  C011  F002         	movff	UpdateTemprature@temp_offset+1,___lwdiv@dividend+1
  5186  000932  0E00               	movlw	0
  5187  000934  6E04               	movwf	___lwdiv@divisor+1,c
  5188  000936  0E0A               	movlw	10
  5189  000938  6E03               	movwf	___lwdiv@divisor,c
  5190  00093A  ECF1  F006         	call	___lwdiv	;wreg free
  5191  00093E  5001               	movf	?___lwdiv,w,c
  5192  000940  0100               	movlb	0	; () banked
  5193  000942  6FFE               	movwf	_temperature& (0+255),b
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;main.c: 228:     if (roundingTest >= 5)
  5197  000944  0E04               	movlw	4
  5198  000946  6417               	cpfsgt	UpdateTemprature@roundingTest,c
  5199  000948  0012               	return	
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;main.c: 229:     {;main.c: 230:         temperature++;
  5203  00094A  2BFE               	incf	_temperature& (0+255),f,b
  5204                           
  5205                           ; BSR set to: 0
  5206  00094C  0012               	return		;funcret
  5207  00094E                     __end_of_UpdateTemprature:
  5208                           	opt callstack 0
  5209                           
  5210 ;; *************** function ___lwmod *****************
  5211 ;; Defined at:
  5212 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  dividend        2    0[COMRAM] unsigned int 
  5215 ;;  divisor         2    2[COMRAM] unsigned int 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  counter         1    4[COMRAM] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  2    0[COMRAM] unsigned int 
  5220 ;; Registers used:
  5221 ;;		wreg, status,2, status,0
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;Total ram usage:        5 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_UpdateTemprature
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text41
  5241  000E84                     __ptext41:
  5242                           	opt callstack 0
  5243  000E84                     ___lwmod:
  5244                           	opt callstack 15
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;incstack = 0
  5248  000E84  5003               	movf	___lwmod@divisor,w,c
  5249  000E86  1004               	iorwf	___lwmod@divisor+1,w,c
  5250  000E88  B4D8               	btfsc	status,2,c
  5251  000E8A  D018               	goto	i2l1047
  5252  000E8C  0E01               	movlw	1
  5253  000E8E  6E05               	movwf	___lwmod@counter,c
  5254  000E90  D004               	goto	i2l2413
  5255  000E92                     i2l2411:
  5256  000E92  90D8               	bcf	status,0,c
  5257  000E94  3603               	rlcf	___lwmod@divisor,f,c
  5258  000E96  3604               	rlcf	___lwmod@divisor+1,f,c
  5259  000E98  2A05               	incf	___lwmod@counter,f,c
  5260  000E9A                     i2l2413:
  5261  000E9A  AE04               	btfss	___lwmod@divisor+1,7,c
  5262  000E9C  D7FA               	goto	i2l2411
  5263  000E9E                     i2u173_40:
  5264  000E9E  5003               	movf	___lwmod@divisor,w,c
  5265  000EA0  5C01               	subwf	___lwmod@dividend,w,c
  5266  000EA2  5004               	movf	___lwmod@divisor+1,w,c
  5267  000EA4  5802               	subwfb	___lwmod@dividend+1,w,c
  5268  000EA6  A0D8               	btfss	status,0,c
  5269  000EA8  D004               	goto	i2l2419
  5270  000EAA  5003               	movf	___lwmod@divisor,w,c
  5271  000EAC  5E01               	subwf	___lwmod@dividend,f,c
  5272  000EAE  5004               	movf	___lwmod@divisor+1,w,c
  5273  000EB0  5A02               	subwfb	___lwmod@dividend+1,f,c
  5274  000EB2                     i2l2419:
  5275  000EB2  90D8               	bcf	status,0,c
  5276  000EB4  3204               	rrcf	___lwmod@divisor+1,f,c
  5277  000EB6  3203               	rrcf	___lwmod@divisor,f,c
  5278  000EB8  2E05               	decfsz	___lwmod@counter,f,c
  5279  000EBA  D7F1               	goto	i2u173_40
  5280  000EBC                     i2l1047:
  5281  000EBC  C001  F001         	movff	___lwmod@dividend,?___lwmod
  5282  000EC0  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  5283  000EC4  0012               	return		;funcret
  5284  000EC6                     __end_of___lwmod:
  5285                           	opt callstack 0
  5286                           
  5287 ;; *************** function ___lwdiv *****************
  5288 ;; Defined at:
  5289 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  dividend        2    0[COMRAM] unsigned int 
  5292 ;;  divisor         2    2[COMRAM] unsigned int 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  quotient        2    4[COMRAM] unsigned int 
  5295 ;;  counter         1    6[COMRAM] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  2    0[COMRAM] unsigned int 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;Total ram usage:        7 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_UpdateTemprature
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text42
  5319  000DE2                     __ptext42:
  5320                           	opt callstack 0
  5321  000DE2                     ___lwdiv:
  5322                           	opt callstack 15
  5323                           
  5324                           ;incstack = 0
  5325  000DE2  0E00               	movlw	0
  5326  000DE4  6E06               	movwf	___lwdiv@quotient+1,c
  5327  000DE6  0E00               	movlw	0
  5328  000DE8  6E05               	movwf	___lwdiv@quotient,c
  5329  000DEA  5003               	movf	___lwdiv@divisor,w,c
  5330  000DEC  1004               	iorwf	___lwdiv@divisor+1,w,c
  5331  000DEE  B4D8               	btfsc	status,2,c
  5332  000DF0  D01C               	goto	i2l1037
  5333  000DF2  0E01               	movlw	1
  5334  000DF4  6E07               	movwf	___lwdiv@counter,c
  5335  000DF6  D004               	goto	i2l2393
  5336  000DF8                     i2l2391:
  5337  000DF8  90D8               	bcf	status,0,c
  5338  000DFA  3603               	rlcf	___lwdiv@divisor,f,c
  5339  000DFC  3604               	rlcf	___lwdiv@divisor+1,f,c
  5340  000DFE  2A07               	incf	___lwdiv@counter,f,c
  5341  000E00                     i2l2393:
  5342  000E00  AE04               	btfss	___lwdiv@divisor+1,7,c
  5343  000E02  D7FA               	goto	i2l2391
  5344  000E04                     i2u170_40:
  5345  000E04  90D8               	bcf	status,0,c
  5346  000E06  3605               	rlcf	___lwdiv@quotient,f,c
  5347  000E08  3606               	rlcf	___lwdiv@quotient+1,f,c
  5348  000E0A  5003               	movf	___lwdiv@divisor,w,c
  5349  000E0C  5C01               	subwf	___lwdiv@dividend,w,c
  5350  000E0E  5004               	movf	___lwdiv@divisor+1,w,c
  5351  000E10  5802               	subwfb	___lwdiv@dividend+1,w,c
  5352  000E12  A0D8               	btfss	status,0,c
  5353  000E14  D005               	goto	i2l2403
  5354  000E16  5003               	movf	___lwdiv@divisor,w,c
  5355  000E18  5E01               	subwf	___lwdiv@dividend,f,c
  5356  000E1A  5004               	movf	___lwdiv@divisor+1,w,c
  5357  000E1C  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5358  000E1E  8005               	bsf	___lwdiv@quotient,0,c
  5359  000E20                     i2l2403:
  5360  000E20  90D8               	bcf	status,0,c
  5361  000E22  3204               	rrcf	___lwdiv@divisor+1,f,c
  5362  000E24  3203               	rrcf	___lwdiv@divisor,f,c
  5363  000E26  2E07               	decfsz	___lwdiv@counter,f,c
  5364  000E28  D7ED               	goto	i2u170_40
  5365  000E2A                     i2l1037:
  5366  000E2A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5367  000E2E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5368  000E32  0012               	return		;funcret
  5369  000E34                     __end_of___lwdiv:
  5370                           	opt callstack 0
  5371                           
  5372 ;; *************** function ___llmod *****************
  5373 ;; Defined at:
  5374 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\llmod.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  dividend        4    0[COMRAM] unsigned long 
  5377 ;;  divisor         4    4[COMRAM] unsigned long 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  counter         1    8[COMRAM] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  4    0[COMRAM] unsigned long 
  5382 ;; Registers used:
  5383 ;;		wreg, status,2, status,0
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5389 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;Total ram usage:        9 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_UpdateTemprature
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text43
  5403  000C6C                     __ptext43:
  5404                           	opt callstack 0
  5405  000C6C                     ___llmod:
  5406                           	opt callstack 15
  5407                           
  5408                           ;incstack = 0
  5409  000C6C  5005               	movf	___llmod@divisor,w,c
  5410  000C6E  1006               	iorwf	___llmod@divisor+1,w,c
  5411  000C70  1007               	iorwf	___llmod@divisor+2,w,c
  5412  000C72  1008               	iorwf	___llmod@divisor+3,w,c
  5413  000C74  B4D8               	btfsc	status,2,c
  5414  000C76  D024               	goto	i2l966
  5415  000C78  0E01               	movlw	1
  5416  000C7A  6E09               	movwf	___llmod@counter,c
  5417  000C7C  D006               	goto	i2l2375
  5418  000C7E                     i2l2373:
  5419  000C7E  90D8               	bcf	status,0,c
  5420  000C80  3605               	rlcf	___llmod@divisor,f,c
  5421  000C82  3606               	rlcf	___llmod@divisor+1,f,c
  5422  000C84  3607               	rlcf	___llmod@divisor+2,f,c
  5423  000C86  3608               	rlcf	___llmod@divisor+3,f,c
  5424  000C88  2A09               	incf	___llmod@counter,f,c
  5425  000C8A                     i2l2375:
  5426  000C8A  AE08               	btfss	___llmod@divisor+3,7,c
  5427  000C8C  D7F8               	goto	i2l2373
  5428  000C8E                     i2u167_40:
  5429  000C8E  5005               	movf	___llmod@divisor,w,c
  5430  000C90  5C01               	subwf	___llmod@dividend,w,c
  5431  000C92  5006               	movf	___llmod@divisor+1,w,c
  5432  000C94  5802               	subwfb	___llmod@dividend+1,w,c
  5433  000C96  5007               	movf	___llmod@divisor+2,w,c
  5434  000C98  5803               	subwfb	___llmod@dividend+2,w,c
  5435  000C9A  5008               	movf	___llmod@divisor+3,w,c
  5436  000C9C  5804               	subwfb	___llmod@dividend+3,w,c
  5437  000C9E  A0D8               	btfss	status,0,c
  5438  000CA0  D008               	goto	i2l2381
  5439  000CA2  5005               	movf	___llmod@divisor,w,c
  5440  000CA4  5E01               	subwf	___llmod@dividend,f,c
  5441  000CA6  5006               	movf	___llmod@divisor+1,w,c
  5442  000CA8  5A02               	subwfb	___llmod@dividend+1,f,c
  5443  000CAA  5007               	movf	___llmod@divisor+2,w,c
  5444  000CAC  5A03               	subwfb	___llmod@dividend+2,f,c
  5445  000CAE  5008               	movf	___llmod@divisor+3,w,c
  5446  000CB0  5A04               	subwfb	___llmod@dividend+3,f,c
  5447  000CB2                     i2l2381:
  5448  000CB2  90D8               	bcf	status,0,c
  5449  000CB4  3208               	rrcf	___llmod@divisor+3,f,c
  5450  000CB6  3207               	rrcf	___llmod@divisor+2,f,c
  5451  000CB8  3206               	rrcf	___llmod@divisor+1,f,c
  5452  000CBA  3205               	rrcf	___llmod@divisor,f,c
  5453  000CBC  2E09               	decfsz	___llmod@counter,f,c
  5454  000CBE  D7E7               	goto	i2u167_40
  5455  000CC0                     i2l966:
  5456  000CC0  C001  F001         	movff	___llmod@dividend,?___llmod
  5457  000CC4  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  5458  000CC8  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  5459  000CCC  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  5460  000CD0  0012               	return		;funcret
  5461  000CD2                     __end_of___llmod:
  5462                           	opt callstack 0
  5463                           
  5464 ;; *************** function ___lldiv *****************
  5465 ;; Defined at:
  5466 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  dividend        4    0[COMRAM] unsigned long 
  5469 ;;  divisor         4    4[COMRAM] unsigned long 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  quotient        4    8[COMRAM] unsigned long 
  5472 ;;  counter         1   12[COMRAM] unsigned char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  4    0[COMRAM] unsigned long 
  5475 ;; Registers used:
  5476 ;;		wreg, status,2, status,0
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5482 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5485 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;Total ram usage:       13 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_UpdateTemprature
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text44
  5496  000B08                     __ptext44:
  5497                           	opt callstack 0
  5498  000B08                     ___lldiv:
  5499                           	opt callstack 15
  5500                           
  5501                           ;incstack = 0
  5502  000B08  0E00               	movlw	0
  5503  000B0A  6E09               	movwf	___lldiv@quotient,c
  5504  000B0C  0E00               	movlw	0
  5505  000B0E  6E0A               	movwf	___lldiv@quotient+1,c
  5506  000B10  0E00               	movlw	0
  5507  000B12  6E0B               	movwf	___lldiv@quotient+2,c
  5508  000B14  0E00               	movlw	0
  5509  000B16  6E0C               	movwf	___lldiv@quotient+3,c
  5510  000B18  5005               	movf	___lldiv@divisor,w,c
  5511  000B1A  1006               	iorwf	___lldiv@divisor+1,w,c
  5512  000B1C  1007               	iorwf	___lldiv@divisor+2,w,c
  5513  000B1E  1008               	iorwf	___lldiv@divisor+3,w,c
  5514  000B20  B4D8               	btfsc	status,2,c
  5515  000B22  D02A               	goto	i2l573
  5516  000B24  0E01               	movlw	1
  5517  000B26  6E0D               	movwf	___lldiv@counter,c
  5518  000B28  D006               	goto	i2l2313
  5519  000B2A                     i2l2311:
  5520  000B2A  90D8               	bcf	status,0,c
  5521  000B2C  3605               	rlcf	___lldiv@divisor,f,c
  5522  000B2E  3606               	rlcf	___lldiv@divisor+1,f,c
  5523  000B30  3607               	rlcf	___lldiv@divisor+2,f,c
  5524  000B32  3608               	rlcf	___lldiv@divisor+3,f,c
  5525  000B34  2A0D               	incf	___lldiv@counter,f,c
  5526  000B36                     i2l2313:
  5527  000B36  AE08               	btfss	___lldiv@divisor+3,7,c
  5528  000B38  D7F8               	goto	i2l2311
  5529  000B3A                     i2u160_40:
  5530  000B3A  90D8               	bcf	status,0,c
  5531  000B3C  3609               	rlcf	___lldiv@quotient,f,c
  5532  000B3E  360A               	rlcf	___lldiv@quotient+1,f,c
  5533  000B40  360B               	rlcf	___lldiv@quotient+2,f,c
  5534  000B42  360C               	rlcf	___lldiv@quotient+3,f,c
  5535  000B44  5005               	movf	___lldiv@divisor,w,c
  5536  000B46  5C01               	subwf	___lldiv@dividend,w,c
  5537  000B48  5006               	movf	___lldiv@divisor+1,w,c
  5538  000B4A  5802               	subwfb	___lldiv@dividend+1,w,c
  5539  000B4C  5007               	movf	___lldiv@divisor+2,w,c
  5540  000B4E  5803               	subwfb	___lldiv@dividend+2,w,c
  5541  000B50  5008               	movf	___lldiv@divisor+3,w,c
  5542  000B52  5804               	subwfb	___lldiv@dividend+3,w,c
  5543  000B54  A0D8               	btfss	status,0,c
  5544  000B56  D009               	goto	i2l2323
  5545  000B58  5005               	movf	___lldiv@divisor,w,c
  5546  000B5A  5E01               	subwf	___lldiv@dividend,f,c
  5547  000B5C  5006               	movf	___lldiv@divisor+1,w,c
  5548  000B5E  5A02               	subwfb	___lldiv@dividend+1,f,c
  5549  000B60  5007               	movf	___lldiv@divisor+2,w,c
  5550  000B62  5A03               	subwfb	___lldiv@dividend+2,f,c
  5551  000B64  5008               	movf	___lldiv@divisor+3,w,c
  5552  000B66  5A04               	subwfb	___lldiv@dividend+3,f,c
  5553  000B68  8009               	bsf	___lldiv@quotient,0,c
  5554  000B6A                     i2l2323:
  5555  000B6A  90D8               	bcf	status,0,c
  5556  000B6C  3208               	rrcf	___lldiv@divisor+3,f,c
  5557  000B6E  3207               	rrcf	___lldiv@divisor+2,f,c
  5558  000B70  3206               	rrcf	___lldiv@divisor+1,f,c
  5559  000B72  3205               	rrcf	___lldiv@divisor,f,c
  5560  000B74  2E0D               	decfsz	___lldiv@counter,f,c
  5561  000B76  D7E1               	goto	i2u160_40
  5562  000B78                     i2l573:
  5563  000B78  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5564  000B7C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5565  000B80  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5566  000B84  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5567  000B88  0012               	return		;funcret
  5568  000B8A                     __end_of___lldiv:
  5569                           	opt callstack 0
  5570                           
  5571 ;; *************** function _ADC_GetConversion *****************
  5572 ;; Defined at:
  5573 ;;		line 110 in file "mcc_generated_files/adc.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  channel         1    wreg     enum E5751
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  channel         1    4[COMRAM] enum E5751
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  2    0[COMRAM] unsigned short 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;Total ram usage:        5 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_UpdateTemprature
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text45
  5601  00105A                     __ptext45:
  5602                           	opt callstack 0
  5603  00105A                     _ADC_GetConversion:
  5604                           	opt callstack 15
  5605                           
  5606                           ;incstack = 0
  5607                           ;ADC_GetConversion@channel stored from wreg
  5608  00105A  6E05               	movwf	ADC_GetConversion@channel,c
  5609                           
  5610                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  5611  00105C  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  5612  001060  4603               	rlncf	??_ADC_GetConversion,f,c
  5613  001062  4603               	rlncf	??_ADC_GetConversion,f,c
  5614  001064  50C2               	movf	4034,w,c	;volatile
  5615  001066  1803               	xorwf	??_ADC_GetConversion,w,c
  5616  001068  0B83               	andlw	-125
  5617  00106A  1803               	xorwf	??_ADC_GetConversion,w,c
  5618  00106C  6EC2               	movwf	4034,c	;volatile
  5619                           
  5620                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  5621  00106E  80C2               	bsf	4034,0,c	;volatile
  5622                           
  5623                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  5624  001070  82C2               	bsf	4034,1,c	;volatile
  5625  001072                     i2l195:
  5626                           
  5627                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  5628  001072  B2C2               	btfsc	4034,1,c	;volatile
  5629  001074  D7FE               	goto	i2l195
  5630                           
  5631                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5632  001076  50C4               	movf	4036,w,c	;volatile
  5633  001078  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  5634  00107A  6A03               	clrf	??_ADC_GetConversion& (0+255),c
  5635  00107C  50C3               	movf	4035,w,c	;volatile
  5636  00107E  2403               	addwf	??_ADC_GetConversion,w,c
  5637  001080  6E01               	movwf	?_ADC_GetConversion,c
  5638  001082  0E00               	movlw	0
  5639  001084  2004               	addwfc	??_ADC_GetConversion+1,w,c
  5640  001086  6E02               	movwf	?_ADC_GetConversion+1,c
  5641  001088  0012               	return		;funcret
  5642  00108A                     __end_of_ADC_GetConversion:
  5643                           	opt callstack 0
  5644                           
  5645 ;; *************** function _UpdateDisplay *****************
  5646 ;; Defined at:
  5647 ;;		line 175 in file "main.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  secondDigit     1    5[COMRAM] unsigned char 
  5652 ;;  firstDigit      1    4[COMRAM] unsigned char 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;Total ram usage:        2 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    1
  5669 ;; This function calls:
  5670 ;;		_SetDisplay
  5671 ;;		___lbdiv
  5672 ;;		___lbmod
  5673 ;; This function is called by:
  5674 ;;		_TimerInterrupt
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text46
  5679  000EC6                     __ptext46:
  5680                           	opt callstack 0
  5681  000EC6                     _UpdateDisplay:
  5682                           	opt callstack 15
  5683                           
  5684                           ;main.c: 178:     if(displayChoice)
  5685                           
  5686                           ;incstack = 0
  5687  000EC6  503D               	movf	_displayChoice,w,c
  5688  000EC8  B4D8               	btfsc	status,2,c
  5689  000ECA  D00F               	goto	i2l2459
  5690                           
  5691                           ;main.c: 179:     {;main.c: 180:         uint8_t firstDigit = temperature / numberSystem
      +                          ;
  5692  000ECC  C03E  F001         	movff	_numberSystem,___lbdiv@divisor
  5693  000ED0  0100               	movlb	0	; () banked
  5694  000ED2  51FE               	movf	_temperature& (0+255),w,b
  5695  000ED4  ECC0  F007         	call	___lbdiv
  5696  000ED8  6E05               	movwf	UpdateDisplay@firstDigit,c
  5697                           
  5698                           ;main.c: 181:         SetDisplay(firstDigit,1);
  5699  000EDA  0E01               	movlw	1
  5700  000EDC  6E01               	movwf	SetDisplay@firstDigit,c
  5701  000EDE  5005               	movf	UpdateDisplay@firstDigit,w,c
  5702  000EE0  EC5B  F008         	call	_SetDisplay
  5703                           
  5704                           ;main.c: 182:         displayChoice = 0;
  5705  000EE4  0E00               	movlw	0
  5706  000EE6  6E3D               	movwf	_displayChoice,c
  5707                           
  5708                           ;main.c: 183:     }
  5709  000EE8  0012               	return	
  5710  000EEA                     i2l2459:
  5711                           
  5712                           ;main.c: 185:     {;main.c: 186:         uint8_t secondDigit = temperature % numberSyste
      +                          m;
  5713  000EEA  C03E  F001         	movff	_numberSystem,___lbmod@divisor
  5714  000EEE  0100               	movlb	0	; () banked
  5715  000EF0  51FE               	movf	_temperature& (0+255),w,b
  5716  000EF2  EC86  F008         	call	___lbmod
  5717  000EF6  6E06               	movwf	UpdateDisplay@secondDigit,c
  5718                           
  5719                           ;main.c: 187:         SetDisplay(secondDigit,0);
  5720  000EF8  0E00               	movlw	0
  5721  000EFA  6E01               	movwf	SetDisplay@firstDigit,c
  5722  000EFC  5006               	movf	UpdateDisplay@secondDigit,w,c
  5723  000EFE  EC5B  F008         	call	_SetDisplay
  5724                           
  5725                           ;main.c: 188:         displayChoice = 1;
  5726  000F02  0E01               	movlw	1
  5727  000F04  6E3D               	movwf	_displayChoice,c
  5728  000F06  0012               	return		;funcret
  5729  000F08                     __end_of_UpdateDisplay:
  5730                           	opt callstack 0
  5731                           
  5732 ;; *************** function ___lbmod *****************
  5733 ;; Defined at:
  5734 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lbmod.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  dividend        1    wreg     unsigned char 
  5737 ;;  divisor         1    0[COMRAM] unsigned char 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  dividend        1    1[COMRAM] unsigned char 
  5740 ;;  rem             1    3[COMRAM] unsigned char 
  5741 ;;  counter         1    2[COMRAM] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      unsigned char 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5751 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;Total ram usage:        4 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_UpdateDisplay
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text47
  5765  00110C                     __ptext47:
  5766                           	opt callstack 0
  5767  00110C                     ___lbmod:
  5768                           	opt callstack 15
  5769                           
  5770                           ;incstack = 0
  5771                           ;___lbmod@dividend stored from wreg
  5772  00110C  6E02               	movwf	___lbmod@dividend,c
  5773  00110E  0E08               	movlw	8
  5774  001110  6E03               	movwf	___lbmod@counter,c
  5775  001112  0E00               	movlw	0
  5776  001114  6E04               	movwf	___lbmod@rem,c
  5777  001116                     i2l2355:
  5778  001116  90D8               	bcf	status,0,c
  5779  001118  3402               	rlcf	___lbmod@dividend,w,c
  5780  00111A  3404               	rlcf	___lbmod@rem,w,c
  5781  00111C  6E04               	movwf	___lbmod@rem,c
  5782  00111E  90D8               	bcf	status,0,c
  5783  001120  3602               	rlcf	___lbmod@dividend,f,c
  5784  001122  5001               	movf	___lbmod@divisor,w,c
  5785  001124  5C04               	subwf	___lbmod@rem,w,c
  5786  001126  A0D8               	btfss	status,0,c
  5787  001128  D002               	goto	i2l2363
  5788  00112A  5001               	movf	___lbmod@divisor,w,c
  5789  00112C  5E04               	subwf	___lbmod@rem,f,c
  5790  00112E                     i2l2363:
  5791  00112E  2E03               	decfsz	___lbmod@counter,f,c
  5792  001130  D7F2               	goto	i2l2355
  5793  001132  5004               	movf	___lbmod@rem,w,c
  5794  001134  0012               	return		;funcret
  5795  001136                     __end_of___lbmod:
  5796                           	opt callstack 0
  5797                           
  5798 ;; *************** function ___lbdiv *****************
  5799 ;; Defined at:
  5800 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lbdiv.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  dividend        1    wreg     unsigned char 
  5803 ;;  divisor         1    0[COMRAM] unsigned char 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  dividend        1    1[COMRAM] unsigned char 
  5806 ;;  quotient        1    3[COMRAM] unsigned char 
  5807 ;;  counter         1    2[COMRAM] unsigned char 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      unsigned char 
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5817 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;Total ram usage:        4 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; This function calls:
  5824 ;;		Nothing
  5825 ;; This function is called by:
  5826 ;;		_UpdateDisplay
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           	psect	text48
  5831  000F80                     __ptext48:
  5832                           	opt callstack 0
  5833  000F80                     ___lbdiv:
  5834                           	opt callstack 15
  5835                           
  5836                           ;incstack = 0
  5837                           ;___lbdiv@dividend stored from wreg
  5838  000F80  6E02               	movwf	___lbdiv@dividend,c
  5839  000F82  0E00               	movlw	0
  5840  000F84  6E04               	movwf	___lbdiv@quotient,c
  5841  000F86  5001               	movf	___lbdiv@divisor,w,c
  5842  000F88  B4D8               	btfsc	status,2,c
  5843  000F8A  D015               	goto	i2l2349
  5844  000F8C  0E01               	movlw	1
  5845  000F8E  6E03               	movwf	___lbdiv@counter,c
  5846  000F90  D003               	goto	i2l2337
  5847  000F92                     i2l2333:
  5848  000F92  90D8               	bcf	status,0,c
  5849  000F94  3601               	rlcf	___lbdiv@divisor,f,c
  5850  000F96  2A03               	incf	___lbdiv@counter,f,c
  5851  000F98                     i2l2337:
  5852  000F98  AE01               	btfss	___lbdiv@divisor,7,c
  5853  000F9A  D7FB               	goto	i2l2333
  5854  000F9C                     i2u163_40:
  5855  000F9C  90D8               	bcf	status,0,c
  5856  000F9E  3604               	rlcf	___lbdiv@quotient,f,c
  5857  000FA0  5001               	movf	___lbdiv@divisor,w,c
  5858  000FA2  5C02               	subwf	___lbdiv@dividend,w,c
  5859  000FA4  A0D8               	btfss	status,0,c
  5860  000FA6  D003               	goto	i2l2345
  5861  000FA8  5001               	movf	___lbdiv@divisor,w,c
  5862  000FAA  5E02               	subwf	___lbdiv@dividend,f,c
  5863  000FAC  8004               	bsf	___lbdiv@quotient,0,c
  5864  000FAE                     i2l2345:
  5865  000FAE  90D8               	bcf	status,0,c
  5866  000FB0  3201               	rrcf	___lbdiv@divisor,f,c
  5867  000FB2  2E03               	decfsz	___lbdiv@counter,f,c
  5868  000FB4  D7F3               	goto	i2u163_40
  5869  000FB6                     i2l2349:
  5870  000FB6  5004               	movf	___lbdiv@quotient,w,c
  5871  000FB8  0012               	return		;funcret
  5872  000FBA                     __end_of___lbdiv:
  5873                           	opt callstack 0
  5874                           
  5875 ;; *************** function _SetDisplay *****************
  5876 ;; Defined at:
  5877 ;;		line 193 in file "main.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  digit           1    wreg     unsigned char 
  5880 ;;  firstDigit      1    0[COMRAM] _Bool 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  digit           1    1[COMRAM] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5892 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;Total ram usage:        2 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; This function calls:
  5899 ;;		Nothing
  5900 ;; This function is called by:
  5901 ;;		_UpdateDisplay
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text49
  5906  0010B6                     __ptext49:
  5907                           	opt callstack 0
  5908  0010B6                     _SetDisplay:
  5909                           	opt callstack 15
  5910                           
  5911                           ;incstack = 0
  5912                           ;SetDisplay@digit stored from wreg
  5913  0010B6  6E02               	movwf	SetDisplay@digit,c
  5914                           
  5915                           ;main.c: 193: void SetDisplay(uint8_t digit, _Bool firstDigit);main.c: 194: {;main.c: 19
      +                          5:     if(firstDigit)
  5916  0010B8  5001               	movf	SetDisplay@firstDigit,w,c
  5917  0010BA  B4D8               	btfsc	status,2,c
  5918  0010BC  D003               	goto	i2l291
  5919                           
  5920                           ;main.c: 196:     {;main.c: 197:         do { LATCbits.LATC1 = 0; } while(0);
  5921  0010BE  928B               	bcf	3979,1,c	;volatile
  5922                           
  5923                           ;main.c: 198:         do { LATCbits.LATC0 = 1; } while(0);
  5924  0010C0  808B               	bsf	3979,0,c	;volatile
  5925  0010C2  D002               	goto	i2l2227
  5926  0010C4                     i2l291:
  5927  0010C4  908B               	bcf	3979,0,c	;volatile
  5928                           
  5929                           ;main.c: 203:         do { LATCbits.LATC1 = 1; } while(0);
  5930  0010C6  828B               	bsf	3979,1,c	;volatile
  5931  0010C8                     i2l2227:
  5932                           
  5933                           ;main.c: 205:     PORTA = displayNumber[digit];
  5934  0010C8  0EEF               	movlw	low _displayNumber
  5935  0010CA  2402               	addwf	SetDisplay@digit,w,c
  5936  0010CC  6EF6               	movwf	tblptrl,c
  5937  0010CE  6AF7               	clrf	tblptrh,c
  5938  0010D0  0EFE               	movlw	high _displayNumber
  5939  0010D2  22F7               	addwfc	tblptrh,f,c
  5940  0010D4                     	if	1	;There are 3 active tblptr bytes
  5941  0010D4  6AF8               	clrf	tblptru,c
  5942  0010D6  0E00               	movlw	low (__mediumconst shr (0+16))
  5943  0010D8  22F8               	addwfc	tblptru,f,c
  5944  0010DA                     	endif
  5945  0010DA  0008               	tblrd		*
  5946  0010DC  CFF5 FF80          	movff	tablat,3968	;volatile
  5947  0010E0  0012               	return		;funcret
  5948  0010E2                     __end_of_SetDisplay:
  5949                           	opt callstack 0
  5950                           
  5951 ;; *************** function _EUSART1_Transmit_ISR *****************
  5952 ;; Defined at:
  5953 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;		None
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;		None
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      void 
  5960 ;; Registers used:
  5961 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;Total ram usage:        0 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_EUSART1_Initialize
  5977 ;;		_INTERRUPT_InterruptManager
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text50
  5982  001136                     __ptext50:
  5983                           	opt callstack 0
  5984  001136                     _EUSART1_Transmit_ISR:
  5985                           	opt callstack 19
  5986                           
  5987                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  5988                           
  5989                           ;incstack = 0
  5990  001136  0E08               	movlw	8
  5991  001138  603A               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  5992  00113A  D010               	goto	i2l425
  5993                           
  5994                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          XREG1 = eusart1TxBuffer[eusart1TxTail++];
  5995  00113C  0ED2               	movlw	low _eusart1TxBuffer
  5996  00113E  243B               	addwf	_eusart1TxTail,w,c	;volatile
  5997  001140  6ED9               	movwf	fsr2l,c
  5998  001142  6ADA               	clrf	fsr2h,c
  5999  001144  0E00               	movlw	high _eusart1TxBuffer
  6000  001146  22DA               	addwfc	fsr2h,f,c
  6001  001148  50DF               	movf	indf2,w,c
  6002  00114A  6EAD               	movwf	4013,c	;volatile
  6003  00114C  2A3B               	incf	_eusart1TxTail,f,c	;volatile
  6004                           
  6005                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  6006  00114E  0E07               	movlw	7
  6007  001150  643B               	cpfsgt	_eusart1TxTail,c	;volatile
  6008  001152  D002               	goto	i2l2727
  6009                           
  6010                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  6011  001154  0E00               	movlw	0
  6012  001156  6E3B               	movwf	_eusart1TxTail,c	;volatile
  6013  001158                     i2l2727:
  6014                           
  6015                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  6016  001158  2A3A               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  6017                           
  6018                           ;mcc_generated_files/eusart1.c: 218:     }
  6019  00115A  0012               	return	
  6020  00115C                     i2l425:
  6021                           
  6022                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE1bits.TX1IE = 0;
  6023  00115C  989D               	bcf	3997,4,c	;volatile
  6024  00115E  0012               	return		;funcret
  6025  001160                     __end_of_EUSART1_Transmit_ISR:
  6026                           	opt callstack 0
  6027                           
  6028 ;; *************** function _EUSART1_Receive_ISR *****************
  6029 ;; Defined at:
  6030 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;		None
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;		None
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      void 
  6037 ;; Registers used:
  6038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;Total ram usage:        0 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    2
  6051 ;; This function calls:
  6052 ;;		Absolute function
  6053 ;;		_EUSART1_DefaultErrorHandler
  6054 ;;		_EUSART1_DefaultFramingErrorHandler
  6055 ;;		_EUSART1_DefaultOverrunErrorHandler
  6056 ;;		_EUSART1_RxDataHandler
  6057 ;; This function is called by:
  6058 ;;		_EUSART1_Initialize
  6059 ;;		_INTERRUPT_InterruptManager
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text51
  6064  0009EA                     __ptext51:
  6065                           	opt callstack 0
  6066  0009EA                     _EUSART1_Receive_ISR:
  6067                           	opt callstack 17
  6068                           
  6069                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6070                           
  6071                           ;incstack = 0
  6072  0009EA  0E00               	movlw	low _eusart1RxStatusBuffer
  6073  0009EC  2439               	addwf	_eusart1RxHead,w,c	;volatile
  6074  0009EE  6ED9               	movwf	fsr2l,c
  6075  0009F0  6ADA               	clrf	fsr2h,c
  6076  0009F2  0E01               	movlw	high _eusart1RxStatusBuffer
  6077  0009F4  22DA               	addwfc	fsr2h,f,c
  6078  0009F6  0E00               	movlw	0
  6079  0009F8  6EDF               	movwf	indf2,c
  6080                           
  6081                           ;mcc_generated_files/eusart1.c: 230:     if(RCSTA1bits.FERR){
  6082  0009FA  A4AB               	btfss	4011,2,c	;volatile
  6083  0009FC  D013               	goto	i2u207_49
  6084                           
  6085                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6086  0009FE  0E00               	movlw	low _eusart1RxStatusBuffer
  6087  000A00  2439               	addwf	_eusart1RxHead,w,c	;volatile
  6088  000A02  6ED9               	movwf	fsr2l,c
  6089  000A04  6ADA               	clrf	fsr2h,c
  6090  000A06  0E01               	movlw	high _eusart1RxStatusBuffer
  6091  000A08  22DA               	addwfc	fsr2h,f,c
  6092  000A0A  0101               	movlb	1	; () banked
  6093  000A0C  82DF               	bsf	indf2,1,c
  6094                           
  6095                           ; BSR set to: 1
  6096                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  6097  000A0E  D801               	call	i2u207_48
  6098  000A10  D009               	goto	i2u207_49
  6099  000A12                     i2u207_48:
  6100  000A12  0005               	push	
  6101  000A14  6EFA               	movwf	pclath,c
  6102  000A16  502C               	movf	_EUSART1_FramingErrorHandler,w,c
  6103  000A18  6EFD               	movwf	tosl,c
  6104  000A1A  502D               	movf	_EUSART1_FramingErrorHandler+1,w,c
  6105  000A1C  6EFE               	movwf	tosh,c
  6106  000A1E  6AFF               	clrf	tosu,c
  6107  000A20  50FA               	movf	pclath,w,c
  6108  000A22  0012               	return		;indir
  6109  000A24                     i2u207_49:
  6110                           
  6111                           ;mcc_generated_files/eusart1.c: 235:     if(RCSTA1bits.OERR){
  6112  000A24  A2AB               	btfss	4011,1,c	;volatile
  6113  000A26  D013               	goto	i2u209_49
  6114                           
  6115                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6116  000A28  0E00               	movlw	low _eusart1RxStatusBuffer
  6117  000A2A  2439               	addwf	_eusart1RxHead,w,c	;volatile
  6118  000A2C  6ED9               	movwf	fsr2l,c
  6119  000A2E  6ADA               	clrf	fsr2h,c
  6120  000A30  0E01               	movlw	high _eusart1RxStatusBuffer
  6121  000A32  22DA               	addwfc	fsr2h,f,c
  6122  000A34  0101               	movlb	1	; () banked
  6123  000A36  84DF               	bsf	indf2,2,c
  6124                           
  6125                           ; BSR set to: 1
  6126                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  6127  000A38  D801               	call	i2u209_48
  6128  000A3A  D009               	goto	i2u209_49
  6129  000A3C                     i2u209_48:
  6130  000A3C  0005               	push	
  6131  000A3E  6EFA               	movwf	pclath,c
  6132  000A40  502A               	movf	_EUSART1_OverrunErrorHandler,w,c
  6133  000A42  6EFD               	movwf	tosl,c
  6134  000A44  502B               	movf	_EUSART1_OverrunErrorHandler+1,w,c
  6135  000A46  6EFE               	movwf	tosh,c
  6136  000A48  6AFF               	clrf	tosu,c
  6137  000A4A  50FA               	movf	pclath,w,c
  6138  000A4C  0012               	return		;indir
  6139  000A4E                     i2u209_49:
  6140                           
  6141                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6142  000A4E  0E00               	movlw	low _eusart1RxStatusBuffer
  6143  000A50  2439               	addwf	_eusart1RxHead,w,c	;volatile
  6144  000A52  6ED9               	movwf	fsr2l,c
  6145  000A54  6ADA               	clrf	fsr2h,c
  6146  000A56  0E01               	movlw	high _eusart1RxStatusBuffer
  6147  000A58  22DA               	addwfc	fsr2h,f,c
  6148  000A5A  50DF               	movf	indf2,w,c
  6149  000A5C  B4D8               	btfsc	status,2,c
  6150  000A5E  D00B               	goto	i2l2747
  6151                           
  6152                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  6153  000A60  D801               	call	i2u211_48
  6154  000A62  0012               	return	
  6155  000A64                     i2u211_48:
  6156  000A64  0005               	push	
  6157  000A66  6EFA               	movwf	pclath,c
  6158  000A68  5028               	movf	_EUSART1_ErrorHandler,w,c
  6159  000A6A  6EFD               	movwf	tosl,c
  6160  000A6C  5029               	movf	_EUSART1_ErrorHandler+1,w,c
  6161  000A6E  6EFE               	movwf	tosh,c
  6162  000A70  6AFF               	clrf	tosu,c
  6163  000A72  50FA               	movf	pclath,w,c
  6164  000A74  0012               	return		;indir
  6165  000A76                     i2l2747:
  6166                           
  6167                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  6168  000A76  ECD4  F008         	call	_EUSART1_RxDataHandler	;wreg free
  6169  000A7A  0012               	return		;funcret
  6170  000A7C                     __end_of_EUSART1_Receive_ISR:
  6171                           	opt callstack 0
  6172                           
  6173 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6174 ;; Defined at:
  6175 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;		None
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  1    wreg      void 
  6182 ;; Registers used:
  6183 ;;		None
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;Total ram usage:        0 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_EUSART1_Initialize
  6199 ;;		_EUSART1_Receive_ISR
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text52
  6204  0012D0                     __ptext52:
  6205                           	opt callstack 0
  6206  0012D0                     _EUSART1_DefaultOverrunErrorHandler:
  6207                           	opt callstack 18
  6208                           
  6209                           ;mcc_generated_files/eusart1.c: 264:     RCSTA1bits.CREN = 0;
  6210                           
  6211                           ;incstack = 0
  6212  0012D0  98AB               	bcf	4011,4,c	;volatile
  6213                           
  6214                           ;mcc_generated_files/eusart1.c: 265:     RCSTA1bits.CREN = 1;
  6215  0012D2  88AB               	bsf	4011,4,c	;volatile
  6216  0012D4  0012               	return		;funcret
  6217  0012D6                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6218                           	opt callstack 0
  6219                           
  6220 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6221 ;; Defined at:
  6222 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;		None
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      void 
  6229 ;; Registers used:
  6230 ;;		None
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;Total ram usage:        0 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_EUSART1_Initialize
  6246 ;;		_EUSART1_Receive_ISR
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text53
  6251  0012E8                     __ptext53:
  6252                           	opt callstack 0
  6253  0012E8                     _EUSART1_DefaultFramingErrorHandler:
  6254                           	opt callstack 18
  6255                           
  6256                           ;incstack = 0
  6257  0012E8  0012               	return		;funcret
  6258  0012EA                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6259                           	opt callstack 0
  6260                           
  6261 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6262 ;; Defined at:
  6263 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;		None
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;		None
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;Total ram usage:        0 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    1
  6284 ;; This function calls:
  6285 ;;		_EUSART1_RxDataHandler
  6286 ;; This function is called by:
  6287 ;;		_EUSART1_Initialize
  6288 ;;		_EUSART1_Receive_ISR
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text54
  6293  0012D6                     __ptext54:
  6294                           	opt callstack 0
  6295  0012D6                     _EUSART1_DefaultErrorHandler:
  6296                           	opt callstack 17
  6297                           
  6298                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  6299                           
  6300                           ;incstack = 0
  6301  0012D6  ECD4  F008         	call	_EUSART1_RxDataHandler	;wreg free
  6302  0012DA  0012               	return		;funcret
  6303  0012DC                     __end_of_EUSART1_DefaultErrorHandler:
  6304                           	opt callstack 0
  6305                           
  6306 ;; *************** function _EUSART1_RxDataHandler *****************
  6307 ;; Defined at:
  6308 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;		None
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;		None
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  1    wreg      void 
  6315 ;; Registers used:
  6316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;Total ram usage:        0 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_EUSART1_Receive_ISR
  6332 ;;		_EUSART1_DefaultErrorHandler
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text55
  6337  0011A8                     __ptext55:
  6338                           	opt callstack 0
  6339  0011A8                     _EUSART1_RxDataHandler:
  6340                           	opt callstack 18
  6341                           
  6342                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6343                           
  6344                           ;incstack = 0
  6345  0011A8  0E40               	movlw	low _eusart1RxBuffer
  6346  0011AA  2439               	addwf	_eusart1RxHead,w,c	;volatile
  6347  0011AC  6ED9               	movwf	fsr2l,c
  6348  0011AE  6ADA               	clrf	fsr2h,c
  6349  0011B0  0E01               	movlw	high _eusart1RxBuffer
  6350  0011B2  22DA               	addwfc	fsr2h,f,c
  6351  0011B4  CFAE FFDF          	movff	4014,indf2	;volatile
  6352  0011B8  2A39               	incf	_eusart1RxHead,f,c	;volatile
  6353                           
  6354                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6355  0011BA  0E3F               	movlw	63
  6356  0011BC  6439               	cpfsgt	_eusart1RxHead,c	;volatile
  6357  0011BE  D002               	goto	i2l2545
  6358                           
  6359                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  6360  0011C0  0E00               	movlw	0
  6361  0011C2  6E39               	movwf	_eusart1RxHead,c	;volatile
  6362  0011C4                     i2l2545:
  6363                           
  6364                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  6365  0011C4  2A37               	incf	_eusart1RxCount,f,c	;volatile
  6366  0011C6  0012               	return		;funcret
  6367  0011C8                     __end_of_EUSART1_RxDataHandler:
  6368                           	opt callstack 0
  6369                           
  6370 ;; *************** function _ADC_ISR *****************
  6371 ;; Defined at:
  6372 ;;		line 135 in file "mcc_generated_files/adc.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;		None
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      void 
  6379 ;; Registers used:
  6380 ;;		None
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;Total ram usage:        0 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_INTERRUPT_InterruptManager
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text56
  6400  0012E0                     __ptext56:
  6401                           	opt callstack 0
  6402  0012E0                     _ADC_ISR:
  6403                           	opt callstack 19
  6404                           
  6405                           ;mcc_generated_files/adc.c: 138:     PIR1bits.ADIF = 0;
  6406                           
  6407                           ;incstack = 0
  6408  0012E0  9C9E               	bcf	3998,6,c	;volatile
  6409  0012E2  0012               	return		;funcret
  6410  0012E4                     __end_of_ADC_ISR:
  6411                           	opt callstack 0
  6412                           
  6413                           	psect	text57
  6414  000000                     __ptext57:
  6415                           	opt callstack 0
  6416                           
  6417                           	psect	rparam
  6418  0000                     
  6419                           	psect	temp
  6420  000040                     btemp:
  6421                           	opt callstack 0
  6422  000040                     	ds	1
  6423  0000                     int$flags	set	btemp
  6424  0000                     wtemp8	set	btemp+1
  6425  0000                     ttemp5	set	btemp+1
  6426  0000                     ttemp6	set	btemp+4
  6427  0000                     ttemp7	set	btemp+8
  6428                           tosu	equ	0xFFF
  6429                           tosh	equ	0xFFE
  6430                           tosl	equ	0xFFD
  6431                           stkptr	equ	0xFFC
  6432                           pclatu	equ	0xFFB
  6433                           pclath	equ	0xFFA
  6434                           pcl	equ	0xFF9
  6435                           tblptru	equ	0xFF8
  6436                           tblptrh	equ	0xFF7
  6437                           tblptrl	equ	0xFF6
  6438                           tablat	equ	0xFF5
  6439                           prodh	equ	0xFF4
  6440                           prodl	equ	0xFF3
  6441                           indf0	equ	0xFEF
  6442                           postinc0	equ	0xFEE
  6443                           postdec0	equ	0xFED
  6444                           preinc0	equ	0xFEC
  6445                           plusw0	equ	0xFEB
  6446                           fsr0h	equ	0xFEA
  6447                           fsr0l	equ	0xFE9
  6448                           wreg	equ	0xFE8
  6449                           indf1	equ	0xFE7
  6450                           postinc1	equ	0xFE6
  6451                           postdec1	equ	0xFE5
  6452                           preinc1	equ	0xFE4
  6453                           plusw1	equ	0xFE3
  6454                           fsr1h	equ	0xFE2
  6455                           fsr1l	equ	0xFE1
  6456                           bsr	equ	0xFE0
  6457                           indf2	equ	0xFDF
  6458                           postinc2	equ	0xFDE
  6459                           postdec2	equ	0xFDD
  6460                           preinc2	equ	0xFDC
  6461                           plusw2	equ	0xFDB
  6462                           fsr2h	equ	0xFDA
  6463                           fsr2l	equ	0xFD9
  6464                           status	equ	0xFD8


Data Sizes:
    Strings     255
    Constant    16
    Data        3
    BSS         198
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      63
    BANK0           160    114     159
    BANK1           256     20     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 12
		 -> main@actionSelector(BANK1[12]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 12
		 -> main@actionSelector(BANK1[12]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 12
		 -> ReadLine@line(BANK0[12]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 12
		 -> ReadLine@line(BANK0[12]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), STR_10(CODE[3]), STR_7(CODE[3]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 12
		 -> main@actionSelector(BANK1[12]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_18(CODE[3]), STR_16(CODE[3]), STR_15(CODE[30]), STR_14(CODE[3]), 
		 -> STR_13(CODE[32]), STR_8(CODE[38]), STR_5(CODE[28]), STR_4(CODE[32]), 
		 -> STR_3(CODE[22]), STR_2(CODE[35]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1637_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_18(CODE[3]), STR_16(CODE[3]), STR_15(CODE[30]), STR_14(CODE[3]), 
		 -> STR_13(CODE[32]), STR_8(CODE[38]), STR_5(CODE[28]), STR_4(CODE[32]), 
		 -> STR_3(CODE[22]), STR_2(CODE[35]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 38
		 -> STR_18(CODE[3]), STR_16(CODE[3]), STR_15(CODE[30]), STR_14(CODE[3]), 
		 -> STR_13(CODE[32]), STR_8(CODE[38]), STR_5(CODE[28]), STR_4(CODE[32]), 
		 -> STR_3(CODE[22]), STR_2(CODE[35]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 12
		 -> main@actionSelector(BANK1[12]), 

    sp__ReadLine	PTR const unsigned char  size(2) Largest target is 12
		 -> ReadLine@line(BANK0[12]), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInterrupt(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInterrupt(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_strcmp
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _dtoa->_abs
    _abs->___aomod
    _pad->_strlen
    _fputc->_putch
    _putch->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TimerInterrupt->_UpdateTemprature
    _UpdateTemprature->___lldiv
    _UpdateDisplay->___lbdiv
    _UpdateDisplay->___lbmod

Critical Paths under _main in BANK0

    _main->_ReadLine
    _strcpy->_ReadLine
    _ReadLine->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_strcpy

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   30196
                                              8 BANK1     12    12      0
                     _ADC_Initialize
                 _EUSART1_Initialize
                _EUSART1_is_tx_ready
                           _ReadLine
                  _SYSTEM_Initialize
                    _TMR2_Initialize
           _TMR2_SetInterruptHandler
                             _printf
                             _strcmp
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               8     4      4     317
                                              0 BANK1      8     4      4
                           _ReadLine (ARG)
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     1      4     701
                                             31 COMRAM     4     0      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     816
                     _ADC_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadLine                                            18    16      2   13785
                                             96 BANK0     18    16      2
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   13411
                                             88 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12334
                                             80 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   11852
                                             63 BANK0     17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5953
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             33 COMRAM     2     0      2
                                             16 BANK0      2     2      0
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             31 COMRAM     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3966
                                             27 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3687
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             31 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             32 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         1     1      0      37
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_tx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          8     8      0    2194
                                             23 COMRAM     8     8      0
                   Absolute function *
                            _ADC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0    2194
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR2_CallBack                                       0     0      0    2194
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                     _TimerInterrupt *
 ---------------------------------------------------------------------------------
 (14) _TimerInterrupt                                      0     0      0    2194
                      _UpdateDisplay
                   _UpdateTemprature
 ---------------------------------------------------------------------------------
 (15) _UpdateTemprature                                   10    10      0    1479
                                             13 COMRAM    10    10      0
                  _ADC_GetConversion
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (16) ___lwmod                                             5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (16) ___lwdiv                                             7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) ___llmod                                             9     1      8     311
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (16) _ADC_GetConversion                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (15) _UpdateDisplay                                       2     2      0     715
                                              4 COMRAM     2     2      0
                         _SetDisplay
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (16) ___lbmod                                             4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (16) ___lbdiv                                             4     3      1     238
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (16) _SetDisplay                                          2     1      1     196
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
     _EUSART1_SetRxInterruptHandler
     _EUSART1_SetTxInterruptHandler
   _EUSART1_is_tx_ready
   _ReadLine
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_Initialize
     _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
   _strcmp
   _strcpy
     _ReadLine (ARG)
       _EUSART1_Read
       _EUSART1_is_rx_ready
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADC_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _TimerInterrupt *
         _UpdateDisplay
           _SetDisplay
           ___lbdiv
           ___lbmod
         _UpdateTemprature
           _ADC_GetConversion
           ___lldiv
           ___llmod
           ___lwdiv
           ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      94       7       57.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     72      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      3F       1       67.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     172      12        0.0%
DATA                 0      0     172       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jan 28 17:14:42 2020

              __end_of_TMR2_SetInterruptHandler 128C                        _eusart1TxBufferRemaining 003A  
                               ??_UpdateDisplay 0005                                              l28 1260  
                        __end_of_FVR_Initialize 12D0                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l413 1002                                             l510 011A  
                                           l263 0732                                             l259 0646  
                                           l508 0112                                             l490 097E  
                                  __CFG_CPB$OFF 000000                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                             _abs 1026  
                                           _pad 094E                                 __end_of_ADC_ISR 12E4  
                               _TMR2_Initialize 11E6                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          ?_abs 0022                                            l1221 1050  
                                          l3103 0D9E                                            l3033 02BA  
                                          l3009 023C                                            l3105 0DC4  
                                          l3029 02A2                                            l3053 038C  
                                          l3063 0442                                            l3073 048C  
                                          l3225 0AD8                                            l3209 0A82  
                                          l3241 0CD4                                            l3243 0CDC  
                                          l3069 0480                                            l3237 0FCA  
                                          l3079 04A4                                            l3271 06E2  
                                          l3179 0F76                                            l2803 0FF2  
                                          l3275 0702                                            l2901 0558  
                                          l2903 056C                                            l3279 0724  
                                          l2817 1020                                            l2921 0604  
                                          l2913 05C8                                            l2819 1022  
                                          l2843 0F2C                                            l2829 0C18  
                                          l2917 05DE                                            l2941 07BC  
                                          l2933 077E                                            ?_pad 0070  
                                          l2839 0F14                                            l2847 10EC  
                                          l2863 0976                                            l2943 07D0  
                                          l2849 10F0                                            l2873 09CE  
                                          l2865 0988                                            l2953 082E  
                                          l2937 07A2                                            l2859 0966  
                                          l2869 09A2                                            l2965 0E46  
                                          l2957 0854                                            l2949 0818  
                                          l2981 00F6                                            l2967 0E54  
                                          l2895 0532                                            l2889 050A  
                                          l2995 0134                                            l2999 0142  
                                          STR_1 FFC2                                            STR_2 FF25  
                                          STR_3 FFD9                                            STR_4 FF48  
                                          STR_5 FFA6                                            STR_6 FFF2  
                                          STR_7 FFF2                                            STR_8 FEFF  
                                          STR_9 FFF5                                            _LATA 000F89  
                                          u2310 0C10                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u2400 1034  
                                          u2330 0C58                                            u2510 07D4  
                                          u2431 0538                                            u2450 0570  
                                          u2610 012E                                            u2620 024C  
                                          u2550 00C8                                            u2640 026E  
                                          u2560 00CA                                            u2641 026C  
                                          u2810 127E                                            u2650 027C  
                                          u2730 03C4                                            u2660 0280  
                                          u2900 0650                                            u2590 0108  
                                          u2680 028C                                            u2770 1270  
                                          u2850 0AE6                                            u2860 0AF0  
                                          u2890 0D0C                                            _TMR2 000FBC  
                                          _WPUB 000F61                                   _EUSART1_Write 0FF0  
                                          abs@a 0022                                            _dbuf 00DE  
                                          _ctoa 0E34                                            _main 0626  
                                          _dtoa 009E                                   ?_EUSART1_Read 0001  
                                          _prec 00DC                                            _nout 00DA  
                                          pad@i 0077                                            pad@p 0074  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0079  
                                          fsr2l 000FD9                                            btemp 0040  
                                 __CFG_BORV$190 000000                                            start 009A  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                                         ??_abs 0070                                           ??_pad 0076  
                               ?_FVR_Initialize 0001                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 1266                           _eusart1RxStatusBuffer 0100  
                               __end_of___aodiv 0626                                           ?_ctoa 007B  
                                         ?_main 0001                                           ?_dtoa 007B  
                               __end_of___aomod 0876                                 __end_of___lbdiv 0FBA  
                                         STR_10 FFF5                                           STR_11 FFF8  
                                         STR_12 FFF8                                           STR_13 FF68  
                                         STR_14 FFEC                                           STR_15 FF88  
                                         STR_16 FFFB                                           STR_17 FFED  
                                         STR_18 FFEF                                 __end_of___lbmod 1136  
                               __end_of___lldiv 0B8A                                 __end_of___llmod 0CD2  
                                         _T2CON 000FBA                                  __CFG_DEBUG$OFF 000000  
                               __end_of___lwdiv 0E34                                 __end_of___lwmod 0EC6  
                                         i2l140 003A                                           i2l142 0050  
                                         i2l143 0076                                           i2l144 006C  
                                         i2l425 115C                                           i2l291 10C4  
                                         i2l195 1072                                           i2l573 0B78  
                                         i2l966 0CC0                                    vfpfcnvrt@fmt 00A1  
                                         _PORTA 000F80                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 1136                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR2_ISR 11A8                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _flags 0026  
                                         _fputc 0BFE                                           _fputs 0F08  
                            __CFG_MCLRE$EXTMCLR 000000                                           pad@fp 0070  
                                         _width 0024                                           ctoa@c 007D  
                                         _putch 12BE                                           ctoa@w 007E  
                                   ReadLine@tmp 00D0                                           dtoa@d 007D  
                                         dtoa@i 009D                                           dtoa@n 0095  
                                         dtoa@p 008F                                           dtoa@s 0093  
                                         dtoa@w 0091                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0020                                           ttemp5 0041  
                                         ttemp6 0044                                           ttemp7 0048  
                                         status 000FD8                                           wtemp8 0041  
                                __CFG_HFOFST$ON 000000                                 ___lbdiv@divisor 0001  
    __end_of_EUSART1_DefaultFramingErrorHandler 12EA     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 12E8                                 ___lbdiv@counter 0003  
                                __CFG_PBADEN$ON 000000                                 __initialization 0D32  
                                  __end_of_ctoa 0E84                      __end_of_EUSART1_Initialize 0BFE  
                                  __end_of_main 0750                                    __end_of_dtoa 02E4  
                              __end_of_ReadLine 0B08                         __end_of_TMR2_Initialize 1204  
                                     ??_ADC_ISR 0001                     ?_INTERRUPT_InterruptManager 0001  
                             ?_UpdateTemprature 0001                                          ??_ctoa 0024  
                      _TMR2_SetInterruptHandler 1282                                          ??_main 0024  
                                        ??_dtoa 0085                                   __activetblptr 000003  
                            ??_UpdateTemprature 000E                         __size_of_TimerInterrupt 001A  
                         ?_EUSART1_Transmit_ISR 0001                                      _SetDisplay 10B6  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0060  
                              ___llmod@dividend 0001                                          ?_fputs 0069  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 000E                                          i2l1037 0E2A  
                                        i2l1047 0EBC                                          i2l2311 0B2A  
                                        i2l2313 0B36                                          i2l2227 10C8  
                                        i2l2323 0B6A                                          i2l2403 0E20  
                                        i2l2411 0E92                                          i2l2333 0F92  
                                        i2l2413 0E9A                                          i2l2345 0FAE  
                                        i2l2337 0F98                                          i2l2441 0906  
                                        i2l2363 112E                                          i2l2355 1116  
                                        i2l2419 0EB2                                          i2l2523 1234  
                                        i2l2349 0FB6                                          i2l2381 0CB2  
                                        i2l2373 0C7E                                          i2l2429 088A  
                                        i2l2525 1236                                  __CFG_WDTEN$OFF 000000  
                                        i2l2375 0C8A                                          i2l2391 0DF8  
                                        i2l2545 11C4                                          i2l2393 0E00  
                                        i2l2459 0EEA                                          i2l2727 1158  
                                        i2l2747 0A76                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                    __size_of_EUSART1_is_tx_ready 000E  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                  __CFG_XINST$OFF 000000  
                                  vfprintf@cfmt 00B6                                       ??___aodiv 0020  
                                     ??___aomod 0020                                       ??___lbdiv 0002  
                                __CFG_STVREN$ON 000000                                       ??___lbmod 0002  
                                     ??___lldiv 0009                                       ??___llmod 0009  
                                     ??___lwdiv 0005                                       ??___lwmod 0005  
                      ?_EUSART1_SetErrorHandler 0020                                          clear_0 0D62  
                                        clear_1 0D6E                                          clear_2 0D7A  
                                        _printf 1160                                          pad@buf 0072  
                                  ReadLine@line 00C3                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                          ctoa@fp 007B  
                                        dtoa@fp 007B                                          _strcmp 0CD2  
                                        _strcpy 0FBA                                          _strlen 10E2  
                                        fputc@c 0060                                          fputs@c 006D  
                                        fputs@i 006E                                    __pdataCOMRAM 003E  
                                        fputs@s 0069                         UpdateTemprature@average 000E  
                                  __mediumconst FEEE                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                      ADC_GetConversion@channel 0005                                __end_of_vfprintf 0DE2  
                               ??_EUSART1_Write 0020        TMR2_SetInterruptHandler@InterruptHandler 0020  
                               _eusart1RxBuffer 0140                                ___lbdiv@dividend 0002  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 00D2  
                             _SYSTEM_Initialize 11C8                                 ___lbmod@divisor 0001  
                                    __accesstop 0060                         __end_of__initialization 0D80  
                               ___lbmod@counter 0003                           __end_of_TMR2_CallBack 1222  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                __size_of_EUSART1_RxDataHandler 0020                   __end_of_EUSART1_RxDataHandler 11C8  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 12EA  
                           ??_SYSTEM_Initialize 0022                                       ?_TMR2_ISR 0001  
                                 __end_of_fputc 0C6C                                   __end_of_fputs 0F44  
                                 __end_of_putch 12C8                                ?_TMR2_Initialize 0001  
                              ___lbdiv@quotient 0004                            __end_of_EUSART1_Read 0F80  
                        ??_EUSART1_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 0A7C  
                                   ?_SetDisplay 0001                                         ??_fputc 0064  
                     __end_of_SYSTEM_Initialize 11E6                                         ??_fputs 0022  
                                       ??_putch 0021                                   _eusart1RxHead 0039  
                                 _eusart1TxHead 003C                                   _eusart1RxTail 0038  
                                    __pbssBANK0 00D2                                      __pbssBANK1 0100  
                                 _eusart1TxTail 003B               _EUSART1_TxDefaultInterruptHandler 0030  
               ??_EUSART1_SetRxInterruptHandler 0022                                 __CFG_PLLCFG$OFF 000000  
                                     ?_ReadLine 00C0                 __end_of_EUSART1_SetErrorHandler 12BE  
                            __CFG_CCP2MX$PORTC1 000000                                ??_FVR_Initialize 0020  
                                    ??_TMR2_ISR 0018                              __CFG_CCP3MX$PORTB5 000000  
                         __end_of_UpdateDisplay 0F08                                         _ADC_ISR 12E0  
                                       ?_printf 00B8                         __size_of_ADC_Initialize 0018  
                                       ?_strcmp 0020                                         ?_strcpy 0180  
                                       ?_strlen 0020          __end_of_EUSART1_SetFramingErrorHandler 12B4  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 12AA  
                                _TimerInterrupt 1222                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 01F8  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                      UpdateDisplay@secondDigit 0006                                      ??_ReadLine 00C2  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                  UpdateTemprature@roundingTest 0017                                         __Lparam 0000  
                    ??_TMR2_SetInterruptHandler 0022                                         ___aodiv 04DC  
                                       ___aomod 0750                                         ___lbdiv 0F80  
                                       ___lbmod 110C                             __size_of_SetDisplay 002C  
                                       ___lldiv 0B08                                         ___llmod 0C6C  
                                       ___lwdiv 0DE2                                         ___lwmod 0E84  
                                     ?_vfprintf 00B0                             _EUSART1_is_rx_ready 1266  
                                       __pcinit 0D32                          __end_of_TimerInterrupt 123C  
                                       __ramtop 1000                             _EUSART1_is_tx_ready 1274  
                                       __ptext0 0626                                         __ptext1 0FBA  
                                       __ptext2 0CD2                                         __ptext3 11C8  
                                       __ptext4 11E6                                         __ptext5 1282  
                                       __ptext6 108A                                         __ptext7 1254  
                                       __ptext8 12DC                                         __ptext9 12C8  
                               __size_of_printf 0028                                 __size_of_strcmp 0060  
                               __size_of_strcpy 0036                                 __size_of_strlen 002A  
                         _OSCILLATOR_Initialize 1254                                       _T2CONbits 000FBA  
                                  __size_of_abs 0034                                    __size_of_pad 009C  
                            _EUSART1_Initialize 0B8A                        ??_PIN_MANAGER_Initialize 0020  
                 ??_EUSART1_DefaultErrorHandler 0001                                   ReadLine@index 00CF  
                    __size_of_SYSTEM_Initialize 001E                            end_of_initialization 0D80  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                     __size_of_UpdateTemprature 00D8                            ?_EUSART1_is_tx_ready 0001  
                                       fputc@fp 0062                     _EUSART1_OverrunErrorHandler 002A  
                                       fputs@fp 006B                                 ___lldiv@divisor 0005  
         __end_of_EUSART1_SetRxInterruptHandler 12A0          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 1296                                 ___lldiv@counter 000D  
                             __end_of_vfpfcnvrt 04DC                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 003C  
                                    ??_vfprintf 0024                            ??_EUSART1_Initialize 0022  
                                       strcmp@l 0020                                         strcmp@r 0022  
                                       strcpy@d 0186                                         strlen@a 0022  
                                       strcpy@s 0184                                         strlen@s 0020  
                               ?_TimerInterrupt 0001                                ___lbmod@dividend 0002  
                         __end_of_displayNumber FEFF                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0020                           ??_EUSART1_is_rx_ready 0020  
                         ??_EUSART1_is_tx_ready 0020                                     ___lbmod@rem 0004  
                                  _EUSART1_Read 0F44            __size_of_EUSART1_DefaultErrorHandler 0006  
                            main@actionSelector 0188                    __end_of_INTERRUPT_Initialize 12E0  
          __end_of_TMR2_DefaultInterruptHandler 12E8           __size_of_TMR2_DefaultInterruptHandler 0002  
                  _TMR2_DefaultInterruptHandler 12E6                                     vfpfcnvrt@ap 00A3  
                                   vfpfcnvrt@fp 009F                                     vfpfcnvrt@ll 00A7  
                                 __pidataCOMRAM 12E4                               __size_of_TMR2_ISR 0020  
                                _ADC_Initialize 123C                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 1188                                  __end_of_strcmp 0D32  
                                __end_of_strcpy 0FF0                                  __end_of_strlen 110C  
                           start_initialization 0D32                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 105A                                    ??_SetDisplay 0002  
                                   __end_of_pad 09EA   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
 EUSART1_SetTxInterruptHandler@interruptHandler 0020                                     putch@txData 0021  
                       _updateTempratureCounter 003F                           __end_of_EUSART1_Write 1026  
                               ___llmod@divisor 0005                                 ___llmod@counter 0009  
                             __size_of_ReadLine 008C                                     vfprintf@fmt 00B2  
                         _EUSART1_RxDataHandler 11A8                  ?_EUSART1_SetRxInterruptHandler 0020  
                        __end_of_ADC_Initialize 1254                                     __pdataBANK0 00FE  
                            __end_of_SetDisplay 10E2                                        ?_ADC_ISR 0001  
                 ?_TMR2_DefaultInterruptHandler 0001                                        ??_printf 0024  
                          SetDisplay@firstDigit 0001                                        ??_strcmp 0060  
                                      ??_strcpy 0024                                        ??_strlen 0022  
                                _eusart1RxCount 0037                          __size_of_TMR2_CallBack 001E  
                                   __pbssCOMRAM 0024               _EUSART1_RxDefaultInterruptHandler 002E  
                 __size_of_EUSART1_Transmit_ISR 002A                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0180                                ___aodiv@dividend 0060  
                       UpdateDisplay@firstDigit 0005                        __size_of_TMR2_Initialize 001E  
                           UpdateTemprature@sum 0012                                _UpdateTemprature 0876  
               ??_EUSART1_SetTxInterruptHandler 0022                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                    __size_of_EUSART1_Receive_ISR 0092  
                              ___lwdiv@dividend 0001                          _PIN_MANAGER_Initialize 108A  
                                     _dtoa$1176 008D                                       __pintcode 0008  
                                 __pmediumconst FEEE                                        ?___aodiv 0060  
                                      ?___aomod 0060                                        ?___lbdiv 0001  
                              ___aodiv@quotient 0072                                        ?___lbmod 0001  
                                      ?___lldiv 0001                                        ?___llmod 0001  
                                      ?___lwdiv 0001                                        ?___lwmod 0001  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 0018  
                              __CFG_PRICLKEN$ON 000000                               __size_of_vfprintf 0058  
                                      _BAUDCON1 000FB8      __end_of_EUSART1_DefaultOverrunErrorHandler 12D6  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0006            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 12D0  
                          _EUSART1_ErrorHandler 0028                         _EUSART1_SetErrorHandler 12B4  
                              ___lwdiv@quotient 0005                                  __size_of_fputc 006E  
                                __size_of_fputs 003C                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 12DC                          __size_of_UpdateDisplay 0042  
       EUSART1_SetErrorHandler@interruptHandler 0020                                        _LATCbits 000F8B  
                                 _TMR2_CallBack 1204                                        _PIE1bits 000F9D  
                                      i2u211_48 0A64                                        i2u220_48 005A  
           __size_of_INTERRUPT_InterruptManager 0092                                        i2u207_48 0A12  
                                      i2u160_40 0B3A                                        i2u207_49 0A24  
                                      i2u209_48 0A3C                                        i2u170_40 0E04  
                                      i2u217_48 0044                                        i2u209_49 0A4E  
                                      i2u163_40 0F9C                                        i2u173_40 0E9E  
                                      i2u167_40 0C8E                                        _PIR1bits 000F9E  
                                      i2u194_40 119A                                        i2u189_48 1210  
                        ?_EUSART1_RxDataHandler 0001                                ??_TimerInterrupt 0018  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                      _TMR2_ISR 1188                                        _VREFCON0 000F42  
                                     _vfpfcnvrt 02E4                                __size_of_ADC_ISR 0004  
                                    _ADCON0bits 000FC2                         __size_of_FVR_Initialize 0008  
                ??_TMR2_DefaultInterruptHandler 0001               __size_of_TMR2_SetInterruptHandler 000A  
                     ?_TMR2_SetInterruptHandler 0020                                      vfpfcnvrt@c 00AF  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                                      _ReadLine 0A7C                               ??_TMR2_Initialize 0022  
                         EUSART1_Read@readValue 0020                                  ?_TMR2_CallBack 0001  
         __end_of_EUSART1_SetTxInterruptHandler 1296          __size_of_EUSART1_SetTxInterruptHandler 000A  
                 _EUSART1_SetTxInterruptHandler 128C                                        __Hrparam 0000  
                                    vfprintf@ap 00B4                                        __Lrparam 0000  
                                    vfprintf@fp 00B0                               _ADC_GetConversion 105A  
                            __CFG_BOREN$SBORDIS 000000                               __CFG_P2BMX$PORTB5 000000  
                       ??_OSCILLATOR_Initialize 0020                              ?_ADC_GetConversion 0001  
                              __size_of___aodiv 014A                                __size_of___aomod 0126  
                              __size_of___lbdiv 003A                                __size_of___lbmod 002A  
                              __size_of___lldiv 0082                                __size_of___llmod 0066  
                   __size_of_EUSART1_Initialize 0074                                      ?_vfpfcnvrt 009F  
                              __size_of___lwdiv 0052                                __size_of___lwmod 0042  
                                 _UpdateDisplay 0EC6                                 ___aodiv@divisor 0068  
                               ___aodiv@counter 0070                     UpdateTemprature@temp_offset 0010  
                     ??_EUSART1_SetErrorHandler 0022             __end_of_EUSART1_DefaultErrorHandler 12DC  
                   _EUSART1_DefaultErrorHandler 12D6                             ??_ADC_GetConversion 0003  
                   __end_of_EUSART1_is_rx_ready 1274                     __end_of_EUSART1_is_tx_ready 1282  
                               ___lwdiv@divisor 0003                                 ___lwdiv@counter 0007  
                                      __ptext10 0B8A                                        __ptext11 128C  
                                      __ptext20 02E4                                        __ptext12 1296  
                                      __ptext21 009E                                        __ptext13 12A0  
                                      __ptext30 12BE                                        __ptext22 1026  
                                      __ptext14 12AA                                        __ptext31 0FF0  
                                      __ptext23 0750                                        __ptext15 12B4  
                                      __ptext40 0876                                        __ptext32 1266  
                                      __ptext24 04DC                                        __ptext16 123C  
                                      __ptext41 0E84                                        __ptext33 0F44  
                                      __ptext25 0E34                                        __ptext17 0A7C  
                                      __ptext50 1136                                        __ptext42 0DE2  
                                      __ptext34 1274                                        __ptext26 094E  
                                      __ptext18 1160                                        __ptext51 09EA  
                                      __ptext43 0C6C                                        __ptext27 10E2  
                                      __ptext19 0D8A                                        __ptext52 12D0  
                                      __ptext44 0B08                                        __ptext36 1188  
                                      __ptext28 0F08                                        __ptext53 12E8  
                                      __ptext45 105A                                        __ptext37 1204  
                                      __ptext29 0BFE                                        __ptext54 12D6  
                                      __ptext46 0EC6                                        __ptext38 12E6  
                                      __ptext55 11A8                                        __ptext47 110C  
                                      __ptext39 1222                                        __ptext56 12E0  
                                      __ptext48 0F80                                        __ptext57 0000  
                                      __ptext49 10B6                                      strcpy@dest 0180  
                                 __size_of_ctoa 0050                                   __size_of_main 012A  
                                 __size_of_dtoa 0246                       __end_of_ADC_GetConversion 108A  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                                        int$flags 0040  
                                      _vfprintf 0D8A              __end_of_INTERRUPT_InterruptManager 009A  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00B8  
                                ?_UpdateDisplay 0001                        __end_of_UpdateTemprature 094E  
                   _EUSART1_FramingErrorHandler 002C                             _EUSART1_Receive_ISR 09EA  
                              ___aomod@dividend 0060                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 0020                               UpdateTemprature@i 0016  
                                      intlevel2 0000                                 ??_TMR2_CallBack 0018  
                                  _numberSystem 003E                            ?_EUSART1_Receive_ISR 0001  
                              ___lwmod@dividend 0001                                    _VREFCON0bits 000F42  
                              ___lldiv@dividend 0001                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 12AA         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 12A0                                       strcpy@src 0182  
                                    _RCSTA1bits 000FAB                    __end_of_EUSART1_Transmit_ISR 1160  
                              ??_ADC_Initialize 0020                                        printf@ap 00BE  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                  ?_EUSART1_SetTxInterruptHandler 0020  
                               ___aomod@divisor 0068                                     ??_vfpfcnvrt 00A5  
                               ___aomod@counter 0020                          __size_of_EUSART1_Write 0036  
                            _eusart1RxLastError 0036                                  _FVR_Initialize 12C8  
                               SetDisplay@digit 0002                                     _temperature 00FE  
                              ___lldiv@quotient 0009                                 ___lwmod@divisor 0003  
                         TMR2_ISR@CountCallBack 0032                                 ___lwmod@counter 0005  
                             __CFG_T3CMX$PORTC0 000000                                   _displayChoice 003D  
                                 _displayNumber FEEF                                    ___aodiv@sign 0071  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 10B6  
                             __CFG_FOSC$INTIO67 000000                           _TMR2_InterruptHandler 0034  
                       ??_EUSART1_RxDataHandler 0001                      __size_of_ADC_GetConversion 0030  
                                  ___aomod@sign 0021  
